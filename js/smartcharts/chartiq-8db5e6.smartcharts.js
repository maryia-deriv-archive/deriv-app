(window["webpackJsonpsmartcharts"] = window["webpackJsonpsmartcharts"] || []).push([["chartiq"],{

/***/ "./chartiq/production/index.js":
/*!*************************************!*\
  !*** ./chartiq/production/index.js ***!
  \*************************************/
/*! exports provided: CIQ, SplinePlotter, timezoneJS, $$, $$$, createEngine, customCharts, drawing, easeMachine, equations, i18n, interaction, markers, market, movement, nameValueStore, quoteFeed, series, share, span, storage, studies, symbolLookupBase, theme, timezone, touch, visualization, medianPrice, momentum, priceRelative, vwap, zigzag, aggregations, drawingAdvanced, equationsAdvanced, highPerformanceMarkers, renderersAdvanced, accumulationDistribution, adx, alligator, aroon, atr, awesomeOscillator, balanceOfPower, bollinger, cci, centerOfGravity, chaikin, chande, choppiness, comparisonStudies, coppock, darvasBox, detrended, disparity, easeOfMovement, ehlerFisher, elder, fractalChaos, highLowStudies, ichimoku, intradayMomentum, keltner, klinger, linearRegression, macd, massIndex, moneyFlow, movingAverages, parabolicSAR, pivotPoints, prettyGoodOscillator, priceMomentumOscillator, priceVolumeOscillator, primeNumber, pring, projectedVolume, psychologicalLine, qstick, rainbow, randomWalk, relativeVigor, rsi, schaffTrendCycle, shinohara, stochastics, supertrend, swingIndex, trendIntensity, trix, twiggsMoneyFlow, typicalPrice, ulcerIndex, ultimateOscillator, valuationLines, volatilityIndex, volumeProfile, volumeStudies, vortex, williamsMFI, animation, continuousZoom, outliers, plotComplementer, extendedHours, fullScreen, inactivityTimer, rangeSlider, shortcuts, tableView, tooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/chartiq.js */ "./chartiq/production/js/chartiq.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CIQ", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SplinePlotter", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["SplinePlotter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timezoneJS", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["timezoneJS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "$$", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["$$"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "$$$", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["$$$"]; });

/* harmony import */ var _js_standard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/standard.js */ "./chartiq/production/js/standard.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEngine", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["createEngine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "customCharts", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["customCharts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawing", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["drawing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeMachine", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["easeMachine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equations", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["equations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "i18n", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["i18n"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interaction", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["interaction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "markers", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["markers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "market", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["market"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "movement", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["movement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nameValueStore", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["nameValueStore"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quoteFeed", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["quoteFeed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "series", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["series"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "share", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["share"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "span", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["span"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "storage", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["storage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "studies", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["studies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolLookupBase", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["symbolLookupBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "theme", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["theme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timezone", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["timezone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["touch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "visualization", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["visualization"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "medianPrice", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["medianPrice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "momentum", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["momentum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "priceRelative", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["priceRelative"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vwap", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["vwap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zigzag", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_1__["zigzag"]; });

/* harmony import */ var _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/advanced.js */ "./chartiq/production/js/advanced.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "aggregations", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["aggregations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawingAdvanced", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["drawingAdvanced"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "equationsAdvanced", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["equationsAdvanced"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "highPerformanceMarkers", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["highPerformanceMarkers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderersAdvanced", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["renderersAdvanced"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accumulationDistribution", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["accumulationDistribution"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "adx", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["adx"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "alligator", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["alligator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "aroon", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["aroon"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "atr", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["atr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "awesomeOscillator", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["awesomeOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "balanceOfPower", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["balanceOfPower"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bollinger", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["bollinger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cci", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["cci"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "centerOfGravity", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["centerOfGravity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chaikin", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["chaikin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chande", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["chande"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "choppiness", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["choppiness"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "comparisonStudies", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["comparisonStudies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "coppock", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["coppock"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "darvasBox", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["darvasBox"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detrended", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["detrended"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disparity", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["disparity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeOfMovement", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["easeOfMovement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ehlerFisher", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["ehlerFisher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elder", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["elder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fractalChaos", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["fractalChaos"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "highLowStudies", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["highLowStudies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ichimoku", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["ichimoku"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intradayMomentum", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["intradayMomentum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keltner", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["keltner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "klinger", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["klinger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linearRegression", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["linearRegression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "macd", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["macd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "massIndex", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["massIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "moneyFlow", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["moneyFlow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "movingAverages", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["movingAverages"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parabolicSAR", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["parabolicSAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pivotPoints", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["pivotPoints"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prettyGoodOscillator", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["prettyGoodOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "priceMomentumOscillator", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["priceMomentumOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "priceVolumeOscillator", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["priceVolumeOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "primeNumber", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["primeNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pring", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["pring"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projectedVolume", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["projectedVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "psychologicalLine", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["psychologicalLine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "qstick", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["qstick"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rainbow", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["rainbow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomWalk", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["randomWalk"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "relativeVigor", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["relativeVigor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rsi", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["rsi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schaffTrendCycle", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["schaffTrendCycle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shinohara", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["shinohara"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stochastics", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["stochastics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "supertrend", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["supertrend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "swingIndex", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["swingIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trendIntensity", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["trendIntensity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trix", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["trix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "twiggsMoneyFlow", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["twiggsMoneyFlow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typicalPrice", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["typicalPrice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ulcerIndex", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["ulcerIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ultimateOscillator", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["ultimateOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "valuationLines", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["valuationLines"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "volatilityIndex", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["volatilityIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "volumeProfile", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["volumeProfile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "volumeStudies", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["volumeStudies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vortex", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["vortex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "williamsMFI", function() { return _js_advanced_js__WEBPACK_IMPORTED_MODULE_2__["williamsMFI"]; });

/* harmony import */ var _js_deprecated_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/deprecated.js */ "./chartiq/production/js/deprecated.js");
/* empty/unused harmony star reexport *//* harmony import */ var _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/addOns.js */ "./chartiq/production/js/addOns.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animation", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "continuousZoom", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["continuousZoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "outliers", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["outliers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "plotComplementer", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["plotComplementer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extendedHours", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["extendedHours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fullScreen", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["fullScreen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inactivityTimer", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["inactivityTimer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeSlider", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["rangeSlider"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shortcuts", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["shortcuts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tableView", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["tableView"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tooltip", function() { return _js_addOns_js__WEBPACK_IMPORTED_MODULE_4__["tooltip"]; });







/***/ }),

/***/ "./chartiq/production/js/addOns.js":
/*!*****************************************!*\
  !*** ./chartiq/production/js/addOns.js ***!
  \*****************************************/
/*! exports provided: animation, continuousZoom, outliers, plotComplementer, extendedHours, fullScreen, inactivityTimer, rangeSlider, shortcuts, tableView, tooltip, CIQ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animation", function() { return __js_addons_advanced_animation_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "continuousZoom", function() { return __js_addons_advanced_continuousZoom_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outliers", function() { return __js_addons_advanced_outliers_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plotComplementer", function() { return __js_addons_advanced_plotComplementer_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendedHours", function() { return __js_addons_standard_extendedHours_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fullScreen", function() { return __js_addons_standard_fullScreen_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inactivityTimer", function() { return __js_addons_standard_inactivityTimer_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeSlider", function() { return __js_addons_standard_rangeSlider_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shortcuts", function() { return __js_addons_standard_shortcuts_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tableView", function() { return __js_addons_standard_tableView_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltip", function() { return __js_addons_standard_tooltip_; });
/* harmony import */ var _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/chartiq.js */ "./chartiq/production/js/chartiq.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CIQ", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]; });

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 *	8.2.0
 *	Generation date: 2021-03-19T19:54:09.125Z
 *	Client name: deriv limited
 *	Package Type: Technical Analysis 8.2
 *	License type: annual
 *	Expiration date: "2022/04/01"
 *	Domain lock: ["127.0.0.1","localhost","binary.com","binary.sx","binary.me","binary.bot","deriv.com","deriv.app","deriv.me"]
 *	iFrame lock: true
 */

/***********************************************************
 * Copyright by ChartIQ, Inc.
 * Licensed under the ChartIQ, Inc. Developer License Agreement https://www.chartiq.com/developer-license-agreement
*************************************************************/

/*************************************** DO NOT MAKE CHANGES TO THIS LIBRARY FILE!! **************************************/

/* If you wish to overwrite default functionality, create a separate file with a copy of the methods you are overwriting */

/* and load that file right after the library has been loaded, but before the chart engine is instantiated.              */

/* Directly modifying library files will prevent upgrades and the ability for ChartIQ to support your solution.          */

/*************************************************************************************************************************/

/* eslint-disable no-extra-parens */


var __js_addons_advanced_animation_ = function __js_addons_advanced_animation_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Add-On that animates the chart.
   *
   * Requires *addOns.js*.
   *
   * The chart is animated in three ways:
   * 1.  The current price pulsates
   * 2.  The current price appears to move smoothly from the previous price
   * 3.  The chart's y-axis smoothly expands/contracts when a new high or low is reached
   *
   * The following chart types are supported: line, mountain, baseline_delta.
   *
   * Chart aggregations such as Kagi, Renko, Range Bars, etc. are not supported.
   *
   * **Animation displays more gracefully when updates are sent into the chart one at a time using {@link CIQ.ChartEngine#updateChartData}
   * instead of in batches using a [QuoteFeed]{@link CIQ.ChartEngine#attachQuoteFeed}. Sending data in batches will produce a ‘jumping’ effect.**
   *
   * By default, there will be a flashing beacon created using a canvas circle. If instead you want to use a custom animation beacon, you will be able to extend the functionality yourself as follows:
   * - In js/addOns.js, at the bottom of the CIQ.Animation function, there is an stx.append("draw") function.
   * - Make a copy of this function so you can override the behavior.
   * - In there you will see it determine var x and y, which are the coordinates for the center of the beacon.
   * - At the bottom of this append function, we draw the beacon by using the Canvas arc() function to draw a circle and then fill() to make the circle solid.
   * - You can replace  the canvas circle with an image using [CanvasRenderingContext2D.drawImage()](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D#Drawing_images) .
   * - Example:
   *
   *   ```
   *   var image = document.getElementById('beacon'); // include a hidden image on your HTML
   *   context.drawImage(image, x-10, y-10, 20, 20); // add the image on the canvas. Offset the x and y values by the radius of the beacon.
   *   ```
   *
   * Animation Example <iframe width="800" height="500" scrolling="no" seamless="seamless" align="top" style="float:top" src="https://jsfiddle.net/chartiq/6fqw652z/embedded/result,js,html/" allowfullscreen="allowfullscreen" frameborder="1"></iframe>
   *
   * You can disable animation after each different [chart type is activated]{@link CIQ.ChartEngine#setChartType} by calling:
   * ```
   * stxx.mainSeriesRenderer.supportsAnimation=false;
   * ```
   * Keep in mind that changing to a different chart type, may once again enable animation. You can override this by [adding an event listener]{@link CIQ.ChartEngine#addEventListener} on [layout changes]{@link CIQ.ChartEngine~layoutEventListener}.
   *
   * @param {object} config The constructor parameters
   * @param {CIQ.ChartEngine} config.stx The chart object
   * @param {object} [config.animationParameters] Configuration parameters
   * @param {boolean} [config.animationParameters.stayPut=false] Set to true for last tick to stay in position it was scrolled and have rest of the chart move backwards as new ticks are added instead of having new ticks advance forward and leave the rest of the chart in place.
   * @param {number} [config.animationParameters.ticksFromEdgeOfScreen=5] Number of ticks from the right edge the chart should stop moving forward so the last tick never goes off screen (only applicable if stayPut=false)
   * @param {number} [config.animationParameters.granularity=1000000] Set to a value that will give enough granularity for the animation.  The larger the number the smaller the price jump between frames, which is good for charts that need a very slow smooth animation either because the price jumps between ticks are very small, or because the animation was set up to run over a large number of frames when instantiating the CIQ.EaseMachine.
   * @param {number} [config.animationParameters.tension=null] Splining tension for smooth curves around data points (range 0-1).
   * @param {CIQ.EaseMachine} config.easeMachine Override the default easeMachine.  Default is `new CIQ.EaseMachine(Math.easeOutCubic, 1000);`
   * @constructor
   * @name  CIQ.Animation
   * @since
   * - 3.0.0 Now part of *addOns.js*. Previously provided as a standalone *animation.js* file.
   * - 4.0.0 Beacon only flashes for line charts. On candles or bars, it is suppressed as it produces an unnatural effect.
   * - 7.0.2 Now takes one configuration object as its constructor. Must have a reference to a chart engine.
   * @example
   * 	new CIQ.Animation({stx: stxx, animationParameters: {tension:0.3}});  //Default animation with splining tension of 0.3
   *
   */

  CIQ.Animation = CIQ.Animation || function (config) {
    if (!config) throw new Error("Invalid constructor arguments.");
    var stx, animationParameters, easeMachine;

    if (config instanceof CIQ.ChartEngine) {
      // legacy constructor
      stx = arguments[0];
      animationParameters = arguments[1];
      easeMachine = arguments[2];
    } else {
      stx = config.stx;
      animationParameters = config.animationParameters;
      easeMachine = config.easeMachine;
    }

    if (!stx) return console.warn("No CIQ.ChartEngine provided. Cannot properly create CIQ.Animation instance");
    var params = {
      stayPut: false,
      ticksFromEdgeOfScreen: 5,
      granularity: 1000000
    };
    animationParameters = CIQ.extend(params, animationParameters);
    if (params.tension) stx.chart.tension = animationParameters.tension;
    stx.tickAnimator = easeMachine || new CIQ.EaseMachine(Math.easeOutCubic, 1000);
    var scrollAnimator = new CIQ.EaseMachine(Math.easeInOutCubic, 1000);
    var flashingColors = ["#0298d3", "#19bcfc", "#5dcffc", "#9ee3ff"];
    var flashingColorIndex = 0;
    var flashingColorThrottle = 20;
    var flashingColorThrottleCounter = 0;
    var filterSession = false;
    var nextBoundary = null;

    function initMarketSessionFlags() {
      filterSession = false;
      nextBoundary = null;
    }

    stx.addEventListener(["symbolChange", "layout"], function (obj) {
      initMarketSessionFlags();
    });
    stx.prepend("updateCurrentMarketData", function (data, chart, symbol, params) {
      if (!chart) chart = this.chart;

      if (params && params.fromTrade && (chart.closePendingAnimation || chart.closePendingAnimation === 0)) {
        params.finalClose = chart.closePendingAnimation;
      }
    });
    stx.prepend("updateChartData", function (appendQuotes, chart, params) {
      var self = this;

      if (!chart) {
        chart = self.chart;
      }

      if (!chart || !chart.defaultChartStyleConfig || chart.defaultChartStyleConfig == "none") return;

      if (params !== undefined) {
        if (params.animationEntry || params.secondarySeries) return;
      }

      if (!chart.dataSegment) return;

      function completeLastBar(record) {
        if (!chart.masterData) return;

        for (var md = chart.masterData.length - 1; md >= 0; md--) {
          var bar = chart.masterData[md];

          if (bar.Close || bar.Close === 0) {
            bar.Close = record.Close;
            if (record.LastSize) bar.LastSize = record.LastSize;
            if (record.LastTime) bar.LastTime = record.LastTime;
            self.updateCurrentMarketData({
              Close: bar.Close,
              DT: bar.DT,
              LastSize: bar.LastSize,
              LastTime: bar.LastTime
            });
            self.createDataSet(null, null, {
              appending: true
            });
            return;
          }
        }
      }

      function unanimateScroll() {
        if (chart.animatingHorizontalScroll) {
          chart.animatingHorizontalScroll = false;
          self.micropixels = self.nextMicroPixels = self.previousMicroPixels; // <-- Reset self.nextMicroPixels here

          chart.lastTickOffset = 0;
        }

        if (chart.closePendingAnimation !== null) {
          var close = chart.closePendingAnimation;
          chart.closePendingAnimation = null;
          completeLastBar({
            Close: close
          });
        }
      }

      var tickAnimator = self.tickAnimator; // These chart types are the only types supported by animation

      var supportedChartType = this.mainSeriesRenderer && this.mainSeriesRenderer.supportsAnimation;

      if (supportedChartType) {
        if (!tickAnimator) {
          console.warn("Animation plug-in can not run because the tickAnimator has not been declared. See instructions in animation.js");
          return;
        } // If symbol changes then reset all of our variables


        if (this.prevSymbol != chart.symbol) {
          this.prevQuote = 0;
          chart.closePendingAnimation = null;
          this.prevSymbol = chart.symbol;
        }

        unanimateScroll();
        tickAnimator.stop();

        if (appendQuotes.length > 2) {
          return;
        }
      }

      var newParams = CIQ.clone(params);
      if (!newParams) newParams = {};
      newParams.animationEntry = true;
      newParams.bypassGovernor = true;
      newParams.noCreateDataSet = false;
      newParams.appending = true; //newParams.allowReplaceOHL = true;

      newParams.firstLoop = true;
      var symbol = this.chart.symbol;
      var period = this.layout.periodicity;
      var interval = this.layout.interval;
      var timeUnit = this.layout.timeUnit;

      function cb(quote, prevQuote, chartJustAdvanced) {
        return function (newData) {
          var newClose = newData.Close;

          if (!chart.dataSet.length || symbol != chart.symbol || period != self.layout.periodicity || interval != self.layout.interval || timeUnit != self.layout.timeUnit) {
            //console.log ("---- STOP animating: Old",symbol,' New : ',chart.symbol, Date())
            tickAnimator.stop();
            unanimateScroll();
            return; // changed symbols mid animation
          }

          var q = CIQ.clone(quote);
          q.Adj_Close = null; // Don't use this, it will mess up our calculated close

          q.Close = Math.round(newClose * animationParameters.granularity) / animationParameters.granularity; //<<------ IMPORTANT! Use 1000000 for small price increments, otherwise animation will be in increments of .0001
          //q.Close = Math.round(newClose*chart.roundit)/chart.roundit; // to ensure decimal points don't go out too far for interim values

          if (chartJustAdvanced) {
            if (!q.Open && q.Open !== 0) q.Open = q.Close;
            if (!q.High && q.High !== 0) q.High = Math.max(q.Open, q.Close);
            if (!q.Low && q.Low !== 0) q.Low = Math.min(q.Open, q.Close);
          } else {
            if (quote.Close > prevQuote.High) q.High = q.Close;
            if (quote.Close < prevQuote.Low) q.Low = q.Close;
          }

          if (chart.animatingHorizontalScroll) {
            self.micropixels = newData.micropixels;
            chart.lastTickOffset = newData.lineOffset;
          }

          newParams.updateDataSegmentInPlace = !tickAnimator.hasCompleted; //console.log("animating: Old",symbol,' New : ',chart.symbol);

          var updateQuotes = [q]; // Don't include previous quote if tick mode. It will append, duplicating the quote

          if (chartJustAdvanced && self.layout.interval !== "tick") updateQuotes.unshift(prevQuote);
          self.updateChartData(updateQuotes, chart, newParams);
          newParams.firstLoop = false;

          if (tickAnimator.hasCompleted) {
            //console.log( 'animator has completed') ;
            //self.pendingScrollAdvance=false;
            //var possibleYAxisChange = chart.animatingHorizontalScroll;
            unanimateScroll();
            /*if (possibleYAxisChange) { // <---- Logic no longer necessary
             // After completion, one more draw for good measure in case our
             // displayed high and low have changed, which would trigger
             // the y-axis animation
             setTimeout(function(){
             self.draw();
             }, 0);
             }*/
          }
        };
      }

      if (supportedChartType) {
        var quote = appendQuotes[appendQuotes.length - 1];
        this.prevQuote = this.currentQuote(); // <---- prevQuote logic has been changed to prevent forward/back jitter when more than one tick comes in between animations

        var chartJustAdvanced = false; // When advancing, we need special logic to deal with the open

        var dontScroll = false;

        if (period == 1 && appendQuotes.length == 2) {
          // Don't do this if consolidating
          this.prevQuote = appendQuotes[0];
          var dataSetLength = chart.dataSet.length;
          completeLastBar(this.prevQuote);
          if (dataSetLength == chart.dataSet.length) dontScroll = true;
        }

        if (!quote || !quote.Close || !this.prevQuote || !this.prevQuote.Close) return false;

        if (this.extendedHours && chart.market.market_def) {
          // Filter out unwanted sessions
          var dtToFilter = quote.DT;

          if (CIQ.ChartEngine.isDailyInterval(interval)) {
            filterSession = !chart.market.isMarketDate(dtToFilter);
          } else {
            if (!nextBoundary || nextBoundary <= dtToFilter) {
              var session = chart.market.getSession(dtToFilter);
              filterSession = session !== "" && (!this.layout.marketSessions || !this.layout.marketSessions[session]);
              nextBoundary = chart.market[filterSession ? "getNextOpen" : "getNextClose"](dtToFilter);
            }
          }

          if (filterSession) {
            this.draw();
            return false;
          }
        }

        var barSpan = period;
        if (interval == "second" || timeUnit == "second") barSpan *= 1000;else if (interval == "minute" || timeUnit == "minute") barSpan *= 60000;
        if (!isNaN(interval)) barSpan *= interval;
        if (interval == "day" || timeUnit == "day") chartJustAdvanced = quote.DT.getDate() != this.prevQuote.DT.getDate();else if (interval == "week" || timeUnit == "week") chartJustAdvanced = quote.DT.getDate() >= this.prevQuote.DT.getDate() + 7;else if (interval == "month" || timeUnit == "month") chartJustAdvanced = quote.DT.getMonth() != this.prevQuote.DT.getMonth();else chartJustAdvanced = quote.DT.getTime() >= this.prevQuote.DT.getTime() + barSpan;
        var linearChart = !this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars;
        var beginningOffset = 0;

        if (chartJustAdvanced) {
          if (this.animations.zoom.hasCompleted) {
            var candleWidth = this.layout.candleWidth;

            if (chart.scroll <= chart.maxTicks) {
              while (this.micropixels > 0) {
                // If micropixels is larger than a candle then scroll back further
                chart.scroll++;
                this.micropixels -= candleWidth;
              }
            }

            if (chart.scroll <= chart.maxTicks) {
              this.previousMicroPixels = this.micropixels;
              this.nextMicroPixels = this.micropixels + candleWidth;
              beginningOffset = candleWidth * -1;

              if (chart.dataSegment.length < chart.maxTicks - animationParameters.ticksFromEdgeOfScreen && !animationParameters.stayPut) {
                this.nextMicroPixels = this.micropixels;
                chart.scroll++;
              }

              chart.animatingHorizontalScroll = linearChart; // When the chart advances we also animate the horizontal scroll by incrementing micropixels

              chart.previousDataSetLength = chart.dataSet.length;
            } else {
              if (!dontScroll) chart.scroll++;
            }
          } else {
            return false;
          }
        }

        chart.closePendingAnimation = quote.Close;
        var start = chartJustAdvanced && !linearChart ? quote.Open : this.prevQuote.Close;
        tickAnimator.run(cb(quote, CIQ.clone(this.prevQuote), chartJustAdvanced), {
          Close: start,
          micropixels: this.nextMicroPixels,
          lineOffset: beginningOffset
        }, {
          Close: quote.Close,
          micropixels: this.micropixels,
          lineOffset: 0
        });
        return true; // bypass default behavior in favor of animation
      }
    });
    stx.prepend("renderYAxis", function (chart) {
      if (this.grabbingScreen || !this.isHome()) return; // When display style doesn't support animation

      var supportedChartType = this.mainSeriesRenderer && this.mainSeriesRenderer.supportsAnimation;
      if (!supportedChartType) return;
      var panel = chart.panel;
      var yAxis = panel.yAxis;
      if (CIQ.Comparison && yAxis.priceFormatter == CIQ.Comparison.priceFormat) return; // too difficult to animate y-axis change when it changes on every tick due to percentage axis on comparison

      function closure(self) {
        return function (values) {
          chart.animatedLow = values.low;
          chart.animatedHigh = values.high;
          self.draw();
        };
      } // initialize prev values


      if (!chart.prevLowValue && chart.prevLowValue !== 0) {
        chart.prevLowValue = chart.animatedLow = chart.lowValue;
      }

      if (!chart.prevHighValue && chart.prevHighValue !== 0) {
        chart.prevHighValue = chart.animatedHigh = chart.highValue;
      } // check for a change, if so we will spin off an animation


      if (!scrollAnimator.running) chart.animatingVerticalScroll = false;

      if (chart.prevLowValue >= chart.lowValue && chart.prevHighValue <= chart.highValue) {
        if (chart.animatingVerticalScroll) {
          yAxis.highValue = chart.animatedHigh;
          yAxis.lowValue = chart.animatedLow;
        }

        return;
      }

      if (scrollAnimator.running) scrollAnimator.stop();
      if (!chart.lowValue && !chart.highValue) return; // chart just reset, don't animate yet

      var prevLow = chart.prevLowValue,
          prevHigh = chart.prevHighValue;
      chart.prevLowValue = chart.lowValue;
      chart.prevHighValue = chart.highValue;
      chart.animatingVerticalScroll = true;
      scrollAnimator.run(closure(this), {
        low: prevLow,
        high: prevHigh
      }, {
        low: chart.lowValue,
        high: chart.highValue
      });
      yAxis.lowValue = chart.animatedLow;
      yAxis.highValue = chart.animatedHigh;
    });
    /*stx.prepend("draw", function() {
    	if(this.chart.animatingVerticalScroll) {
    		this.renderYAxis(this.chart);
    		return true;
    	}
    });*/

    stx.append("draw", function () {
      if (filterSession) return;

      if (this.chart.dataSet && this.chart.dataSet.length && this.mainSeriesRenderer && this.mainSeriesRenderer.supportsAnimation) {
        if (flashingColorThrottleCounter % flashingColorThrottle === 0) {
          flashingColorIndex++;
          flashingColorThrottleCounter = 0;
        }

        flashingColorThrottleCounter++;
        var context = this.chart.context;
        var panel = this.chart.panel;
        var currentQuote = this.currentQuote();
        if (!currentQuote) return;
        var price = currentQuote.Close;
        var x = this.pixelFromTick(currentQuote.tick, this.chart);
        if (this.chart.lastTickOffset) x = x + this.chart.lastTickOffset;
        var y = this.pixelFromPrice(price, panel);

        if (this.chart.yAxis.left > x && this.chart.yAxis.top <= y && this.chart.yAxis.bottom >= y) {
          if (flashingColorIndex >= flashingColors.length) flashingColorIndex = 0;
          context.beginPath();
          context.moveTo(x, y);
          context.arc(x, y, 2 + flashingColorIndex * 1.07, 0, Math.PI * 2, false);
          context.fillStyle = flashingColors[flashingColorIndex];
          context.fill();
        }
      }
    });
  };
  /**
   * CIQ.EaseMachine interface placeholder to be augmented in *standard.js* with properties.
   *
   * @tsinterface CIQ~EaseMachine
   */

};

var __js_addons_advanced_continuousZoom_ = function __js_addons_advanced_continuousZoom_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Add-on that responds to the chart zoom action, changing periodicities as the number of ticks and/or candle width
   * hits a set boundary.
   *
   * Although this feature is available for all chart styles, it shows best on continuous renderings
   * such as lines and mountains vs. candles and bars. This is because some users may find the
   * changes in candle width that take place as the same range is displayed in a different
   * periodicity, inappropriate. The effect can be mitigated by increasing the number of boundaries
   * so periodicities change more often, preventing large candle width changes, and by using the
   * periodicity roll up feature instead of fetching new data from a quote feed. See examples.
   *
   * See {@link CIQ.ChartEngine#setPeriodicity} and {@link CIQ.ChartEngine#createDataSet}
   *
   * Requires *addOns.js*.
   *
   * The feature will not work without supplying at least one element within the periodicities array
   * and at least one property within the boundaries object.
   *
   * @param {object} params Configuration parameters.
   * @param {CIQ.ChartEngine} params.stx The chart object.
   * @param {array} params.periodicities Set this array with eligible periodicities in any order.
   * 		These will be the periodicities which will be used by the continuous zooming once a
   * 		boundary is hit. The periodicities are objects with `period`, `interval`, and optional
   * 		`timeUnit` properties (see {@link CIQ.ChartEngine#setPeriodicity}).
   * @param {object} params.boundaries Optional boundary cases to trigger the periodicity change.
   * 		Hitting a maximum boundary switches to the next larger periodicity; hitting a minimum
   * 		boundary switches to the next smaller periodicity.
   * @param {number} [params.boundaries.maxCandleWidth] Largest size of candle in pixels to display
   * 		before switching periodicity.
   * @param {number} [params.boundaries.minCandleWidth] Smallest size of candle in pixels to display
   * 		before switching periodicity.
   * @param {number} [params.boundaries.maxTicks] Most number of ticks to display before switching
   * 		periodicity.
   * @param {number} [params.boundaries.minTicks] Least number of ticks to display before switching
   * 		periodicity.
   *
   * @constructor
   * @name CIQ.ContinuousZoom
   * @since 7.0.0
   *
   * @example
   * new CIQ.ContinuousZoom({
   *     stx: stxx,
   *     periodicities: [
   *         { period:1, interval:"month" },
   *         { period:1, interval:"day" },
   *         { period:2, interval:30 },
   *         { period:1, interval:5 },
   *         { period:15, interval:1, timeUnit:"second" },
   *         { period:1, interval:1, timeUnit:"second" }
   *     ],
   *     boundaries: {
   *         maxCandleWidth: 100,
   *         minCandleWidth: 3,
   *         maxTicks: 500,
   *         minTicks: 10
   *     }
   * });
   *
   * @example
   * // Smother periodicity change by rolling daily into weekly and monthly.
   * // Also try reusing the same interval data and have the chart roll it instead of fetching new data.
   * stxx.dontRoll = false;
   * new CIQ.ContinuousZoom({
   *     stx: stxx,
   *     periodicities: [
   *         // Daily interval data
   *         {period:1, interval:"month"},
   *         {period:2, interval:"week"},
   *         {period:1, interval:"week"},
   *         {period:3, interval:"day"},
   *         {period:1, interval:"day"},
   *         // 30 minute interval data
   *         {period:16, interval:30},
   *         {period:8, interval:30},
   *         {period:4, interval:30},
   *         {period:2, interval:30},
   *         // one minute interval data
   *         {period:30, interval:1},
   *         {period:15, interval:1},
   *         {period:10, interval:1},
   *         {period:5, interval:1},
   *         {period:2, interval:1},
   *         {period:1, interval:1},
   *         // One second interval data
   *         {period:30,interval:1, timeUnit:"second"},
   *         {period:15,interval:1, timeUnit:"second"},
   *         {period:5, interval:1, timeUnit:"second"},
   *         {period:2, interval:1, timeUnit:"second"},
   *         {period:1, interval:1, timeUnit:"second"},
   *     ],
   *     boundaries: {
   *         maxCandleWidth: 15,
   *         minCandleWidth: 3
   *    }
   * });
   */

  CIQ.ContinuousZoom = CIQ.ContinuousZoom || function (params) {
    this.cssRequired = true;
    this.update(params);
    this.stx.continuousZoom = this; //Attaches SmartZoom button to HTML DOM inside .chartSize element

    this.addSmartZoomButton = function () {
      // Don't add a button if one already exists
      var smartZoomButton = this.stx.registerChartControl && this.stx.registerChartControl("stx-smart-zoom", "SmartZoom (Alt + 0)", function (self) {
        return function (e) {
          self.smartZoomToggle(e);
          e.stopPropagation();
        };
      }(this));

      if (smartZoomButton) {
        // Listen for a layout changed event and refresh the toggle state of the button
        this.stx.addEventListener("layout", function (event) {
          if (event.stx.layout.smartzoom === true) {
            smartZoomButton.classList.add("active");
          } else {
            smartZoomButton.classList.remove("active");
          }
        }); // Piggyback off of symbolImport event to detect smartzoom set to false from layout import

        this.stx.addEventListener("symbolImport", function (event) {
          if (event.stx.layout.smartzoom === false) smartZoomButton.classList.remove("active");
        });
      }
    }; //Click event handler for the Smart Zoom button. Sets smartzoom property of layout to its inverse


    this.smartZoomToggle = function (e) {
      this.smartZoomEnable(!this.stx.layout.smartzoom);
    }; //Sets smartzoom property of layout and notifies attached ChartEngine of change


    this.smartZoomEnable = function (state) {
      this.stx.layout.smartzoom = state;
      this.stx.changeOccurred("layout");
    }; // Add the SmartZoom button to chartControls


    this.addSmartZoomButton(); // Enable SmartZoom by default

    this.smartZoomEnable(true);
  };
  /**
   * Updates continuous zoom parameters
   * @param  {object} params Configuration parameters.  See constructor for details
   * @memberof CIQ.ContinuousZoom
   * @since 7.0.0
   * @private
   */


  CIQ.ContinuousZoom.prototype.update = function (params) {
    if (!params) params = {};
    this.stx = params.stx;
    this.periodicities = params.periodicities;
    this.boundaries = params.boundaries;
  };
  /**
   * Potentially performs a continuous zoom after a zoom event
   * @param  {boolean} [zoomOut] True for a zoomOut operation, otherwise zoomIn
   * @memberof CIQ.ContinuousZoom
   * @since 7.0.0
   * @private
   */


  CIQ.ContinuousZoom.prototype.execute = function (zoomOut) {
    // assign a weight to a periodicity setting, the higher the length, the higher the weight
    function valuate(periodicity) {
      var period = periodicity.period || periodicity.periodicity,
          interval = periodicity.interval,
          timeUnit = periodicity.timeUnit || "minute";

      if (isNaN(interval)) {
        timeUnit = interval;
        interval = 1;
      }

      switch (timeUnit) {
        case "month":
          interval *= 4.35;

        /* falls through */

        case "week":
          interval *= 7;

        /* falls through */

        case "day":
          interval *= 1440;

        /* falls through */

        case "minute":
          interval *= 60;

        /* falls through */

        case "second":
          break;

        case "millisecond":
          interval /= 1000;
          break;

        default:
          return null;
      }

      return period * interval;
    }

    if (!this.stx || !this.stx.layout.smartzoom) return;
    var periodicities = this.periodicities,
        boundaries = this.boundaries,
        stx = this.stx,
        layout = stx.layout,
        chart = stx.chart;
    if (!periodicities || !boundaries) return;

    if (!zoomOut && boundaries.maxCandleWidth && layout.candleWidth > boundaries.maxCandleWidth || zoomOut && boundaries.minCandleWidth && layout.candleWidth < boundaries.minCandleWidth || !zoomOut && boundaries.minTicks && chart.maxTicks < boundaries.minTicks || zoomOut && boundaries.maxTicks && chart.maxTicks > boundaries.maxTicks) {
      var next = {
        value: zoomOut ? Number.MAX_VALUE : 0
      };
      var myValue = valuate(layout);

      for (var p = 0; p < periodicities.length; p++) {
        var value = valuate(periodicities[p]);

        if (value > myValue && value < next.value && zoomOut || value < myValue && value > next.value && !zoomOut) {
          next = {
            value: value,
            periodicity: periodicities[p]
          };
        }
      }

      var newPeriodicity = next.periodicity;

      if (newPeriodicity) {
        stx.setRange({
          dtLeft: chart.xaxis[0].DT,
          dtRight: chart.xaxis[chart.xaxis.length - 1].DT,
          dontSaveRangeToLayout: true,
          periodicity: newPeriodicity
        });
      }
    }
  };
};

var __js_addons_advanced_outliers_ = function __js_addons_advanced_outliers_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Creates the outliers add-on which scales the y-axis to the main trend, hiding outlier
   * values. Markers are placed at the location of the outlier values enabling the user to
   * restore the full extent of the y-axis by selecting the markers.
   *
   * Requires *addOns.js*.
   *
   * ![Chart with hidden outliers](./img-Chart-with-Hidden-Outliers.png "Chart with hidden outliers")
   *
   * @param {object} params Configuration parameters.
   * @param {CIQ.ChartEngine} [params.stx] A reference to the chart object.
   * @param {number} [params.multiplier=3] Sets the threshold for outliers by multiplying the
   * 		normal data range. The default value hides only extreme outliers.
   * @param {Array} [params.altColors] An array of hexadecimal color values used to style
   * 		outlier markers when multiple y-axes share the same panel. Markers for the first
   * 		additional y-axis are styled with the value at index 0; markers for the second
   * 		additional y-axis, the value at index 1; and so forth. If not provided, a default
   * 		array of colors is assigned.
   * @param {string} [params.menuContextClass] A CSS class name used to query the menu DOM element
   * 		that contains the UI control for the outliers add-on. In a multi-chart document, the
   * 		add-on is available only on charts that have a menu DOM element with the value for
   * 		`menuContextClass` as a class attribute.
   *
   * @constructor
   * @name CIQ.Outliers
   * @since
   * - 7.5.0
   * - 8.0.0 Added `params.altColors` and `params.menuContextClass`.
   *
   * @example
   * new CIQ.Outliers({ stx: stxx });
   */

  CIQ.Outliers = CIQ.Outliers || function (params) {
    if (!params) params = {};

    if (!params.stx) {
      console.warn("The Outliers addon requires an stx parameter");
      return;
    } // Set default marker colors


    if (!Array.isArray(params.altColors)) {
      params.altColors = ["#323390", "#66308f", "#0073ba", "#f4932f", "#0056a4", "#00a99c", "#00a553", "#ea1d2c", "#e9088c", "#fff126", "#912a8e", "#ee652e", "#00afed", "#8ec648"];
    }

    this.stx = params.stx;
    this.stx.outliers = this;
    this.cssRequired = true;
    this.multiplier = params.multiplier || 3; // Default to 3 for extreme outliers

    this.altColors = params.altColors;
    this.axisData = {}; // Listen for a layout changed event and reset the markers

    this.stx.addEventListener("layout", function (event) {
      Object.keys(event.stx.outliers.axisData).forEach(function (key) {
        this.removeAllMarkers(this.axisData[key]);
        delete this.axisData[key];
      }.bind(event.stx.outliers));
    });
    /**
     * Checks for outlier values in `dataSet`, and adds outlier markers (data point markers
     * and axis markers) to `axis`.
     *
     * @param {Array} dataSet An array of objects of the form `{value: Number, quote: Object}`.
     * 		Each object contains a value and its associated quote. The value is checked to
     * 		determine whether it is an outlier of the data set. When checking more than one
     * 		value for a quote (such as an OHLC quote), each value is included in a separate
     * 		object; for example, `[{value: open, quote: quote}, {value: high, quote: quote},
     * 		{value: low, quote: quote}, {value: close, quote: quote}...]`.
     * @param {object} panel The panel where `dataSet` is rendered.
     * @param {object} axis The y-axis against which `dataSet` is rendered. **Note:** Charts
     * 		and panels can have multiple y-axes; each y-axis has its own set of outlier
     * 		markers based on the data rendered on the axis.
     * @return {Array} A tuple consisting of the outlier minimum and maximum &mdash; or trend
     * 		minimum and maximum, if no outliers are found &mdash; to be handled by the
     * 		{@link CIQ.ChartEngine#determineMinMax} method. See the return value of the
     * 		[find]{@link CIQ.Outliers#find} function for a description of outlier and trend
     * 		minimum and maximum.
     *
     * @alias processDataSet
     * @memberOf CIQ.Outliers.prototype
     * @since 8.0.0
     */

    this.processDataSet = function (dataSet, panel, axis) {
      if (!dataSet.length || dataSet.length <= 1) return false;
      var result = [0, 0]; // Min/Max axis values to return
      // Create an axis reference if one does not exist

      if (!this.axisData[axis.name]) {
        var markerColor = "";
        var axisDepth = -1; // Check for another axis using this panel

        Object.keys(this.axisData).forEach(function (key) {
          if (this.axisData[key].panel.name == panel.name) {
            axisDepth++;
          }
        }.bind(this));
        if (axisDepth > -1 && axisDepth < this.altColors.length) markerColor = this.altColors[axisDepth];
        this.axisData[axis.name] = {
          axis: axis,
          panel: panel,
          displayState: "none",
          isFlipped: false,
          originalZoom: axis.zoom,
          markerColor: markerColor,
          markers: {},
          axisMarkers: {}
        };
      }

      var currentAxis = this.axisData[axis.name]; // Attach the min/max values to the current axis data

      Object.assign(currentAxis, this.find(dataSet)); // Update/add necessary markers

      this.refreshMarkerArray(currentAxis); // Update marker display and labels

      this.refreshMarkers(currentAxis); // Return either trendMin or outlierMin based on the axis displayState

      if ((currentAxis.displayState === "low" || currentAxis.displayState === "all") && currentAxis.outlierMin !== null) result[0] = currentAxis.outlierMin;else result[0] = currentAxis.trendMin; // Return either trendMax or outlierMax based on the axis displayState

      if ((currentAxis.displayState === "high" || currentAxis.displayState === "all") && currentAxis.outlierMax !== null) result[1] = currentAxis.outlierMax;else result[1] = currentAxis.trendMax;
      return result;
    };
    /**
     * Finds the outliers contained in `dataSet`.
     *
     * **Note:** This function may be overridden to provide a custom algorithm for finding
     * outliers.
     *
     * @param {Array} dataSet An array of objects of the form `{value: Number, quote: Object}`.
     * 		Each object contains a value and its associated quote. The value is checked to
     * 		determine whether it is an outlier of the data set. When checking more than one
     * 		value for a quote (such as an OHLC quote), each value is included in a separate
     * 		object; for example, `[{value: open, quote: quote}, {value: high, quote: quote},
     * 		{value: low, quote: quote}, {value: close, quote: quote}...]`.
     * @return {object} An object of the form:
     * ```
     * {
     * 	// Minimum and maximum threshold values of dataSet to be considered an outlier.
     * 	minValue: null,
     * 	maxValue: null,
     * 	// Mininum and maximum values of dataSet that are not considered outliers.
     * 	// Will be the least and greatest values in dataSet if no outliers are found.
     * 	trendMin: null,
     * 	trendMax: null,
     * 	// Minimum and maximum values of dataSet that are considered outliers.
     * 	// Will remain null if no outliers are found.
     * 	outlierMin: null,
     * 	outlierMax: null,
     * 	// Array of individual outlier information for marker placement, in the format {DT:DateTime, value:Number, position:String}
     * 	// (position is either 'high' or 'low').
     * 	activeOutliers: []
     * }
     * ```
     *
     * @alias find
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added return value.
     */


    this.find = function (dataSet) {
      if (!dataSet.length || dataSet.length <= 0) return;

      var createMarkerPlaceholder = function createMarkerPlaceholder(data, position) {
        return {
          quote: data.quote,
          DT: data.quote.DT,
          value: data.value,
          position: position
        };
      }; // The minimum and maximum threshold values to be considered an outlier.


      var minValue = null;
      var maxValue = null; // min/max values of available data that are not considered outliers. Will be the least and greatest values in the available data if no outliers are found.

      var trendMin = null;
      var trendMax = null; // min/max values of available data that are considered outliers. Will remain null if no outlier is found.

      var outlierMin = null;
      var outlierMax = null; // Array of outlier information in the format
      // {DT:DateTime, value:Number, position:String}

      var activeOutliers = [];
      var dataSorted = dataSet.slice();
      dataSorted.sort(function (a, b) {
        return a.value - b.value;
      });
      var dataLength = dataSorted.length; // Outlier threshold values are defined as more than the interquartile range above the third quartile
      // or below the first quartile, of the sorted dataSet, multiplied by the value of the
      // stxx.outlierMultiplier property.

      var q1 = dataSorted[Math.floor(dataLength / 4)].value;
      var q3 = dataSorted[Math.floor(dataLength * (3 / 4))].value;
      var iqr = q3 - q1;
      minValue = q1 - iqr * this.multiplier;
      maxValue = q3 + iqr * this.multiplier; // Loop through the sorted data and find the outliers as well as the trend min/max

      for (var idx = 0; idx < dataLength; idx++) {
        // Attack the array from both ends
        var dataLow = dataSorted[idx];
        var dataHigh = dataSorted[dataLength - (idx + 1)]; // Find and mark outliers. Existing merkers will be refreshed in setMarker.

        if (dataLow.value <= minValue) activeOutliers.push(createMarkerPlaceholder(dataLow, "low"));
        if (dataHigh.value >= maxValue) activeOutliers.push(createMarkerPlaceholder(dataHigh, "high")); // Find the first low value that's less than or equal to outlier threshold min

        if (outlierMin === null && dataLow.value <= minValue) outlierMin = dataLow.value; // Find the first high value that's greater than or equal to outlier threshold max

        if (outlierMax === null && dataHigh.value >= maxValue) outlierMax = dataHigh.value; // Find the first low value that's greater than the outlier threshold min

        if (trendMin === null && dataLow.value > minValue) trendMin = dataLow.value; // Find the first high value that's less than the outlier threshold max

        if (trendMax === null && dataHigh.value < maxValue) trendMax = dataHigh.value; // No need to loop through the entire array. Once the trend min/max are found we're done.

        if (trendMin !== null && trendMax !== null) break;
      }

      return {
        minValue: minValue,
        maxValue: maxValue,
        trendMin: trendMin,
        trendMax: trendMax,
        outlierMin: outlierMin,
        outlierMax: outlierMax,
        activeOutliers: activeOutliers
      };
    };
    /**
     * Updates the freshness status of outlier markers belonging to `targetAxis`.
     *
     * Sets the status to fresh if the markers represent data points in the `activeOutliers`
     * list of `targetAxis` or a marker is an axis marker for high or low outliers and high or
     * low outliers exist. (See the return value of the [find]{@link CIQ.Outliers#find}
     * function for a description of the `activeOutliers` list.)
     *
     * Adds new markers to `targetAxis` for data points in the `activeOutliers` list not
     * already represented by a marker (see [markOutlier]{@link CIQ.Outliers#markOutlier}).
     * Adds new axis markers if the data set rendered on `targetAxis` contains high or low
     * outliers and the respective axis marker does not exist (see
     * [markAxis]{@link CIQ.Outliers#markAxis}).
     *
     * Sets the status of all other markers belonging to `targetAxis` to stale, or unfresh
     * (these markers are ultimately removed).
     *
     * @param {object} targetAxis The y-axis for which the markers are refreshed.
     * 		**Note:** Charts and panels can have multiple y-axes, each with its own array of
     * 		outlier markers.
     *
     * @alias refreshMarkerArray
     * @memberOf CIQ.Outliers.prototype
     * @since 8.0.0
     */


    this.refreshMarkerArray = function (targetAxis) {
      this.deprecateMarkers(targetAxis); // If a marker isn't refreshed below, it will be deleted in the next call

      var targetMarkers = targetAxis.markers;
      targetAxis.activeOutliers.forEach(function (outlier) {
        var quoteTime = outlier.DT.getTime().toString(); // Add a quote marker if there isn't one already

        if (!targetMarkers[quoteTime]) {
          targetMarkers[quoteTime] = {
            isFresh: true,
            type: "quote",
            value: outlier.value,
            marker: this.markOutlier(outlier, outlier.position, targetAxis)
          };
        } // Always refresh the status of the marker


        targetMarkers[quoteTime].isFresh = true;
      }.bind(this));

      if (targetAxis.outlierMax !== null) {
        // Add the high axis marker if there isn't one
        if (!targetMarkers.axisHigh) {
          targetMarkers.axisHigh = {
            isFresh: true,
            type: "axis",
            value: targetAxis.outlierMax,
            marker: this.markAxis("high", targetAxis)
          };
        } // Always refresh the status of the marker


        targetMarkers.axisHigh.isFresh = true;
      }

      if (targetAxis.outlierMin !== null) {
        // Add the low axis marker if there isn't one
        if (!targetMarkers.axisLow) {
          targetMarkers.axisLow = {
            isFresh: true,
            type: "axis",
            value: targetAxis.outlierMin,
            marker: this.markAxis("low", targetAxis)
          };
        } // Always refresh the status of the marker


        targetMarkers.axisLow.isFresh = true;
      }
    };
    /**
     * Sets the outlier display state, which determines whether to display outlier markers.
     *
     * @param {string} newState The intended display state; should be one of:
     * <ul>
     *		<li>"high" &mdash; Show high outliers; hide high outlier markers.</li>
     *		<li>"low" &mdash; Show low outliers; hide low outlier markers.</li>
     *		<li>"all" &mdash; Show high and low outliers; hide high and low outlier markers.</li>
     *		<li>"none" &mdash; Hide high and low outliers; show high and low outlier markers.</li>
     * </ul>
     * If none of the above is provided, "none" is assumed.
     * @param {object} targetAxis The y-axis on which the outlier state is set. **Note:** A
     * 		chart or panel can have multiple y-axes.
     *
     * @alias setDisplayState
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added `targetAxis` parameter.
     */


    this.setDisplayState = function (newState, targetAxis) {
      if (newState != "high" && newState != "low" && newState != "all") newState = "none";
      var displayState = newState; // Set the value of displayState to show the intended state, based on its existing state. This
      // allows the markers to toggle between states without concern for what is currently displayed.
      // For example: if the current display state is showing low outlier only, and the intent is to
      // now display high outliers as well, then the display state will change to 'all'.
      // This will toggle the high/low state off as well.

      if (targetAxis.displayState == "all" && newState == "high") displayState = "low";else if (targetAxis.displayState == "all" && newState == "low") displayState = "high";else if (targetAxis.displayState == "high" && newState == "low") displayState = "all";else if (targetAxis.displayState == "low" && newState == "high") displayState = "all";else if (targetAxis.displayState == newState) displayState = "none";
      targetAxis.displayState = displayState; // Reset the axis zoom state

      targetAxis.axis.zoom = targetAxis.originalZoom;
      this.refreshMarkers(targetAxis);
      this.stx.draw();
    };
    /**
     * Removes all markers from `targetAxis` that are no longer fresh; that is, markers that
     * do not represent data points in the current data set, or axis markers that are
     * irrelevant because high or low outliers no longer exist. Sets the status of all
     * remaining outlier markers to stale, or not fresh (the freshness status should
     * subsequently be reevaluated).
     *
     * @param {object} targetAxis The y-axis for which the markers are deprecated. **Note:**
     * 		A chart or panel can have multiple y-axes; each y-axis has its own outlier
     * 		markers based on the data rendered on the axis.
     *
     * @alias deprecateMarkers
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added `targetAxis` parameter.
     */


    this.deprecateMarkers = function (targetAxis) {
      var removeMarker = function removeMarker(marker) {
        if (marker.marker && !marker.isFresh) {
          if (marker.marker.remove) marker.marker.remove();
          marker.marker = null;
        } else {
          marker.isFresh = false;
        }
      }; // Handle the outlier markers


      Object.keys(targetAxis.markers).forEach(function (key) {
        removeMarker(this.markers[key]); // Remove the marker property if its marker has been removed

        if (!this.markers[key].marker) {
          delete this.markers[key];
        }
      }.bind(targetAxis));
    };
    /**
     * Removes all outlier markers from `targetAxis`, including data point markers and y-axis
     * markers.
     *
     * @param {object} targetAxis The y-axis from which the markers are removed. **Note:**
     * 		Charts and panels can have multiple y-axes, each with its own outlier markers.
     *
     * @alias removeAllMarkers
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added `targetAxis` parameter.
     */


    this.removeAllMarkers = function (targetAxis) {
      Object.keys(targetAxis.markers).forEach(function (key) {
        var targetMarker = targetAxis.markers[key].marker;

        if (targetMarker) {
          if (targetMarker.remove) targetMarker.remove();
          targetMarker = null;
        } // Remove the marker property if its marker has been removed


        if (!targetMarker) {
          delete targetAxis.markers[key];
        }
      });
    };
    /**
     * Shows or hides outlier markers based on the display state.
     *
     * See [setDisplayState]{@link CIQ.Outliers#setDisplayState}.
     *
     * @alias updateMarkerVisibility
     * @memberOf CIQ.Outliers.prototype
     * @since 7.5.0
     */


    this.updateMarkerVisibility = function () {
      Object.keys(this.markers).forEach(function (key) {
        if (this.displayState == "all" || this.markers[key].marker.node.classList.contains(this.displayState)) this.markers[key].marker.node.style.display = "none";else this.markers[key].marker.node.style.display = "block";
      }.bind(this));
    };
    /**
     * Updates the position of the axis outlier marker represented by `node`.
     *
     * @param {HTMLElement} node The axis marker to position.
     * @param {object} targetAxis The y-axis on which the axis marker is positioned.
     *
     * @alias refreshAxisMarkers
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added `targetAxis` parameter.
     */


    this.refreshAxisMarkers = function (node, targetAxis) {
      var isHigh = false;
      var positionClass = "low";

      if (node.classList.contains("high")) {
        isHigh = true;
        positionClass = "high";
      }

      var posTop = targetAxis.axis.top; // Set the low marker of reverse the value if the axis is flipped

      if (!targetAxis.isFlipped && !isHigh || targetAxis.isFlipped && isHigh) {
        posTop = targetAxis.axis.bottom - 50;
      } // Overlap the markers in the center for nano size because it's all or nothing at that size.


      if (node.classList.contains("nano")) {
        posTop = targetAxis.axis.top + targetAxis.axis.height / 2 - 22;
      }

      var xFormLeft = Math.floor(targetAxis.axis.left).toString() + "px";
      var xFormTop = Math.floor(posTop).toString() + "px"; // Use the vlaue property instead

      var labelPrice = isHigh ? targetAxis.outlierMax : targetAxis.outlierMin; // Set marker positioning relative to the y-axis

      node.style.transform = "translate(" + xFormLeft + ", " + xFormTop + ")";
      node.querySelector(".outlier-value").innerText = this.stx.formatYAxisPrice(labelPrice); // Apply .right class when axis is on the left to right position child elements

      if (xFormLeft === "0px") node.classList.add("right");else node.classList.remove("right");
    };
    /**
     * Updates the display styles of all outlier markers belonging to `targetAxis`, including
     * data point markers and axis markers. Shows the markers if outliers are hidden and the
     * marked outliers exceed the bounds of `targetAxis`. Flips the markers if `targetAxis`
     * has been inverted (see [flipMarkers]{@link CIQ.Outliers#flipMarkers}).
     *
     * @param {object} targetAxis The y-axis on which the markers are refreshed. **Note:**
     * 		Charts and panels can have multiple y-axes, each with its own outlier markers.
     *
     * @alias refreshMarkers
     * @memberOf CIQ.Outliers.prototype
     * @since 8.0.0
     */


    this.refreshMarkers = function (targetAxis) {
      Object.keys(targetAxis.markers).forEach(function (targetAxis, key) {
        var targetMarker = targetAxis.markers[key].marker;
        var targetValue = targetAxis.markers[key].value;
        var targetType = targetAxis.markers[key].type; // Check the marker value against the actual axis min/max. This accounts for yaxis scaling
        // in addition to the outlier display state.

        if (targetValue > targetAxis.trendMax && targetAxis.axis.high >= targetValue || targetValue < targetAxis.trendMin && targetAxis.axis.low <= targetValue) {
          if (targetType == "quote") {
            targetMarker.node.style.display = "none";
          } else if (targetType == "axis") {
            targetMarker.node.classList.add("compress");
          }
        } else {
          if (targetType == "quote") {
            targetMarker.node.style.display = "block";
          } else if (targetType == "axis") {
            targetMarker.node.classList.remove("compress");
          }
        }

        if (targetType == "axis") {
          this.refreshAxisMarkers(targetMarker.node, targetAxis);
        } // Update the marker responsive style


        if (targetAxis.axis.height < 100) targetMarker.node.classList.add("nano");else targetMarker.node.classList.remove("nano");
        if (targetAxis.axis.height < 250) targetMarker.node.classList.add("micro");else targetMarker.node.classList.remove("micro");
      }.bind(this, targetAxis)); // Check for a change in the flipped state of the axis

      if (targetAxis.isFlipped !== targetAxis.axis.flipped) this.flipMarkers(targetAxis);
    };
    /**
     * Places markers on the y-axis when high or low outliers exist.
     *
     * @param {string} position The position of the marker; either "high" or "low". If the
     * 		position is "high", the marker is placed at the top of the axis; if "low", at the
     * 		bottom of the axis.
     * @param {object} targetAxis The y-axis on which the markers are placed. **Note:**
     * 		Charts and panels can have multiple y-axes, each with its own outlier markers.
     * @return {CIQ.Marker} The axis outlier marker, which is added to the display.
     *
     * @alias markAxis
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added `position` and `targetAxis` parameters and return value.
     */


    this.markAxis = function (position, targetAxis) {
      // Create a marker positioned on the Y axis and return it.
      var axisMarker = document.createElement("div");
      axisMarker.classList.add("outlier-sticker", "axis", "mini", position);
      axisMarker.innerHTML = '<div class="expansion"><div class="pill"><div class="icon"></div></div><div class="tick"></div><span class="outlier-value"></div><div class="compression"><div class="pill"><div class="icon"></div></div></div></span>';
      this.matchYAxisStyle(axisMarker);
      this.setMarkerColor(axisMarker, targetAxis.markerColor);
      var activate = this.handleMarkerClick.bind(this, position, targetAxis, axisMarker);
      axisMarker.addEventListener("click", activate);
      axisMarker.addEventListener("touchend", activate);
      return new CIQ.Marker({
        stx: this.stx,
        xPositioner: "none",
        yPositioner: "none",
        label: "expand",
        permanent: true,
        chartContainer: true,
        node: axisMarker
      });
    };
    /**
     * Adds an outlier marker to a tick (data point).
     *
     * @param {object} data Represents the tick that is marked as an outlier. Contains the
     * 		outlier value and its associated quote; for example,
     * 		`{value: Number, quote: Object}`.
     * @param {string} position The position of the marker; either "high" or "low". If the
     * 		position is "high", the marker is placed at the top of the chart; if "low", at the
     * 		bottom of the chart.
     * @param {object} targetAxis The y-axis to which the marker is added. **Note:** A chart
     * 		or panel can have multiple y-axes; each y-axis has its own outlier markers.
     * @return {CIQ.Marker} The outlier marker, which is added to the display.
     *
     * @alias markOutlier
     * @memberOf CIQ.Outliers.prototype
     * @since
     * - 7.5.0
     * - 8.0.0 Added `targetAxis` parameter.
     */


    this.markOutlier = function (data, position, targetAxis) {
      if (!data) return;
      if (!targetAxis) targetAxis = {
        panel: this.stx.panels.chart
      };
      position = position || "high"; // Create a marker

      var outlierMarker = document.createElement("div");
      outlierMarker.classList.add("outlier-sticker", "quote", "mini", position);
      outlierMarker.innerHTML = '<div class="pill"><div class="icon"></div></div><span class="outlier-value">' + this.stx.formatYAxisPrice(data.value, targetAxis.panel) + "</span>";
      this.matchYAxisStyle(outlierMarker);
      this.setMarkerColor(outlierMarker, targetAxis.markerColor);
      var activate = this.handleMarkerClick.bind(this, position, targetAxis, outlierMarker);
      outlierMarker.addEventListener("click", activate);
      outlierMarker.addEventListener("touchend", activate);
      return new CIQ.Marker({
        stx: this.stx,
        xPositioner: "date",
        yPositioner: position == "high" ? "top" : "bottom",
        x: data.quote.DT,
        panelName: targetAxis.panel.name,
        node: outlierMarker
      });
    };
    /**
     * Calls [setDisplayState]{@link CIQ.Outliers#setDisplayState} in response to selecting an
     * outlier marker.
     *
     * @param {string} position The position of the marker; either "high" or "low".
     * @param {object} targetAxis The y-axis that contains the selected marker. **Note:**
     * 		Charts and panels can have multiple y-axes; each y-axis has its own outlier
     * 		markers.
     * @param {HTMLElement} targetNode The selected outlier marker DOM node.
     *
     * @alias handleMarkerClick
     * @memberOf CIQ.Outliers.prototype
     * @since 8.0.0
     */


    this.handleMarkerClick = function (position, targetAxis, targetNode) {
      if (targetNode.classList.contains("nano")) position = "all"; // not concerned about differentiation between high and low at the nano size

      this.setDisplayState(position, targetAxis);
      this.stx.draw();
    };
    /**
     * Sets the CSS style properties of the y-axis outlier marker to match the CSS styling of
     * the y-axis itself.
     *
     * @param {HTMLElement} node The y-axis marker to style.
     *
     * @alias matchYAxisStyle
     * @memberOf CIQ.Outliers.prototype
     * @since 7.5.0
     */


    this.matchYAxisStyle = function (node) {
      // Apply styles from the yAxis
      if (this.stx.styles.stx_yaxis) {
        var styles = this.stx.styles.stx_yaxis;
        node.style.fontSize = styles.fontSize;
        node.style.fontFamily = styles.fontFamily;
        node.style.color = styles.color;
        node.style.borderColor = styles.color;
      }
    };
    /**
     * Applies a background color to an outlier data point marker.
     *
     * @param {HTMLElement} node The outlier marker DOM node to which the background color is
     * 		applied.
     * @param {string} color The hexadecimal color value set as the node background color.
     *
     * @alias setMarkerColor
     * @memberOf CIQ.Outliers.prototype
     * @since 8.0.0
     */


    this.setMarkerColor = function (node, color) {
      if (color == "") return; //Set marker color

      var markerPills = node.querySelectorAll(".pill");

      for (var markerIdx = 0; markerIdx < markerPills.length; markerIdx++) {
        markerPills[markerIdx].style.backgroundColor = color;
      }
    };
    /**
     * Repositions outlier markers from the top of the display to the bottom (or vice versa)
     * when the associated y-axis has been flipped (inverted).
     *
     * @param {object} targetAxis The y-axis that has been flipped.
     *
     * @alias flipMarkers
     * @memberOf CIQ.Outliers.prototype
     * @since 8.0.0
     */


    this.flipMarkers = function (targetAxis) {
      targetAxis.isFlipped = targetAxis.axis.flipped;
      Object.keys(targetAxis.markers).forEach(function (targetAxis, key) {
        var targetMarker = targetAxis.markers[key].marker;
        var targetValue = targetAxis.markers[key].value;
        var targetType = targetAxis.markers[key].type; // Check for flipped state and add/remove flipped class

        if (targetAxis.isFlipped) {
          targetMarker.node.classList.add("flipped");
        } else {
          targetMarker.node.classList.remove("flipped");
        } // Set Y positioning of quote markers


        if (targetType == "quote") {
          if (targetValue > targetAxis.trendMax) {
            // High marker
            if (targetAxis.isFlipped) targetMarker.params.yPositioner = "bottom";else targetMarker.params.yPositioner = "top";
          } else if (targetValue < targetAxis.trendMin) {
            // Low marker
            if (targetAxis.isFlipped) targetMarker.params.yPositioner = "top";else targetMarker.params.yPositioner = "bottom";
          }
        }
      }.bind(this, targetAxis));
    };

    var originalDetermineMinMax = CIQ.ChartEngine.prototype.determineMinMax.bind(this.stx);
    /**
     * Overrides the default `CIQ.ChartEngine.prototype.determineMinMax` function when the
     * Outliers add-on is active. Injects the local {@link CIQ.Outliers#processDataSet}
     * function as a data filter and passes the filter along to the original `determineMinMax`
     * function (see below).
     *
     * @param {Array} quotes The array of quotes (typically
     * 		`CIQ.ChartEngine.chart.dataSegment`) to evaluate for minimum and maximum values.
     * @param {Array} fields A list of fields to compare.
     * @param {boolean|Array} [sum] If true, then compute maximum sum rather than the maximum
     * 		single value across all fields. If an array, compute sum over just the fields in
     * 		the array.
     * @param {boolean} [bypassTransform] If true, bypass any transformations.
     * @param {number} [length] Specifies how many elements of the quotes array to process.
     * @param {boolean} [checkArray] If true, the type of the value used to determine the
     * 		min/max is checked to ascertain whether it is an array; if so, the first element
     * 		of the array is retrieved for use in the min/max determination.
     * @param {CIQ.ChartEngine.Panel} [panel] A reference to the panel rendering the quotes.
     * @param {CIQ.ChartEngine.YAxis} [axis] A reference to the y-axis rendered for the quotes.
     * @param {Array} [filters] Array of functions to process the min/max values before
     * 	returning. Filter functions must return a valid min/max tuple or false.
     * @return {function} A reference to the original
     * 		`CIQ.ChartEngine.prototype.determineMinMax` library function.
     *
     * @memberof CIQ.ChartEngine
     * @since
     * - 7.5.0
     * - 8.0.0 Allow the `sum` parameter to be an array of valid fields to sum over.
     * 		Added the `panel`, `axis`, and `filters` parameters.
     * @private
     */

    CIQ.ChartEngine.prototype.determineMinMax = function (quotes, fields, sum, bypassTransform, length, checkArray, panel, axis, filters) {
      if (!filters) filters = [];
      if (panel && axis && this.layout.outliers) filters.push(this.outliers.processDataSet.bind(this.outliers));
      return originalDetermineMinMax(quotes, fields, sum, bypassTransform, length, checkArray, panel, axis, filters);
    };
  };
  /**
   * CIQ.Marker interface placeholder to be augmented in *standard.js* with properties.
   *
   * @tsinterface CIQ~Marker
   */

};

var __js_addons_advanced_plotComplementer_ = function __js_addons_advanced_plotComplementer_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Creates an add-on that enables a series to complement another series.
   *
   * ![Plot Complementer](./img-Data-Forecasting.png)
   *
   * The complementary series is a permanent fixture of the series which it complements. It moves
   * in tandem with the series, and gets removed with the series. In all other respects, though, it
   * behaves like its own series. It shows separately in the panel legend and plots using its own
   * renderer.
   *
   * Charts can have multiple `PlotComplementer` instances. Each instance is attached to the chart
   * engine as a member of a `PlotComplementer` collection.
   *
   * Multiple `PlotComplementer` instances can be associated with a time series. To link a
   * `PlotComplementer` to a series, specify the series instrument in the `params.filter` function.
   * See `[setQuoteFeed]{@link CIQ.PlotComplementer#setQuoteFeed}`.
   *
   * **Note:** The series created by this add-on is not exported with the layout, since it is
   * created in tandem with the series it complements. Currently, this feature works only with
   * non-comparison series.
   *
   * Requires *addOns.js*.
   *
   * @param {object} params Configuration parameters.
   * @param {CIQ.ChartEngine} params.stx The chart object.
   * @param {string} [params.id] Unique key used by the add-on to identify itself. If not supplied,
   * 		a random key is chosen.
   * @param {object} [params.quoteFeed] Attaches the quote feed to the quote driver to satisfy any
   * 		quote requests for any series created by the add-on.
   * @param {object} [params.behavior] Used as the behavior for the quote feed supplied in this
   * 		parameter list.
   * @param {function} [params.filter] Used as the filter for the quote feed supplied in this
   * 		parameter list. See `[setQuoteFeed]{@link CIQ.PlotComplementer#setQuoteFeed}`.
   * @param {object} [params.decorator] Container object for the `symbol` and `display` properties.
   * 		The `decorator` provides the label (`symbol`) for the complementary series and a short
   * 		description (`display`) that is appended to the label; for example:
   * ```
   * decorator: {symbol:"_fcst", display:" Forecast"}
   * ```
   * @param {string} [params.decorator.symbol] Adds this string onto the ID when creating the
   * 		complementary series. Otherwise, a unique ID is used.
   * @param {string} [params.decorator.display] Customizes the display value of the series.
   * @param {object} [params.renderingParameters={chartType: "line", width: 1, opacity: 0.5}] A
   * 		collection of parameters that override the default rendering parameters. The
   * 		`renderingParameters` object can be set or changed at any time. The default parameters
   * 		can be restored by calling {@link CIQ.PlotComplementer#resetRenderingParameters}.
   * 		<p>Here are a few examples of rendering parameters:</p>
   * ```
   * // Assuming a PlotComplementer declared as "forecaster":
   * forecaster.renderingParameters = {chartType:"scatterplot", opacity:0.5, field:"Certainty"}
   * forecaster.renderingParameters = {chartType:"histogram", border_color:"transparent", opacity:0.3}
   * forecaster.renderingParameters = {chartType:"channel", opacity:0.5, pattern:"dotted"}
   * forecaster.renderingParameters = {chartType:"candle", opacity:0.5, color:"blue", border_color:"blue"}
   * ```
   *
   * @constructor
   * @name CIQ.PlotComplementer
   * @since 7.3.0
   *
   * @example <caption>Forecasting</caption>
   * let forecaster = new CIQ.PlotComplementer({
   *     stx:stxx,
   *     id:"forecast",
   *     quoteFeed: fcstFeed.quoteFeedForecastSimulator,
   *     behavior: {refreshInterval:60},
   *     decorator: {symbol:"_fcst", display:" Forecast"},
   *     renderingParameters: {chartType:"channel", opacity:0.5, pattern:"dotted"}
   * });
   */

  CIQ.PlotComplementer = CIQ.PlotComplementer || function (params) {
    var stx = params.stx;
    var unique = CIQ.uniqueID();
    if (!params.decorator) params.decorator = {};
    var symbolDecorator = params.decorator.symbol || "_" + unique;
    var displayDecorator = params.decorator.display || " (addl)";
    if (!stx.plotComplementers) stx.plotComplementers = [];
    stx.plotComplementers.push(this);
    this.id = params.id || unique;
    this.defaultRenderingParameters = {
      chartType: "line",
      width: 1,
      opacity: 0.5
    };
    if (params.renderingParameters) this.defaultRenderingParameters = params.renderingParameters;
    var self = this;

    function addSeries(stx, symbol, parameters, id) {
      function verifyQuoteFeed(stx) {
        if (!stx.quoteDriver) return;
        if (!params.quoteFeed) return;

        for (var qf = 0; qf < stx.quoteDriver.quoteFeeds.length; qf++) {
          if (stx.quoteDriver.quoteFeeds[qf].engine == params.quoteFeed) return;
        }

        return "err";
      }

      if (verifyQuoteFeed(stx) == "err") return;
      if (!id) id = symbol;
      if (stx.isEquationChart(symbol)) return;
      if (!parameters) parameters = {};
      if (parameters.isComparison) return;

      if (id && id.indexOf(symbolDecorator) == -1) {
        var fId = id + symbolDecorator,
            fSymbol = symbol + symbolDecorator;
        var masterRenderer = stx.getRendererFromSeries(id);
        var myParms = CIQ.extend({
          display: symbol + displayDecorator,
          name: fId,
          symbol: fSymbol,
          symbolObject: {
            symbol: fSymbol,
            generator: self.id,
            masterSymbol: symbol
          },
          overChart: false,
          gapDisplayStyle: true,
          permanent: true,
          panel: parameters.panel,
          yAxis: parameters.yAxis,
          shareYAxis: true,
          loadData: !!self.quoteFeed,
          dependentOf: masterRenderer ? masterRenderer.params.name : stx.mainSeriesRenderer.params.name
        }, self.renderingParameters);
        if (!myParms.color) myParms.color = parameters.color || "auto";
        stx.addSeries(fId, myParms, function (error, obj) {
          if (error) stx.removeSeries(fId, stx.chart);

          if (stx.chart.seriesRenderers[fId]) {
            stx.chart.seriesRenderers[fId].params.display = myParms.display;
          }
        });
      }
    }

    function removeSeries(stx, id, chart) {
      if (id && id.indexOf(symbolDecorator) == -1) stx.removeSeries(id + symbolDecorator, chart);
    }

    function symbolChange(obj) {
      if (obj.action == "master") {
        if (!obj.prevSymbol) obj.prevSymbol = obj.symbol;
        removeSeries(obj.stx, obj.prevSymbol, obj.stx.chart);
        addSeries(obj.stx, obj.symbol);
      } else if (obj.action == "add-series") {
        removeSeries(obj.stx, obj.id, obj.stx.chart);
        addSeries(obj.stx, obj.symbol, obj.parameters, obj.id);
      } else if (obj.action == "remove-series") {
        removeSeries(obj.stx, obj.id, obj.stx.chart);
      }
    }

    stx.addEventListener("symbolChange", symbolChange);
    stx.addEventListener("symbolImport", symbolChange);
    /**
     * Resets the `PlotComplementer` rendering values to the default settings.
     *
     * Default settings can be provided in the parameters passed to the `PlotComplementer` constructor. If no settings are
     * provided to the constructor, `PlotComplementer` uses the following defaults: `{ chartType:"line", width:1, opacity:0.5 }`.
     *
     * The rendering parameters may be set anytime after creating `PlotComplementer`; for example, to set an ad-hoc rendering
     * right before adding a series.
     *
     * @alias resetRenderingParameters
     * @memberof CIQ.PlotComplementer.prototype
     * @since 7.3.0
     */

    this.resetRenderingParameters = function () {
      this.renderingParameters = this.defaultRenderingParameters;
    };
    /**
     * Sets a quote feed for the `PlotComplementer`.
     *
     * Automatically called when a quote feed is provided in the constructor argument. If a
     * quote feed or `behavior` object is not specified in `params`, this function returns
     * without doing anything.
     *
     * @param {object} params Configuration parameters.
     * @param {object} params.quoteFeed Quote feed to attach to the quote driver to satisfy
     * 		any quote requests for any series created by the add-on. This quote feed is like
     * 		any time series quote feed object. See the
     * 		[Data Integration Overview]{@tutorial DataIntegrationOverview}.
     * @param {object} params.behavior Behavior for the quote feed supplied in this parameter
     * 		list. This object is like any `behavior` object associated with a quote feed.
     * 		See {@link CIQ.ChartEngine#attachQuoteFeed} for more information on `behavior`
     * 		objects.
     * @param {function} [params.filter] Filters the quote feed supplied in this parameter
     * 		list. The filter function takes as an argument an object typically containing
     * 		`symbolObject`, `symbol`, and `interval` properties. The properties associate the
     * 		`PlotComplementer` with an instrument. If the `filter` function returns true, the
     * 		`PlotComplementer` quote feed is used for the instrument.
     * 		<p>This `filter` function is like the `filter` in basic quote feeds.
     * 		See {@link CIQ.ChartEngine#attachQuoteFeed} for more information on quote feed
     * 		`filter` functions.</p>
     * @alias setQuoteFeed
     * @memberof CIQ.PlotComplementer.prototype
     * @since 7.3.0
     */


    this.setQuoteFeed = function (params) {
      if (!params.quoteFeed || !params.behavior) return;
      var behavior = CIQ.clone(params.behavior);
      behavior.generator = this.id;
      var existingFilter = params.filter;

      var filter = function filter(params) {
        if (existingFilter && !existingFilter(params)) return false;
        return params.symbolObject.generator == behavior.generator;
      };

      stx.attachQuoteFeed(params.quoteFeed, behavior, filter);
      this.quoteFeed = params.quoteFeed;
    };

    this.setQuoteFeed(params);
    this.resetRenderingParameters();
  };
};

var __js_addons_standard_extendedHours_ = function __js_addons_standard_extendedHours_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Use this constructor to initialize filtering and visualization styles of extended hours by the use of shading and delimitation lines.
   *
   * Requires *addOns.js*.
   *
   * This visualization will only work if data for the corresponding sessions is provided from your quote feed and the market definitions have the corresponding entries.
   * See {@link CIQ.Market} for details on how to define extended (non-default) hours.
   *
   * By default all extended hour sessions are disabled unless explicitly enabled using {@link CIQ.ExtendedHours.prepare} or {@link CIQ.ExtendedHours.set}.
   *
   * All possible market sessions needed to be shaded at any given time should be enabled at once with this method.
   *
   * Your fetch should load the required data based on the `params.stx.layout.extended` and `params.stx.layout.marketSessions` settings.
   *
   * Remember that when `params.filter` is set to true, this module performs a filter of already loaded masterData when {@link CIQ.ExtendedHours.set} is invoked,
   * rather than calling {@link CIQ.ChartEngine#loadChart} to reload the data from the server every time you enable or disable this feature.
   * So you must always return all requested sessions on your fetch responses if this flag is set.
   *
   * CSS info:
   * - The styles for the shading of each session is determined by the corresponding CSS class in the form of "stx_market_session."+session_name (Example: `stx_market_session.pre`)
   * - The divider line is determined by the CSS class "stx_market_session.divider".
   *
   * **Important:** This module must be initialized before {@link CIQ.ChartEngine#importLayout} or the sessions will not be able to be restored.
   *
   * Example:
   * <iframe width="800" height="500" scrolling="no" seamless="seamless" align="top"
   *         style="float:top"
   *         src="https://jsfiddle.net/chartiq/g2vvww67/embedded/result,js,html/"
   *         allowfullscreen="allowfullscreen" frameborder="1">
   * </iframe>
   *
   * @param {object} params The constructor parameters.
   * @param {CIQ.ChartEngine} [params.stx] The chart object.
   * @param {boolean} [params.filter] Setting to true performs a filter of masterData when
   * 		{@link CIQ.ExtendedHours.set} is invoked, rather than calling
   * 		{@link CIQ.ChartEngine#loadChart} to reload the data from the server.
   * @param {string} [params.menuContextClass] A CSS class name used to query the menu DOM
   * 		element that contains the UI control for the extended hours add-on. In a multi-chart
   * 		document, the add-on is available only on charts that have a menu DOM element with
   * 		the value for `menuContextClass` as a class attribute.
   *
   * @constructor
   * @name CIQ.ExtendedHours
   * @since
   * - 06-2016-02
   * - 3.0.0 Changed argument to an object to support `filter`.
   * - 3.0.0 No longer necessary to explicitly call new Chart to reload data. Instead call {@link CIQ.ExtendedHours.set} function.
   * - 5.0.0 No longer necessary to explicitly set `stx.layout.marketSessions` or `1stx.layout.extended` to manage sessions; instead call {@link CIQ.ExtendedHours.prepare} or {@link CIQ.ExtendedHours.set}.
   * - 8.0.0 Added `params.menuContextClass`.
   *
   * @example
   * // Call this only once to initialize the market sessions display manager.
   * new CIQ.ExtendedHours({stx:stxx, filter:true});
   *
   * // By default all sessions are disabled unless explicitly enabled.
   * // This forces the extended hours sessions ["pre","post"] to be enabled when the chart is initially loaded.
   * stxx.extendedHours.prepare(true);
   *
   * // Now display your chart.
   * stxx.loadChart(stxx.chart.symbol, {}, function() {});
   *
   * @example
   * // Once your chart is displayed, you can call this from any UI interface to turn on extended hours.
   * stx.extendedHours.set(true);
   *
   * // Or call this from any UI interface to turn off extended hours.
   * stx.extendedHours.set(false);
   *
   * @example
   * // CSS entries for a session divider and sessions named "pre" and "post".
   * .stx_market_session.divider {
   *     background-color: rgba(0,255,0,0.8);
   *     width: 1px;
   * }
   * .stx_market_session.pre {
   *     background-color: rgba(255,255,0,0.1);
   * }
   * .stx_market_session.post {
   *     background-color: rgba(0,0,255,0.2);
   * }
   */

  CIQ.ExtendedHours = CIQ.ExtendedHours || function (params) {
    var stx = params.stx;
    this.filter = params.filter;

    if (!stx) {
      // backwards compatibility
      stx = params;
      this.filter = false;
    }

    var styles = {};
    this.stx = stx;
    this.stx.extendedHours = this;
    this.cssRequired = true;
    stx.addEventListener("theme", function (tObject) {
      // reinitialize the session colors after a theme change
      styles = {};

      for (var sess in stx.layout.marketSessions) {
        if (!styles.session) styles.session = {};
        styles.session[sess] = stx.canvasStyle("stx_market_session " + sess);
      }
    });
    stx.addEventListener("symbolChange", function (tObject) {
      // check if extended hours exists for this security
      if (tObject.action == "master" && stx.layout.extended && !(stx.chart.market.market_def && stx.chart.market.sessions.length)) {
        CIQ.alert("There are no Extended Hours for this instrument.");
      }
    });
    /**
     * Prepares the extended hours settings and classes for the session names enumerated in the arguments without actually displaying or loading the data.
     *
     * This method can be used to force a particular session to load by default by calling it before {@link CIQ.ChartEngine#loadChart}.
     * Otherwise the chart will be loaded with all sessions disabled until {@link CIQ.ExtendedHours.set} is invoked.
     *
     * {@link CIQ.ChartEngine#importLayout} will also call this method to ensure the sessions are restored as previously saved.
     *
     * @param  {boolean} enable Set to turn on/off the extended-hours visualization.
     * @param  {array} sessions The sessions to visualize when enable is true.  Any sessions previously visualized will be disabled.  If set to null, will default to ["pre","post"].
     * @memberof CIQ.ExtendedHours
     * @method prepare
     * @since 5.0.0
     */

    this.prepare = function (enable, sessions) {
      stx.layout.extended = enable;

      for (var sess in stx.layout.marketSessions) {
        styles.session = {};
        stx.chart.market.disableSession(sess);
      }

      stx.layout.marketSessions = {};

      if (enable) {
        if (!sessions) sessions = ["pre", "post"];

        if (sessions.length) {
          for (var s = 0; s < sessions.length; s++) {
            stx.layout.marketSessions[sessions[s]] = true;
          }
        } else {
          stx.layout.marketSessions = sessions;
        }
      }

      for (sess in stx.layout.marketSessions) {
        if (!styles.session) styles.session = {};
        styles.session[sess] = stx.canvasStyle("stx_market_session " + sess);
        stx.chart.market.disableSession(sess, true);
      }
    };
    /**
     * gathers and renders the extended hours for the preset session names enumerated in prepare().
     * @param  {function} cb Optional callback function to be invoked once chart is reloaded with extended hours data.
     * @memberof CIQ.ExtendedHours
     * @method complete
     * @private
     * @since 5.0.0
     */


    this.complete = function (cb) {
      stx.changeOccurred("layout");

      if (!stx.chart.market.market_def) {
        // possibly a 24 hours Market. Not necessarily an error but nothing to do for ExtendedHours
        if (cb) cb();
        return;
      }

      if (this.filter) {
        stx.createDataSet();
        stx.draw();
        if (cb) cb();
      } else {
        stx.loadChart(stx.chart.symbol, cb);
      }
    };
    /**
     * Turns on or off extended hours for the session names enumerated in the arguments.
     * @param  {boolean} enable Set to turn on/off the extended-hours visualization.
     * @param  {array} sessions The sessions to visualize when enable is true.  Any sessions previously visualized will be disabled.  If set to null, will default to ["pre","post"].
     * @param  {function} cb Optional callback function to be invoked once chart is reloaded with extended hours data.
     * @memberof CIQ.ExtendedHours
     * @method set
     */


    this.set = function (enable, sessions, cb) {
      this.prepare(enable, sessions);
      this.complete(cb);
    }; // This injection shades the after hours portion of the chart for each yaxis.
    // Only the panel to which the yaxis belongs will get shading.
    // This means yaxes of overlays will bypass the shading block.


    this.stx.append("drawYAxis", function (panel, parameters) {
      if (!this.layout.extended) return;
      if (panel.yAxis != parameters.yAxis || panel.shareChartXAxis === false || panel.hidden) return;
      var chart = panel.chart;
      if (CIQ.ChartEngine.isDailyInterval(this.layout.interval)) return;
      styles.divider = this.canvasStyle("stx_market_session divider");

      if (styles.session) {
        var m = chart.market;
        var ranges = [];
        var range = {};
        var nextBoundary, thisSession;

        for (var i = 0; i < chart.dataSegment.length; i++) {
          var ds = chart.dataSegment[i];
          if (!ds || !ds.DT) continue;
          var c = null;

          if (m.market_def) {
            if (!nextBoundary || nextBoundary <= ds.DT) {
              thisSession = m.getSession(ds.DT);
              var filterSession = thisSession !== "" && (!this.layout.marketSessions || !this.layout.marketSessions[thisSession]);
              nextBoundary = m[filterSession ? "getNextOpen" : "getNextClose"](ds.DT);
            }
          }

          var s = styles.session[thisSession];
          if (s) c = s.backgroundColor;

          if (range.color && range.color != c) {
            ranges.push({
              start: range.start,
              end: range.end,
              color: range.color
            });
            range = {};
          }

          if (c) {
            var cw = this.layout.candleWidth;
            if (ds.candleWidth) cw = ds.candleWidth;
            range.end = this.pixelFromBar(i, chart) + cw / 2;
            if (!range.start && range.start !== 0) range.start = range.end - cw + 1;
            range.color = c;
          } else {
            range = {};
          }
        }

        if (range.start || range.start === 0) ranges.push({
          start: range.start,
          end: range.end,
          color: range.color
        });
        var noDashes = CIQ.isTransparent(styles.divider.backgroundColor);
        var dividerLineWidth = styles.divider.width.replace(/px/g, "");
        var dividerStyle = {
          y0: panel.bottom,
          y1: panel.top,
          color: styles.divider.backgroundColor,
          type: "line",
          context: chart.context,
          confineToPanel: panel,
          pattern: "dashed",
          lineWidth: dividerLineWidth,
          deferStroke: true
        };
        this.startClip(panel.name);
        chart.context.beginPath();
        if (stx.highlightedDraggable) chart.context.globalAlpha *= 0.3;

        for (i = 0; i < ranges.length; i++) {
          chart.context.fillStyle = ranges[i].color;
          if (!noDashes && ranges[i].start > chart.left) this.plotLine(CIQ.extend({
            x0: ranges[i].start,
            x1: ranges[i].start
          }, dividerStyle));
          chart.context.fillRect(ranges[i].start, panel.top, ranges[i].end - ranges[i].start, panel.bottom - panel.top);
          if (!noDashes && ranges[i].end < chart.right) this.plotLine(CIQ.extend({
            x0: ranges[i].end,
            x1: ranges[i].end
          }, dividerStyle));
        }

        chart.context.stroke();
        this.endClip();
      }
    });
  };
};

var __js_addons_standard_fullScreen_ = function __js_addons_standard_fullScreen_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Creates an add-on that sets the chart UI to full-screen mode. In full-screen mode, a class
   * `full-screen` is added to the context element used for styling. In addition, elements with the
   * class `full-screen-hide` are hidden. Elements with the class `full-screen-show` that are
   * normally hidden are shown.
   *
   * Requires *addOns.js*.
   *
   * ![Full-screen display](./img-Full-Screen-Chart.png)
   *
   * @param {object} params Configuration parameters.
   * @param {CIQ.ChartEngine} [params.stx] The chart object.
   *
   * @constructor
   * @name CIQ.FullScreen
   * @since 7.3.0
   *
   * @example
   * new CIQ.FullScreen({ stx: stxx });
   */

  CIQ.FullScreen = CIQ.FullScreen || function (params) {
    if (!params) params = {};

    if (!params.stx) {
      console.warn("The Full Screen addon requires an stx parameter");
      return;
    } // Check for loading within an iframe from another origin


    try {
      if (window.location.host !== window.top.location.host) throw new Error(window.location.host + " does not match " + window.top.location.host);
    } catch (exception) {
      console.warn("Full screen mode disabled.");
      return;
    }

    this.stx = params.stx;
    this.stx.fullScreen = this;
    this.fullScreenButton = null;
    this.fullScreenState = false; //Attaches FullScreen button to HTML DOM inside .chartSize element

    this.addFullScreenButton = function () {
      if (this.stx.registerChartControl) this.fullScreenButton = this.stx.registerChartControl("stx-full-screen", "Full Screen", function (self) {
        return function (e) {
          self.fullScreenToggle(e);
          e.stopPropagation();
        };
      }(this));
    }; //Click event handler for the Full Screen button.


    this.fullScreenToggle = function (e) {
      // First check for availability of the requestFullScreen function
      if (document.documentElement.requestFullscreen || document.documentElement.webkitRequestFullscreen || document.documentElement.mozRequestFullscreen || document.documentElement.msRequestFullscreen) {
        // Check if full screen is already enabled
        if (this.getFullScreenElement()) {
          if (document.exitFullscreen) document.exitFullscreen();else if (document.webkitExitFullscreen) document.webkitExitFullscreen();else if (document.mozCancelFullScreen) document.mozCancelFullScreen();else if (document.msExitFullscreen) document.msExitFullscreen();
        } else {
          // requestFullscreen methods need to be checked for again here because the browser will not allow the method to be stored in a local var
          if (document.documentElement.requestFullscreen) document.documentElement.requestFullscreen();else if (document.documentElement.webkitRequestFullscreen) document.documentElement.webkitRequestFullscreen();else if (document.documentElement.mozRequestFullscreen) document.documentElement.mozRequestFullscreen();else if (document.documentElement.msRequestFullscreen) document.documentElement.msRequestFullscreen();
        }
      } else {
        //If the full screen api isn't available, manually trigger the fullScreen styling
        this.fullScreenState = !this.fullScreenState;
        this.fullScreenRender();
      }
    }; // Append/remove full-screen class to context or body and update button state


    this.fullScreenRender = function () {
      var containerElement = null;
      containerElement = this.stx.container.closest("*[cq-context], cq-context, body");

      if (containerElement) {
        if (this.fullScreenState === true) {
          if (this.fullScreenButton) this.fullScreenButton.classList.add("active");
          containerElement.classList.add("full-screen");
        } else {
          if (this.fullScreenButton) this.fullScreenButton.classList.remove("active");
          containerElement.classList.remove("full-screen");
        } // Trigger a resize event to update the chart size


        window.dispatchEvent(new Event("resize"));
      }
    }; //Handle full screen change


    this.onFullScreenChange = function () {
      if (this.getFullScreenElement()) {
        this.fullScreenState = true;
      } else {
        this.fullScreenState = false;
      }

      this.fullScreenRender();
    };

    this.getFullScreenElement = function () {
      return document.fullscreenElement || document.webkitCurrentFullScreenElement || document.mozFullScreenElement || document.msFullscreenElement;
    };

    document.addEventListener("fullscreenchange", this.onFullScreenChange.bind(this), false);
    document.addEventListener("webkitfullscreenchange", this.onFullScreenChange.bind(this), false);
    document.addEventListener("mozfullscreenchange", this.onFullScreenChange.bind(this), false);
    document.addEventListener("MSFullscreenChange", this.onFullScreenChange.bind(this), false); // Add the FullScreen button to chartControls

    this.addFullScreenButton();
  };
};

var __js_addons_standard_inactivityTimer_ = function __js_addons_standard_inactivityTimer_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Add-On that puts the chart into "sleep mode" after a period of inactivity.
   *
   * Requires *addOns.js*.
   *
   * In sleep mode, a class "ciq-sleeping" will be added to the body.  This will dim out the chart.
   * Sleep mode is ended when interaction with the chart is detected.
   *
   * @param {object} params Configuration parameters
   * @param {CIQ.ChartEngine} [params.stx] The chart object
   * @param {number} [params.minutes] Inactivity period in _minutes_.  Set to 0 to disable the sleep mode.
   * @param {number} [params.interval] Sleeping quote update interval in _seconds_.  During sleep mode, this is used for the update loop.
   * 									Set to non-zero positive number or defaults to 60.
   * @param {function} [params.wakeCB] Optional callback function after waking
   * @param {function} [params.sleepCB] Optional callback function after sleeping
   * @constructor
   * @name  CIQ.InactivityTimer
   * @since 3.0.0
   * @example
   * 	new CIQ.InactivityTimer({stx:stxx, minutes:30, interval:15});  //30 minutes of inactivity will put chart into sleep mode, updating every 15 seconds
   *
   */

  CIQ.InactivityTimer = CIQ.InactivityTimer || function (params) {
    if (!params.minutes) return;
    if (!params.interval || params.interval < 0) params.interval = 60;
    this.stx = params.stx;
    this.timeout = params.minutes;
    this.interval = params.interval;
    this.wakeCB = params.wakeCB;
    this.sleepCB = params.sleepCB;
    this.sleepTimer = null;
    this.sleeping = false;
    this.last = new Date().getTime();

    this.wakeChart = function () {
      clearTimeout(this.sleepTimer);
      this.last = new Date().getTime();

      if (this.sleeping) {
        if (this.stx.quoteDriver) this.stx.quoteDriver.updateChartLoop();
        this.sleeping = false;
        document.body.classList.remove("ciq-sleeping");
      }

      this.sleepTimer = setTimeout(this.sleepChart.bind(this), this.timeout * 60000);
      if (this.wakeCB) this.wakeCB();
    };

    this.sleepChart = function () {
      if (!this.sleeping) {
        if (this.stx.quoteDriver) this.stx.quoteDriver.updateChartLoop(this.interval);
        this.sleeping = true;
        document.body.classList.add("ciq-sleeping");
      }

      if (this.sleepCB) this.sleepCB();
    };

    var self = this;
    ["mousemove", "mousedown", "touchstart", "touchmove", "pointerdown", "pointermove", "keydown", "wheel"].forEach(function (ev) {
      document.body.addEventListener(ev, function (e) {
        self.wakeChart();
      });
    });
    this.wakeChart();
  };
};

var __js_addons_standard_rangeSlider_ = function __js_addons_standard_rangeSlider_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Add-on that puts a range slider under the chart.
   *
   * This allows the `dataSegment` to be selectable as a portion of the dataset.
   *
   * Requires *addOns.js*.
   *
   * It also requires additional CSS.
   *
   * Either add:
   * ```
   * <link rel="stylesheet" type="text/css" href="css/chartiq.css" media="screen" />
   * ```
   * Or explicitly include this CSS:
   * ```
   * .stx_range_slider.shading {
   *     background-color: rgba(128, 128, 128, 0.3);
   *     border: solid 2px #0090b7;
   *     width: 5px;
   * }
   * ```
   * Once instantiated, it can be displayed or hidden by simply setting the `rangeSlider` parameter
   * of the primary chart's **layout object**, and then issuing a layout change event to trigger the
   * new status. Make sure to use the callback to enable the slider on initial load to prevent
   * "out of sequence" issues. See examples for exact syntax.
   *
   * Remember, a range slider is simply just another chart. So you configure it and customize it
   * using the same parameters as you would the primary chart. The only difference is that the
   * slider object will be a sub element of the primary chart, living inside the `slider.slider`
   * object.
   *
   * For example, if you wanted to turn off the x-axis on the slider, assuming a chart instantiated
   * as `stxx`, you would execute:
   * ```
   * stxx.slider.slider.xaxisHeight = 0;
   * ```
   *
   * If using chartIQ web components, the slider needs to be created **before** the UI manager
   * (startUI) is called for custom themes to apply.
   *
   * It is important to note that the range slider chart container will create itself **under** the
   * primary chart container, not **inside**. As such, to ensure styling is shared between the two
   * containers and they match in look and feel, all the styling must be on a parent `div` container
   * rather than the primary chart container itself.
   *
   * For example, do this:
   * ```
   * <div class="all-charts">
   *     <div style="grid-column: span 6; grid-row: span 2;">
   *         <div class="chartwrap"> <!-- Beginning of wrapper with desired styling. -->
   *             <div class="chartContainer1" style="width:100%;height:100%;position:relative"></div>
   *             <!-- The slider will be added here. -->
   *         </div> <!-- End of wrapper. -->
   *     </div>
   * </div>
   * ```
   *
   * Not this:
   * ```
   * <div class="all-charts">
   *     <div class="chartwrap" style="grid-column: span 6; grid-row: span 2;">
   *         <div class="chartContainer1" style="width: 100%; height: 100%; position: relative"></div>
   *     </div>
   * </div>
   * ```
   *
   * Range slider working example:
   * <iframe width="800" height="350" scrolling="no" seamless="seamless" align="top"
   *         style="float:top" src="https://jsfiddle.net/chartiq/dtug29yx/embedded/result,js,html/"
   *         allowfullscreen="allowfullscreen" frameborder="1">
   * </iframe>
   *
   * @param {object} params Configuration parameters.
   * @param {CIQ.ChartEngine} [params.stx] The chart object.
   * @param {number} [params.height="95px"] Height of the range slider panel. Must include a CSS
   * 		unit, such as "px".
   * @param {object} [params.yAxis] Y-axis parameters.
   * @param {number} [params.chartContainer] Handle to the main chart container. Defaults to
   * 		`stxx.container`.
   * @param {string} [params.menuContextClass] A CSS class name used to query the menu DOM element
   * 		that contains the UI control for the range slider add-on. In a multi-chart document, the
   * 		add-on is available only on charts that have a menu DOM element with the value for
   * 		`menuContextClass` as a class attribute.
   *
   * @constructor
   * @name CIQ.RangeSlider
   * @since
   * - 4.0.0
   * - 6.1.0 Added `params.yAxis`.
   * - 8.0.0 Added `params.menuContextClass`.
   *
   * @example
   * <caption>
   * 		Create a range slider and enable it by default using the <code>loadChart</code> callback.
   * </caption>
   * const stxx = new CIQ.ChartEngine({ container: document.querySelector(".chartContainer") });
   *
   * stxx.attachQuoteFeed(quoteFeedSimulator,{ refreshInterval: 1, bufferSize: 200 });
   *
   * // Instantiate a range slider.
   * new CIQ.RangeSlider({ stx: stxx });
   *
   * function displayChart(){
   *     stxx.loadChart("SPY", null, function() {
   *         // For smoother visualization, enable after the main chart has completed loading its data.
   *         stxx.layout.rangeSlider = true; // Show the slider.
   *         stxx.changeOccurred("layout"); // Signal the change to force a redraw.
   *     });
   * }
   *
   * @example
   * <caption>
   * 		Create a range slider and enable/disable it using commands to be triggered from a menu.
   * </caption>
   * const stxx = new CIQ.ChartEngine({ container: document.querySelector(".chartContainer") });
   *
   * // Instantiate a range slider.
   * new CIQ.RangeSlider({ stx: stxx });
   *
   * // To display the slider from a menu use:
   * stxx.layout.rangeSlider = true; // Show the slider.
   * stxx.changeOccurred("layout"); // Signal the change to force a redraw.
   *
   * // To hide the slider from a menu use:
   * stxx.layout.rangeSlider = false; // Hide the slider.
   * stxx.changeOccurred("layout"); // Signal the change to force a redraw.
   */

  CIQ.RangeSlider = CIQ.RangeSlider || function (params) {
    this.cssRequired = true;
    var stx = params.stx;
    stx.slider = this;
    var sliderHeight = params.height ? params.height : "95px";
    var chartContainer = params.chartContainer ? params.chartContainer : params.stx.container;
    var ciqSlider = document.createElement("div");
    ciqSlider.className = "ciq-chart";
    var sliderContainer = document.createElement("div");
    sliderContainer.className = "chartContainer";
    ciqSlider.appendChild(sliderContainer);
    chartContainer.parentElement.parentElement.insertBefore(ciqSlider, chartContainer.parentElement.nextSibling);
    Object.assign(ciqSlider.style, {
      height: sliderHeight,
      paddingTop: "5px",
      display: "none"
    });
    sliderContainer.style.height = "100%";
    sliderContainer.dimensionlessCanvas = true;
    var self = this.slider = new CIQ.ChartEngine({
      container: sliderContainer,
      preferences: {
        labels: false,
        whitespace: 0
      }
    });
    self.xaxisHeight = 30;
    self.manageTouchAndMouse = false;
    self.minimumCandleWidth = 0;
    self.chart.panel.subholder.style.cursor = "ew-resize";
    var yAxis = self.chart.panel.yAxis;
    yAxis.drawCurrentPriceLabel = false;
    Object.defineProperty(yAxis, "position", {
      get: function get() {
        return stx.slider.yAxisPosition || stx.chart.panel.yAxis.position;
      },
      set: function set(position) {
        stx.slider.yAxisPosition = position;
      }
    });

    var _Object$getOwnPropert = Object.getOwnPropertyDescriptor(CIQ.ChartEngine.YAxis.prototype, "width"),
        _get = _Object$getOwnPropert.get,
        _set = _Object$getOwnPropert.set;

    Object.defineProperty(yAxis, "width", {
      get: function get() {
        return Math.max(_get.call(yAxis), stx.chart.yAxis.width);
      },
      set: function set(width) {
        _set.call(yAxis, width);
      }
    });
    CIQ.extend(yAxis, params.yAxis);
    self.chart.baseline.userLevel = false;
    if (self.controls.home) self.controls.home.style.width = 0;
    self.initializeChart();
    var subholder = self.chart.panel.subholder;
    /**
     * Dynamically updates the styling of the range slider.
     *
     * This method can be used to update CSS styles if you are injecting stylesheets using
     * JavaScript.
     *
     * @param {string} obj The CSS selector for which a style property is changed.
     * @param {string} attribute The style property changed in the CSS selector rule-set.
     * @param {string} value The value to apply to the CSS property.
     *
     * @alias updateStyles
     * @memberof CIQ.RangeSlider.prototype
     * @since 8.0.0
     *
     * @example
     * // Set the shading of the range slider.
     * stxx.slider.updateStyles(
     *     'stx_range_slider shading',
     *     'backgroundColor',
     *     'rgba(200, 50, 50, 0.45)'
     * );
     *
     * @example
     * // Set the color of the bars of the range slider to red.
     * stxx.slider.updateStyles(
     *     'stx_range_slider shading',
     *     'borderTopColor',
     *     'rgba(255, 0, 0)'
     * );
     */

    this.updateStyles = function (obj, attribute, value) {
      stx.setStyle(obj, attribute, value);
      this.style = stx.canvasStyle("stx_range_slider shading");
    };

    this.display = function (on) {
      if (stx.layout.rangeSlider !== on) {
        // do this the way it was intended
        stx.layout.rangeSlider = on;
        stx.changeOccurred("layout");
        return;
      }

      ciqSlider.style.display = on ? "" : "none";
      stx.resizeChart();
      window.dispatchEvent(new Event("resize"));
      if (!on) return;
      self.resizeChart();
      self.initializeChart();
      self.draw();
      this.drawSlider();
    };

    this.setSymbol = function (symbol) {
      self.chart.panel.display = self.chart.symbol = symbol;
      self.setMainSeriesRenderer();
      self.resizeChart();
      this.adjustRange(stx.chart);
      self.draw();
      this.drawSlider();
    };

    this.acceptLayoutChange = function (layout) {
      var doDraw = false;

      if (self.layout.rangeSlider !== layout.rangeSlider) {
        stx.slider.display(layout.rangeSlider);
      }

      var relevantLayoutPropertiesForRedraw = ["chartType", "aggregationType", "periodicity", "interval", "timeUnit", "chartScale", "rangeSlider", "flipped", "extended", "marketSessions", "kagi", "rangebars", "renko", "priceLines", "pandf"];
      relevantLayoutPropertiesForRedraw.forEach(function (x) {
        if (!CIQ.equals(self.layout[x], layout[x])) {
          self.layout[x] = layout[x];
          doDraw = true;
        }
      });
      if (!CIQ.trulyVisible(ciqSlider)) return;

      if (doDraw) {
        self.setMainSeriesRenderer();
        self.draw();
        this.drawSlider();
      }
    };

    this.adjustRange = function (chart) {
      if (!chart.dataSet) return;
      if (!chart.endPoints || !chart.endPoints.begin) return;
      var myChart = self.chart;
      if (!myChart.width) return;
      var scrollOffset = 0,
          ticksOffset = 0;

      if (stx.quoteDriver) {
        var behaviorParams = {
          symbol: chart.symbol,
          symbolObject: chart.symbolObject,
          interval: stx.layout.interval
        };

        if ((behaviorParams.interval == "month" || behaviorParams.interval == "week") && !stx.dontRoll) {
          behaviorParams.interval = "day";
        }

        var behavior = stx.quoteDriver.getQuoteFeed(behaviorParams).behavior;

        if (behavior && behavior.bufferSize) {
          if (chart.moreAvailable) scrollOffset = behavior.bufferSize;
          if (stx.isHistoricalMode()) ticksOffset = behavior.bufferSize;
        }
      }

      myChart.baseline.defaultLevel = chart.baseline.actualLevel;
      myChart.scroll = Math.max(0, chart.dataSet.length - stx.tickFromDate(chart.endPoints.begin) - scrollOffset) + 1;
      myChart.maxTicks = myChart.scroll - ticksOffset + 1;
      self.layout.candleWidth = myChart.width / myChart.maxTicks;
    };

    this.copyData = function (chart) {
      if (!chart.dataSet) return;
      var myChart = self.chart;
      myChart.masterData = self.masterData = chart.masterData;
      myChart.dataSet = chart.dataSet;
      myChart.state = chart.state;
      self.draw();
      this.drawSlider();
    };

    this.calculateYAxisPosition = function () {
      var panel = self.chart.panel;
      var currentPosition = self.getYAxisCurrentPosition(panel.yAxis, panel);
      if (currentPosition != panel.yAxis.position) self.calculateYAxisPositions();
    };

    this.drawSlider = function () {
      if (!CIQ.trulyVisible(ciqSlider)) return;
      if (!stx.chart.dataSet || !stx.chart.dataSet.length) return;
      var style = this.style;
      if (!style) style = this.style = stx.canvasStyle("stx_range_slider shading");
      var chartPanel = stx.chart.panel,
          ctx = self.chart.context,
          segmentImage = self.chart.segmentImage || [],
          halfCandle = self.layout.candleWidth / 2;
      var left = self.tickLeft = Math.max(stx.tickFromPixel(chartPanel.left + halfCandle), 0);
      var right = self.tickRight = Math.min(stx.tickFromPixel(chartPanel.right - halfCandle), stx.chart.dataSet.length - 1);
      var pLeft = self.pixelLeft = self.pixelFromTick(left) - (segmentImage[left] ? segmentImage[left].candleWidth / 2 : halfCandle);
      var pRight = self.pixelRight = self.pixelFromTick(right) + (segmentImage[right] ? segmentImage[right].candleWidth / 2 : halfCandle);
      var leftBoundary = subholder.offsetLeft,
          rightBoundary = leftBoundary + subholder.offsetWidth;
      ctx.save();
      ctx.beginPath();
      ctx.fillStyle = style.backgroundColor;
      ctx.fillRect(leftBoundary, subholder.offsetTop, pLeft - leftBoundary, subholder.offsetHeight);
      ctx.fillRect(rightBoundary, subholder.offsetTop, pRight - rightBoundary, subholder.offsetHeight);
      ctx.strokeStyle = style.borderTopColor;
      ctx.lineWidth = parseInt(style.borderWidth, 10);
      ctx.moveTo(pLeft, subholder.offsetTop);
      ctx.lineTo(pLeft, subholder.offsetTop + subholder.offsetHeight);
      ctx.moveTo(pRight, subholder.offsetTop);
      ctx.lineTo(pRight, subholder.offsetTop + subholder.offsetHeight);
      ctx.stroke();
      ctx.beginPath();
      ctx.lineWidth = parseInt(style.width, 10);
      ctx.lineCap = "round";
      ctx.moveTo(pLeft, subholder.offsetTop + subholder.offsetHeight / 4);
      ctx.lineTo(pLeft, subholder.offsetTop + 3 * subholder.offsetHeight / 4);
      ctx.moveTo(pRight, subholder.offsetTop + subholder.offsetHeight / 4);
      ctx.lineTo(pRight, subholder.offsetTop + 3 * subholder.offsetHeight / 4);
      ctx.stroke();
      ctx.restore();
    };

    stx.addEventListener("layout", function (obj) {
      obj.stx.slider.acceptLayoutChange(obj.stx.layout);
    });
    stx.addEventListener("preferences", function (obj) {
      var language = obj.stx.preferences.language;

      if (CIQ.I18N && self.preferences.language != language) {
        CIQ.I18N.setLocale(self, language);
      }

      self.preferences.language = language;
      self.draw();
    });
    stx.addEventListener("symbolChange", function (obj) {
      if (obj.action == "master") obj.stx.slider.setSymbol(obj.symbol);
    });
    stx.addEventListener("symbolImport", function (obj) {
      if (obj.action == "master") obj.stx.slider.setSymbol(obj.symbol);
      obj.stx.slider.acceptLayoutChange(obj.stx.layout);
    });
    stx.addEventListener("theme", function (obj) {
      self.clearPixelCache();
      self.styles = {};
      self.chart.container.style.backgroundColor = "";

      if (CIQ.ThemeHelper) {
        var helper = new CIQ.ThemeHelper({
          stx: obj.stx
        });
        helper.params.stx = self;
        helper.update();
      }
    });
    stx.append("createDataSet", function () {
      this.slider.adjustRange(this.chart);
      this.slider.copyData(this.chart);
    });
    stx.append("draw", function () {
      if (!CIQ.trulyVisible(ciqSlider)) return;
      if (!self.chart.dataSet) return;
      this.slider.adjustRange(this.chart);
      this.slider.calculateYAxisPosition();
      self.draw();
      this.slider.drawSlider();
    });
    stx.prepend("resizeChart", function () {
      var ciqChart = chartContainer.parentElement,
          chartArea = ciqChart.parentElement;
      var heightOffset = parseFloat(getComputedStyle(ciqChart).height) - parseFloat(getComputedStyle(chartContainer).height);
      var totalHeightOfContainers = CIQ.elementDimensions(chartArea).height;
      var chartContainers = chartArea.querySelectorAll(".chartContainer");
      Array.from(chartContainers).forEach(function (container) {
        if (container !== chartContainer && CIQ.trulyVisible(container)) {
          totalHeightOfContainers -= CIQ.elementDimensions(container, {
            border: 1,
            padding: 1,
            margin: 1
          }).height;
        }
      });
      ciqChart.style.height = totalHeightOfContainers + "px";

      if (this.layout.rangeSlider) {
        if (self.chart.breakpoint !== this.chart.breakpoint) {
          self.notifyBreakpoint(this.chart.breakpoint);
        }

        ciqSlider.style.display = "";
        self.resizeChart();
        self.initializeChart();
        self.draw();
        this.slider.drawSlider();
      } else {
        ciqSlider.style.display = "none";
      }
    });
    ["mousedown", "touchstart", "pointerdown"].forEach(function (ev) {
      subholder.addEventListener(ev, function (e) {
        var start = self.backOutX(e.pageX);
        if (!start && start !== 0) return; // wrong event

        start -= e.target.offsetLeft;
        self.startDrag = start;
        self.startPixelLeft = self.pixelLeft;
        self.startPixelRight = self.pixelRight;
        var style = stx.slider.style;
        if (!style) style = stx.slider.style = stx.canvasStyle("stx_range_slider shading");
        var bw = parseInt(style.borderLeftWidth, 10);
        start += this.offsetLeft;
        if (start < self.pixelRight - bw) self.needsLeft = true;
        if (start > self.pixelLeft + bw) self.needsRight = true;
        if (CIQ.touchDevice) return;

        if (self.needsLeft && self.needsRight) {
          // change to grab only if drag started from viewport
          e.target.classList.add("stx-drag-chart");
        }
      }, {
        passive: false
      });
    });
    ["mouseup", "mouseover", "touchend", "pointerup"].forEach(function (ev) {
      subholder.addEventListener(ev, function (e) {
        var which = e.which,
            type = e.type;
        if (which === 1 && type !== "pointerup" && type !== "mouseup") return;
        e.target.classList.remove("stx-drag-chart");
        self.chart.panel.subholder.style.cursor = "ew-resize";
        self.startDrag = null;
        self.needsLeft = false;
        self.needsRight = false;
      });
    });
    ["mousemove", "touchmove", "pointermove"].forEach(function (ev) {
      subholder.addEventListener(ev, function (e) {
        var startDrag = self.startDrag;
        if (!startDrag && startDrag !== 0) return;
        var touches = e.touches;
        var movement = (touches && touches.length ? self.backOutX(touches[0].pageX) : self.backOutX(e.pageX)) - e.target.offsetLeft;
        if (!movement && movement !== 0) return; // wrong event

        movement -= startDrag;
        var tickLeft = self.tickLeft,
            tickRight = self.tickRight;
        var startPixelLeft = self.startPixelLeft,
            startPixelRight = self.startPixelRight;
        var needsLeft = self.needsLeft,
            needsRight = self.needsRight;

        if (needsLeft) {
          if (startPixelLeft + movement < self.chart.left) movement = self.chart.left - startPixelLeft;

          if (needsRight && startPixelRight + movement >= self.chart.right) {
            movement = self.chart.right - startPixelRight;
            if (!self.isHome()) movement += self.layout.candleWidth / 2; // force a right scroll
          }

          tickLeft = self.tickFromPixel(startPixelLeft + movement);
          if (needsRight) tickRight = tickLeft + self.tickRight - self.tickLeft;
        } else if (needsRight) {
          tickRight = Math.min(self.tickFromPixel(startPixelRight + movement), stx.chart.dataSet.length - 1);
        } else return;

        var newCandleWidth = stx.chart.width / (tickRight - tickLeft + 1);

        if (tickRight >= tickLeft && newCandleWidth >= stx.minimumCandleWidth) {
          self.tickLeft = tickLeft;
          self.tickRight = tickRight;
          stx.chart.scroll = stx.chart.dataSet.length - tickLeft;

          if (!needsLeft || !needsRight) {
            stx.setCandleWidth(newCandleWidth);
          }

          stx.micropixels = 0;
          stx.draw();
        }
      }, {
        passive: false
      });
    });
    this.adjustRange(stx.chart);
    this.copyData(stx.chart);
  };
};

var __js_addons_standard_shortcuts_ = function __js_addons_standard_shortcuts_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Displays a legend of keyboard shortcuts and the actions the shortcuts perform.
   *
   * Delegates display of the legend to the
   * [cq-floating-window]{@link WebComponents.cq-floating-window} web component by dispatching a
   * "floatingWindow" event (see
   * [floatingWindowEventListener]{@link CIQ.ChartEngine~floatingWindowEventListener}).
   *
   * Creates the legend from keyboard shortcut specifications contained in a configuration object;
   * for example, the default chart configuration object (see the {@tutorial Chart Configuration}
   * tutorial).
   *
   * Requires *addOns.js*.
   *
   * @param {object} params The constructor parameters.
   * @param {CIQ.ChartEngine} params.stx The chart engine instance for which the keyboard shortcuts
   * 		legend is created.
   * @param {object} params.config A configuration object that includes specifications for hot keys
   * 		and drawing tool keyboard shortcuts. Typically, this object is the chart configuration
   * 		object. See the {@tutorial Chart Configuration} tutorial for the data format for keyboard
   * 		shortcuts.
   * @param {number} [params.width="580"] The width of the floating window that contains the
   * 		keyboard shortcuts legend.
   * @param {boolean} [params.windowForEachChart=true] A flag that indicates whether each chart
   * 		instance in a multi-chart document has its own keyboard shortcuts legend. If false, all
   * 		charts share the same legend.
   *
   * @constructor
   * @name CIQ.Shortcuts
   * @since 8.2.0
   *
   * @example
   * new CIQ.Shortcuts(
   *     stx: stxx,
   *     config: {
   *         drawingTools: [{ label: "line", shortcut: "l" }],
   *         hotkeyConfig: {
   *             hotkeys: [{ label: "Pan chart up", action: "up", commands: ["ArrowUp", "Up"] }]
   *         }
   *     }
   * );
   */

  CIQ.Shortcuts = CIQ.Shortcuts || function () {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        stx = _ref.stx,
        _ref$width = _ref.width,
        width = _ref$width === void 0 ? 580 : _ref$width,
        _ref$windowForEachCha = _ref.windowForEachChart,
        windowForEachChart = _ref$windowForEachCha === void 0 ? true : _ref$windowForEachCha,
        config = _ref.config;

    if (!stx) {
      console.warn("The Shortcuts addon requires an stx parameter");
      return;
    }
    /**
     * The chart engine instance for which the keyboard shortcuts legend is created.
     *
     * @type {CIQ.ChartEngine}
     * @memberof CIQ.Shortcuts#
     * @alias stx
     * @since 8.2.0
     */


    this.stx = stx;
    /**
     * Width of the floating window that contains the keyboard shortcuts legend.
     *
     * @type {number}
     * @memberof CIQ.Shortcuts#
     * @alias width
     * @since 8.2.0
     */

    this.width = width;
    /**
     * In a multi-chart document, indicates whether each chart has its own keyboard shortcuts
     * legend. If false, all charts share the same legend.
     *
     * @type {boolean}
     * @memberof CIQ.Shortcuts#
     * @alias windowForEachChart
     * @since 8.2.0
     */

    this.windowForEachChart = windowForEachChart;
    this.content = this.getShortcutContent(config);
    this.enclosingContainer = stx.container.querySelector(".stx-subholder");
    this.ensureMessagingAvailable(stx);
    this.enableUI(stx);
    this.cssRequired = true;
    stx.shortcuts = this;
  };
  /**
   * Enables the keyboard shortcuts legend user interface.
   *
   * Adds a `showShortCuts` function to the {@link CIQ.UI.Layout} helper. The `showShortCuts`
   * function calls this class's [toggle]{@link CIQ.Shortcuts#toggle} function to show and hide the
   * keyboard shortcuts legend. Call `showShortCuts` in your application's user interface (see
   * example).
   *
   * This function is called when the add-on is instantiated.
   *
   * @param {CIQ.ChartEngine} stx The chart engine that provides the UI context for the keyboard
   * 		shortcuts legend.
   *
   * @memberof CIQ.Shortcuts
   * @since 8.2.0
   *
   * @example <caption>Create a button that shows and hides the keyboard shortcuts legend.</caption>
   * <div class="ciq-footer full-screen-hide">
   *     <div class="shortcuts-ui ciq-shortcut-button"
   *          stxtap="Layout.showShortcuts()"
   *          title="Toggle shortcut legend">
   *     </div>
   * </div>
   */


  CIQ.Shortcuts.prototype.enableUI = function (stx) {
    var _this = this;

    if (!(stx && CIQ.UI)) return;
    setTimeout(function () {
      var layout = stx.uiContext.getAdvertised("Layout");

      layout.showShortcuts = function (node, value) {
        return _this.toggle(value);
      };
    });
  };
  /**
   * Ensures that an instance of the [cq-floating-window]{@link WebComponents.cq-floating-window}
   * web component is available to handle event messaging and create the shortcuts legend floating
   * window.
   *
   * This function is called when the add-on is instantiated.
   *
   * @param {CIQ.ChartEngine} stx The chart engine that provides the UI context, which contains the
   * [cq-floating-window]{@link WebComponents.cq-floating-window} web component.
   *
   * @memberof CIQ.Shortcuts
   * @since 8.2.0
   */


  CIQ.Shortcuts.prototype.ensureMessagingAvailable = function (stx) {
    setTimeout(function () {
      var contextContainer = stx.uiContext.topNode;

      if (!contextContainer.querySelector("cq-floating-window")) {
        contextContainer.append(document.createElement("cq-floating-window"));
      }
    });
  };
  /**
   * Creates the contents of the keyboard shortcuts legend based on specifications contained in a
   * configuration object. The contents are displayed in a
   * [cq-floating-window]{@link WebComponents.cq-floating-window} web component.
   *
   * This function is called when the add-on is instantiated.
   *
   * @param {object} config A configuration object that includes specifications for drawing tool
   * 		keyboard shortcuts and hot keys. Typically, this object is the chart configuration object
   * 		(see the {@tutorial Chart Configuration} tutorial).
   * @return {string} The keyboard shortcuts legend as HTML.
   *
   * @memberof CIQ.Shortcuts
   * @since 8.2.0
   */


  CIQ.Shortcuts.prototype.getShortcutContent = function (config) {
    var drawingToolShortcuts = (config.drawingTools || []).filter(function (tool) {
      return tool.shortcut;
    }).map(function (_ref2) {
      var label = _ref2.label,
          shortcut = _ref2.shortcut;
      return "<div class=\"ciq-shortcut\">\n\t\t\t\t\t<div>".concat(label, "</div>\n\t\t\t\t\t<div><span>Alt</span> + <span>").concat(shortcut.toUpperCase(), "</span></div>\n\t\t\t\t</div>");
    }).join(""); // Alt + key combination produces unpredictable accent characters depending on keyboard mapping
    // default hotkeys include them for better coverage, avoid displaying them in legend

    var isAscii = function isAscii(str) {
      return str.charCodeAt(str.length - 1) < 127;
    };

    var wrapKeys = function wrapKeys(str) {
      return str === " + " ? "<span>+</span>" : str.split("+").map(function (el) {
        return el && el !== " " ? "<span>" + el + "</span>" : "";
      }).join(" + ");
    };

    var commandsToString = function commandsToString(commands) {
      return commands.map(function (command) {
        return command.replace(/Arrow|Key|Digit|^ | $/g, "");
      }).map(function (command) {
        return command.replace(/\+/, " + ");
      }).reduce(function (acc, command) {
        return !acc.includes(command) && isAscii(command) ? acc.concat(command) : acc;
      }, []).map(wrapKeys).join("<br>");
    };

    var container = this.stx.container.closest("cq-context");

    var extensionAvailable = function extensionAvailable(name) {
      return container.hasAttribute(name.toLowerCase() + "-active");
    };

    var hotkeys = (config.hotkeyConfig && config.hotkeyConfig.hotkeys || []).map(function (_ref3) {
      var label = _ref3.label,
          action = _ref3.action,
          commands = _ref3.commands,
          extension = _ref3.extension;

      if (extension && !extensionAvailable(extension)) {
        return "";
      }

      return "<div class=\"ciq-shortcut\"><div>".concat(label || action, "</div><div>").concat(commandsToString(commands), "</div></div>");
    }).join("");
    return "\n\t\t<div class=\"ciq-shortcut-container\">\n\t\t\t<div>\n\t\t\t\t<div><b>Drawing tools shortcuts</b></div>\n\t\t\t\t<div>".concat(drawingToolShortcuts, "</div>\n\t\t\t</div>\n\t\t\t<hr>\n\t\t\t<div>\n\t\t\t\t<div><b>Hotkeys</b></div>\n\t\t\t\t<div>").concat(hotkeys, "</div>\n\t\t\t</div>\n\t\t</div>\n\t");
  };
  /**
   * Opens and closes the floating window that contains the keyboard shortcuts legend.
   *
   * @param {boolean} [value] If true, the window is opened. If false, the window is closed.
   * 		If not provided, the window state is toggled. That is, the window is opened if it is
   * 		currently closed; closed, if it is currently open.
   *
   * @memberof CIQ.Shortcuts
   * @since 8.2.0
   */


  CIQ.Shortcuts.prototype.toggle = function (value) {
    var _this2 = this;

    this.stx.dispatch("floatingWindow", {
      type: "shortcut",
      title: "Shortcuts",
      content: this.content,
      container: this.enclosingContainer,
      onClose: function onClose() {
        return _this2.closed = true;
      },
      width: this.width,
      status: value,
      tag: this.windowForEachChart ? undefined : "shortcut"
    });
  };
};

var __js_addons_standard_tableView_ = function __js_addons_standard_tableView_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;
  /**
   * Creates an overlay that displays the visible chart data segment as a table.
   *
   * The overlay includes controls that enable users to copy the table data to the clipboard or
   * download the data as a character-separated values (CSV) file. See
   * {@link TableViewBuilder.dataToCsv} for the default separator character.
   *
   * The table view can be opened using the Alt+K keystroke combination and closed using the Escape
   * key (see the `tableView` action in `hotkeyConfig.hotkeys` in *js/defaultConfiguration.js*).
   *
   * Requires *addOns.js*.
   *
   * @param {object} params Configuration parameters.
   * @param {CIQ.ChartEngine} params.stx A reference to the chart engine that contains the chart for
   * 		which the table view is created.
   * @param {string} [params.minColumnWidth="84px"] The minimum width (including units) of the
   * 		table columns. **Note:** The units can be any CSS unit acceptable by the CSS `calc`
   * 		function.
   * @param {number} [params.coverUIMaxWidth=400] The chart width (in pixels) below which the table
   * 		view covers the entire chart, including user interface elements (symbol input field,
   * 		menus, etc.). For example, if the value of this parameter is 1000, the table view covers
   * 		the entire chart area if the chart width is <= 999 pixels.
   * @param {string} [params.coverContainer] A CSS selector used to obtain the DOM element that
   * 		ultimately contains the table view; for example, ".chartContainer".
   * @param {boolean} [params.usePreviousCloseForChange=true] Indicates whether the closing price of
   * 		the previous data point should be used instead of the opening price of the current data
   * 		point to determine the amount of change for the current data point; that is,
   * 		(current close - previous close) or (current close - current open).
   *
   * @constructor
   * @name CIQ.TableView
   * @since 8.1.0
   *
   * @example
   * new CIQ.TableView({ stx: stxx });
   */

  CIQ.TableView = CIQ.TableView || function () {
    var _this3 = this;

    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        stx = _ref4.stx,
        _ref4$minColumnWidth = _ref4.minColumnWidth,
        minColumnWidth = _ref4$minColumnWidth === void 0 ? "84px" : _ref4$minColumnWidth,
        _ref4$coverUIMaxWidth = _ref4.coverUIMaxWidth,
        coverUIMaxWidth = _ref4$coverUIMaxWidth === void 0 ? 400 : _ref4$coverUIMaxWidth,
        coverContainer = _ref4.coverContainer,
        _ref4$usePreviousClos = _ref4.usePreviousCloseForChange,
        usePreviousCloseForChange = _ref4$usePreviousClos === void 0 ? true : _ref4$usePreviousClos;

    if (!stx) {
      console.warn("The TableView addon requires an stx parameter");
      return;
    }
    /**
     * The chart engine instance that contains the chart for which the table view is created.
     *
     * @type CIQ.ChartEngine
     * @memberof CIQ.TableView#
     * @alias stx
     * @since 8.1.0
     */


    this.stx = stx;
    /**
     * Toggle to display and hide additional table view columns, such as % Change and Volume.
     *
     * **Note:** Data in the additional columns might not be present in the chart view because
     * the data is calculated (for example, % Change) or is not part of the standard chart
     * display (for example, Volume &mdash; which can be displayed with the
     * [Volume Chart]{@link CIQ.Studies.createVolumeChart} study).
     *
     * @type boolean
     * @memberof CIQ.TableView#
     * @alias viewAdditionalColumns
     * @since 8.1.0
     */

    this.viewAdditionalColumns = false;
    /**
     * Minimum width of the table view columns, including units. The units can be any CSS
     * unit acceptable by the CSS `calc` function.
     *
     * @type string
     * @memberof CIQ.TableView#
     * @alias minColumnWidth
     * @since 8.1.0
     */

    this.minColumnWidth = minColumnWidth;
    /**
     * The chart width in pixels below which the table view covers the entire chart, including
     * user interface elements, such as the menus and footer.
     *
     * @type number
     * @memberof CIQ.TableView#
     * @alias coverUIMaxWidth
     * @since 8.1.0
     */

    this.coverUIMaxWidth = coverUIMaxWidth;
    /**
     * A CSS selector used to obtain the DOM element that hosts the table view.
     *
     * @type string
     * @memberof CIQ.TableView#
     * @alias coverContainer
     * @since 8.1.0
     */

    this.coverContainer = coverContainer;
    /**
     * If true, the closing price of the previous data point is used instead of the opening
     * price of the current data point to determine the amount of change for the current data
     * point.
     *
     * @type boolean
     * @memberof CIQ.TableView#
     * @alias usePreviousCloseForChange
     * @since 8.1.0
     */

    this.usePreviousCloseForChange = usePreviousCloseForChange;
    /**
     * A reference to the {@link TableViewBuilder} namespace for access to the namespace
     * static methods.
     *
     * @type TableViewBuilder
     * @memberof CIQ.TableView#
     * @alias builder
     * @since 8.1.0
     */

    this.builder = TableViewBuilder;
    this.listeners = [];
    stx.tableView = this;
    this.cssRequired = true;

    if (CIQ.UI) {
      CIQ.UI.observeProperty("uiContext", stx, function (_ref5) {
        var uiContext = _ref5.value;
        if (!uiContext) return;
        setTimeout(function () {
          _this3.subscribeToChanges(uiContext); // Updated hotkey alias if available to action


          var tableViewKeyEntry = CIQ.getFromNS(uiContext.config, "hotkeyConfig.hotkeys", []).find(function (_ref6) {
            var action = _ref6.action;
            return action === "tableView";
          });

          if (tableViewKeyEntry) {
            tableViewKeyEntry.action = function () {
              var tableView = document.body.keystrokeHub.context.stx.tableView;

              if (tableView) {
                tableView.toggle();
                return true;
              }
            };
          }
        });
      });
    }
  };
  /**
   * Displays the table view.
   *
   * @param {object} [params] Configuration parameters.
   * @param {object} [params.config] Table column information.
   * @param {function} [params.onClose] Callback function to execute on closing the table view. The
   * 		callback enables synchronization of state in the application when the table view is
   * 		closed.
   *
   * @memberof CIQ.TableView
   * @since 8.1.0
   */


  CIQ.TableView.prototype.open = function (params) {
    var _this4 = this;

    if (params) {
      this.params = params;
    }

    var _ref7 = this.params || {},
        _ref7$config = _ref7.config,
        config = _ref7$config === void 0 ? {} : _ref7$config,
        onClose = _ref7.onClose;

    if (this.view) {
      this.close(false);
    }

    config.minColumnWidth = this.minColumnWidth;
    config.coverUIMaxWidth = this.coverUIMaxWidth;
    config.coverContainer = this.coverContainer;
    this.onClose = onClose;
    this.view = this.builder.createTable(this.stx, config);
    if (!this.view) return;
    if (CIQ.I18N) CIQ.I18N.translateUI(null, this.view);
    var stx = this.stx;
    var close = this.close.bind(this);
    setTimeout(function () {
      return _this4.removeCloseListener = getCloseListener(_this4);
    });
    var scrollbarStyling = CIQ.getFromNS(stx, "uiContext.config.scrollbarStyling");

    if (scrollbarStyling) {
      scrollbarStyling.refresh(this.view.querySelector("tbody"));
      scrollbarStyling.refresh(this.view.querySelector(".ciq-data-table-wrapper"), {
        suppressScrollY: true
      });
    }

    function getCloseListener(self) {
      var contextNode = stx.uiContext.topNode;

      var withinTable = function withinTable(el) {
        return el.closest(".ciq-data-table-container");
      };

      var closeHandler = function closeHandler(_ref8) {
        var target = _ref8.target;
        return !withinTable(target) && close();
      };

      contextNode.addEventListener("click", closeHandler);

      var handleKeydown = function handleKeydown(e) {
        if (e.code === "Escape") {
          var tableView = document.body.keystrokeHub.context.stx.tableView;

          if (tableView) {
            tableView.close();
            e.preventDefault();
          }
        }
      };

      document.body.addEventListener("keydown", handleKeydown); // Use modal functionality available in menu

      var uiManager = CIQ.getFn("UI.getUIManager")();

      if (uiManager) {
        // Menu item requires show and hide providing no-op functions
        self.view.show = self.view.hide = function () {};

        uiManager.openMenu(self.view, {});
      }

      return function () {
        contextNode.removeEventListener("click", closeHandler);
        document.body.removeEventListener("keydown", handleKeydown);
        if (uiManager) uiManager.closeMenu(self.view);
      };
    }
  };
  /**
   * Closes the table view.
   *
   * @param {boolean} [notify=true] Indicates whether the `onClose` callback function is set (see
   * 		[open]{@link CIQ.TableView#open}).
   *
   * @memberof CIQ.TableView
   * @since 8.1.0
   */


  CIQ.TableView.prototype.close = function () {
    var notify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

    if (this.view) {
      this.view.remove();
      this.view = null;
    }

    if (notify && this.onClose) {
      this.onClose();
    }

    if (this.removeCloseListener) {
      this.removeCloseListener();
      this.removeCloseListener = null;
    }
  };
  /**
   * Opens the table view if it is closed. Closes the table view if it is open.
   *
   * @memberof CIQ.TableView
   * @since 8.1.0
   */


  CIQ.TableView.prototype.toggle = function () {
    this[this.view ? "close" : "open"]();
  };
  /**
   * Subscribes to changes in the table view component communication channel, which enables other
   * components to open and close the table view.
   *
   * @param {CIQ.UI.Context} uiContext The user interface context of the table view. Provides the
   * 		communication channel path that identifies the table view channel.
   * @param {string} [channelPath] Specifies the channel path if the path is not available in the
   * 		context configuration provided by `uiContext`.
   *
   * @memberof CIQ.TableView
   * @since 8.1.0
   */


  CIQ.TableView.prototype.subscribeToChanges = function (uiContext) {
    var channelPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "channels.tableView";
    var _CIQ$UI$BaseComponent = CIQ.UI.BaseComponent.prototype,
        channelSubscribe = _CIQ$UI$BaseComponent.channelSubscribe,
        channelWrite = _CIQ$UI$BaseComponent.channelWrite;

    var _ref9 = uiContext.config || {},
        _ref9$channels = _ref9.channels;

    _ref9$channels = _ref9$channels === void 0 ? {} : _ref9$channels;
    var _ref9$channels$tableV = _ref9$channels.tableView,
        tableView = _ref9$channels$tableV === void 0 ? channelPath : _ref9$channels$tableV;
    var stx = this.stx;
    channelSubscribe(tableView, function (value) {
      if (value) {
        stx.tableView.open({
          onClose: function onClose() {
            channelWrite(tableView, false, stx);
          }
        });
      } else {
        stx.tableView.close();
      }
    }, stx);
  };
  /**
   * Namespace for {@link CIQ.TableView} creation&ndash;related properties and functions.
   *
   * @namespace
   * @name TableViewBuilder
   * @since 8.1.0
   */


  function TableViewBuilder() {}
  /**
   * The column header configuration for the table view.
   *
   * Can be used for rearranging the column order, removing columns, and updating labels.
   *
   * **Note:** Adding new columns has no effect.
   *
   * @type Object.<string, {label: string, cls: string|undefined}>
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.colHeaders = {
    date: {
      label: "Date"
    },
    open: {
      label: "Open"
    },
    high: {
      label: "High"
    },
    low: {
      label: "Low"
    },
    close: {
      label: "Close"
    },
    pctChange: {
      label: "% Change",
      cls: "ciq-extra"
    },
    pctChangeVsAvg: {
      label: "% Change vs Average",
      cls: "ciq-extra"
    },
    volume: {
      label: "Volume",
      cls: "ciq-extra"
    }
  };
  /**
   * Number of decimal places to display for percent formatted columns
   *
   * @type number
   * @memberof TableViewBuilder
   * @since 8.1.0
   */

  TableViewBuilder.percentDecimalPlaces = 2;
  /**
   * Creates a table view as an HTMLElement overlay over a chart container. The table view displays
   * a snapshot of the visible chart data segment.
   *
   * The overlay contains buttons for copying and saving the table data and for displaying
   * additional table columns.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart for which
   * 		the table view is created.
   * @param {object} [config] Configuration parameters.
   * @param {function} [config.dateFormatter] Formats table date fields.
   * @param {function} [config.valueFormatter] Formats table values.
   * @param {function} [config.volumeFormatter] Formats the table volume field.
   * @param {function} [config.fileNameFormatter] Formats the name of the file that contains the
   * 		downloaded table data.
   * @param {string} [config.minColumnWidth="84px"] The minimum width (including units) of the
   * 		table columns. **Note:** The units can be any CSS unit acceptable by the CSS `calc`
   * 		function.
   * @return {HTMLElement}
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */

  TableViewBuilder.createTable = function (stx) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (!stx.chart || !stx.chart.dataSegment) return;
    var builder = stx.tableView.builder;
    var getChartData = builder.getChartData,
        dataToHtml = builder.dataToHtml,
        dataToCsv = builder.dataToCsv,
        downloadCsv = builder.downloadCsv,
        getDateFormatter = builder.getDateFormatter,
        getValueFormatter = builder.getValueFormatter,
        getVolumeFormatter = builder.getVolumeFormatter,
        getFilenameFormatter = builder.getFilenameFormatter,
        getSeriesDataNames = builder.getSeriesDataNames,
        getStudyDataNames = builder.getStudyDataNames,
        getChartCover = builder.getChartCover;
    var colHeaders = Object.assign({}, this.colHeaders);

    if (!stx.chart.highLowBars) {
      delete colHeaders.open;
      delete colHeaders.high;
      delete colHeaders.low;
    }

    if (!stx.tableView.viewAdditionalColumns) {
      for (var key in colHeaders) {
        if (colHeaders[key].cls) {
          delete colHeaders[key];
        }
      }
    }

    var labels = Object.values(colHeaders).map(function (item) {
      return item.label;
    });
    var seriesNames = getSeriesDataNames(stx);
    seriesNames.forEach(function (item) {
      return colHeaders[item] = {
        label: item
      };
    });
    var studyNames = getStudyDataNames(stx);
    studyNames.forEach(function (item) {
      if (!labels.includes(item)) colHeaders[item] = {
        label: item
      };
    });
    var additionalDataFields = seriesNames.concat(studyNames);
    var _config$dateFormatter = config.dateFormatter,
        dateFormatter = _config$dateFormatter === void 0 ? getDateFormatter(stx) : _config$dateFormatter,
        _config$valueFormatte = config.valueFormatter,
        valueFormatter = _config$valueFormatte === void 0 ? getValueFormatter(stx) : _config$valueFormatte,
        _config$percentFormat = config.percentFormatter,
        percentFormatter = _config$percentFormat === void 0 ? getValueFormatter(stx, this.percentDecimalPlaces) : _config$percentFormat,
        _config$volumeFormatt = config.volumeFormatter,
        volumeFormatter = _config$volumeFormatt === void 0 ? getVolumeFormatter(stx) : _config$volumeFormatt,
        _config$fileNameForma = config.fileNameFormatter,
        fileNameFormatter = _config$fileNameForma === void 0 ? getFilenameFormatter(stx) : _config$fileNameForma,
        _config$minColumnWidt = config.minColumnWidth,
        minColumnWidth = _config$minColumnWidt === void 0 ? "84px" : _config$minColumnWidt;
    var arr = getChartData(stx, {
      dateFormatter: dateFormatter,
      valueFormatter: valueFormatter,
      percentFormatter: percentFormatter,
      volumeFormatter: volumeFormatter,
      additionalDataFields: additionalDataFields
    });
    var cover = getChartCover(stx, config);
    var _stx$chart = stx.chart,
        symbolDisplay = _stx$chart.symbolDisplay,
        symbol = _stx$chart.symbol;
    var toolbar = builder.getCoverToolbar({
      symbol: symbolDisplay || symbol,
      viewAdditionalColumns: stx.tableView.viewAdditionalColumns,
      copyFn: copyFn,
      downloadFn: downloadFn,
      toggleAdditionalColumnsFn: function toggleAdditionalColumnsFn() {
        var tableView = stx.tableView;
        tableView.viewAdditionalColumns = !tableView.viewAdditionalColumns;
        tableView.open();
      },
      closeFn: function closeFn() {
        return stx.tableView.close();
      }
    });
    cover.appendChild(toolbar);
    var htmlTable = dataToHtml(arr, {
      colHeaders: colHeaders,
      minColumnWidth: minColumnWidth
    });
    cover.appendChild(htmlTable);
    return cover;

    function copyFn() {
      var contentEl = document.createElement("textArea");
      document.body.appendChild(contentEl);
      contentEl.textContent = dataToCsv(arr, {
        colHeaders: colHeaders
      });
      contentEl.select();
      document.execCommand("copy");
      contentEl.remove();
      stx.dispatch("notification", "copytoclipboard");
    }

    function downloadFn() {
      var csvData = dataToCsv(arr, {
        colHeaders: colHeaders
      });
      var fileName = fileNameFormatter(csvData);
      downloadCsv(csvData, fileName);
    }
  };
  /**
   * Creates an HTML table containing the chart data and column headers (see
   * {@link TableViewBuilder.colHeaders}).
   *
   * @param {object[]} data The chart data.
   * @param {object} params Configuration parameters.
   * @param {Object.<string, {label: string, cls: string|undefined}>} params.colHeaders The column
   * 		headers as defined in {@link TableViewBuilder.colHeaders}.
   * @param {string} [params.minColumnWidth] The minimum width of the table columns, including units.
   * 		**Note:** The units can be any CSS unit acceptable by the CSS `calc` function.
   * @return {HTMLElement} A table containing the chart data and column headers.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.dataToHtml = function (data, _ref10) {
    var colHeaders = _ref10.colHeaders,
        minColumnWidth = _ref10.minColumnWidth;
    var keyLength = Object.keys(colHeaders).length;
    var colWidth = "calc((100% - ".concat(10 + keyLength * 4, "px ) / ").concat(keyLength, ")");
    var tableHeader = Object.entries(colHeaders).map(function (_ref11, index) {
      var _ref12 = _slicedToArray(_ref11, 2),
          label = _ref12[1].label;

      return "<th\n\t\t\tscope=\"col\"\n\t\t\tstyle=\"width: ".concat(colWidth, ";\"\n\t\t\t>").concat(label.replace("(", "  ("), "</th>");
    });
    var tableRows = data.map(function (row) {
      var htmlRow = Object.keys(colHeaders).map(function (key, index) {
        var value = row[key];
        return index === 0 ? "<th scope=\"row\"\n\t\t\t\t\t\t\t\tstyle=\"width: ".concat(colWidth, "\"\n\t\t\t\t\t\t\t\t>").concat(value, "</th>") : "<td style=\"width: ".concat(colWidth, "\">").concat(value, "</td>");
      }).join("");
      return "<tr>".concat(htmlRow, "</tr>");
    });
    var tableWrapper = document.createElement("div");
    tableWrapper.classList.add("ciq-data-table-wrapper");
    var minWidth = minColumnWidth ? "calc(".concat(keyLength, " * ").concat(minColumnWidth, ")") : "";
    tableWrapper.innerHTML = "\n\t\t<table class=\"header-fixed\"\t".concat(minWidth ? "style=\"min-width: ".concat(minWidth, "\"") : "", ">\n\t\t<thead>").concat(tableHeader.join(""), "</thead>\n\t\t<tbody>").concat(tableRows.join(""), "</tbody>\n\t\t</table>");
    return tableWrapper;
  };
  /**
   * Transforms the chart data into a character-separated values (CSV) file, including column headers.
   *
   * @param {object[]} data The chart data.
   * @param {object} params Configuration parameters.
   * @param {Object.<string, {label: string, cls: string|undefined}>} params.colHeaders The column
   * 		headers as defined in {@link TableViewBuilder.colHeaders}.
   * @param {string} params.colSeparator="\t" The column separator for the CSV format.
   * @return {string} The column headers and chart data as a CSV file.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.dataToCsv = function (data, _ref13) {
    var colHeaders = _ref13.colHeaders,
        _ref13$colSeparator = _ref13.colSeparator,
        colSeparator = _ref13$colSeparator === void 0 ? "\t" : _ref13$colSeparator;
    var tableHeader = Object.entries(colHeaders).map(function (_ref14) {
      var _ref15 = _slicedToArray(_ref14, 2),
          label = _ref15[1].label;

      return "\"".concat(label, "\"");
    }).join(colSeparator);
    var tableRows = data.map(function (row) {
      return Object.keys(colHeaders).map(function (key) {
        return "\"".concat(row[key], "\"");
      }).join(colSeparator);
    });
    return "".concat(tableHeader, "\n").concat(tableRows.join("\n"));
  };
  /**
   * Downloads the table view as a character-separated values (CSV) file.
   *
   * @param {string} csvString The table view in the form of character-separated data.
   * @param {string} filename The name given to the download file.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.downloadCsv = function (csvString) {
    var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "filename";
    var blob = new Blob([csvString], {
      type: "text/csv;charset=utf-8;"
    });
    var a = document.createElement("a");
    a.href = window.URL.createObjectURL(blob, {
      type: "text/plain"
    });
    a.download = "".concat(filename, ".csv");
    a.style.display = "none";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
  };
  /**
   * Extracts OHLC (open, high, low, close) data from the chart.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart from which
   * 		the data is extracted.
   * @param {object} params Configuration parameters.
   * @param {function} [params.dateFormatter] Formats date fields.
   * @param {function} [params.valueFormatter] Formats OHLC and other values.
   * @param {function} [params.percentFormatter] Formats percent fields.
   * @param {function} [params.volumeFormatter] Formats the volume field.
   * @param {string[]} [params.additionalDataFields] An array of additional data field names for
   * 		comparison series and study data.
   * @return {object[]} The formatted chart data.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getChartData = function (stx, _ref16) {
    var dateFormatter = _ref16.dateFormatter,
        valueFormatter = _ref16.valueFormatter,
        percentFormatter = _ref16.percentFormatter,
        volumeFormatter = _ref16.volumeFormatter,
        additionalDataFields = _ref16.additionalDataFields;
    var data = stx.chart.dataSegment.filter(function (item) {
      return item !== null;
    });
    var usePreviousCloseForChange = stx.tableView.usePreviousCloseForChange;
    var out = [];
    var length = 0;
    var avgPctChange = data.reduce(function (acc, _ref17) {
      var Close = _ref17.Close,
          iqPrevClose = _ref17.iqPrevClose,
          Open = _ref17.Open;
      var Base = usePreviousCloseForChange ? iqPrevClose : Open;

      if (typeof Close === "undefined" || Number.isNaN(Close) || typeof Base === "undefined" || Number.isNaN(Base)) {
        return acc;
      }

      length++;
      return acc + (Close - Base) / Base;
    }, 0) / length;
    data.forEach(function (item, index) {
      var DT = item.DT,
          displayDate = item.displayDate,
          High = item.High,
          Low = item.Low,
          Open = item.Open,
          Close = item.Close,
          iqPrevClose = item.iqPrevClose,
          Volume = item.Volume;
      var Base = usePreviousCloseForChange ? iqPrevClose : Open;
      var pctChange = (Close - Base) / Base;
      var date = displayDate || (stx.displayZone ? CIQ.convertTimeZone(DT, stx.dataZone, stx.displayZone) : DT);
      var obj = {
        DT: DT,
        date: dateFormatter(date),
        open: valueFormatter(Open),
        close: valueFormatter(Close),
        change: valueFormatter(Close - Base),
        pctChange: percentFormatter(pctChange * 100),
        pctChangeVsAvg: percentFormatter((pctChange - avgPctChange) * 100),
        high: valueFormatter(High),
        low: valueFormatter(Low),
        volume: volumeFormatter(Volume)
      };
      additionalDataFields.forEach(function (fieldName) {
        var value = item[fieldName];

        if (value == null) {
          obj[fieldName] = "";
          return;
        }

        if (_typeof(value) === "object") {
          value = value.Close;
        }

        obj[fieldName] = valueFormatter(value);
      });
      out.push(obj);
    });
    out.sort(function (a, b) {
      return b.DT - a.DT;
    });
    return out;
  };
  /**
   * Creates a function that formats table view date fields.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart for which
   * 		the date fields are formatted.
   * @return {function} A date formatter.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getDateFormatter = function (stx) {
    return function (dt, panel) {
      if (!dt) return "";
      return CIQ.displayableDate(stx, stx.chart, dt, true);
    };
  };
  /**
   * Creates a function that formats table view value fields.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart for which
   * 		the value fields are formatted.
   * @param {number} [decimalPlaces] Number of decimal places to use, overrides any auto-detection of decimal places in data.
   * @return {function} A value formatter.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getValueFormatter = function (stx, decimalPlaces) {
    var _stx$chart2 = stx.chart,
        panel = _stx$chart2.panel,
        yAxis = _stx$chart2.yAxis,
        chartScale = stx.layout.chartScale;
    var formatValue;

    if (yAxis.originalPriceFormatter && yAxis.originalPriceFormatter.func) {
      formatValue = function formatValue(value) {
        return yAxis.originalPriceFormatter.func(stx, panel, value, decimalPlaces);
      };
    } else if (yAxis.priceFormatter && chartScale != "percent" && chartScale != "relative") {
      formatValue = function formatValue(value) {
        return yAxis.priceFormatter(stx, panel, value, decimalPlaces);
      };
    } else {
      formatValue = function formatValue(value) {
        return stx.formatYAxisPrice(value, panel, decimalPlaces);
      };
    }

    return function (value) {
      return formatValue(value).replace(/^-*0\.0*$/, "0");
    }; // display 0.00 as 0
  };
  /**
   * Creates a function that formats the table view volume field.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart for which
   * 		the volume field is formatted.
   * @return {function} A volume field formatter.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getVolumeFormatter = function (stx) {
    return function (num) {
      if (num == null) return "";

      if (stx.internationalizer) {
        return stx.internationalizer.priceFormatters[0].format(num);
      }

      var num_parts = num.toString().split(".");
      num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      return num_parts[0];
    };
  };
  /**
   * Creates a function that creates and formats a file name from the chart symbol and table view
   * data.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart whose
   * 		symbol and data is included in the file name.
   * @return {function} A function that creates and formats a file name.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getFilenameFormatter = function (stx) {
    return function (csvData) {
      var symbol = stx.chart.symbolDisplay || stx.chart.symbol;
      var firstDate, lastDate;

      if (csvData) {
        var rows = csvData.split("\n");

        if (rows.length > 1) {
          var _ref18 = rows[1].match(/^"([^"]*)"/) || [];

          var _ref19 = _slicedToArray(_ref18, 2);

          var _ref19$ = _ref19[1];
          firstDate = _ref19$ === void 0 ? "" : _ref19$;

          var _ref20 = rows[rows.length - 1].match(/^"([^"]*)"/) || [];

          var _ref21 = _slicedToArray(_ref20, 2);

          var _ref21$ = _ref21[1];
          lastDate = _ref21$ === void 0 ? "" : _ref21$;
          firstDate = firstDate.replace(/:/g, ".").replace(/\//g, "-");
          lastDate = lastDate.replace(/:/g, ".").replace(/\//g, "-");
        }
      }

      return "".concat(symbol).concat(firstDate ? " (".concat(firstDate, " _ ").concat(lastDate, ")") : "");
    };
  };
  /**
   * Creates and attaches an HTML container element to the DOM. The element covers the chart and
   * contains the table view.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart over which
   * 		the cover is placed.
   * @param {object} params Configuration parameters.
   * @param {number} [params.coverUIMaxWidth] The width of the chart (in pixels) below which the
   * 		cover element overlays the entire chart, including user interface elements.
   * @param {string} [params.coverContainer] A CSS selector used to obtain the DOM element that
   * 		serves as the parent element of the cover element; for example, ".chartContainer".
   * @return {HTMLElement} The cover element.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getChartCover = function (stx, _ref22) {
    var coverUIMaxWidth = _ref22.coverUIMaxWidth,
        coverContainer = _ref22.coverContainer;
    var parentElement = coverContainer && document.querySelector(coverContainer) || (stx.uiContext && stx.container.offsetWidth < coverUIMaxWidth ? stx.uiContext.topNode : stx.container.parentElement.parentElement);
    var cover = document.createElement("div");
    Object.assign(cover.style, {
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    });
    cover.classList.add("ciq-data-table-container");
    parentElement.appendChild(cover);
    return cover;
  };
  /**
   * Creates a toolbar containing the table title and controls used to copy and download the table
   * data and add additional table columns.
   *
   * @param {object} params Function parameters.
   * @param {string} params.symbol An instrument symbol, which is used as the table title in the
   * 		toolbar. Should be the symbol of the chart main series.
   * @param {boolean} params.viewAdditionalColumns Toggle that specifies whether the label for the
   * 		additional columns button should indicate that additional columns will be shown or hidden.
   * 		If this parameter is true, the label indicates additional table columns will be shown; if
   * 		false, hidden.
   * @param {function} [params.copyFn] Event handler for selection of the copy control.
   * @param {function} [params.downloadFn] Event handler for selection of the download control.
   * @param {function} [params.toggleAdditionalColumnsFn] Event handler for selection of the
   * 		additional column control.
   * @param {function} [params.closeFn] Event handler for selection of the table view close (X)
   * 		control.
   * @return {HTMLElement} The toolbar, containing title and controls.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getCoverToolbar = function (_ref23) {
    var symbol = _ref23.symbol,
        viewAdditionalColumns = _ref23.viewAdditionalColumns,
        copyFn = _ref23.copyFn,
        downloadFn = _ref23.downloadFn,
        toggleAdditionalColumnsFn = _ref23.toggleAdditionalColumnsFn,
        closeFn = _ref23.closeFn;
    var toolBar = document.createElement("div");
    toolBar.classList.add("ciq-data-table-toolbar");
    toolBar.innerHTML = "\n\t\t<div class=\"ciq-data-table-title\"></div>\n\t\t<button class=\"ciq-data-table-copy\">".concat(this.copyLabel, "</button>\n\t\t<button class=\"ciq-data-table-download\">").concat(this.downloadLabel, "</button>\n\t\t<button class=\"ciq-data-table-additionalColumns\">").concat(this.getAdditionalColumnLabel(viewAdditionalColumns), "</button>\n\t\t<cq-close />\n\t");
    var titleEl = toolBar.querySelector(".ciq-data-table-title");
    titleEl.textContent = symbol;
    var btnCopy = toolBar.querySelector(".ciq-data-table-copy");

    if (copyFn) {
      btnCopy.addEventListener("click", copyFn);
    } else {
      btnCopy.style.display = "none";
    }

    var btnDownload = toolBar.querySelector(".ciq-data-table-download");

    if (downloadFn) {
      btnDownload.addEventListener("click", function () {
        btnDownload.blur();
        downloadFn();
      });
    } else {
      btnDownload.style.display = "none";
    }

    var btnAdditionalColumns = toolBar.querySelector(".ciq-data-table-additionalColumns");

    if (toggleAdditionalColumnsFn) {
      btnAdditionalColumns.addEventListener("click", toggleAdditionalColumnsFn);
    } else {
      btnAdditionalColumns.style.display = "none";
    }

    toolBar.close = closeFn;
    return toolBar;
  };
  /**
   * Label for the copy button on the table view toolbar.
   *
   * @type string
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.copyLabel = "Copy";
  /**
   * Label for the download button on the table view toolbar.
   *
   * @type string
   * @memberof TableViewBuilder
   * @since 8.1.0
   */

  TableViewBuilder.downloadLabel = "Download";
  /**
   * Gets the label of the additional columns button on the table view toolbar.
   *
   * @param {boolean} viewingAdditionalColumns If this parameter is true, the label should indicate
   * 		additional table columns will be shown; if false, hidden.
   * @return {string} The button label.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */

  TableViewBuilder.getAdditionalColumnLabel = function (viewingAdditionalColumns) {
    return "<span>".concat(viewingAdditionalColumns ? "- " : "+ ", "</span>Additional columns");
  };
  /**
   * Obtains the names of all studies that have data in the chart's visible data segment.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the chart studies.
   * @return {string[]} The names of all studies that are in the visible portion of the chart.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getStudyDataNames = function (stx) {
    return Object.values(stx.layout.studies || {}).map(getDataNames).reduce(function (acc, item) {
      return acc.concat(item);
    }, []);

    function getDataNames(study) {
      return Object.keys(study.outputMap).filter(hasData);
    }

    function hasData(name) {
      return stx.chart.dataSegment.some(function (data) {
        return data && data[name];
      });
    }
  };
  /**
   * Obtains the symbols of all comparison series that have data in the chart's visible data
   * segment.
   *
   * @param {CIQ.ChartEngine} stx A reference to the chart engine that contains the comparison
   * 		series.
   * @return {string[]} The names (symbols) of all comparison series that are in the visible
   * 		portion of the chart.
   *
   * @memberof TableViewBuilder
   * @since 8.1.0
   */


  TableViewBuilder.getSeriesDataNames = function (stx) {
    return Object.values(stx.chart.seriesRenderers || {}).filter(function (item) {
      return item.params.name !== "_main_series";
    }).map(function (item) {
      return item.seriesParams.map(function (_ref24) {
        var symbol = _ref24.symbol;
        return symbol;
      });
    }).reduce(function (acc, item) {
      return acc.concat(item);
    }, []);
  };
  /**
   * CIQ.UI.Context interface placeholder to be augmented in *componentUI.js* with properties.
   *
   * @tsinterface CIQ.UI~Context
   */

};

var __js_addons_standard_tooltip_ = function __js_addons_standard_tooltip_(_exports) {
  /* global _CIQ, _timezoneJS, _SplinePlotter */
  var CIQ = typeof _CIQ !== "undefined" ? _CIQ : _exports.CIQ;

  if (!CIQ.Marker) {
    console.error("tooltip addon requires first activating markers feature.");
  } else {
    /**
     * Add-on that creates a detailed tooltip as the user's mouse hovers over data points on the
     * chart. The tooltip contains information such as the open, high, low, and close prices of
     * stock quotes.
     *
     * Tooltip example:
     * <iframe width="800" height="500" scrolling="no" seamless="seamless" align="top"
     *         style="float:top"
     *         src="https://jsfiddle.net/chartiq/5kux6j8p/embedded/result,js,html/"
     *         allowfullscreen="allowfullscreen" frameborder="1">
     * </iframe>
     *
     * **Note:** Prior to version 8.2.0, the tooltip was directly linked to the crosshairs. The
     * crosshairs had to be active for the tooltip to be displayed.
     *
     * Requires *addOns.js* and *markers.js*, or the bundle *standard.js*.
     *
     * There can be only one `CIQ.Tooltip` per chart.
     *
     * Color and layout can be customized by overriding the CSS rule-sets defined for the
     * `stx-hu-tooltip` and related type selectors in *stx-chart.css*. Do not modify
     * *stx-chart.css*; create a separate style sheet file that overrides *stx-chart.css* in the
     * CSS cascade. See the example below.
     *
     * `CIQ.Tooltip` automatically creates its own HTML inside the chart container. Here is an
     * example of the structure (there will be one field tag per displayed element):
     * ```
     * <stx-hu-tooltip>
     *     <stx-hu-tooltip-field>
     *         <stx-hu-tooltip-field-name></stx-hu-tooltip-field-name>
     *         <stx-hu-tooltip-field-value></stx-hu-tooltip-field-value>
     *     </stx-hu-tooltip-field>
     * </stx-hu-tooltip>
     * ```
     * By default, the `stx-hu-tooltip-field` elements are inserted in the following order:
     * - DT
     * - Open
     * - High
     * - Low
     * - Close
     * - Volume
     * - series
     * - studies
     *
     * But the default layout can be changed. You can override the order of fields or change the
     * labels by manually inserting the HTML that the tooltip would otherwise have created for
     * that field. If no override HTML is found for a particular field, the default is used.
     * **Note:** This HTML must be placed inside the chart container.
     *
     * All of the code is provided in *addOns.js* and can be fully customized by copying the
     * source code from the library and overriding the functions with your changes. Be sure to
     * never modify a library file, as this will hinder upgrades.
     *
     * For example, concatenating the field name (e.g., "Jaw") with the study name (e.g.,
     * "Alligator" ) is the default behavior of the tooltip for displaying the value title. Feel
     * free to override this behavior by creating your own custom version of the `renderFunction()`
     * for the `CIQ.Tooltip`. To do this, copy the entire `CIQ.Tooltip` code (found in *addOns.js*)
     * and make the changes to your custom version. Load your custom version instead. Specifically,
     * look for the following code in the `renderFunction()` that pushes out the text for each
     * study field:
     * ```
     * let newFieldName = document.createElement("stx-hu-tooltip-field-name");
     * newFieldName.innerHTML = this.translateIf(fieldName);
     * newField.appendChild(newFieldName);
     * ```
     * Replace `fieldName` with anything you want to use as the field title and push that instead.
     *
     * Visual Reference:<br>
     * ![stx-hu-tooltip](stx-hu-tooltip.png "stx-hu-tooltip")
     *
     * @param {object} tooltipParams The constructor parameters.
     * @param {CIQ.ChartEngine} [tooltipParams.stx] The chart object.
     * @param {boolean} [tooltipParams.ohl] Set to true to show OHL data (Close is always shown).
     * @param {boolean} [tooltipParams.volume] Set to true to show Volume.
     * @param {boolean} [tooltipParams.series] Set to true to show value of series.
     * @param {boolean} [tooltipParams.studies] Set to true to show value of studies.
     * @param {boolean} [tooltipParams.showOverBarOnly] Set to true to show the tooltip only when
     * 		the mouse is over the primary line/bars.
     * @param {boolean} [tooltipParams.change] Set to true to show the change in daily value
     * 		when the internal chart periodicity is a daily interval (see
     * 		{@link CIQ.ChartEngine.isDailyInterval}).
     * @param {boolean} [tooltipParams.interpolation] Set to true to show the estimated value when
     * 		there is no data between bars. **Note:** A value of `null` is not considered missing
     * 		data.
     * @param {boolean} [tooltipParams.useDataZone] Set to true to show the date in the `dataZone`
     * 		time zone; false, to use the `displayZone` time zone (see
     * 		{@link CIQ.ChartEngine#setTimeZone}).
     * @param {boolean} [tooltipParams.showBarHighlight=true] Specifies whether the bar (data
     * 		point) the mouse is hovering over is highlighted. Applies to the floating tooltip only
     * 		(the dynamic tooltip points to the bar). If the crosshairs are active, this parameter
     * 		is ignored.
     *
     * @constructor
     * @name CIQ.Tooltip
     * @since
     * - 09-2016-19
     * - 5.0.0 Now `tooltipParams.showOverBarOnly` is available to show tooltip only when over the
     * 		primary line/bars.
     * - 5.1.1 `tooltipParams.change` set to true to show the change in daily value when
     * 		displaying a daily interval.
     * - 6.2.5 New `tooltipParams.interpolation` flag to show estimated value for missing series
     * 		data points.
     * - 7.0.0 New `tooltipParams.useDataZone` flag to show the date in either the `dataZone` or
     * 		`displayZone` date/time.
     * - 8.2.0 Decoupled `CIQ.Tooltip` from the crosshairs and added highlighting of the data
     * 		point (or bar) the mouse is hovering over. The new `tooltipParams.showBarHighlight`
     * 		parameter enables or disables the highlighting.
     *
     * @example <caption>Add a tooltip to a chart:</caption>
     * // First declare your chart engine.
     * const stxx = new CIQ.ChartEngine({ container: document.querySelector(".chartContainer")[0] });
     *
     * // Then link the tooltip to that chart.
     * // Note how we've enabled OHL, Volume, Series and Studies.
     * new CIQ.Tooltip({ stx: stxx, ohl: true, volume: true, series: true, studies: true });
     *
     * @example <caption>Customize the order, layout, or text in tooltip labels:</caption>
     * // In this example, we've rearranged the HTML to display the Close field first, then the DT.
     * // We are also labeling the DT 'Date/Time' and the Close 'Last'.
     * // The rest of the fields are displayed in their default order.
     *
     * <stx-hu-tooltip>
     *     <stx-hu-tooltip-field field="Close">
     *         <stx-hu-tooltip-field-name>Last</stx-hu-tooltip-field-name>
     *         <stx-hu-tooltip-field-value></stx-hu-tooltip-field-value>
     *     </stx-hu-tooltip-field>
     *     <stx-hu-tooltip-field field="DT">
     *         <stx-hu-tooltip-field-name>Date/Time</stx-hu-tooltip-field-name>
     *         <stx-hu-tooltip-field-value></stx-hu-tooltip-field-value>
     *     </stx-hu-tooltip-field>
     * </stx-hu-tooltip>
     *
     * @example <caption>Customize the CSS for the tooltip (see <i>stx-chart.css</i>):</caption>
     * stx-hu-tooltip {
     *     position: absolute;
     *     left: -50000px;
     *     z-index: 30;
     *     white-space: nowrap;
     *     padding: 6px;
     *     border: 1px solid gray;
     *     background-color: rgba(42,81,208,.5);
     *     color: white;
     * }
     *
     * stx-hu-tooltip-field {
     *     display:table-row;
     * }
     *
     * stx-hu-tooltip-field-name {
     *     display:table-cell;
     *     font-weight:bold;
     *     padding-right:5px;
     * }
     *
     * stx-hu-tooltip-field-name:after {
     *     content:':';
     * }
     *
     * stx-hu-tooltip-field-value {
     *     display:table-cell;
     *     text-align:right;
     * }
     */
    CIQ.Tooltip = CIQ.Tooltip || function (tooltipParams) {
      if (!CIQ.Marker) {
        console.warn("CIQ.Tooltip addon requires CIQ.Marker module to be enabled.");
        return;
      }

      this.cssRequired = true;
      var stx = tooltipParams.stx,
          showOhl = tooltipParams.ohl,
          showChange = tooltipParams.change,
          showVolume = tooltipParams.volume,
          showSeries = tooltipParams.series,
          showStudies = tooltipParams.studies,
          showInterpolation = tooltipParams.interpolation,
          showOverBarOnly = tooltipParams.showOverBarOnly,
          _tooltipParams$showBa = tooltipParams.showBarHighlight,
          showBarHighlight = _tooltipParams$showBa === void 0 ? true : _tooltipParams$showBa,
          useDataZone = tooltipParams.useDataZone;
      var container = stx.chart.container;
      var node = container.querySelector("stx-hu-tooltip");

      if (!node) {
        node = document.createElement("stx-hu-tooltip");
        container.appendChild(node);
      }

      var highlightEl = container.querySelector(".stx-hu-tooltip-highlight");

      if (!highlightEl) {
        highlightEl = document.createElement("div");
        highlightEl.classList.add("stx-hu-tooltip-highlight");
        container.appendChild(highlightEl);
      }

      CIQ.Marker.Tooltip = function (params) {
        if (!this.className) this.className = "CIQ.Marker.Tooltip";
        this.highlightEl = highlightEl;
        params.label = "tooltip";
        CIQ.Marker.call(this, params);
      };

      CIQ.inheritsFrom(CIQ.Marker.Tooltip, CIQ.Marker, false);

      CIQ.Marker.Tooltip.sameBar = function (bar1, bar2) {
        if (!bar1 || !bar2) return false;
        if (+bar1.DT != +bar2.DT) return false;
        if (bar1.Close != bar2.Close) return false;
        if (bar1.Open != bar2.Open) return false;
        if (bar1.Volume != bar2.Volume) return false;
        return true;
      };

      CIQ.Marker.Tooltip.placementFunction = function (params) {
        if (hideIfDisabled()) return;
        var offset = 30;
        var stx = params.stx;

        for (var i = 0; i < params.arr.length; i++) {
          var marker = params.arr[i];
          var bar = stx.barFromPixel(stx.cx);
          var quote = stx.chart.dataSegment[bar];
          var goodBar;
          var overBar = true;
          var highPx, lowPx;

          if (quote != "undefined" && quote && quote.DT) {
            goodBar = true;
            if (quote.High) highPx = stx.pixelFromPrice(quote.High);
            if (quote.Low) lowPx = stx.pixelFromPrice(quote.Low);

            if (!stx.chart.highLowBars) {
              if (quote.Close) {
                highPx = stx.pixelFromPrice(quote.Close) - 15;
                lowPx = stx.pixelFromPrice(quote.Close) + 15;
              }
            }

            if (showOverBarOnly && !(stx.cy >= highPx && stx.cy <= lowPx)) overBar = false;
          }

          if (!(stx.insideChart && !stx.openDialog && !stx.activeDrawing && !stx.grabbingScreen && goodBar && overBar)) {
            highlightEl.style.display = "none";
            marker.node.style.left = "-50000px";
            marker.node.style.right = "auto";
            marker.lastBar = {};
            return;
          }

          if (CIQ.Marker.Tooltip.sameBar(stx.chart.dataSegment[bar], marker.lastBar) && bar != stx.chart.dataSegment.length - 1) {
            return;
          }

          marker.lastBar = stx.chart.dataSegment[bar];
          var cw = marker.lastBar.candleWidth || stx.layout.candleWidth;

          if (parseInt(getComputedStyle(marker.node).width, 10) + stx.chart.panel.left + offset + cw < stx.backOutX(CIQ.ChartEngine.crosshairX)) {
            marker.node.style.left = "auto";
            marker.node.style.right = Math.round(container.clientWidth - stx.pixelFromBar(bar) + offset) + "px";
          } else {
            marker.node.style.left = Math.round(stx.pixelFromBar(bar) + offset) + "px";
            marker.node.style.right = "auto";
          }

          var height = parseInt(getComputedStyle(marker.node).height, 10);
          var top = Math.round(CIQ.ChartEngine.crosshairY - stx.top - height / 2);
          if (top + height > stx.height) top = stx.height - height;
          if (top < 0) top = 0;
          marker.node.style.top = top + "px";

          if (showBarHighlight && !stx.layout.crosshair) {
            var candleWidth = marker.lastBar.candleWidth || stx.layout.candleWidth;
            var left = stx.pixelFromBar(bar) - candleWidth / 2;
            var width = candleWidth;

            if (left + width > stx.chart.width) {
              // adjust width of last bar so it does not highlight past the edge of the chart into the y axis
              width = stx.chart.width - left;
            }

            highlightEl.style.display = "block";
            highlightEl.style.left = left + "px";
            highlightEl.style.width = width + "px";
          } else {
            highlightEl.style.display = "none";
          }
        } // temporarily disable overXAxis, overYAxis so the crosshairs don't hide if touch device and over Y axis (this can happen
        // due to the offset which we apply)


        var overXAxis = stx.overXAxis,
            overYAxis = stx.overYAxis;
        stx.overXAxis = stx.overYAxis = false;
        stx.overXAxis = overXAxis;
        stx.overYAxis = overYAxis;
      };

      function hideIfDisabled() {
        var headsUp = stx.layout.headsUp;
        var instantiated = !!stx.huTooltip;
        var noLayoutObject = _typeof(headsUp) !== "object";
        var layoutFalse = headsUp === false; // backwards compatibility

        var enabled = headsUp && (headsUp === "floating" || headsUp.floating);

        if (instantiated && (!(enabled || noLayoutObject) || layoutFalse)) {
          var tt = stx.huTooltip;

          var _ref25 = tt || {},
              _node = _ref25.node;

          if (_node) {
            _node.style.left = "-50000px";
            _node.style.right = "auto";
            tt.lastBar = {};
            if (tt.highlightEl) tt.highlightEl.style.display = "none";
          }

          return true;
        }

        return false;
      }

      function renderFunction() {
        // the tooltip has not been initialized with this chart.
        if (hideIfDisabled()) return;
        var bar = this.barFromPixel(this.cx),
            data = this.chart.dataSegment[bar];

        if (!data) {
          this.positionMarkers();
          return;
        }

        if (CIQ.Marker.Tooltip.sameBar(data, this.huTooltip.lastBar) && bar != this.chart.dataSegment.length - 1) {
          return;
        }

        var node = this.huTooltip.node;
        Array.from(node.parentElement.querySelectorAll("[auto]")).forEach(function (i) {
          i.remove();
        });
        Array.from(node.parentElement.querySelectorAll("stx-hu-tooltip-field-value")).forEach(function (i) {
          i.innerHTML = "";
        });
        var panel = this.chart.panel;
        var yAxis = panel.yAxis;
        var dupMap = {};
        var fields = [];
        fields.push({
          member: "DT",
          display: "DT",
          panel: panel,
          yAxis: yAxis
        });
        fields.push({
          member: "Close",
          display: "Close",
          panel: panel,
          yAxis: yAxis
        });
        dupMap.DT = dupMap.Close = 1;

        if (showChange && CIQ.ChartEngine.isDailyInterval(this.layout.interval)) {
          fields.push({
            member: "Change",
            display: "Change",
            panel: panel,
            yAxis: yAxis
          });
        }

        if (showOhl) {
          fields.push({
            member: "Open",
            display: "Open",
            panel: panel,
            yAxis: yAxis
          });
          fields.push({
            member: "High",
            display: "High",
            panel: panel,
            yAxis: yAxis
          });
          fields.push({
            member: "Low",
            display: "Low",
            panel: panel,
            yAxis: yAxis
          });
          dupMap.Open = dupMap.High = dupMap.Low = 1;
        }

        if (showVolume) {
          fields.push({
            member: "Volume",
            display: "Volume",
            panel: null,
            yAxis: null
          }); // null yAxis use raw value

          dupMap.Volume = 1;
        }

        if (showSeries) {
          var renderers = this.chart.seriesRenderers;

          for (var renderer in renderers) {
            var rendererToDisplay = renderers[renderer];
            if (rendererToDisplay === this.mainSeriesRenderer) continue;
            panel = this.panels[rendererToDisplay.params.panel];
            yAxis = rendererToDisplay.params.yAxis;
            if (!yAxis && rendererToDisplay.params.shareYAxis) yAxis = panel.yAxis;

            for (var id = 0; id < rendererToDisplay.seriesParams.length; id++) {
              var seriesParams = rendererToDisplay.seriesParams[id]; // if a series has a symbol and a field then it maybe a object chain

              var sKey = seriesParams.symbol;
              var subField = seriesParams.field;
              if (!sKey) sKey = subField;else if (subField && sKey != subField) sKey = CIQ.createObjectChainNames(sKey, subField)[0];
              var display = seriesParams.display || seriesParams.symbol || seriesParams.field;

              if (sKey && !dupMap[display]) {
                fields.push({
                  member: sKey,
                  display: display,
                  panel: panel,
                  yAxis: yAxis,
                  isSeries: true
                });
                dupMap[display] = 1;
              }
            }
          }
        }

        if (showStudies) {
          for (var study in this.layout.studies) {
            var sd = this.layout.studies[study];
            panel = this.panels[sd.panel];
            yAxis = panel && sd.getYAxis(this);

            for (var output in this.layout.studies[study].outputMap) {
              if (output && !dupMap[output]) {
                fields.push({
                  member: output,
                  display: output,
                  panel: panel,
                  yAxis: yAxis
                });
                dupMap[output] = 1;
              }
            }

            if (!dupMap[study + "_hist"]) {
              fields.push({
                member: study + "_hist",
                display: study + "_hist",
                panel: panel,
                yAxis: yAxis
              });
              fields.push({
                member: study + "_hist1",
                display: study + "_hist1",
                panel: panel,
                yAxis: yAxis
              });
              fields.push({
                member: study + "_hist2",
                display: study + "_hist2",
                panel: panel,
                yAxis: yAxis
              });
              dupMap[study + "_hist"] = 1;
            }
          }
        }

        for (var f = 0; f < fields.length; f++) {
          var obj = fields[f];
          var name = obj.member;
          var displayName = obj.display;
          var isRecordDate = name == "DT";
          if (isRecordDate && !useDataZone && !CIQ.ChartEngine.isDailyInterval(stx.layout.interval)) name = "displayDate"; // display date is timezone adjusted

          panel = obj.panel;
          yAxis = obj.yAxis;
          var labelDecimalPlaces = null;

          if (yAxis) {
            if (!panel || panel !== panel.chart.panel) {
              // If a study panel, use yAxis settings to determine decimal places
              if (yAxis.decimalPlaces || yAxis.decimalPlaces === 0) labelDecimalPlaces = yAxis.decimalPlaces;else if (yAxis.maxDecimalPlaces || yAxis.maxDecimalPlaces === 0) labelDecimalPlaces = yAxis.maxDecimalPlaces;
            } else {
              // If a chart panel, then always display at least the number of decimal places as calculated by masterData (panel.chart.decimalPlaces)
              // but if we are zoomed to high granularity then expand all the way out to the y-axis significant digits (panel.yAxis.printDecimalPlaces)
              labelDecimalPlaces = Math.max(yAxis.printDecimalPlaces, panel.chart.decimalPlaces); //	... and never display more decimal places than the symbol is supposed to be quoting at

              if (yAxis.maxDecimalPlaces || yAxis.maxDecimalPlaces === 0) labelDecimalPlaces = Math.min(labelDecimalPlaces, yAxis.maxDecimalPlaces);
            }
          }

          var dsField = null; // account for object chains

          var tuple = CIQ.existsInObjectChain(data, name);
          if (tuple) dsField = tuple.obj[tuple.member];else if (name == "Change") dsField = data.Close - data.iqPrevClose;
          var fieldName = displayName.replace(/^(Result )(.*)/, "$2");

          if (showInterpolation && fields[f].isSeries && (dsField === null || typeof dsField == "undefined")) {
            // do this only for additional series and not the main series
            var seriesPrice = this.valueFromInterpolation(bar, fieldName, "Close", panel, yAxis);
            if (seriesPrice === null) break;
            dsField = seriesPrice;
          }

          if ((dsField || dsField === 0) && (isRecordDate || _typeof(dsField) !== "object" || dsField.Close || dsField.Close === 0)) {
            var fieldValue = "";
            if (dsField.Close || dsField.Close === 0) dsField = dsField.Close;

            if (dsField.constructor == Number) {
              if (!yAxis) {
                // raw value
                fieldValue = dsField;
              } else if (yAxis.originalPriceFormatter && yAxis.originalPriceFormatter.func) {
                // in comparison mode with custom formatter
                fieldValue = yAxis.originalPriceFormatter.func(this, panel, dsField, labelDecimalPlaces);
              } else if (yAxis.priceFormatter && yAxis.priceFormatter != CIQ.Comparison.priceFormat) {
                // using custom formatter
                fieldValue = yAxis.priceFormatter(this, panel, dsField, labelDecimalPlaces);
              } else {
                fieldValue = this.formatYAxisPrice(dsField, panel, labelDecimalPlaces, yAxis);
              }
            } else if (dsField.constructor == Date) {
              if (isRecordDate && this.controls.floatDate && this.controls.floatDate.innerHTML) {
                if (this.chart.xAxis.noDraw) fieldValue = "N/A";else fieldValue = CIQ.displayableDate(this, panel.chart, dsField);
              } else {
                fieldValue = CIQ.yyyymmdd(dsField);

                if (!CIQ.ChartEngine.isDailyInterval(this.layout.interval)) {
                  fieldValue += " " + dsField.toTimeString().substr(0, 8);
                }
              }
            } else {
              fieldValue = dsField;
            }

            var dedicatedField = node.querySelector('stx-hu-tooltip-field[field="' + fieldName + '"]');

            if (dedicatedField) {
              dedicatedField.querySelector("stx-hu-tooltip-field-value").innerHTML = fieldValue;
              var fieldNameField = dedicatedField.querySelector("stx-hu-tooltip-field-name");
              if (fieldNameField.innerHTML === "") fieldNameField.innerHTML = this.translateIf(fieldName);
            } else {
              var newField = document.createElement("stx-hu-tooltip-field");
              newField.setAttribute("auto", true);
              var newFieldName = document.createElement("stx-hu-tooltip-field-name");
              newFieldName.innerHTML = this.translateIf(fieldName);
              newField.appendChild(newFieldName);
              var newFieldValue = document.createElement("stx-hu-tooltip-field-value");
              newFieldValue.innerHTML = fieldValue;
              newField.appendChild(newFieldValue);
              node.appendChild(newField);
            }
          } else {
            var naField = node.querySelector('stx-hu-tooltip-field[field="' + fieldName + '"]');

            if (naField) {
              var naFieldNameField = naField.querySelector("stx-hu-tooltip-field-name");
              if (naFieldNameField.innerHTML !== "") naField.querySelector("stx-hu-tooltip-field-value").innerHTML = "n/a";
            }
          }
        }

        this.huTooltip.render();
      }

      stx.append("deleteHighlighted", function () {
        this.huTooltip.lastBar = {};
        this.headsUpHR();
      });
      stx.append("headsUpHR", renderFunction);
      stx.append("createDataSegment", renderFunction);
      stx.huTooltip = new CIQ.Marker.Tooltip({
        stx: stx,
        xPositioner: "bar",
        chartContainer: true,
        node: node
      });
    };
  }
};

var _exports = {
  CIQ: _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]
};












/* global __TREE_SHAKE__ */

if (typeof __TREE_SHAKE__ === "undefined" || !__TREE_SHAKE__) {
  (_exports.CIQ || _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]).activateImports(__js_addons_advanced_animation_, __js_addons_advanced_continuousZoom_, __js_addons_advanced_outliers_, __js_addons_advanced_plotComplementer_, __js_addons_standard_extendedHours_, __js_addons_standard_fullScreen_, __js_addons_standard_inactivityTimer_, __js_addons_standard_rangeSlider_, __js_addons_standard_shortcuts_, __js_addons_standard_tableView_, __js_addons_standard_tooltip_, null);
}

/***/ }),

/***/ "./chartiq/production/js/advanced.js":
/*!*******************************************!*\
  !*** ./chartiq/production/js/advanced.js ***!
  \*******************************************/
/*! exports provided: aggregations, drawingAdvanced, equationsAdvanced, highPerformanceMarkers, renderersAdvanced, accumulationDistribution, adx, alligator, aroon, atr, awesomeOscillator, balanceOfPower, bollinger, cci, centerOfGravity, chaikin, chande, choppiness, comparisonStudies, coppock, darvasBox, detrended, disparity, easeOfMovement, ehlerFisher, elder, fractalChaos, highLowStudies, ichimoku, intradayMomentum, keltner, klinger, linearRegression, macd, massIndex, moneyFlow, movingAverages, parabolicSAR, pivotPoints, prettyGoodOscillator, priceMomentumOscillator, priceVolumeOscillator, primeNumber, pring, projectedVolume, psychologicalLine, qstick, rainbow, randomWalk, relativeVigor, rsi, schaffTrendCycle, shinohara, stochastics, supertrend, swingIndex, trendIntensity, trix, twiggsMoneyFlow, typicalPrice, ulcerIndex, ultimateOscillator, valuationLines, volatilityIndex, volumeProfile, volumeStudies, vortex, williamsMFI, CIQ, SplinePlotter, timezoneJS, $$, $$$ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aggregations", function() { return j2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawingAdvanced", function() { return B2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equationsAdvanced", function() { return U2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "highPerformanceMarkers", function() { return E2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderersAdvanced", function() { return o2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accumulationDistribution", function() { return G2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adx", function() { return p2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "alligator", function() { return q2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aroon", function() { return D2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atr", function() { return k2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "awesomeOscillator", function() { return t2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "balanceOfPower", function() { return S2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bollinger", function() { return v2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cci", function() { return N2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "centerOfGravity", function() { return x2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chaikin", function() { return V2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chande", function() { return a2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "choppiness", function() { return m2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comparisonStudies", function() { return M2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coppock", function() { return z2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darvasBox", function() { return R2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detrended", function() { return s2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disparity", function() { return P2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeOfMovement", function() { return T2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ehlerFisher", function() { return A2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elder", function() { return y2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fractalChaos", function() { return C2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "highLowStudies", function() { return l2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ichimoku", function() { return L2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intradayMomentum", function() { return f2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keltner", function() { return I2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "klinger", function() { return u2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearRegression", function() { return r2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "macd", function() { return d2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "massIndex", function() { return F2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moneyFlow", function() { return Q2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "movingAverages", function() { return w2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parabolicSAR", function() { return W2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pivotPoints", function() { return b2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prettyGoodOscillator", function() { return e2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "priceMomentumOscillator", function() { return X2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "priceVolumeOscillator", function() { return Y2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primeNumber", function() { return Z2B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pring", function() { return H3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectedVolume", function() { return J3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "psychologicalLine", function() { return c3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "qstick", function() { return K3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rainbow", function() { return O3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomWalk", function() { return n3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "relativeVigor", function() { return g3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rsi", function() { return h3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schaffTrendCycle", function() { return i3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shinohara", function() { return j3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stochastics", function() { return B3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supertrend", function() { return U3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "swingIndex", function() { return E3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trendIntensity", function() { return o3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trix", function() { return G3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twiggsMoneyFlow", function() { return p3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typicalPrice", function() { return q3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ulcerIndex", function() { return D3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ultimateOscillator", function() { return k3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valuationLines", function() { return t3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "volatilityIndex", function() { return S3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "volumeProfile", function() { return v3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "volumeStudies", function() { return N3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vortex", function() { return x3B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "williamsMFI", function() { return V3B; });
/* harmony import */ var _js_standard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/standard.js */ "./chartiq/production/js/standard.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CIQ", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SplinePlotter", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["SplinePlotter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timezoneJS", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["timezoneJS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "$$", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["$$"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "$$$", function() { return _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["$$$"]; });

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 *	8.2.0
 *	Generation date: 2021-03-19T19:54:09.125Z
 *	Client name: deriv limited
 *	Package Type: Technical Analysis 8.2
 *	License type: annual
 *	Expiration date: "2022/04/01"
 *	Domain lock: ["127.0.0.1","localhost","binary.com","binary.sx","binary.me","binary.bot","deriv.com","deriv.app","deriv.me"]
 *	iFrame lock: true
 */

/***********************************************************
 * Copyright by ChartIQ, Inc.
 * Licensed under the ChartIQ, Inc. Developer License Agreement https://www.chartiq.com/developer-license-agreement
*************************************************************/

/*************************************** DO NOT MAKE CHANGES TO THIS LIBRARY FILE!! **************************************/

/* If you wish to overwrite default functionality, create a separate file with a copy of the methods you are overwriting */

/* and load that file right after the library has been loaded, but before the chart engine is instantiated.              */

/* Directly modifying library files will prevent upgrades and the ability for ChartIQ to support your solution.          */

/*************************************************************************************************************************/

/* eslint-disable no-extra-parens */

/* eslint-disable */

/* jshint ignore:start */

/* ignore jslint start */
T5VV[10078] = function () {
  var K = 2;

  for (; K !== 9;) {
    switch (K) {
      case 1:
        return globalThis;
        break;

      case 2:
        K = (typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object" ? 1 : 5;
        break;

      case 5:
        var A;

        try {
          var O = 2;

          for (; O !== 6;) {
            switch (O) {
              case 5:
                A["TD4qJ"] = A;
                O = 4;
                break;

              case 4:
                O = typeof TD4qJ === "undefined" ? 3 : 9;
                break;

              case 2:
                Object["defineProperty"](Object["prototype"], "YohBb", {
                  '\x67\x65\x74': function get() {
                    var o = 2;

                    for (; o !== 1;) {
                      switch (o) {
                        case 2:
                          return this;
                          break;
                      }
                    }
                  },
                  '\x63\x6f\x6e\x66\x69\x67\x75\x72\x61\x62\x6c\x65': true
                });
                A = YohBb;
                O = 5;
                break;

              case 3:
                throw "";
                O = 9;
                break;

              case 9:
                delete A["TD4qJ"];
                var C = Object["prototype"];
                delete C["YohBb"];
                O = 6;
                break;
            }
          }
        } catch (h) {
          A = window;
        }

        return A;
        break;
    }
  }
}();

T5VV[131077] = V7mm(T5VV[10078]);
T5VV[141034] = p7uN(T5VV[10078]);

T5VV.i3mK = function () {
  return typeof T5VV[538215].o3mK === 'function' ? T5VV[538215].o3mK.apply(T5VV[538215], arguments) : T5VV[538215].o3mK;
};

T5VV.Y6v = function () {
  return typeof T5VV[248996].m2b === 'function' ? T5VV[248996].m2b.apply(T5VV[248996], arguments) : T5VV[248996].m2b;
};

T5VV[22341] = T5VV[397153];
T5VV[10078].N533 = T5VV;
T5VV[286920] = "SOZ";

function p7uN(z7Kh) {
  function J2Kh(U7Kh) {
    var P7Kh = 2;

    for (; P7Kh !== 5;) {
      switch (P7Kh) {
        case 2:
          var y7Kh = [arguments];
          return y7Kh[0][0].Array;
          break;
      }
    }
  }

  var f7Kh = 2;

  for (; f7Kh !== 71;) {
    switch (f7Kh) {
      case 57:
        i7Kh[55] += i7Kh[73];
        i7Kh[55] += i7Kh[16];
        f7Kh = 55;
        break;

      case 15:
        i7Kh[73] = "u";
        i7Kh[35] = "t7";
        i7Kh[16] = "";
        i7Kh[16] = "N";
        f7Kh = 24;
        break;

      case 48:
        i7Kh[68] += i7Kh[95];
        i7Kh[68] += i7Kh[48];
        i7Kh[21] = i7Kh[7];
        i7Kh[21] += i7Kh[1];
        f7Kh = 65;
        break;

      case 19:
        i7Kh[4] = "_";
        i7Kh[56] = "abstract";
        i7Kh[35] = "";
        i7Kh[35] = "";
        f7Kh = 15;
        break;

      case 77:
        B2Kh(K2Kh, "test", i7Kh[15], i7Kh[55]);
        f7Kh = 76;
        break;

      case 36:
        i7Kh[29] = i7Kh[35];
        i7Kh[29] += i7Kh[73];
        i7Kh[29] += i7Kh[16];
        i7Kh[98] = i7Kh[4];
        i7Kh[98] += i7Kh[4];
        i7Kh[98] += i7Kh[56];
        i7Kh[68] = i7Kh[9];
        f7Kh = 48;
        break;

      case 76:
        B2Kh(g2Kh, i7Kh[79], i7Kh[44], i7Kh[43]);
        f7Kh = 75;
        break;

      case 73:
        B2Kh(J2Kh, "push", i7Kh[15], i7Kh[18]);
        f7Kh = 72;
        break;

      case 40:
        i7Kh[89] += i7Kh[48];
        i7Kh[18] = i7Kh[92];
        i7Kh[18] += i7Kh[58];
        i7Kh[18] += i7Kh[16];
        f7Kh = 36;
        break;

      case 55:
        var B2Kh = function B2Kh(Z7Kh, c7Kh, D7Kh, I7Kh) {
          var R7Kh = 2;

          for (; R7Kh !== 5;) {
            switch (R7Kh) {
              case 2:
                var v7Kh = [arguments];
                h2Kh(i7Kh[0][0], v7Kh[0][0], v7Kh[0][1], v7Kh[0][2], v7Kh[0][3]);
                R7Kh = 5;
                break;
            }
          }
        };

        f7Kh = 77;
        break;

      case 75:
        B2Kh(g2Kh, i7Kh[21], i7Kh[44], i7Kh[68]);
        f7Kh = 74;
        break;

      case 35:
        i7Kh[48] = "";
        i7Kh[48] = "uN";
        i7Kh[95] = "";
        i7Kh[95] = "";
        f7Kh = 31;
        break;

      case 24:
        i7Kh[58] = "7u";
        i7Kh[92] = "";
        i7Kh[92] = "y";
        i7Kh[48] = "";
        f7Kh = 35;
        break;

      case 13:
        i7Kh[1] = "a";
        i7Kh[9] = "";
        i7Kh[7] = "__residu";
        i7Kh[9] = "O";
        i7Kh[4] = "";
        f7Kh = 19;
        break;

      case 72:
        B2Kh(i2Kh, "apply", i7Kh[15], i7Kh[89]);
        f7Kh = 71;
        break;

      case 65:
        i7Kh[21] += i7Kh[6];
        i7Kh[43] = i7Kh[8];
        i7Kh[43] += i7Kh[58];
        i7Kh[43] += i7Kh[16];
        f7Kh = 61;
        break;

      case 44:
        i7Kh[15] = 1;
        i7Kh[44] = 0;
        i7Kh[89] = i7Kh[72];
        i7Kh[89] += i7Kh[95];
        f7Kh = 40;
        break;

      case 8:
        i7Kh[8] = "k";
        i7Kh[5] = "_o";
        i7Kh[6] = "l";
        i7Kh[1] = "";
        f7Kh = 13;
        break;

      case 2:
        var i7Kh = [arguments];
        i7Kh[3] = "";
        i7Kh[3] = "";
        i7Kh[2] = "A7";
        i7Kh[3] = "ptimize";
        i7Kh[6] = "";
        f7Kh = 8;
        break;

      case 74:
        B2Kh(g2Kh, i7Kh[98], i7Kh[44], i7Kh[29]);
        f7Kh = 73;
        break;

      case 31:
        i7Kh[95] = "7";
        i7Kh[72] = "";
        i7Kh[72] = "H";
        i7Kh[15] = 3;
        f7Kh = 44;
        break;

      case 61:
        i7Kh[79] = i7Kh[4];
        i7Kh[79] += i7Kh[5];
        i7Kh[79] += i7Kh[3];
        i7Kh[55] = i7Kh[2];
        f7Kh = 57;
        break;
    }
  }

  function h2Kh(t7Kh, A7Kh, q7Kh, s7Kh, n7Kh) {
    var a7Kh = 2;

    for (; a7Kh !== 7;) {
      switch (a7Kh) {
        case 3:
          S7Kh[2] = "nePro";
          S7Kh[4] = "defi";

          try {
            var G7Kh = 2;

            for (; G7Kh !== 8;) {
              switch (G7Kh) {
                case 2:
                  S7Kh[7] = {};
                  S7Kh[5] = (1, S7Kh[0][1])(S7Kh[0][0]);
                  S7Kh[8] = [S7Kh[5], S7Kh[5].prototype][S7Kh[0][3]];
                  S7Kh[7].value = S7Kh[8][S7Kh[0][2]];

                  try {
                    var E7Kh = 2;

                    for (; E7Kh !== 3;) {
                      switch (E7Kh) {
                        case 2:
                          S7Kh[1] = S7Kh[4];
                          S7Kh[1] += S7Kh[2];
                          S7Kh[1] += S7Kh[6];
                          S7Kh[0][0].Object[S7Kh[1]](S7Kh[8], S7Kh[0][4], S7Kh[7]);
                          E7Kh = 3;
                          break;
                      }
                    }
                  } catch (A2Kh) {}

                  S7Kh[8][S7Kh[0][4]] = S7Kh[7].value;
                  G7Kh = 8;
                  break;
              }
            }
          } catch (q2Kh) {}

          a7Kh = 7;
          break;

        case 2:
          var S7Kh = [arguments];
          S7Kh[6] = "";
          S7Kh[6] = "perty";
          S7Kh[2] = "";
          a7Kh = 3;
          break;
      }
    }
  }

  function K2Kh(L7Kh) {
    var N7Kh = 2;

    for (; N7Kh !== 5;) {
      switch (N7Kh) {
        case 2:
          var j7Kh = [arguments];
          return j7Kh[0][0].RegExp;
          break;
      }
    }
  }

  function i2Kh(V7Kh) {
    var u7Kh = 2;

    for (; u7Kh !== 5;) {
      switch (u7Kh) {
        case 2:
          var C7Kh = [arguments];
          return C7Kh[0][0].Function;
          break;
      }
    }
  }

  function g2Kh(T7Kh) {
    var M7Kh = 2;

    for (; M7Kh !== 5;) {
      switch (M7Kh) {
        case 2:
          var w7Kh = [arguments];
          return w7Kh[0][0];
          break;
      }
    }
  }
}

T5VV[265782] = "zSX";

T5VV.k7Kh = function () {
  return typeof T5VV[397153].l8uN === 'function' ? T5VV[397153].l8uN.apply(T5VV[397153], arguments) : T5VV[397153].l8uN;
};

T5VV.e3mK = function () {
  return typeof T5VV[538215].r3mK === 'function' ? T5VV[538215].r3mK.apply(T5VV[538215], arguments) : T5VV[538215].r3mK;
};

T5VV.s1v = function () {
  return typeof T5VV[248996].m2b === 'function' ? T5VV[248996].m2b.apply(T5VV[248996], arguments) : T5VV[248996].m2b;
};

T5VV[397153] = function () {
  var e7Kh = 2;

  for (; e7Kh !== 9;) {
    switch (e7Kh) {
      case 2:
        var x7Kh = [arguments];
        x7Kh[8] = undefined;
        x7Kh[3] = {};
        e7Kh = 4;
        break;

      case 4:
        x7Kh[3].l8uN = function () {
          var F7Kh = 2;

          for (; F7Kh !== 90;) {
            switch (F7Kh) {
              case 34:
                b7Kh[64] = {};
                b7Kh[64].J3mK = ['B4mK'];

                b7Kh[64].S3mK = function () {
                  var e7uN = function e7uN() {
                    return 'x'.toLocaleUpperCase();
                  };

                  var d7uN = /\x58/.A7uN(e7uN + []);
                  return d7uN;
                };

                b7Kh[90] = b7Kh[64];
                F7Kh = 30;
                break;

              case 64:
                b7Kh[87] = 'z3mK';
                b7Kh[73] = 'd3mK';
                F7Kh = 62;
                break;

              case 58:
                b7Kh[70] = 0;
                F7Kh = 57;
                break;

              case 62:
                b7Kh[32] = 'J3mK';
                b7Kh[99] = 'A3mK';
                b7Kh[68] = 'S3mK';
                F7Kh = 59;
                break;

              case 2:
                var b7Kh = [arguments];
                F7Kh = 1;
                break;

              case 77:
                b7Kh[33] = 0;
                F7Kh = 76;
                break;

              case 71:
                b7Kh[33]++;
                F7Kh = 76;
                break;

              case 1:
                F7Kh = x7Kh[8] ? 5 : 4;
                break;

              case 68:
                F7Kh = 19 ? 68 : undefined;
                break;

              case 5:
                return 43;
                break;

              case 23:
                b7Kh[47] = {};
                b7Kh[47].J3mK = ['y4mK'];

                b7Kh[47].S3mK = function () {
                  var q7uN = typeof O7uN === 'function';
                  return q7uN;
                };

                b7Kh[21] = b7Kh[47];
                F7Kh = 34;
                break;

              case 4:
                b7Kh[1] = [];
                b7Kh[9] = {};
                b7Kh[9].J3mK = ['B4mK'];
                F7Kh = 8;
                break;

              case 39:
                b7Kh[51] = {};
                b7Kh[51].J3mK = ['B4mK'];

                b7Kh[51].S3mK = function () {
                  var u7uN = function u7uN() {
                    return unescape('%3D');
                  };

                  var G7uN = /\x3d/.A7uN(u7uN + []);
                  return G7uN;
                };

                F7Kh = 36;
                break;

              case 53:
                b7Kh[1].y7uN(b7Kh[93]);
                b7Kh[1].y7uN(b7Kh[5]);
                b7Kh[1].y7uN(b7Kh[7]);
                b7Kh[1].y7uN(b7Kh[4]);
                b7Kh[1].y7uN(b7Kh[21]);
                b7Kh[1].y7uN(b7Kh[18]);
                b7Kh[1].y7uN(b7Kh[8]);
                F7Kh = 46;
                break;

              case 75:
                b7Kh[53] = {};
                b7Kh[53][b7Kh[71]] = b7Kh[41][b7Kh[32]][b7Kh[33]];
                b7Kh[53][b7Kh[99]] = b7Kh[19];
                b7Kh[65].y7uN(b7Kh[53]);
                F7Kh = 71;
                break;

              case 46:
                b7Kh[1].y7uN(b7Kh[35]);
                b7Kh[1].y7uN(b7Kh[90]);
                b7Kh[65] = [];
                F7Kh = 64;
                break;

              case 36:
                b7Kh[35] = b7Kh[51];
                b7Kh[1].y7uN(b7Kh[17]);
                F7Kh = 53;
                break;

              case 30:
                b7Kh[44] = {};
                b7Kh[44].J3mK = ['y4mK'];

                b7Kh[44].S3mK = function () {
                  var V7uN = typeof t7uN === 'function';
                  return V7uN;
                };

                b7Kh[93] = b7Kh[44];
                b7Kh[25] = {};
                b7Kh[25].J3mK = ['y4mK'];

                b7Kh[25].S3mK = function () {
                  var c7uN = false;
                  var g7uN = [];

                  try {
                    for (var h7uN in console) {
                      g7uN.y7uN(h7uN);
                    }

                    c7uN = g7uN.length === 0;
                  } catch (N7uN) {}

                  var j7uN = c7uN;
                  return j7uN;
                };

                F7Kh = 40;
                break;

              case 8:
                b7Kh[9].S3mK = function () {
                  var z8uN = function z8uN() {
                    return 'xy'.substring(0, 1);
                  };

                  var S8uN = !/\x79/.A7uN(z8uN + []);
                  return S8uN;
                };

                b7Kh[7] = b7Kh[9];
                b7Kh[6] = {};
                b7Kh[6].J3mK = ['y4mK'];

                b7Kh[6].S3mK = function () {
                  var E8uN = typeof k7uN === 'function';
                  return E8uN;
                };

                b7Kh[4] = b7Kh[6];
                F7Kh = 11;
                break;

              case 40:
                b7Kh[17] = b7Kh[25];
                F7Kh = 39;
                break;

              case 69:
                F7Kh = function (r7Kh) {
                  var W7Kh = 2;

                  for (; W7Kh !== 22;) {
                    switch (W7Kh) {
                      case 24:
                        m7Kh[6]++;
                        W7Kh = 16;
                        break;

                      case 19:
                        m7Kh[6]++;
                        W7Kh = 7;
                        break;

                      case 18:
                        m7Kh[4] = false;
                        W7Kh = 17;
                        break;

                      case 14:
                        W7Kh = typeof m7Kh[9][m7Kh[3][b7Kh[71]]] === 'undefined' ? 13 : 11;
                        break;

                      case 7:
                        W7Kh = m7Kh[6] < m7Kh[0][0].length ? 6 : 18;
                        break;

                      case 25:
                        m7Kh[4] = true;
                        W7Kh = 24;
                        break;

                      case 11:
                        m7Kh[9][m7Kh[3][b7Kh[71]]].t += true;
                        W7Kh = 10;
                        break;

                      case 2:
                        var m7Kh = [arguments];
                        W7Kh = 1;
                        break;

                      case 8:
                        m7Kh[6] = 0;
                        W7Kh = 7;
                        break;

                      case 16:
                        W7Kh = m7Kh[6] < m7Kh[7].length ? 15 : 23;
                        break;

                      case 1:
                        W7Kh = m7Kh[0][0].length === 0 ? 5 : 4;
                        break;

                      case 5:
                        return;
                        break;

                      case 20:
                        m7Kh[9][m7Kh[3][b7Kh[71]]].h += true;
                        W7Kh = 19;
                        break;

                      case 4:
                        m7Kh[9] = {};
                        m7Kh[7] = [];
                        m7Kh[6] = 0;
                        W7Kh = 8;
                        break;

                      case 10:
                        W7Kh = m7Kh[3][b7Kh[99]] === b7Kh[87] ? 20 : 19;
                        break;

                      case 12:
                        m7Kh[7].y7uN(m7Kh[3][b7Kh[71]]);
                        W7Kh = 11;
                        break;

                      case 23:
                        return m7Kh[4];
                        break;

                      case 6:
                        m7Kh[3] = m7Kh[0][0][m7Kh[6]];
                        W7Kh = 14;
                        break;

                      case 15:
                        m7Kh[1] = m7Kh[7][m7Kh[6]];
                        m7Kh[8] = m7Kh[9][m7Kh[1]].h / m7Kh[9][m7Kh[1]].t;
                        W7Kh = 26;
                        break;

                      case 13:
                        m7Kh[9][m7Kh[3][b7Kh[71]]] = function () {
                          var H7Kh = 2;

                          for (; H7Kh !== 9;) {
                            switch (H7Kh) {
                              case 4:
                                l7Kh[6].t = 0;
                                return l7Kh[6];
                                break;

                              case 2:
                                var l7Kh = [arguments];
                                l7Kh[6] = {};
                                l7Kh[6].h = 0;
                                H7Kh = 4;
                                break;
                            }
                          }
                        }.H7uN(this, arguments);

                        W7Kh = 12;
                        break;

                      case 26:
                        W7Kh = m7Kh[8] >= 0.5 ? 25 : 24;
                        break;

                      case 17:
                        m7Kh[6] = 0;
                        W7Kh = 16;
                        break;
                    }
                  }
                }(b7Kh[65]) ? 68 : 67;
                break;

              case 76:
                F7Kh = b7Kh[33] < b7Kh[41][b7Kh[32]].length ? 75 : 70;
                break;

              case 27:
                b7Kh[77] = {};
                b7Kh[77].J3mK = ['B4mK'];

                b7Kh[77].S3mK = function () {
                  var f7uN = function f7uN() {
                    return encodeURI('%');
                  };

                  var s7uN = /\u0032\x35/.A7uN(f7uN + []);
                  return s7uN;
                };

                b7Kh[18] = b7Kh[77];
                F7Kh = 23;
                break;

              case 56:
                b7Kh[41] = b7Kh[1][b7Kh[70]];

                try {
                  b7Kh[19] = b7Kh[41][b7Kh[68]]() ? b7Kh[87] : b7Kh[73];
                } catch (b7uN) {
                  b7Kh[19] = b7Kh[73];
                }

                F7Kh = 77;
                break;

              case 20:
                b7Kh[2].S3mK = function () {
                  var Q8uN = function Q8uN() {
                    return [1, 2, 3, 4, 5].concat([5, 6, 7, 8]);
                  };

                  var X8uN = !/\x28\x5b/.A7uN(Q8uN + []);
                  return X8uN;
                };

                b7Kh[5] = b7Kh[2];
                b7Kh[3] = {};
                F7Kh = 17;
                break;

              case 11:
                b7Kh[2] = {};
                b7Kh[2].J3mK = ['B4mK'];
                F7Kh = 20;
                break;

              case 17:
                b7Kh[3].J3mK = ['B4mK'];

                b7Kh[3].S3mK = function () {
                  var Z8uN = function Z8uN() {
                    return [] + 'a'.concat('a');
                  };

                  var p8uN = !/\u005b\x5d/.A7uN(Z8uN + []) && /\x61\x61/.A7uN(Z8uN + []);
                  return p8uN;
                };

                b7Kh[8] = b7Kh[3];
                F7Kh = 27;
                break;

              case 70:
                b7Kh[70]++;
                F7Kh = 57;
                break;

              case 59:
                b7Kh[71] = 'D3mK';
                F7Kh = 58;
                break;

              case 57:
                F7Kh = b7Kh[70] < b7Kh[1].length ? 56 : 69;
                break;

              case 67:
                x7Kh[8] = 66;
                return 60;
                break;
            }
          }
        };

        return x7Kh[3];
        break;
    }
  }
}();

T5VV.E3mK = function () {
  return typeof T5VV[538215].r3mK === 'function' ? T5VV[538215].r3mK.apply(T5VV[538215], arguments) : T5VV[538215].r3mK;
};

function T5VV() {}

T5VV.d7Kh = function () {
  return typeof T5VV[397153].l8uN === 'function' ? T5VV[397153].l8uN.apply(T5VV[397153], arguments) : T5VV[397153].l8uN;
};

function V7mm(k6v) {
  var K6v = 2;

  for (; K6v !== 12;) {
    switch (K6v) {
      case 2:
        var P6v = [arguments];
        P6v[7] = "7m";
        P6v[9] = "m";
        P6v[4] = "";
        P6v[4] = "E";
        K6v = 9;
        break;

      case 9:
        P6v[5] = 1;
        P6v[3] = P6v[4];
        P6v[3] += P6v[7];
        P6v[3] += P6v[9];
        K6v = 14;
        break;

      case 14:
        var s6v = function s6v(C6v, A6v, W6v, g6v) {
          var V6v = 2;

          for (; V6v !== 5;) {
            switch (V6v) {
              case 2:
                var f6v = [arguments];
                v6v(P6v[0][0], f6v[0][0], f6v[0][1], f6v[0][2], f6v[0][3]);
                V6v = 5;
                break;
            }
          }
        };

        K6v = 13;
        break;

      case 13:
        s6v(U6v, "charCodeAt", P6v[5], P6v[3]);
        K6v = 12;
        break;
    }
  }

  function U6v(r6v) {
    var X6v = 2;

    for (; X6v !== 5;) {
      switch (X6v) {
        case 2:
          var y6v = [arguments];
          return y6v[0][0].String;
          break;
      }
    }
  }

  function v6v(T6v, J6v, Q6v, R6v, l6v) {
    var O6v = 2;

    for (; O6v !== 13;) {
      switch (O6v) {
        case 7:
          D6v[7] = "definePrope";
          D6v[6] = 8;

          try {
            var a6v = 2;

            for (; a6v !== 8;) {
              switch (a6v) {
                case 2:
                  D6v[8] = {};
                  D6v[5] = (1, D6v[0][1])(D6v[0][0]);
                  D6v[1] = [D6v[6], D6v[5].prototype][D6v[0][3]];
                  D6v[8].value = D6v[1][D6v[0][2]];

                  try {
                    var u6v = 2;

                    for (; u6v !== 3;) {
                      switch (u6v) {
                        case 2:
                          D6v[4] = D6v[7];
                          D6v[4] += D6v[3];
                          D6v[4] += D6v[2];
                          D6v[0][0].Object[D6v[4]](D6v[1], D6v[0][4], D6v[8]);
                          u6v = 3;
                          break;
                      }
                    }
                  } catch (i6v) {}

                  D6v[1][D6v[0][4]] = D6v[8].value;
                  a6v = 8;
                  break;
              }
            }
          } catch (F6v) {}

          O6v = 13;
          break;

        case 2:
          var D6v = [arguments];
          D6v[2] = "";
          D6v[2] = "";
          D6v[2] = "y";
          D6v[3] = "";
          D6v[3] = "rt";
          D6v[7] = "";
          O6v = 7;
          break;
      }
    }
  }
}

T5VV.N3mK = function () {
  return typeof T5VV[538215].o3mK === 'function' ? T5VV[538215].o3mK.apply(T5VV[538215], arguments) : T5VV[538215].o3mK;
};

T5VV[248996] = function () {
  var z2b = function z2b(u2b, G2b) {
    var l2b = G2b & 0xffff;
    var i2b = G2b - l2b;
    return (i2b * u2b | 0) + (l2b * u2b | 0) | 0;
  },
      h2b = function h2b(j2b, k2b, Y2b) {
    var T2b = 0xcc9e2d51,
        w2b = 0x1b873593;
    var t2b = Y2b;
    var W2b = k2b & ~0x3;

    for (var f2b = 0; f2b < W2b; f2b += 4) {
      var v2b = j2b.E7mm(f2b) & 0xff | (j2b.E7mm(f2b + 1) & 0xff) << 8 | (j2b.E7mm(f2b + 2) & 0xff) << 16 | (j2b.E7mm(f2b + 3) & 0xff) << 24;
      v2b = z2b(v2b, T2b);
      v2b = (v2b & 0x1ffff) << 15 | v2b >>> 17;
      v2b = z2b(v2b, w2b);
      t2b ^= v2b;
      t2b = (t2b & 0x7ffff) << 13 | t2b >>> 19;
      t2b = t2b * 5 + 0xe6546b64 | 0;
    }

    v2b = 0;

    switch (k2b % 4) {
      case 3:
        v2b = (j2b.E7mm(W2b + 2) & 0xff) << 16;

      case 2:
        v2b |= (j2b.E7mm(W2b + 1) & 0xff) << 8;

      case 1:
        v2b |= j2b.E7mm(W2b) & 0xff;
        v2b = z2b(v2b, T2b);
        v2b = (v2b & 0x1ffff) << 15 | v2b >>> 17;
        v2b = z2b(v2b, w2b);
        t2b ^= v2b;
    }

    t2b ^= k2b;
    t2b ^= t2b >>> 16;
    t2b = z2b(t2b, 0x85ebca6b);
    t2b ^= t2b >>> 13;
    t2b = z2b(t2b, 0xc2b2ae35);
    t2b ^= t2b >>> 16;
    return t2b;
  };

  return {
    m2b: h2b
  };
}();

T5VV[538215] = function (R3mK) {
  return {
    r3mK: function r3mK() {
      var M3mK,
          b3mK = arguments;

      switch (R3mK) {
        case 13:
          M3mK = (b3mK[5] + b3mK[1] + b3mK[2] + b3mK[3]) / (b3mK[4] - b3mK[0]);
          break;

        case 139:
          M3mK = -b3mK[2] - b3mK[1] + b3mK[0];
          break;

        case 190:
          M3mK = b3mK[3] + (b3mK[1] / b3mK[2] - b3mK[4] / b3mK[0]);
          break;

        case 62:
          M3mK = -b3mK[3] - b3mK[1] - b3mK[2] + b3mK[0];
          break;

        case 77:
          M3mK = b3mK[2] + (b3mK[1] ^ b3mK[0]);
          break;

        case 1:
          M3mK = b3mK[1] - b3mK[0];
          break;

        case 64:
          M3mK = (b3mK[1] - b3mK[2] - b3mK[4]) * b3mK[0] - b3mK[3];
          break;

        case 0:
          M3mK = b3mK[1] + b3mK[0];
          break;

        case 70:
          M3mK = b3mK[2] * b3mK[1] + b3mK[3] - b3mK[0];
          break;

        case 74:
          M3mK = (b3mK[4] + b3mK[0] - b3mK[2]) / b3mK[3] + b3mK[1];
          break;

        case 116:
          M3mK = (b3mK[0] ^ b3mK[1]) * b3mK[3] / b3mK[2];
          break;

        case 93:
          M3mK = b3mK[1] + b3mK[2] + b3mK[0];
          break;

        case 162:
          M3mK = -b3mK[1] * b3mK[0] * b3mK[3] + b3mK[2];
          break;

        case 30:
          M3mK = (b3mK[0] - b3mK[1]) / b3mK[2];
          break;

        case 53:
          M3mK = b3mK[0] >> b3mK[1];
          break;

        case 60:
          M3mK = b3mK[2] * b3mK[1] * b3mK[3] - b3mK[0];
          break;

        case 118:
          M3mK = (b3mK[0] - b3mK[4]) * b3mK[2] - b3mK[3] + b3mK[1];
          break;

        case 92:
          M3mK = b3mK[2] * b3mK[0] + b3mK[1];
          break;

        case 33:
          M3mK = -b3mK[1] / b3mK[4] * b3mK[3] / b3mK[2] + b3mK[0];
          break;

        case 56:
          M3mK = -b3mK[2] * b3mK[1] + b3mK[0];
          break;

        case 34:
          M3mK = (-b3mK[1] - b3mK[3]) * b3mK[0] + b3mK[2];
          break;

        case 57:
          M3mK = -b3mK[3] / b3mK[2] - b3mK[1] + b3mK[0];
          break;

        case 81:
          M3mK = (b3mK[1] - b3mK[0]) / b3mK[4] * b3mK[3] + b3mK[2];
          break;

        case 47:
          M3mK = b3mK[0] - b3mK[2] / b3mK[1];
          break;

        case 25:
          M3mK = b3mK[0] / b3mK[2] - b3mK[1] + b3mK[4] + b3mK[3];
          break;

        case 117:
          M3mK = b3mK[2] * b3mK[1] / b3mK[0];
          break;

        case 153:
          M3mK = -b3mK[1] - b3mK[4] - b3mK[2] - b3mK[3] + b3mK[0];
          break;

        case 187:
          M3mK = (b3mK[1] - b3mK[0] + b3mK[3]) / b3mK[2] + b3mK[4];
          break;

        case 22:
          M3mK = b3mK[0] | b3mK[1];
          break;

        case 159:
          M3mK = (b3mK[2] % b3mK[0] + b3mK[1]) * b3mK[3];
          break;

        case 133:
          M3mK = b3mK[1] / b3mK[2] + b3mK[0] - b3mK[3];
          break;

        case 14:
          M3mK = b3mK[1] - b3mK[0] - b3mK[2];
          break;

        case 84:
          M3mK = b3mK[2] / (b3mK[1] - b3mK[0]);
          break;

        case 90:
          M3mK = (b3mK[2] * b3mK[4] - b3mK[1] * b3mK[6]) / (b3mK[5] * b3mK[3] - b3mK[0]);
          break;

        case 88:
          M3mK = b3mK[4] * (b3mK[0] + (b3mK[1] ^ b3mK[2])) / +b3mK[3];
          break;

        case 143:
          M3mK = b3mK[3] * b3mK[2] / (b3mK[1] + b3mK[0]);
          break;

        case 21:
          M3mK = b3mK[2] - (b3mK[3] << b3mK[1]) * b3mK[0];
          break;

        case 124:
          M3mK = b3mK[0] * b3mK[1] * b3mK[3] - b3mK[2] - b3mK[4];
          break;

        case 167:
          M3mK = b3mK[1] / b3mK[3] * b3mK[2] + b3mK[0] - b3mK[4];
          break;

        case 10:
          M3mK = b3mK[0] / b3mK[1];
          break;

        case 157:
          M3mK = b3mK[4] / b3mK[3] * b3mK[2] - b3mK[1] + b3mK[0];
          break;

        case 177:
          M3mK = b3mK[1] * -b3mK[0];
          break;

        case 38:
          M3mK = b3mK[0] * b3mK[1] < +b3mK[2];
          break;

        case 129:
          M3mK = (b3mK[3] * b3mK[4] + b3mK[1]) / b3mK[0] - b3mK[2];
          break;

        case 58:
          M3mK = b3mK[0] / b3mK[2] + b3mK[1];
          break;

        case 145:
          M3mK = -b3mK[2] + b3mK[1] + b3mK[0];
          break;

        case 131:
          M3mK = (b3mK[0] * b3mK[1] - b3mK[4]) * b3mK[3] - b3mK[2];
          break;

        case 107:
          M3mK = (b3mK[2] + b3mK[1]) * b3mK[0] / b3mK[4] - b3mK[3];
          break;

        case 44:
          M3mK = (-b3mK[3] + b3mK[4]) * b3mK[1] + b3mK[0] + b3mK[2];
          break;

        case 72:
          M3mK = (b3mK[6] - b3mK[4]) * (b3mK[3] - b3mK[5]) / (b3mK[2] - b3mK[0]) + b3mK[1];
          break;

        case 127:
          M3mK = (b3mK[2] - b3mK[1] - b3mK[0]) / b3mK[3] + b3mK[4];
          break;

        case 101:
          M3mK = (b3mK[1] * b3mK[0] + b3mK[2]) / b3mK[3];
          break;

        case 132:
          M3mK = -b3mK[1] - b3mK[0] + b3mK[3] + b3mK[2];
          break;

        case 105:
          M3mK = b3mK[2] * b3mK[4] * b3mK[3] * b3mK[1] - b3mK[0];
          break;

        case 108:
          M3mK = (b3mK[3] + b3mK[2]) * b3mK[4] / b3mK[0] + b3mK[1];
          break;

        case 61:
          M3mK = (b3mK[2] - b3mK[0]) / b3mK[1] - b3mK[4] + b3mK[3];
          break;

        case 173:
          M3mK = b3mK[1] - (b3mK[2] & b3mK[0]);
          break;

        case 41:
          M3mK = (b3mK[1] & b3mK[3]) * b3mK[2] - b3mK[0] - b3mK[4];
          break;

        case 192:
          M3mK = b3mK[2] - (b3mK[1] ^ b3mK[0]);
          break;

        case 172:
          M3mK = (b3mK[4] / b3mK[2] + b3mK[3]) * b3mK[0] - b3mK[1];
          break;

        case 3:
          M3mK = b3mK[0] - b3mK[3] + b3mK[1] + b3mK[2];
          break;

        case 119:
          M3mK = -b3mK[2] / b3mK[1] + b3mK[0];
          break;

        case 66:
          M3mK = (b3mK[2] << b3mK[3]) * b3mK[0] - b3mK[1];
          break;

        case 28:
          M3mK = (b3mK[3] + b3mK[4]) / b3mK[2] - b3mK[0] + b3mK[1];
          break;

        case 65:
          M3mK = (b3mK[0] + b3mK[1]) / b3mK[3] + b3mK[2];
          break;

        case 95:
          M3mK = -(b3mK[1] - b3mK[3]) * b3mK[2] + b3mK[0];
          break;

        case 7:
          M3mK = b3mK[0] + b3mK[1] - b3mK[2];
          break;

        case 121:
          M3mK = -b3mK[3] + b3mK[2] + b3mK[4] + b3mK[0] - b3mK[1];
          break;

        case 85:
          M3mK = b3mK[2] + (b3mK[0] - b3mK[1]) / b3mK[3];
          break;

        case 35:
          M3mK = b3mK[4] - b3mK[0] - b3mK[2] - b3mK[1] + b3mK[3];
          break;

        case 67:
          M3mK = b3mK[0] < b3mK[1];
          break;

        case 82:
          M3mK = +b3mK[0] / b3mK[1];
          break;

        case 135:
          M3mK = b3mK[2] * b3mK[3] / b3mK[0] - b3mK[1];
          break;

        case 54:
          M3mK = (b3mK[3] - b3mK[0]) / (b3mK[1] - b3mK[4]) > b3mK[2];
          break;

        case 99:
          M3mK = b3mK[1] + (b3mK[0] | b3mK[2]);
          break;

        case 168:
          M3mK = (b3mK[0] + b3mK[1]) / b3mK[4] * b3mK[2] - b3mK[3];
          break;

        case 152:
          M3mK = (b3mK[2] + b3mK[3]) * b3mK[1] * b3mK[0] - b3mK[4];
          break;

        case 130:
          M3mK = -b3mK[2] * b3mK[3] + b3mK[1] - b3mK[0];
          break;

        case 185:
          M3mK = b3mK[1] == b3mK[0];
          break;

        case 6:
          M3mK = (b3mK[1] + b3mK[2]) / b3mK[0];
          break;

        case 94:
          M3mK = b3mK[2] + b3mK[1] * b3mK[0];
          break;

        case 5:
          M3mK = b3mK[1] * b3mK[0];
          break;

        case 45:
          M3mK = (b3mK[3] + b3mK[1]) * b3mK[2] - b3mK[0];
          break;

        case 141:
          M3mK = b3mK[3] - b3mK[4] + b3mK[2] + b3mK[0] - b3mK[1];
          break;

        case 73:
          M3mK = b3mK[2] / b3mK[0] + b3mK[1] + b3mK[3];
          break;

        case 191:
          M3mK = -b3mK[1] * b3mK[4] + b3mK[0] + b3mK[2] - b3mK[3];
          break;

        case 110:
          M3mK = b3mK[2] - b3mK[0] - +b3mK[1];
          break;

        case 128:
          M3mK = b3mK[4] * b3mK[2] * b3mK[3] / b3mK[0] - b3mK[1];
          break;

        case 120:
          M3mK = b3mK[1] + +b3mK[0];
          break;

        case 144:
          M3mK = b3mK[2] * b3mK[1] * b3mK[0];
          break;

        case 189:
          M3mK = b3mK[1] / b3mK[0] - b3mK[2] - b3mK[4] + b3mK[3];
          break;

        case 26:
          M3mK = b3mK[0] ^ b3mK[1];
          break;

        case 50:
          M3mK = b3mK[0] - b3mK[1] / (b3mK[2] & b3mK[3]);
          break;

        case 125:
          M3mK = b3mK[0] * b3mK[2] * b3mK[4] + (b3mK[1] - b3mK[6] * b3mK[5]) * b3mK[3];
          break;

        case 91:
          M3mK = (b3mK[1] - b3mK[0] * b3mK[2]) / b3mK[3];
          break;

        case 63:
          M3mK = (b3mK[3] - b3mK[4]) / b3mK[2] + b3mK[1] + b3mK[0];
          break;

        case 68:
          M3mK = (b3mK[1] - b3mK[0]) / (b3mK[2] - b3mK[3]);
          break;

        case 16:
          M3mK = -b3mK[1] + b3mK[0];
          break;

        case 123:
          M3mK = (b3mK[1] - b3mK[3]) * b3mK[2] * b3mK[4] - b3mK[0];
          break;

        case 89:
          M3mK = b3mK[0] * (b3mK[1] * b3mK[3] + b3mK[4]) / b3mK[2];
          break;

        case 154:
          M3mK = (-b3mK[3] + b3mK[2] + b3mK[1]) / b3mK[4] - b3mK[0];
          break;

        case 160:
          M3mK = b3mK[2] / (b3mK[1] * b3mK[3]) <= b3mK[0] << b3mK[4];
          break;

        case 178:
          M3mK = (b3mK[3] - b3mK[1]) / b3mK[2] / b3mK[4] + b3mK[0];
          break;

        case 83:
          M3mK = b3mK[1] / +b3mK[0];
          break;

        case 20:
          M3mK = b3mK[1] + (b3mK[0] << b3mK[3]) * b3mK[2];
          break;

        case 114:
          M3mK = b3mK[1] * b3mK[2] / b3mK[0] / b3mK[4] + b3mK[3];
          break;

        case 155:
          M3mK = b3mK[3] - b3mK[0] - b3mK[2] + b3mK[1];
          break;

        case 39:
          M3mK = b3mK[2] + (b3mK[1] - b3mK[0]);
          break;

        case 43:
          M3mK = (b3mK[1] - b3mK[0]) * b3mK[2] * b3mK[3] + b3mK[4];
          break;

        case 176:
          M3mK = b3mK[0] - b3mK[4] / (b3mK[2] + b3mK[3] / b3mK[1]);
          break;

        case 12:
          M3mK = b3mK[2] / b3mK[1] * b3mK[0] - b3mK[3];
          break;

        case 87:
          M3mK = (-b3mK[3] - b3mK[2] + b3mK[4]) / b3mK[0] + b3mK[1];
          break;

        case 49:
          M3mK = b3mK[2] + b3mK[0] / b3mK[1];
          break;

        case 42:
          M3mK = (b3mK[1] - b3mK[3]) * b3mK[0] + b3mK[2];
          break;

        case 115:
          M3mK = b3mK[0] + b3mK[1] - b3mK[2] + b3mK[4] - b3mK[3];
          break;

        case 179:
          M3mK = -b3mK[0] / b3mK[2] - b3mK[1] - b3mK[3] + b3mK[4];
          break;

        case 164:
          M3mK = b3mK[2] * (b3mK[1] + b3mK[0]);
          break;

        case 138:
          M3mK = -b3mK[1] / b3mK[3] * b3mK[2] + b3mK[0];
          break;

        case 76:
          M3mK = b3mK[1] - +b3mK[0];
          break;

        case 148:
          M3mK = b3mK[0] * (b3mK[1] / b3mK[2] - b3mK[3]);
          break;

        case 103:
          M3mK = (b3mK[2] + +b3mK[1] * b3mK[3]) / b3mK[0];
          break;

        case 182:
          M3mK = b3mK[0] * b3mK[4] / b3mK[3] * b3mK[1] - b3mK[2];
          break;

        case 102:
          M3mK = (b3mK[2] + b3mK[0]) / +b3mK[1];
          break;

        case 23:
          M3mK = b3mK[0] * b3mK[2] - b3mK[1];
          break;

        case 175:
          M3mK = (b3mK[2] - b3mK[1] + b3mK[0]) * b3mK[4] + b3mK[3];
          break;

        case 97:
          M3mK = b3mK[0] + (b3mK[6] - b3mK[1]) / (b3mK[3] - b3mK[2]) * (b3mK[5] - b3mK[4]);
          break;

        case 122:
          M3mK = (b3mK[3] + (b3mK[0] - b3mK[2])) * b3mK[1];
          break;

        case 69:
          M3mK = (-b3mK[0] + b3mK[3]) / b3mK[1] * b3mK[2] + b3mK[4];
          break;

        case 2:
          M3mK = b3mK[0] - b3mK[1] + b3mK[2];
          break;

        case 55:
          M3mK = b3mK[2] * b3mK[1] / b3mK[3] + b3mK[0];
          break;

        case 161:
          M3mK = b3mK[1] - b3mK[2] * b3mK[0];
          break;

        case 156:
          M3mK = b3mK[2] / b3mK[1] / b3mK[0] * b3mK[4] + b3mK[3];
          break;

        case 18:
          M3mK = b3mK[2] / b3mK[1] - b3mK[0] + b3mK[3];
          break;

        case 136:
          M3mK = (-b3mK[2] - b3mK[0] - b3mK[3]) / b3mK[1] + b3mK[4];
          break;

        case 151:
          M3mK = +b3mK[2] * (b3mK[3] / b3mK[1] - b3mK[0]);
          break;

        case 19:
          M3mK = b3mK[0] + b3mK[1] - b3mK[3] + b3mK[2];
          break;

        case 59:
          M3mK = b3mK[4] / b3mK[1] + b3mK[0] + b3mK[2] - b3mK[3];
          break;

        case 78:
          M3mK = b3mK[0] / b3mK[1] * b3mK[3] + b3mK[2];
          break;

        case 98:
          M3mK = b3mK[0] + (b3mK[1] >> b3mK[2]);
          break;

        case 40:
          M3mK = b3mK[0] * b3mK[1] - b3mK[3] - b3mK[2];
          break;

        case 150:
          M3mK = (b3mK[2] - b3mK[1]) / b3mK[3] + b3mK[4] - b3mK[0];
          break;

        case 193:
          M3mK = b3mK[1] * b3mK[3] * b3mK[0] + b3mK[4] - b3mK[2];
          break;

        case 51:
          M3mK = b3mK[2] / b3mK[0] + b3mK[3] - b3mK[1] - b3mK[4];
          break;

        case 15:
          M3mK = b3mK[1] << b3mK[0];
          break;

        case 75:
          M3mK = (b3mK[1] - b3mK[2]) / b3mK[3] - b3mK[0];
          break;

        case 158:
          M3mK = b3mK[4] * b3mK[1] - b3mK[2] - b3mK[3] - b3mK[0];
          break;

        case 96:
          M3mK = -b3mK[1] / b3mK[3] * b3mK[4] + b3mK[2] + b3mK[0];
          break;

        case 24:
          M3mK = b3mK[3] / b3mK[2] - b3mK[0] + b3mK[4] - b3mK[1];
          break;

        case 9:
          M3mK = (b3mK[0] + b3mK[2]) / (b3mK[3] | b3mK[1]);
          break;

        case 149:
          M3mK = b3mK[0] + b3mK[2] * (b3mK[1] - b3mK[3]);
          break;

        case 134:
          M3mK = (-b3mK[1] + b3mK[0]) / b3mK[3] - b3mK[2];
          break;

        case 100:
          M3mK = (b3mK[3] * b3mK[2] + b3mK[1]) / +b3mK[0];
          break;

        case 52:
          M3mK = b3mK[0] / b3mK[2] - b3mK[1];
          break;

        case 27:
          M3mK = (b3mK[4] / b3mK[2] - b3mK[3]) / b3mK[0] + b3mK[1];
          break;

        case 29:
          M3mK = b3mK[0] - (b3mK[2] - b3mK[1]);
          break;

        case 140:
          M3mK = (-b3mK[1] + b3mK[0]) * b3mK[4] * b3mK[3] + b3mK[2];
          break;

        case 31:
          M3mK = b3mK[0] + b3mK[1] + b3mK[3] - b3mK[2];
          break;

        case 147:
          M3mK = -b3mK[0] / b3mK[3] * b3mK[1] * b3mK[4] + b3mK[2];
          break;

        case 181:
          M3mK = b3mK[3] * b3mK[0] - b3mK[1] + b3mK[4] - b3mK[2];
          break;

        case 113:
          M3mK = b3mK[0] * b3mK[4] / b3mK[1] + b3mK[3] - b3mK[2];
          break;

        case 170:
          M3mK = b3mK[4] - b3mK[2] - b3mK[1] / (b3mK[0] + b3mK[3]);
          break;

        case 48:
          M3mK = b3mK[1] + b3mK[0] / +b3mK[2];
          break;

        case 142:
          M3mK = -b3mK[2] * b3mK[1] / b3mK[3] + b3mK[0];
          break;

        case 166:
          M3mK = b3mK[1] / b3mK[3] / b3mK[0] - b3mK[2] + b3mK[4];
          break;

        case 183:
          M3mK = b3mK[1] - b3mK[0] * b3mK[3] - b3mK[2];
          break;

        case 184:
          M3mK = b3mK[0] + b3mK[2] * b3mK[3] + b3mK[1];
          break;

        case 32:
          M3mK = -b3mK[4] * b3mK[2] * b3mK[3] + b3mK[1] + b3mK[0];
          break;

        case 80:
          M3mK = b3mK[4] * b3mK[0] / b3mK[2] * b3mK[1] + b3mK[3];
          break;

        case 165:
          M3mK = b3mK[0] * b3mK[4] + b3mK[3] + b3mK[1] + b3mK[2];
          break;

        case 79:
          M3mK = b3mK[3] + b3mK[1] + b3mK[2] + b3mK[0] - b3mK[4];
          break;

        case 37:
          M3mK = (b3mK[3] - b3mK[4]) * b3mK[2] + b3mK[1] + b3mK[0];
          break;

        case 180:
          M3mK = b3mK[0] - b3mK[3] - b3mK[2] + b3mK[1] - b3mK[4];
          break;

        case 111:
          M3mK = (b3mK[1] - (b3mK[3] + b3mK[0])) / (b3mK[2] ^ b3mK[4]);
          break;

        case 163:
          M3mK = b3mK[0] > b3mK[1];
          break;

        case 188:
          M3mK = -b3mK[1] - b3mK[3] - b3mK[2] + b3mK[0] + b3mK[4];
          break;

        case 17:
          M3mK = (b3mK[3] + b3mK[1]) / b3mK[4] + b3mK[2] + b3mK[0];
          break;

        case 71:
          M3mK = (b3mK[1] - b3mK[2]) * b3mK[0] - b3mK[3];
          break;

        case 86:
          M3mK = b3mK[1] - b3mK[0] * (b3mK[3] - b3mK[2]);
          break;

        case 126:
          M3mK = b3mK[3] + b3mK[1] - b3mK[4] - b3mK[2] - b3mK[0];
          break;

        case 171:
          M3mK = -b3mK[0] / b3mK[3] / b3mK[1] + b3mK[2];
          break;

        case 186:
          M3mK = b3mK[2] + b3mK[0] / b3mK[1] + b3mK[3];
          break;

        case 104:
          M3mK = (b3mK[0] + b3mK[1] * b3mK[2]) / b3mK[3];
          break;

        case 106:
          M3mK = (b3mK[4] - b3mK[1]) * b3mK[0] / b3mK[3] + b3mK[2];
          break;

        case 169:
          M3mK = (b3mK[1] + b3mK[0]) / b3mK[2] - b3mK[3];
          break;

        case 137:
          M3mK = (b3mK[1] + b3mK[2]) / b3mK[0] / b3mK[4] - b3mK[3];
          break;

        case 11:
          M3mK = -b3mK[1] + b3mK[3] - b3mK[0] + b3mK[2];
          break;

        case 36:
          M3mK = (b3mK[1] - b3mK[2]) / b3mK[3] + b3mK[0];
          break;

        case 146:
          M3mK = (b3mK[2] & b3mK[1]) - b3mK[4] / (b3mK[5] + b3mK[3] / b3mK[0]);
          break;

        case 109:
          M3mK = b3mK[5] + b3mK[1] + b3mK[0] + b3mK[3] + b3mK[2] + b3mK[4] + b3mK[6] + b3mK[7];
          break;

        case 46:
          M3mK = (b3mK[2] - b3mK[4]) / b3mK[0] / b3mK[3] - b3mK[1];
          break;

        case 4:
          M3mK = b3mK[0] & b3mK[1];
          break;

        case 174:
          M3mK = b3mK[2] / b3mK[1] + b3mK[0] - b3mK[3] + b3mK[4];
          break;

        case 112:
          M3mK = b3mK[2] + b3mK[3] + b3mK[1] + b3mK[0];
          break;

        case 8:
          M3mK = b3mK[0] + b3mK[1] - b3mK[2] - b3mK[3];
          break;
      }

      return M3mK;
    },
    o3mK: function o3mK(a3mK) {
      R3mK = a3mK;
    }
  };
}();

var j2B, B2B, U2B, E2B, o2B, G2B, p2B, q2B, D2B, k2B, t2B, S2B, v2B, N2B, x2B, V2B, a2B, m2B, M2B, z2B, R2B, s2B, P2B, T2B, A2B, y2B, C2B, l2B, L2B, f2B, I2B, u2B, r2B, d2B, F2B, Q2B, w2B, W2B, b2B, e2B, X2B, Y2B, Z2B, H3B, J3B, c3B, K3B, O3B, n3B, g3B, h3B, i3B, j3B, B3B, U3B, E3B, o3B, G3B, p3B, q3B, D3B, k3B, t3B, S3B, v3B, N3B, x3B, V3B, R3B;


j2B = function j2B(P3B) {
  var s3B;
  s3B = typeof _CIQ !== "undefined" ? _CIQ : P3B.CIQ;

  s3B.Renderer.Aggregations = function (A3B) {
    var T3B, t1v, L1v, x1v;
    this.construct(A3B);
    T3B = this.params;
    T5VV.d7Kh();
    this.highLowBars = this.barsHaveWidth = this.standaloneBars = !!1;
    this.isAggregation = !"";
    T3B.highlightable = !{};

    if (T3B.name != "_main_series") {
      console.warn("Aggregations are only allowed on main series.");
      t1v = -410998141;
      L1v = -826820892;
      x1v = 2;

      for (var o1v = 1; T5VV.Y6v(o1v.toString(), o1v.toString().length, 75890) !== t1v; o1v++) {
        T3B.invalid = !{};
        x1v += 2;
      }

      if (T5VV.s1v(x1v.toString(), x1v.toString().length, 50417) !== L1v) {
        T3B.invalid = !"";
      }

      T3B.invalid = !![];
    }
  };

  s3B.inheritsFrom(s3B.Renderer.Aggregations, s3B.Renderer.OHLC, ![]);

  s3B.Renderer.Aggregations.requestNew = function (f3B, I3B) {
    var r7v, y3B, l3B, L3B;
    r7v = "A";
    r7v += "ggrega";
    r7v += "tions";
    y3B = null;

    for (var C3B = 0; C3B < f3B.length; C3B++) {
      l3B = f3B[C3B];

      switch (l3B) {
        case "kagi":
        case "pandf":
          y3B = l3B;
          break;

        case "heikinashi":
        case "linebreak":
        case "rangebars":
        case "renko":
          y3B = "candle";
          break;

        default:
          return null;
      }
    }

    if (y3B === null) {
      return null;
    }

    T5VV.k7Kh();
    L3B = new s3B.Renderer[y3B == "candle" ? "OHLC" : r7v]({
      params: s3B.extend(I3B, {
        type: y3B
      })
    });
    L3B.isAggregation = !0;
    return L3B;
  };

  s3B.Renderer.Aggregations.prototype.drawIndividualSeries = function (F3B, r3B) {
    var u3B, d3B, V7v, K7v, O7v;

    if (r3B.invalid) {
      return;
    }

    T5VV.d7Kh();
    u3B = this.stx;
    d3B = {
      colors: []
    };

    if (r3B.type == "kagi") {
      V7v = "stx_kagi";
      V7v += "_up";
      K7v = "s";
      K7v += "tx_kagi_do";
      K7v += "wn";
      u3B.drawKagiSquareWave(F3B.panel, "stx_kagi_up", K7v, r3B);
      d3B.colors.push(u3B.getCanvasColor(V7v));
      d3B.colors.push(u3B.getCanvasColor("stx_kagi_down"));
    } else if (r3B.type == "pandf") {
      O7v = "stx_pan";
      O7v += "df_down";
      u3B.drawPointFigureChart(F3B.panel, "stx_pandf_up", (277.84, 8850) > 4986 ? "X" : "F", r3B);
      d3B.colors.push(u3B.getCanvasColor("stx_pandf_up"));
      u3B.drawPointFigureChart(F3B.panel, O7v, ("473" * 1, 897.1) <= (4700, 5593) ? "O" : 8.67e+3, r3B);
      d3B.colors.push(u3B.getCanvasColor("stx_pandf_down"));
    }

    return d3B;
  };

  s3B.ChartEngine.prototype.setAggregationType = function (w3B) {
    var a7v, Q3B;
    a7v = "c";
    a7v += "and";
    a7v += "le";
    this.layout.chartType = a7v;
    Q3B = this.chart;

    if (Q3B.baseline.userLevel !== !!"") {
      Q3B.baseline.userLevel = Q3B.baseline.defaultLevel;
      Q3B.panel.yAxis.scroll = s3B.ChartEngine.YAxis.prototype.scroll;
    }

    this.layout.aggregationType = w3B;
    this.setMainSeriesRenderer();
    T5VV.d7Kh();

    if (Q3B.canvas) {
      this.createDataSet();
      this.draw();
    }

    this.changeOccurred("layout");
  };

  s3B.ChartEngine.prototype.drawKagiSquareWave = function (J4B, O4B, n4B, g4B) {
    var B8Kh = T5VV;
    var H4B, h4B, W3B, b3B, D4B, i4B, j4B, E4B, o4B, B4B, U4B, G4B, p4B, Y3B, k4B, K4B, Z3B, X3B, t4B, e3B, q4B;
    H4B = J4B.chart;
    this.startClip(J4B.name);
    h4B = H4B.dataSegment;
    W3B = H4B.context;
    b3B = J4B.yAxis;

    if (b3B.flipped) {
      D4B = O4B;
      O4B = n4B;
      n4B = D4B;
    }

    i4B = this.canvasStyle(O4B);
    j4B = this.canvasStyle(n4B);
    this.canvasColor(O4B);

    if (g4B.border_color_up) {
      W3B.strokeStyle = g4B.border_color_up;
    }

    E4B = W3B.strokeStyle;
    this.canvasColor(n4B);

    if (g4B.border_color_down) {
      W3B.strokeStyle = g4B.border_color_down;
    }

    o4B = W3B.strokeStyle;
    B4B = 1;

    if (i4B.width && parseInt(i4B.width, 10) <= +"25") {
      B4B = Math.max(+"1", s3B.stripPX(i4B.width));
    }

    U4B = 1;

    if (j4B.width && parseInt(j4B.width, 10) <= 25) {
      U4B = Math.max(1, s3B.stripPX(j4B.width));
    }

    if (this.highlightedDraggable) {
      W3B.globalAlpha *= 0.3;
    }

    W3B.beginPath();
    B8Kh.i3mK(0);
    var k8i = B8Kh.e3mK(1, 0);
    G4B = H4B.dataSet.length - H4B.scroll - k8i;
    p4B = !!{};
    Y3B = null;
    k4B = null;
    K4B = null;
    B8Kh.N3mK(1);
    B8Kh.d7Kh();
    var C8i = B8Kh.E3mK(6, 7);
    Z3B = J4B.left - 0.5 * this.layout.candleWidth + this.micropixels - C8i;

    for (var c4B = 0; c4B <= h4B.length; c4B++) {
      Z3B += this.layout.candleWidth;
      X3B = h4B[c4B];
      if (!X3B) continue;
      if (X3B.projection) break;
      K4B = X3B.kagiTrend;

      if (b3B.flipped) {
        K4B *= -1;
      }

      if (X3B.transform && H4B.transformFunc) {
        t4B = X3B.kagiPrevOpen;
        X3B = X3B.transform;
        X3B.kagiPrevOpen = H4B.transformFunc(this, H4B, t4B);
      }

      e3B = X3B.cache;
      B8Kh.i3mK(0);
      q4B = B8Kh.E3mK(c4B, G4B);

      if (q4B < J4B.cacheLeft || q4B > J4B.cacheRight || !e3B.kagiOpen) {
        e3B.kagiOpen = b3B.semiLog ? b3B.height * (1 - (Math.log(Math.max(X3B.Open, 0)) / Math.LN10 - b3B.logLow) / b3B.logShadow) : (b3B.high - X3B.Open) * b3B.multiplier;
        e3B.kagiClose = b3B.semiLog ? b3B.height * (+"1" - (Math.log(Math.max(X3B.Close, 0)) / Math.LN10 - b3B.logLow) / b3B.logShadow) : (b3B.high - X3B.Close) * b3B.multiplier;

        if (b3B.flipped) {
          e3B.kagiOpen = b3B.bottom - e3B.kagiOpen;
          e3B.kagiClose = b3B.bottom - e3B.kagiClose;
        } else {
          e3B.kagiOpen += b3B.top;
          e3B.kagiClose += b3B.top;
        }
      }

      k4B = e3B.kagiClose;
      Y3B = b3B.semiLog ? b3B.height * (1 - (Math.log(Math.max(X3B.kagiPrevOpen, 0)) / Math.LN10 - b3B.logLow) / b3B.logShadow) : (b3B.high - X3B.kagiPrevOpen) * b3B.multiplier;

      if (b3B.flipped) {
        Y3B = b3B.bottom - Y3B;
      } else {
        Y3B += b3B.top;
      }

      if (p4B) {
        W3B.moveTo(G4B >= 0 ? J4B.left : Math.floor(Z3B), e3B.kagiOpen);
        W3B.lineTo(Math.floor(Z3B), e3B.kagiOpen);

        if (e3B.kagiClose < e3B.kagiOpen) {
          W3B.strokeStyle = E4B;
          W3B.lineWidth = B4B;
        } else {
          W3B.strokeStyle = o4B;
          W3B.lineWidth = U4B;
        }
      } else {
        if (K4B != -("1" >> 1474558432) && e3B.kagiClose < Y3B && Y3B < e3B.kagiOpen) {
          W3B.lineTo(Math.floor(Z3B), Y3B);
          W3B.stroke();
          W3B.beginPath();
          W3B.moveTo(Math.floor(Z3B), Y3B);
          W3B.strokeStyle = E4B;
          W3B.lineWidth = B4B;
        } else if (K4B != 1 && e3B.kagiClose > Y3B && Y3B > e3B.kagiOpen) {
          W3B.lineTo(Math.floor(Z3B), Y3B);
          W3B.stroke();
          W3B.beginPath();
          W3B.moveTo(Math.floor(Z3B), Y3B);
          W3B.strokeStyle = o4B;
          W3B.lineWidth = U4B;
        }
      }

      W3B.lineTo(Math.floor(Z3B), e3B.kagiClose);

      if (c4B + +"1" < h4B.length) {
        W3B.lineTo(Math.floor(Z3B + this.layout.candleWidth), e3B.kagiClose);
      }

      p4B = !"1";
    }

    W3B.stroke();
    this.endClip();
    W3B.lineWidth = +"1";
  };

  s3B.ChartEngine.prototype.drawPointFigureChart = function (s4B, e4B, P4B, u4B) {
    var o8Kh = T5VV;
    var a4B, Q4B, v4B, m4B, M4B, T4B, C4B, l4B, w4B, Z4B, S4B, W4B, z4B, N4B, x4B, r4B, d4B, V4B, A4B, y4B, H7B, F4B, R4B, b4B, f4B, I4B;
    a4B = s4B.chart;
    this.startClip(s4B.name);

    function X4B(c7B, K7B, J7B) {
      o8Kh.d7Kh();
      o8Kh.i3mK(0);
      v4B.moveTo(o8Kh.E3mK(C4B, c7B), o8Kh.E3mK(J7B, T4B, x4B, o8Kh.N3mK(2)));
      o8Kh.N3mK(1);
      v4B.lineTo(o8Kh.e3mK(l4B, K7B), o8Kh.E3mK(J7B, M4B, x4B, N4B, o8Kh.i3mK(3)));
      o8Kh.N3mK(0);
      v4B.moveTo(o8Kh.e3mK(C4B, c7B), o8Kh.E3mK(J7B, M4B, x4B, N4B, o8Kh.i3mK(3)));
      o8Kh.N3mK(1);
      v4B.lineTo(o8Kh.E3mK(l4B, K7B), o8Kh.e3mK(J7B, T4B, x4B, o8Kh.N3mK(2)));
    }

    Q4B = a4B.dataSegment;
    v4B = a4B.context;
    this.canvasColor(e4B);

    if (P4B == "X" && u4B.border_color_up) {
      v4B.strokeStyle = u4B.border_color_up;
    } else if (P4B == "O" && u4B.border_color_down) {
      v4B.strokeStyle = u4B.border_color_down;
    }

    m4B = this.canvasStyle(e4B);
    M4B = parseInt(m4B.paddingTop, 10);
    T4B = parseInt(m4B.paddingBottom, 10);
    C4B = parseInt(m4B.paddingLeft, 10);
    l4B = parseInt(m4B.paddingRight, 10);

    if (m4B.width && parseInt(m4B.width, 10) <= 25) {
      v4B.lineWidth = Math.max(1, s3B.stripPX(m4B.width));
    } else {
      o8Kh.N3mK(4);
      v4B.lineWidth = o8Kh.E3mK("2", 2147483647);
    }

    if (this.highlightedDraggable) {
      o8Kh.N3mK(5);
      v4B.globalAlpha *= o8Kh.e3mK(1, "0.3");
    }

    v4B.beginPath();
    w4B = this.chart.state.aggregation.box;
    o8Kh.i3mK(1);
    var A8i = o8Kh.E3mK(13, 14);
    Z4B = a4B.dataSet.length - a4B.scroll - A8i;
    S4B = s4B.yAxis;
    o8Kh.k7Kh();

    function Y4B(n7B, g7B, O7B) {
      o8Kh.N3mK(6);
      v4B.moveTo(o8Kh.e3mK(2, n7B, g7B), o8Kh.E3mK(O7B, M4B, x4B, o8Kh.i3mK(7)));
      o8Kh.N3mK(0);
      v4B.bezierCurveTo(o8Kh.E3mK(l4B, g7B), o8Kh.e3mK(O7B, M4B, x4B, o8Kh.i3mK(7)), o8Kh.e3mK(l4B, g7B, o8Kh.i3mK(0)), o8Kh.E3mK(O7B, N4B, T4B, x4B, o8Kh.N3mK(8)), o8Kh.E3mK(2, n7B, g7B, o8Kh.N3mK(6)), o8Kh.E3mK(O7B, N4B, T4B, x4B, o8Kh.N3mK(8)));
      o8Kh.N3mK(1);
      v4B.bezierCurveTo(o8Kh.E3mK(C4B, n7B), o8Kh.E3mK(O7B, N4B, T4B, x4B, o8Kh.i3mK(8)), o8Kh.E3mK(C4B, n7B, o8Kh.i3mK(1)), o8Kh.e3mK(O7B, M4B, x4B, o8Kh.i3mK(7)), o8Kh.e3mK(n7B, 2, g7B, "2", o8Kh.i3mK(9)), o8Kh.e3mK(O7B, M4B, x4B, o8Kh.N3mK(7)));
    }

    N4B = w4B * S4B.multiplier;
    o8Kh.N3mK(10);
    x4B = o8Kh.e3mK(N4B, 2);
    r4B = this.layout.candleWidth;
    o8Kh.i3mK(2);
    var W8i = o8Kh.e3mK(0, 2, 3);
    d4B = s4B.left - r4B + this.micropixels - W8i;

    for (var L4B = 0; L4B < Q4B.length; L4B++) {
      d4B += r4B;
      V4B = Q4B[L4B];
      if (!V4B) continue;
      if (V4B.projection) break;
      A4B = V4B.pfOpen;
      y4B = V4B.pfClose;
      H7B = V4B.pfTrend;
      F4B = V4B.pfStepBack;

      if (V4B.transform && a4B.transformFunc) {
        V4B = V4B.transform;
        A4B = a4B.transformFunc(this, a4B, A4B);
        y4B = a4B.transformFunc(this, a4B, y4B);
      }

      R4B = V4B.cache;
      o8Kh.i3mK(0);
      b4B = o8Kh.E3mK(L4B, Z4B);

      if (b4B < s4B.cacheLeft || b4B > s4B.cacheRight || !R4B.pfOpen) {
        if (S4B.flipped) {
          R4B.pfOpen = S4B.bottom - (S4B.high - A4B) * S4B.multiplier;
          R4B.pfClose = S4B.bottom - (S4B.high - y4B) * S4B.multiplier;
        } else {
          R4B.pfOpen = (S4B.high - A4B) * S4B.multiplier + S4B.top;
          R4B.pfClose = (S4B.high - y4B) * S4B.multiplier + S4B.top;
        }
      }

      f4B = Math.round(d4B);
      o8Kh.N3mK(0);
      I4B = Math.round(o8Kh.E3mK(r4B, d4B));
      W4B = Math.abs(Math.round((y4B - A4B) / w4B));
      z4B = R4B.pfOpen;

      if (P4B == F4B) {
        if (F4B == "X") {
          o8Kh.i3mK(1);
          X4B(f4B, I4B, o8Kh.e3mK(N4B, z4B));
        } else if (F4B == "O") {
          o8Kh.i3mK(0);
          Y4B(f4B, I4B, o8Kh.E3mK(N4B, z4B));
        }
      }

      if (P4B == H7B) {
        for (; W4B >= 0; W4B--) {
          if (P4B == ((4500, 8981) === 1097 ? 6800 !== (3450, 927) ? (999, +"6270") != 9010 ? (0x9c0, "e") : 686.06 : (323.71, "u") : "X")) {
            X4B(f4B, I4B, z4B, N4B, x4B);
            z4B -= S4B.flipped ? -N4B : N4B;
          } else if (P4B == "O") {
            Y4B(f4B, I4B, z4B, N4B, x4B);
            z4B += S4B.flipped ? -N4B : N4B;
          }
        }
      }
    }

    v4B.stroke();
    this.endClip();
    v4B.lineWidth = 1;
  };

  s3B.ChartEngine.calculateAggregation = function (h7B, j7B, B7B, U7B) {
    var u7v, i7B, E7B;
    u7v = "hei";
    u7v += "kinashi";
    E7B = h7B.layout;
    T5VV.d7Kh();

    if ([u7v, "heikenashi"].indexOf(j7B) > -1) {
      i7B = s3B.calculateHeikinAshi(h7B, B7B, U7B);
    } else if (j7B == "rangebars") {
      i7B = s3B.calculateRangeBars(h7B, B7B, E7B.rangebars, U7B);
    } else if (j7B == "kagi") {
      i7B = s3B.calculateKagi(h7B, B7B, E7B.kagi, U7B);
    } else if (j7B == "linebreak") {
      i7B = s3B.calculateLineBreak(h7B, B7B, E7B.priceLines, U7B);
    } else if (j7B == "renko") {
      i7B = s3B.calculateRenkoBars(h7B, B7B, E7B.renko, U7B);
    } else if (j7B == "pandf") {
      i7B = s3B.calculatePointFigure(h7B, B7B, E7B.pandf, U7B);
    }

    return i7B;
  };

  s3B.calculateHeikinAshi = function (z7B, V7B, a7B) {
    var p4Kh = T5VV;
    p4Kh.k7Kh();
    var t7B, o7B, G7B, v7B, D7B, p7B, q7B, k7B, m7B, M7B, N7B;

    if (!V7B.length) {
      return V7B;
    }

    if (!a7B) {
      a7B = [];
    }

    t7B = [];

    for (var S7B = 0; S7B < V7B.length; S7B++) {
      o7B = V7B[S7B];
      if (!o7B) continue;
      p4Kh.i3mK(11);
      var g8i = p4Kh.E3mK(17, 2, 17, 3);
      G7B = t7B[t7B.length - g8i];

      if (!G7B && !S7B) {
        p4Kh.i3mK(12);
        var T8i = p4Kh.e3mK(7, 1, 5, 34);
        G7B = a7B[a7B.length - T8i];
      }

      if (!G7B) {
        G7B = o7B;
      }

      v7B = o7B.Close;
      D7B = o7B.Open;
      p7B = o7B.High;
      q7B = o7B.Low;
      k7B = G7B.Open;
      D7B = D7B || D7B === +"0" ? D7B : v7B;
      p7B = p7B || p7B === 0 ? p7B : v7B;
      q7B = q7B || q7B === 0 ? q7B : v7B;
      k7B = k7B || k7B === 0 ? k7B : G7B.Close;
      m7B = (k7B + G7B.Close) / +"2";
      p4Kh.i3mK(13);
      M7B = p4Kh.E3mK(0, p7B, q7B, v7B, "4", D7B);
      N7B = {
        DT: o7B.DT,
        displayDate: o7B.displayDate,
        Date: o7B.Date,
        Open: m7B,
        Close: M7B,
        High: Math.max(p7B, Math.max(m7B, M7B)),
        Low: Math.min(q7B, Math.min(m7B, M7B)),
        Volume: o7B.Volume,
        iqPrevClose: G7B.Close
      };

      for (var x7B in o7B) {
        if (!N7B[x7B] && N7B[x7B] !== 0) {
          N7B[x7B] = o7B[x7B];
        }
      }

      t7B.push(N7B);
    }

    return t7B;
  };

  s3B.calculateKagi = function (u7B, A7B, T7B, f7B) {
    var X4Kh = T5VV;
    X4Kh.k7Kh();
    var I7B, l7B, C7B, R7B, d7B, P7B, r7B, s7B;

    if (!A7B.length) {
      return A7B;
    }

    if (!f7B) {
      f7B = [];
    }

    I7B = u7B.layout;
    l7B = u7B.chart;
    T7B = parseFloat(T7B);
    l7B.defaultChartStyleConfig.kagi = s3B.ChartEngine.isDailyInterval(I7B.interval) ? 4 : 0.4;

    if (isNaN(T7B) || T7B <= "0" - 0) {
      T7B = l7B.defaultChartStyleConfig.kagi;

      if (s3B.Market.Symbology.isForexSymbol(l7B.symbol)) {
        T7B /= 4;
      }

      if (I7B.kagi !== null) {
        I7B.kagi = null;
        u7B.changeOccurred("layout");
      }
    }

    T7B /= 100;
    C7B = [];
    X4Kh.N3mK(14);
    var J8i = X4Kh.e3mK(8, 19, 10);
    R7B = f7B[f7B.length - J8i];
    d7B = R7B ? R7B.DT : 0;

    for (var y7B = 0; y7B < A7B.length; y7B++) {
      P7B = A7B[y7B];
      if (!P7B) continue;

      if (!R7B) {
        X4Kh.i3mK(1);
        R7B = A7B[X4Kh.E3mK(1, y7B)];
      }

      if (!R7B) continue;
      r7B = R7B.Open || R7B.Open === +"0" ? R7B.Open : R7B.Close;

      if (r7B > R7B.Close) {
        if (P7B.Close > R7B.Close * (1 + T7B)) {
          P7B.Open = R7B.Close;
        } else {
          if (R7B.Close > P7B.Close) {
            R7B.Close = P7B.Close;
          }

          R7B.Volume += P7B.Volume;
          if (y7B < A7B.length - 1) continue;
        }
      } else if (r7B < R7B.Close) {
        if (P7B.Close < R7B.Close * (1 - T7B)) {
          P7B.Open = R7B.Close;
        } else {
          if (R7B.Close < P7B.Close) {
            R7B.Close = P7B.Close;
          }

          R7B.Volume += P7B.Volume;
          if (y7B < A7B.length - 1) continue;
        }
      } else {
        R7B.Close = P7B.Close;
        R7B.Volume += P7B.Volume;
        if (y7B < A7B.length - 1) continue;
      }

      s7B = {
        DT: R7B.DT,
        displayDate: R7B.displayDate,
        Date: R7B.Date,
        Open: R7B.Open,
        Close: R7B.Close,
        High: Math.max(R7B.Open, R7B.Close),
        Low: Math.min(R7B.Open, R7B.Close),
        Volume: R7B.Volume,
        iqPrevClose: R7B.iqPrevClose
      };

      for (var L7B in R7B) {
        if (!s7B[L7B] && s7B[L7B] !== 0) {
          s7B[L7B] = R7B[L7B];
        }
      }

      if (C7B.length) {
        s7B.kagiPrevOpen = C7B[C7B.length - 1].Open;
      } else {
        s7B.kagiPrevOpen = s7B.Open;
      }

      if (s7B.Close > s7B.kagiPrevOpen && s7B.kagiPrevOpen > s7B.Open) {
        s7B.kagiTrend = +"1";
      } else if (s7B.Close < s7B.kagiPrevOpen && s7B.kagiPrevOpen < s7B.Open) {
        s7B.kagiTrend = -1;
      }

      if (d7B < s7B.DT) {
        C7B.push(s7B);
      }

      R7B = P7B;
      l7B.currentQuote = {
        Close: P7B.Close
      };
    }

    return C7B;
  };

  s3B.calculateLineBreak = function (j6B, O6B, w7B, U6B) {
    var n6B, g6B, W7B, E6B, h6B, F7B, b7B, e7B, Z7B, H6B, X7B, Q7B, Y7B, J6B;

    if (!O6B.length) {
      return O6B;
    }

    if (!U6B) {
      U6B = [];
    }

    n6B = j6B.layout;
    g6B = j6B.chart;
    T5VV.i3mK(15);
    g6B.defaultChartStyleConfig.priceLines = T5VV.e3mK(1886190080, "3");
    T5VV.d7Kh();
    w7B = parseInt(w7B, 10);

    if (isNaN(w7B) || w7B <= ("0" | 0)) {
      w7B = g6B.defaultChartStyleConfig.priceLines;

      if (n6B.priceLines !== null) {
        n6B.priceLines = null;
        j6B.changeOccurred("layout");
      }
    } else if (w7B > 10) {
      n6B.priceLines = w7B = 10;
    }

    W7B = U6B.slice(-w7B);
    E6B = W7B.length;
    h6B = 0;

    a: for (var i6B = 0; i6B < O6B.length; i6B++) {
      F7B = O6B[i6B];
      if (!F7B) continue;
      h6B += F7B.Volume;
      b7B = W7B[W7B.length - ("1" - 0)];

      if (!b7B) {
        b7B = {
          Open: F7B.Open,
          Close: F7B.Open,
          High: F7B.Open,
          Low: F7B.Open
        };
      }

      e7B = b7B.Close;
      Z7B = b7B.High;
      H6B = b7B.Low;
      X7B = b7B.Open;
      Z7B = Z7B || Z7B === 0 ? Z7B : e7B;
      H6B = H6B || H6B === 0 ? H6B : e7B;
      X7B = X7B || X7B === 0 ? X7B : e7B;
      Q7B = {
        DT: F7B.DT,
        displayDate: F7B.displayDate,
        Date: F7B.Date,
        Close: F7B.Close,
        Volume: h6B,
        iqPrevClose: e7B
      };
      g6B.currentQuote = {
        Close: F7B.Close
      };

      if (F7B.Close > e7B && b7B.Close > X7B) {
        ;
      } else if (F7B.Close < e7B && b7B.Close < X7B) {
        ;
      } else if (F7B.Close > Z7B) {
        for (Y7B = 2; Y7B <= w7B; Y7B++) {
          J6B = W7B[W7B.length - Y7B];

          if (J6B && F7B.Close <= J6B.High) {
            continue a;
          }
        }
      } else if (F7B.Close < H6B) {
        for (Y7B = 2; Y7B <= w7B; Y7B++) {
          J6B = W7B[W7B.length - Y7B];

          if (J6B && F7B.Close >= J6B.Low) {
            continue a;
          }
        }
      } else continue;

      if (F7B.Close < b7B.Close) {
        Q7B.Open = Math.min(X7B, e7B);
      } else {
        Q7B.Open = Math.max(X7B, e7B);
      }

      Q7B.Low = Math.min(Q7B.Open, Q7B.Close);
      Q7B.High = Math.max(Q7B.Open, Q7B.Close);

      for (var K6B in F7B) {
        if (!Q7B[K6B] && Q7B[K6B] !== 0) {
          Q7B[K6B] = F7B[K6B];
        }
      }

      W7B.push(Q7B);
      h6B = +"0";
    }

    return W7B.slice(E6B);
  };

  T5VV.d7Kh();

  s3B.calculateRenkoBars = function (N6B, p6B, G6B, x6B) {
    var k4Kh = T5VV;
    var X7v, M6B, S6B, v6B, a9B, C6B, R6B, L6B, q6B, D6B, k6B, f6B, t6B, I6B, w6B, b6B;
    X7v = "C";
    X7v += "l";
    X7v += "os";
    X7v += "e";

    if (!p6B.length) {
      return [];
    }

    function T6B(s9B, W9B) {
      var e9B;
      k4Kh.d7Kh();
      s9B = Number(s9B.toFixed(8));
      W9B = Number(W9B.toFixed(8));
      e9B = {
        DT: k6B.DT,
        displayDate: k6B.displayDate,
        Date: k6B.Date,
        Open: s9B,
        Close: W9B,
        High: Math.max(s9B, W9B),
        Low: Math.min(s9B, W9B),
        Volume: 0,
        iqPrevClose: s9B != W9B ? s9B : null
      };

      for (var X9B in k6B) {
        if (!e9B[X9B] && e9B[X9B] !== 0) {
          e9B[X9B] = k6B[X9B];
        }
      }

      L6B.push(e9B);
    }

    if (!x6B) {
      x6B = [];
    }

    M6B = N6B.layout;
    S6B = N6B.chart;
    v6B = S6B.state.aggregation;

    if (!v6B) {
      v6B = S6B.state.aggregation = {};
    }

    k4Kh.i3mK(5);
    a9B = Math.min(k4Kh.e3mK(1, "300"), p6B.length);

    if (!v6B.minMax) {
      v6B.minMax = N6B.determineMinMax(p6B.slice(p6B.length - a9B), [X7v, "High", "Low"]);
    }

    k4Kh.i3mK(16);
    var Q8i = k4Kh.E3mK(11, 10);
    C6B = v6B.minMax[Q8i] - v6B.minMax[0];
    R6B = N6B.panels[S6B.name].height;

    if (!R6B) {
      return [];
    }

    k4Kh.i3mK(17);
    var R8i = k4Kh.e3mK(8, 20, 15, 43, 9);
    k4Kh.N3mK(18);
    var l8i = k4Kh.e3mK(7, 4, 9992, 7509);
    S6B.defaultChartStyleConfig.renko = Math.floor(("10000" - 0) * C6B / (R6B / R8i)) / l8i;

    if (G6B === null || isNaN(G6B) || G6B <= 0) {
      G6B = S6B.defaultChartStyleConfig.renko;

      if (M6B.renko !== null) {
        M6B.renko = null;
        N6B.changeOccurred("layout");
      }
    } else {
      k4Kh.N3mK(10);
      G6B = Math.max(G6B, k4Kh.e3mK(C6B, R6B));

      if (M6B.renko !== G6B) {
        M6B.renko = G6B;
        N6B.changeOccurred("layout");
      }
    }

    L6B = [];
    q6B = null;
    D6B = null;
    k6B = null;

    if (x6B.length) {
      k4Kh.i3mK(19);
      var r8i = k4Kh.E3mK(0, 3, 5, 7);
      f6B = x6B[x6B.length - r8i];
      q6B = f6B.Low - G6B;
      D6B = f6B.High + G6B;
    }

    for (var y6B = 0; y6B < p6B.length; y6B++) {
      t6B = p6B[y6B];
      if (!t6B) continue;

      if (!q6B && !D6B) {
        I6B = t6B.Open || t6B.Open === 0 ? t6B.Open : t6B.Close;
        w6B = Math.floor(I6B / G6B) * G6B;
        b6B = isNaN(w6B) ? I6B : w6B;
        k4Kh.i3mK(1);
        q6B = k4Kh.E3mK(G6B, b6B);
        k4Kh.N3mK(0);
        D6B = k4Kh.E3mK(G6B, b6B);
      }

      while (!![]) {
        if (!k6B) {
          k6B = t6B;
        }

        if (t6B.Close <= q6B) {
          k4Kh.i3mK(0);
          T6B(k4Kh.e3mK(G6B, q6B), q6B);
          k4Kh.i3mK(20);
          D6B = k4Kh.E3mK("2", q6B, G6B, 967378720);
          q6B -= G6B;
          k6B = null;
        } else if (t6B.Close >= D6B) {
          k4Kh.N3mK(1);
          T6B(k4Kh.e3mK(G6B, D6B), D6B);
          k4Kh.i3mK(21);
          q6B = k4Kh.E3mK(G6B, 485184896, D6B, "2");
          D6B += G6B;
          k6B = null;
        } else break;
      }

      S6B.currentQuote = t6B;
    }

    if (q6B < p6B[p6B.length - 1].Close && q6B + G6B > p6B[p6B.length - 1].Close) {
      k4Kh.N3mK(0);
      T6B(k4Kh.e3mK(G6B, q6B), p6B[p6B.length - +"1"].Close);
    } else if (D6B > p6B[p6B.length - 1].Close && D6B - G6B < p6B[p6B.length - 1].Close) {
      k4Kh.N3mK(1);
      T6B(k4Kh.E3mK(G6B, D6B), p6B[p6B.length - 1].Close);
    }

    return L6B;
  };

  s3B.calculateRangeBars = function (o0l, O0l, Z9B, q0l) {
    var Q4Kh = T5VV;
    var p0l, G0l, B0l, x0l, t0l, D0l, p7v, S0l, Y9B, n0l, g0l, k0l, h0l, H0l, E0l, i0l, J0l, c0l, K0l, N0l, a0l;

    if (!O0l.length) {
      return O0l;
    }

    if (!q0l) {
      q0l = [];
    }

    function U0l(s0l, R0l) {
      Q4Kh.k7Kh();

      while (1) {
        if (!h0l) {
          h0l = s0l;
        }

        if (Y9B < R0l) {
          Y9B = Math.min(R0l, n0l);
          Q4Kh.N3mK(1);
          g0l = Math.max(g0l, Q4Kh.e3mK(Z9B, Y9B));
          if (R0l < n0l) break;
        } else if (Y9B >= R0l) {
          Y9B = Math.max(R0l, g0l);
          Q4Kh.i3mK(0);
          n0l = Math.min(n0l, Q4Kh.E3mK(Z9B, Y9B));
          if (R0l > g0l) break;
        }

        if (typeof Y9B == "undefined") {
          console.log("Uh oh undefined in calculateRangeBars:processMove");
          return;
        }

        V0l(Y9B);
        h0l = null;
        v0l();
      }
    }

    p0l = o0l.layout;
    G0l = o0l.chart;
    B0l = G0l.state.aggregation;

    function v0l() {
      Q4Kh.N3mK(0);
      Q4Kh.d7Kh();
      n0l = Q4Kh.e3mK(Z9B, Y9B);
      Q4Kh.i3mK(1);
      g0l = Q4Kh.e3mK(Z9B, Y9B);
      k0l = Y9B;
    }

    if (!B0l) {
      B0l = G0l.state.aggregation = {};
    }

    Q4Kh.i3mK(22);
    x0l = Math.min(Q4Kh.E3mK("300", 260), O0l.length);

    function V0l(z0l) {
      var m0l;
      m0l = {
        DT: h0l.DT,
        displayDate: h0l.displayDate,
        Date: h0l.Date,
        Open: Number(k0l.toFixed(+"8")),
        Close: Number(z0l.toFixed(8)),
        High: Number(n0l.toFixed(8)),
        Low: Number(g0l.toFixed(8)),
        Volume: 0
      };
      m0l.iqPrevClose = m0l.Open;

      for (var M0l in h0l) {
        if (!m0l[M0l] && m0l[M0l] !== 0) {
          m0l[M0l] = h0l[M0l];
        }
      }

      S0l.push(m0l);
    }

    if (!B0l.minMax) {
      B0l.minMax = o0l.determineMinMax(O0l.slice(O0l.length - x0l), ["Close", "High", "Low"]);
    }

    Q4Kh.i3mK(0);
    var K8i = Q4Kh.e3mK(810554410, 42660758);
    t0l = B0l.minMax["1" >> K8i] - B0l.minMax["0" - 0];
    D0l = o0l.panels[G0l.name].height;

    if (!D0l) {
      return [];
    }

    Q4Kh.N3mK(2);
    var V8i = Q4Kh.e3mK(667, 15, 9348);
    Q4Kh.N3mK(23);
    var O8i = Q4Kh.e3mK(3, 15, 15);
    Q4Kh.i3mK(24);
    var a8i = Q4Kh.e3mK(19, 11983, 5, 110000, 2);
    G0l.defaultChartStyleConfig.range = Math.floor(V8i * t0l / (D0l / O8i)) / a8i;

    if (Z9B === null || isNaN(Z9B) || Z9B < 0) {
      Z9B = G0l.defaultChartStyleConfig.range;

      if (p0l.range !== null) {
        p0l.range = null;
        o0l.changeOccurred("layout");
      }
    } else {
      Q4Kh.N3mK(10);
      Z9B = Math.max(Z9B, Q4Kh.e3mK(t0l, D0l));

      if (p0l.range !== Z9B) {
        p7v = "lay";
        p7v += "o";
        p7v += "u";
        p7v += "t";
        p0l.range = Z9B;
        o0l.changeOccurred(p7v);
      }
    }

    S0l = [];
    Y9B = null;
    n0l = null;
    g0l = null;
    k0l = null;
    h0l = null;

    for (var j0l = +"0"; j0l < O0l.length; j0l++) {
      H0l = O0l[j0l];
      if (!H0l) continue;
      Q4Kh.N3mK(1);
      E0l = O0l[Q4Kh.e3mK(1, j0l)];

      if (!j0l) {
        if (!E0l) {
          Q4Kh.i3mK(25);
          var u8i = Q4Kh.E3mK(229553120, 14, 4, 631271082, 12);
          E0l = q0l[q0l.length - ("1" >> u8i)];
        }

        if (E0l) {
          Y9B = E0l.Close;

          if (Y9B || Y9B === 0) {
            v0l();
          }
        }
      }

      if (!E0l) continue;
      i0l = H0l.Close;
      J0l = H0l.Open;
      c0l = H0l.High;
      K0l = H0l.Low;
      if (!i0l && i0l !== 0) continue;
      J0l = J0l || J0l === 0 ? J0l : i0l;
      c0l = c0l || c0l === 0 ? c0l : i0l;
      K0l = K0l || K0l === "0" << 93775232 ? K0l : i0l;

      if (!Y9B && Y9B !== 0) {
        N0l = Math.floor(J0l / Z9B) * Z9B;
        Y9B = isNaN(N0l) ? J0l : N0l;
        v0l();
        U0l(E0l, J0l);
      }

      if (j0l) {
        U0l(H0l, J0l);
      }

      if (c0l - J0l < J0l - K0l) {
        if (c0l) {
          U0l(H0l, c0l);
        }

        if (K0l) {
          U0l(H0l, K0l);
        }
      } else {
        if (K0l) {
          U0l(H0l, K0l);
        }

        if (c0l) {
          U0l(H0l, c0l);
        }
      }

      U0l(H0l, i0l);

      if (j0l == O0l.length - ("1" - 0) && i0l != k0l) {
        a0l = n0l;
        Q4Kh.N3mK(0);
        n0l = Q4Kh.E3mK(Z9B, g0l);
        Q4Kh.N3mK(1);
        g0l = Q4Kh.E3mK(Z9B, a0l);
        V0l(i0l);
      }
    }

    return S0l;
  };

  s3B.calculatePointFigure = function (X0l, Y0l, H1l, J1l) {
    var H4Kh = T5VV;
    H4Kh.k7Kh();
    var f0l, r0l, c1l, P0l, l0l, Y7v, d0l, s2v, b0l, e0l, w0l, L0l, C0l, I0l, T0l, u0l, W0l, A0l, y0l, F0l, Q0l;

    if (!Y0l.length) {
      return Y0l;
    }

    if (!J1l) {
      J1l = [];
    }

    f0l = X0l.layout;
    r0l = X0l.chart;
    c1l = r0l.state.aggregation;

    if (!c1l) {
      c1l = r0l.state.aggregation = {};
    }

    r0l.defaultChartStyleConfig.box = 1;
    r0l.defaultChartStyleConfig.reversal = 3;

    if (!H1l) {
      H1l = {};
    }

    P0l = H1l.box;

    function Z0l(j1l, B1l, U1l, E1l, o1l) {
      H4Kh.d7Kh();
      j1l.High = Math.max(B1l, j1l.High);
      j1l.Low = Math.min(U1l, j1l.Low);
      j1l.Close = E1l;
      j1l.Volume += o1l;
    }

    function n1l(G1l, p1l, q1l, D1l, k1l, t1l, S1l, v1l, N1l) {
      H4Kh.d7Kh();
      return {
        DT: G1l.DT,
        Date: G1l.Date,
        pfOpen: v1l,
        pfClose: N1l,
        Open: p1l,
        Close: k1l,
        High: q1l,
        Low: D1l,
        Volume: t1l,
        iqPrevClose: S1l
      };
    }

    if (!P0l) {
      if (f0l.pandf) {
        if (f0l.pandf.box !== null) {
          f0l.pandf.box = null;
          X0l.changeOccurred("layout");
        }
      }

      P0l = r0l.defaultChartStyleConfig.box;
      l0l = Y0l[Y0l.length - +"1"].Close;

      if (l0l) {
        if (l0l < 0.25) {
          P0l = 0.0625;
        } else if (l0l < 1) {
          P0l = 0.125;
        } else if (l0l < 5) {
          P0l = 0.25;
        } else if (l0l < 20) {
          P0l = 0.5;
        } else if (l0l < +"100") {
          P0l = 1;
        } else if (l0l < 200) {
          P0l = 2;
        } else if (l0l < 500) {
          H4Kh.N3mK(5);
          P0l = H4Kh.E3mK(1, "4");
        } else if (l0l < 1000) {
          H4Kh.N3mK(26);
          P0l = H4Kh.e3mK("5", 0);
        } else if (l0l < +"25000") {
          P0l = 50;
        } else {
          P0l = 500;
        }
      }

      if (!s3B.ChartEngine.isDailyInterval(f0l.interval)) {
        P0l /= 10;
      }

      if (s3B.Market.Symbology.isForexSymbol(r0l.symbol)) {
        if (l0l) {
          if (l0l < "1" << 674247808) {
            P0l = +"0.001";
          } else if (l0l < 2) {
            P0l = 0.002;
          } else if (l0l < 50) {
            P0l = 0.02;
          } else if (l0l < 200) {
            P0l = 0.2;
          }
        }

        if (s3B.ChartEngine.isDailyInterval(f0l.interval)) {
          P0l *= 10;
        }
      }

      r0l.defaultChartStyleConfig.box = P0l;
    }

    P0l = parseFloat(P0l);

    function O1l(i1l, h1l) {
      for (var g1l in i1l) {
        if (!h1l[g1l] && h1l[g1l] !== 0) {
          h1l[g1l] = i1l[g1l];
        }
      }

      return h1l;
    }

    if (isNaN(P0l) || P0l <= 0) {
      if (f0l.pandf) {
        if (f0l.pandf.box !== null) {
          Y7v = "la";
          Y7v += "y";
          Y7v += "out";
          f0l.pandf.box = null;
          X0l.changeOccurred(Y7v);
        }
      }

      r0l.defaultChartStyleConfig.box = P0l = 1;
    }

    d0l = Math.ceil(parseFloat(H1l.reversal));

    if (d0l > 0 && d0l > H1l.reversal) {
      f0l.pandf.reversal = d0l;
      X0l.changeOccurred("layout");
    } else if (isNaN(d0l) || d0l <= 0) {
      if (f0l.pandf) {
        if (f0l.pandf.reversal !== null) {
          s2v = "l";
          s2v += "ayout";
          f0l.pandf.reversal = null;
          X0l.changeOccurred(s2v);
        }
      }

      d0l = r0l.defaultChartStyleConfig.reversal;
    }

    c1l.box = P0l;
    d0l *= P0l;
    b0l = 0.00000001;
    e0l = (P0l.toString() + ((1565, 313.51) !== "402" * 1 ? "." : !!{})).split(".")[+"1"].length;
    w0l = [];
    L0l = 0;

    for (var K1l = 0; K1l < Y0l.length; K1l++) {
      I0l = Y0l[K1l];
      if (!I0l) continue;
      L0l += I0l.Volume;
      u0l = I0l.Close;
      W0l = I0l.Open;
      A0l = I0l.High;
      y0l = I0l.Low;
      W0l = W0l || W0l === +"0" ? W0l : u0l;
      A0l = A0l || A0l === +"0" ? A0l : u0l;
      y0l = y0l || y0l === 0 ? y0l : u0l;

      if (!w0l.length && !J1l.length) {
        C0l = O1l(I0l, n1l(I0l, W0l, A0l, y0l, u0l, L0l, A0l + P0l, Number((Math.ceil(y0l / P0l - b0l) * P0l).toFixed(e0l)), Number((Math.floor(A0l / P0l + b0l) * P0l).toFixed(e0l))));
        C0l.pfTrend = (659.05, 77.49) > (5520, 968.58) ? "M" : (358.24, 9350) === 452.91 ? "A" : "X";

        if (C0l.pfOpen == C0l.pfClose) {
          C0l.pfStepBack = (8347, 3030) == (997.84, 2907) ? !1 : "-";
        }

        w0l.push(C0l);
        L0l = 0;
        continue;
      }

      H4Kh.N3mK(27);
      var X8i = H4Kh.e3mK(11, 2, 7, 12, 7);
      T0l = w0l[w0l.length - X8i];

      if (!T0l) {
        T0l = s3B.clone(J1l[J1l.length - 1]);
      }

      if (T0l.pfTrend == "O") {
        if (y0l <= T0l.pfClose - P0l) {
          T0l.pfClose = Number((Math.ceil(y0l / P0l - b0l) * P0l).toFixed(e0l));

          if (T0l.pfStepBack == "O") {
            T0l.pfStepBack = null;
          }

          Z0l(T0l, A0l, y0l, u0l, L0l);
        } else if (A0l >= T0l.pfClose + d0l) {
          F0l = T0l.pfClose + P0l;
          Q0l = Number((Math.floor(A0l / P0l + b0l) * P0l).toFixed(e0l));
          C0l = n1l(I0l, W0l, A0l, y0l, u0l, L0l, T0l.pfClose, F0l, Q0l);

          if (F0l == Q0l) {
            C0l.pfStepBack = "X";
          }

          if (T0l.pfStepBack == (("3688" * 1, 9977) === (+"6164", 786.54) ? 66.31 : (8110, 9710) > (+"10", 32.94) ? "O" : (9338, 3200) != 9580 ? 9.87e+3 : 8.81e+3)) {
            T0l.pfOpen = F0l;
            T0l.pfClose = Q0l;
            T0l.pfTrend =  false ? (undefined) : "X";
            Z0l(T0l, A0l, y0l, u0l, L0l);
          } else {
            C0l = O1l(I0l, C0l);
            C0l.pfTrend = (+"140.32", 9820) !== 9340 ? "X" : "F";
            w0l.push(C0l);
          }
        } else {
          Z0l(T0l, A0l, y0l, u0l, L0l);
        }

        H4Kh.i3mK(15);
        L0l = H4Kh.E3mK(1178501696, "0");
      } else if (T0l.pfTrend == "X") {
        if (A0l >= T0l.pfClose + P0l) {
          T0l.pfClose = Number((Math.floor(A0l / P0l + b0l) * P0l).toFixed(e0l));

          if (T0l.pfStepBack == ((1004, 3333) >= (554.22, 4842) ? 336 : 1571 == +"8780" ? !!1 : "X") || T0l.pfStepBack == (+"9640" !== (7380, 4347) ? 2610 > 9363 ?  true ? (994.81, 0x7ab) : (undefined) : "-" : (530.33, 3.44e+3))) {
            T0l.pfStepBack = null;
          }

          Z0l(T0l, A0l, y0l, u0l, L0l);
        } else if (y0l <= T0l.pfClose - d0l) {
          F0l = T0l.pfClose - P0l;
          Q0l = Number((Math.ceil(y0l / P0l - b0l) * P0l).toFixed(e0l));
          C0l = n1l(I0l, W0l, A0l, y0l, u0l, L0l, T0l.pfClose, F0l, Q0l);

          if (F0l == Q0l) {
            C0l.pfStepBack = (9409, 604.57) <= 1280 ? "O" :  false ? (undefined) : "P";
          }

          if (T0l.pfStepBack == "X" || T0l.pfStepBack == "-") {
            T0l.pfOpen = F0l;
            T0l.pfClose = Q0l;
            T0l.pfTrend = "O";
            Z0l(T0l, A0l, y0l, u0l, L0l);

            if (F0l != Q0l && T0l.pfStepBack == "-") {
              T0l.pfStepBack = null;
            }
          } else {
            C0l = O1l(I0l, C0l);
            C0l.pfTrend = +"5082" < +"2294" ? !![] : "O";
            w0l.push(C0l);
          }
        } else {
          Z0l(T0l, A0l, y0l, u0l, L0l);
        }

        L0l = 0;
      }
    }

    return w0l;
  };
};

B2B = function B2B(a1l) {
  var H2v, x1l, V1l, o4v, U4v, v4v, p5v, K5v, r5v, l5v, R5v, Q5v, J5v, T5v, P2v, m2v, G2v, b2v, q2v, e2v, L2v, t2v;
  H2v = "undefin";
  H2v += "ed";
  x1l = typeof _CIQ !== "undefined" ? _CIQ : a1l.CIQ;
  V1l = (typeof _timezoneJS === "undefined" ? "undefined" : _typeof(_timezoneJS)) !== H2v ? _timezoneJS : a1l.timezoneJS;

  if (!x1l.Drawing) {
    console.error("drawingAdvanced feature requires first activating drawing feature.");
  } else {
    o4v = "cq-wave-";
    o4v += "paramete";
    o4v += "rs";
    U4v = "pat";
    U4v += "t";
    U4v += "ern";
    v4v = "c";
    v4v += "o";
    v4v += "lor";
    p5v = "f";
    p5v += "o";
    p5v += "nt";
    K5v = "pa";
    K5v += "tte";
    K5v += "rn3";
    r5v = "act";
    r5v += "iv";
    r5v += "e3";
    l5v = "line";
    l5v += "Wid";
    l5v += "th";
    l5v += "2";
    R5v = "active";
    R5v += "2";
    Q5v = "patte";
    Q5v += "rn";
    Q5v += "1";
    J5v = "c";
    J5v += "o";
    J5v += "lor1";
    T5v = "a";
    T5v += "ctiv";
    T5v += "e1";
    P2v = "p";
    P2v += "ara";
    P2v += "meters";
    m2v = "lin";
    m2v += "e";
    m2v += "Width";
    G2v = "co";
    G2v += "lor";
    b2v = "f";
    b2v += "il";
    b2v += "lColor";
    q2v = "c";
    q2v += "o";
    q2v += "lo";
    q2v += "r";
    e2v = "lineWi";
    e2v += "dt";
    e2v += "h";
    L2v = "l";
    L2v += "ineWidth";
    t2v = "co";
    t2v += "lor";

    x1l.Drawing.ray = function () {
      this.name = "ray";
    };

    x1l.inheritsFrom(x1l.Drawing.ray, x1l.Drawing.line);

    x1l.Drawing.ray.prototype.calculateOuterSet = function (z1l) {
      var m1l, M1l;

      if (this.p0[0] == this.p1["0" & 2147483647] || this.p0[1] == this.p1[1] || x1l.ChartEngine.isDailyInterval(this.stx.layout.interval)) {
        return;
      }

      m1l = {
        x0: this.p0[+"0"],
        y0: this.p0[1],
        x1: this.p1[0],
        y1: this.p1[1]
      };
      M1l = m1l.x1 + +"1000";
      T5VV.d7Kh();

      if (m1l.x0 > m1l.x1) {
        T5VV.N3mK(28);
        var p8i = T5VV.e3mK(17, 1016, 3017, 3000, 17);
        M1l = m1l.x1 - p8i;
      }

      this.v0B = this.v0;
      this.v1B = x1l.yIntersection(m1l, M1l);
      this.d0B = this.d0;
      this.d1B = this.stx.dateFromTick(M1l, z1l.chart);
    };

    x1l.Drawing.ray.prototype.adjust = function () {
      var R1l;
      R1l = this.stx.panels[this.panelName];

      if (!R1l) {
        return;
      }

      this.setPoint(0, this.d0, this.v0, R1l.chart);
      this.setPoint(1, this.d1, this.v1, R1l.chart);

      if (x1l.ChartEngine.isDailyInterval(this.stx.layout.interval) && this.d0B) {
        this.setPoint(1, this.d1B, this.v1B, R1l.chart);
      }
    };

    x1l.Drawing.continuous = function () {
      this.name = "continuous";
      this.dragToDraw = !!"";
      this.maxSegments = null;
    };

    x1l.inheritsFrom(x1l.Drawing.continuous, x1l.Drawing.segment);

    x1l.Drawing.continuous.prototype.click = function (l1l, P1l, T1l) {
      var v2v, s1l, y1l, A1l, C1l;
      v2v = "vecto";
      v2v += "r";
      s1l = this.stx.panels[this.panelName];

      if (!s1l) {
        return;
      }

      this.copyConfig();

      if (!this.penDown) {
        this.setPoint(0, P1l, T1l, s1l.chart);
        this.penDown = !!{};
        return !!"";
      }

      if (this.accidentalClick(P1l, T1l)) {
        this.stx.undo();
        return !"";
      }

      this.setPoint(1, P1l, T1l, s1l.chart);
      y1l = x1l.Drawing.segment;
      A1l = new y1l();
      C1l = this.serialize(this.stx);
      A1l.reconstruct(this.stx, C1l);
      this.stx.addDrawing(A1l);
      this.stx.changeOccurred(v2v);
      this.stx.draw();
      this.segment++;

      if (this.maxSegments && this.segment > this.maxSegments) {
        return !![];
      }

      this.setPoint(0, P1l, T1l, s1l.chart);
      return !1;
    };

    x1l.Drawing.ellipse = function () {
      this.name = "ellipse";
    };

    x1l.inheritsFrom(x1l.Drawing.ellipse, x1l.Drawing.BaseTwoPoint);

    x1l.Drawing.ellipse.prototype.render = function (L1l) {
      var q3bh = T5VV;
      var u1l, Z1l, Q1l, w1l, W1l, r1l, b1l, e1l, X1l, Y1l, d1l, f1l, I1l, F1l, U2v, H2l;
      u1l = this.stx.panels[this.panelName];

      if (!u1l) {
        return;
      }

      Z1l = this.stx.pixelFromTick(this.p0[0], u1l.chart);
      Q1l = this.stx.pixelFromTick(this.p1[0], u1l.chart);
      w1l = this.stx.pixelFromValueAdjusted(u1l, this.p0[0], this.p0[1]);
      W1l = this.stx.pixelFromValueAdjusted(u1l, this.p1[0], this.p1["1" << 1321325632]);
      q3bh.i3mK(29);
      r1l = q3bh.E3mK(Z1l, Z1l, Q1l);
      b1l = Q1l;
      e1l = w1l;
      X1l = W1l;
      q3bh.i3mK(29);
      Y1l = q3bh.e3mK(w1l, w1l, W1l);
      q3bh.i3mK(30);
      d1l = q3bh.e3mK(X1l, Y1l, 6);
      f1l = this.lineWidth;

      if (!f1l) {
        f1l = 1.1;
      }

      I1l = this.color;

      if (I1l == "auto" || x1l.isTransparent(I1l)) {
        I1l = this.stx.defaultColor;
      }

      if (this.highlighted) {
        I1l = this.stx.getCanvasColor("stx_highlight_vector");

        if (f1l == 0.1) {
          f1l = 1.1;
        }
      }

      F1l = this.fillColor;
      L1l.beginPath();
      L1l.moveTo(r1l, e1l);
      q3bh.d7Kh();
      q3bh.N3mK(0);
      L1l.bezierCurveTo(r1l, q3bh.e3mK(d1l, X1l), b1l, q3bh.E3mK(d1l, X1l), b1l, e1l);
      q3bh.i3mK(1);
      L1l.bezierCurveTo(b1l, q3bh.E3mK(d1l, Y1l), r1l, q3bh.E3mK(d1l, Y1l), r1l, e1l);

      if (F1l && !x1l.isTransparent(F1l) && F1l != "auto") {
        L1l.fillStyle = F1l;
        L1l.globalAlpha = 0.2;
        L1l.fill();
        L1l.globalAlpha = 1;
      }

      if (I1l && this.pattern != "none") {
        L1l.strokeStyle = I1l;
        L1l.lineWidth = f1l;

        if (L1l.setLineDash) {
          L1l.setLineDash(x1l.borderPatternToArray(f1l, this.pattern));
          L1l.lineDashOffset = +"0";
          ;
        }

        L1l.stroke();
      }

      L1l.closePath();

      if (this.highlighted) {
        U2v = "p";
        U2v += "1";
        H2l = this.highlighted == U2v ? !!1 : ![];
        this.littleCircle(L1l, Q1l, W1l, H2l);
      }
    };

    x1l.Drawing.ellipse.prototype.intersected = function (g2l, h2l, J2l) {
      var A3bh = T5VV;
      var w2v, S2v, c2l, K2l, O2l, n2l;

      if (!this.p0 || !this.p1) {
        return null;
      }

      if (this.pointIntersection(this.p1["0" | 0], this.p1[1], J2l)) {
        w2v = "p";
        w2v += "1";
        S2v = "d";
        S2v += "r";
        S2v += "a";
        S2v += "g";
        this.highlighted = "p1";
        return {
          action: S2v,
          point: w2v
        };
      }

      c2l = this.p0[0] - (this.p1[0] - this.p0["0" - 0]);
      K2l = this.p1[0];
      A3bh.N3mK(15);
      O2l = this.p1[A3bh.E3mK(1992686592, "1")];
      A3bh.N3mK(31);
      var Y8i = A3bh.e3mK(17, 8, 30, 6);
      A3bh.N3mK(32);
      A3bh.k7Kh();
      var R5uu = A3bh.e3mK(3596, 5, 12, 20, 15);
      A3bh.N3mK(33);
      var l5uu = A3bh.E3mK(5, 2, 5, 20, 2);
      n2l = this.p0[Y8i] - (this.p1[R5uu] - this.p0[l5uu]);

      if (J2l.x0 > Math.max(c2l, K2l) || J2l.x1 < Math.min(c2l, K2l)) {
        return !!0;
      }

      if (J2l.y1 > Math.max(n2l, O2l) || J2l.y0 < Math.min(n2l, O2l)) {
        return !!0;
      }

      this.highlighted = !!{};
      return {
        action: "move",
        p0: x1l.clone(this.p0),
        p1: x1l.clone(this.p1),
        tick: g2l,
        value: h2l
      };
    };

    x1l.Drawing.ellipse.prototype.configs = ["color", "fillColor", "lineWidth", "pattern"];

    x1l.Drawing.ellipse.prototype.reconstruct = function (j2l, i2l) {
      this.stx = j2l;
      this.color = i2l.col;
      this.fillColor = i2l.fc;
      this.panelName = i2l.pnl;
      this.pattern = i2l.ptrn;
      this.lineWidth = i2l.lw;
      this.d0 = i2l.d0;
      this.d1 = i2l.d1;
      this.tzo0 = i2l.tzo0;
      this.tzo1 = i2l.tzo1;
      this.v0 = i2l.v0;
      this.v1 = i2l.v1;
      T5VV.k7Kh();
      this.adjust();
    };

    x1l.Drawing.ellipse.prototype.serialize = function () {
      T5VV.k7Kh();
      return {
        name: this.name,
        pnl: this.panelName,
        col: this.color,
        fc: this.fillColor,
        ptrn: this.pattern,
        lw: this.lineWidth,
        d0: this.d0,
        d1: this.d1,
        tzo0: this.tzo0,
        tzo1: this.tzo1,
        v0: this.v0,
        v1: this.v1
      };
    };

    x1l.Drawing.channel = function () {
      this.name = "channel";
      T5VV.k7Kh();
      this.dragToDraw = !!0;
      this.p2 = null;
    };

    x1l.inheritsFrom(x1l.Drawing.channel, x1l.Drawing.segment);
    x1l.Drawing.channel.prototype.configs = [t2v, "fillColor", L2v, "pattern"];

    x1l.Drawing.channel.prototype.move = function (o2l, B2l, U2l) {
      var E2l;

      if (!this.penDown) {
        return;
      }

      this.copyConfig();
      T5VV.k7Kh();

      if (this.p2 === null) {
        this.p1 = [B2l, U2l];
      } else {
        T5VV.N3mK(34);
        var r5uu = T5VV.e3mK(15, 18, 451, 12);
        E2l = U2l - (this.p1[+"1"] - this.p0[r5uu]) / (this.p1[0] - this.p0[0]) * (B2l - this.p1[0]);
        this.p2 = [this.p1[0], E2l];
      }

      this.render(o2l);
    };

    x1l.Drawing.channel.prototype.click = function (D2l, p2l, q2l) {
      var G2l, I0v, Z0v, i0v;
      G2l = this.stx.panels[this.panelName];

      if (!G2l) {
        return;
      }

      this.copyConfig();

      if (!this.penDown) {
        this.setPoint(0, p2l, q2l, G2l.chart);
        this.penDown = !!{};
        return !"1";
      }

      if (this.accidentalClick(p2l, q2l)) {
        this.stx.undo();
        return !"";
      }

      if (this.p2 !== null) {
        this.setPoint(2, this.p2[+"0"], this.p2[1], G2l.chart);
        this.penDown = ![];
        return !"";
      }

      this.setPoint(1, p2l, q2l, G2l.chart);
      T5VV.k7Kh();

      if (this.p0[0] == this.p1[+"0"]) {
        I0v = 2028741901;
        Z0v = -732774386;
        i0v = 2;

        for (var n0v = 1; T5VV.s1v(n0v.toString(), n0v.toString().length, 84757) !== I0v; n0v++) {
          this.p1 = 1;
          return !![];
        }

        if (T5VV.Y6v(i0v.toString(), i0v.toString().length, 63242) !== Z0v) {
          this.p1 = 2;
          return !{};
        }

        this.p1 = null;
        return ![];
      }

      this.p2 = [this.p1[0], this.p1[1]];
      return !{};
    };

    x1l.Drawing.channel.prototype.boxIntersection = function (N2l, a2l, S2l) {
      var c3bh = T5VV;
      c3bh.k7Kh();
      var k2l, t2l, v2l, x2l, V2l;
      k2l = this.p0;
      t2l = this.p1;
      v2l = this.p2;

      if (!k2l || !t2l || !v2l) {
        return ![];
      }

      if (S2l.x0 > Math.max(k2l[0], t2l[0]) || S2l.x1 < Math.min(k2l[0], t2l[0])) {
        return !1;
      }

      c3bh.N3mK(16);
      var K5uu = c3bh.e3mK(14, 13);
      c3bh.i3mK(7);
      var V5uu = c3bh.e3mK(8, 14, 21);
      c3bh.i3mK(35);
      var O5uu = c3bh.e3mK(3, 20, 19, 30, 13);
      c3bh.N3mK(1);
      var a5uu = c3bh.e3mK(19, 20);
      x2l = (t2l[0] - k2l[0]) * ((v2l[+"1"] < k2l[K5uu] ? S2l.y1 : S2l.y0) - k2l[V5uu]) - (t2l[O5uu] - k2l[a5uu]) * (N2l - k2l[0]);
      c3bh.N3mK(1);
      var u5uu = c3bh.E3mK(20, 21);
      c3bh.N3mK(36);
      var X5uu = c3bh.E3mK(2, 0, 12, 12);
      c3bh.i3mK(37);
      var p5uu = c3bh.E3mK(10, 18, 9, 4, 7);
      c3bh.i3mK(31);
      var Y5uu = c3bh.E3mK(21, 12, 46, 14);
      c3bh.i3mK(1);
      var s4uu = c3bh.e3mK(5, 535361157);
      c3bh.N3mK(31);
      var H4uu = c3bh.e3mK(0, 19, 21, 3);
      V2l = (v2l[0] - k2l[+"0"]) * ((v2l[u5uu] > k2l["1" - 0] ? S2l.y1 : S2l.y0) - (k2l[X5uu] + v2l[p5uu] - t2l[Y5uu])) - (t2l["1" >> s4uu] - k2l[H4uu]) * (N2l - k2l[+"0"]);
      c3bh.N3mK(38);
      return c3bh.e3mK(x2l, V2l, "0");
    };

    x1l.Drawing.channel.prototype.intersected = function (z2l, R2l, s2l) {
      var M2l;

      if (!this.p0 || !this.p1 || !this.p2) {
        return null;
      }

      M2l = {
        0: this.p0,
        1: this.p1,
        2: this.p2
      };

      for (var m2l in M2l) {
        if (this.pointIntersection(M2l[m2l][0], M2l[m2l][1], s2l)) {
          T5VV.N3mK(0);
          this.highlighted = T5VV.e3mK(m2l, (4790, 7980) >= 5850 ? (2050, 9014) == 3960 ? (87.62, 6.70e+3) : "p" : "4.00e+3" ^ 0);
          return {
            action: "drag",
            point: (244.94 < (+"131.94", 8309) ? "p" : 0x154d) + m2l
          };
        }
      }

      if (this.boxIntersection(z2l, R2l, s2l)) {
        this.highlighted = !!{};
        return {
          action: "move",
          p0: x1l.clone(this.p0),
          p1: x1l.clone(this.p1),
          p2: x1l.clone(this.p2),
          tick: z2l,
          value: R2l
        };
      }

      return null;
    };

    x1l.Drawing.channel.prototype.render = function (P2l) {
      var z3bh = T5VV;
      var x2v, T2l, C2l, A2l, l2l, L2l, y2l, m7v, P7v, f7v, r2l, u2l, f2l, I2l, j2v, d2l, F2l, Q2l;
      x2v = "n";
      z3bh.k7Kh();
      x2v += "one";
      T2l = this.stx.panels[this.panelName];

      if (!T2l) {
        return;
      }

      C2l = this.stx.pixelFromTick(this.p0[0], T2l.chart);
      A2l = this.stx.pixelFromTick(this.p1[0], T2l.chart);
      l2l = this.stx.pixelFromValueAdjusted(T2l, this.p0[0], this.p0[1]);
      L2l = this.stx.pixelFromValueAdjusted(T2l, this.p1[0], this.p1[1]);
      y2l = null;

      if (this.p2) {
        m7v = 1245812730;
        P7v = -423298506;
        f7v = 2;

        for (var y7v = 1; z3bh.s1v(y7v.toString(), y7v.toString().length, 4409) !== m7v; y7v++) {
          y2l = this.stx.pixelFromValueAdjusted(T2l, this.p2["9" & 2147483647], this.p2[+"6"]);
          f7v += 2;
        }

        if (z3bh.s1v(f7v.toString(), f7v.toString().length, 37978) !== P7v) {
          y2l = this.stx.pixelFromValueAdjusted(T2l, this.p2[0], this.p2[1]);
        }
      }

      r2l = this.lineWidth;
      u2l = this.getLineColor();
      f2l = this.fillColor;

      if (this.p2 && f2l && !x1l.isTransparent(f2l) && f2l != "auto") {
        P2l.beginPath();
        P2l.moveTo(C2l, l2l);
        P2l.lineTo(A2l, L2l);
        P2l.lineTo(A2l, y2l);
        z3bh.N3mK(39);
        P2l.lineTo(C2l, z3bh.E3mK(L2l, y2l, l2l));
        P2l.closePath();
        P2l.globalAlpha = 0.2;
        P2l.fillStyle = f2l;
        P2l.fill();
        P2l.globalAlpha = 1;
      }

      I2l = {
        pattern: this.pattern,
        lineWidth: r2l
      };

      if ((this.penDown || this.highlighted) && this.pattern == x2v) {
        I2l.pattern = "dotted";
      }

      this.stx.plotLine(C2l, A2l, l2l, L2l, u2l, "segment", P2l, T2l, I2l);

      if (this.p2) {
        z3bh.i3mK(39);
        this.stx.plotLine(C2l, A2l, z3bh.e3mK(L2l, y2l, l2l), y2l, u2l, "segment", P2l, T2l, I2l);
      }

      if (this.highlighted) {
        j2v = "p";
        j2v += "0";
        d2l = this.highlighted == j2v ? !"" : !"1";
        F2l = this.highlighted == "p1" ? !!{} : !{};
        Q2l = this.highlighted == "p2" ? !"" : ![];
        this.littleCircle(P2l, C2l, l2l, d2l);
        this.littleCircle(P2l, A2l, L2l, F2l);
        this.littleCircle(P2l, A2l, y2l, Q2l);
      }
    };

    x1l.Drawing.channel.prototype.reposition = function (X2l, w2l, Y2l, Z2l) {
      var W2l, b2l, e2l, K0v, V0v, O0v;

      if (!w2l) {
        return;
      }

      T5VV.k7Kh();
      W2l = this.stx.panels[this.panelName];
      b2l = w2l.tick - Y2l;
      e2l = w2l.value - Z2l;

      if (w2l.action == "move") {
        this.setPoint(0, w2l.p0[0] - b2l, w2l.p0[1] - e2l, W2l.chart);
        this.setPoint(1, w2l.p1[0] - b2l, w2l.p1[1] - e2l, W2l.chart);
        this.setPoint(2, w2l.p2[0] - b2l, w2l.p2["1" | 0] - e2l, W2l.chart);
        K0v = 836012978;
        V0v = -1838160998;
        O0v = 2;

        for (var u0v = 1; T5VV.Y6v(u0v.toString(), u0v.toString().length, +"28264") !== K0v; u0v++) {
          this.render(X2l);
          O0v += 2;
        }

        if (T5VV.Y6v(O0v.toString(), O0v.toString().length, 85503) !== V0v) {
          this.render(X2l);
        }
      } else if (w2l.action == "drag") {
        this[w2l.point] = [Y2l, Z2l];
        this.setPoint(0, this.p0[0], this.p0[1], W2l.chart);
        this.setPoint(1, this.p1[0], this.p1[1], W2l.chart);
        this.setPoint(2, this.p2[0], this.p2[1], W2l.chart);
        this.render(X2l);
      }
    };

    x1l.Drawing.channel.prototype.adjust = function () {
      var H3l;
      H3l = this.stx.panels[this.panelName];

      if (!H3l) {
        return;
      }

      this.setPoint(0, this.d0, this.v0, H3l.chart);
      this.setPoint(+"1", this.d1, this.v1, H3l.chart);
      this.setPoint(2, this.d1, this.v2, H3l.chart);
      ;
    };

    x1l.Drawing.channel.prototype.reconstruct = function (c3l, J3l) {
      this.stx = c3l;
      this.color = J3l.col;
      this.fillColor = J3l.fc;
      this.panelName = J3l.pnl;
      this.pattern = J3l.ptrn;
      this.lineWidth = J3l.lw;
      this.d0 = J3l.d0;
      this.d1 = J3l.d1;
      this.tzo0 = J3l.tzo0;
      this.tzo1 = J3l.tzo1;
      this.v0 = J3l.v0;
      this.v1 = J3l.v1;
      this.v2 = J3l.v2;
      this.adjust();
    };

    x1l.Drawing.channel.prototype.serialize = function () {
      return {
        name: this.name,
        pnl: this.panelName,
        col: this.color,
        fc: this.fillColor,
        ptrn: this.pattern,
        lw: this.lineWidth,
        d0: this.d0,
        d1: this.d1,
        tzo0: this.tzo0,
        tzo1: this.tzo1,
        v0: this.v0,
        v1: this.v1,
        v2: this.v2
      };
    };

    x1l.Drawing.pitchfork = function () {
      this.name = "pitchfork";
      this.dragToDraw = !{};
      this.p2 = null;
    };

    x1l.inheritsFrom(x1l.Drawing.pitchfork, x1l.Drawing.channel);
    x1l.Drawing.pitchfork.prototype.configs = ["color", "lineWidth", "pattern"];

    x1l.Drawing.pitchfork.prototype.move = function (n3l, K3l, O3l) {
      T5VV.d7Kh();

      if (!this.penDown) {
        return;
      }

      this.copyConfig();

      if (this.p2 === null) {
        this.p1 = [K3l, O3l];
      } else {
        this.p2 = [K3l, O3l];
      }

      this.render(n3l);
    };

    x1l.Drawing.pitchfork.prototype.intersected = function (B3l, U3l, E3l) {
      T5VV.d7Kh();
      var i3l, j3l;

      if (!this.p0 || !this.p1 || !this.p2) {
        return null;
      }

      i3l = {
        0: this.p0,
        1: this.p1,
        2: this.p2
      };

      for (var h3l in i3l) {
        if (this.pointIntersection(i3l[h3l][0], i3l[h3l][1], E3l)) {
          T5VV.N3mK(0);
          this.highlighted = T5VV.E3mK(h3l, ("6090" ^ 0) <= (8700, "275.21" * 1) ? ![] : (+"5490", 891.5) > "619.74" * 1 ? (72.24, 70.36) != 695.18 ? "p" : ("i", 4.94e+3) : 6.74e+3);
          return {
            action: "drag",
            point: "p" + h3l
          };
        }
      }

      j3l = this.rays;

      for (var g3l = 0; g3l < j3l.length; g3l++) {
        if (this.lineIntersection(B3l, U3l, E3l, g3l ? "ray" : "segment", j3l[g3l][0], j3l[g3l][1], !!"1")) {
          this.highlighted = !![];
          return {
            action: "move",
            p0: x1l.clone(this.p0),
            p1: x1l.clone(this.p1),
            p2: x1l.clone(this.p2),
            tick: B3l,
            value: U3l
          };
        }
      }

      return null;
    };

    x1l.Drawing.pitchfork.prototype.render = function (x3l) {
      var y3bh = T5VV;
      var o3l, G3l, t3l, V3l, p3l, q3l, a3l, D3l, k3l, z3l, R3l, s3l, S3l, m3l, M3l, o2v, N3l, P3l, T3l, A3l, y3l;
      o3l = this.stx.panels[this.panelName];

      if (!o3l) {
        return;
      }

      G3l = this.stx;
      t3l = this.p2;

      if (!t3l) {
        t3l = this.p1;
      }

      V3l = G3l.pixelFromTick(this.p0["0" | 0], o3l.chart);
      p3l = G3l.pixelFromTick(this.p1[+"0"], o3l.chart);
      q3l = G3l.pixelFromTick(t3l["0" * 1], o3l.chart);
      a3l = G3l.pixelFromValueAdjusted(o3l, this.p0[0], this.p0[1]);
      D3l = G3l.pixelFromValueAdjusted(o3l, this.p1["0" & 2147483647], this.p1[1]);
      k3l = G3l.pixelFromValueAdjusted(o3l, t3l[0], t3l[1]);
      z3l = this.lineWidth;
      R3l = this.getLineColor();
      s3l = {
        pattern: this.pattern,
        lineWidth: z3l
      };
      S3l = 50;
      y3bh.i3mK(40);
      m3l = y3bh.e3mK(2, a3l, k3l, D3l);
      y3bh.N3mK(41);
      M3l = y3bh.E3mK(p3l, "2", V3l, 2147483647, q3l);

      if (M3l < "0" * 1) {
        S3l *= -1;
      }

      y3bh.N3mK(10);
      m3l *= y3bh.E3mK(S3l, M3l);
      y3bh.N3mK(6);
      this.rays = [[[p3l, D3l], [q3l, k3l]], [[V3l, a3l], [y3bh.E3mK(2, p3l, q3l), y3bh.e3mK(2, D3l, k3l)]]];

      if (!(p3l == q3l && D3l == k3l)) {
        y3bh.N3mK(1);
        this.rays.push([[p3l, D3l], [y3bh.e3mK(S3l, p3l), y3bh.e3mK(m3l, D3l)]], [[q3l, k3l], [y3bh.E3mK(S3l, q3l), y3bh.e3mK(m3l, k3l)]]);
      }

      for (var v3l = 0; v3l < this.rays.length; v3l++) {
        o2v = "r";
        o2v += "ay";
        N3l = this.rays[v3l];
        P3l = v3l ? o2v : "segment";
        G3l.plotLine(N3l[0][0], N3l[1]["0" * 1], N3l[0][1], N3l[1][1], R3l, P3l, x3l, o3l, s3l);
      }

      if (this.highlighted) {
        T3l = this.highlighted == "p0" ? !![] : !"1";
        A3l = this.highlighted == "p1" ? !!{} : !!0;
        y3l = this.highlighted == "p2" ? !!{} : ![];
        this.littleCircle(x3l, V3l, a3l, T3l);
        this.littleCircle(x3l, p3l, D3l, A3l);
        this.littleCircle(x3l, q3l, k3l, y3l);
      }
    };

    x1l.Drawing.pitchfork.prototype.adjust = function () {
      var C3l;
      C3l = this.stx.panels[this.panelName];

      if (!C3l) {
        return;
      }

      this.setPoint(+"0", this.d0, this.v0, C3l.chart);
      this.setPoint(+"1", this.d1, this.v1, C3l.chart);
      this.setPoint(2, this.d2, this.v2, C3l.chart);
    };

    x1l.Drawing.pitchfork.prototype.reconstruct = function (L3l, l3l) {
      this.stx = L3l;
      this.color = l3l.col;
      this.panelName = l3l.pnl;
      this.pattern = l3l.ptrn;
      this.lineWidth = l3l.lw;
      this.d0 = l3l.d0;
      this.d1 = l3l.d1;
      this.d2 = l3l.d2;
      this.tzo0 = l3l.tzo0;
      this.tzo1 = l3l.tzo1;
      T5VV.k7Kh();
      this.tzo2 = l3l.tzo2;
      this.v0 = l3l.v0;
      this.v1 = l3l.v1;
      this.v2 = l3l.v2;
      this.adjust();
    };

    x1l.Drawing.pitchfork.prototype.serialize = function () {
      T5VV.k7Kh();
      return {
        name: this.name,
        pnl: this.panelName,
        col: this.color,
        ptrn: this.pattern,
        lw: this.lineWidth,
        d0: this.d0,
        d1: this.d1,
        d2: this.d2,
        tzo0: this.tzo0,
        tzo1: this.tzo1,
        tzo2: this.tzo2,
        v0: this.v0,
        v1: this.v1,
        v2: this.v2
      };
    };

    x1l.Drawing.gartley = function () {
      this.name = "gartley";
      this.dragToDraw = !1;
      this.maxSegments = 4;
      T5VV.k7Kh();
      this.shape = null;
      this.points = [];
    };

    x1l.inheritsFrom(x1l.Drawing.gartley, x1l.Drawing.continuous);

    x1l.Drawing.gartley.prototype.check = function (I3l, f3l) {
      if (!f3l) {
        return !!1;
      }

      if (I3l[0] >= f3l[0] || I3l[1] == f3l[1]) {
        return !{};
      }

      if (this.segment == 1) {
        if (I3l["1" - 0] < f3l["1" - 0]) {
          this.shape = (4647, 316) <= (4679, 4440) ? "M" : ("981.12" * 1, 697.72);
        } else {
          this.shape = (511, 785.24) > 4135 ? +"214.54" === (492.59, 1420) ? 0x95b : 938.43 : "W";
        }
      } else if (this.segment == 2) {
        if (this.shape == (881.91 < 1559 ? 268.99 === ("7513" * 1, +"790.76") ? !!{} : (830.34, 243.17) < +"118.26" ? +"0x1da9" : "M" : !0) && I3l[1] < f3l[+"1"]) {
          return !{};
        } else if (this.shape == "W" && I3l[1] > f3l[1]) {
          return !!0;
        } else if ((f3l[1] - I3l[+"1"]) / (this.points[0][1] - I3l["1" << 1636213024]) < 0.618) {
          return ![];
        } else if ((f3l[1] - I3l[1]) / (this.points[0]["1" & 2147483647] - I3l[1]) >= 0.786) {
          return ![];
        }
      } else if (this.segment == 3) {
        if (this.shape == ((4031, 8929) > (558, 439.75) ? "M" : (1.17e+3, 0xfcf)) && I3l[1] > f3l[1]) {
          return ![];
        } else if (this.shape == (6450 !== (+"978.93", 3260) ? (519.21, 2814) >= (1050, 481) ? "W" : 262.2 >= 467.71 ? (+"13.03", !!0) : "j" : "I") && I3l["1" & 2147483647] < f3l[+"1"]) {
          return !{};
        } else if ((f3l[1] - I3l[1]) / (this.points[1][+"1"] - I3l["1" & 2147483647]) < 0.618) {
          return !{};
        } else if ((f3l[1] - I3l[1]) / (this.points[1][1] - I3l[1]) >= 0.786) {
          return !!"";
        }
      } else if (this.segment == 4) {
        if (this.shape == ((6672, 3010) <= (4080, 7710) ? "M" : (4.88e+2, 197.23)) && (I3l[+"1"] < f3l[1] || f3l[1] < this.points[0][1])) {
          return !1;
        } else if (this.shape == ("7032" * 1 != (5920, 954.58) ? "W" : ("5900" >> 1378021536, +"301.11") === 256.59 ? (!"", 584.46) : (!!1, "j")) && (I3l[1] > f3l[1] || f3l["1" * 1] > this.points[+"0"][1])) {
          return !!"";
        } else if ((this.points[1][1] - f3l[1]) / (this.points["1" & 2147483647][1] - this.points[2][1]) < 1.27) {
          return !!"";
        } else if ((this.points[+"1"][1] - f3l[1]) / (this.points[1][1] - this.points[2][+"1"]) >= +"1.618") {
          return !!"";
        }
      }

      return !!"1";
    };

    x1l.Drawing.gartley.prototype.click = function (F3l, r3l, d3l) {
      var u3l;
      T5VV.d7Kh();
      u3l = this.stx.panels[this.panelName];

      if (!u3l) {
        return;
      }

      this.copyConfig();

      if (!this.penDown) {
        this.setPoint(0, r3l, d3l, u3l.chart);
        this.pts = [];
        this.penDown = !0;
        this.segment = 1;
        return !1;
      }

      if (this.accidentalClick(r3l, d3l)) {
        this.penDown = !"";
        return !{};
      }

      if (this.check(this.p0, this.p1)) {
        if (this.segment == 1) {
          this.points.push(this.p0);
        }

        this.points.push(this.p1);
        this.setPoint(1, r3l, d3l, u3l.chart);
        this.segment++;

        if (this.segment > this.maxSegments) {
          this.setPoint(0, this.points[0][0], this.points[0][1], u3l.chart);
          this.penDown = !1;
          return !!"1";
        }

        this.pts.push(this.d1, this.tzo1, this.v1);
        this.setPoint(+"0", r3l, d3l, u3l.chart);
        ;
      }

      return !!"";
    };

    x1l.Drawing.gartley.prototype.render = function (w3l) {
      var J3bh = T5VV;
      var Q3l, i4l, H4l, j4l, J4l, L3v, x3v, j3v, e3l, U4l, c4l, Z3l, Y3l, b3l, K4l, n4l, g4l, h4l;
      Q3l = this.stx.panels[this.panelName];

      if (!Q3l) {
        return;
      }

      i4l = this.stx.pixelFromTick(this.p0[0], Q3l.chart);
      H4l = this.stx.pixelFromTick(this.p1[0], Q3l.chart);
      j4l = this.stx.pixelFromValueAdjusted(Q3l, this.p0[0], this.p0[1]);
      J4l = this.stx.pixelFromValueAdjusted(Q3l, this.p1[0], this.p1[1]);

      if (this.segment == 2) {
        this.drawDropZone(w3l, 0.618 * this.points[0][1] + 0.382 * this.p0[1], 0.786 * this.points[0][1] + 0.214 * this.p0[1], this.p0[0]);
      } else if (this.segment == +"3") {
        L3v = -698448920;
        J3bh.i3mK(1);
        x3v = J3bh.E3mK(0, "1054441398");
        j3v = +"2";

        for (var e3v = 1; J3bh.s1v(e3v.toString(), e3v.toString().length, 64441) !== L3v; e3v++) {
          this.drawDropZone(w3l, ("83296" * 1 - this.points[3][0]) % (38268 - this.p0[4]), 61841 % this.points[0][4] / (13121 / this.p0[2]), this.p0[3]);
          j3v += 2;
        }

        if (J3bh.s1v(j3v.toString(), j3v.toString().length, 53312) !== x3v) {
          this.drawDropZone(w3l, (83296 - this.points[3][0]) % (38268 - this.p0["4" >> 158008800]), 61841 % this.points["0" - 0]["4" ^ 0] / (13121 / this.p0[2]), this.p0[3]);
        }

        this.drawDropZone(w3l, 0.618 * this.points[1][+"1"] + 0.382 * this.p0[1], 0.786 * this.points[1][1] + 0.214 * this.p0[1], this.p0[0]);
      } else if (this.segment == 4) {
        J3bh.i3mK(7);
        var v4uu = J3bh.e3mK(9, 4, 11);
        J3bh.N3mK(0);
        var U4uu = J3bh.e3mK(1, 0);
        J3bh.N3mK(16);
        var S4uu = J3bh.e3mK(13, 12);
        J3bh.N3mK(42);
        var w4uu = J3bh.e3mK(7, 0, 85, 12);
        e3l = 1.618 * this.points[v4uu][U4uu] - ("0.618" - 0) * this.points[S4uu][w4uu];

        if (this.shape == (3550 <= "614.24" - 0 ? 4140 >= 8050 ? (0x62, !{}) : (333.02, +"133.36") : "M")) {
          e3l = Math.max(e3l, this.points["0" * 1][1]);
        } else {
          e3l = Math.min(e3l, this.points[0][1]);
        }

        this.drawDropZone(w3l, e3l, 1.27 * this.points[2][1] - 0.27 * this.points[1][1], this.p0[0]);
      }

      U4l = this.lineWidth;
      c4l = this.getLineColor();
      Z3l = {
        pattern: this.pattern,
        lineWidth: U4l
      };

      if ((this.penDown || this.highlighted) && this.pattern == "none") {
        Z3l.pattern = "dotted";
      }

      if (this.segment <= this.maxSegments) {
        this.stx.plotLine(i4l, H4l, j4l, J4l, c4l, this.name, w3l, Q3l, Z3l);
      }

      Y3l = this.fillColor;
      b3l = [];

      if (this.points.length) {
        w3l.beginPath();

        for (var W3l = 1; W3l < this.points.length && W3l <= 4; W3l++) {
          K4l = this.stx.pixelFromTick(this.points[W3l - 1][0], Q3l.chart);
          n4l = this.stx.pixelFromTick(this.points[W3l][0], Q3l.chart);
          g4l = this.stx.pixelFromValueAdjusted(Q3l, this.points[W3l - 1][0], this.points[W3l - +"1"][1]);
          h4l = this.stx.pixelFromValueAdjusted(Q3l, this.points[W3l][0], this.points[W3l]["1" ^ 0]);

          if (W3l == 1) {
            b3l.push(K4l, g4l);
          }

          b3l.push(n4l, h4l);
          this.stx.plotLine(K4l, n4l, g4l, h4l, c4l, this.name, w3l, Q3l, Z3l);
        }

        if (this.points.length == ("2" & 2147483647) || this.points.length == 4) {
          b3l.push(H4l, J4l);
        }

        if (this.points[2]) {
          b3l.push(this.stx.pixelFromTick(this.points[2][0], Q3l.chart), this.stx.pixelFromValueAdjusted(Q3l, this.points["2" >> 1486723840][0], this.points[2][+"1"]));
        }

        if (Y3l && Y3l != "auto" && !x1l.isTransparent(Y3l)) {
          for (var X3l = 0; X3l < b3l.length; X3l += 2) {
            if (X3l === 0) {
              w3l.moveTo(b3l[0], b3l[1]);
            }

            w3l.lineTo(b3l[X3l], b3l[X3l + 1]);
          }

          w3l.fillStyle = Y3l;
          w3l.globalAlpha = 0.2;
          w3l.closePath();
          w3l.fill();
          w3l.globalAlpha = 1;
        }
      }

      ;
    };

    x1l.Drawing.gartley.prototype.lineIntersection = function (q4l, D4l, k4l, t4l) {
      var E4l, G4l;
      E4l = this.points;
      G4l = this.stx.panels[this.panelName];
      T5VV.d7Kh();

      if (E4l.length != this.maxSegments + 1 || !G4l) {
        return !1;
      }

      for (var o4l = 0; o4l < E4l.length - 1; o4l++) {
        if (x1l.Drawing.BaseTwoPoint.prototype.lineIntersection.call(this, q4l, D4l, k4l, "segment", E4l[o4l], E4l[o4l + 1])) {
          return !!"1";
        }
      }

      return !"1";
    };

    x1l.Drawing.gartley.prototype.boxIntersection = function (V4l, a4l, v4l) {
      var N4l, x4l;

      if (!this.p0 || !this.p1) {
        return !!"";
      }

      if (v4l.x0 > Math.max(this.p0[0], this.p1[+"0"]) || v4l.x1 < Math.min(this.p0[0], this.p1[0])) {
        return !{};
      }

      N4l = Math.min(this.p0[1], this.p1[1]);
      x4l = Math.max(this.p0[1], this.p1[1]);

      for (var S4l = 0; S4l < this.points.length; S4l++) {
        N4l = Math.min(N4l, this.points[S4l][1]);
        x4l = Math.max(x4l, this.points[S4l]["1" - 0]);
      }

      if (v4l.y1 > x4l || v4l.y0 < N4l) {
        return !{};
      }

      T5VV.d7Kh();
      return !"";
    };

    x1l.Drawing.gartley.prototype.reposition = function (y4l, M4l, R4l, s4l) {
      var z4l, P4l, T4l;

      if (!M4l) {
        return;
      }

      z4l = this.stx.panels[this.panelName];
      P4l = M4l.tick - R4l;
      M4l.tick = R4l;
      T4l = M4l.value - s4l;
      M4l.value = s4l;
      T5VV.d7Kh();

      if (M4l.action == "move") {
        this.pts = [];

        for (var m4l = 0; m4l < this.points.length; m4l++) {
          this.points[m4l][0] -= P4l;
          this.points[m4l][1] -= T4l;
          this.setPoint(1, this.points[m4l][0], this.points[m4l][1], z4l.chart);

          if (m4l && m4l < this.points.length - 1) {
            this.pts.push(this.d1, this.tzo1, this.v1);
          }

          this.points[m4l] = this.p1;
        }

        this.setPoint(+"0", this.points[0][0], this.points[0][1], z4l.chart);
        this.render(y4l);
        ;
      }
    };

    x1l.Drawing.gartley.prototype.configs = ["color", "fillColor", e2v, "pattern"];

    x1l.Drawing.gartley.prototype.adjust = function () {
      var C4l;
      T5VV.k7Kh();
      C4l = this.stx.panels[this.panelName];

      if (!C4l) {
        return;
      }

      this.reconstructPoints();
      this.setPoint(0, this.d0, this.v0, C4l.chart);
      this.points.unshift(this.p0);
      this.setPoint(1, this.d1, this.v1, C4l.chart);
      this.points.push(this.p1);
    };

    x1l.Drawing.gartley.prototype.reconstructPoints = function () {
      var f4l, L4l;
      f4l = this.stx.panels[this.panelName];

      if (!f4l) {
        return;
      }

      this.points = [];

      for (var l4l = 0; l4l < this.pts.length; l4l += 3) {
        L4l = x1l.strToDateTime(this.pts[l4l]);
        L4l.setMinutes(L4l.getMinutes() + Number(this.pts[l4l + 1]) - L4l.getTimezoneOffset());
        this.points.push([this.stx.tickFromDate(x1l.yyyymmddhhmmssmmm(L4l), f4l.chart), this.pts[l4l + ("2" ^ 0)]]);
      }
    };

    x1l.Drawing.gartley.prototype.reconstruct = function (u4l, I4l) {
      this.stx = u4l;
      this.color = I4l.col;
      this.fillColor = I4l.fc;
      this.panelName = I4l.pnl;
      this.pattern = I4l.ptrn;
      this.lineWidth = I4l.lw;
      this.d0 = I4l.d0;
      this.d1 = I4l.d1;
      this.tzo0 = I4l.tzo0;
      this.tzo1 = I4l.tzo1;
      this.v0 = I4l.v0;
      this.v1 = I4l.v1;
      this.pts = I4l.pts.split(",");
      this.adjust();
    };

    x1l.Drawing.gartley.prototype.serialize = function () {
      return {
        name: this.name,
        pnl: this.panelName,
        col: this.color,
        fc: this.fillColor,
        ptrn: this.pattern,
        lw: this.lineWidth,
        d0: this.d0,
        d1: this.d1,
        tzo0: this.tzo0,
        tzo1: this.tzo1,
        v0: this.v0,
        v1: this.v1,
        pts: this.pts.join(",")
      };
    };

    x1l.Drawing.freeform = function () {
      var M2v;
      T5VV.d7Kh();
      M2v = "fre";
      M2v += "ef";
      M2v += "o";
      M2v += "rm";
      this.name = M2v;
      this.splineTension = +"0.3";
      this.dragToDraw = !!{};
    };

    x1l.inheritsFrom(x1l.Drawing.freeform, x1l.Drawing.segment);

    x1l.Drawing.freeform.prototype.measure = function () {};

    x1l.Drawing.freeform.prototype.intersected = function (d4l, F4l, r4l) {
      var N2v;
      N2v = "m";
      N2v += "ov";
      T5VV.d7Kh();
      N2v += "e";

      if (r4l.x0 > this.hiX || r4l.x1 < this.lowX) {
        return null;
      }

      if (r4l.y1 > this.hiY || r4l.y0 < this.lowY) {
        return null;
      }

      this.highlighted = !!"1";
      return {
        action: N2v,
        p0: x1l.clone(this.p0),
        tick: d4l,
        value: F4l
      };
    };

    x1l.Drawing.freeform.prototype.reposition = function (Y4l, Q4l, H7l, J7l) {
      var I2v, w4l, W4l, b4l, W1v, g1v, T1v;
      I2v = "mo";
      I2v += "ve";

      if (!Q4l) {
        return;
      }

      w4l = this.stx.panels[this.panelName];
      W4l = Q4l.tick - H7l;
      b4l = Q4l.value - J7l;

      if (Q4l.action == I2v) {
        this.setPoint(0, Q4l.p0[0] - W4l, Q4l.p0[1] - b4l, w4l.chart);
        W1v = 2081777713;
        g1v = -996685222;
        T1v = 2;

        for (var Q1v = 1; T5VV.s1v(Q1v.toString(), Q1v.toString().length, 77054) !== W1v; Q1v++) {
          this.adjust();
          T1v += 2;
        }

        if (T5VV.Y6v(T1v.toString(), T1v.toString().length, "20765" - 0) !== g1v) {
          this.adjust();
        }

        this.render(Y4l);
      }
    };

    x1l.Drawing.freeform.prototype.click = function (g7l, K7l, n7l) {
      var c7l, Z2v, O7l;
      c7l = this.stx.panels[this.panelName];

      if (!c7l) {
        return;
      }

      T5VV.d7Kh();

      if (this.penDown === ![]) {
        Z2v = "point";
        Z2v += "er";
        this.copyConfig();
        this.startX = Math.round(this.stx.resolveX(this.stx.pixelFromTick(K7l, c7l.chart)));
        this.startY = Math.round(this.stx.resolveY(this.stx.pixelFromValueAdjusted(c7l, K7l, n7l)));
        O7l = this.stx.dateFromTick(K7l, c7l.chart, !!"1");
        this.d0 = x1l.yyyymmddhhmmssmmm(O7l);
        this.tzo0 = O7l.getTimezoneOffset();
        this.v0 = n7l;
        this.p0 = [x1l.ChartEngine.crosshairX - this.startX, x1l.ChartEngine.crosshairY - this.startY];
        this.nodes = [this.p0[+"0"], this.p0[1]];
        this.pNodes = [this.p0];
        this.candleWidth = this.stx.layout.candleWidth;
        this.multiplier = c7l.yAxis.multiplier;
        this.interval = this.stx.layout.interval;
        this.periodicity = this.stx.layout.periodicity;
        this.tempSplineTension = this.splineTension;
        this.splineTension = -1;
        document.body.style.cursor = Z2v;
        this.penDown = !!"1";
        return !!"";
      }

      this.penDown = !!"";
      this.splineTension = this.tempSplineTension;
      document.body.style.cursor = "auto";
      return !!{};
    };

    x1l.Drawing.freeform.prototype.move = function (j7l, B7l, U7l) {
      var h7l, i7l;
      T5VV.k7Kh();

      if (!this.penDown) {
        return;
      }

      h7l = this.stx.panels[this.panelName];
      i7l = this.stx.dateFromTick(B7l, h7l.chart, !!{});
      this.d1 = x1l.yyyymmddhhmmssmmm(i7l);
      this.tzo1 = i7l.getTimezoneOffset();
      this.v1 = U7l;
      this.p1 = [x1l.ChartEngine.crosshairX - this.startX, h7l.yAxis.flipped ? this.startY - x1l.ChartEngine.crosshairY : x1l.ChartEngine.crosshairY - this.startY];

      if (this.pNodes.length > 2) {
        if (this.p1["0" - 0] == this.pNodes[this.pNodes.length - 2][0] && this.p1[0] == this.pNodes[this.pNodes.length - 1][0]) {
          this.pNodes.length--;
          this.nodes.length -= +"2";
        } else if (this.p1[1] == this.pNodes[this.pNodes.length - +"2"][1] && this.p1[1] == this.pNodes[this.pNodes.length - 1][1]) {
          this.pNodes.length--;
          T5VV.N3mK(1);
          this.nodes.length -= T5VV.e3mK(0, "2");
        }
      }

      this.nodes.push(this.p1[0], this.p1[1]);
      this.pNodes.push(this.p1);
      this.render(j7l);
      return !!0;
    };

    x1l.Drawing.freeform.prototype.intervalRatio = function (q7l, E7l, v7l, N7l, G7l, p7l) {
      var k0bh = T5VV;
      var o7l, n2v, i2v, F2v, d2v, c2v;
      o7l = 0;

      if (q7l == E7l) {
        k0bh.N3mK(26);
        o7l = k0bh.E3mK("1", 0);
      } else if (!isNaN(q7l) && !isNaN(E7l)) {
        k0bh.N3mK(10);
        o7l = k0bh.E3mK(q7l, E7l);
      } else if (isNaN(q7l)) {
        n2v = "d";
        n2v += "a";
        n2v += "y";
        i2v = "m";
        i2v += "o";
        i2v += "n";
        i2v += "th";

        if (q7l == i2v) {
          F2v = "d";
          F2v += "a";
          F2v += "y";

          if (E7l == "week") {
            o7l = S7l(G7l, p7l);
          } else if (E7l == F2v) {
            o7l = t7l(G7l, p7l);
          } else if (!isNaN(E7l)) {
            o7l = t7l(G7l, p7l) * D7l(G7l, p7l) / E7l;
          }
        } else if (q7l == "week") {
          if (E7l == "month") {
            o7l = 1 / S7l(G7l, p7l);
          }

          if (E7l == "day") {
            o7l = k7l(G7l, p7l);
          } else if (!isNaN(E7l)) {
            o7l = k7l(G7l, p7l) * D7l(G7l, p7l) / E7l;
          }
        } else if (q7l == n2v) {
          d2v = "mon";
          d2v += "t";
          d2v += "h";
          c2v = "w";
          c2v += "e";
          c2v += "e";
          c2v += "k";

          if (E7l == c2v) {
            k0bh.N3mK(43);
            var t4uu = k0bh.e3mK(20, 0, 18, 2, 721);
            o7l = t4uu / k7l(G7l, p7l);
          } else if (E7l == d2v) {
            k0bh.i3mK(44);
            var L4uu = k0bh.e3mK(19, 5, 62, 18, 2);
            o7l = L4uu / t7l(G7l, p7l);
          } else if (!isNaN(E7l)) {
            o7l = D7l(G7l, p7l) / E7l;
          }
        }
      } else if (!isNaN(q7l)) {
        if (E7l == "month") {
          o7l = q7l / (t7l(G7l, p7l) * D7l(G7l, p7l));
        } else if (E7l == "week") {
          o7l = q7l / (k7l(G7l, p7l) * D7l(G7l, p7l));
        } else if (E7l == "day") {
          o7l = q7l / D7l(G7l, p7l);
        }
      }

      function S7l(x7l, V7l) {
        k0bh.d7Kh();
        return 5;
      }

      function k7l(a7l, m7l) {
        k0bh.d7Kh();
        return 5;
      }

      k0bh.i3mK(10);
      o7l *= k0bh.e3mK(v7l, N7l);

      function t7l(M7l, z7l) {
        return 30;
      }

      function D7l(s7l, R7l) {
        k0bh.d7Kh();

        if (x1l.Market.Symbology.isForexSymbol(R7l)) {
          return 1440;
        }

        return 390;
      }

      return o7l;
    };

    x1l.Drawing.freeform.prototype.render = function (I7l) {
      var P7l, C7l, u7l, r7l, d7l, l7l, T7l, F7l, L7l, f7l, Q7l, y7l;
      P7l = this.stx.panels[this.panelName];

      if (!P7l) {
        return;
      }

      C7l = this.intervalRatio(this.interval, this.stx.layout.interval, this.periodicity, this.stx.layout.periodicity, this.d0, P7l.chart.symbol);

      if (C7l === 0) {
        return;
      }

      u7l = this.stx.layout.candleWidth / this.candleWidth;
      r7l = P7l.yAxis.multiplier / this.multiplier;
      this.setPoint(+"0", this.d0, this.v0, P7l.chart);
      d7l = this.stx.pixelFromTick(this.p0[0], P7l.chart);
      l7l = this.stx.pixelFromValueAdjusted(P7l, this.p0[0], this.p0[1]);
      T7l = [];
      F7l = this.lineWidth;
      L7l = this.getLineColor();
      f7l = {
        pattern: this.pattern,
        lineWidth: F7l
      };

      for (var A7l = +"0"; A7l < this.pNodes.length; A7l++) {
        Q7l = C7l * u7l * this.pNodes[A7l][0] + d7l;
        T5VV.N3mK(45);
        var x4uu = T5VV.e3mK(5, 3, 2, 0);
        y7l = r7l * this.pNodes[A7l][x4uu];

        if (P7l.yAxis.flipped) {
          T5VV.N3mK(1);
          y7l = T5VV.e3mK(y7l, l7l);
        } else {
          y7l += l7l;
        }

        T7l.push(Q7l, y7l);
      }

      if (!T7l.length) {
        return;
      }

      if (this.splineTension < 0) {
        this.stx.connectTheDots(T7l, L7l, this.name, I7l, P7l, f7l);
      } else {
        this.stx.plotSpline(T7l, this.splineTension, L7l, this.name, I7l, !0, f7l);
      }
    };

    x1l.Drawing.freeform.prototype.adjust = function () {
      var w7l, J6l, W7l, Y7l, Z7l, e7l, H6l, X7l;
      w7l = this.stx.panels[this.panelName];

      if (!w7l) {
        return;
      }

      J6l = [this.nodes[0], this.nodes[1]];
      this.pNodes = [J6l];
      this.lowX = this.nodes[0];
      this.hiX = this.nodes[0];
      this.lowY = this.nodes[1];
      this.hiY = this.nodes[1];

      for (var b7l = 2; b7l < this.nodes.length; b7l += 2) {
        T5VV.i3mK(0);
        W7l = [this.nodes[b7l], this.nodes[T5VV.e3mK(1, b7l)]];
        this.pNodes.push(W7l);
        this.lowX = Math.min(this.lowX, W7l[0]);
        this.hiX = Math.max(this.hiX, W7l[+"0"]);
        this.lowY = Math.max(this.lowY, W7l[1]);
        this.hiY = Math.min(this.hiY, W7l[1]);
      }

      Y7l = this.intervalRatio(this.interval, this.stx.layout.interval, this.periodicity, this.stx.layout.periodicity, this.d0, w7l.chart.symbol);

      if (Y7l === 0) {
        return;
      }

      Z7l = this.stx.layout.candleWidth / this.candleWidth;
      e7l = w7l.yAxis.multiplier / this.multiplier;
      this.setPoint(0, this.d0, this.v0, w7l.chart);
      H6l = this.stx.pixelFromTick(this.p0[0], w7l.chart);
      X7l = this.stx.pixelFromValueAdjusted(w7l, this.p0[0], this.p0[1]);
      this.lowX = this.stx.tickFromPixel(Math.floor(Y7l * Z7l * this.lowX) + H6l, w7l.chart);
      this.hiX = this.stx.tickFromPixel(Math.ceil(Y7l * Z7l * this.hiX) + H6l, w7l.chart);

      if (w7l.yAxis.flipped) {
        this.lowY = this.stx.valueFromPixel(X7l - Math.floor(e7l * this.lowY), w7l);
        this.hiY = this.stx.valueFromPixel(X7l - Math.ceil(e7l * this.hiY), w7l);
      } else {
        this.lowY = this.stx.valueFromPixel(Math.floor(e7l * this.lowY) + X7l, w7l);
        this.hiY = this.stx.valueFromPixel(Math.ceil(e7l * this.hiY) + X7l, w7l);
      }
    };

    x1l.Drawing.freeform.prototype.serialize = function () {
      T5VV.d7Kh();
      return {
        name: this.name,
        pnl: this.panelName,
        col: this.color,
        ptrn: this.pattern,
        lw: this.lineWidth,
        cw: Number(this.candleWidth.toFixed(4)),
        mlt: Number(this.multiplier.toFixed(+"4")),
        d0: this.d0,
        tzo0: this.tzo0,
        v0: this.v0,
        inter: this.interval,
        pd: this.periodicity,
        nodes: this.nodes
      };
    };

    x1l.Drawing.freeform.prototype.reconstruct = function (g6l, n6l) {
      this.stx = g6l;
      this.color = n6l.col;
      this.panelName = n6l.pnl;
      this.pattern = n6l.ptrn;
      this.lineWidth = n6l.lw;
      this.candleWidth = n6l.cw;
      this.multiplier = n6l.mlt;
      this.d0 = n6l.d0;
      this.tzo0 = n6l.tzo0;
      this.v0 = n6l.v0;
      this.interval = n6l.inter;
      this.periodicity = n6l.pd;
      T5VV.d7Kh();
      this.nodes = n6l.nodes;
      this.adjust();
    };

    x1l.Drawing.callout = function () {
      this.name = "callout";
      this.arr = [];
      this.w = 0;
      this.h = 0;
      this.padding = 4;
      this.text = "";
      this.ta = null;
      this.fontSize = +"0";
      this.font = {};
      this.stemEntry = "";
      this.defaultWidth = 50;
      T5VV.i3mK(22);
      this.defaultHeight = T5VV.E3mK("10", 2);
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.callout, x1l.Drawing.annotation);
    x1l.Drawing.callout.prototype.configs = [q2v, b2v, "lineWidth", "pattern", "font"];

    x1l.Drawing.callout.prototype.copyConfig = function (B6l) {
      x1l.Drawing.copyConfig(this, B6l);
      this.borderColor = this.color;
    };

    x1l.Drawing.callout.prototype.move = function (U6l, E6l, p6l) {
      if (!this.penDown) {
        return;
      }

      this.copyConfig();
      this.p0 = [E6l, p6l];
      this.render(U6l);
    };

    x1l.Drawing.callout.prototype.onChange = function (s6l) {
      var R6l, S6l, D6l;
      R6l = this.stx.panels[this.panelName];

      if (!R6l) {
        return;
      }

      S6l = s6l.target;
      this.w = S6l.clientWidth;
      T5VV.k7Kh();
      this.h = S6l.clientHeight;
      D6l = this.context || this.stx.chart.tempCanvas.context;
      x1l.clearCanvas(D6l.canvas, this.stx);
      this.render(D6l);
      this.edit(D6l);
    };

    x1l.Drawing.callout.prototype.render = function (T6l) {
      var l0bh = T5VV;
      var X6l, n5l, O5l, l6l, A6l, I6l, f6l, Y6l, H5l, e6l, r6l, J5l, d6l, c5l, u6l, R1v, l1v, r1v, F6l, q1v, b1v, h1v, z2v, h2v, E2v, g5l;
      this.context = T6l;
      X6l = this.stx.panels[this.panelName];

      if (!X6l) {
        return;
      }

      n5l = this.stx.pixelFromTick(this.p0[0], X6l.chart);
      O5l = this.stx.pixelFromValueAdjusted(X6l, this.p0[0], this.p0[1]);

      if (isNaN(O5l)) {
        return;
      }

      T6l.font = this.fontString;
      T6l.textBaseline = "top";
      l6l = n5l;
      A6l = O5l;
      l0bh.i3mK(46);
      var j4uu = l0bh.E3mK(1, 0, 9, 1, 7);
      I6l = this.w / j4uu;
      l0bh.i3mK(0);
      var o4uu = l0bh.E3mK(2, 0);
      f6l = this.h / o4uu;

      if (this.penDown) {
        I6l = this.defaultWidth;
        f6l = this.defaultHeight;

        if (!f6l) {
          f6l = this.fontSize;
        }
      }

      Y6l = this.lineWidth;

      if (!Y6l) {
        Y6l = 1.1;
      }

      H5l = this.color;

      if (H5l == "auto" || x1l.isTransparent(H5l)) {
        H5l = this.stx.defaultColor;
      }

      e6l = this.borderColor;

      if (e6l == "auto" || x1l.isTransparent(e6l)) {
        e6l = this.stx.defaultColor;
      }

      if (this.highlighted) {
        e6l = this.stx.getCanvasColor("stx_highlight_vector");
      }

      u6l = Math.min(Math.min(I6l, f6l) / 2, "8" << 1605127456);

      if (this.stem) {
        if (this.stem.t) {
          R1v = 1880448580;
          l1v = -1685676834;
          r1v = 2;

          for (var V1v = 1; l0bh.Y6v(V1v.toString(), V1v.toString().length, 17221) !== R1v; V1v++) {
            r6l = this.stx.pixelFromTick(this.stem.t);
            d6l = this.stx.pixelFromValueAdjusted(X6l, this.stem.t, this.stem.v);
            r1v += 2;
          }

          if (l0bh.Y6v(r1v.toString(), r1v.toString().length, "86718" - 0) !== l1v) {
            r6l = this.stx.pixelFromTick(this.stem.t);
            d6l = this.stx.pixelFromValueAdjusted(X6l, this.stem.t, this.stem.v);
          }
        } else if (this.stem.x) {
          r6l = l6l;
          d6l = A6l;
          l6l += this.stem.x;
          A6l += this.stem.y;
        }

        F6l = "";

        if (r6l >= l6l + I6l) {
          l0bh.i3mK(0);
          J5l = l0bh.e3mK(I6l, l6l);
          F6l = 6470 >= (2480, 1373) ? "r" : (719, +"7310") !== 529.51 ? "r" : "x";
        } else if (r6l > l6l - I6l && r6l < l6l + I6l) {
          J5l = l6l;
          F6l = (2290, "490.92" - 0) < 4080 ? 9132 > (6070, 8843) ? "c" : ("D", "j") : (!!{}, 409.43);
        } else if (r6l <= l6l - I6l) {
          l0bh.i3mK(1);
          J5l = l0bh.E3mK(I6l, l6l);
          F6l = "l";
        }

        if (d6l >= A6l + f6l) {
          l0bh.N3mK(0);
          c5l = l0bh.e3mK(f6l, A6l);
          F6l += "b";
        } else if (d6l > A6l - f6l && d6l < A6l + f6l) {
          c5l = A6l;
          F6l += "m";
        } else if (d6l <= A6l - f6l) {
          l0bh.N3mK(1);
          c5l = l0bh.E3mK(f6l, A6l);
          F6l += 1610 == (8973, 689) ? (!!"", "6.83e+3" | 4096) : 760.6 <= 9319 ?  false ? (undefined) : "t" : (7.12e+2, 9.78e+3);
        }

        this.stemEntry = F6l;

        if (F6l != "cm") {
          r6l = Math.round(r6l);
          J5l = Math.round(J5l);
          d6l = Math.round(d6l);
          c5l = Math.round(c5l);
        }
      }

      if (this.highlighted) {
        this.stx.canvasColor("stx_annotation_highlight_bg", T6l);
      } else {
        if (this.fillColor) {
          T6l.fillStyle = this.fillColor;
          l0bh.N3mK(5);
          T6l.globalAlpha = l0bh.E3mK(1, "0.4");
        } else if (this.stem) {
          T6l.fillStyle = this.stx.containerColor;
        }
      }

      T6l.strokeStyle = e6l;

      if (T6l.setLineDash) {
        q1v = -20575527;
        b1v = -1747918254;
        h1v = +"2";

        for (var E1v = 1; l0bh.s1v(E1v.toString(), E1v.toString().length, 74785) !== q1v; E1v++) {
          T6l.setLineDash(x1l.borderPatternToArray(Y6l, this.pattern));
          T6l.lineDashOffset = 0;
          h1v += 2;
        }

        if (l0bh.Y6v(h1v.toString(), h1v.toString().length, 36618) !== b1v) {
          T6l.setLineDash(x1l.borderPatternToArray(Y6l, this.pattern));
          l0bh.N3mK(5);
          T6l.lineDashOffset = l0bh.E3mK(1, "6");
        }

        ;
      }

      if (e6l) {
        z2v = "c";
        z2v += "b";
        h2v = "r";
        h2v += "b";
        T6l.beginPath();
        T6l.lineWidth = Y6l;
        l0bh.N3mK(7);
        T6l.moveTo(l0bh.E3mK(l6l, I6l, u6l), l0bh.E3mK(f6l, A6l, l0bh.N3mK(1)));

        if (this.stemEntry != "rt") {
          l0bh.i3mK(0);
          T6l.quadraticCurveTo(l0bh.e3mK(I6l, l6l), l0bh.E3mK(f6l, A6l, l0bh.i3mK(1)), l0bh.E3mK(I6l, l6l, l0bh.N3mK(0)), l0bh.e3mK(A6l, f6l, u6l, l0bh.N3mK(2)));
          ;
        } else {
          T6l.lineTo(r6l, d6l);
          l0bh.i3mK(0);
          T6l.lineTo(l0bh.E3mK(I6l, l6l), l0bh.e3mK(A6l, f6l, u6l, l0bh.N3mK(2)));
        }

        l0bh.N3mK(0);
        T6l.lineTo(l0bh.e3mK(I6l, l6l), l0bh.E3mK(A6l, 2, u6l, l0bh.i3mK(47)));

        if (this.stemEntry == "rm") {
          T6l.lineTo(r6l, d6l);
        }

        l0bh.i3mK(0);
        T6l.lineTo(l0bh.e3mK(I6l, l6l), l0bh.E3mK(u6l, A6l, "2", l0bh.i3mK(48)));
        l0bh.i3mK(0);
        T6l.lineTo(l0bh.E3mK(I6l, l6l), l0bh.E3mK(A6l, f6l, u6l, l0bh.i3mK(7)));

        if (this.stemEntry != h2v) {
          l0bh.i3mK(0);
          T6l.quadraticCurveTo(l0bh.E3mK(I6l, l6l), l0bh.e3mK(f6l, A6l, l0bh.N3mK(0)), l0bh.E3mK(l6l, I6l, u6l, l0bh.i3mK(7)), l0bh.E3mK(f6l, A6l, l0bh.N3mK(0)));
          ;
        } else {
          T6l.lineTo(r6l, d6l);
          l0bh.i3mK(7);
          T6l.lineTo(l0bh.e3mK(l6l, I6l, u6l), l0bh.E3mK(f6l, A6l, l0bh.N3mK(0)));
        }

        l0bh.N3mK(49);
        T6l.lineTo(l0bh.e3mK(u6l, 2, l6l), l0bh.E3mK(f6l, A6l, l0bh.i3mK(0)));

        if (this.stemEntry == z2v) {
          T6l.lineTo(r6l, d6l);
        }

        l0bh.i3mK(50);
        T6l.lineTo(l0bh.E3mK(l6l, u6l, "2", 2147483647), l0bh.e3mK(f6l, A6l, l0bh.i3mK(0)));
        l0bh.i3mK(2);
        T6l.lineTo(l0bh.e3mK(l6l, I6l, u6l), l0bh.E3mK(f6l, A6l, l0bh.N3mK(0)));

        if (this.stemEntry != "lb") {
          l0bh.i3mK(1);
          T6l.quadraticCurveTo(l0bh.e3mK(I6l, l6l), l0bh.e3mK(f6l, A6l, l0bh.N3mK(0)), l0bh.E3mK(I6l, l6l, l0bh.i3mK(1)), l0bh.E3mK(A6l, f6l, u6l, l0bh.i3mK(7)));
          ;
        } else {
          T6l.lineTo(r6l, d6l);
          l0bh.N3mK(1);
          T6l.lineTo(l0bh.e3mK(I6l, l6l), l0bh.E3mK(A6l, f6l, u6l, l0bh.N3mK(7)));
        }

        l0bh.N3mK(1);
        T6l.lineTo(l0bh.e3mK(I6l, l6l), l0bh.e3mK(u6l, A6l, "2", l0bh.i3mK(48)));

        if (this.stemEntry == "lm") {
          T6l.lineTo(r6l, d6l);
        }

        l0bh.N3mK(1);
        T6l.lineTo(l0bh.E3mK(I6l, l6l), l0bh.e3mK(A6l, 2, u6l, l0bh.N3mK(47)));
        l0bh.N3mK(1);
        T6l.lineTo(l0bh.e3mK(I6l, l6l), l0bh.E3mK(A6l, f6l, u6l, l0bh.i3mK(2)));

        if (this.stemEntry != "lt") {
          l0bh.i3mK(1);
          T6l.quadraticCurveTo(l0bh.e3mK(I6l, l6l), l0bh.E3mK(f6l, A6l, l0bh.N3mK(1)), l0bh.e3mK(l6l, I6l, u6l, l0bh.i3mK(2)), l0bh.e3mK(f6l, A6l, l0bh.i3mK(1)));
          ;
        } else {
          T6l.lineTo(r6l, d6l);
          l0bh.i3mK(2);
          T6l.lineTo(l0bh.e3mK(l6l, I6l, u6l), l0bh.E3mK(f6l, A6l, l0bh.N3mK(1)));
        }

        l0bh.i3mK(47);
        T6l.lineTo(l0bh.E3mK(l6l, 2, u6l), l0bh.E3mK(f6l, A6l, l0bh.i3mK(1)));

        if (this.stemEntry == "ct") {
          T6l.lineTo(r6l, d6l);
        }

        l0bh.i3mK(49);
        T6l.lineTo(l0bh.e3mK(u6l, 2, l6l), l0bh.E3mK(f6l, A6l, l0bh.i3mK(1)));
        l0bh.N3mK(7);
        T6l.lineTo(l0bh.e3mK(l6l, I6l, u6l), l0bh.E3mK(f6l, A6l, l0bh.i3mK(1)));
        T6l.fill();
        T6l.globalAlpha = 1;

        if (this.pattern != "none") {
          T6l.stroke();
        }
      }

      if (this.highlighted) {
        this.stx.canvasColor("stx_annotation_highlight", T6l);
      } else {
        T6l.fillStyle = H5l;
      }

      A6l += this.padding;

      if (!this.ta) {
        for (var K5l = 0; K5l < this.arr.length; K5l++) {
          T6l.fillText(this.arr[K5l], l6l - I6l + this.padding, A6l - f6l);
          A6l += this.fontSize;
        }
      }

      T6l.textBaseline = "alphabetic";

      if (this.highlighted && !this.noHandles) {
        E2v = "p";
        E2v += "0";
        g5l = this.highlighted == E2v ? !![] : ![];
        this.littleCircle(T6l, r6l, d6l, g5l);
      }

      ;
    };

    x1l.Drawing.callout.prototype.click = function (i5l, j5l, B5l) {
      var h5l;

      if (this.stx.overXAxis || this.stx.overYAxis) {
        return;
      }

      h5l = this.stx.panels[this.panelName];
      this.copyConfig();
      T5VV.N3mK(22);
      this.setPoint(T5VV.E3mK("0", 0), j5l, B5l, h5l.chart);

      if (!this.penDown) {
        this.stem = {
          d: this.d0,
          v: this.v0
        };
        this.penDown = !!{};
        this.adjust();
        return !!"";
      }

      this.adjust();
      this.edit(i5l);
      this.penDown = !!"";
      return !{};
    };

    x1l.Drawing.callout.prototype.reposition = function (D5l, U5l, p5l, q5l) {
      var E5l, o5l, G5l, B2v, V9v, O9v, a9v;

      if (!U5l) {
        return;
      }

      E5l = this.stx.panels[this.panelName];
      o5l = U5l.tick - p5l;
      G5l = U5l.value - q5l;

      if (U5l.stem) {
        B2v = "m";
        B2v += "ove";

        if (U5l.action == "drag") {
          this.stem = {
            d: this.stx.dateFromTick(p5l, E5l.chart, !0),
            v: q5l
          };
        } else if (U5l.action == B2v) {
          this.setPoint(0, U5l.p0[0] - o5l, U5l.p0[1] - G5l, E5l.chart);
          this.stem = {
            d: this.stx.dateFromTick(this.stx.tickFromDate(U5l.stem.d, E5l.chart) - o5l),
            v: U5l.stem.v - G5l
          };
        }

        this.adjust();
      } else {
        V9v = 1429573506;
        O9v = 47460545;
        a9v = +"2";

        for (var X9v = 1; T5VV.s1v(X9v.toString(), X9v.toString().length, 56665) !== V9v; X9v++) {
          this.setPoint(4, U5l.p0[1] * o5l, U5l.p0["2" | 2] * G5l, E5l.chart);
          a9v += 2;
        }

        if (T5VV.Y6v(a9v.toString(), a9v.toString().length, "17397" * 1) !== O9v) {
          this.setPoint(0, U5l.p0[0] - o5l, U5l.p0[1] - G5l, E5l.chart);
        }
      }

      this.render(D5l);
    };

    x1l.Drawing.callout.prototype.lineIntersection = function (T5l, A5l, s5l, P5l) {
      var x0bh = T5VV;
      var V5l, k5l, v5l, a5l, m5l, M5l, t5l, N5l, x5l, z5l, R5l, S5l;
      x0bh.k7Kh();
      V5l = this.stx.panels[this.panelName];
      k5l = this.stem;
      v5l = this.p0;
      a5l = this.stx;

      if (!v5l || !k5l || !V5l) {
        return ![];
      }

      m5l = k5l.t || this.stx.tickFromDate(k5l.d, V5l.chart);
      M5l = {
        x0: v5l[0],
        x1: m5l,
        y0: v5l[1],
        y1: k5l.v
      };
      t5l = x1l.convertBoxToPixels(a5l, this.panelName, M5l);
      N5l = t5l.x0;
      x5l = t5l.y0;
      z5l = t5l.x1;
      R5l = t5l.y1;

      if (typeof this.stemEntry == "string") {
        if (this.stemEntry.indexOf(2610 != (4492, +"4150") ? "l" : (0x1c47, "g")) > -1) {
          x0bh.N3mK(0);
          var e4uu = x0bh.e3mK(2, 0);
          N5l -= this.w / e4uu;
        } else if (this.stemEntry.indexOf((9317, +"111.23") !== 773 ? "r" : 9457 < 877.56 ? (!"", 458.17) : 938.52 >= (9900, "2520" ^ 0) ? (970.00, "413.94" - 0) : (!{}, 3.49e+3)) > -1) {
          N5l += this.w / +"2";
        }

        if (this.stemEntry.indexOf("8494" * 1 > +"748.09" ? (+"2479", "6090" * 1) != ("115" >> 1027875712, 699) ? "t" : ("94.72" - 0, 5.42e+3) : "6.13e+3" & 2147483647) > -1) {
          x0bh.N3mK(42);
          var M4uu = x0bh.e3mK(4, 0, 78, 19);
          x5l -= this.h / M4uu;
        } else if (this.stemEntry.indexOf("b") > -+"1") {
          x0bh.N3mK(51);
          var N4uu = x0bh.E3mK(1, 14, 17, 20, 21);
          x5l += this.h / N4uu;
        }
      }

      S5l = x1l.convertBoxToPixels(a5l, this.panelName, s5l);
      return x1l.boxIntersects(S5l.x0, S5l.y0, S5l.x1, S5l.y1, N5l, x5l, z5l, R5l, P5l);
    };

    x1l.Drawing.callout.prototype.intersected = function (C5l, L5l, y5l) {
      var u0bh = T5VV;
      var l5l, f5l, I5l, u5l, r5l, d5l, F5l, Q5l;
      l5l = this.stx.panels[this.panelName];

      if (!this.p0) {
        return null;
      }

      if (this.pointIntersection(this.stem.t, this.stem.v, y5l)) {
        this.highlighted = "p0";
        return {
          action: "drag",
          stem: !![]
        };
      }

      f5l = this.stx.pixelFromTick(this.p0[0], l5l.chart) - this.w / +"2";
      u0bh.i3mK(0);
      var I4uu = u0bh.e3mK(1, 0);
      u0bh.i3mK(52);
      var Z4uu = u0bh.e3mK(20, 0, 10);
      I5l = this.stx.pixelFromValueAdjusted(l5l, this.p0[0], this.p0[I4uu]) - this.h / Z4uu;
      u0bh.k7Kh();
      u5l = f5l + this.w;
      r5l = I5l + this.h;

      if (this.stem && this.stem.x) {
        f5l += this.stem.x;
        u5l += this.stem.x;
        I5l += this.stem.y;
        r5l += this.stem.y;
      }

      d5l = this.stx.pixelFromTick(C5l, l5l.chart);
      F5l = this.stx.pixelFromValueAdjusted(l5l, C5l, L5l);

      if (d5l + y5l.r >= f5l && d5l - y5l.r <= u5l && F5l + y5l.r >= I5l && F5l - y5l.r <= r5l) {
        this.highlighted = !!{};
        return {
          p0: x1l.clone(this.p0),
          tick: C5l,
          value: L5l
        };
      }

      Q5l = this.lineIntersection(C5l, L5l, y5l, "segment");

      if (Q5l) {
        this.highlighted = !![];
        return {
          action: "move",
          stem: x1l.clone(this.stem),
          p0: x1l.clone(this.p0),
          tick: C5l,
          value: L5l
        };
      }

      return null;
    };

    x1l.Drawing.fibonacci = function () {
      this.name = "fibonacci";
      this.configurator = "fibonacci";
    };

    x1l.inheritsFrom(x1l.Drawing.fibonacci, x1l.Drawing.BaseTwoPoint);
    x1l.Drawing.fibonacci.mapping = {
      trend: 167 !== ("970.23" * 1, "9531" >> 1457959136) ? "t" : (322.19, 4113) >= 713.62 ? (0x5e0, 0xbae) : +"533.43",
      color: (571.78, 742.09) != (2250, 819.92) ? "697.2" * 1 === (1610, 2525) ? "N" : 716.84 > (7201, 757.42) ? (![], 6.03e+3) : "c" : ("Q", "B"),
      parameters: "p",
      pattern: "pt",
      opacity: (3650, +"615.69") > 7020 ? ![] : "5420" << 2032763264 == (9775, 763.04) ? "n" : "o",
      lineWidth: "lw",
      level: "l",
      extendLeft: (2080, +"8210") < (3923, 9140) ? 419.56 === (9160, 4530) ? 113 === +"8862" ? (573.85, !1) : 7.52e+3 : "e" : 0x2545,
      printLevels: "pl",
      printValues: "pv",
      timezone: "tz",
      display: +"7370" >= (8840, 333.16) ? "d" : (749.41, 8900) !== (3140, 211) ? "V" : ("0x193c" * 1, "l")
    };
    x1l.Drawing.fibonacci.prototype.recommendedLevels = [-0.618, -0.382, +"0", 0.382, 0.5, 0.618, 1, +"1.382", 1.618];
    x1l.Drawing.fibonacci.prototype.configs = [G2v, "fillColor", m2v, "pattern", P2v];

    x1l.Drawing.fibonacci.prototype.initializeSettings = function (X5l) {
      var H1v, v1v, U1v, b5l, W5l;
      H1v = 2133765463;
      v1v = -164953594;
      U1v = 2;

      for (var w1v = 1; T5VV.s1v(w1v.toString(), w1v.toString().length, 15132) !== H1v; w1v++) {
        b5l = this.recommendedLevels;
        T5VV.N3mK(53);
        U1v += T5VV.e3mK("2", 111772160);
      }

      if (T5VV.s1v(U1v.toString(), U1v.toString().length, +"94513") !== v1v) {
        b5l = this.recommendedLevels;
      }

      if (b5l && !X5l.currentVectorParameters.fibonacci.fibsAlreadySet) {
        W5l = X5l.currentVectorParameters.fibonacci.fibs;

        for (var w5l = 0; w5l < W5l.length; w5l++) {
          delete W5l[w5l].display;

          for (var e5l = 0; e5l < b5l.length; e5l++) {
            if (W5l[w5l].level == b5l[e5l]) {
              W5l[w5l].display = !!"1";
            }
          }
        }
      }
    };

    x1l.Drawing.fibonacci.prototype.setOuter = function () {
      var Y5l, Z5l, n8l, g8l, h8l, i8l, j8l, U8l, E8l, J8l, c8l, H8l, O8l, B8l;
      Y5l = this.stx;
      T5VV.d7Kh();
      Z5l = Y5l.panels[this.panelName];

      if (!Z5l) {
        return;
      }

      n8l = Math.max(this.p0[1], this.p1[1]);
      g8l = Math.min(this.p0[1], this.p1[1]);
      T5VV.N3mK(1);
      h8l = T5VV.E3mK(g8l, n8l);
      this.outer = {
        p0: x1l.clone(this.p0),
        p1: x1l.clone(this.p1)
      };
      i8l = Y5l.pixelFromValueAdjusted(Z5l, this.p0[0], this.p0[1]);
      j8l = Y5l.pixelFromValueAdjusted(Z5l, this.p1[0], this.p1[1]);
      U8l = Y5l.pixelFromTick(this.p0[+"0"], Z5l.chart);
      E8l = Y5l.pixelFromTick(this.p1[0], Z5l.chart);
      J8l = 0;
      c8l = 1;

      for (var K8l = 0; K8l < this.parameters.fibs.length; K8l++) {
        H8l = this.parameters.fibs[K8l];
        if (H8l.level >= J8l && H8l.level <= c8l || !H8l.display) continue;
        O8l = Y5l.pixelFromValueAdjusted(Z5l, this.p0[0], j8l < i8l ? n8l - h8l * H8l.level : g8l + h8l * H8l.level);
        B8l = x1l.xIntersection({
          x0: U8l,
          x1: E8l,
          y0: i8l,
          y1: j8l
        }, O8l);

        if (H8l.level < J8l) {
          J8l = H8l.level;
          this.outer.p1[1] = Y5l.valueFromPixel(O8l, Z5l);
          this.outer.p1[0] = Y5l.tickFromPixel(B8l, Z5l.chart);
        } else if (H8l.level > c8l) {
          c8l = H8l.level;
          this.outer.p0[1] = Y5l.valueFromPixel(O8l, Z5l);
          this.outer.p0[0] = Y5l.tickFromPixel(B8l, Z5l.chart);
        }
      }
    };

    x1l.Drawing.fibonacci.prototype.click = function (q8l, G8l, p8l) {
      var o8l;
      o8l = this.stx.panels[this.panelName];

      if (!o8l) {
        return;
      }

      this.copyConfig();

      if (!this.penDown) {
        this.setPoint(0, G8l, p8l, o8l.chart);
        this.penDown = !!{};
        return ![];
      }

      if (this.accidentalClick(G8l, p8l)) {
        return this.dragToDraw;
      }

      this.setPoint(1, G8l, p8l, o8l.chart);
      T5VV.d7Kh();
      this.setOuter();
      this.parameters = x1l.clone(this.parameters);
      this.penDown = !{};
      return !![];
      ;
    };

    x1l.Drawing.fibonacci.prototype.render = function (D8l) {
      var a0bh = T5VV;
      var C2v, f2v, k8l, l8l, L8l, f8l, d8l, s8l, z8l, N8l, S8l, F8l, Q8l, w8l, X8l, Y8l, W8l, Z8l, I8l, P8l, u8l, T8l, R8l, k2v, y2v, D2v, a8l, t8l, y8l, m8l, v8l, H9l, A8l, M8l, x8l, b8l, V8l, e8l, A2v, J9l, c9l;
      C2v = "se";
      C2v += "g";
      C2v += "ment";
      f2v = "a";
      f2v += "uto";
      k8l = this.stx.panels[this.panelName];

      if (!k8l) {
        return;
      }

      l8l = k8l.yAxis;

      if (!this.p1) {
        return;
      }

      L8l = Math.max(this.p0[+"1"], this.p1[1]);
      f8l = Math.min(this.p0[1], this.p1["1" >> 1556568544]);
      d8l = l8l.flipped ? f8l - L8l : L8l - f8l;
      s8l = this.stx.pixelFromTick(this.p0[0], k8l.chart);
      z8l = this.stx.pixelFromTick(this.p1[0], k8l.chart);
      N8l = this.stx.pixelFromValueAdjusted(k8l, this.p0[+"0"], this.p0[1]);
      S8l = this.stx.pixelFromValueAdjusted(k8l, this.p1[0], this.p1[1]);
      F8l = Math.min(S8l, N8l);
      Q8l = Math.max(S8l, N8l);
      a0bh.i3mK(1);
      w8l = a0bh.E3mK(F8l, Q8l);
      a0bh.i3mK(54);
      X8l = a0bh.E3mK(N8l, z8l, 0, S8l, s8l);
      Y8l = {
        color: f2v,
        parameters: {
          pattern: "solid",
          opacity: 0.25,
          lineWidth: 1
        }
      };

      if (!this.parameters.trend) {
        this.parameters.trend = Y8l;
      }

      W8l = this.getLineColor(this.parameters.trend.color);
      D8l.textBaseline = "middle";
      this.stx.canvasFont("stx_yaxis", D8l);
      a0bh.N3mK(55);
      var i4uu = a0bh.E3mK(9, 7, 1, 7);
      Z8l = D8l.measureText("161.8%").width + i4uu;
      I8l = Number.MAX_VALUE;
      P8l = Number.MAX_VALUE;
      a0bh.N3mK(56);
      var F4uu = a0bh.E3mK(94, 5, 19);
      u8l = Number.MAX_VALUE * F4uu;
      a0bh.i3mK(57);
      var n4uu = a0bh.e3mK(29, 13, 1, 17);
      T8l = Number.MAX_VALUE * n4uu;
      R8l = this.color;

      if (R8l == "auto" || x1l.isTransparent(R8l)) {
        R8l = this.stx.defaultColor;
      }

      this.rays = [];

      for (var r8l = 0; r8l < this.parameters.fibs.length; r8l++) {
        k2v = "a";
        k2v += "u";
        k2v += "t";
        k2v += "o";
        y2v = "a";
        y2v += "u";
        y2v += "t";
        y2v += "o";
        D2v = "aut";
        D2v += "o";
        D8l.textAlign = "left";
        D8l.fillStyle = R8l;
        a8l = this.parameters.fibs[r8l];
        if (!a8l.display) continue;
        t8l = this.stx.pixelFromValueAdjusted(k8l, this.p0["0" ^ 0], S8l < N8l ? L8l - d8l * a8l.level : f8l + d8l * a8l.level);
        y8l = x1l.xIntersection({
          x0: s8l,
          x1: z8l,
          y0: N8l,
          y1: S8l
        }, t8l);
        m8l = this.parameters.extendLeft ? 0 : y8l;
        v8l = k8l.left + k8l.width;

        if (this.parameters.printLevels) {
          a0bh.N3mK(58);
          var c4uu = a0bh.e3mK(987, 993, 141);
          a0bh.i3mK(7);
          var d4uu = a0bh.E3mK(40, 20, 50);
          a0bh.i3mK(59);
          var q4uu = a0bh.e3mK(11, 2, 16, 33147, 80960);
          a0bh.i3mK(1);
          var b4uu = a0bh.E3mK(25740, 34320);
          a0bh.N3mK(60);
          var h4uu = a0bh.e3mK(1195355, 4, 37485, 8);
          a0bh.i3mK(61);
          var z4uu = a0bh.E3mK(9, 2871, 2880, 5779, 20);
          H9l = Math.round(a8l.level * c4uu) / d4uu + (q4uu !== +"4910" ? (802.18, b4uu) >= 136.6 ? "342.03" - 0 !== 5220 ? "%" : h4uu : z4uu : (779.77, "e"));
          v8l -= Z8l;

          if (this.parameters.printValues) {
            D8l.fillStyle = R8l;
            this.stx.canvasFont("stx_yaxis", D8l);
            ;
          }

          if (v8l < m8l) {
            D8l.textAlign = "right";
          }

          D8l.fillText(H9l, v8l, t8l);

          if (v8l < m8l) {
            v8l += +"5";
          } else {
            v8l -= 5;
          }
        }

        if (this.parameters.printValues) {
          if (y8l < k8l.width) {
            A8l = this.stx.transformedPriceFromPixel(t8l, k8l);

            if (l8l.priceFormatter) {
              A8l = l8l.priceFormatter(this.stx, k8l, A8l);
            } else {
              A8l = this.stx.formatYAxisPrice(A8l, k8l);
            }

            if (D8l == this.stx.chart.context) {
              this.stx.endClip();
            }

            this.stx.createYAxisLabel(k8l, A8l, t8l, R8l, null, D8l);

            if (D8l == this.stx.chart.context) {
              this.stx.startClip(k8l.name);
            }
          }
        }

        M8l = a8l.color;

        if (M8l == D2v || x1l.isTransparent(M8l)) {
          M8l = this.color;
        }

        if (M8l == y2v || x1l.isTransparent(M8l)) {
          M8l = this.stx.defaultColor;
        }

        x8l = a8l.color;

        if (x8l == k2v || x1l.isTransparent(x8l)) {
          x8l = this.fillColor;
        }

        if (x8l == "auto" || x1l.isTransparent(x8l)) {
          x8l = this.stx.defaultColor;
        }

        D8l.fillStyle = x8l;
        b8l = x1l.clone(a8l.parameters);

        if (this.highlighted) {
          b8l.opacity = +"1";
        }

        this.stx.plotLine(m8l, v8l, t8l, t8l, this.highlighted ? W8l : M8l, "segment", D8l, k8l, b8l);
        this.rays.push([[m8l, t8l], [v8l, t8l]]);
        D8l.globalAlpha = 0.05;
        D8l.beginPath();
        D8l.moveTo(v8l, t8l);
        D8l.lineTo(m8l, t8l);

        if (m8l) {
          D8l.lineTo(z8l, S8l);
        } else {
          D8l.lineTo(m8l, S8l);
        }

        D8l.lineTo(v8l, S8l);

        if (typeof x8l != "undefined") {
          D8l.fill();
        }

        D8l.globalAlpha = 1;

        if (t8l < P8l) {
          I8l = y8l;
          P8l = t8l;
        }

        if (t8l > T8l) {
          u8l = y8l;
          T8l = t8l;
        }
      }

      for (var C8l = 0; C8l <= 1; C8l++) {
        V8l = X8l ? Q8l - w8l * C8l : F8l + w8l * C8l;
        V8l = Math.round(V8l);

        if (V8l < P8l) {
          I8l = x1l.xIntersection({
            x0: s8l,
            x1: z8l,
            y0: N8l,
            y1: S8l
          }, V8l);
          P8l = V8l;
        }

        if (V8l > T8l) {
          u8l = x1l.xIntersection({
            x0: s8l,
            x1: z8l,
            y0: N8l,
            y1: S8l
          }, V8l);
          T8l = V8l;
        }
      }

      e8l = x1l.clone(this.parameters.trend.parameters);

      if (this.highlighted) {
        e8l.opacity = 1;
      }

      this.stx.plotLine(I8l, u8l, P8l, T8l, W8l, C2v, D8l, k8l, e8l);

      if (this.highlighted) {
        A2v = "p";
        A2v += "0";
        J9l = this.highlighted == A2v ? !![] : !"1";
        c9l = this.highlighted == "p1" ? !"" : !!0;
        this.littleCircle(D8l, s8l, N8l, J9l);
        this.littleCircle(D8l, z8l, S8l, c9l);
      }
    };

    x1l.Drawing.fibonacci.prototype.reposition = function (O9l, K9l, n9l, g9l) {
      if (!K9l) {
        return;
      }

      x1l.Drawing.BaseTwoPoint.prototype.reposition.apply(this, arguments);
      T5VV.k7Kh();
      this.adjust();
    };

    x1l.Drawing.fibonacci.prototype.intersected = function (p9l, q9l, D9l) {
      T5VV.k7Kh();
      var j9l, B9l, U9l, W2v, E9l, o9l, G9l;
      j9l = this.p0;
      B9l = this.p1;

      if (!j9l || !B9l) {
        return null;
      }

      U9l = {
        0: j9l,
        1: B9l
      };

      for (var h9l in U9l) {
        if (this.pointIntersection(U9l[h9l][0], U9l[h9l][+"1"], D9l)) {
          W2v = "d";
          W2v += "r";
          W2v += "a";
          W2v += "g";
          T5VV.N3mK(0);
          this.highlighted = T5VV.e3mK(h9l, "p");
          return {
            action: W2v,
            point: ("329.11" - 0 >= 9330 ? 341.91 : "p") + h9l
          };
        }
      }

      E9l = this.outer;
      o9l = this.rays;
      G9l = E9l && this.lineIntersection(p9l, q9l, D9l, "segment", E9l.p0, E9l.p1);

      if (!G9l) {
        for (var i9l = 0; i9l < o9l.length; i9l++) {
          if (this.lineIntersection(p9l, q9l, D9l, "ray", o9l[i9l][+"0"], o9l[i9l][1], !0)) {
            G9l = !!{};
            break;
          }
        }
      }

      if (G9l) {
        this.highlighted = !![];
        return {
          action: "move",
          p0: x1l.clone(j9l),
          p1: x1l.clone(B9l),
          tick: p9l,
          value: q9l
        };
      }

      return null;
    };

    x1l.Drawing.fibonacci.prototype.reconstruct = function (t9l, k9l) {
      k9l = x1l.replaceFields(k9l, x1l.reverseObject(x1l.Drawing.fibonacci.mapping));
      this.stx = t9l;
      this.parameters = k9l.parameters;

      if (!this.parameters) {
        this.parameters = x1l.clone(this.stx.currentVectorParameters.fibonacci);
      }

      this.color = k9l.col;
      this.fillColor = k9l.fc;
      this.panelName = k9l.pnl;
      this.d0 = k9l.d0;
      this.d1 = k9l.d1;
      this.d2 = k9l.d2;
      this.tzo0 = k9l.tzo0;
      this.tzo1 = k9l.tzo1;
      this.tzo2 = k9l.tzo2;
      this.v0 = k9l.v0;
      this.v1 = k9l.v1;
      T5VV.d7Kh();
      this.v2 = k9l.v2;
      this.adjust();
    };

    x1l.Drawing.fibonacci.prototype.adjust = function () {
      var S9l;
      S9l = this.stx.panels[this.panelName];
      T5VV.k7Kh();

      if (!S9l) {
        return;
      }

      this.setPoint(0, this.d0, this.v0, S9l.chart);
      this.setPoint(1, this.d1, this.v1, S9l.chart);
      this.setOuter();
    };

    x1l.Drawing.fibonacci.prototype.serialize = function () {
      var v9l;
      v9l = {
        name: this.name,
        parameters: this.parameters,
        pnl: this.panelName,
        col: this.color,
        fc: this.fillColor,
        d0: this.d0,
        d1: this.d1,
        d2: this.d2,
        tzo0: this.tzo0,
        tzo1: this.tzo1,
        tzo2: this.tzo2,
        v0: this.v0,
        v1: this.v1,
        v2: this.v2
      };
      return x1l.replaceFields(v9l, x1l.Drawing.fibonacci.mapping);
    };

    x1l.Drawing.retracement = function () {
      T5VV.d7Kh();
      this.name = "retracement";
    };

    x1l.inheritsFrom(x1l.Drawing.retracement, x1l.Drawing.fibonacci);

    x1l.Drawing.fibprojection = function () {
      var g2v, a3v, u3v, X3v;
      g2v = "f";
      g2v += "i";
      g2v += "b";
      g2v += "projection";
      T5VV.d7Kh();
      this.name = g2v;
      this.dragToDraw = ![];
      a3v = 1237852862;
      u3v = 1513606498;
      X3v = +"2";

      for (var Y3v = 1; T5VV.s1v(Y3v.toString(), Y3v.toString().length, "50244" - 0) !== a3v; Y3v++) {
        this.p2 = 1;
        X3v += 2;
      }

      if (T5VV.Y6v(X3v.toString(), X3v.toString().length, 55748) !== u3v) {
        this.p2 = null;
      }
    };

    x1l.inheritsFrom(x1l.Drawing.fibprojection, x1l.Drawing.fibonacci);
    T5VV.N3mK(4);
    x1l.Drawing.fibprojection.prototype.recommendedLevels = [+"0", 0.618, T5VV.e3mK("1", 2147483647), 1.272, 1.618, 2.618, 4.236];

    x1l.Drawing.fibprojection.prototype.click = function (a9l, x9l, V9l) {
      var N9l;
      N9l = this.stx.panels[this.panelName];

      if (!N9l) {
        return;
      }

      this.copyConfig();

      if (!this.penDown) {
        this.setPoint(0, x9l, V9l, N9l.chart);
        this.penDown = !![];
        return !!0;
      }

      if (this.accidentalClick(x9l, V9l)) {
        this.stx.undo();
        return !"";
      }

      if (this.p2 !== null) {
        this.setPoint(2, this.p2[0], this.p2[1], N9l.chart);
        this.parameters = x1l.clone(this.parameters);
        return !![];
      }

      this.setPoint(1, x9l, V9l, N9l.chart);
      this.p2 = [this.p1[0], this.p1[1]];
      return !1;
      ;
    };

    x1l.Drawing.fibprojection.prototype.render = function (m9l) {
      var n0bh = T5VV;
      var Q2v, J2v, T2v, M9l, w9l, b9l, l9l, f9l, u9l, I9l, r9l, A9l, e9l, s9v, H9v, v9v, d9l, X9l, y9l, l2v, C9l, z9l, Y9l, P9l, R9l, Z9l, R2v, L9l, T9l, s9l, W9l, Q9l, r2v, H0N, J0N, c0N;
      Q2v = "a";
      Q2v += "uto";
      J2v = "mi";
      J2v += "dd";
      J2v += "l";
      J2v += "e";
      T2v = "s";
      T2v += "ol";
      T2v += "id";
      M9l = this.stx.panels[this.panelName];

      if (!M9l) {
        return;
      }

      w9l = M9l.yAxis;

      if (!this.p1) {
        return;
      }

      n0bh.i3mK(0);
      var E4uu = n0bh.E3mK(1, 0);
      n0bh.N3mK(62);
      var B4uu = n0bh.E3mK(45, 15, 12, 17);
      b9l = this.p1[E4uu] - this.p0[B4uu];
      l9l = this.stx.pixelFromTick(this.p0[0], M9l.chart);
      f9l = this.stx.pixelFromTick(this.p1[0], M9l.chart);
      u9l = this.stx.pixelFromValueAdjusted(M9l, this.p0[+"0"], this.p0[1]);
      I9l = this.stx.pixelFromValueAdjusted(M9l, this.p1[0], this.p1[+"1"]);
      r9l = null;
      A9l = null;

      if (this.p2) {
        r9l = this.stx.pixelFromTick(this.p2[0], M9l.chart);
        A9l = this.stx.pixelFromValueAdjusted(M9l, this.p2[0], this.p2[1]);
      }

      e9l = {
        color: "auto",
        parameters: {
          pattern: T2v,
          opacity: 0.25,
          lineWidth: +"1"
        }
      };

      if (!this.parameters.trend) {
        this.parameters.trend = e9l;
      }

      s9v = -1591282772;
      H9v = -1057598920;
      v9v = 2;

      for (var S9v = 1; n0bh.Y6v(S9v.toString(), S9v.toString().length, +"75200") !== s9v; S9v++) {
        d9l = this.getLineColor(this.parameters.trend.color);
        v9v += 2;
      }

      if (n0bh.Y6v(v9v.toString(), v9v.toString().length, +"79090") !== H9v) {
        d9l = this.getLineColor(this.parameters.trend.color);
      }

      m9l.textBaseline = J2v;
      this.stx.canvasFont("stx_yaxis", m9l);
      n0bh.N3mK(36);
      var G4uu = n0bh.E3mK(11, 2, 3, 1);
      X9l = m9l.measureText("161.8%").width + G4uu;
      y9l = this.color;

      if (y9l == Q2v || x1l.isTransparent(y9l)) {
        y9l = this.stx.defaultColor;
      }

      if (this.p2) {
        this.rays = [];

        for (var F9l = 0; F9l < this.parameters.fibs.length; F9l++) {
          l2v = "a";
          l2v += "uto";
          m9l.textAlign = "left";
          m9l.fillStyle = y9l;
          C9l = this.parameters.fibs[F9l];
          if (!C9l.display) continue;
          z9l = this.stx.pixelFromValueAdjusted(M9l, this.p2[0], this.p2[1] + b9l * C9l.level);
          Y9l = x1l.xIntersection({
            x0: l9l,
            x1: f9l,
            y0: u9l,
            y1: I9l
          }, z9l);
          P9l = this.parameters.extendLeft ? 0 : l9l;
          R9l = M9l.left + M9l.width;

          if (this.parameters.printLevels) {
            n0bh.N3mK(63);
            var m4uu = n0bh.e3mK(26, 3, 1, 1, 20);
            n0bh.i3mK(64);
            var P4uu = n0bh.E3mK(15, 9681, 6, 135221, 14);
            n0bh.N3mK(0);
            var f4uu = n0bh.E3mK(1861, 109);
            n0bh.i3mK(60);
            var D4uu = n0bh.e3mK(25831, 7, 574, 8);
            n0bh.i3mK(65);
            var y4uu = n0bh.E3mK(2597, 15, 2, 1);
            n0bh.i3mK(27);
            var k4uu = n0bh.E3mK(3, 5, 1, 15, 25830);
            n0bh.i3mK(58);
            var C4uu = n0bh.e3mK(56353, 5122, 56353);
            Z9l = Math.round(C9l.level * ("1000" & 2147483647)) / m4uu + (P4uu !== (f4uu, D4uu) ? "%" : 491.02 >= (y4uu, k4uu) ? (!!"", C4uu) : (0x2644, "p"));
            R9l -= X9l;

            if (this.parameters.printValues) {
              R2v = "st";
              R2v += "x_yaxis";
              m9l.fillStyle = y9l;
              this.stx.canvasFont(R2v, m9l);
              ;
            }

            if (R9l < P9l) {
              m9l.textAlign = "right";
            }

            m9l.fillText(Z9l, R9l, z9l);

            if (R9l < P9l) {
              R9l += 5;
            } else {
              n0bh.i3mK(26);
              R9l -= n0bh.e3mK("5", 0);
            }
          }

          if (this.parameters.printValues) {
            if (Y9l < M9l.width) {
              L9l = this.stx.transformedPriceFromPixel(z9l, M9l);

              if (w9l.priceFormatter) {
                L9l = w9l.priceFormatter(this.stx, M9l, L9l);
              } else {
                L9l = this.stx.formatYAxisPrice(L9l, M9l);
              }

              if (m9l == this.stx.chart.context) {
                this.stx.endClip();
              }

              this.stx.createYAxisLabel(M9l, L9l, z9l, y9l, null, m9l);

              if (m9l == this.stx.chart.context) {
                this.stx.startClip(M9l.name);
              }
            }
          }

          T9l = C9l.color;

          if (T9l == "auto" || x1l.isTransparent(T9l)) {
            T9l = this.color;
          }

          if (T9l == l2v || x1l.isTransparent(T9l)) {
            T9l = this.stx.defaultColor;
          }

          s9l = C9l.color;

          if (s9l == "auto" || x1l.isTransparent(s9l)) {
            s9l = this.fillColor;
          }

          if (s9l == "auto" || x1l.isTransparent(s9l)) {
            s9l = this.stx.defaultColor;
          }

          m9l.fillStyle = s9l;
          W9l = x1l.clone(C9l.parameters);

          if (this.highlighted) {
            W9l.opacity = 1;
          }

          this.stx.plotLine(P9l, R9l, z9l, z9l, this.highlighted ? d9l : T9l, "segment", m9l, M9l, W9l);
          this.rays.push([[P9l, z9l], [R9l, z9l]]);
          m9l.globalAlpha = 0.05;
          m9l.beginPath();
          m9l.moveTo(R9l, z9l);
          m9l.lineTo(P9l, z9l);

          if (P9l) {
            m9l.lineTo(l9l, A9l);
          } else {
            m9l.lineTo(P9l, A9l);
          }

          m9l.lineTo(R9l, A9l);

          if (typeof s9l != "undefined") {
            m9l.fill();
          }

          m9l.globalAlpha = 1;
        }
      }

      Q9l = x1l.clone(this.parameters.trend.parameters);

      if (this.highlighted) {
        Q9l.opacity = 1;
      }

      this.stx.plotLine(l9l, f9l, u9l, I9l, d9l, "segment", m9l, M9l, Q9l);

      if (this.p2) {
        this.stx.plotLine(f9l, r9l, I9l, A9l, d9l, "segment", m9l, M9l, Q9l);
      }

      if (this.highlighted) {
        r2v = "p";
        r2v += "2";
        H0N = this.highlighted == "p0" ? !![] : !1;
        J0N = this.highlighted == "p1" ? !!1 : !!"";
        c0N = this.highlighted == r2v ? !![] : !{};
        this.littleCircle(m9l, l9l, u9l, H0N);
        this.littleCircle(m9l, f9l, I9l, J0N);
        this.littleCircle(m9l, r9l, A9l, c0N);
      }
    };

    x1l.Drawing.fibprojection.prototype.move = function (n0N, K0N, O0N) {
      if (!this.penDown) {
        return;
      }

      this.copyConfig();

      if (this.p2 === null) {
        this.p1 = [K0N, O0N];
      } else {
        this.p2 = [K0N, O0N];
      }

      this.render(n0N);
    };

    x1l.Drawing.fibprojection.prototype.reposition = function (B0N, g0N, U0N, E0N) {
      var h0N, i0N, j0N;

      if (!g0N) {
        return;
      }

      h0N = this.stx.panels[this.panelName];
      i0N = g0N.tick - U0N;
      j0N = g0N.value - E0N;

      if (g0N.action == "move") {
        this.setPoint(0, g0N.p0[0] - i0N, g0N.p0[1] - j0N, h0N.chart);
        T5VV.i3mK(5);
        this.setPoint(T5VV.e3mK(1, "1"), g0N.p1[0] - i0N, g0N.p1[+"1"] - j0N, h0N.chart);
        this.setPoint(2, g0N.p2[0] - i0N, g0N.p2[+"1"] - j0N, h0N.chart);
        this.render(B0N);
      } else if (g0N.action == "drag") {
        this[g0N.point] = [U0N, E0N];
        this.setPoint(0, this.p0[0], this.p0[1], h0N.chart);
        this.setPoint(1, this.p1[0], this.p1[1], h0N.chart);
        this.setPoint(2, this.p2[0], this.p2["1" & 2147483647], h0N.chart);
        this.render(B0N);
      }
    };

    x1l.Drawing.fibprojection.prototype.intersected = function (k0N, t0N, S0N) {
      var V2v, G0N, o0N, p0N, v0N, K2v, N0N, x0N, O2v, a2v;
      V2v = "s";
      V2v += "egment";
      G0N = this.p0;
      T5VV.k7Kh();
      o0N = this.p1;
      p0N = this.p2;

      if (!G0N || !o0N || !p0N) {
        return null;
      }

      v0N = {
        0: G0N,
        1: o0N,
        2: p0N
      };

      for (var q0N in v0N) {
        if (this.pointIntersection(v0N[q0N][0], v0N[q0N][1], S0N)) {
          K2v = "d";
          K2v += "ra";
          K2v += "g";
          T5VV.i3mK(0);
          this.highlighted = T5VV.E3mK(q0N, (967.4, 5330) > (627.43, 38) ? "p" : (+"438.66", 8960) != (9350, 9430) ? !![] : "0x1973" * 1);
          return {
            action: K2v,
            point: ((402.15, 5660) !== (1090, 691) ? 2295 === (6575, 6843) ? (6780, 6420) == 333 ? 8.56e+3 : (0x58f, "p") : "p" : (7.00e+3, !!1)) + q0N
          };
        }
      }

      N0N = this.rays;
      x0N = this.lineIntersection(k0N, t0N, S0N, V2v, G0N, o0N) || this.lineIntersection(k0N, t0N, S0N, "segment", o0N, p0N);

      if (!x0N) {
        for (var D0N = "0" - 0; D0N < N0N.length; D0N++) {
          O2v = "r";
          O2v += "a";
          O2v += "y";

          if (this.lineIntersection(k0N, t0N, S0N, O2v, N0N[D0N][0], N0N[D0N][+"1"], !!"1")) {
            x0N = !0;
            break;
          }
        }
      }

      if (x0N) {
        a2v = "m";
        a2v += "o";
        a2v += "v";
        a2v += "e";
        this.highlighted = !!"1";
        return {
          action: a2v,
          p0: x1l.clone(G0N),
          p1: x1l.clone(o0N),
          p2: x1l.clone(p0N),
          tick: k0N,
          value: t0N
        };
      }

      return null;
    };

    x1l.Drawing.fibprojection.prototype.adjust = function () {
      var V0N;
      V0N = this.stx.panels[this.panelName];

      if (!V0N) {
        return;
      }

      this.setPoint(0, this.d0, this.v0, V0N.chart);
      T5VV.N3mK(5);
      this.setPoint(T5VV.e3mK(1, "1"), this.d1, this.v1, V0N.chart);
      this.setPoint(2, this.d2, this.v2, V0N.chart);
    };

    x1l.Drawing.fibarc = function () {
      this.name = "fibarc";
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.fibarc, x1l.Drawing.fibonacci);
    x1l.Drawing.fibarc.prototype.recommendedLevels = [0.382, 0.5, 0.618, 1];

    x1l.Drawing.fibarc.prototype.setOuter = function () {
      var a0N, m0N, M0N, R0N, s0N, z0N, P0N;
      a0N = this.stx.panels[this.panelName];

      if (!a0N) {
        return;
      }

      this.outer = {
        p0: x1l.clone(this.p0),
        p1: x1l.clone(this.p1)
      };
      m0N = this.stx.pixelFromValueAdjusted(a0N, this.p0[0], this.p0[1]);
      M0N = this.stx.pixelFromValueAdjusted(a0N, this.p1[0], this.p1["1" | 0]);
      R0N = this.stx.pixelFromTick(this.p0[0], a0N.chart);
      s0N = this.stx.pixelFromTick(this.p1[0], a0N.chart);
      T5VV.N3mK(66);
      z0N = T5VV.e3mK(m0N, M0N, "2", 1739427072);
      P0N = x1l.xIntersection({
        x0: R0N,
        x1: s0N,
        y0: m0N,
        y1: M0N
      }, z0N);
      this.outer.p0[1] = this.stx.valueFromPixel(z0N, a0N);
      T5VV.N3mK(22);
      this.outer.p0[T5VV.e3mK("0", 0)] = this.stx.tickFromPixel(P0N, a0N.chart);
    };

    x1l.Drawing.fibarc.prototype.intersected = function (l0N, u0N, A0N) {
      var X2v, u2v, r0N, y0N, C0N, F0N, d0N, w0N, T0N, f0N, Q0N, I0N;
      X2v = "m";
      X2v += "o";
      X2v += "v";
      X2v += "e";
      u2v = "se";
      u2v += "g";
      u2v += "me";
      u2v += "nt";
      r0N = this.stx.panels[this.panelName];

      if (!r0N) {
        return;
      }

      y0N = this.p0;
      C0N = this.p1;
      F0N = this.outer;

      if (!y0N || !C0N) {
        return null;
      }

      d0N = {
        0: y0N,
        1: C0N
      };

      for (var L0N in d0N) {
        if (this.pointIntersection(d0N[L0N][0], d0N[L0N]["1" & 2147483647], A0N)) {
          T5VV.N3mK(0);
          this.highlighted = T5VV.e3mK(L0N, (261, 4210) >= (3380, 5420) ? +"0x117a" : "p");
          return {
            action: "drag",
            point: (1900 < 9526 ? (+"8720", 6570) > 1440 ? "p" : (0xe56, "n") : (5.61e+3, +"0x7ee")) + L0N
          };
        }
      }

      if (this.lineIntersection(l0N, u0N, A0N, u2v, F0N.p0, F0N.p1)) {
        this.highlighted = !![];
        return {
          action: "move",
          p0: x1l.clone(y0N),
          p1: x1l.clone(C0N),
          tick: l0N,
          value: u0N
        };
      }

      w0N = {
        x0: y0N[0],
        x1: C0N[+"0"],
        y0: y0N[1],
        y1: C0N[1]
      };
      T0N = x1l.convertBoxToPixels(this.stx, this.panelName, w0N);
      f0N = {
        x: Math.abs(Math.sqrt(2) * (T0N.x1 - T0N.x0)),
        y: Math.abs(Math.sqrt(2) * (T0N.y1 - T0N.y0))
      };
      Q0N = this.stx.pixelFromTick(l0N, r0N.chart);
      I0N = this.stx.pixelFromValueAdjusted(r0N, l0N, u0N);

      if (Q0N + A0N.r < T0N.x1 - f0N.x || Q0N - A0N.r > T0N.x1 + f0N.x) {
        return null;
      }

      if (I0N + A0N.r < T0N.y1 - f0N.y || I0N - A0N.r > T0N.y1 + f0N.y) {
        return null;
      }

      if (T0N.y0 < T0N.y1 && I0N - A0N.r > T0N.y1) {
        return null;
      }

      if (T0N.y0 > T0N.y1 && I0N + A0N.r < T0N.y1) {
        return null;
      }

      this.highlighted = !![];
      return {
        action: X2v,
        p0: x1l.clone(this.p0),
        p1: x1l.clone(this.p1),
        tick: l0N,
        value: u0N
      };
    };

    x1l.Drawing.fibarc.prototype.render = function (W0N) {
      var L0bh = T5VV;
      var H5v, b0N, g1N, O1N, Y0N, c1N, X0N, i1N, j1N, B1N, J1N, s5v, Y2v, e0N, o1N, U1N, n1N, G1N, p2v, p1N, K1N, Z0N, H1N, E1N, v5v, q1N, D1N;
      H5v = "segme";
      H5v += "nt";
      b0N = this.stx.panels[this.panelName];

      if (!b0N) {
        return;
      }

      g1N = b0N.yAxis;

      if (!this.p1) {
        return;
      }

      O1N = this.stx.pixelFromTick(this.p0["0" ^ 0], b0N.chart);
      Y0N = this.stx.pixelFromTick(this.p1[0], b0N.chart);
      c1N = this.stx.pixelFromValueAdjusted(b0N, this.p0[+"0"], this.p0[1]);
      X0N = this.stx.pixelFromValueAdjusted(b0N, this.p1[+"0"], this.p1[1]);
      L0bh.N3mK(67);
      i1N = L0bh.E3mK(X0N, c1N);
      L0bh.N3mK(68);
      j1N = Math.abs(L0bh.e3mK(c1N, X0N, Y0N, O1N));
      L0bh.d7Kh();
      B1N = this.getLineColor(this.parameters.trend.color);
      W0N.textBaseline = "middle";
      this.stx.canvasFont("stx_yaxis", W0N);
      J1N = this.color;

      if (J1N == "auto" || x1l.isTransparent(J1N)) {
        J1N = this.stx.defaultColor;
      }

      for (var h1N = 0; h1N < this.parameters.fibs.length; h1N++) {
        s5v = "a";
        s5v += "uto";
        Y2v = "au";
        Y2v += "to";
        W0N.fillStyle = J1N;
        e0N = this.parameters.fibs[h1N];
        if (e0N.level < 0 || !e0N.display) continue;
        L0bh.i3mK(56);
        var A4uu = L0bh.e3mK(14, 13, 1);
        L0bh.i3mK(69);
        var W4uu = L0bh.e3mK(16, 1, 5, 15, 7);
        o1N = Math.abs(this.p1["1" ^ 0] - this.p0[A4uu]) * Math.sqrt(W4uu) * e0N.level;
        L0bh.N3mK(70);
        var g4uu = L0bh.e3mK(33, 7, 2, 20);
        L0bh.i3mK(56);
        var T4uu = L0bh.E3mK(76, 15, 5);
        L0bh.i3mK(1);
        var J4uu = L0bh.e3mK(1, 0);
        U1N = this.p1[g4uu] + o1N * (i1N ? -+"1" : T4uu) * (g1N.flipped ? J4uu : +"1");
        n1N = this.stx.pixelFromValueAdjusted(b0N, this.p0[0], U1N);
        G1N = x1l.xIntersection({
          x0: O1N,
          x1: Y0N,
          y0: c1N,
          y1: X0N
        }, n1N);

        if (this.parameters.printLevels) {
          p2v = "cen";
          p2v += "t";
          p2v += "er";
          W0N.textAlign = p2v;
          L0bh.N3mK(31);
          var Q4uu = L0bh.E3mK(1018, 15, 39, 6);
          L0bh.N3mK(0);
          var R4uu = L0bh.E3mK(9, 1);
          L0bh.i3mK(1);
          var l4uu = L0bh.E3mK(166402, 175160);
          L0bh.N3mK(1);
          var r4uu = L0bh.e3mK(8, 5678);
          L0bh.N3mK(71);
          var K4uu = L0bh.e3mK(2, 17040, 19, 31912);
          L0bh.N3mK(7);
          var V4uu = L0bh.E3mK(135000, 18, 126018);
          p1N = Math.round(e0N.level * Q4uu) / R4uu + (l4uu == r4uu ? 508.23 > K4uu ? "b" : (V4uu, !{}) : "%");

          if (this.parameters.printValues) {
            W0N.fillStyle = J1N;
            this.stx.canvasFont("stx_yaxis", W0N);
            ;
          }

          W0N.fillText(p1N, Y0N, Math.round(n1N - 5));
        }

        W0N.textAlign = "left";

        if (this.parameters.printValues) {
          if (G1N < b0N.width) {
            K1N = U1N;

            if (g1N.priceFormatter) {
              K1N = g1N.priceFormatter(this.stx, b0N, K1N);
            } else {
              K1N = this.stx.formatYAxisPrice(K1N, b0N);
            }

            if (W0N == this.stx.chart.context) {
              this.stx.endClip();
            }

            this.stx.createYAxisLabel(b0N, K1N, n1N, J1N, null, W0N);

            if (W0N == this.stx.chart.context) {
              this.stx.startClip(b0N.name);
            }
          }
        }

        Z0N = e0N.color;

        if (Z0N == Y2v || x1l.isTransparent(Z0N)) {
          Z0N = this.color;
        }

        if (Z0N == s5v || x1l.isTransparent(Z0N)) {
          Z0N = this.stx.defaultColor;
        }

        W0N.strokeStyle = this.highlight ? B1N : Z0N;
        H1N = e0N.color;

        if (H1N == "auto" || x1l.isTransparent(H1N)) {
          H1N = this.fillColor;
        }

        if (H1N == "auto" || x1l.isTransparent(H1N)) {
          H1N = this.stx.defaultColor;
        }

        W0N.fillStyle = H1N;
        W0N.globalAlpha = this.highlighted ? 1 : e0N.parameters.opacity;
        W0N.lineWidth = e0N.parameters.lineWidth;

        if (W0N.setLineDash) {
          W0N.setLineDash(x1l.borderPatternToArray(W0N.lineWidth, e0N.parameters.pattern));
          W0N.lineDashOffset = 0;
          ;
        }

        W0N.save();
        W0N.beginPath();
        L0bh.i3mK(10);
        W0N.scale(L0bh.e3mK(1, j1N), 1);
        L0bh.i3mK(5);
        W0N.arc(L0bh.e3mK(j1N, Y0N), X0N, Math.abs(n1N - X0N), 0, Math.PI, !i1N);

        if (this.pattern != "none") {
          W0N.stroke();
        }

        W0N.globalAlpha = 0.05;
        W0N.fill();
        W0N.restore();

        if (W0N.setLineDash) {
          W0N.setLineDash([]);
        }

        W0N.globalAlpha = +"1";
      }

      W0N.textAlign = "left";
      E1N = x1l.clone(this.parameters.trend.parameters);

      if (this.highlighted) {
        E1N.opacity = +"1";
      }

      L0bh.i3mK(23);
      this.stx.plotLine(Y0N, L0bh.E3mK(2, Y0N, O1N), X0N, L0bh.E3mK(2, X0N, c1N), B1N, H5v, W0N, b0N, E1N);

      if (this.highlighted) {
        v5v = "p";
        v5v += "1";
        q1N = this.highlighted == "p0" ? !0 : !1;
        D1N = this.highlighted == v5v ? !![] : !{};
        this.littleCircle(W0N, O1N, c1N, q1N);
        this.littleCircle(W0N, Y0N, X0N, D1N);
      }
    };

    x1l.Drawing.fibfan = function () {
      this.name = "fibfan";
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.fibfan, x1l.Drawing.fibonacci);
    T5VV.i3mK(15);
    x1l.Drawing.fibfan.prototype.recommendedLevels = [T5VV.e3mK(261169184, "0"), 0.382, +"0.5", +"0.618", 1];

    x1l.Drawing.fibfan.prototype.setOuter = function () {};

    x1l.Drawing.fibfan.prototype.render = function (k1N) {
      var I0bh = T5VV;
      var U5v, S1N, I1N, t1N, V1N, v1N, P1N, u1N, r1N, d1N, Q1N, w1N, A1N, y1N, C1N, M1N, L5v, t5v, z1N, x1N, l1N, N1N, R1N, W1N, S5v, w5v, T1N, a1N, m1N, F1N, s1N, x5v, b1N, e1N;
      U5v = "st";
      U5v += "x";
      U5v += "_yaxis";
      S1N = this.stx.panels[this.panelName];

      if (!S1N) {
        return;
      }

      I1N = S1N.yAxis;

      if (!this.p1) {
        return;
      }

      t1N = this.stx.pixelFromTick(this.p0[0], S1N.chart);
      V1N = this.stx.pixelFromTick(this.p1[0], S1N.chart);
      v1N = this.stx.pixelFromValueAdjusted(S1N, this.p0[0], this.p0[1]);
      P1N = this.stx.pixelFromValueAdjusted(S1N, this.p1[0], this.p1[1]);
      u1N = Math.min(P1N, v1N);
      r1N = Math.max(P1N, v1N);
      I0bh.N3mK(1);
      d1N = I0bh.e3mK(u1N, r1N);
      I0bh.N3mK(54);
      Q1N = I0bh.E3mK(v1N, V1N, 0, P1N, t1N);
      w1N = this.getLineColor(this.parameters.trend.color);
      k1N.textBaseline = "middle";
      this.stx.canvasFont(U5v, k1N);
      I0bh.N3mK(58);
      var O4uu = I0bh.e3mK(22, 9, 22);
      A1N = k1N.measureText("161.8%").width + O4uu;
      y1N = Number.MAX_VALUE;
      I0bh.i3mK(12);
      var a4uu = I0bh.E3mK(16, 9, 9, 17);
      C1N = Number.MAX_VALUE * a4uu;
      M1N = this.color;

      if (M1N == "auto" || x1l.isTransparent(M1N)) {
        M1N = this.stx.defaultColor;
      }

      this.rays = [];

      for (var f1N = 0; f1N < this.parameters.fibs.length; f1N++) {
        L5v = "a";
        L5v += "u";
        L5v += "t";
        L5v += "o";
        t5v = "au";
        t5v += "to";
        k1N.fillStyle = M1N;
        z1N = this.parameters.fibs[f1N];
        if (!z1N.display) continue;
        x1N = this.stx.pixelFromValueAdjusted(S1N, this.p0[0], (this.p0[+"1"] - this.p1[1]) * z1N.level + this.p1[1]);
        l1N = x1l.xIntersection({
          x0: V1N,
          x1: V1N,
          y0: v1N,
          y1: P1N
        }, x1N);
        N1N = S1N.left;

        if (V1N > t1N) {
          N1N += S1N.width;
        }

        I0bh.i3mK(72);
        R1N = I0bh.e3mK(t1N, v1N, l1N, x1N, t1N, v1N, N1N);
        if (t1N > N1N - (this.parameters.printLevels ? A1N + 5 : 0) && V1N > t1N) continue;else if (t1N < N1N + (this.parameters.printLevels ? A1N + 5 : 0) && V1N < t1N) continue;

        if (this.parameters.printLevels) {
          I0bh.i3mK(58);
          var u4uu = I0bh.e3mK(1002, 499, 2);
          I0bh.N3mK(1);
          var X4uu = I0bh.e3mK(4, 14);
          I0bh.i3mK(73);
          var p4uu = I0bh.E3mK(14008, 8, 70040, 4107);
          I0bh.i3mK(0);
          var Y4uu = I0bh.E3mK(4, 1676);
          I0bh.N3mK(18);
          var s8uu = I0bh.E3mK(7, 6544, 6544, 6546);
          I0bh.i3mK(74);
          var H8uu = I0bh.e3mK(7, 5009, 5, 4999, 4997);
          I0bh.N3mK(0);
          var v8uu = I0bh.E3mK(15, 5170);
          I0bh.N3mK(75);
          var U8uu = I0bh.E3mK(4, 1327, 3, 1);
          I0bh.i3mK(65);
          var S8uu = I0bh.e3mK(318, 19, 1269, 337);
          W1N = Math.round(z1N.level * u4uu) / X4uu + (p4uu < +"107.95" ? (Y4uu, s8uu) === (+"572.42", H8uu) ? (v8uu, U8uu) : S8uu : "%");

          if (V1N > t1N) {
            S5v = "l";
            S5v += "e";
            S5v += "f";
            S5v += "t";
            N1N -= A1N;
            k1N.textAlign = S5v;
          } else {
            N1N += A1N;
            k1N.textAlign = "right";
          }

          if (this.parameters.printValues) {
            w5v = "stx_y";
            w5v += "axi";
            w5v += "s";
            k1N.fillStyle = M1N;
            this.stx.canvasFont(w5v, k1N);
            ;
          }

          I0bh.N3mK(72);
          R1N = I0bh.e3mK(t1N, v1N, l1N, x1N, t1N, v1N, N1N);
          k1N.fillText(W1N, N1N, R1N);

          if (V1N > t1N) {
            N1N -= 5;
          } else {
            N1N += 5;
          }
        }

        k1N.textAlign = "left";

        if (this.parameters.printValues) {
          if (l1N < S1N.width) {
            T1N = this.stx.transformedPriceFromPixel(x1N, S1N);

            if (I1N.priceFormatter) {
              T1N = I1N.priceFormatter(this.stx, S1N, T1N);
            } else {
              T1N = this.stx.formatYAxisPrice(T1N, S1N);
            }

            if (k1N == this.stx.chart.context) {
              this.stx.endClip();
            }

            this.stx.createYAxisLabel(S1N, T1N, x1N, M1N, null, k1N);

            if (k1N == this.stx.chart.context) {
              this.stx.startClip(S1N.name);
            }
          }
        }

        a1N = z1N.color;

        if (a1N == "auto" || x1l.isTransparent(a1N)) {
          a1N = this.color;
        }

        if (a1N == t5v || x1l.isTransparent(a1N)) {
          a1N = this.stx.defaultColor;
        }

        m1N = z1N.color;

        if (m1N == "auto" || x1l.isTransparent(m1N)) {
          m1N = this.fillColor;
        }

        if (m1N == L5v || x1l.isTransparent(m1N)) {
          m1N = this.stx.defaultColor;
        }

        k1N.fillStyle = m1N;

        if (this.parameters.printLevels) {
          I0bh.i3mK(72);
          R1N = I0bh.e3mK(t1N, v1N, l1N, x1N, t1N, v1N, N1N);
        }

        F1N = x1l.clone(z1N.parameters);

        if (this.highlighted) {
          F1N.opacity = +"1";
        }

        this.stx.plotLine(t1N, N1N, v1N, R1N, this.highlighted ? w1N : a1N, "segment", k1N, S1N, F1N);
        this.rays.push([[t1N, v1N], [N1N, R1N]]);
        k1N.globalAlpha = 0.05;
        k1N.beginPath();
        k1N.moveTo(N1N, R1N);
        k1N.lineTo(t1N, v1N);
        k1N.lineTo(N1N, v1N);
        k1N.fill();
        k1N.globalAlpha = 1;

        if (x1N < y1N) {
          y1N = x1N;
        }

        if (x1N > C1N) {
          C1N = x1N;
        }
      }

      for (var L1N = "0" - 0; L1N <= 1; L1N++) {
        s1N = Q1N ? r1N - d1N * L1N : u1N + d1N * L1N;
        s1N = Math.round(s1N);

        if (s1N < y1N) {
          y1N = s1N;
        }

        if (s1N > C1N) {
          C1N = s1N;
        }
      }

      if (this.highlighted) {
        x5v = "p";
        x5v += "0";
        b1N = this.highlighted == x5v ? !!1 : !!"";
        e1N = this.highlighted == "p1" ? !![] : !1;
        this.littleCircle(k1N, t1N, v1N, b1N);
        this.littleCircle(k1N, V1N, P1N, e1N);
      }
    };

    x1l.Drawing.fibtimezone = function () {
      this.name = "fibtimezone";
      T5VV.d7Kh();
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.fibtimezone, x1l.Drawing.fibonacci);

    x1l.Drawing.fibtimezone.prototype.render = function (X1N) {
      var c0bh = T5VV;
      var M5v, e5v, o5v, j5v, Y1N, Z1N, K2N, j2N, B2N, h2N, U2N, p2N, E2N, g2N, H2N, o2N, O2N, n2N, J2N, c2N, i2N, N5v, q2N, D2N, G2N;
      M5v = "c";
      M5v += "enter";
      e5v = "a";
      e5v += "ut";
      e5v += "o";
      o5v = "st";
      o5v += "x_y";
      o5v += "ax";
      o5v += "is";
      j5v = "midd";
      j5v += "l";
      j5v += "e";
      Y1N = this.stx.panels[this.panelName];

      if (!Y1N) {
        return;
      }

      if (!this.p1) {
        return;
      }

      Z1N = this.stx.pixelFromTick(this.p0[+"0"], Y1N.chart);
      K2N = this.stx.pixelFromTick(this.p1[+"0"], Y1N.chart);
      j2N = this.stx.pixelFromValueAdjusted(Y1N, this.p0[0], this.p0["1" | 1]);
      B2N = this.stx.pixelFromValueAdjusted(Y1N, this.p1["0" | 0], this.p1[1]);
      c0bh.N3mK(1);
      h2N = [1, c0bh.E3mK(0, "0")];
      U2N = this.getLineColor(this.parameters.trend.color);
      X1N.textBaseline = j5v;
      this.stx.canvasFont(o5v, X1N);
      p2N = 20;
      E2N = this.p1[0] - this.p0[0];
      g2N = this.color;

      if (g2N == e5v || x1l.isTransparent(g2N)) {
        g2N = this.stx.defaultColor;
      }

      X1N.textAlign = M5v;
      H2N = Z1N;
      o2N = Y1N.yAxis.top;
      O2N = Y1N.yAxis.bottom;
      n2N = 0;
      J2N = this.parameters.timezone.color;

      if (J2N == "auto" || x1l.isTransparent(J2N)) {
        J2N = this.color;
      }

      if (J2N == "auto" || x1l.isTransparent(J2N)) {
        J2N = this.stx.defaultColor;
      }

      c2N = this.parameters.timezone.color;

      if (c2N == "auto" || x1l.isTransparent(c2N)) {
        c2N = this.fillColor;
      }

      if (c2N == "auto" || x1l.isTransparent(c2N)) {
        c2N = this.stx.defaultColor;
      }

      if (this.parameters.printLevels) {
        c0bh.N3mK(76);
        O2N -= c0bh.E3mK("7", p2N);
      }

      i2N = x1l.clone(this.parameters.timezone.parameters);

      if (this.highlighted) {
        i2N.opacity = 1;
      }

      do {
        N5v = "segm";
        N5v += "ent";
        H2N = this.stx.pixelFromTick(this.p0[0] + n2N * E2N, Y1N.chart);
        if (Z1N < K2N && H2N > Y1N.left + Y1N.width) break;else if (Z1N > K2N && H2N < Y1N.left) break;

        if (this.parameters.printLevels) {
          X1N.fillStyle = g2N;
          X1N.fillText(K2N > Z1N ? n2N : n2N * -("1" ^ 0), H2N, O2N + 7);
        }

        X1N.fillStyle = c2N;
        this.stx.plotLine(H2N, H2N, 0, O2N, this.highlighted ? U2N : J2N, N5v, X1N, Y1N, i2N);
        X1N.globalAlpha = 0.05;
        X1N.beginPath();
        X1N.moveTo(Z1N, o2N);
        X1N.lineTo(H2N, o2N);
        X1N.lineTo(H2N, O2N);
        X1N.lineTo(Z1N, O2N);
        X1N.fill();
        X1N.globalAlpha = +"1";
        c0bh.N3mK(2);
        var w8uu = c0bh.e3mK(0, 3, 4);
        n2N = h2N[0] + h2N[w8uu];
        h2N.unshift(n2N);
      } while (E2N);

      X1N.textAlign = "left";
      this.stx.plotLine(Z1N, K2N, j2N, B2N, U2N, "segment", X1N, Y1N, i2N);

      if (this.highlighted) {
        q2N = this.highlighted == "p0" ? !0 : !1;
        D2N = this.highlighted == "p1" ? !!1 : !{};
        this.littleCircle(X1N, Z1N, j2N, q2N);
        this.littleCircle(X1N, K2N, B2N, D2N);
      } else {
        G2N = this.stx.valueFromPixel(Y1N.height / 2, Y1N);
        this.setPoint(0, this.p0[0], G2N, Y1N.chart);
        this.setPoint(1, this.p1["0" * 1], G2N, Y1N.chart);
      }
    };

    x1l.Drawing.fibtimezone.prototype.intersected = function (x2N, V2N, S2N) {
      var k2N, v2N, a2N, N2N, m2N;
      k2N = this.p0;
      v2N = this.p1;
      a2N = this.stx.panels[this.panelName];

      if (!k2N || !v2N || !a2N) {
        return null;
      }

      N2N = {
        0: k2N,
        1: v2N
      };

      for (var t2N in N2N) {
        if (this.pointIntersection(N2N[t2N][0], N2N[t2N][1], S2N)) {
          T5VV.N3mK(0);
          this.highlighted = T5VV.e3mK(t2N, (2528, "4940" - 0) > (8430, +"675") ? "p" : (5.14e+3, !![]));
          return {
            action: "drag",
            point: (5177 < (207.97, 6458) ? "p" : (0x356, 8.12e+3)) + t2N
          };
        }
      }

      m2N = this.lineIntersection(x2N, V2N, S2N, "segment");

      if (m2N || S2N.x0 <= this.p0[0] && S2N.x1 >= k2N[+"0"]) {
        this.highlighted = !![];
        return {
          action: "move",
          p0: x1l.clone(k2N),
          p1: x1l.clone(v2N),
          tick: x2N,
          value: V2N
        };
      }

      return null;
    };

    x1l.Drawing.arrow_v0 = function () {
      var z0bh = T5VV;
      var A9v, W9v, g9v;
      this.name = "arrow";
      this.dimension = [11, 11];
      A9v = +"1747346774";
      W9v = -1075955818;
      g9v = 2;

      for (var J9v = 1; z0bh.s1v(J9v.toString(), J9v.toString().length, "31379" & 2147483647) !== A9v; J9v++) {
        z0bh.i3mK(1);
        this.points = [[ true ? ![] : undefined, +"7", +"9", ("4972" ^ 0) > 5178 ? "M" : !{}, +"5", 5, (2706, "1454" - 0) >= (7177, 652738) ? (0x22bd, "M") : "L", 9, 2, "j", 48, 8, 2282 < (432445, 950233) ? "L" : (0, 1195) > (505810, 534) ? "j" : (!1, 0xd554), 8, 89, "L", 1, 7, (1403, 9760) != 284397 ? ("60011" - 0, 0x2549) : (+"2698", +"664019") > +"961466" ?  true ? 651464 : undefined : ("L", "504030" << 1408662816), 9, z0bh.e3mK(0, "2"), 1321 == (669094, 1072) ? 0x358a : (554320, 5278) === (1180, 7053) ? "M" : 8599 > (667, +"5718") ? !!"" : (0x4eea, !{}), 5, 3]];
        g9v += 2;
      }

      if (z0bh.Y6v(g9v.toString(), g9v.toString().length, 30569) !== W9v) {
        z0bh.N3mK(22);
        this.points = [[ false ? undefined : "M", 3, 0, 2133 >= 2081 ? "L" : !0, 7, 0, (8642, 2950) <= (4659, 613.54) ? (0x15f9, "u") : "L", 7, 5, "L", +"10", +"5", 7.17 <= (603.87, 356.24) ? "L" : (3, 2480) >= (137.31, 566) ? "e" : (!![], +"0x20a7"), 5, +"10", "L", z0bh.E3mK("0", 0), 5, (7060, 6250) == "457.27" * 1 ? ("95.64" * 1, 0x1082) : ("4787" - 0, 857.65) >= "635.93" * 1 ?  false ? undefined : "L" : ("j", 150.45), 3, 5, 1644 === (648.12, 3010) ? 0x19ec : (991.39, 6130) !== (7790, 1390) ? "L" : 5290 >= (209, 9050) ? !![] : (0x136b, !![]), 3, 0]];
      }
    };

    x1l.inheritsFrom(x1l.Drawing.arrow_v0, x1l.Drawing.shape);

    x1l.Drawing.xcross = function () {
      var C0bh = T5VV;
      this.name = "xcross";
      this.dimension = [+"7", 7];
      C0bh.i3mK(4);
      this.points = [["M", 1, C0bh.E3mK("0", 2147483647), 6219 != (4340, +"4469") ? "L" : (8.53e+3, 0x1556), 3, 2, ("4360" | 4360) !== (1216, 6012) ? "L" : "n", 5, 0, "L", 6, 1, (313, 733) < 9495 ? "L" : (350.93, 0x1973), 4, C0bh.e3mK("3", 3, C0bh.i3mK(22)), 3750 > "7090" << 632442912 ? 5903 < ("492" ^ 0) ? !!"" : (4520, "368.74" - 0) !== (806, 7799) ? (9.54e+3, +"0x73f") : 2.50e+3 : "L", +"6", 5, (554, 7390) <= (382.53, 882.24) ? (8.97e+3, 317.47) : 8860 >= 250.96 ? ("988.25" - 0, 754.51) >= ("899.63" - 0, 3800) ? ("O", "j") : "L" : 6.92e+3, 5, +"6", "L", 3, 4, "L", 1, C0bh.e3mK(1, "6", C0bh.i3mK(5)), (2610, 4650) !== "6351" - 0 ? "L" : "p", 0, 5, "L", 2, 3, "L", 0, +"1", "L", C0bh.E3mK("1", 2147483647, C0bh.N3mK(4)), 0]];
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.xcross, x1l.Drawing.shape);

    x1l.Drawing.check = function () {
      var w0bh = T5VV;
      this.name = "check";
      this.dimension = [8, 9];
      w0bh.d7Kh();
      w0bh.N3mK(53);
      this.points = [[7130 >= 1890 ? ("9910" * 1, 6965) < 791.85 ? (!!{}, 80.88) : "M" : (!![], "133.54" - 0), 1, 5, (1310, "394.12" - 0) <= 451 ? "L" : 942.33 !== ("1282" | 1280, 369.07) ? (3549, 4980) !== ("878.31" - 0, 9370) ? "a" : ![] : (!{}, "o"), w0bh.e3mK("0", 640540736), w0bh.e3mK(1, "6", w0bh.i3mK(5)), "L", 2, 8, "L", w0bh.E3mK("7", 0, w0bh.N3mK(26)), 1, (+"706", 5890) != 1240 ? (+"83.18", +"927") === 1660 ? ("7.73e+3" & 2147483647, !!"1") : 9758 === (237.78, +"349.5") ? (0xba5, "d") : "L" : 317.24, 6, 0, (6677, "6510" >> 1806921984) != (4201, +"301.12") ? 3218 <= ("455.18" * 1, 1080) ? (3020, 6320) > (3626, "1868" ^ 0) ? 0x17e8 : (!!"", 0x1ba5) : "L" : (!![], "t"), w0bh.e3mK(0, "2", w0bh.N3mK(1)), 6, +"940.08" == (9830, 964) ? (185, !!"") : "L", 1, w0bh.e3mK("5", 2147483647, w0bh.N3mK(4))]];
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.check, x1l.Drawing.shape);

    x1l.Drawing.star = function () {
      var S0bh = T5VV;
      this.name = "star";
      S0bh.k7Kh();
      this.dimension = [+"12", 12];
      S0bh.N3mK(1);
      this.points = [[(54.63, 2868) === 9770 ? (!!{}, 9.04e+3) : 236.01 === (8347, "3091" & 2147483647) ? (+"8350", 6057) == +"121.89" ? +"897.30" : ("N", 0xa76) : "M", 0, +"4", "3458" * 1 !== (5226, 7670) ? (700.45, +"4480") == 180.15 ? 2.71e+3 : "L" : !![], S0bh.e3mK(0, "4"), S0bh.E3mK("4", 249449280, S0bh.i3mK(53)), 239.22 !== (7757, 2900) ? (19.49, 4540) >= 587 ? "L" : !"" : (7.53e+3, 3.45e+3), 5.5, 0, "L", 7, 4, (3152, +"499.85") != (847.51, 389.14) ?  false ? undefined : (+"892.91", 7126) != (5936, 238.48) ? "L" : (0x238f, "769.37" * 1) : 5.91e+3, 11, 4, "L", +"8", 7, 1850 !== (+"9340", 9790) ? "L" : "N", 9, 11, (3160, 8097) == ("1435" & 2147483647) ? 6.34e+3 : "L", 5.5, 9, (8850, "4789" ^ 0) < "3085" - 0 ? "478.85" - 0 >= 944.14 ? "x" : ("R", "0x16ac" >> 1075410400) : "L", 2, 11, "L", 3, 7, "L", 0, 4]];
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.star, x1l.Drawing.shape);

    x1l.Drawing.heart = function () {
      var y0bh = T5VV;
      var I5v;
      I5v = "he";
      I5v += "a";
      I5v += "r";
      I5v += "t";
      this.name = I5v;
      this.dimension = [23, 20];
      y0bh.i3mK(22);
      y0bh.k7Kh();
      this.points = [[(+"6.06", 661.38) != 5330 ? (7145, 8160) > (+"9080", 9712) ? ![] : "M" : (+"7.64e+3", "101.55" - 0), 11, 3, 1042 < (7370, 646.14) ? ("E", 867.72) : +"989" >= 9370 ? "176" << 837496224 > 3384 ? "948.91" - 0 : ("I", "D") : "B", 11, 2.4, 10, 0, 6, +"0", (375, "6690" * 1) != 4164 ? "B" : (134, 947) === (8446, 317.14) ? (0x268f, 0x433) : 671.15, 0, 0, 0, 7.5, 0, +"7.5", "B", y0bh.e3mK("0", 0), 11, 4, y0bh.e3mK(0, "15.4", y0bh.N3mK(1)), 11, 19, "B", 18, 15.4, +"22", 11, 22, 7.5, "B", 22, y0bh.E3mK(0, "7.5", y0bh.i3mK(1)), 22, 0, 16, +"0", "B", 13, 0, 11, 2.4, 11, 3]];
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.heart, x1l.Drawing.shape);

    x1l.Drawing.focusarrow = function () {
      var j0bh = T5VV;
      j0bh.d7Kh();
      this.name = "focusarrow";
      this.dimension = [7, 5];
      j0bh.i3mK(4);
      this.points = [[112.36 >= 784.36 ? ("g", !!1) : 1580 != (660.4, +"289") ? "M" : 6205 > 709.59 ? ("T", "D") : ("f", 8.37e+3), 0, j0bh.e3mK("0", 2147483647), "L", 2, 2, (2973, 489) <= (+"5009", 1930) ? "L" : (3480, "5041" - 0) < (9182, 5085) ? 8384 != (823, 5625) ? !!"1" : (0xa97, +"682.27") : (!1, !1), 0, 4, 2960 > 972.18 ? "L" : (2.33e+3, 4.69e+3), 0, 0], ["M", 6, 0, (7608, 637.01) <= 4070 ? (1036, 409.77) != ("597.25" * 1, 5100) ? "L" : 7.53e+3 : 4.75e+3, 4, 2, "L", j0bh.E3mK(1528242624, "6", j0bh.N3mK(15)), +"4", "L", 6, 0]];
      ;
    };

    x1l.inheritsFrom(x1l.Drawing.focusarrow, x1l.Drawing.shape);

    x1l.Drawing.crossline = function () {
      this.name = "crossline";
    };

    x1l.inheritsFrom(x1l.Drawing.crossline, x1l.Drawing.horizontal);
    x1l.extend(x1l.Drawing.crossline.prototype, {
      measure: function measure() {},
      accidentalClick: function accidentalClick(M2N, z2N) {
        T5VV.d7Kh();
        return ![];
      },
      adjust: function adjust() {
        var R2N;
        R2N = this.stx.panels[this.panelName];

        if (!R2N) {
          return;
        }

        T5VV.k7Kh();
        T5VV.i3mK(15);
        this.setPoint(T5VV.e3mK(130656192, "0"), this.d0, this.v0, R2N.chart);
        this.p1 = x1l.clone(this.p0);
      },
      intersected: function intersected(P2N, T2N, A2N) {
        var s2N, Z5v;

        if (!this.p0 || !this.p1) {
          return null;
        }

        this.p1[0] += 1;
        s2N = this.lineIntersection(P2N, T2N, A2N, "line");
        this.p1 = x1l.clone(this.p0);

        if (!s2N) {
          Z5v = "li";
          Z5v += "n";
          Z5v += "e";
          this.p1[1] += 1;
          s2N = this.lineIntersection(P2N, T2N, A2N, Z5v);
          this.p1 = x1l.clone(this.p0);

          if (!s2N) {
            return null;
          }
        }

        this.highlighted = !!"1";
        T5VV.d7Kh();

        if (this.pointIntersection(this.p0[0], this.p0[1], A2N)) {
          this.highlighted = "p0";
        }

        return {
          action: "move",
          p0: x1l.clone(this.p0),
          p1: x1l.clone(this.p1),
          tick: P2N,
          value: T2N
        };
      },
      render: function render(F2N) {
        var J0bh = T5VV;
        var F5v, i5v, y2N, L2N, f2N, u2N, Q2N, l2N, k7v, C7v, A7v, C2N, I2N, w2N, r2N, d2N, W2N;
        F5v = "verti";
        F5v += "cal";
        i5v = "ho";
        i5v += "riz";
        i5v += "ont";
        i5v += "al";
        y2N = this.stx.panels[this.panelName];

        if (!y2N) {
          return;
        }

        L2N = this.stx.pixelFromTick(this.p0["0" - 0], y2N.chart);
        f2N = this.stx.pixelFromValueAdjusted(y2N, this.p0[0], this.p0[1]);
        J0bh.k7Kh();
        u2N = this.getLineColor();
        Q2N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth
        };
        J0bh.N3mK(77);
        this.stx.plotLine(L2N, J0bh.e3mK(0, "100", L2N), f2N, f2N, u2N, i5v, F2N, y2N, Q2N);
        J0bh.i3mK(0);
        this.stx.plotLine(L2N, L2N, f2N, J0bh.e3mK(100, f2N), u2N, F5v, F2N, y2N, Q2N);

        if (this.axisLabel && !this.repositioner) {
          this.stx.endClip();
          l2N = this.p0[1];

          if (y2N.chart.transformFunc) {
            l2N = y2N.chart.transformFunc(this.stx, y2N.chart, l2N);
          }

          if (y2N.yAxis.priceFormatter) {
            l2N = y2N.yAxis.priceFormatter(this.stx, y2N, l2N);
          } else {
            l2N = this.stx.formatYAxisPrice(l2N, y2N);
          }

          this.stx.createYAxisLabel(y2N, l2N, f2N, u2N);
          k7v = -1886380891;
          C7v = -731769199;
          A7v = 2;

          for (var g7v = 1; J0bh.Y6v(g7v.toString(), g7v.toString().length, 44933) !== k7v; g7v++) {
            this.stx.startClip(y2N.name);
            A7v += 2;
          }

          if (J0bh.s1v(A7v.toString(), A7v.toString().length, 94899) !== C7v) {
            this.stx.startClip(y2N.name);
          }

          if (this.p0[+"0"] >= 0 && !this.stx.chart.xAxis.noDraw) {
            C2N = this.stx.dateFromTick(this.p0["0" << 719248640], y2N.chart, !!"1");

            if (!x1l.ChartEngine.isDailyInterval(this.stx.layout.interval)) {
              J0bh.i3mK(78);
              var t8uu = J0bh.e3mK(100, 25, 976, 6);
              w2N = C2N.getSeconds() * t8uu + C2N.getMilliseconds();

              if (V1l.Date && this.stx.displayZone) {
                I2N = new V1l.Date(C2N.getTime(), this.stx.displayZone);
                C2N = new Date(I2N.getFullYear(), I2N.getMonth(), I2N.getDate(), I2N.getHours(), I2N.getMinutes());
                C2N = new Date(C2N.getTime() + w2N);
              }
            } else {
              C2N.setHours(0, 0, 0, 0);
            }

            r2N = x1l.mmddhhmm(x1l.yyyymmddhhmm(C2N));

            if (y2N.chart.xAxis.formatter) {
              r2N = y2N.chart.xAxis.formatter(C2N, this.name, null, null, r2N);
            } else if (this.stx.internationalizer) {
              if (C2N.getHours() !== 0 || C2N.getMinutes() !== 0) {
                d2N = this.stx.internationalizer.monthDay.format(C2N);
                J0bh.i3mK(79);
                var L8uu = J0bh.e3mK(18, 12, 12, 15906, 7995);
                J0bh.N3mK(23);
                var x8uu = J0bh.e3mK(529, 4231, 19);
                J0bh.i3mK(80);
                var j8uu = J0bh.e3mK(14, 2, 73080, 5216, 10440);
                J0bh.N3mK(18);
                var o8uu = J0bh.E3mK(4, 11508, 57540, 9589);
                J0bh.N3mK(23);
                var e8uu = J0bh.E3mK(6431, 77159, 13);
                d2N += ((L8uu, 98.12) <= (114.15, 919.6) ? (x8uu, j8uu) === (o8uu, +"6616") ? (!!"1", !0) : e8uu != +"4606" ? " " : (182.34, +"0x2a8") : (+"0xfb7", "i")) + this.stx.internationalizer.hourMinute.format(C2N);
              } else {
                d2N = this.stx.internationalizer.yearMonthDay.format(C2N);
              }

              r2N = d2N;
            }

            this.stx.endClip();
            this.stx.createXAxisLabel({
              panel: y2N,
              txt: r2N,
              x: L2N,
              backgroundColor: u2N,
              color: null,
              pointed: !![],
              padding: 2
            });
            this.stx.startClip(y2N.name);
          }
        }

        if (this.highlighted) {
          W2N = this.highlighted == "p0" ? !!"1" : !"1";
          this.littleCircle(F2N, L2N, f2N, W2N);
        }
      }
    }, !0);

    x1l.Drawing.speedarc = function () {
      this.name = "speedarc";
      T5VV.d7Kh();
      this.printLevels = !![];
    };

    x1l.inheritsFrom(x1l.Drawing.speedarc, x1l.Drawing.segment);
    x1l.extend(x1l.Drawing.speedarc.prototype, {
      defaultOpacity: 0.25,
      configs: ["color", "fillColor", "lineWidth", "pattern"],
      copyConfig: function copyConfig() {
        var w9v, t9v, L9v;
        this.color = this.stx.currentVectorParameters.currentColor;
        this.fillColor = this.stx.currentVectorParameters.fillColor;
        this.lineWidth = this.stx.currentVectorParameters.lineWidth;
        w9v = -1464635093;
        t9v = -1756884491;
        L9v = 2;

        for (var j9v = 1; T5VV.s1v(j9v.toString(), j9v.toString().length, 13205) !== w9v; j9v++) {
          this.pattern = this.stx.currentVectorParameters.pattern;
          L9v += 2;
        }

        if (T5VV.s1v(L9v.toString(), L9v.toString().length, +"32119") !== t9v) {
          this.pattern = this.stx.currentVectorParameters.pattern;
        }

        this.pattern = this.stx.currentVectorParameters.pattern;
      },
      intersected: function intersected(b2N, e2N, K3N) {
        var n5v, Y2N, O3N, Z2N, H3N, J3N, c3N;
        n5v = "m";
        n5v += "o";
        n5v += "v";
        n5v += "e";

        if (!this.p0 || !this.p1) {
          return null;
        }

        Y2N = {
          0: this.p0,
          1: this.p1
        };

        for (var X2N in Y2N) {
          if (this.pointIntersection(Y2N[X2N]["0" - 0], Y2N[X2N][+"1"], K3N)) {
            T5VV.i3mK(0);
            this.highlighted = T5VV.E3mK(X2N, "p");
            return {
              action: "drag",
              point: ((473.3, 395.52) < 6460 ? "p" : ("R", 285.88)) + X2N
            };
          }
        }

        O3N = this.lineIntersection(b2N, e2N, K3N, this.name);

        if (O3N) {
          this.highlighted = !!{};
          return {
            action: "move",
            p0: x1l.clone(this.p0),
            p1: x1l.clone(this.p1),
            tick: b2N,
            value: e2N
          };
        }

        Z2N = this.p1[0] - (this.p0[0] - this.p1[0]);
        H3N = this.p0[0];
        J3N = this.p1[1];
        c3N = this.p0[1];

        if (b2N > Math.max(Z2N, H3N) || b2N < Math.min(Z2N, H3N)) {
          return null;
        }

        if (e2N > Math.max(c3N, J3N) || e2N < Math.min(c3N, J3N)) {
          return null;
        }

        this.highlighted = !!{};
        return {
          action: n5v,
          p0: x1l.clone(this.p0),
          p1: x1l.clone(this.p1),
          tick: b2N,
          value: e2N
        };
      },
      render: function render(n3N) {
        var B0bh = T5VV;
        var g3N, E3N, i3N, B3N, h3N, G3N, p3N, o3N, j3N, c5v, D3N, k3N, q3N, q5v, d5v, t3N, S3N, b5v, v3N, N3N;
        g3N = this.stx.panels[this.panelName];

        if (!g3N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        E3N = this.stx.pixelFromTick(this.p0[0], g3N.chart);
        i3N = this.stx.pixelFromTick(this.p1[0], g3N.chart);
        B3N = this.stx.pixelFromValueAdjusted(g3N, this.p0[0], this.p0["1" - 0]);
        h3N = this.stx.pixelFromValueAdjusted(g3N, this.p1[0], this.p1["1" - 0]);
        B0bh.i3mK(67);
        G3N = B0bh.e3mK(h3N, B3N);
        B0bh.N3mK(68);
        p3N = Math.abs(B0bh.e3mK(B3N, h3N, i3N, E3N));
        o3N = this.getLineColor();
        n3N.strokeStyle = o3N;
        j3N = this.fillColor;

        if (j3N == "auto" || x1l.isTransparent(j3N)) {
          j3N = this.stx.defaultColor;
        }

        n3N.fillStyle = j3N;

        if (n3N.setLineDash) {
          n3N.setLineDash(x1l.borderPatternToArray(this.lineWidth, this.pattern));
          n3N.lineDashOffset = +"0";
          ;
        }

        this.stx.canvasFont("stx_yaxis", n3N);

        for (var U3N = 1; U3N < 3; U3N++) {
          c5v = "n";
          c5v += "o";
          c5v += "n";
          c5v += "e";
          B0bh.N3mK(0);
          var M8uu = B0bh.E3mK(1, 0);
          B0bh.i3mK(16);
          var N8uu = B0bh.e3mK(8, 7);
          B0bh.i3mK(81);
          var I8uu = B0bh.E3mK(15, 11, 19, 17, 4);
          B0bh.i3mK(2);
          var Z8uu = B0bh.e3mK(7, 14, 10);
          D3N = Math.abs(this.p1[M8uu] - this.p0[N8uu]) * Math.sqrt(I8uu) * U3N / Z8uu;
          B0bh.N3mK(1);
          var i8uu = B0bh.e3mK(17, 18);
          B0bh.i3mK(1);
          var F8uu = B0bh.e3mK(1, 0);
          B0bh.i3mK(16);
          var n8uu = B0bh.e3mK(6, 5);
          k3N = this.p1[i8uu] + D3N * (G3N ? -+"1" : +"1") * (g3N.yAxis.flipped ? F8uu : n8uu);
          q3N = this.stx.pixelFromValueAdjusted(g3N, this.p0["0" & 2147483647], k3N);
          n3N.save();
          n3N.beginPath();
          B0bh.i3mK(10);
          n3N.scale(B0bh.e3mK(1, p3N), 1);
          B0bh.i3mK(5);
          n3N.arc(B0bh.e3mK(p3N, i3N), h3N, Math.abs(q3N - h3N), 0, Math.PI, !G3N);
          n3N.globalAlpha = this.highlighted ? +"1" : this.defaultOpacity;

          if (this.pattern != c5v) {
            n3N.stroke();
          }

          n3N.globalAlpha = 0.1;
          n3N.fill();
          n3N.restore();
          n3N.globalAlpha = 1;

          if (this.printLevels) {
            q5v = "/";
            q5v += "3";
            d5v = "cen";
            d5v += "ter";
            n3N.fillStyle = o3N;
            n3N.textAlign = d5v;
            B0bh.N3mK(0);
            t3N = B0bh.E3mK(q5v, U3N);
            n3N.fillText(t3N, i3N, Math.round(q3N - 5));
            n3N.fillStyle = j3N;
          }
        }

        n3N.textAlign = "left";
        S3N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth,
          opacity: this.highlighted ? 1 : this.defaultOpacity
        };
        this.stx.plotLine(E3N, i3N, B3N, h3N, o3N, "segment", n3N, g3N, S3N);

        if (n3N.setLineDash) {
          n3N.setLineDash([]);
        }

        if (this.highlighted) {
          b5v = "p";
          b5v += "1";
          v3N = this.highlighted == "p0" ? !![] : !{};
          N3N = this.highlighted == b5v ? !!1 : !!0;
          this.littleCircle(n3N, E3N, B3N, v3N);
          this.littleCircle(n3N, i3N, h3N, N3N);
        }
      },
      reconstruct: function reconstruct(V3N, x3N) {
        this.stx = V3N;
        this.color = x3N.col;
        this.fillColor = x3N.fc;
        this.panelName = x3N.pnl;
        this.pattern = x3N.ptrn;
        this.lineWidth = x3N.lw;
        this.d0 = x3N.d0;
        this.d1 = x3N.d1;
        this.tzo0 = x3N.tzo0;
        this.tzo1 = x3N.tzo1;
        this.v0 = x3N.v0;
        this.v1 = x3N.v1;
        this.adjust();
      },
      serialize: function serialize() {
        return {
          name: this.name,
          pnl: this.panelName,
          col: this.color,
          fc: this.fillColor,
          ptrn: this.pattern,
          lw: this.lineWidth,
          d0: this.d0,
          d1: this.d1,
          tzo0: this.tzo0,
          tzo1: this.tzo1,
          v0: this.v0,
          v1: this.v1
        };
      }
    }, !!{});

    x1l.Drawing.speedline = function () {
      this.name = "speedline";
      T5VV.k7Kh();
      this.printLevels = !0;
    };

    x1l.inheritsFrom(x1l.Drawing.speedline, x1l.Drawing.speedarc);
    x1l.extend(x1l.Drawing.speedline.prototype, {
      intersected: function intersected(P3N, T3N, A3N) {
        var M3N, z3N, R3N, s3N, h5v;
        M3N = this.p0;
        z3N = this.p1;

        if (!M3N || !z3N) {
          return null;
        }

        R3N = {
          0: M3N,
          1: z3N
        };

        for (var a3N in R3N) {
          if (this.pointIntersection(R3N[a3N][0], R3N[a3N][+"1"], A3N)) {
            T5VV.i3mK(0);
            this.highlighted = T5VV.E3mK(a3N, 683 !== (1560, 413) ? (1460, 2970) > 39.54 ? "p" : 89.23 === (577.12, 208) ? !{} : 0x471 : ("K", !!{}));
            return {
              action: "drag",
              point: "p" + a3N
            };
          }
        }

        s3N = this.rays;
        T5VV.d7Kh();

        for (var m3N = 0; m3N < s3N.length; m3N++) {
          if (this.lineIntersection(P3N, T3N, A3N, "ray", s3N[m3N]["0" & 2147483647], s3N[m3N][1], !0)) {
            h5v = "m";
            h5v += "o";
            h5v += "v";
            h5v += "e";
            this.highlighted = !![];
            return {
              action: h5v,
              p0: x1l.clone(M3N),
              p1: x1l.clone(z3N),
              tick: P3N,
              value: T3N
            };
          }
        }

        return null;
      },
      render: function render(y3N) {
        var p1bh = T5VV;
        var E5v, z5v, I3N, C3N, L3N, l3N, u3N, J4N, F3N, w3N, c4N, K4N, O4N, Z3N, H4N, f3N, r3N, Q3N, e3N, d3N, b3N, X3N, Y3N, B5v, G5v, m5v, n4N, g4N, S0v, w0v, t0v;
        E5v = "a";
        E5v += "ut";
        E5v += "o";
        z5v = "s";
        z5v += "t";
        z5v += "x_ya";
        z5v += "xis";
        I3N = this.stx.panels[this.panelName];

        if (!I3N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        C3N = this.stx.pixelFromTick(this.p0[0], I3N.chart);
        L3N = this.stx.pixelFromTick(this.p1["0" ^ 0], I3N.chart);
        l3N = this.stx.pixelFromValueAdjusted(I3N, this.p0[0], this.p0[1]);
        u3N = this.stx.pixelFromValueAdjusted(I3N, this.p1[0], this.p1[1]);
        this.stx.canvasFont(z5v, y3N);
        J4N = this.getLineColor();
        F3N = this.color;

        if (F3N == "auto" || x1l.isTransparent(F3N)) {
          F3N = this.stx.defaultColor;
        }

        y3N.strokeStyle = F3N;
        w3N = this.fillColor;

        if (w3N == E5v || x1l.isTransparent(w3N)) {
          w3N = this.stx.defaultColor;
        }

        y3N.fillStyle = w3N;
        c4N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth,
          opacity: this.highlighted ? 1 : this.defaultOpacity
        };
        Z3N = [(4434, 193.41) !== (4249, 334.78) ? "1" : (340.18, !"1"), "2/3", "1/3", "3/2", "3"];
        p1bh.i3mK(82);
        H4N = [1, p1bh.e3mK("2", 3), p1bh.E3mK("3", 1, p1bh.i3mK(83)), p1bh.E3mK(0, "2", 3, p1bh.N3mK(84)), 3];
        f3N = [];
        this.rays = [];

        for (var W3N = +"0"; W3N < H4N.length; W3N++) {
          r3N = H4N[W3N];
          if (r3N > 1 && !this.extension) continue;
          Q3N = this.stx.pixelFromValueAdjusted(I3N, this.p0["0" << 1752325568], this.p0[+"1"] - (this.p0[1] - this.p1[1]) * r3N);

          if (r3N > +"1") {
            e3N = x1l.xIntersection({
              x0: C3N,
              x1: L3N,
              y0: l3N,
              y1: Q3N
            }, u3N);
            f3N.push(e3N);
          } else {
            e3N = x1l.xIntersection({
              x0: L3N,
              x1: L3N,
              y0: l3N,
              y1: u3N
            }, Q3N);
            f3N.push(Q3N);
          }

          d3N = r3N > 1 ? e3N : L3N;
          b3N = r3N > 1 ? u3N : Q3N;

          if (!this.confineToGrid) {
            d3N = I3N.left;

            if (L3N > C3N) {
              d3N += I3N.width;
            }

            p1bh.N3mK(72);
            b3N = p1bh.e3mK(C3N, l3N, L3N, Q3N, C3N, l3N, d3N);
          }

          if (this.printLevels) {
            if (r3N != 1 || this.extension) {
              y3N.fillStyle = F3N;
              X3N = 0;
              Y3N = 0;

              if (l3N > u3N) {
                p1bh.N3mK(22);
                Y3N = -p1bh.E3mK("5", 0);
                y3N.textBaseline = "bottom";
              } else {
                B5v = "t";
                B5v += "op";
                Y3N = 5;
                y3N.textBaseline = B5v;
              }

              if (C3N > L3N) {
                G5v = "r";
                G5v += "ig";
                G5v += "ht";
                X3N = 5;
                y3N.textAlign = G5v;
              } else {
                m5v = "l";
                m5v += "e";
                m5v += "ft";
                X3N = -5;
                y3N.textAlign = m5v;
              }

              if (r3N > +"1") {
                y3N.fillText(Z3N[W3N], e3N + (this.confineToGrid ? 0 : X3N), u3N);
              } else {
                y3N.fillText(Z3N[W3N], L3N, Q3N + (this.confineToGrid ? 0 : Y3N));
              }

              y3N.fillStyle = w3N;
            }
          }

          this.stx.plotLine(C3N, d3N, l3N, b3N, this.highlighted ? J4N : F3N, "segment", y3N, I3N, c4N);

          if (r3N == 1) {
            K4N = d3N;
            O4N = b3N;
          }

          this.rays.push([[C3N, l3N], [d3N, b3N]]);
          y3N.globalAlpha = 0.1;
          y3N.beginPath();
          y3N.moveTo(d3N, b3N);
          y3N.lineTo(C3N, l3N);
          y3N.lineTo(K4N, O4N);
          y3N.fill();
          y3N.globalAlpha = 1;
        }

        y3N.textAlign = "left";
        y3N.textBaseline = "middle";

        if (this.confineToGrid) {
          y3N.globalAlpha = +"0.3";
          y3N.beginPath();
          p1bh.i3mK(1);
          y3N.strokeRect(C3N, l3N, p1bh.e3mK(C3N, L3N), p1bh.E3mK(l3N, u3N));
          y3N.moveTo(C3N, f3N[1]);
          y3N.lineTo(L3N, f3N["1" * 1]);
          y3N.moveTo(C3N, f3N[2]);
          y3N.lineTo(L3N, f3N[2]);

          if (this.extension) {
            y3N.moveTo(f3N[3], l3N);
            y3N.lineTo(f3N["3" >> 809364448], u3N);
            y3N.moveTo(f3N["4" * 1], l3N);
            y3N.lineTo(f3N[4], u3N);
          }

          y3N.stroke();
          y3N.globalAlpha = 1;
        }

        if (this.highlighted) {
          n4N = this.highlighted == "p0" ? !![] : ![];
          g4N = this.highlighted == "p1" ? !!"1" : !1;
          S0v = 1538497037;
          w0v = 731253460;
          t0v = 2;

          for (var x0v = 1; p1bh.Y6v(x0v.toString(), x0v.toString().length, 48399) !== S0v; x0v++) {
            this.littleCircle(y3N, C3N, l3N, n4N);
            this.littleCircle(y3N, L3N, u3N, g4N);
            t0v += 2;
          }

          if (p1bh.s1v(t0v.toString(), t0v.toString().length, 16147) !== w0v) {
            this.littleCircle(y3N, C3N, l3N, n4N);
            this.littleCircle(y3N, L3N, u3N, g4N);
          }
        }
      }
    }, !"");

    x1l.Drawing.gannfan = function () {
      this.name = "gannfan";
      T5VV.d7Kh();
      this.printLevels = !!{};
    };

    x1l.inheritsFrom(x1l.Drawing.gannfan, x1l.Drawing.speedline);
    x1l.extend(x1l.Drawing.gannfan.prototype, {
      render: function render(h4N) {
        var d1bh = T5VV;
        var k5v, P5v, B4N, i4N, U4N, j4N, q4N, x4N, E4N, p4N, V4N, a4N, m4N, v4N, z0v, E0v, B0v, o4N, M4N, N4N, G4N, D4N, t4N, S4N, f5v, D5v, y5v, C5v, z4N, R4N;
        k5v = "midd";
        k5v += "l";
        k5v += "e";
        P5v = "st";
        P5v += "x";
        P5v += "_";
        P5v += "yaxis";
        B4N = this.stx.panels[this.panelName];

        if (!B4N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        i4N = this.stx.pixelFromTick(this.p0[0], B4N.chart);
        U4N = this.stx.pixelFromTick(this.p1[0], B4N.chart);
        j4N = this.stx.pixelFromValueAdjusted(B4N, this.p0[0], this.p0[+"1"]);
        q4N = this.stx.pixelFromValueAdjusted(B4N, this.p1[0], this.p1[1]);
        this.stx.canvasFont(P5v, h4N);
        x4N = this.getLineColor();
        E4N = this.color;

        if (E4N == "auto" || x1l.isTransparent(E4N)) {
          E4N = this.stx.defaultColor;
        }

        h4N.strokeStyle = E4N;
        p4N = this.fillColor;

        if (p4N == "auto" || x1l.isTransparent(p4N)) {
          p4N = this.stx.defaultColor;
        }

        h4N.fillStyle = p4N;
        V4N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth,
          opacity: this.highlighted ? 1 : this.defaultOpacity
        };
        d1bh.i3mK(15);
        v4N = [1, d1bh.E3mK(855491104, "2"), 3, +"4", 8, d1bh.e3mK(1, 2, d1bh.N3mK(10)), d1bh.E3mK(1, 3, d1bh.i3mK(10)), d1bh.e3mK(1, 4, d1bh.N3mK(10)), d1bh.E3mK(1, 8, d1bh.i3mK(10))];
        z0v = -427332727;
        d1bh.N3mK(15);
        E0v = d1bh.E3mK(57454752, "71906681");
        d1bh.N3mK(22);
        B0v = d1bh.E3mK("2", 2);

        for (var m0v = 1; d1bh.s1v(m0v.toString(), m0v.toString().length, 79177) !== z0v; m0v++) {
          this.rays = [];
          B0v += 2;
        }

        if (d1bh.s1v(B0v.toString(), B0v.toString().length, 28942) !== E0v) {
          this.rays = [];
        }

        for (var k4N = 0; k4N < v4N.length; k4N++) {
          o4N = v4N[k4N];
          d1bh.i3mK(85);
          M4N = d1bh.E3mK(U4N, i4N, i4N, o4N);
          d1bh.i3mK(86);
          N4N = d1bh.E3mK(o4N, j4N, q4N, j4N);
          G4N = B4N.left;

          if (U4N > i4N) {
            G4N += B4N.width;
          }

          d1bh.N3mK(72);
          D4N = d1bh.e3mK(i4N, j4N, U4N, N4N, i4N, j4N, G4N);

          if (this.printLevels) {
            h4N.fillStyle = E4N;
            t4N = 0;
            S4N = 0;

            if (j4N > q4N) {
              S4N = 5;
              h4N.textBaseline = "top";
            } else {
              S4N = -5;
              h4N.textBaseline = "bottom";
            }

            if (i4N > U4N) {
              d1bh.i3mK(4);
              t4N = d1bh.E3mK("5", 2147483647);
              h4N.textAlign = "left";
            } else {
              f5v = "rig";
              f5v += "ht";
              t4N = -5;
              h4N.textAlign = f5v;
            }

            if (o4N > 1) {
              D5v = "x";
              D5v += "1";
              d1bh.i3mK(0);
              h4N.fillText(d1bh.e3mK(D5v, o4N), d1bh.E3mK(t4N, M4N), q4N);
            } else {
              y5v = "1";
              y5v += "x";
              d1bh.N3mK(49);
              h4N.fillText(d1bh.e3mK(1, o4N, y5v), U4N, d1bh.E3mK(S4N, N4N, d1bh.i3mK(0)));
            }

            h4N.fillStyle = p4N;
          }

          this.stx.plotLine(i4N, G4N, j4N, D4N, this.highlighted ? x4N : E4N, "segment", h4N, B4N, V4N);
          this.rays.push([[i4N, j4N], [G4N, D4N]]);

          if (o4N == 1) {
            a4N = G4N;
            m4N = D4N;
          }

          h4N.globalAlpha = 0.1;
          h4N.beginPath();
          h4N.moveTo(G4N, D4N);
          h4N.lineTo(i4N, j4N);
          h4N.lineTo(a4N, m4N);
          h4N.fill();
          h4N.globalAlpha = 1;
        }

        h4N.textAlign = "left";
        h4N.textBaseline = k5v;

        if (this.highlighted) {
          C5v = "p";
          C5v += "1";
          z4N = this.highlighted == "p0" ? !![] : !{};
          R4N = this.highlighted == C5v ? !!{} : !!"";
          this.littleCircle(h4N, i4N, j4N, z4N);
          this.littleCircle(h4N, U4N, q4N, R4N);
        }
      }
    }, !0);

    x1l.Drawing.timecycle = function () {
      this.name = "timecycle";
      T5VV.k7Kh();
      this.printLevels = !!1;
    };

    x1l.inheritsFrom(x1l.Drawing.timecycle, x1l.Drawing.speedarc);
    x1l.extend(x1l.Drawing.timecycle.prototype, {
      intersected: function intersected(C4N, l4N, T4N) {
        var W5v, s4N, A4N, L4N, y4N, A5v, f4N;
        W5v = "se";
        W5v += "gm";
        W5v += "en";
        W5v += "t";
        s4N = this.p0;
        A4N = this.p1;
        L4N = this.stx.panels[this.panelName];

        if (!s4N || !A4N || !L4N) {
          return null;
        }

        y4N = {
          0: s4N,
          1: A4N
        };

        for (var P4N in y4N) {
          if (this.pointIntersection(y4N[P4N][0], y4N[P4N][1], T4N)) {
            A5v = "d";
            A5v += "r";
            A5v += "a";
            A5v += "g";
            T5VV.i3mK(0);
            this.highlighted = T5VV.e3mK(P4N, "p");
            return {
              action: A5v,
              point: "p" + P4N
            };
          }
        }

        f4N = this.lineIntersection(C4N, l4N, T4N, W5v);

        if (f4N || T4N.x0 <= this.p0[0] && T4N.x1 >= s4N[0]) {
          this.highlighted = !0;
          return {
            action: "move",
            p0: x1l.clone(s4N),
            p1: x1l.clone(A4N),
            tick: C4N,
            value: l4N
          };
        }

        return null;
      },
      render: function render(I4N) {
        var g5v, u4N, d4N, b4N, Z4N, H7N, X4N, J7N, g7N, c7N, r4N, K7N, w4N, W4N, e4N, O7N, F4N, Y4N, h7N, i7N, j7N, n7N;
        g5v = "a";
        g5v += "uto";
        u4N = this.stx.panels[this.panelName];

        if (!u4N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        d4N = this.stx.pixelFromTick(this.p0[0], u4N.chart);
        b4N = this.stx.pixelFromTick(this.p1[0], u4N.chart);
        Z4N = this.stx.pixelFromValueAdjusted(u4N, this.p0[0], this.p0[1]);
        H7N = this.stx.pixelFromValueAdjusted(u4N, this.p1[0], this.p1[1]);
        X4N = 0;
        J7N = this.getLineColor();
        I4N.textBaseline = "middle";
        this.stx.canvasFont("stx_yaxis", I4N);
        g7N = 20;
        c7N = this.p1[0] - this.p0[0];
        I4N.textAlign = "center";
        r4N = d4N;
        K7N = u4N.yAxis.top;
        w4N = u4N.yAxis.bottom;
        W4N = this.color;

        if (W4N == "auto" || x1l.isTransparent(W4N)) {
          W4N = this.stx.defaultColor;
        }

        e4N = this.fillColor;

        if (e4N == g5v || x1l.isTransparent(e4N)) {
          e4N = this.stx.defaultColor;
        }

        if (this.printLevels) {
          T5VV.i3mK(1);
          w4N -= T5VV.e3mK(7, g7N);
        }

        O7N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth,
          opacity: this.highlighted ? 1 : this.defaultOpacity
        };
        F4N = [];
        I4N.save();
        I4N.fillStyle = e4N;
        I4N.globalAlpha = 0.05;

        do {
          r4N = this.stx.pixelFromTick(this.p0[+"0"] + X4N * c7N, u4N.chart);
          X4N++;
          if (d4N < b4N && r4N > u4N.left + u4N.width) break;else if (d4N > b4N && r4N < u4N.left) break;else if (r4N < u4N.left || r4N > u4N.left + u4N.width) continue;
          I4N.beginPath();
          I4N.moveTo(d4N, K7N);
          I4N.lineTo(r4N, K7N);
          I4N.lineTo(r4N, w4N);
          I4N.lineTo(d4N, w4N);
          I4N.fill();
          F4N.push({
            c: X4N,
            x: r4N
          });
        } while (c7N);

        I4N.globalAlpha = +"1";
        Y4N = 0;

        for (var Q4N = 0; Q4N < F4N.length; Q4N++) {
          this.stx.plotLine(F4N[Q4N].x, F4N[Q4N].x, 0, w4N, this.highlighted ? J7N : W4N, "segment", I4N, u4N, O7N);

          if (this.printLevels) {
            I4N.fillStyle = W4N;
            T5VV.N3mK(2);
            var c8uu = T5VV.e3mK(20, 20, 3);
            h7N = this.stx.chart.context.measureText(F4N[Q4N].c).width + c8uu;

            if (h7N < this.stx.layout.candleWidth + Y4N) {
              I4N.fillText(F4N[Q4N].c, F4N[Q4N].x, w4N + 7);
              Y4N = 0;
            } else {
              Y4N += this.stx.layout.candleWidth;
            }
          }
        }

        I4N.restore();
        I4N.textAlign = "left";
        this.stx.plotLine(d4N, b4N, Z4N, H7N, J7N, "segment", I4N, u4N, O7N);

        if (this.highlighted) {
          i7N = this.highlighted == "p0" ? !"" : !{};
          j7N = this.highlighted == "p1" ? !!1 : !!"";
          this.littleCircle(I4N, d4N, Z4N, i7N);
          this.littleCircle(I4N, b4N, H7N, j7N);
        } else {
          n7N = this.stx.valueFromPixel(u4N.height / +"2", u4N);
          this.setPoint(0, this.p0[0], n7N, u4N.chart);
          this.setPoint(1, this.p1[0], n7N, u4N.chart);
        }
      }
    }, !![]);

    x1l.Drawing.regression = function () {
      T5VV.d7Kh();
      this.name = "regression";
    };

    x1l.inheritsFrom(x1l.Drawing.regression, x1l.Drawing.segment);
    x1l.extend(x1l.Drawing.regression.prototype, {
      configs: ["color", "lineWidth", "pattern", T5v, J5v, "lineWidth1", Q5v, R5v, "color2", l5v, "pattern2", r5v, "color3", "lineWidth3", K5v],
      copyConfig: function copyConfig(U7N) {
        var B7N;
        x1l.Drawing.copyConfig(this, U7N);
        B7N = this.stx.currentVectorParameters;
        this.active1 = !!B7N.active1;
        T5VV.k7Kh();
        this.active2 = !!B7N.active2;
        this.active3 = !!B7N.active3;
        this.color1 = B7N.color1 || "auto";
        this.color2 = B7N.color2 || "auto";
        this.color3 = B7N.color3 || "auto";
        this.lineWidth1 = B7N.lineWidth1;
        this.lineWidth2 = B7N.lineWidth2;
        this.lineWidth3 = B7N.lineWidth3;
        this.pattern1 = B7N.pattern1;
        this.pattern2 = B7N.pattern2;
        this.pattern3 = B7N.pattern3;
      },
      $controls: ['cq-cvp-controller[cq-cvp-header="1"]', 'cq-cvp-controller[cq-cvp-header="2"]', 'cq-cvp-controller[cq-cvp-header="3"]'],
      click: function click(S7N, G7N, p7N) {
        var o7N, E7N, q7N, D7N;

        if (G7N < 0) {
          return;
        }

        this.copyConfig();
        o7N = this.stx.panels[this.panelName];

        if (!this.penDown) {
          T5VV.N3mK(4);
          this.setPoint(T5VV.E3mK("0", 2147483647), G7N, p7N, o7N.chart);
          this.penDown = !"";
          E7N = this.stx;
          this.field = E7N.highlightedDataSetField;

          if (!this.field && o7N != E7N.chart.panel) {
            for (var k7N in E7N.chart.seriesRenderers) {
              q7N = E7N.chart.seriesRenderers[k7N];

              if (q7N.params.panel == o7N.name) {
                this.field = q7N.seriesParams[0].field;
                break;
              }
            }

            for (var t7N in E7N.layout.studies) {
              D7N = E7N.layout.studies[t7N];

              if (D7N.panel == o7N.name) {
                this.field = Object.keys(D7N.outputMap)[0];
                break;
              }
            }
          }

          return !!"";
        }

        T5VV.d7Kh();

        if (this.accidentalClick(G7N, p7N)) {
          return this.dragToDraw;
        }

        this.setPoint(1, G7N, p7N, o7N.chart);
        this.penDown = ![];
        return !0;
        ;
      },
      getYValue: function getYValue(M7N) {
        var x7N, V7N, a7N, z7N, N7N, v7N, m7N, x7v, j7v, o7v;
        x7N = this.stx.chart.dataSet[M7N];
        T5VV.d7Kh();
        V7N = this.stx.chart.dataSet[M7N];

        if (!x7N) {
          return null;
        }

        a7N = this.stx.panels[this.panelName];
        z7N = this.stx.getYAxisByField(a7N, this.field) || a7N.yAxis;

        if (this.stx.charts[a7N.name] && a7N.chart.transformFunc && z7N == a7N.yAxis) {
          V7N = x7N.transform;
        }

        if (!V7N) {
          return null;
        }

        N7N = null;
        v7N = null;
        m7N = this.stx.defaultPlotField || "Close";

        if (this.field) {
          v7N = x1l.existsInObjectChain(V7N, this.field);

          if (!v7N) {
            return null;
          }

          N7N = v7N = v7N.obj[v7N.member];

          if (x7N != V7N) {
            x7v = 439392553;
            j7v = 1358520277;
            o7v = 2;

            for (var M7v = 1; T5VV.Y6v(M7v.toString(), M7v.toString().length, +"3934") !== x7v; M7v++) {
              N7N = x1l.existsInObjectChain(x7N, this.field);
              N7N = N7N.obj[N7N.member];
              o7v += 2;
            }

            if (T5VV.Y6v(o7v.toString(), o7v.toString().length, +"31510") !== j7v) {
              N7N = x1l.existsInObjectChain(x7N, this.field);
              N7N = N7N.obj[N7N.member];
            }
          }

          if (_typeof(v7N) == "object") {
            v7N = v7N[m7N];
            N7N = N7N[m7N];
          }
        } else {
          v7N = V7N[m7N];
          N7N = x7N[m7N];
        }

        return {
          transformed: v7N,
          untransformed: N7N
        };
      },
      render: function render(l7N) {
        var l1bh = T5VV;
        var s7N, T7N, A7N, W7N, L7N, b7N, f7N, r7N, J6N, c6N, K6N, O6N, d7N, e7N, R7N, y7N, n6N, g6N, F7N, Q7N, h6N, w7N, X7N, Y7N, I7N, u7N, Z7N, H6N, j6N, i6N, B6N, C7N, V5v, U6N, E6N;
        s7N = this.stx.panels[this.panelName];

        if (!s7N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        if (this.p0[0] < 0 || this.p1[0] < 0) {
          return;
        }

        T7N = this.stx.pixelFromTick(this.p0[+"0"], s7N.chart);
        A7N = this.stx.pixelFromTick(this.p1["0" << 2107289280], s7N.chart);

        if (T7N < s7N.left && A7N < s7N.left) {
          return;
        }

        if (T7N > s7N.right && A7N > s7N.right) {
          return;
        }

        W7N = this.stx.getYAxisByField(s7N, this.field);
        L7N = [];
        b7N = [];
        f7N = 0;
        r7N = +"0";
        J6N = 0;
        l1bh.i3mK(1);
        c6N = l1bh.e3mK(0, "0");
        K6N = Math.min(this.p1[0], this.p0[+"0"]);
        l1bh.N3mK(87);
        var d8uu = l1bh.e3mK(2, 9, 17, 1, 2);
        O6N = Math.max(this.p1[0], this.p0[0]) + d8uu;
        l1bh.i3mK(1);
        d7N = l1bh.e3mK(K6N, O6N);

        for (var P7N = K6N; P7N < O6N; P7N++) {
          e7N = this.getYValue(P7N);

          if (e7N) {
            L7N.push(e7N.transformed);
            b7N.push(e7N.untransformed);
          }
        }

        R7N = L7N.length;
        l1bh.i3mK(88);
        y7N = l1bh.e3mK(R7N, "1", 0, "2", R7N);
        n6N = Math.pow(y7N, 2);
        l1bh.i3mK(89);
        g6N = l1bh.E3mK(y7N, 2, 3, R7N, 1);

        for (P7N = 0; P7N < R7N; P7N++) {
          J6N += R7N * L7N[P7N] - f7N;
          f7N += L7N[P7N];
          c6N += R7N * b7N[P7N] - r7N;
          r7N += b7N[P7N];
        }

        l1bh.i3mK(90);
        F7N = l1bh.e3mK(n6N, y7N, R7N, g6N, J6N, R7N, f7N);
        l1bh.i3mK(91);
        Q7N = l1bh.E3mK(F7N, f7N, y7N, R7N);
        l1bh.N3mK(90);
        h6N = l1bh.e3mK(n6N, y7N, R7N, g6N, c6N, R7N, r7N);
        l1bh.N3mK(91);
        w7N = l1bh.E3mK(F7N, r7N, y7N, R7N);

        if (this.p0[0] < this.p1[0]) {
          X7N = Q7N;
          l1bh.i3mK(92);
          Y7N = l1bh.E3mK(d7N, Q7N, F7N);
          l1bh.i3mK(53);
          this.p0[l1bh.E3mK("1", 2007925824)] = w7N;
          l1bh.i3mK(92);
          this.p1[1] = l1bh.E3mK(d7N, w7N, h6N);
        } else {
          l1bh.i3mK(92);
          X7N = l1bh.e3mK(d7N, Q7N, F7N);
          Y7N = Q7N;
          l1bh.N3mK(92);
          this.p0[1] = l1bh.e3mK(d7N, w7N, h6N);
          this.p1[1] = w7N;
        }

        I7N = this.stx.pixelFromTransformedValue(X7N, s7N, W7N);
        u7N = this.stx.pixelFromTransformedValue(Y7N, s7N, W7N);
        Z7N = this.getLineColor();
        H6N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth
        };
        this.stx.plotLine(T7N, A7N, I7N, u7N, Z7N, "segment", l7N, s7N, H6N);
        l1bh.d7Kh();
        l1bh.N3mK(1);
        this.stx.plotLine(T7N, T7N, l1bh.E3mK(20, I7N), l1bh.e3mK(20, I7N, l1bh.i3mK(0)), Z7N, "segment", l7N, s7N, H6N);
        l1bh.i3mK(1);
        this.stx.plotLine(A7N, A7N, l1bh.e3mK(20, u7N), l1bh.e3mK(20, u7N, l1bh.i3mK(0)), Z7N, "segment", l7N, s7N, H6N);

        if (this.active1 || this.active2 || this.active3) {
          l1bh.i3mK(10);
          j6N = l1bh.E3mK(f7N, R7N);
          i6N = 0;

          for (P7N = 0; P7N < R7N; P7N++) {
            i6N += Math.pow(L7N[P7N] - j6N, 2);
          }

          l1bh.N3mK(10);
          B6N = Math.sqrt(l1bh.e3mK(i6N, R7N));
          C7N = {
            context: l7N,
            panel: s7N,
            points: {
              0: {
                x: T7N,
                v: X7N
              },
              1: {
                x: A7N,
                v: Y7N
              }
            },
            stddev: B6N,
            yAxis: W7N
          };
          this.lines = {};

          if (this.active1) {
            this.renderStddev( true ? (346.33, 9770) !== (5529, 1520) ? (9610, +"584") > (804.61, 2090) ? 0x1516 : "1" : 0x140e : undefined, +"5110" > 3940 ? (+"568", 9540) >= ("848.97" - 0, 5270) ? "p" : 6538 > (2551, 535.1) ? (0xbb, "E") : (6.45e+2, 0x483) : ![], C7N);
            this.renderStddev("1", 700.61 >= 4745 ? (0x402, "T") : "n", C7N);
          }

          if (this.active2) {
            this.renderStddev("2", 8430 > 7296 ? "p" : 866.67 === "4130" - 0 ? ("911.75" * 1, 0x217a) : 9106 === (474.5, 585.72) ? !!1 : (0x4b, !1), C7N);
            this.renderStddev((80.55, 9270) < ("4570" & 2147483647, 111) ? (+"7.17e+3", !{}) : (6368, 2204) === (342.42, 6820) ? (0x63b, 8.05e+2) : (+"734", 119.83) >= 4820 ? ![] : "2", +"8390" > +"53.07" ? 8960 !== (+"8790", 412.56) ? "n" : +"0x131f" : 213.70, C7N);
          }

          if (this.active3) {
            this.renderStddev(4353 === (2150, "491.52" - 0) ? 0x22f8 : 8527 === (+"718.19", 5310) ? (5404, 142.45) === 9683 ? 0x19bd : (0x2609, "Q") : "3", "p", C7N);
            this.renderStddev("3", "n", C7N);
          }
        }

        if (!this.highlighted) {
          this.pixelX = [T7N, A7N];
          this.pixelY = [I7N, u7N];
        } else {
          V5v = "p";
          V5v += "0";
          U6N = this.highlighted == V5v ? !"" : !!0;
          E6N = this.highlighted == "p1" ? !![] : !{};
          this.littleCircle(l7N, T7N, I7N, U6N);
          this.littleCircle(l7N, A7N, u7N, E6N);
        }
      },
      renderStddev: function renderStddev(t6N, R6N, S6N) {
        var m1bh = T5VV;
        var O5v, a6N, s6N, P6N, T6N, v6N, m6N, M6N, x6N, V6N, q6N, G6N, N6N, o6N, p6N, D6N, k6N, A6N, y6N, z6N, C6N;
        O5v = "s";
        O5v += "tdde";
        O5v += "v";
        m1bh.N3mK(93);
        a6N = m1bh.e3mK(R6N, O5v, t6N);
        m1bh.i3mK(0);
        s6N = m1bh.e3mK(t6N, "color");
        m1bh.i3mK(0);
        P6N = m1bh.E3mK(t6N, "pattern");
        m1bh.N3mK(0);
        T6N = m1bh.E3mK(t6N, "lineWidth");
        v6N = S6N.points;
        m6N = v6N["0" * 1].v;
        M6N = v6N[1].v;
        x6N = S6N.stddev;
        V6N = R6N === (8060 != (1420, 4810) ? 1154 < +"9410" ? "n" : 3416 == (4350, +"4449") ? (1.14e+3, !![]) : (!!"1", 0x930) : (+"7.25e+3", "a")) ? t6N * -1 : t6N * 1;
        q6N = this.stx;
        G6N = S6N.panel;
        N6N = S6N.yAxis;
        o6N = {
          name: a6N,
          color: this.getLineColor(this[s6N]),
          type: "segment",
          y0: q6N.pixelFromTransformedValue(m6N + x6N * V6N, G6N, N6N),
          y1: q6N.pixelFromTransformedValue(M6N + x6N * V6N, G6N, N6N),
          params: {
            pattern: this[P6N],
            lineWidth: this[T6N]
          }
        };

        if (this.lines) {
          this.lines[a6N] = o6N;
        }

        p6N = S6N.context;
        D6N = v6N[+"0"].x;
        k6N = v6N[1].x;
        q6N.plotLine(D6N, k6N, o6N.y0, o6N.y1, o6N.color, o6N.type, p6N, G6N, o6N.params);
        q6N.plotLine(D6N, D6N, o6N.y0 - +"10", o6N.y0 + 10, o6N.color, o6N.type, p6N, G6N, o6N.params);
        q6N.plotLine(k6N, k6N, o6N.y1 - +"10", o6N.y1 + 10, o6N.color, o6N.type, p6N, G6N, o6N.params);
        m1bh.i3mK(0);
        A6N = m1bh.e3mK("\u03C3", t6N);
        m1bh.i3mK(60);
        var q8uu = m1bh.e3mK(355, 20, 1, 18);
        y6N = Math.max(D6N, k6N) + q8uu;
        z6N = D6N < k6N ? o6N.y1 : o6N.y0;
        p6N.fillStyle = o6N.color;
        p6N.save();
        p6N.textBaseline = "middle";
        p6N.fillText(A6N, y6N, z6N);
        p6N.restore();

        if (S6N.formatPrice && this.axisLabel && !this.highlighted && !this.penDown) {
          if (D6N >= G6N.chart.left && D6N <= G6N.chart.right || k6N >= G6N.chart.left && k6N <= G6N.chart.right) {
            m1bh.N3mK(94);
            C6N = m1bh.e3mK(V6N, x6N, D6N < k6N ? M6N : m6N);
            q6N.endClip();
            q6N.createYAxisLabel(G6N, S6N.formatPrice(C6N, N6N), z6N, o6N.color, null, p6N, N6N);
            q6N.startClip(G6N.name);
          }
        }
      },
      intersected: function intersected(f6N, I6N, Q6N) {
        var b1bh = T5VV;
        var u6N, r6N, d6N, w6N, W6N, F6N, L6N, a5v;

        if (!this.pixelX || !this.pixelY) {
          return null;
        }

        u6N = this.repositionIntersection(f6N, I6N);

        if (u6N) {
          return u6N;
        }

        r6N = {
          0: this.pixelX,
          1: this.pixelY
        };

        for (var l6N = 0; l6N < 2; l6N++) {
          if (this.pointIntersection(r6N[0][l6N], r6N[1][l6N], Q6N, !![])) {
            b1bh.N3mK(0);
            this.highlighted = b1bh.E3mK(l6N, "p");
            return {
              action: "drag",
              point: (6374 > 146.08 ? (2250, 740) > 5990 ? "F" : ("867.97" * 1, 4196) < (6480, 8520) ? "p" : 0x36a : ("j", 7.34e+3)) + l6N
            };
          }
        }

        d6N = this;
        b1bh.i3mK(5);
        w6N = this.pixelX[b1bh.e3mK(1, "0")];
        b1bh.i3mK(4);
        W6N = this.pixelX[b1bh.e3mK("1", 2147483647)];

        F6N = function F6N(e6N) {
          var X6N, Y6N;
          X6N = [w6N, e6N.y0];
          Y6N = [W6N, e6N.y1];
          return d6N.lineIntersection(f6N, I6N, Q6N, d6N.name, X6N, Y6N, !0);
        };

        L6N = F6N({
          y0: this.pixelY[+"0"],
          y1: this.pixelY[1]
        });

        if (!L6N && this.lines) {
          for (var b6N in this.lines) {
            if (F6N(this.lines[b6N])) {
              L6N = !!{};
              break;
            }
          }
        }

        if (L6N) {
          a5v = "mov";
          a5v += "e";
          this.highlighted = !0;
          return {
            action: a5v,
            p0: x1l.clone(this.p0),
            p1: x1l.clone(this.p1),
            tick: f6N,
            value: I6N
          };
        }

        return null;
      },
      repositionIntersection: function repositionIntersection(Z6N, H5N) {
        var u5v;

        if (!this.p0 || !this.p1) {
          return !{};
        }

        if (this == this.stx.repositioningDrawing && this.highlighted) {
          if (this.highlighted === !!{}) {
            u5v = "m";
            u5v += "o";
            u5v += "v";
            u5v += "e";
            return {
              action: u5v,
              p0: x1l.clone(this.p0),
              p1: x1l.clone(this.p1),
              tick: Z6N,
              value: H5N
            };
          }

          return {
            action: "drag",
            point: this.highlighted
          };
        }

        return !!"";
      },
      lineIntersection: function lineIntersection(j5N, B5N, g5N, h5N, c5N, K5N, i5N) {
        var X5v, X0v, p0v, Y0v, n5N, J5N, O5N;

        if (!i5N) {
          X5v = " lineIntersection";
          X5v += " must accept p0 and p1 in pixels.  Please verify and";
          X5v += " set isPixe";
          X5v += "ls=true.";
          T5VV.N3mK(0);
          console.log(T5VV.e3mK(X5v, h5N));
          X0v = 570809602;
          p0v = -82222325;
          Y0v = 2;

          for (var H3v = 1; T5VV.Y6v(H3v.toString(), H3v.toString().length, 43475) !== X0v; H3v++) {
            return !![];
          }

          if (T5VV.s1v(Y0v.toString(), Y0v.toString().length, "17993" & 2147483647) !== p0v) {
            return !!0;
          }
        }

        if (!c5N) {
          c5N = this.p0;
        }

        if (!K5N) {
          K5N = this.p1;
        }

        if (!(c5N && K5N)) {
          return !{};
        }

        n5N = this.stx;
        J5N = x1l.convertBoxToPixels(n5N, this.panelName, g5N);

        if (J5N.x0 === undefined) {
          return ![];
        }

        O5N = {
          x0: c5N[0],
          x1: K5N[0],
          y0: c5N[1],
          y1: K5N[1]
        };
        return x1l.boxIntersects(J5N.x0, J5N.y0, J5N.x1, J5N.y1, O5N.x0, O5N.y0, O5N.x1, O5N.y1);
      },
      boxIntersection: function boxIntersection(E5N, o5N, U5N) {
        var p9v, Y9v, s7v;
        p9v = 1323894182;
        Y9v = -1675147780;
        s7v = 2;

        for (var v7v = 1; T5VV.Y6v(v7v.toString(), v7v.toString().length, 55291) !== p9v; v7v++) {
          if (U5N.cx0 > Math.max(this.pixelX[0], this.pixelX[+"1"]) || U5N.cx1 < Math.min(this.pixelX[0], this.pixelX[+"1"])) {
            return !{};
          }

          if (!this.stx.repositioningDrawing && (U5N.cy1 < this.pixelY[0] || U5N.cy0 > this.pixelY[1])) {
            return !!0;
          }

          return !"";
        }

        T5VV.d7Kh();

        if (T5VV.s1v(s7v.toString(), s7v.toString().length, 64599) !== Y9v) {
          if (U5N.cx0 <= Math.max(this.pixelX[2], this.pixelX[+"0"]) && U5N.cx1 <= Math.min(this.pixelX[6], this.pixelX[3])) {
            return !!{};
          }

          if (-this.stx.repositioningDrawing || U5N.cy1 <= this.pixelY[1] && U5N.cy0 >= this.pixelY[8]) {
            return !![];
          }

          return ![];
        }
      },
      reconstruct: function reconstruct(p5N, G5N) {
        this.stx = p5N;
        this.color = G5N.col;
        this.color1 = G5N.col1;
        this.color2 = G5N.col2;
        this.color3 = G5N.col3;
        this.active1 = G5N.dev1;
        this.active2 = G5N.dev2;
        this.active3 = G5N.dev3;
        T5VV.d7Kh();
        this.panelName = G5N.pnl;
        this.pattern = G5N.ptrn;
        this.pattern1 = G5N.ptrn1;
        this.pattern2 = G5N.ptrn2;
        this.pattern3 = G5N.ptrn3;
        this.lineWidth = G5N.lw;
        this.lineWidth1 = G5N.lw1;
        this.lineWidth2 = G5N.lw2;
        this.lineWidth3 = G5N.lw3;
        this.d0 = G5N.d0;
        this.d1 = G5N.d1;
        this.tzo0 = G5N.tzo0;
        this.tzo1 = G5N.tzo1;
        this.field = G5N.fld;
        this.adjust();
      },
      serialize: function serialize() {
        return {
          name: this.name,
          pnl: this.panelName,
          dev1: this.active1,
          dev2: this.active2,
          dev3: this.active3,
          col: this.color,
          col1: this.color1,
          col2: this.color2,
          col3: this.color3,
          ptrn: this.pattern,
          ptrn1: this.pattern1,
          ptrn2: this.pattern2,
          ptrn3: this.pattern3,
          lw: this.lineWidth,
          lw1: this.lineWidth1,
          lw2: this.lineWidth2,
          lw3: this.lineWidth3,
          d0: this.d0,
          d1: this.d1,
          tzo0: this.tzo0,
          tzo1: this.tzo1,
          fld: this.field
        };
      }
    }, !!"1");

    x1l.Drawing.trendline = function () {
      this.name = "trendline";
    };

    x1l.inheritsFrom(x1l.Drawing.trendline, x1l.Drawing.segment);
    x1l.Drawing.trendline.prototype.configs = ["color", "fillColor", "lineWidth", "pattern", p5v];

    x1l.Drawing.trendline.prototype.measure = function () {
      T5VV.d7Kh();
      ;
    };

    x1l.Drawing.trendline.prototype.reconstruct = function (q5N, D5N) {
      x1l.Drawing.segment.prototype.reconstruct.call(this, q5N, D5N);
      this.callout = new x1l.Drawing.callout();
      this.callout.reconstruct(q5N, D5N.callout);
    };

    x1l.Drawing.trendline.prototype.serialize = function () {
      var k5N;
      k5N = x1l.Drawing.segment.prototype.serialize.call(this);
      T5VV.k7Kh();
      k5N.callout = this.callout.serialize();
      return k5N;
    };

    x1l.Drawing.trendline.prototype.render = function (a5N) {
      var a1bh = T5VV;
      var Y5v, t5N, T5N, N5N, x5N, S5N, v5N, m5N, V5N, M5N, A5N, z5N, y5N, C5N, R5N, s5N, P5N, l5N, L5N, f5N, I5N;
      Y5v = "%";
      Y5v += ")";
      Y5v += " ";
      t5N = this.stx.panels[this.panelName];

      if (!t5N) {
        return;
      }

      x1l.Drawing.segment.prototype.render.call(this, a5N);

      if (!this.callout) {
        this.callout = new x1l.Drawing.callout();
        T5N = x1l.Drawing.segment.prototype.serialize.call(this);
        this.callout.reconstruct(this.stx, T5N);
      }

      this.callout.p0 = x1l.clone(this.p0);
      N5N = this.stx.pixelFromTick(this.p0["0" ^ 0], t5N.chart);
      x5N = this.stx.pixelFromTick(this.p1[0], t5N.chart);
      S5N = this.stx.pixelFromValueAdjusted(t5N, this.p0[0], this.p0[1]);
      v5N = this.stx.pixelFromValueAdjusted(t5N, this.p1[0], this.p1[1]);

      if (!isFinite(S5N) || !isFinite(v5N)) {
        return;
      }

      a1bh.N3mK(6);
      m5N = a1bh.e3mK(2, N5N, x5N);
      a1bh.i3mK(6);
      V5N = a1bh.E3mK(2, S5N, v5N);
      this.fontSize = x1l.stripPX(this.font && this.font.size || "13" >> 118032224);
      M5N = this.callout.w * 1.2 + (this.callout.stemEntry[0] == "c" ? 0 : +"50");
      A5N = Math.sqrt(Math.pow(x5N - N5N, 2) + Math.pow(v5N - S5N, 2));
      a1bh.i3mK(1);
      var b8uu = a1bh.e3mK(16, 17);
      a1bh.i3mK(7);
      var h8uu = a1bh.E3mK(12, 12, 23);
      a1bh.i3mK(60);
      var z8uu = a1bh.e3mK(1548, 17, 7, 13);
      z5N = M5N / (A5N || M5N) * (this.p1[+"1"] < this.p0[b8uu] ? h8uu : z8uu);
      a1bh.i3mK(95);
      y5N = a1bh.e3mK(m5N, v5N, z5N, V5N);
      a1bh.N3mK(42);
      C5N = a1bh.e3mK(z5N, x5N, V5N, m5N);
      this.callout.p0[0] = this.stx.tickFromPixel(y5N, t5N.chart);
      this.callout.p0[1] = this.stx.priceFromPixel(C5N, t5N);
      this.callout.v0 = this.callout.p0[1];
      this.callout.p1 = x1l.clone(this.p0);
      this.callout.stx = this.stx;
      this.callout.fillColor = this.fillColor || this.callout.fillColor;
      this.callout.borderColor = this.color;
      this.callout.font = this.font || this.callout.font;
      this.callout.noHandles = !!1;
      a1bh.i3mK(96);
      var E8uu = a1bh.e3mK(2, 7, 3, 7, 4);
      a1bh.N3mK(36);
      var B8uu = a1bh.E3mK(14, 0, 13, 1);
      R5N = this.p1[E8uu] - this.p0[B8uu];
      a1bh.i3mK(16);
      var G8uu = a1bh.e3mK(14, 13);
      a1bh.N3mK(1);
      var m8uu = a1bh.e3mK(11, 13);
      this.callout.text = "" + Number(R5N).toFixed("2" - 0) + (this.p0[G8uu] === 0 ? "" : " (" + Number(100 * R5N / this.p0["1" >> 1833718432]).toFixed(m8uu) + Y5v) + "" + Math.abs(this.p1[0] - this.p0[0]) + " Bars";
      s5N = Math.floor((this.p0[0] + this.p1[+"0"]) / 2);

      if (Math.abs(this.p0[0] - this.p1[0]) > 1 && Math.abs(this.p0["0" << 1668681568] - this.p1[0]) < 20) {
        l5N = this.stx.pixelFromTick(s5N, t5N.chart);
        a1bh.N3mK(97);
        L5N = a1bh.E3mK(S5N, S5N, N5N, x5N, N5N, l5N, v5N);
        P5N = this.stx.priceFromPixel(L5N, t5N) || V5N;
      } else {
        P5N = this.stx.priceFromPixel(V5N, t5N);
      }

      this.callout.stem = {
        t: s5N,
        v: P5N
      };
      this.callout.renderText();
      this.callout.render(a5N);

      if (this.highlighted) {
        f5N = this.highlighted == "p0" ? !!{} : !"1";
        I5N = this.highlighted == "p1" ? !!{} : ![];
        this.littleCircle(a5N, N5N, S5N, f5N);
        this.littleCircle(a5N, x5N, v5N, I5N);
      }
    };

    x1l.Drawing.trendline.prototype.lineIntersection = function (u5N, r5N, d5N, F5N) {
      return x1l.Drawing.BaseTwoPoint.prototype.lineIntersection.call(this, u5N, r5N, d5N, "segment");
    };

    x1l.Drawing.trendline.prototype.intersected = function (w5N, W5N, e5N) {
      var b5N, Q5N;

      if (!this.p0 || !this.p1) {
        return null;
      }

      b5N = this.callout.intersected(w5N, W5N, e5N);
      Q5N = x1l.Drawing.segment.prototype.intersected.call(this, w5N, W5N, e5N);
      this.callout.highlighted = !!(b5N || Q5N);

      if (Q5N) {
        return Q5N;
      } else if (b5N) {
        return {
          action: "move",
          p0: x1l.clone(this.p0),
          p1: x1l.clone(this.p1),
          tick: w5N,
          value: W5N
        };
      }

      return null;
    };

    x1l.Drawing.average = function () {
      this.name = "average";
    };

    x1l.inheritsFrom(x1l.Drawing.average, x1l.Drawing.regression);
    x1l.extend(x1l.Drawing.average.prototype, {
      configs: x1l.Drawing.regression.prototype.configs.concat("axisLabel"),
      measure: function measure() {
        var s4v, X5N, Z5N, J8N, c8N, H8N, Y5N;

        if (this.p0 && this.p1) {
          s4v = ".mSticky";
          s4v += "Interio";
          s4v += "r";
          T5VV.N3mK(22);
          this.stx.setMeasure(T5VV.e3mK("0", 0), ![], this.p0[0], this.p1[0], !![], this.name);
          X5N = [];
          Z5N = "";

          if (this.active1) {
            X5N.push( false ? undefined : "1");
          }

          if (this.active2) {
            X5N.push("2");
          }

          if (this.active3) {
            X5N.push("3");
          }

          if (X5N.length) {
            Z5N = "&ensp;" + X5N.join(", ") + " &sigma;";
          }

          J8N = (this.stx.drawingContainer || document).querySelector(".mMeasure");
          c8N = this.stx.controls.mSticky;
          H8N = c8N && c8N.querySelector(s4v);

          if (J8N) {
            J8N.innerHTML += Z5N;
          }

          if (H8N) {
            Y5N = [];
            Y5N.push(x1l.capitalize(this.name));
            Y5N.push(this.field || this.stx.defaultPlotField || "Close");
            Y5N.push(H8N.innerHTML + Z5N);
            H8N.innerHTML = Y5N.join("<br>");
          }
        }
      },
      render: function render(j8N) {
        var N1bh = T5VV;
        var H4v, K8N, n8N, g8N, o8N, h8N, k8N, t8N, m8N, S8N, q8N, i8N, U8N, G8N, E8N, O8N, p8N, D8N, v8N, x8N, B8N, V8N, a8N;
        H4v = "segm";
        H4v += "ent";
        K8N = this.stx.panels[this.panelName];

        if (!K8N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        if (this.p0["0" >> 1263097952] < +"0" || this.p1["0" | 0] < 0) {
          return;
        }

        n8N = this.stx.pixelFromTick(this.p0[0], K8N.chart);
        g8N = this.stx.pixelFromTick(this.p1[0], K8N.chart);

        if (n8N < K8N.left && g8N < K8N.left) {
          return;
        }

        if (n8N > K8N.right && g8N > K8N.right) {
          return;
        }

        o8N = this.stx.getYAxisByField(K8N, this.field);
        h8N = this.stx;
        k8N = Math.min(this.p1[0], this.p0["0" << 1286065568]);
        N1bh.i3mK(45);
        var P8uu = N1bh.e3mK(287, 13, 12, 11);
        t8N = Math.max(this.p1[+"0"], this.p0[0]) + P8uu;
        N1bh.i3mK(1);
        m8N = N1bh.E3mK(k8N, t8N);
        S8N = 0;
        q8N = [];

        function N8N(M8N, z8N) {
          N1bh.k7Kh();

          if (z8N && z8N.priceFormatter) {
            M8N = z8N.priceFormatter(h8N, K8N, M8N);
          } else {
            M8N = h8N.formatYAxisPrice(M8N, K8N, null, z8N);
          }

          return M8N;
        }

        for (i8N = k8N; i8N < t8N; i8N++) {
          U8N = this.getYValue(i8N);

          if (U8N !== null) {
            S8N += U8N.transformed;
            q8N.push(U8N);
          }
        }

        G8N = q8N.length;

        if (!G8N) {
          return;
        }

        N1bh.i3mK(10);
        E8N = N1bh.E3mK(S8N, G8N);
        O8N = h8N.pixelFromTransformedValue(E8N, K8N, o8N);
        p8N = this.getLineColor();
        D8N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth
        };
        h8N.plotLine(n8N, g8N, O8N, O8N, p8N, H4v, j8N, K8N, D8N);
        N1bh.i3mK(1);
        h8N.plotLine(n8N, n8N, N1bh.E3mK(20, O8N), N1bh.e3mK(O8N, "20", 1984037312, N1bh.N3mK(98)), p8N, "segment", j8N, K8N, D8N);
        N1bh.N3mK(1);
        h8N.plotLine(g8N, g8N, N1bh.e3mK(20, O8N), N1bh.E3mK("20", O8N, 0, N1bh.i3mK(99)), p8N, "segment", j8N, K8N, D8N);

        if (this.axisLabel && !this.highlighted && !this.penDown) {
          if (n8N >= K8N.chart.left && n8N <= K8N.chart.right || g8N >= K8N.chart.left && g8N <= K8N.chart.right) {
            h8N.endClip();
            h8N.createYAxisLabel(K8N, N8N(E8N, o8N), O8N, p8N, null, j8N, o8N);
            h8N.startClip(K8N.name);
          }
        }

        if (this.active1 || this.active2 || this.active3) {
          v8N = 0;

          for (i8N = 0; i8N < G8N; i8N++) {
            U8N = q8N[i8N];
            v8N += Math.pow(U8N.transformed - E8N, 2);
          }

          N1bh.N3mK(10);
          x8N = Math.sqrt(N1bh.E3mK(v8N, G8N));
          B8N = {
            context: j8N,
            formatPrice: N8N,
            panel: K8N,
            points: {
              0: {
                x: n8N,
                v: E8N
              },
              1: {
                x: g8N,
                v: E8N
              }
            },
            stddev: x8N,
            yAxis: o8N
          };
          this.lines = {};

          if (this.active1) {
            this.renderStddev(83.82 == +"3200" ? "F" : 7626 > 1770 ? "1" : (5060, 1518) >= (8260, +"4") ? !![] : (!!1, !"1"), 5943 <= 8467 ? 8721 <= ("9986" << 213325856, 3100) ? ("n", +"0xc20") : 231 == (3850, 2050) ? (0x7c0, 0x257c) : "p" : (![], 0x2409), B8N);
            this.renderStddev(7449 > "963.96" - 0 ? "1" : "s", (9690, 1049) === (9110, 168.78) ? (463.26, 4.59e+3) :  true ? "n" : undefined, B8N);
          }

          if (this.active2) {
            this.renderStddev("2", 6788 > 1445 ? (8570, 1302) <= (224.65, 5960) ? "p" : 321.76 < (+"2990", 1190) ? "k" : (707.83, 848) : (0x25c2, !!""), B8N);
            this.renderStddev((694, 379.67) == ("6505" ^ 0, 1538) ? (0x127c, !!"") :  false ? undefined : 2950 !== (294.6, 4025) ? "2" : 0x206d, "n", B8N);
          }

          if (this.active3) {
            this.renderStddev("3", ("6400" ^ 0, 1900) < (5221, 8) ? "0xe76" * 1 : "p", B8N);
            this.renderStddev((580.09, 8370) !== (483, 156.44) ? "3" : "480.96" * 1 < (969.26, 380) ? ("j", "5.48e+3" | 4392) : 0x1986, ("3420" - 0, 8536) === +"6670" ? 0x20a2 : "n", B8N);
          }
        }

        if (!this.highlighted) {
          this.pixelX = [n8N, g8N];
          this.pixelY = [O8N, O8N];
        } else {
          V8N = this.highlighted == "p0" ? !![] : !"1";
          a8N = this.highlighted == "p1" ? !"" : !{};
          this.littleCircle(j8N, n8N, O8N, V8N);
          this.littleCircle(j8N, g8N, O8N, a8N);
        }
      },
      reconstruct: function reconstruct(s8N, R8N) {
        T5VV.d7Kh();
        this.axisLabel = R8N.al;
        x1l.Drawing.regression.prototype.reconstruct.call(this, s8N, R8N);
      },
      serialize: function serialize() {
        var P8N;
        P8N = x1l.Drawing.regression.prototype.serialize.call(this);
        P8N.al = this.axisLabel;
        return P8N;
      }
    }, !!{});

    x1l.Drawing.quadrant = function () {
      this.name = "quadrant";
    };

    x1l.inheritsFrom(x1l.Drawing.quadrant, x1l.Drawing.regression);
    x1l.extend(x1l.Drawing.quadrant.prototype, {
      configs: [v4v, "fillColor", "lineWidth", U4v],
      copyConfig: function copyConfig() {
        this.color = this.stx.currentVectorParameters.currentColor;
        this.fillColor = this.stx.currentVectorParameters.fillColor;
        this.lineWidth = this.stx.currentVectorParameters.lineWidth;
        this.pattern = this.stx.currentVectorParameters.pattern;
      },
      $controls: [],
      render: function render(C8N) {
        var f1bh = T5VV;
        var w4v, S4v, A8N, T8N, y8N, l8N, r8N, L8N, f8N, Q8N, d8N, w8N, W8N, b8N, e8N, X8N, F8N, I8N, Y8N, u8N, t4v, H9N, J9N;
        w4v = "ti";
        w4v += "r";
        w4v += "one";
        S4v = "qu";
        S4v += "ad";
        S4v += "r";
        S4v += "ant";
        A8N = this.stx;
        T8N = A8N.panels[this.panelName];

        if (!T8N) {
          return;
        }

        if (!this.p1) {
          return;
        }

        y8N = A8N.pixelFromTick(this.p0[0], T8N.chart);
        l8N = A8N.pixelFromTick(this.p1[0], T8N.chart);

        if (y8N < T8N.left && l8N < T8N.left) {
          return;
        }

        if (y8N > T8N.right && l8N > T8N.right) {
          return;
        }

        r8N = this.stx.getYAxisByField(T8N, this.field);
        L8N = null;
        f8N = null;

        for (var Z8N = Math.min(this.p1[+"0"], this.p0[0]); Z8N <= Math.max(this.p1[0], this.p0[0]); Z8N++) {
          Q8N = this.getYValue(Z8N);

          if (Q8N !== null) {
            if (L8N === null || Q8N.transformed > L8N) {
              L8N = Q8N.transformed;
            }

            if (f8N === null || Q8N.transformed < f8N) {
              f8N = Q8N.transformed;
            }
          }
        }

        d8N = A8N.pixelFromTransformedValue(L8N, T8N, r8N);
        f1bh.i3mK(100);
        w8N = A8N.pixelFromTransformedValue(f1bh.e3mK("4", f8N, L8N, 3), T8N, r8N);
        f1bh.N3mK(101);
        W8N = A8N.pixelFromTransformedValue(f1bh.E3mK(L8N, 2, f8N, 3), T8N, r8N);
        f1bh.i3mK(102);
        b8N = A8N.pixelFromTransformedValue(f1bh.e3mK(f8N, "2", L8N), T8N, r8N);
        f1bh.N3mK(103);
        e8N = A8N.pixelFromTransformedValue(f1bh.e3mK(3, "2", L8N, f8N), T8N, r8N);
        f1bh.i3mK(104);
        X8N = A8N.pixelFromTransformedValue(f1bh.e3mK(L8N, 3, f8N, 4), T8N, r8N);
        F8N = A8N.pixelFromTransformedValue(f8N, T8N, r8N);
        this.p0[1] = 0;
        this.p1[1] = ![];
        I8N = this.getLineColor();
        Y8N = this.fillColor;

        if (Y8N == "auto" || x1l.isTransparent(Y8N)) {
          Y8N = A8N.defaultColor;
        }

        C8N.fillStyle = Y8N;
        u8N = {
          pattern: this.pattern,
          lineWidth: this.lineWidth
        };
        A8N.plotLine(y8N, l8N, d8N, d8N, I8N, "segment", C8N, T8N, u8N);
        A8N.plotLine(y8N, l8N, F8N, F8N, I8N, "segment", C8N, T8N, u8N);

        if (this.name == S4v) {
          A8N.plotLine(y8N, l8N, w8N, w8N, I8N, "segment", C8N, T8N, u8N);
          A8N.plotLine(y8N, l8N, X8N, X8N, I8N, "segment", C8N, T8N, u8N);
        } else if (this.name == "tirone") {
          A8N.plotLine(y8N, l8N, W8N, W8N, I8N, "segment", C8N, T8N, u8N);
          A8N.plotLine(y8N, l8N, e8N, e8N, I8N, "segment", C8N, T8N, u8N);
        }

        A8N.plotLine(y8N, y8N, d8N, F8N, I8N, "segment", C8N, T8N, u8N);
        A8N.plotLine(l8N, l8N, d8N, F8N, I8N, "segment", C8N, T8N, u8N);
        A8N.plotLine(y8N, l8N, b8N, b8N, I8N, "segment", C8N, T8N, x1l.extend(u8N, {
          opacity: this.name == w4v ? 0.2 : 1
        }));
        C8N.globalAlpha = 0.1;
        C8N.beginPath();
        f1bh.N3mK(1);
        C8N.fillRect(y8N, d8N, f1bh.E3mK(y8N, l8N), f1bh.e3mK(d8N, F8N));

        if (this.name == "quadrant") {
          f1bh.N3mK(1);
          C8N.fillRect(y8N, w8N, f1bh.e3mK(y8N, l8N), f1bh.E3mK(w8N, X8N));
        } else if (this.name == "tirone") {
          f1bh.i3mK(1);
          C8N.fillRect(y8N, W8N, f1bh.E3mK(y8N, l8N), f1bh.e3mK(W8N, e8N));
        }

        f1bh.i3mK(5);
        C8N.globalAlpha = f1bh.e3mK(1, "1");

        if (!this.highlighted) {
          t4v = "quadra";
          t4v += "nt";
          this.pixelX = [y8N, l8N];
          this.pixelY = [d8N, F8N, b8N];

          if (this.name === t4v) {
            this.pixelY.push(w8N, X8N);
          }

          if (this.name === "tirone") {
            this.pixelY.push(W8N, e8N);
          }
        } else {
          H9N = this.highlighted == "p0" ? !![] : !1;
          J9N = this.highlighted == "p1" ? !![] : !{};
          this.littleCircle(C8N, y8N, b8N, H9N);
          this.littleCircle(C8N, l8N, b8N, J9N);
        }
      },
      intersected: function intersected(g9N, h9N, j9N) {
        var _this = this;

        var i9N, L4v, n9N, B9N, x4v;
        var c9N = this.pixelX,
            K9N = this.pixelY;

        if (!c9N || !K9N) {
          return null;
        }

        i9N = this.repositionIntersection(g9N, h9N);
        T5VV.k7Kh();

        if (i9N) {
          return i9N;
        }

        for (var O9N = 0; O9N < +"2"; O9N++) {
          if (this.pointIntersection(c9N[O9N], K9N[2], j9N, !!{})) {
            L4v = "dr";
            L4v += "a";
            L4v += "g";
            T5VV.i3mK(0);
            this.highlighted = T5VV.E3mK(O9N, 670 >= (1160, 3459) ? !!"1" : "p");
            return {
              action: L4v,
              point: "p" + O9N
            };
          }
        }

        n9N = [];
        c9N.forEach(function (U9N) {
          n9N.push({
            p0: [U9N, K9N[0]],
            p1: [U9N, K9N[1]]
          });
        });
        K9N.forEach(function (E9N) {
          n9N.push({
            p0: [c9N[0], E9N],
            p1: [c9N[1], E9N]
          });
        });
        B9N = n9N.some(function (_ref) {
          var o9N = _ref.p0,
              G9N = _ref.p1;
          T5VV.k7Kh();
          return _this.lineIntersection(g9N, h9N, j9N, _this.name, o9N, G9N, !0);
        });

        if (B9N) {
          x4v = "mo";
          x4v += "ve";
          this.highlighted = !!"1";
          return {
            action: x4v,
            p0: x1l.clone(this.p0),
            p1: x1l.clone(this.p1),
            tick: g9N,
            value: h9N
          };
        }

        return null;
      },
      reconstruct: function reconstruct(q9N, p9N) {
        this.stx = q9N;
        this.color = p9N.col;
        this.fillColor = p9N.fc;
        this.panelName = p9N.pnl;
        this.pattern = p9N.ptrn;
        this.lineWidth = p9N.lw;
        this.d0 = p9N.d0;
        this.d1 = p9N.d1;
        this.tzo0 = p9N.tzo0;
        this.tzo1 = p9N.tzo1;
        T5VV.k7Kh();
        this.field = p9N.fld;
        this.adjust();
      },
      serialize: function serialize() {
        T5VV.k7Kh();
        return {
          name: this.name,
          pnl: this.panelName,
          col: this.color,
          fc: this.fillColor,
          ptrn: this.pattern,
          lw: this.lineWidth,
          d0: this.d0,
          d1: this.d1,
          tzo0: this.tzo0,
          tzo1: this.tzo1,
          fld: this.field
        };
      }
    }, !!1);

    x1l.Drawing.tirone = function () {
      var j4v;
      j4v = "ti";
      j4v += "r";
      j4v += "on";
      j4v += "e";
      this.name = j4v;
    };

    x1l.inheritsFrom(x1l.Drawing.tirone, x1l.Drawing.quadrant);

    x1l.Drawing.elliottwave = function () {
      this.name = "elliottwave";
      T5VV.d7Kh();
      this.lastPoint = 0;
      this.points = [];
      this.pts = [];
      this.dx = 0;
      this.dy = -20;
      this.dragToDraw = !1;
      this.annotationPoints = [];
      this.edit = null;
    };

    x1l.inheritsFrom(x1l.Drawing.elliottwave, x1l.Drawing.annotation);
    x1l.Drawing.elliottwave.defaultTemplate = {
      impulse: [+"1966" <= 959 ? (4.05e+3, "123" * 1) : "I", "II", "III", "IV", (289, +"417.66") >= 2600 ? (0x10d, 5.06e+3) : "V"],
      corrective: [(5437, 9040) == (7830, 1062) ? "X" :  false ? undefined : "A", +"111" !== "647" >> 1304579488 ? "B" : "T", 5926 < (6170, 355.86) ? 5209 !== (2360, +"902.12") ? (2.36e+3, "S") : 0xac2 : "C"],
      decoration: "enclosed",
      showLines: !!1
    };

    x1l.Drawing.elliottwave.prototype.initializeSettings = function (D9N) {
      T5VV.k7Kh();
      D9N.currentVectorParameters.waveParameters = x1l.clone(x1l.Drawing.elliottwave.defaultTemplate);
    };

    x1l.Drawing.elliottwave.prototype.configs = ["color", "lineWidth", "lineColor", "pattern", "font", "waveParameters"];
    x1l.Drawing.elliottwave.prototype.$controls = ["br[cq-wave-parameters]", o4v];

    x1l.Drawing.elliottwave.prototype.construct = function (k9N, S9N) {
      var t9N;
      this.stx = k9N;
      this.panelName = S9N.name;
      T5VV.k7Kh();
      t9N = k9N.currentVectorParameters;
      Object.assign(this, t9N.waveParameters);
    };

    x1l.Drawing.elliottwave.prototype.serialize = function () {
      var t1bh = T5VV;
      var M4v, e4v, N9N;
      M4v = "f";
      M4v += "l";
      e4v = "s";
      e4v += "t";
      N9N = {};

      for (var v9N = +"0"; v9N < this.points.length; v9N++) {
        t1bh.N3mK(0);
        N9N[t1bh.E3mK(v9N, "d")] = this[t1bh.e3mK(v9N, ("1800" * 1, 7752) === 4866 ? (!!0, "I") : (6790, 2130) <= 6099 ? "d" : (+"582.06", 868.28) == (6220, 4807) ? ("0x139d" >> 1457965920, !{}) : "b")];
        t1bh.i3mK(0);
        N9N[t1bh.E3mK(v9N, "tzo")] = this[t1bh.E3mK(v9N, "tzo")];
        t1bh.i3mK(0);
        N9N[t1bh.e3mK(v9N, (115.7, 9760) < 9320 ? 8.43e+3 : 315 >= "482.69" * 1 ? (5.24e+3, 344.47) : "v")] = this[t1bh.e3mK(v9N, 852.08 <= "2210" - 0 ? "v" : "B")];
      }

      N9N.annotations = this.annotationPoints.join((543.1, 508) !== (3390, "4930" * 1) ? "," : (!0, ![]));
      return Object.assign({
        name: this.name,
        pnl: this.panelName,
        col: this.color,
        ptrn: this.pattern,
        lw: this.lineWidth,
        mxSeg: this.maxSegments,
        show: this.showLines,
        decor: this.decoration,
        dx: this.dx,
        dy: this.dy,
        trend: this.trend,
        fnt: x1l.removeNullValues(x1l.replaceFields(this.font, {
          style: e4v,
          size: "sz",
          weight: "wt",
          family: M4v
        }))
      }, N9N);
    };

    x1l.Drawing.elliottwave.prototype.reconstruct = function (V9N, x9N) {
      var I4v, N4v;
      I4v = "fam";
      I4v += "il";
      I4v += "y";
      N4v = "si";
      N4v += "z";
      N4v += "e";
      this.stx = V9N;
      this.color = x9N.col;
      this.panelName = x9N.pnl;
      this.pattern = x9N.ptrn;
      T5VV.d7Kh();
      this.lineWidth = x9N.lw;
      this.font = x1l.replaceFields(x9N.fnt, {
        st: "style",
        sz: N4v,
        wt: "weight",
        fl: I4v
      });
      this.decoration = x9N.decor;
      this.showLines = x9N.show;
      this.dx = x9N.dx;
      this.dy = x9N.dy;
      this.trend = x9N.trend;
      this.annotationPoints = x9N.annotations.split(("901" >> 1794642400, 4675) >= 5130 ? (406.85, !1) : 515 > 729 ? (584, 9560) <= (+"95.75", "869.19" - 0) ? "i" : (0x209b, !"1") : ",");

      if (x9N.decor === "enclosed") {
        this.calculateRadius(V9N.chart.tempCanvas.context);
      }

      this.maxSegments = x9N.mxSeg;
      this.reconstructPoints(x9N);
      this.adjust();
    };

    x1l.Drawing.elliottwave.prototype.reconstructPoints = function (m9N) {
      var L1bh = T5VV;
      var M9N, z9N, R9N;
      M9N = this.stx.panels[this.panelName];

      if (!M9N) {
        return;
      }

      for (var a9N = 0; a9N < this.annotationPoints.length; a9N++) {
        L1bh.i3mK(0);
        this[L1bh.e3mK(a9N, (7091, 3732) !== (4719, 993.43) ? (7064, 891.46) != (4430, 507.41) ? "d" : (361, "585.05" - 0) <= 477.44 ? 0x1033 : +"0x1e9" : ("E", "0x14a5" & 2147483647))] = m9N[L1bh.e3mK(a9N, (567, 2810) < (+"5676", 2170) ? (2980, 864.55) != (6836, "267.73" - 0) ? ("N", !!{}) : !0 : "d")];
        L1bh.i3mK(0);
        this[L1bh.e3mK(a9N, 8070 <= (7600, "2619" - 0) ? +"0x1f14" : (425, 777.34) === +"7130" ? 0xd8f : "v")] = m9N[L1bh.e3mK(a9N, "v")];
        L1bh.i3mK(0);
        this[L1bh.E3mK(a9N, "tzo")] = m9N[L1bh.E3mK(a9N, "tzo")];
        z9N = x1l.strToDateTime(m9N[(549.88 < 3820 ?  true ? (4236, +"1642") > 8010 ? "0xe46" >> 1680257952 : "d" : (undefined) : (!!"", 9.57e+3)) + a9N]);
        R9N = this.stx.tickFromDate(z9N, M9N.chart);
        this.points.push([R9N, m9N[((588.42, 233.16) < 8186 ? (5630, 378.28) !== (434.72, 5700) ? (+"2610", +"7560") != 4400 ? "v" : (0x376, 8.17e+3) : (!!{}, +"326.83") : (9.20e+3, "F")) + a9N]]);
      }
    };

    x1l.Drawing.elliottwave.prototype.calculateRadius = function (A9N) {
      var G3v, m3v, P3v, s9N, T9N;
      this.getFontString();
      A9N.font = this.fontString;
      G3v = -+"669994541";
      m3v = -1576443193;
      P3v = 2;

      for (var D3v = 1; T5VV.s1v(D3v.toString(), D3v.toString().length, 14292) !== G3v; D3v++) {
        s9N = 2;
        P3v += 2;
      }

      if (T5VV.s1v(P3v.toString(), P3v.toString().length, 31320) !== m3v) {
        s9N = 9;
      }

      s9N = 0;

      for (var P9N = 0; P9N < this.annotationPoints.length; P9N++) {
        T9N = A9N.measureText(this.annotationPoints[P9N]).width;

        if (s9N < T9N) {
          s9N = T9N;
        }
      }

      this.enclosedRadius = s9N;
    };

    x1l.Drawing.elliottwave.prototype.check = function (L9N, I9N, y9N) {
      var D1bh = T5VV;
      var C9N, l9N, c0v, d0v, q0v;

      if (y9N === 1 && this.points.length === 2) {
        return !!{};
      }

      D1bh.i3mK(1);
      C9N = this.points[D1bh.E3mK(1, y9N)];

      function f9N(r9N) {
        for (var u9N = 2; u9N < r9N.length; u9N++) {
          if (Math.sign(r9N[u9N][1] - r9N[u9N - +"1"][1]) == Math.sign(r9N[u9N - 1]["1" - 0] - r9N[u9N - 2][1])) {
            return !{};
          }
        }

        return !!"1";
      }

      if (C9N && L9N <= C9N[0]) {
        return !{};
      }

      D1bh.d7Kh();
      D1bh.i3mK(0);
      l9N = this.points[D1bh.E3mK(1, y9N)];

      if (l9N && L9N >= l9N[0]) {
        return !{};
      }

      c0v = -458370240;
      d0v = 790439122;
      q0v = 2;

      for (var h0v = +"1"; D1bh.s1v(h0v.toString(), h0v.toString().length, 25080) !== c0v; h0v++) {
        if (+f9N(this.points)) {
          return !!{};
        }

        q0v += 2;
      }

      if (D1bh.s1v(q0v.toString(), q0v.toString().length, 79306) !== d0v) {
        if (-f9N(this.points)) {
          return !"1";
        }
      }

      if (!f9N(this.points)) {
        return ![];
      }

      return !![];
    };

    x1l.Drawing.elliottwave.prototype.move = function (d9N, F9N, Q9N) {
      this.copyConfig();
      T5VV.d7Kh();
      T5VV.N3mK(7);
      var f8uu = T5VV.e3mK(20, 14, 33);
      this.points[this.lastPoint + f8uu] = [F9N, Q9N];
      this.render(d9N);
    };

    x1l.Drawing.elliottwave.prototype.adjust = function () {
      var W9N, b9N;
      W9N = this.stx.panels[this.panelName];

      if (!W9N) {
        return;
      }

      for (var w9N = 0; this.maxSegments + "1" * 1 > w9N; w9N++) {
        T5VV.i3mK(0);
        b9N = this[T5VV.E3mK(w9N, "d")];
        this.setPoint(w9N, b9N, this["v" + w9N], W9N.chart);
        this.points[w9N][0] = this.stx.tickFromDate(x1l.strToDateTime(b9N), W9N.chart);
        T5VV.i3mK(0);
        this.points[w9N][1] = this[T5VV.e3mK(w9N, 2913 < 5670 ? "v" : 128.59)];
      }
    };

    x1l.Drawing.elliottwave.prototype.click = function (Z9N, e9N, X9N) {
      var Y9N;
      Y9N = this.stx.panels[this.panelName];

      if (!Y9N) {
        return;
      }

      this.copyConfig();

      if (!this.penDown) {
        this.setPoint(0, e9N, X9N, Y9N.chart);
        this.points.push(this.p0);
        this.penDown = !!"1";
        this.segment = 0;
        this.lastPoint = 0;

        if (this.impulse) {
          this.annotationPoints = this.annotationPoints.concat(this.impulse);
        }

        if (this.corrective) {
          this.annotationPoints = this.annotationPoints.concat(this.corrective);
        }

        this.annotationPoints.unshift("0");

        if (this.decoration === "enclosed") {
          this.calculateRadius(Z9N);
        }

        this.maxSegments = this.annotationPoints.length - ("1" & 2147483647);
        this.trend = +"1";
        return !{};
      }

      if (this.accidentalClick(e9N, X9N)) {
        this.penDown = !!{};
        return !"1";
      }

      if (this.check(e9N, X9N, this.lastPoint + 1)) {
        this.lastPoint++;
        this.setPoint(this.lastPoint, e9N, X9N, Y9N.chart);

        if (this.lastPoint === +"1") {
          this.trend = Math.sign(this.v1 - this.v0);
        }

        this.segment++;

        if (this.segment >= this.maxSegments) {
          this.penDown = !!"";
          return !!{};
        }
      }

      return !{};
    };

    x1l.Drawing.elliottwave.prototype.render = function (J1D) {
      var z1bh = T5VV;
      var Z4v, O1D, g2D, E2D, o2D, G2D, h2D, i2D, N1D, P1D, j2D, d1D, p1D, F4v, i4v, X1D, H2D, e1D, J2D, c2D, p2D, q2D, o9v, e9v, M9v, K2D, O2D, Y1D, B2D, U2D, D2D, n2D;
      Z4v = "ce";
      Z4v += "n";
      Z4v += "t";
      Z4v += "er";
      O1D = this.stx.panels[this.panelName];

      if (!O1D) {
        return;
      }

      g2D = this.stx;
      E2D = this.annotationPoints;
      o2D = this.pattern ? x1l.borderPatternToArray(this.lineWidth, this.pattern) : [];
      this.getFontString();
      J1D.font = this.fontString;
      J1D.textAlign = Z4v;
      J1D.textBaseline = "middle";
      J1D.lineWidth = this.lineWidth;

      if (this.fontString !== this.lastFontString) {
        this.calculateRadius(J1D);
      }

      this.lastFontString = this.fontString;
      G2D = this.getLineColor();
      J1D.fillStyle = J1D.strokeStyle = G2D;
      J1D.save();
      J1D.setLineDash(o2D);
      h2D = this.dx;
      i2D = this.dy;
      N1D = this.points;
      P1D = this.pts;
      j2D = !this.showLines && this.highlighted;
      d1D = N1D.length;
      z1bh.d7Kh();

      if (this.penDown && this.segment) {
        z1bh.i3mK(105);
        var D8uu = z1bh.E3mK(1934, 11, 8, 11, 2);
        p1D = this.trend * (d1D % D8uu - 0.5) < 0;

        if (O1D.yAxis.flipped) {
          p1D = !p1D;
        }

        this.drawDropZone(J1D, N1D[d1D - 2][1], this.stx.priceFromPixel(O1D.yAxis[p1D ? "top" : "bottom"]), N1D[d1D - 2][0]);
      } else if (typeof this.highlighted === "string" && this.stx.repositioningDrawing) {
        F4v = "b";
        F4v += "o";
        F4v += "tt";
        F4v += "om";
        i4v = "to";
        i4v += "p";
        X1D = parseInt(this.highlighted.substring(1, this.highlighted.length), 10);
        z1bh.i3mK(106);
        var y8uu = z1bh.E3mK(5, 11, 4, 10, 7);
        p1D = this.trend * (X1D % y8uu - ("0.5" - 0)) > 0;
        z1bh.i3mK(76);
        H2D = N1D[z1bh.e3mK("1", X1D)];
        z1bh.i3mK(0);
        e1D = N1D[z1bh.E3mK(1, X1D)];
        J2D = X1D > "0" >> 1231686912 ? H2D[1] : e1D[1];

        if (e1D) {
          J2D = Math[p1D ? "max" : "min"](J2D, e1D[1]);
        }

        if (O1D.yAxis.flipped) {
          p1D = !p1D;
        }

        this.drawDropZone(J1D, J2D, this.stx.priceFromPixel(O1D.yAxis[p1D ? i4v : F4v]), H2D ? H2D[0] : null, e1D ? e1D[0] : null);
      }

      for (var K1D = 0; K1D < d1D; K1D++) {
        c2D = N1D[K1D];
        p2D = g2D.pixelFromTick(c2D[0], O1D.chart);
        q2D = g2D.pixelFromValueAdjusted(O1D, c2D[0], c2D[1]);
        P1D[K1D] = [p2D, q2D];
      }

      z1bh.N3mK(53);
      K1D = z1bh.e3mK("0", 238282592);

      if (this.showLines || j2D) {
        J1D.beginPath();

        if (j2D) {
          J1D.globalAlpha = 0.3;
        }

        for (; K1D < P1D.length; K1D++) {
          J1D.lineTo(P1D[K1D]["0" & 2147483647], P1D[K1D][1]);
        }

        J1D.stroke();
        K1D = 0;
      }

      o9v = -751540229;
      e9v = +"1530855769";
      M9v = +"2";

      for (var I9v = 1; z1bh.s1v(I9v.toString(), I9v.toString().length, 97372) !== o9v; I9v++) {
        J1D.restore();
        M9v += 2;
      }

      if (z1bh.Y6v(M9v.toString(), M9v.toString().length, 33002) !== e9v) {
        J1D.restore();
      }

      J1D.restore();

      for (; K1D < d1D; K1D++) {
        K2D = K1D % 2 ? h2D : -h2D;
        O2D = K1D % 2 ? i2D : -i2D;
        K2D *= this.trend;
        O2D *= this.trend;

        if (O1D.yAxis.flipped) {
          K2D *= -1;
          O2D *= -1;
        }

        Y1D = P1D[K1D];
        B2D = Y1D[2] = Y1D[0] + K2D;
        U2D = Y1D[3] = Y1D["1" & 2147483647] + O2D;
        D2D = this.enclosedRadius || 8;
        n2D = E2D[K1D];

        if (this.decoration === "parentheses") {
          z1bh.i3mK(93);
          n2D = z1bh.E3mK((8910, 994.72) === +"2274" ? (4.55e+3, "g") : 2530 >= 6750 ? (0x16fd, 8.33e+3) : +"2720" !== (3980, 378.37) ? ")" : (0x669, 768.72), +"5753" < 9536 ? 30.3 <= (814.72, 4330) ? "(" : (!!{}, 0x2494) : ("g", 7.33e+3), n2D);
        }

        J1D.fillText(n2D, B2D, U2D);

        if (this.decoration === "enclosed") {
          J1D.beginPath();
          z1bh.N3mK(53);
          J1D.arc(B2D, U2D, D2D, z1bh.E3mK("0", 1286202944), 2 * Math.PI, !"1");
          J1D.stroke();
        }

        if (this.highlighted) {
          J1D.save();
          this.littleCircle(J1D, this.pts[K1D][0], this.pts[K1D][1], this.highlighted === (255 !== (30, 792.36) ? "p" : !![]) + K1D);
          J1D.restore();
        }
      }
    };

    x1l.Drawing.elliottwave.prototype.reposition = function (z2D, k2D, v2D, N2D) {
      var V2D, a2D, m2D, S2D, x2D, M2D;

      if (!k2D) {
        return;
      }

      T5VV.d7Kh();
      V2D = this.stx.panels[this.panelName];
      a2D = k2D.tick - v2D;
      m2D = k2D.value - N2D;

      if (k2D.action === "move") {
        for (var t2D = +"0"; k2D.points.length > t2D; t2D++) {
          S2D = k2D.points[t2D];
          this.setPoint(t2D, S2D[+"0"] - a2D, S2D[1] - m2D, V2D.chart);
          T5VV.i3mK(107);
          var k8uu = T5VV.E3mK(19, 16, 10, 493, 1);
          this.points[t2D] = [S2D[+"0"] - a2D, S2D[k8uu] - m2D];
        }
      }

      if (k2D.action === "drag") {
        x2D = k2D.point;
        M2D = this.points;
        M2D[x2D] = [v2D, N2D];

        if (this.check(v2D, N2D, x2D)) {
          this.setPoint(x2D, v2D, N2D, V2D.chart);
          ;
        }

        ;
      }

      this.render(z2D);
    };

    x1l.Drawing.elliottwave.prototype.intersected = function (P2D, T2D, A2D) {
      var y2D, s2D;

      if (!this.p0 || !this.p1) {
        return null;
      }

      for (var R2D = 0; this.points.length > R2D; R2D++) {
        s2D = this.points[R2D];

        if (this.pointIntersection(s2D[+"0"], s2D[1], A2D)) {
          T5VV.i3mK(0);
          this.highlighted = T5VV.e3mK(R2D, (389.26, 697.42) != (3830, 4560) ? "p" :  false ? (undefined) : 9.28e+2);
          return {
            action: "drag",
            point: R2D,
            tick: P2D,
            value: T2D
          };
        }

        if (this.points[R2D + +"1"] && this.lineIntersection(P2D, T2D, A2D, "segment", s2D, this.points[R2D + 1])) {
          this.highlighted = !"";
          y2D = {
            action: "move",
            points: x1l.clone(this.points),
            tick: P2D,
            value: T2D
          };
        }
      }

      return y2D;
    };

    x1l.Drawing.elliottwave.prototype.measure = function () {
      var C2D, f2D, L2D, n4v, l2D;

      if (this.points.length >= 2) {
        C2D = this.points;
        this.stx.setMeasure(C2D[0][1], C2D[C2D.length - 1][1], C2D[0][0], C2D[C2D.length - 1][0], !!"1");
        f2D = this.stx.controls.mSticky;
        L2D = f2D && f2D.querySelector(".mStickyInterior");

        if (L2D) {
          n4v = "<";
          n4v += "b";
          n4v += "r>";
          l2D = [];
          l2D.push(x1l.capitalize("Elliott Wave"));

          if (this.getYValue) {
            l2D.push(this.field || this.stx.defaultPlotField || "Close");
          }

          l2D.push(L2D.innerHTML);
          L2D.innerHTML = l2D.join(n4v);
        }
      }
    };

    x1l.Drawing.printProjection = function (W2D, h3D, I2D) {
      var S1bh = T5VV;
      var r2D, d2D, c3D, b2D, K3D, e2D, O3D, X2D, w2D, H3D, Q2D, n3D, J3D, c4v, Z2D, u2D, g3D;
      r2D = h3D.arr;

      if (r2D.length > 1) {
        S1bh.i3mK(22);
        d2D = r2D[0][S1bh.e3mK("0", 0)];
        c3D = Math.round(W2D.chart.maxTicks * ("0.75" * 1));

        for (var F2D = +"1"; F2D < r2D.length; F2D++) {
          S1bh.i3mK(1);
          b2D = r2D[S1bh.E3mK(1, F2D)][0];
          K3D = r2D[F2D][0];
          e2D = x1l.strToDateTime(b2D);
          O3D = x1l.strToDateTime(K3D).getTime();
          X2D = W2D.standardMarketIterator(e2D);
          w2D = 0;

          while (e2D.getTime() < O3D) {
            e2D = X2D.next();
            w2D += 1;
          }

          H3D = x1l.strToDateTime(b2D).getTime();

          if (H3D > x1l.strToDateTime(I2D[I2D.length - 1].Date).getTime()) {
            Q2D = I2D.length - ("1" ^ 0);
            w2D += 1;
          } else {
            for (Q2D = I2D.length - 1; Q2D >= 0; Q2D--) {
              if (H3D <= x1l.strToDateTime(I2D[Q2D].Date).getTime()) break;
            }
          }

          n3D = {
            x0: 0,
            x1: w2D,
            y0: I2D[Q2D].Close,
            y1: r2D[F2D][1]
          };
          d2D = x1l.strToDateTime(b2D);
          X2D = W2D.standardMarketIterator(d2D);
          J3D = !{};

          for (var Y2D = 0; Y2D <= w2D; Y2D++) {
            c4v = "m";
            c4v += "inute";

            if (!J3D) {
              J3D = !![];
            } else {
              d2D = X2D.next();
            }

            if (d2D.getTime() <= I2D[I2D.length - 1].DT.getTime()) continue;
            Z2D = x1l.yIntersection(n3D, Y2D);

            if (!Z2D) {
              Z2D = +"0";
            }

            S1bh.N3mK(108);
            var C8uu = S1bh.E3mK(90297, 8202, 9, 90288, 6);
            S1bh.N3mK(23);
            var A8uu = S1bh.e3mK(10015, 80135, 9);
            u2D = Math.round(Z2D * ("10000" | C8uu)) / A8uu;

            if (u2D === 0) {
              u2D = r2D[F2D][1];
            }

            g3D = {
              Date: x1l.yyyymmddhhmmssmmm(d2D),
              DT: d2D,
              Open: u2D,
              Close: u2D,
              High: u2D,
              Low: u2D,
              Volume: 0,
              Adj_Close: u2D,
              Split_Close: u2D,
              projection: !![]
            };
            if (W2D.layout.interval == c4v) if (c3D-- < 0) break;
            I2D[I2D.length] = g3D;
          }
        }
      }
    };
  }
};

U2B = function U2B(j3D) {
  T5VV.k7Kh();
  var i3D;
  i3D = typeof _CIQ !== "undefined" ? _CIQ : j3D.CIQ;

  if (!i3D.computeEquationChart) {
    console.error("equationsAdvanced feature requires first activating equations feature.");
  } else {
    i3D.formatEquation = function (q3D) {
      var y1bh = T5VV;
      var E3D, G3D, B3D, o3D, U3D, T7v, J7v, Q7v;
      E3D = "";
      G3D = [];
      B3D = "";
      o3D = !1;

      for (var p3D = 1; p3D < q3D.length; p3D++) {
        U3D = q3D[p3D].toUpperCase();

        if (U3D == ( false ? (undefined) : "[") && !o3D) {
          o3D = !![];
        } else if (U3D == ((2815, 1520) === ("461.48" * 1, 3640) ? 3040 === (2816, 9052) ? 8.56e+3 : "U" : "]") && o3D) {
          o3D = !!"";

          if (B3D !== "") {
            G3D.push(B3D);
            y1bh.N3mK(93);
            E3D += y1bh.E3mK((9960, 1220) <= +"9414" ? (502.57, 1492) != +"932" ? "]" : (1614, 1350) >= (+"1540", 1670) ? (!!{}, "o") : 0x171e : (0xd4d, "n"), "[", B3D);
          }

          B3D = "";
        } else if (o3D) {
          B3D += U3D;
        } else if (U3D == (+"506" === (1493, 3890) ? +"475.07" : 290.61 === (824.14, 4636) ? ![] : "+") || U3D == "-" || U3D == (841.23 < 4770 ? "*" : 7318 < 876.64 ? (!!{}, +"53.46") : 786.46 > 8021 ? ("B", "M") : ("c", !"1")) || U3D == "/" || U3D == (4010 == (649.95, 7593) ? 0x17fc : (405, 488.03) < 4431 ? ":" : ("638.29" * 1, +"89.96") !== 5760 ? 409.12 : !!{}) || U3D == "%" || U3D == "(" || U3D == ((360, 3517) >= 5330 ? (!1, !0) : ")")) {
          if (B3D !== "" && isNaN(B3D)) {
            G3D.push(B3D);
            y1bh.N3mK(93);
            E3D += y1bh.E3mK( true ? "]" : undefined, "[", B3D);
          } else {
            E3D += B3D;
          }

          if (U3D == (("5701" << 284388800, 184.11) != 989.99 ? ":" : 6.63e+3)) {
            U3D = "/";
          }

          E3D += U3D;
          B3D = "";
        } else if (U3D != (("3560" | 1512, 7.47) < 9480 ? 2134 >= "8460" * 1 ?  true ? (230.10, !!1) : (undefined) : " " : !!{})) {
          B3D += U3D;
        }
      }

      if (B3D !== "" && isNaN(B3D)) {
        G3D.push(B3D);
        y1bh.N3mK(93);
        E3D += y1bh.E3mK(266.22 !== (550.51, 1803) ? "]" : +"0x943", "[", B3D);
      } else {
        E3D += B3D;
      }

      T7v = 465169327;
      J7v = +"2081150152";
      Q7v = 2;

      for (var l7v = +"1"; y1bh.Y6v(l7v.toString(), l7v.toString().length, 44040) !== T7v; l7v++) {
        return {
          equation: E3D,
          symbols: G3D
        };
      }

      if (y1bh.Y6v(Q7v.toString(), Q7v.toString().length, 74025) !== J7v) {
        return {
          equation: E3D,
          symbols: G3D
        };
      }
    };

    i3D.fetchEquationChart = function (D3D, V3D) {
      var S3D, v3D, N3D, x3D, t3D;
      S3D = i3D.formatEquation(D3D.symbol);
      v3D = S3D.symbols;
      N3D = [];
      x3D = D3D.stx;
      D3D.stx = null;

      for (var k3D = +"0"; k3D < v3D.length; k3D++) {
        t3D = i3D.shallowClone(D3D);
        t3D.stx = x3D;
        t3D.symbol = v3D[k3D];
        t3D.symbolObject = {
          symbol: v3D[k3D]
        };
        N3D.push(t3D);
      }

      D3D.stx = x3D;
      x3D.quoteDriver.multiFetch(N3D, function (P3D) {
        var R3D, a3D, m3D, M3D, T3D;
        R3D = {};
        D3D.loadMoreReplace = !0;
        a3D = {
          charge: 0
        };

        for (var z3D = 0; z3D < P3D.length; z3D++) {
          m3D = P3D[z3D];

          if (m3D.dataCallback.error) {
            V3D({
              error: m3D.dataCallback.error
            });
            return;
          }

          R3D[m3D.params.symbol] = m3D.dataCallback.quotes;
          D3D.loadMoreReplace = D3D.loadMoreReplace && m3D.params.loadMoreReplace;
          D3D.moreToLoad = D3D.moreToLoad || m3D.dataCallback.moreAvailable;
          M3D = m3D.dataCallback.attribution;

          if (M3D) {
            if (M3D.charge) {
              a3D.charge += M3D.charge;
            }

            a3D.source = M3D.source;

            if (a3D.exchange === undefined) {
              a3D.exchange = M3D.exchange;
            } else if (a3D.exchange != M3D.exchange) {
              a3D.exchange = "";
            }

            ;
          }
        }

        if (N3D.length || !(D3D.loadMore || D3D.update)) {
          try {
            T3D = i3D.computeEquationChart(S3D.equation, R3D);
            V3D({
              quotes: T3D,
              moreAvailable: D3D.moreToLoad,
              attribution: a3D
            });
          } catch (A3D) {
            var d4v, s3D;
            d4v = "Invalid equatio";
            d4v += "n: ";
            s3D = {
              error: d4v + S3D.equation
            };

            if (A3D.name && A3D.name == "NoException") {
              s3D.suppressAlert = !!1;
            }

            V3D(s3D);
          }
        }
      });
    };
  }
};

E2B = function E2B(C3D) {
  var y3D;
  y3D = typeof _CIQ !== "undefined" ? _CIQ : C3D.CIQ;

  if (!y3D.Marker) {
    console.error("highPerformanceMarkers feature requires first activating markers feature.");
  } else if (!y3D.Marker.Performance) {
    y3D.ChartEngine.prototype.removeDOMMarker = function (l3D) {
      T5VV.k7Kh();
      var q4v;
      q4v = "CIQ.ChartEngine#removeDOMMarker is scheduled for deprecation in a future release\n Plea";
      q4v += "se use CIQ.Marker.Perfo";
      q4v += "rmance#remove instead.";
      console.warn(q4v);
      y3D.Marker.Performance.prototype.removeDOMMarker.call(l3D.params.node, l3D);
    };

    y3D.ChartEngine.prototype.drawMarkers = function () {
      console.warn("CIQ.ChartEngine#drawMarkers is scheduled for deprecation in a future release\n Please use CIQ.Marker.Performance.drawMarkers instead.");
      y3D.Marker.Performance.drawMarkers(this);
    };

    y3D.ChartEngine.prototype.calculateMarkerStyles = function (L3D, f3D) {
      console.warn("CIQ.ChartEngine#calculateMarkerStyles is scheduled for deprecation in a future release\n Please use CIQ.Marker.Performance.calculateStyles instead.");
      T5VV.d7Kh();
      y3D.Marker.Performance.calculateMarkerStyles(this, L3D, f3D);
    };

    y3D.ChartEngine.prototype.drawCircleMarker = function (I3D, u3D, r3D) {
      console.warn("CIQ.ChartEngine#drawCircleMarker is scheduled for deprecation in a future release\n Please use CIQ.Marker.Performance.drawCircleMarker instead.");
      T5VV.d7Kh();
      y3D.Marker.Performance.drawCircleMarker(I3D, u3D, r3D);
    };

    y3D.ChartEngine.prototype.drawSquareMarker = function (d3D, F3D, Q3D) {
      var b4v;
      b4v = "CIQ.ChartEn";
      b4v += "gine#drawSquareMarker is sched";
      b4v += "uled for depreca";
      b4v += "tion in a future release\n Please use CIQ.Marker.Performance.drawSquareMarker instead.";
      console.warn(b4v);
      T5VV.d7Kh();
      y3D.Marker.Performance.drawSquareMarker(d3D, F3D, Q3D);
    };

    y3D.ChartEngine.prototype.drawCalloutMarker = function (w3D, W3D, b3D) {
      T5VV.d7Kh();
      console.warn("CIQ.ChartEngine#drawCalloutMarker is scheduled for deprecation in a future release\n Please use CIQ.Marker.Performance.drawCalloutMarker instead.");
      y3D.Marker.Performance.drawCalloutMarker(w3D, W3D, b3D);
    };

    y3D.ChartEngine.prototype.drawMarkerStem = function (e3D, X3D, Y3D) {
      console.warn("CIQ.ChartEngine#drawMarkerStem is scheduled for deprecation in a future release\n Please use CIQ.Marker.Performance.drawMarkerStem instead.");
      y3D.Marker.Performance.drawMarkerStem(e3D, X3D, Y3D);
    };

    y3D.ChartEngine.prototype.positionDOMMarkers = function () {
      console.warn("CIQ.ChartEngine#positionDOMMarkers is scheduled for deprecation in a future release\n Please use CIQ.Marker.Performance.drawMarkers instead.");
      y3D.Marker.Performance.drawMarkers(this);
    };

    y3D.Marker.Performance = function (K4D) {
      var B4v, E4v, z4v, h4v, c4D, Z3D, n4D, j4D, O4D, i4D, U4D, G4v, E4D;
      B4v = "callo";
      B4v += "ut";
      E4v = "<";
      E4v += "/";
      E4v += "di";
      E4v += "v>";
      z4v = "<div class=\"stx-marker stx-perfor";
      z4v += "mance-marker stx-marker-expand\"><h4></h4><p></p></div>";
      h4v = "<di";
      h4v += "v clas";
      h4v += "s=\"stx-marker highligh";
      h4v += "t\">";
      this.params = {
        displayCategory: !"",
        displayStem: !![],
        invert: !{},
        story: "",
        headline: ""
      };
      y3D.extend(this.params, K4D);
      c4D = this.template = document.createElement("TEMPLATE");
      T5VV.N3mK(109);
      c4D.innerHTML = T5VV.e3mK('<div class="stx-marker-content">', '<div class="stx-visual">', "</div>", z4v, E4v, h4v, '<div class="stx-stem"></div>', "</div>");
      Z3D = this.template.content.cloneNode(!!1);
      n4D = Z3D.querySelector(".stx-marker", c4D);
      n4D.classList.add(K4D.type);
      n4D.classList.add(K4D.category);
      j4D = Z3D.querySelector(".stx-visual", c4D);
      O4D = Z3D.querySelector(".stx-marker-expand");
      i4D = Z3D.querySelector("h4", c4D);
      U4D = Z3D.querySelector((916.72, 6540) != 8990 ? "p" : (!{}, "Z"), c4D);
      i4D.innerText = this.params.headline;
      U4D.innerText = this.params.story;
      this.hasText = !!K4D.headline || !!K4D.story;
      this.deferAttach = !0;
      this.node = Z3D.firstChild;
      this.node.params = this.params;
      this.visual = j4D;
      this.expand = O4D;

      if (K4D.type === B4v) {
        G4v = ".";
        G4v += "stx-marker-content";
        E4D = O4D.removeChild(i4D);
        Z3D.querySelector(G4v, c4D).insertBefore(E4D, O4D);
      }
    };

    y3D.inheritsFrom(y3D.Marker.Performance, y3D.Marker.NodeCreator, !1);

    y3D.Marker.Performance.consolidateExpanded = function (V4D) {
      var q4D, D4D, v4D, m4v, S4D, x4D;
      q4D = V4D.markerHelper.highlighted;

      if (!q4D.length) {
        return;
      }

      T5VV.i3mK(16);
      var W8uu = T5VV.e3mK(3, 2);
      D4D = q4D[q4D.length - W8uu];
      v4D = D4D.params.node;

      if (!D4D.consolidated) {
        D4D.consolidated = [];
      }

      for (var t4D = q4D.length - 2; t4D >= 0; t4D--) {
        m4v = "</c";
        m4v += "on";
        m4v += "solidated";
        m4v += ">";
        S4D = M4D(q4D[t4D]);
        T5VV.N3mK(93);
        x4D = T5VV.E3mK(m4v, "<consolidated>", S4D);

        if (S4D.length) {
          v4D.expand.innerHTML += x4D;
        }
      }

      function M4D(A4D) {
        var s4D, z4D, T4D;
        s4D = A4D.params.node;
        z4D = s4D.expand;

        if (!z4D) {
          return "";
        }

        T4D = z4D.style.display !== "none" ? z4D.innerHTML : "";
        return T4D;
      }

      D4D.stxNodeCreator.quickCache(D4D);
    };

    y3D.Marker.Performance.reconstituteExpanded = function (c7D) {
      var L4D, g7D, h7D, Z4D;
      L4D = c7D.markerHelper.highlighted;

      if (!L4D.length || !c7D.activeMarker) {
        return;
      }

      L4D = [c7D.activeMarker];

      for (var f4D = L4D.length - 1; f4D >= 0; f4D--) {
        g7D = L4D[f4D];
        h7D = g7D.params.node;
        Z4D = h7D.expand;

        while (Z4D.lastElementChild.nodeName === "CONSOLIDATED") {
          Z4D.removeChild(Z4D.lastElementChild);
        }
      }
    };

    y3D.Marker.Performance.drawMarkers = function (S7D) {
      var k7D, j7D, G7D, q7D, m7D, z7D;
      k7D = S7D.getMarkerArray("all");
      T5VV.d7Kh();
      j7D = S7D.chart;

      for (var U7D = +"0"; U7D < k7D.length; U7D++) {
        G7D = k7D[U7D];
        q7D = G7D.stxNodeCreator;
        m7D = j7D.dataSegment[0].tick;
        z7D = j7D.dataSegment[j7D.dataSegment.length - 1].tick;

        if (m7D <= G7D.tick <= z7D) {
          if (q7D && q7D.drawMarker) {
            q7D.drawMarker(G7D);
          }
        }
      }
    };

    y3D.Marker.Performance.calculateMarkerStyles = function (e7D, H6D, i6D) {
      var f7D, c6D, P4v, h6D;
      f7D = document.querySelector(".stx-marker-templates");

      if (!f7D) {
        f7D = document.createElement("DIV");
        f7D.style.visibility = "hidden";
        f7D.style.left = "-1000px";
        document.body.append(f7D);
      }

      f7D.appendChild(H6D.node);
      c6D = getComputedStyle(H6D.stxNodeCreator.visual);

      if (!e7D.styles.stx_marker_stem) {
        P4v = ".st";
        P4v += "x";
        P4v += "-ste";
        P4v += "m";
        h6D = getComputedStyle(document.querySelector(P4v, H6D.node));
        e7D.styles.stx_marker_stem = e7D.cloneStyle(h6D);
      }

      e7D.styles[i6D] = e7D.cloneStyle(c6D);
      f7D.removeChild(H6D.node);
    };

    y3D.Marker.Performance.drawCircleMarker = function (G6D, R6D, B6D) {
      var f4v, x6D, M6D, j6D, E6D, o6D, q6D, t6D, v6D, k4v, y4v, D4v;
      f4v = "n";
      f4v += "ormal bold 12px Roboto, Helvetica, sans-serif";
      x6D = G6D.params.stx;
      M6D = x6D.chart;
      j6D = M6D.context;
      E6D = B6D.x;
      o6D = B6D.y;
      q6D = B6D.radius;
      t6D = B6D.label;
      v6D = B6D.color ? B6D.color : R6D.backgroundColor;
      j6D.beginPath();
      j6D.setLineDash([]);
      j6D.lineWidth = 1;
      j6D.fillStyle = v6D;
      j6D.strokeStyle = v6D;
      j6D.font = f4v;
      j6D.arc(E6D, o6D, q6D, 0, 2 * Math.PI, ![]);
      j6D.fill();
      j6D.stroke();
      j6D.closePath();

      if (t6D) {
        k4v = "whi";
        k4v += "te";
        y4v = "b";
        y4v += "l";
        y4v += "ack";
        D4v = "w";
        D4v += "hite";
        j6D.fillStyle = y3D.colorsEqual(D4v, j6D.fillStyle) ? y4v : k4v;
        j6D.fillText(t6D.charAt(0).toUpperCase(), E6D - 4, o6D + 1);
      }

      T5VV.d7Kh();

      if (G6D.highlight || G6D.active) {
        j6D.beginPath();
        T5VV.i3mK(0);
        j6D.arc(E6D, o6D, T5VV.E3mK(4, q6D), 0, 2 * Math.PI, !!"");
        j6D.stroke();
        j6D.closePath();
      }
    };

    y3D.Marker.Performance.drawSquareMarker = function (f6D, b6D, T6D) {
      var o1bh = T5VV;
      var C4v, Q6D, W6D, s6D, l6D, L6D, A6D, I6D, u6D, C6D, n7v, c7v, d7v, A4v;
      C4v = "normal bold 12px Roboto, Helve";
      C4v += "ti";
      C4v += "ca, sans-s";
      C4v += "erif";
      Q6D = f6D.params.stx;
      W6D = Q6D.chart;
      s6D = W6D.context;
      l6D = T6D.x;
      L6D = T6D.y;
      A6D = T6D.half;
      I6D = T6D.label;
      u6D = T6D.color ? T6D.color : b6D.backgroundColor;
      o1bh.i3mK(5);
      C6D = o1bh.E3mK(2, A6D);
      s6D.beginPath();
      s6D.setLineDash([]);
      s6D.lineWidth = 1;
      s6D.fillStyle = u6D;
      s6D.strokeStyle = u6D;
      s6D.font = C4v;
      o1bh.N3mK(1);
      s6D.rect(o1bh.e3mK(A6D, l6D), o1bh.E3mK(A6D, L6D), C6D, C6D);
      s6D.fill();

      if (f6D.highlight || f6D.active) {
        o1bh.N3mK(110);
        s6D.rect(o1bh.e3mK(A6D, "4", l6D), o1bh.E3mK(A6D, L6D, 4, o1bh.i3mK(14)), o1bh.e3mK(8, C6D, o1bh.i3mK(0)), o1bh.E3mK(8, C6D, o1bh.i3mK(0)));
      }

      s6D.stroke();
      s6D.closePath();

      if (I6D) {
        n7v = 1566665682;
        c7v = -+"920316284";
        d7v = 2;

        for (var b7v = +"1"; o1bh.Y6v(b7v.toString(), b7v.toString().length, +"87570") !== n7v; b7v++) {
          s6D.fillStyle = y3D.colorsEqual("black", s6D.fillStyle) ? "white" : "white";
          d7v += 2;
        }

        if (o1bh.Y6v(d7v.toString(), d7v.toString().length, 67134) !== c7v) {
          A4v = "wh";
          A4v += "i";
          A4v += "te";
          s6D.fillStyle = y3D.colorsEqual("white", s6D.fillStyle) ? "black" : A4v;
        }

        s6D.fillText(I6D.charAt(0).toUpperCase(), l6D - 4, L6D + 1);
      }
    };

    y3D.Marker.Performance.drawCalloutMarker = function (Z9D, U2L, p9D) {
      var Y6bh = T5VV;
      var J4v, T4v, g4v, W4v, i2L, j2L, Z6D, X9D, E2L, J2L, c2L, K2L, O2L, n2L, B2L, H2L, g2L, h2L;
      J4v = "bla";
      J4v += "ck";
      T4v = "r";
      T4v += "g";
      T4v += "ba(255,25";
      Y6bh.k7Kh();
      T4v += "5,255,0.65)";
      g4v = "r";
      g4v += "gba(255,255,";
      g4v += "255,0.8)";
      W4v = "normal bold 12px Roboto, Helvetica, sans-ser";
      W4v += "if";
      i2L = Z9D.params.stx;
      j2L = i2L.chart;
      Z6D = j2L.context;
      X9D = Z9D.params;
      E2L = p9D.x;
      J2L = p9D.y;
      c2L = p9D.half;
      K2L = p9D.midWidth;
      O2L = p9D.headline;
      n2L = p9D.color ? p9D.color : U2L.backgroundColor;
      B2L = c2L * 2 || 25;
      H2L = Math.round(Z6D.measureText(O2L).width);
      g2L = K2L ? K2L * 2 : H2L + 8;
      Z6D.beginPath();
      Z6D.setLineDash([]);
      Y6bh.i3mK(22);
      Z6D.lineWidth = Y6bh.E3mK("1", 0);
      Z6D.fillStyle = n2L;
      Z6D.strokeStyle = n2L;
      Z6D.font = W4v;
      Z6D.rect(X9D.box.x0, X9D.box.y0, g2L, B2L);
      Z6D.fill();
      Z6D.stroke();
      Z6D.closePath();
      Z6D.beginPath();
      Z6D.fillStyle = Z9D.highlight || Z9D.active ? g4v : T4v;
      Y6bh.i3mK(111);
      h2L = Y6bh.E3mK(20, g2L, "2", H2L, 0);
      Z6D.rect(X9D.box.x0 + h2L, J2L - c2L, H2L + +"40", 22);
      Z6D.fill();
      Z6D.stroke();
      Z6D.closePath();
      Z6D.fillStyle = J4v;
      Z6D.fillText(O2L, X9D.box.x0 + h2L + 10, J2L);
    };

    y3D.Marker.Performance.drawMarkerStem = function (G2L, k2L, p2L) {
      var t2L, S2L, o2L, q2L, x2L, O1v, a1v, u1v, D2L, v2L, N2L;
      t2L = G2L.params.stx;
      S2L = t2L.chart;
      o2L = S2L.context;
      q2L = p2L.x;
      x2L = p2L.y;
      o2L.beginPath();
      O1v = 1312298356;
      a1v = -+"441865939";
      u1v = 2;

      for (var p1v = 1; T5VV.s1v(p1v.toString(), p1v.toString().length, 24930) !== O1v; p1v++) {
        o2L.strokeStyle = k2L.borderLeftColor;
        o2L.setLineDash([1, 1]);
        T5VV.i3mK(53);
        u1v += T5VV.e3mK("2", 1009288064);
      }

      if (T5VV.s1v(u1v.toString(), u1v.toString().length, +"55979") !== a1v) {
        o2L.strokeStyle = k2L.borderLeftColor;
        o2L.setLineDash([4, 2]);
      }

      D2L = y3D.stripPX(k2L.height);
      v2L = p2L.invert ? G2L.params.box.y0 : G2L.params.box.y1;
      N2L = p2L.invert ? G2L.params.box.y0 - D2L : G2L.params.box.y1 + D2L;
      o2L.moveTo(q2L, v2L);
      o2L.lineTo(q2L, N2L);
      o2L.stroke();
      o2L.closePath();
    };

    y3D.Marker.Performance.prototype.drawMarker = function (V2L) {
      var X6bh = T5VV;
      var C2L, m2L, d2L, F2L, I2L, M2L, P2L, T2L, Q2L, u2L, l2L, r2L, L2L, z2L, f2L, a2L, A2L, y2L, w2L, W2L, R2L, s2L;
      C2L = V2L.params;
      m2L = V2L.params.stx;

      if (!m2L) {
        return;
      }

      d2L = m2L.chart;
      F2L = d2L.dataSegment;

      if (!F2L.length) {
        return;
      }

      I2L = m2L.panels[V2L.params.panelName];
      M2L = V2L.stxNodeCreator.params;
      P2L = M2L.type;
      T2L = M2L.category;
      Q2L = M2L.headline;
      u2L = M2L.displayCategory;
      l2L = M2L.color;
      r2L = M2L.invert;
      X6bh.N3mK(112);
      L2L = X6bh.e3mK(T2L, 5631 >= (6620, 3265) ? "_" : 141.56 != (8080, 9605) ? 5609 >= 940.17 ? "t" : (906.01, 591.76) : (0x29f, !!"1"), "stx_marker_", P2L);

      if (!m2L.styles[L2L]) {
        y3D.Marker.Performance.calculateMarkerStyles(m2L, V2L, L2L);
      }

      z2L = V2L.style = m2L.styles[L2L];
      f2L = m2L.styles.stx_marker_stem;
      X6bh.N3mK(113);
      var g8uu = X6bh.E3mK(6, 2, 16, 2, 8);
      X6bh.i3mK(56);
      var T8uu = X6bh.E3mK(86, 6, 14);
      a2L = parseInt(z2L.height, g8uu) / T8uu;
      X6bh.N3mK(0);
      var J8uu = X6bh.E3mK(1, 1);
      A2L = parseInt(z2L.width, +"10") / J8uu;
      y2L = M2L.displayStem ? parseInt(f2L.height, 10) + parseInt(f2L.marginBottom, 10) : "0" << 1239374880;
      X6bh.N3mK(114);
      var Q8uu = X6bh.E3mK(2, 1, 8, 9, 4);
      w2L = y2L + parseInt(z2L.height, Q8uu);
      W2L = y2L ? y2L + a2L : 0;
      R2L = m2L.pixelFromDate(C2L.x);
      s2L = C2L.node.calculateYPosition({
        marker: V2L,
        panel: I2L,
        height: w2L,
        half: a2L,
        offset: W2L,
        inverted: r2L
      });

      if (!V2L.tick && V2L.tick !== 0) {
        return;
      }

      C2L.box = {
        x0: R2L - (A2L || a2L),
        y0: s2L - a2L,
        x1: R2L + (A2L || a2L),
        y1: s2L + a2L,
        midY: a2L,
        midX: A2L || a2L,
        stemHeight: y2L
      };

      if (!u2L) {
        T2L = u2L;
      }

      m2L.startClip(I2L.name);

      if (P2L === "circle") {
        y3D.Marker.Performance.drawCircleMarker(V2L, z2L, {
          x: R2L,
          y: s2L,
          radius: a2L,
          label: T2L,
          color: l2L
        });
      } else if (P2L === "square") {
        y3D.Marker.Performance.drawSquareMarker(V2L, z2L, {
          x: R2L,
          y: s2L,
          half: a2L,
          label: T2L,
          color: l2L
        });
      } else if (P2L === "callout") {
        y3D.Marker.Performance.drawCalloutMarker(V2L, z2L, {
          x: R2L,
          y: s2L,
          half: a2L,
          midWidth: A2L,
          headline: Q2L,
          color: l2L
        });
      } else {
        X6bh.N3mK(93);
        console.warn(X6bh.E3mK(" is unsupported with canvas markers!\nSupported Styles are Square, Circle, and Callout.", "Marker type: ", P2L));
      }

      if (M2L.displayStem) {
        y3D.Marker.Performance.drawMarkerStem(V2L, f2L, {
          x: R2L,
          y: s2L,
          invert: r2L
        });
      }

      m2L.endClip();

      if (V2L.attached) {
        this.positionPopUpNode(V2L);
      }
    };

    y3D.Marker.Performance.prototype.positionPopUpNode = function (e2L) {
      var d6bh = T5VV;
      var Q4v, c3L, Y2L, b2L, K3L, H3L, X2L, O3L, j3L, B3L, U3L, E3L, n3L, Z2L, i3L, g3L, J3L, y3v, k3v, C3v, h3L, o3L;
      Q4v = "tr";
      Q4v += "a";
      Q4v += "nslateX(";

      if (!e2L.attached || !e2L.params.box) {
        return;
      }

      c3L = e2L.params;
      Y2L = c3L.stx;
      b2L = c3L.box;
      K3L = e2L.params.node.expand;
      H3L = Y2L.chart.dataSet;
      X2L = Y2L.chart.dataSegment;

      if (e2L.tick) {
        j3L = [H3L[X2L[0] && X2L[0].tick - 1], H3L[X2L[0] && X2L[0].tick - 2]];
        B3L = Y2L.getFirstLastDataRecord(j3L.concat(X2L), "Date");
        d6bh.N3mK(0);
        var R8uu = d6bh.e3mK(1, 0);
        d6bh.i3mK(113);
        var l8uu = d6bh.E3mK(19, 323, 6, 6, 17);
        d6bh.N3mK(16);
        var r8uu = d6bh.e3mK(12, 11);
        d6bh.i3mK(34);
        var K8uu = d6bh.E3mK(13, 15, 301, 8);
        U3L = [H3L[X2L[X2L.length - R8uu].tick + l8uu], H3L[X2L[X2L.length - r8uu].tick + K8uu]];
        E3L = Y2L.getFirstLastDataRecord(X2L.concat(U3L), "Date", !!"1");
        O3L = B3L.DT <= H3L[e2L.tick].DT && H3L[e2L.tick].DT <= E3L.DT;
      } else {
        O3L = !!"";
      }

      if (!e2L.highlight && !e2L.active) {
        O3L = ![];
      }

      K3L.style.visibility = O3L ? "" : "hidden";

      if (!O3L) {
        return;
      }

      n3L = Y2L.panels[c3L.panelName];
      Z2L = K3L.rects;
      i3L = Z2L.height / ("2" ^ 0);
      J3L = e2L.node.params.infoOffset || 0;
      d6bh.k7Kh();

      if (e2L.node.params.infoOnLeft) {
        g3L = b2L.x0 - Z2L.width - J3L < n3L.left ? b2L.x1 + J3L : b2L.x0 - Z2L.width - J3L;
      } else {
        y3v = -1652632372;
        k3v = 760524195;
        d6bh.i3mK(26);
        C3v = d6bh.E3mK("2", 0);

        for (var W3v = 1; d6bh.Y6v(W3v.toString(), W3v.toString().length, 50429) !== y3v; W3v++) {
          g3L = b2L.x0 + Z2L.width > n3L.right ? b2L.x0 - Z2L.width - J3L : b2L.x1 + J3L;
          C3v += 2;
        }

        if (d6bh.Y6v(C3v.toString(), C3v.toString().length, +"65202") !== k3v) {
          g3L = b2L.x0 - Z2L.width <= n3L.right ? (b2L.x0 + Z2L.width) / J3L : b2L.x1 - J3L;
        }
      }

      g3L -= Y2L.chart.left;
      h3L = b2L.y0 - i3L >= n3L.top ? b2L.y0 + b2L.midY - i3L : b2L.y0;

      if (!c3L.avoidFlush && b2L.y1 + b2L.stemHeight === n3L.yAxis.bottom && Z2L.height > b2L.y1 - b2L.y0 + b2L.stemHeight) {
        h3L = b2L.y1 - Z2L.height + b2L.stemHeight;
      }

      h3L -= Y2L.chart.panel.top;
      o3L = Q4v + Math.floor(g3L) + "px) translateY(" + Math.floor(h3L) + "px) translateZ(0)";
      K3L.style.transform = o3L;
      K3L.transform = {
        translateX: g3L,
        translateY: h3L
      };
    };

    y3D.Marker.Performance.prototype.quickCache = function (q3L) {
      var D3L, G3L, p3L, k3L;
      D3L = q3L.params.node;
      T5VV.k7Kh();
      G3L = D3L.expand;
      p3L = q3L.style;
      k3L = y3D.stripPX(p3L.marginLeft) + y3D.stripPX(p3L.marginRight) + y3D.stripPX(p3L.borderRight) + y3D.stripPX(p3L.borderLeft);
      G3L.rects = G3L.getBoundingClientRect();
      G3L.scrollBarWidth = G3L.rects.width - G3L.clientWidth - k3L;
    };

    y3D.Marker.Performance.prototype.calculateYPosition = function (a3L) {
      var R4v, V3L, S3L, z3L, m3L, x3L, R3L, v3L, s3L, P3L, N3L, M3L, T3L, t3L, A3L, y3L;
      R4v = "abo";
      R4v += "ve_candle";
      V3L = a3L.marker;
      S3L = a3L.panel;
      T5VV.d7Kh();
      z3L = a3L.height;
      m3L = a3L.half;
      x3L = a3L.offset;
      R3L = a3L.inverted;
      v3L = V3L.params.stx;
      s3L = v3L.chart;
      P3L = v3L.chart.highLowBars;
      N3L = s3L.dataSet[V3L.tick];

      if (!N3L) {
        return;
      }

      M3L = P3L ? N3L.High : N3L.Close;
      T3L = V3L.params.yPositioner;

      switch (T3L) {
        case "value":
          if (V3L.params.y || V3L.params.y === "0" * 1) {
            t3L = v3L.pixelFromPrice(V3L.params.y, S3L) - z3L * 0.5 + m3L;
          } else {
            t3L = v3L.pixelFromPrice(M3L, S3L) - x3L;
          }

          break;

        case R4v:
          t3L = v3L.pixelFromPrice(M3L, S3L) - x3L;
          break;

        case "below_candle":
          t3L = v3L.pixelFromPrice(N3L.Low || M3L, S3L);

          if (R3L && x3L) {
            t3L += x3L;
          } else {
            t3L += m3L;
          }

          break;

        case "on_candle":
          A3L = N3L.High || N3L.Close, y3L = N3L.Low || N3L.Low === 0 || N3L.Close;
          T5VV.i3mK(16);
          var V8uu = T5VV.e3mK(9, 7);
          t3L = v3L.pixelFromPrice((A3L + y3L) / V8uu, S3L) - z3L * +"0.5" + m3L;
          break;

        case "top":
          t3L = v3L.pixelFromPrice(S3L.yAxis.high, S3L);

          if (R3L && x3L) {
            t3L += x3L;
          } else {
            t3L += m3L;
          }

          break;

        case "bottom":
          t3L = v3L.pixelFromPrice(S3L.yAxis.low, S3L) - (x3L || m3L);
          break;

        default:
          break;
      }

      return t3L;
    };

    y3D.Marker.Performance.prototype.prepareForHolder = function (l3L) {
      var C3L, L3L;
      C3L = this.expand;
      L3L = l3L.params.stx;
      C3L.classList.add(this.params.type);
      T5VV.k7Kh();
      L3L.markerHelper.domMarkers.push(l3L);
      return C3L;
    };

    y3D.Marker.Performance.prototype.addToHolder = function (u3L) {
      var l4v, I3L, f3L;
      l4v = "mo";

      function r3L(d3L) {
        f3L.activeMarker = u3L;
        f3L.activeMarker.click({
          cx: d3L.clientX,
          cy: d3L.clientY,
          panel: f3L.currentPanel
        });
        d3L.stopPropagation();
      }

      l4v += "used";
      l4v += "own";
      I3L = this.expand;
      f3L = u3L.params.stx;
      y3D.Marker.Performance.reconstituteExpanded(f3L);
      y3D.Marker.Performance.consolidateExpanded(f3L);
      this.quickCache(u3L);

      if (I3L.clickClosure) {
        return;
      }

      I3L.addEventListener(l4v, r3L);
      I3L.addEventListener("touchstart", r3L);
      I3L.clickClosure = r3L;
    };

    y3D.Marker.Performance.prototype.remove = function (Q3L) {
      var F3L, W3L, r4v, b3L, w3L;
      F3L = Q3L.params.stx;

      if (!F3L) {
        return;
      }

      if (!F3L.markerHelper.domMarkers) {
        return;
      }

      W3L = F3L.markerHelper.domMarkers.indexOf(Q3L);

      if (W3L != -1) {
        F3L.markerHelper.domMarkers.splice(W3L, 1);
      }

      if (Q3L.attached) {
        r4v = "clic";
        r4v += "k";
        b3L = F3L.panels[Q3L.params.panelName];
        w3L = Q3L.params.node.expand;

        if (w3L.parentNode === b3L.subholder) {
          b3L.subholder.removeChild(w3L);
        }

        w3L.removeEventListener(r4v, w3L.clickClosure);
      }
    };

    y3D.Marker.Performance.prototype.click = function (H5L) {
      var Y3L, J5L, X3L;

      if (!this.hasText) {
        return;
      }

      if (typeof arguments["0" >> 2104374656] === "number") {
        H5L = {
          cx: arguments[0],
          cy: arguments[1],
          marker: arguments["2" << 1739162176],
          panel: arguments[3]
        };
      }

      var _H5L = H5L,
          Z3L = _H5L.cx,
          c5L = _H5L.cy,
          e3L = _H5L.marker,
          K5L = _H5L.panel;
      Y3L = e3L.params.stx;

      if (e3L.attached) {
        X3L = this.expand;

        if (X3L.rects.width - X3L.scrollBarWidth + X3L.transform.translateX < Y3L.backOutX(Z3L) && Y3L.backOutX(Z3L) < X3L.rects.width + X3L.transform.translateX) {
          return;
        }

        this.remove(e3L);
      } else {
        Y3L.addToHolder(e3L);
        J5L = !![];
      }

      e3L.attached = !e3L.attached;
      e3L.active = !e3L.active;

      if (J5L) {
        e3L.stxNodeCreator.positionPopUpNode(e3L);
      }
    };
  }
};

o2B = function o2B(n5L) {
  var O5L;
  O5L = typeof _CIQ !== "undefined" ? _CIQ : n5L.CIQ;

  O5L.Renderer.OHLC.requestNew = function (p5L, g5L) {
    var h5L, j5L, B5L, U5L, E5L, o5L, K4v, G5L;
    h5L = null;
    j5L = g5L.hlc;
    B5L = g5L.colored;
    U5L = g5L.hollow;
    E5L = g5L.volume;
    o5L = g5L.histogram;

    for (var i5L = 0; i5L < p5L.length; i5L++) {
      K4v = "b";
      K4v += "ar";
      G5L = p5L[i5L];

      switch (G5L) {
        case K4v:
        case "candle":
          h5L = G5L;
          break;

        case "volume":
          E5L = !![];
          break;

        case "hollow":
          U5L = !![];
          break;

        case "colored":
          B5L = !!{};
          break;

        case "histogram":
          o5L = !!"1";
          h5L = "candle";
          break;

        case "hlc":
          j5L = !!"1";
          h5L = "bar";
          break;

        default:
          return null;
      }
    }

    T5VV.d7Kh();

    if (h5L === null) {
      return null;
    }

    return new O5L.Renderer.OHLC({
      params: O5L.extend(g5L, {
        type: h5L,
        hlc: j5L,
        colored: B5L,
        hollow: U5L,
        volume: E5L,
        histogram: o5L
      })
    });
  };

  O5L.Renderer.OHLC.getChartParts = function (x5L, N5L) {
    var d8v, c8v, n8v, F8v, i8v, Z8v, I8v, N8v, M8v, e8v, o8v, j8v, x8v, L8v, t8v, w8v, S8v, U8v, v8v, H8v, s8v, Y4v, p4v, X4v, u4v, a4v, O4v, V4v, k5L, t5L, S5L, q5L, D5L, v5L;
    d8v = "border_color_e";
    d8v += "ven";
    c8v = "b";
    c8v += "or";
    c8v += "d";
    c8v += "er_color_up";
    n8v = "fil";
    n8v += "l_co";
    n8v += "lor_";
    n8v += "up";
    F8v = "s";
    F8v += "tx_hollow_ca";
    F8v += "ndle_even";
    i8v = "cand";
    i8v += "l";
    i8v += "e";
    Z8v = "b";
    Z8v += "ord";
    Z8v += "er_color_down";
    I8v = "fill_c";
    I8v += "olor_down";
    N8v = "border_c";
    N8v += "olo";
    N8v += "r_";
    N8v += "up";
    M8v = "border_c";
    M8v += "ol";
    M8v += "or_down";
    e8v = "cand";
    e8v += "l";
    e8v += "e";
    o8v = "border_color_eve";
    o8v += "n";
    j8v = "cand";
    j8v += "le";
    x8v = "stx_c";
    x8v += "a";
    x8v += "ndle_shad";
    x8v += "ow_down";
    L8v = "b";
    L8v += "order_color_up";
    t8v = "b";
    t8v += "order_";
    t8v += "color_dow";
    t8v += "n";
    w8v = "stx_";
    w8v += "bar";
    w8v += "_down";
    S8v = "b";
    S8v += "a";
    S8v += "r";
    U8v = "ba";
    U8v += "r";
    v8v = "borde";
    v8v += "r_color";
    H8v = "stx";
    H8v += "_bar_chart";
    s8v = "b";
    s8v += "a";
    s8v += "r";
    Y4v = "border_color_";
    Y4v += "even";
    p4v = "stx_";
    p4v += "histo";
    p4v += "gra";
    p4v += "m_even";
    X4v = "h";
    X4v += "istog";
    X4v += "ram";
    u4v = "b";
    u4v += "order_color_up";
    a4v = "fill";
    a4v += "_color";
    a4v += "_up";
    O4v = "st";
    O4v += "x_histogr";
    O4v += "am";
    O4v += "_up";
    V4v = "h";
    V4v += "ist";
    V4v += "o";
    V4v += "gram";
    k5L = 1;
    t5L = 2;
    S5L = 4;
    T5VV.N3mK(22);
    q5L = T5VV.E3mK("8", 0);
    D5L = +"16";
    v5L = 32;
    return [{
      type: V4v,
      drawType: "histogram",
      style: O4v,
      condition: q5L,
      fill: a4v,
      border: u4v,
      useColorInMap: !![],
      useBorderStyleProp: !!{}
    }, {
      type: X4v,
      drawType: "histogram",
      style: "stx_histogram_down",
      condition: D5L,
      fill: "fill_color_down",
      border: "border_color_down",
      useColorInMap: !![],
      useBorderStyleProp: !0
    }, {
      type: "histogram",
      drawType: "histogram",
      style: p4v,
      condition: v5L,
      fill: "fill_color_even",
      border: Y4v,
      skipIfPass: !!1,
      useColorInMap: !!{},
      useBorderStyleProp: !!"1"
    }, {
      type: "bar",
      drawType: s8v,
      style: x5L || H8v,
      border: v8v,
      useColorInMap: !![]
    }, {
      type: "bar",
      drawType: "bar",
      style: "stx_bar_up",
      condition: N5L ? q5L : k5L,
      border: "border_color_up",
      useColorInMap: !![]
    }, {
      type: U8v,
      drawType: S8v,
      style: w8v,
      condition: N5L ? D5L : t5L,
      border: t8v,
      useColorInMap: !0
    }, {
      type: "bar",
      drawType: "bar",
      style: "stx_bar_even",
      condition: N5L ? v5L : S5L,
      border: "border_color_even",
      skipIfPass: !0,
      useColorInMap: !0
    }, {
      type: "candle",
      drawType: "shadow",
      style: "stx_candle_shadow",
      border: "border_color_up"
    }, {
      type: "candle",
      drawType: "shadow",
      style: "stx_candle_shadow_up",
      condition: q5L,
      border: L8v
    }, {
      type: "candle",
      drawType: "shadow",
      style: x8v,
      condition: D5L,
      border: "border_color_down"
    }, {
      type: j8v,
      drawType: "shadow",
      style: "stx_candle_shadow_even",
      condition: v5L,
      border: o8v,
      skipIfPass: !!1
    }, {
      type: e8v,
      drawType: "candle",
      style: "stx_candle_up",
      condition: q5L,
      fill: "fill_color_up",
      border: "border_color_up",
      useColorInMap: !!"1",
      useBorderStyleProp: !!1
    }, {
      type: "candle",
      drawType: "candle",
      style: "stx_candle_down",
      condition: D5L,
      fill: "fill_color_down",
      border: M8v,
      useColorInMap: !![],
      useBorderStyleProp: !!{}
    }, {
      type: "hollow",
      drawType: "shadow",
      style: "stx_hollow_candle_up",
      condition: k5L,
      border: N8v
    }, {
      type: "hollow",
      drawType: "shadow",
      style: "stx_hollow_candle_down",
      condition: t5L,
      border: "border_color_down"
    }, {
      type: "hollow",
      drawType: "shadow",
      style: "stx_hollow_candle_even",
      condition: S5L,
      border: "border_color_even",
      skipIfPass: !!1
    }, {
      type: "hollow",
      drawType: "candle",
      style: "stx_hollow_candle_up",
      condition: k5L | D5L,
      fill: "fill_color_up",
      border: "border_color_up",
      useColorInMap: !!{}
    }, {
      type: "hollow",
      drawType: "candle",
      style: "stx_hollow_candle_down",
      condition: t5L | D5L,
      fill: I8v,
      border: Z8v,
      useColorInMap: !0
    }, {
      type: "hollow",
      drawType: i8v,
      style: F8v,
      condition: S5L | D5L,
      fill: "fill_color_even",
      border: "border_color_even",
      skipIfPass: !![],
      useColorInMap: !!1
    }, {
      type: "hollow",
      drawType: "candle",
      style: "stx_hollow_candle_up",
      condition: k5L | q5L,
      fill: n8v,
      border: c8v
    }, {
      type: "hollow",
      drawType: "candle",
      style: "stx_hollow_candle_down",
      condition: t5L | q5L,
      fill: "fill_color_down",
      border: "border_color_down"
    }, {
      type: "hollow",
      drawType: "candle",
      style: "stx_hollow_candle_even",
      condition: S5L | q5L,
      fill: "fill_color_even",
      border: d8v
    }];
    ;
  };

  O5L.Renderer.Bars = function (a5L) {
    var V5L;
    this.construct(a5L);
    V5L = this.params;
    V5L.type = "bar";
    this.highLowBars = this.barsHaveWidth = this.standaloneBars = !![];
    V5L.hlc = V5L.volume = V5L.hollow = V5L.histogram = !!0;
  };

  O5L.inheritsFrom(O5L.Renderer.Bars, O5L.Renderer.OHLC, !1);

  O5L.Renderer.HLC = function (M5L) {
    var m5L;
    this.construct(M5L);
    m5L = this.params;
    m5L.type = "bar";
    m5L.hlc = !!{};
    this.highLowBars = this.barsHaveWidth = this.standaloneBars = !!"1";
    m5L.volume = m5L.hollow = m5L.histogram = ![];
  };

  O5L.inheritsFrom(O5L.Renderer.HLC, O5L.Renderer.Bars, !{});
  T5VV.d7Kh();

  O5L.Renderer.Shading = function (z5L) {
    var b3v, h3v, z3v;
    b3v = -430151867;
    h3v = -914797189;
    z3v = 2;

    for (var B3v = 1; T5VV.Y6v(B3v.toString(), B3v.toString().length, "74739" | 74323) !== b3v; B3v++) {
      this.construct(z5L);
      this.beenSetup = !!0;
      this.errTimeout = null;
      this.params.useChartLegend = !1;
      z3v += 2;
    }

    if (T5VV.Y6v(z3v.toString(), z3v.toString().length, 45856) !== h3v) {
      this.construct(z5L);
      this.beenSetup = !!"1";
      this.errTimeout = 1;
      this.params.useChartLegend = !"";
    }

    this.shading = [];

    if (this.params.type == "rangechannel") {
      this.highLowBars = !!"1";
    }
  };

  O5L.inheritsFrom(O5L.Renderer.Shading, O5L.Renderer.Lines, !"1");

  O5L.Renderer.Shading.requestNew = function (A5L, y5L) {
    var R5L, P5L, q8v, T5L;
    R5L = null;
    P5L = null;

    for (var s5L = 0; s5L < A5L.length; s5L++) {
      q8v = "rang";
      q8v += "echannel";
      T5L = A5L[s5L];

      if (T5L == q8v) {
        R5L = "rangechannel";
      } else if (T5L == "step") {
        P5L = !"";
      }
    }

    if (R5L === null) {
      return null;
    }

    return new O5L.Renderer.Shading({
      params: O5L.extend(y5L, {
        type: R5L,
        step: P5L
      })
    });
  };

  O5L.Renderer.Shading.prototype.setShading = function (C5L) {
    T5VV.k7Kh();

    if (C5L.constructor != Array) {
      C5L = [C5L];
    }

    this.shading = C5L;
  };

  O5L.Renderer.Shading.prototype.draw = function () {
    var E8v, b8v, I5L, l5L, u5L, h8v, Y5L, d5L, Z5L, w5L, z8v, H8L, r5L, f5L, W5L, G8v, B8v, b5L, J8L, m8v, L5L, Q5L, e5L, X5L, F5L;
    E8v = "range";
    T5VV.k7Kh();
    E8v += "channel";
    b8v = "ran";
    b8v += "ge";
    b8v += "ch";
    b8v += "annel";
    I5L = this.stx;
    l5L = this.params;
    u5L = I5L.panels[l5L.panel].chart;

    function c8L(n8L) {
      var K8L, g8L, O8L;
      K8L = r5L[n8L];

      if (K8L) {
        g8L = K8L.parameters.field;
        O8L = K8L.parameters.subField;
        T5VV.N3mK(0);
        return T5VV.e3mK(O8L ? ((320.13, 762.06) < (6813, 162) ? ("5841" & 2147483647) > (1570, 1836) ? ("U", 453.22) : (![], 8.25e+3) : ".") + O8L : "", g8L);
      }

      return n8L;
    }

    if (l5L.type == b8v) {
      if (this.beenSetup) {
        if (this.seriesParams.length > 2) {
          this.removeSeries(this.seriesParams["2" & 2147483647].id);
        }
      } else {
        h8v = "st";
        h8v += "x_line_up";
        this.beenSetup = !!{};
        l5L.display = this.seriesParams[+"0"].display;
        l5L.yAxis = this.seriesParams[0].yAxis;
        Y5L = this.seriesParams[+"0"].color || "auto";
        d5L = this.seriesParams[0].symbol;
        Z5L = "";

        if (d5L) {
          T5VV.i3mK(0);
          Z5L = T5VV.e3mK(".", d5L);
        }

        this.removeAllSeries(!!1);
        w5L = l5L.name;
        I5L.addSeries(null, {
          symbol: d5L,
          loadData: !!d5L,
          field: "High",
          renderer: "Shading",
          name: w5L,
          style: h8v,
          display: l5L.display,
          shareYAxis: !!{}
        });
        I5L.addSeries(null, {
          symbol: d5L,
          loadData: !!d5L,
          field: "Low",
          renderer: "Shading",
          name: w5L,
          style: "stx_line_down",
          display: l5L.display,
          shareYAxis: !![]
        });
        this.setShading({
          primary: this.seriesParams[0].id,
          secondary: this.seriesParams[1].id,
          color: Y5L
        });
      }
    }

    if (!this.shading) {
      if (!this.errTimeout) {
        z8v = "Warning: no sha";
        z8v += "ding sc";
        z8v += "heme set.  Use myRenderer";
        z8v += ".setShading(scheme) to set.";
        console.log(z8v);
        H8L = this;
        this.errTimeout = setTimeout(function () {
          var P0v, f0v, D0v;
          P0v = 1709253858;
          f0v = 24623114;
          D0v = 2;

          for (var k0v = "1" >> 701630848; T5VV.s1v(k0v.toString(), k0v.toString().length, 22164) !== P0v; k0v++) {
            H8L.errTimeout = 1;
            D0v += 2;
          }

          if (T5VV.s1v(D0v.toString(), D0v.toString().length, +"86316") !== f0v) {
            H8L.errTimeout = null;
          }
        }, 10000);
      }
    }

    r5L = {};

    for (f5L = +"0"; f5L < this.seriesParams.length; f5L++) {
      W5L = {};

      if (u5L.series[this.seriesParams[f5L].id]) {
        W5L = O5L.clone(u5L.series[this.seriesParams[f5L].id].parameters);
      }

      r5L[this.seriesParams[f5L].id] = {
        parameters: O5L.extend(O5L.extend(W5L, l5L), this.seriesParams[f5L]),
        yValueCache: this.caches[this.seriesParams[f5L].id]
      };
    }

    I5L.drawSeries(u5L, r5L, l5L.yAxis, this);

    if (u5L.legend && l5L.type == E8v) {
      G8v = "stx_line_dow";
      G8v += "n";
      B8v = "st";
      B8v += "x";
      B8v += "_line_up";

      if (!u5L.legend.colorMap) {
        u5L.legend.colorMap = {};
      }

      b5L = l5L.display;
      J8L = [I5L.getCanvasColor(B8v), I5L.getCanvasColor(G8v)];
      u5L.legend.colorMap[b5L] = {
        color: J8L,
        display: b5L,
        isBase: this == I5L.mainSeriesRenderer
      };
      ;
    }

    for (f5L in r5L) {
      this.caches[f5L] = r5L[f5L].yValueCache;
    }

    for (f5L = 0; f5L < this.shading.length; f5L++) {
      m8v = "Cl";
      m8v += "o";
      m8v += "s";
      m8v += "e";
      L5L = this.shading[f5L];
      Q5L = L5L.color;

      if (L5L.color == "auto") {
        Q5L = I5L.defaultColor;
      }

      if (!L5L.primary) {
        L5L.primary = "Close";
      }

      if (!L5L.secondary && this.seriesParams[+"0"]) {
        L5L.secondary = this.seriesParams[0].field;
      }

      if (!L5L.secondary) continue;else if (!r5L[L5L.primary] && L5L.primary != "Close") continue;else if (!r5L[L5L.secondary]) continue;else if (L5L.primary == "Close" && l5L.yAxis && l5L.yAxis != u5L.yAxis) continue;
      e5L = c8L(L5L.primary).split(194 !== (9730, "7810" - 0) ? "." : (!!"", "u"));
      X5L = c8L(L5L.secondary).split(637.39 == (2700, 1048) ? (4.74e+3, "d") : ".");
      F5L = {
        topBand: e5L["0" | 0],
        topSubBand: e5L[+"1"],
        topColor: L5L.greater || Q5L || I5L.containerColor,
        topAxis: l5L.yAxis,
        bottomBand: X5L[0],
        bottomSubBand: X5L[1],
        bottomColor: L5L.lesser || Q5L || I5L.containerColor,
        bottomAxis: L5L.primary == m8v ? null : l5L.yAxis,
        tension: l5L.tension || u5L.tension,
        opacity: 0.1,
        step: l5L.step
      };
      if (!F5L.topColor && !F5L.bottomColor) continue;

      if (!l5L.highlight && I5L.highlightedDraggable) {
        F5L.opacity *= 0.3;
      }

      O5L.fillIntersecting(I5L, l5L.panel, F5L);
    }
  };

  O5L.Renderer.Histogram = function (h8L) {
    var m4Kh = T5VV;
    var Y1v, s0v, H0v, P8v;
    this.construct(h8L);
    m4Kh.N3mK(22);
    Y1v = -m4Kh.e3mK("226789662", 75497488);
    s0v = -683168925;
    m4Kh.N3mK(26);
    H0v = m4Kh.e3mK("2", 0);

    for (var U0v = "1" << 810360064; m4Kh.Y6v(U0v.toString(), U0v.toString().length, 27234) !== Y1v; U0v++) {
      P8v = "hi";
      P8v += "sto";
      P8v += "gram";
      this.params.type = P8v;
      this.barsHaveWidth = this.standaloneBars = !![];
      H0v += 2;
    }

    if (m4Kh.s1v(H0v.toString(), H0v.toString().length, 12669) !== s0v) {
      this.params.type = "";
      this.barsHaveWidth = this.standaloneBars = !!0;
    }

    if (this.params.yAxis) {
      this.params.bindToYAxis = !!1;

      if (typeof this.params.yAxis.baseline == "number") {
        this.params.yAxis.baseline = {
          value: this.params.yAxis.baseline
        };
      }
    }
  };

  O5L.inheritsFrom(O5L.Renderer.Histogram, O5L.Renderer, !{});

  O5L.Renderer.Histogram.prototype.adjustYAxis = function () {
    var i8L;
    i8L = this.params.yAxis;

    if (!i8L || i8L.baseline) {
      return;
    }

    i8L.min = 0;
    T5VV.k7Kh();
    i8L.highValue /= this.params.heightPercentage || 1;
  };

  O5L.Renderer.Histogram.prototype.draw = function () {
    T5VV.d7Kh();
    var j8L, B8L, D8v, f8v, U8L, E8L;
    j8L = O5L.clone(this.params);
    j8L.type = j8L.subtype;
    this.useSum = j8L.subtype == "stacked";

    if (!j8L.yAxis || j8L.yAxis == this.stx.chart.yAxis) {
      j8L.bindToYAxis = !![];
    }

    this.stx.drawHistogram(j8L, this.seriesParams);
    B8L = j8L.yAxis && j8L.yAxis.baseline;

    if (B8L && B8L.color) {
      D8v = "desti";
      D8v += "nation-over";
      f8v = "sol";
      f8v += "id";
      U8L = this.stx.panels[this.params.panel];
      E8L = this.stx.pixelFromPrice(B8L.value, U8L, this.params.yAxis) - 0.5;
      this.stx.plotLine({
        x0: U8L.left,
        x1: U8L.right,
        y0: E8L,
        y1: E8L,
        color: B8L.color,
        type: "line",
        context: U8L.chart.context,
        confineToPanel: U8L,
        pattern: B8L.pattern || f8v,
        lineWidth: B8L.lineWidth || 1,
        opacity: B8L.opacity || 0.8,
        globalCompositeOperation: D8v
      });
    }
  };

  O5L.Renderer.Histogram.prototype.getBasis = function (D8L, k8L, t8L) {
    var p8L, y8v, q8L, o8L;
    T5VV.i3mK(4);
    p8L = T5VV.e3mK("0", 2147483647);

    if (D8L && this.useSum) {
      for (var G8L = 0; G8L < this.seriesParams.length; G8L++) {
        y8v = "obj";
        y8v += "ect";
        q8L = this.seriesParams[G8L].field;
        if (q8L === k8L) break;
        o8L = D8L[q8L];

        if (o8L && _typeof(o8L) === y8v) {
          o8L = o8L[t8L || this.seriesParams[G8L].subField || this.stx.chart.defaultPlotField || "Close"];
        }

        if (o8L) {
          p8L += o8L;
        }
      }
    }

    return p8L;
  };

  O5L.Renderer.Heatmap = function (S8L) {
    T5VV.k7Kh();
    this.construct(S8L);
    this.params.type = "heatmap";
    this.params.highlightable = ![];
    this.barsHaveWidth = this.standaloneBars = !!{};
  };

  O5L.inheritsFrom(O5L.Renderer.Heatmap, O5L.Renderer, !!0);

  O5L.Renderer.Heatmap.requestNew = function (x8L, a8L) {
    var v8L, V8L;
    v8L = null;

    for (var N8L = 0; N8L < x8L.length; N8L++) {
      V8L = x8L[N8L];

      if (V8L == "heatmap") {
        v8L = "heatmap";
      }
    }

    if (v8L === null) {
      return null;
    }

    return new O5L.Renderer.Heatmap({
      params: O5L.extend(a8L, {
        type: v8L
      })
    });
  };

  O5L.Renderer.Heatmap.prototype.draw = function () {
    T5VV.d7Kh();
    this.stx.drawHeatmap(O5L.clone(this.params), this.seriesParams);
  };

  O5L.Renderer.Scatter = function (m8L) {
    T5VV.d7Kh();
    this.construct(m8L);
    this.standaloneBars = this.barsHaveWidth = !!{};
    this.bounded = !!1;
  };

  O5L.inheritsFrom(O5L.Renderer.Scatter, O5L.Renderer.Lines, !"1");

  O5L.Renderer.Scatter.requestNew = function (R8L, P8L) {
    var M8L, k8v, s8L;
    M8L = null;

    for (var z8L = 0; z8L < R8L.length; z8L++) {
      k8v = "sca";
      k8v += "tte";
      k8v += "rplo";
      k8v += "t";
      s8L = R8L[z8L];

      if (s8L == k8v) {
        M8L = "scatter";
      }
    }

    if (M8L === null) {
      return null;
    }

    return new O5L.Renderer.Scatter({
      params: O5L.extend(P8L, {
        type: M8L
      })
    });
  };

  O5L.Renderer.Scatter.prototype.drawIndividualSeries = function (C8L, A8L) {
    var C8v, y8L, T8L;
    C8v = "Error, Scatter renderer req";
    C8v += "uires customChart.";
    C8v += "js";
    y8L = this.stx.panels[A8L.panel] || C8L.panel;
    T8L = {
      colors: []
    };

    if (this.stx.scatter) {
      T8L = this.stx.scatter(y8L, A8L);
    } else {
      console.warn(C8v);
    }

    return T8L;
  };
};

G2B = function G2B(L8L) {
  var A8v, l8L, g8v;
  T5VV.k7Kh();
  A8v = "u";
  A8v += "ndefi";
  A8v += "ned";
  l8L = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== A8v ? _CIQ : L8L.CIQ;

  if (!l8L.Studies) {
    console.error("accumulationDistribution feature requires first activating studies feature.");
  } else {
    g8v = "Accumulation/Distribu";
    g8v += "tion";

    l8L.Studies.calculateAccumulationDistribution = function (w8L, r8L) {
      var F6bh = T5VV;
      F6bh.k7Kh();
      var Q8L, W8v, f8L, u8L, d8L, F8L;
      Q8L = r8L.chart.scrubbed;

      for (var I8L = r8L.startFrom; I8L < Q8L.length; I8L++) {
        W8v = "Resul";
        W8v += "t ";
        if (!I8L) continue;
        f8L = Q8L[I8L];
        if (f8L.futureTick) break;
        F6bh.i3mK(1);
        u8L = Q8L[F6bh.E3mK(1, I8L)];
        F6bh.N3mK(53);
        d8L = F6bh.e3mK("0", 111400608);

        if (f8L.Close > u8L.Close) {
          d8L = f8L.Close - Math.min(f8L.Low, u8L.Close);
        } else if (f8L.Close < u8L.Close) {
          d8L = f8L.Close - Math.max(f8L.High, u8L.Close);
        }

        if (r8L.inputs["Use Volume"]) {
          d8L *= f8L.Volume;
        }

        F8L = u8L["Result " + r8L.name];

        if (!F8L) {
          F8L = 0;
        }

        F8L += d8L;

        if (!isNaN(f8L.Close)) {
          f8L[W8v + r8L.name] = F8L;
        }
      }
    };

    l8L.Studies.studyLibrary = l8L.extend(l8L.Studies.studyLibrary, {
      "W Acc Dist": {
        name: g8v,
        calculateFN: l8L.Studies.calculateAccumulationDistribution,
        inputs: {
          "Use Volume": !1
        }
      }
    });
  }
};

p2B = function p2B(b8L) {
  T5VV.d7Kh();
  var W8L, T8v;
  W8L = typeof _CIQ !== "undefined" ? _CIQ : b8L.CIQ;

  if (!W8L.Studies) {
    T8v = "adx ";
    T8v += "feature requires first activatin";
    T8v += "g studies featu";
    T8v += "re.";
    console.error(T8v);
  } else {
    W8L.Studies.calculateADX = function (o0y, e8L) {
      var e6bh = T5VV;
      var J8v, Z8L, H0y, J0y, n0y, g0y, h0y, i0y, X8L, V8v, K8v, c0y, K0y, Q8v, r8v, l8v, R8v, j0y, B0y, U0y, u8v, a8v, O8v, X8v, Y8v, p8v, E0y, s6i;
      J8v = "Smoothing Per";
      J8v += "iod";
      W8L.Studies.calculateStudyATR(o0y, e8L);
      Z8L = e8L.chart.scrubbed;
      e6bh.d7Kh();
      H0y = e8L.days;
      J0y = parseInt(e8L.inputs[J8v], 10);

      if (!J0y && J0y !== 0) {
        J0y = H0y;
      }

      if (Z8L.length < e8L.days + 1) {
        e8L.error = !!{};
        return;
      }

      n0y = 0;
      g0y = 0;
      h0y = 0;
      i0y = 0;

      for (var Y8L = Math.max(1, e8L.startFrom); Y8L < Z8L.length; Y8L++) {
        V8v = "+DI";
        V8v += " ";
        K8v = "_s";
        K8v += "m";
        K8v += "+D";
        K8v += "M ";
        X8L = Z8L[Y8L];
        c0y = Math.max(0, X8L.High - Z8L[Y8L - 1].High);
        K0y = Math.max(+"0", Z8L[Y8L - 1].Low - X8L.Low);

        if (c0y > K0y) {
          K0y = 0;
        } else if (K0y > c0y) {
          c0y = +"0";
        } else {
          c0y = K0y = 0;
        }

        if (Y8L <= H0y) {
          Q8v = "T";
          Q8v += "rue Ra";
          Q8v += "n";
          Q8v += "ge ";
          g0y += c0y;
          h0y += K0y;
          n0y += X8L[Q8v + e8L.name];
        } else {
          r8v = "True R";
          r8v += "a";
          r8v += "ng";
          r8v += "e ";
          l8v = "_";
          l8v += "s";
          l8v += "mTR";
          l8v += " ";
          R8v = "_s";
          R8v += "m";
          R8v += "-DM ";
          e6bh.N3mK(24);
          var O8uu = e6bh.e3mK(8, 8, 1, 10, 7);
          e6bh.i3mK(1);
          var a8uu = e6bh.e3mK(16, 17);
          g0y = Z8L[Y8L - O8uu]["_sm+DM " + e8L.name] * (H0y - a8uu) / H0y + c0y;
          e6bh.i3mK(115);
          var u8uu = e6bh.E3mK(14, 5, 15, 15, 12);
          e6bh.i3mK(16);
          var X8uu = e6bh.E3mK(5, 4);
          h0y = Z8L[Y8L - u8uu][R8v + e8L.name] * (H0y - X8uu) / H0y + K0y;
          e6bh.i3mK(23);
          var p8uu = e6bh.e3mK(958836878, 15341390030, 17);
          n0y = Z8L[Y8L - ("1" >> p8uu)][l8v + e8L.name] * (H0y - +"1") / H0y + X8L[r8v + e8L.name];
        }

        X8L[K8v + e8L.name] = g0y;
        X8L["_sm-DM " + e8L.name] = h0y;
        X8L["_smTR " + e8L.name] = n0y;
        if (Y8L < H0y) continue;
        e6bh.i3mK(116);
        j0y = e6bh.e3mK("100", 0, n0y, g0y);
        e6bh.N3mK(117);
        B0y = e6bh.E3mK(n0y, h0y, 100);
        e6bh.i3mK(58);
        var Y8uu = e6bh.e3mK(808003121, 808003103, 808003121);
        U0y = ("100" << Y8uu) * Math.abs(j0y - B0y) / (j0y + B0y);
        X8L[V8v + e8L.name] = j0y;
        X8L["-DI " + e8L.name] = B0y;

        if (e8L.inputs.Series !== !!"" && J0y) {
          if (Y8L < H0y + J0y - 1) {
            if (Y8L == e8L.startFrom) {
              for (var O0y = H0y; O0y < e8L.startFrom; O0y++) {
                u8v = "+DI";
                u8v += " ";
                a8v = "-DI";
                a8v += " ";
                O8v = "+";
                O8v += "D";
                O8v += "I";
                O8v += " ";
                e6bh.i3mK(23);
                var s6Vu = e6bh.E3mK(113, 2160, 20);
                i0y += s6Vu * Math.abs(Z8L[O0y][O8v + e8L.name] - Z8L[O0y][a8v + e8L.name]) / (Z8L[O0y][u8v + e8L.name] + Z8L[O0y]["-DI " + e8L.name]);
              }
            }

            i0y += U0y;
          } else if (Y8L == H0y + J0y - 1) {
            e6bh.i3mK(10);
            X8L["ADX " + e8L.name] = e6bh.e3mK(i0y, J0y);
          } else {
            X8v = "A";
            X8v += "DX ";
            e6bh.N3mK(36);
            var H6Vu = e6bh.E3mK(3, 0, 2, 1);
            X8L[X8v + e8L.name] = (Z8L[Y8L - +"1"]["ADX " + e8L.name] * (J0y - H6Vu) + U0y) / J0y;
          }
        }

        if (e8L.inputs.Histogram) {
          Y8v = "-";
          Y8v += "DI ";
          p8v = "+D";
          p8v += "I";
          p8v += " ";
          E0y = e8L.name + "_hist";
          if (!X8L["+DI " + e8L.name] && X8L[p8v + e8L.name] !== 0) continue;
          if (!X8L[Y8v + e8L.name] && X8L["-DI " + e8L.name] !== 0) continue;
          X8L[E0y] = X8L["+DI " + e8L.name] - X8L["-DI " + e8L.name];

          if (e8L.inputs.Series === !1) {
            s6i = "-";
            s6i += "DI";
            s6i += " ";
            X8L["+DI " + e8L.name] = null;
            X8L[s6i + e8L.name] = null;
          }

          e8L.outputMap[E0y] = "";
        }
      }
    };

    W8L.Studies.displayADX = function (p0y, G0y, S0y) {
      var v0y, H6i, q0y, D0y, N0y, x0y, k0y, t0y;
      v0y = G0y.underlay ? "0.3" * 1 : G0y.inputs.Series ? +"0.4" : 1;

      if (G0y.inputs.Series && G0y.inputs.Shading) {
        H6i = "+";
        H6i += "D";
        H6i += "I";
        H6i += " ";
        q0y = H6i + G0y.name;
        D0y = "-DI " + G0y.name;
        N0y = W8L.Studies.determineColor(G0y.outputs[G0y.outputMap[q0y]]);
        x0y = W8L.Studies.determineColor(G0y.outputs[G0y.outputMap[D0y]]);
        k0y = G0y.getYAxis(p0y);
        t0y = {
          topBand: q0y,
          bottomBand: D0y,
          topColor: N0y,
          bottomColor: x0y,
          skipTransform: p0y.panels[G0y.panel].name != G0y.chart.name,
          topAxis: k0y,
          bottomAxis: k0y,
          opacity: +"0.3"
        };

        if (!G0y.highlight && p0y.highlightedDraggable) {
          t0y.opacity *= 0.3;
        }

        W8L.fillIntersecting(p0y, G0y.panel, t0y);
      }

      if (G0y.inputs.Histogram) {
        W8L.Studies.createHistogram(p0y, G0y, S0y, !{}, v0y);
      }

      if (G0y.inputs.Series !== !!"") {
        W8L.Studies.displaySeriesAsLine(p0y, G0y, S0y);
      } else if (!G0y.inputs.Series && !G0y.inputs.Histogram) {
        p0y.displayErrorAsWatermark(G0y.panel, p0y.translateIf(G0y.name) + ": " + p0y.translateIf("Nothing to display"));
      }
    };

    W8L.Studies.studyLibrary = W8L.extend(W8L.Studies.studyLibrary, {
      ADX: {
        name: "ADX/DMS",
        calculateFN: W8L.Studies.calculateADX,
        seriesFN: W8L.Studies.displayADX,
        inputs: {
          Period: 14,
          "Smoothing Period": 14,
          Series: !"",
          Shading: ![],
          Histogram: !!""
        },
        outputs: {
          "+DI": "#00FF00",
          "-DI": "#FF0000",
          ADX: "auto",
          "Positive Bar": "#00DD00",
          "Negative Bar": "#FF0000"
        }
      }
    });
  }
};

q2B = function q2B(a0y) {
  var V0y, Z6i, I6i, N6i;
  V0y = typeof _CIQ !== "undefined" ? _CIQ : a0y.CIQ;
  T5VV.k7Kh();

  if (!V0y.Studies) {
    console.error("alligator feature requires first activating studies feature.");
  } else {
    Z6i = "#FF";
    Z6i += "0000";
    I6i = "#0";
    I6i += "0";
    I6i += "00FF";
    N6i = "A";
    N6i += "lli";
    N6i += "ga";
    N6i += "tor";

    V0y.Studies.calculateAlligator = function (A0y, z0y) {
      var r6bh = T5VV;
      var F3v, n3v, c3v, R0y, m0y, U6i, v6i, t6i, S6i, P0y, T0y, s0y, w6i, L6i;
      F3v = 1610106494;
      r6bh.i3mK(15);
      n3v = r6bh.e3mK(1526476128, "1020898704");
      c3v = 2;

      for (var q3v = 1; r6bh.Y6v(q3v.toString(), q3v.toString().length, +"73944") !== F3v; q3v++) {
        R0y = {
          J: Number(z0y.inputs["Jaw Period"]),
          T: Number(z0y.inputs["Teeth Period"]),
          L: Number(z0y.inputs["Lips Period"])
        };
        c3v += 2;
      }

      r6bh.k7Kh();

      if (r6bh.s1v(c3v.toString(), c3v.toString().length, 95345) !== n3v) {
        R0y = {
          J: Number(z0y.inputs["Jaw Period"]),
          T: Number(z0y.inputs["Jaw Period"]),
          L: Number(z0y.inputs["Jaw Period"])
        };
      }

      m0y = z0y.chart.scrubbed;

      if (m0y.length < Math.max(R0y.J, R0y.T, R0y.L) + 1) {
        z0y.error = !![];
        return;
      }

      if (z0y.type === "Gator" || z0y.inputs["Show Lines"]) {
        U6i = "Lips";
        U6i += " Offset";
        v6i = "well";
        v6i += "es wilder";
        V0y.Studies.MA("welles wilder", R0y.J, "hl/2", z0y.inputs["Jaw Offset"], "Jaw", A0y, z0y);
        V0y.Studies.MA(v6i, R0y.T, "hl/2", z0y.inputs["Teeth Offset"], "Teeth", A0y, z0y);
        V0y.Studies.MA("welles wilder", R0y.L, "hl/2", z0y.inputs[U6i], "Lips", A0y, z0y);
      }

      for (var M0y = z0y.startFrom; M0y < m0y.length; M0y++) {
        if (!m0y[M0y]) continue;

        if (z0y.type == "Gator") {
          t6i = "_h";
          t6i += "is";
          t6i += "t";
          t6i += "2";
          S6i = "L";
          S6i += "ip";
          S6i += "s ";
          P0y = m0y[M0y]["Jaw " + z0y.name];
          T0y = m0y[M0y][S6i + z0y.name];
          s0y = m0y[M0y]["Teeth " + z0y.name];

          if (s0y || s0y === 0) {
            w6i = "_";
            w6i += "h";
            w6i += "ist";
            w6i += "2";

            if (P0y || P0y === 0) {
              r6bh.N3mK(1);
              m0y[M0y][z0y.name + "_hist1"] = Math.abs(r6bh.E3mK(s0y, P0y));
            }

            if (T0y || T0y === ("0" & 2147483647)) {
              r6bh.i3mK(1);
              m0y[M0y][z0y.name + w6i] = -Math.abs(r6bh.E3mK(T0y, s0y));
            }
          }

          z0y.outputMap = {};
          z0y.outputMap[z0y.name + "_hist1"] = "";
          z0y.outputMap[z0y.name + t6i] = "";
        }

        if (z0y.inputs["Show Fractals"]) {
          if (!m0y[M0y - 2] || !m0y[M0y - 1] || !m0y[M0y] || !m0y[M0y + 1] || !m0y[M0y + 2]) continue;

          if (m0y[M0y - 2].High && m0y[M0y - 1].High && m0y[M0y].High && m0y[M0y + 1].High && m0y[M0y + +"2"].High) {
            if (m0y[M0y].High > m0y[M0y - 1].High && m0y[M0y].High > m0y[M0y - ("2" << 1028101696)].High && m0y[M0y].High > m0y[M0y + 1].High && m0y[M0y].High > m0y[M0y + 2].High) {
              L6i = "Fract";
              L6i += "al ";
              L6i += "H";
              L6i += "igh ";
              m0y[M0y][L6i + z0y.name] = 1;
            }
          }

          if (m0y[M0y - +"2"].Low && m0y[M0y - 1].Low && m0y[M0y].Low && m0y[M0y + 1].Low && m0y[M0y + 2].Low) {
            if (m0y[M0y].Low < m0y[M0y - 1].Low && m0y[M0y].Low < m0y[M0y - 2].Low && m0y[M0y].Low < m0y[M0y + 1].Low && m0y[M0y].Low < m0y[M0y + +"2"].Low) {
              m0y[M0y]["Fractal Low " + z0y.name] = 1;
            }
          }
        }
      }
    };

    V0y.Studies.displayAlligator = function (y0y, L0y, f0y) {
      var x6i, C0y, j6i;
      x6i = "Sh";
      T5VV.d7Kh();

      function I0y(d0y, F0y) {
        var r0y, u0y;
        u0y = y0y.chart.panel.yAxis.flipped;

        if (d0y == "high") {
          C0y.fillStyle = y0y.defaultColor;
          C0y.textBaseline = u0y ? "top" : "bottom";
          r0y = y0y.pixelFromPrice(f0y[F0y].High);
          C0y.fillText(u0y ? (8040, 523.16) == 7990 ? 0x1d8a : "\u25BC" : (1600, 964.43) >= 3560 ?  true ? (0x402, 8.28e+3) : undefined : "\u25B2", y0y.pixelFromBar(l0y, y0y.chart) - C0y.measureText("\u25B2").width / 2 + 1, u0y ? r0y + +"5" : r0y - 5);
          ;
        } else if (d0y == "low") {
          C0y.fillStyle = y0y.defaultColor;
          C0y.textBaseline = u0y ? "bottom" : "top";
          r0y = y0y.pixelFromPrice(f0y[F0y].Low);
          C0y.fillText(u0y ? "\u25B2" : (7098, +"995.22") <= (288.04, 729.22) ? !!"" : +"906" < (305.08, 9857) ? "\u25BC" : 0x10d0, y0y.pixelFromBar(l0y, y0y.chart) - C0y.measureText(649.27 !== (446.56, 496.27) ? "\u25BC" : 9900 > (975.33, "718.74" * 1) ? (0x17dc, "P") : 0x1855).width / 2 + 1, u0y ? r0y - 5 : r0y + 5);
          ;
        }
      }

      x6i += "ow";
      x6i += " Lin";
      x6i += "es";
      C0y = L0y.getContext(y0y);

      if (L0y.inputs[x6i]) {
        V0y.Studies.displaySeriesAsLine(y0y, L0y, f0y);
      }

      if (L0y.inputs["Show Fractals"]) {
        y0y.startClip();
        C0y.globalAlpha = L0y.underlay ? 0.3 : 1;

        if (!L0y.highlight && y0y.highlightedDraggable) {
          C0y.globalAlpha *= +"0.3";
        }

        for (var l0y = 2; l0y < f0y.length - +"2"; l0y++) {
          if (f0y[l0y]) {
            j6i = "hi";
            j6i += "g";
            j6i += "h";

            if (f0y[l0y]["Fractal High " + L0y.name]) {
              I0y(j6i, l0y);
            }

            if (f0y[l0y]["Fractal Low " + L0y.name]) {
              I0y("low", l0y);
            }
          }
        }

        y0y.endClip();
      }
    };

    V0y.Studies.displayGator = function (w0y, Q0y, J1y) {
      var m6bh = T5VV;
      var e6i, o6i, H1y, b0y, c1y, K1y, Y0y, O1y, n1y, X0y, Z0y, M6i;
      e6i = "stx_hist";
      e6i += "ogram";
      o6i = "Inc";
      o6i += "r";
      o6i += "easi";
      o6i += "ng Bar";
      H1y = w0y.panels[Q0y.panel];
      b0y = Q0y.getContext(w0y);
      c1y = Q0y.getYAxis(w0y);
      K1y = w0y.pixelFromPrice(0, H1y, c1y);
      m6bh.d7Kh();
      m6bh.N3mK(23);
      var v6Vu = m6bh.E3mK(8, 22, 3);
      Y0y = w0y.layout.candleWidth - v6Vu;

      if (Y0y < 2) {
        Y0y = 1;
      }

      O1y = V0y.Studies.determineColor(Q0y.outputs[o6i]);
      n1y = V0y.Studies.determineColor(Q0y.outputs["Decreasing Bar"]);
      w0y.canvasColor(e6i);

      if (!Q0y.underlay) {
        b0y.globalAlpha = 1;
      }

      b0y.fillStyle = "#CCCCCC";
      w0y.startClip(Q0y.panel);

      if (!Q0y.highlight && w0y.highlightedDraggable) {
        b0y.globalAlpha *= 0.3;
      }

      for (var e0y = 0; e0y < J1y.length; e0y++) {
        X0y = J1y[e0y];
        m6bh.N3mK(1);
        Z0y = J1y[m6bh.e3mK(1, e0y)];
        if (!X0y) continue;

        for (var W0y = 1; W0y <= 2; W0y++) {
          M6i = "_h";
          M6i += "ist";

          if (!Z0y) {
            Z0y = w0y.getPreviousBar(w0y.chart, Q0y.name + M6i + W0y, e0y);
          }

          if (!Z0y) {
            b0y.fillStyle = "#CCCCCC";
          } else if (Math.abs(Z0y[Q0y.name + "_hist" + W0y]) < Math.abs(X0y[Q0y.name + "_hist" + W0y])) {
            b0y.fillStyle = O1y;
          } else if (Math.abs(Z0y[Q0y.name + "_hist" + W0y]) > Math.abs(X0y[Q0y.name + "_hist" + W0y])) {
            b0y.fillStyle = n1y;
          }

          if (X0y.candleWidth) {
            Y0y = Math.floor(Math.max(1, X0y.candleWidth - 2));
          }

          b0y.fillRect(Math.floor(w0y.pixelFromBar(e0y, H1y.chart) - Y0y / 2), Math.floor(K1y), Math.floor(Y0y), Math.floor(w0y.pixelFromPrice(X0y[Q0y.name + "_hist" + W0y], H1y, c1y) - K1y));
        }
      }

      w0y.endClip();
    };

    V0y.Studies.studyLibrary = V0y.extend(V0y.Studies.studyLibrary, {
      Alligator: {
        name: N6i,
        overlay: !!{},
        seriesFN: V0y.Studies.displayAlligator,
        calculateFN: V0y.Studies.calculateAlligator,
        inputs: {
          "Show Lines": !![],
          "Jaw Period": 13,
          "Jaw Offset": 8,
          "Teeth Period": +"8",
          "Teeth Offset": 5,
          "Lips Period": 5,
          "Lips Offset": 3,
          "Show Fractals": !{}
        },
        outputs: {
          Jaw: I6i,
          Teeth: "#FF0000",
          Lips: "#00DD00"
        }
      },
      Gator: {
        name: "Gator Oscillator",
        seriesFN: V0y.Studies.displayGator,
        calculateFN: V0y.Studies.calculateAlligator,
        inputs: {
          "Jaw Period": 13,
          "Jaw Offset": 8,
          "Teeth Period": 8,
          "Teeth Offset": 5,
          "Lips Period": 5,
          "Lips Offset": 3
        },
        outputs: {
          "Increasing Bar": "#00DD00",
          "Decreasing Bar": Z6i
        },
        centerline: 0
      }
    });
  }
};

D2B = function D2B(h1y) {
  var i6i, g1y, d6i, c6i, n6i;
  i6i = "u";
  i6i += "ndefined";
  g1y = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== i6i ? _CIQ : h1y.CIQ;

  if (!g1y.Studies) {
    console.error("aroon feature requires first activating studies feature.");
  } else {
    d6i = "a";
    d6i += "uto";
    c6i = "0 to ";
    c6i += "10";
    c6i += "0";
    n6i = "Ar";
    n6i += "oon";

    g1y.Studies.calculateAroon = function (N1y, i1y) {
      var b6bh = T5VV;
      var o1y, G1y, p1y, B1y, U1y, D1y, E1y, F6i, j1y, k1y, t1y, S1y, v1y;
      o1y = i1y.chart.scrubbed;

      if (o1y.length < i1y.days + ("1" & 2147483647)) {
        i1y.error = !![];
        return;
      }

      G1y = 0;
      p1y = 0;
      b6bh.k7Kh();
      B1y = null;
      U1y = null;

      if (i1y.startFrom > 0) {
        b6bh.i3mK(118);
        var U6Vu = b6bh.E3mK(0, 101, 12, 16, 7);
        D1y = o1y[i1y.startFrom - U6Vu]["_state " + i1y.name];

        if (D1y) {
          G1y = D1y[0];
          p1y = D1y[1];
          B1y = D1y[2];
          U1y = D1y[3];
        }
      }

      for (var q1y = i1y.startFrom; q1y < o1y.length; q1y++) {
        F6i = "_state";
        F6i += " ";
        j1y = o1y[q1y];
        if (j1y.futureTick) break;

        if (B1y === null) {
          B1y = j1y.High;
        }

        if (U1y === null) {
          U1y = j1y.Low;
        }

        B1y = Math.max(B1y, j1y.High);

        if (B1y == j1y.High) {
          G1y = 0;
        } else {
          G1y++;

          if (G1y > i1y.days) {
            B1y = j1y.High;
            G1y = 0;

            for (E1y = 1; E1y <= i1y.days; E1y++) {
              B1y = Math.max(B1y, o1y[q1y - E1y].High);

              if (B1y == o1y[q1y - E1y].High) {
                G1y = E1y;
              }
            }
          }
        }

        U1y = Math.min(U1y, j1y.Low);

        if (U1y == j1y.Low) {
          p1y = 0;
        } else {
          p1y++;

          if (p1y > i1y.days) {
            U1y = j1y.Low;
            p1y = 0;

            for (E1y = 1; E1y <= i1y.days; E1y++) {
              U1y = Math.min(U1y, o1y[q1y - E1y].Low);

              if (U1y == o1y[q1y - E1y].Low) {
                p1y = E1y;
              }
            }
          }
        }

        k1y = !isNaN(j1y.High);
        t1y = !isNaN(j1y.Low);
        b6bh.N3mK(58);
        var S6Vu = b6bh.E3mK(88, 92, 11);
        b6bh.i3mK(119);
        var w6Vu = b6bh.E3mK(2, 15, 15);
        S1y = S6Vu * (w6Vu - G1y / i1y.days);

        if (k1y) {
          j1y["Aroon Up " + i1y.name] = S1y;
        }

        b6bh.N3mK(119);
        var t6Vu = b6bh.e3mK(2, 11, 11);
        v1y = +"100" * (t6Vu - p1y / i1y.days);

        if (t1y) {
          j1y["Aroon Down " + i1y.name] = v1y;
        }

        if (k1y && t1y) {
          j1y["Aroon Oscillator " + i1y.name] = j1y["Aroon Up " + i1y.name] - j1y["Aroon Down " + i1y.name];
        }

        j1y[F6i + i1y.name] = [G1y, p1y, B1y, U1y];
      }
    };

    g1y.Studies.studyLibrary = g1y.extend(g1y.Studies.studyLibrary, {
      Aroon: {
        name: n6i,
        range: c6i,
        calculateFN: g1y.Studies.calculateAroon,
        outputs: {
          "Aroon Up": "#00DD00",
          "Aroon Down": "#FF0000"
        }
      },
      "Aroon Osc": {
        name: "Aroon Oscillator",
        calculateFN: g1y.Studies.calculateAroon,
        outputs: {
          "Aroon Oscillator": d6i
        }
      }
    });
  }
};

k2B = function k2B(V1y) {
  var n4Kh = T5VV;
  var N7v, I7v, Z7v, x1y, D6i, f6i, P6i, m6i, G6i, B6i;
  n4Kh.i3mK(15);
  N7v = -n4Kh.e3mK(95373664, "1180997017");
  I7v = -268703385;
  Z7v = 2;

  for (var F7v = 1; n4Kh.s1v(F7v.toString(), F7v.toString().length, "13521" * 1) !== N7v; F7v++) {
    x1y = !_CIQ != "" ? _CIQ : V1y.CIQ;
    Z7v += 2;
  }

  if (n4Kh.Y6v(Z7v.toString(), Z7v.toString().length, +"3754") !== I7v) {
    x1y = typeof _CIQ !== "undefined" ? _CIQ : V1y.CIQ;
  }

  n4Kh.d7Kh();

  if (!x1y.Studies) {
    console.error("atr feature requires first activating studies feature.");
  } else {
    D6i = "squarewa";
    D6i += "ve";
    f6i = "AT";
    f6i += "R ";
    f6i += "Trailing Stops";
    P6i = "a";
    P6i += "uto";
    m6i = "a";
    m6i += "ut";
    m6i += "o";
    G6i = "aut";
    G6i += "o";
    B6i = "Av";
    B6i += "er";
    B6i += "age ";
    B6i += "True Range";

    x1y.Studies.calculateATRBands = function (M1y, a1y) {
      var q6i, m1y;
      q6i = "Clos";
      q6i += "e";
      x1y.Studies.calculateStudyATR(M1y, a1y);
      m1y = a1y.inputs.Field;

      if (!m1y || m1y == "field") {
        m1y = q6i;
      }

      x1y.Studies.calculateGenericEnvelope(M1y, a1y, a1y.inputs.Shift, m1y, "ATR " + a1y.name);
    };

    x1y.Studies.calculateSTARCBands = function (R1y, z1y) {
      var h6i, J0v, Q0v, R0v, b6i;
      h6i = "A";
      h6i += "T";
      h6i += "R";
      h6i += " ";
      x1y.Studies.calculateStudyATR(R1y, z1y);
      J0v = 1785758445;
      Q0v = -1346163251;
      R0v = 2;

      for (var r0v = 1; n4Kh.s1v(r0v.toString(), r0v.toString().length, 9750) !== J0v; r0v++) {
        x1y.Studies.MA("_MA", z1y.inputs["_MA"], "_MA", "3" | 1, "_MA", R1y, z1y);
        R0v += +"2";
      }

      if (n4Kh.Y6v(R0v.toString(), R0v.toString().length, 73449) !== Q0v) {
        b6i = "simp";
        b6i += "l";
        b6i += "e";
        x1y.Studies.MA(b6i, z1y.inputs["MA Period"], "Close", 0, "_MA", R1y, z1y);
      }

      x1y.Studies.calculateGenericEnvelope(R1y, z1y, z1y.inputs.Multiplier, "_MA " + z1y.name, h6i + z1y.name);
    };

    x1y.Studies.calculateATRStops = function (u1y, s1y) {
      var y1y, L1y, z6i, P1y, I1y, T1y, A1y, l1y, f1y, E6i;
      y1y = s1y.chart.scrubbed;
      n4Kh.d7Kh();

      if (!y1y) {
        return;
      }

      x1y.Studies.calculateStudyATR(u1y, s1y);
      L1y = s1y.inputs.HighLow;

      for (var C1y = Math.max(s1y.startFrom - 1, +"1"); C1y < y1y.length - 1; C1y++) {
        z6i = "Sell";
        z6i += " St";
        z6i += "ops";
        z6i += " ";
        P1y = y1y[C1y];
        n4Kh.i3mK(1);
        I1y = y1y[n4Kh.e3mK(1, C1y)];
        T1y = P1y["Buy Stops " + s1y.name];

        if (!T1y) {
          T1y = P1y[z6i + s1y.name];
        }

        if (!T1y) {
          T1y = 0;
        }

        if (!P1y || !I1y) continue;
        A1y = P1y.Close;
        l1y = A1y;
        f1y = P1y["ATR " + s1y.name] * s1y.inputs.Multiplier;

        if (P1y.Close > T1y && I1y.Close > T1y) {
          if (L1y) {
            A1y = P1y.High;
          }

          n4Kh.N3mK(1);
          l1y = Math.max(T1y, n4Kh.E3mK(f1y, A1y));
        } else if (P1y.Close <= T1y && I1y.Close <= T1y) {
          if (L1y) {
            A1y = P1y.Low;
          }

          n4Kh.i3mK(0);
          l1y = Math.min(T1y, n4Kh.e3mK(f1y, A1y));
        } else if (P1y.Close > T1y) {
          if (L1y) {
            A1y = P1y.High;
          }

          n4Kh.i3mK(1);
          l1y = n4Kh.E3mK(f1y, A1y);
        } else if (P1y.Close <= T1y) {
          if (L1y) {
            A1y = P1y.Low;
          }

          n4Kh.N3mK(0);
          l1y = n4Kh.E3mK(f1y, A1y);
        }

        if (A1y <= l1y) {
          E6i = "Sell Sto";
          E6i += "ps ";
          n4Kh.i3mK(0);
          y1y[n4Kh.e3mK(1, C1y)]["Buy Stops " + s1y.name] = l1y;
          n4Kh.i3mK(0);
          delete y1y[n4Kh.E3mK(1, C1y)][E6i + s1y.name];
        } else if (A1y > l1y) {
          n4Kh.N3mK(120);
          y1y[n4Kh.E3mK("1", C1y)]["Sell Stops " + s1y.name] = l1y;
          n4Kh.N3mK(0);
          delete y1y[n4Kh.E3mK(1, C1y)]["Buy Stops " + s1y.name];
        }

        n4Kh.N3mK(0);
        y1y[n4Kh.e3mK(1, C1y)]["All Stops " + s1y.name] = l1y;
      }

      s1y.referenceOutput = "All Stops";
      s1y.outputMap = {};
      s1y.outputMap["All Stops " + s1y.name] = "";
    };

    x1y.Studies.studyLibrary = x1y.extend(x1y.Studies.studyLibrary, {
      ATR: {
        name: B6i,
        calculateFN: x1y.Studies.calculateStudyATR,
        outputs: {
          ATR: "auto"
        }
      },
      "ATR Bands": {
        name: "ATR Bands",
        overlay: !!{},
        seriesFN: x1y.Studies.displayChannel,
        calculateFN: x1y.Studies.calculateATRBands,
        inputs: {
          Period: +"5",
          Field: "field",
          Shift: 3,
          "Channel Fill": !![]
        },
        outputs: {
          "ATR Bands Top": "auto",
          "ATR Bands Bottom": G6i,
          "ATR Bands Channel": m6i
        },
        attributes: {
          Shift: {
            min: "0.1" - 0,
            step: 0.1
          }
        }
      },
      "STARC Bands": {
        name: "STARC Bands",
        overlay: !"",
        seriesFN: x1y.Studies.displayChannel,
        calculateFN: x1y.Studies.calculateSTARCBands,
        inputs: {
          Period: 15,
          "MA Period": 5,
          Multiplier: 1.3,
          "Channel Fill": !!{}
        },
        outputs: {
          "STARC Bands Top": P6i,
          "STARC Bands Median": "auto",
          "STARC Bands Bottom": "auto"
        },
        attributes: {
          Multiplier: {
            min: 0.1,
            step: 0.1
          }
        }
      },
      "ATR Trailing Stop": {
        name: f6i,
        overlay: !0,
        seriesFN: x1y.Studies.displayPSAR2,
        calculateFN: x1y.Studies.calculateATRStops,
        inputs: {
          Period: 21,
          Multiplier: 3,
          "Plot Type": ["points", D6i],
          HighLow: !"1"
        },
        outputs: {
          "Buy Stops": "#FF0000",
          "Sell Stops": "#00FF00"
        },
        attributes: {
          Multiplier: {
            min: +"0.1",
            step: 0.1
          }
        }
      }
    });
  }
};

t2B = function t2B(d1y) {
  T5VV.k7Kh();
  var r1y, y6i, R6i, Q6i, J6i;
  r1y = typeof _CIQ !== "undefined" ? _CIQ : d1y.CIQ;

  if (!r1y.Studies) {
    y6i = "awesomeOs";
    y6i += "cillator fe";
    y6i += "ature requires first ac";
    y6i += "tivating studies feature.";
    console.error(y6i);
  } else {
    R6i = "#F";
    R6i += "F0";
    R6i += "00";
    R6i += "0";
    Q6i = "#";
    Q6i += "00DD";
    Q6i += "0";
    Q6i += "0";
    J6i = "A";
    J6i += "w";
    J6i += "esome Oscillator";

    r1y.Studies.calculateAwesomeOscillator = function (W1y, F1y) {
      var W6i, C6i, k6i, Q1y, A6i;
      W6i = "_h";
      W6i += "i";
      W6i += "s";
      T5VV.k7Kh();
      W6i += "t";
      C6i = "_";
      C6i += "MA";
      C6i += "3";
      C6i += "4";
      k6i = "s";
      k6i += "imp";
      k6i += "le";
      Q1y = F1y.chart.scrubbed;

      if (Q1y.length < 33) {
        F1y.error = !!1;
        return;
      }

      r1y.Studies.MA("simple", 5, "hl/2", 0, "_MA5", W1y, F1y);
      r1y.Studies.MA(k6i, +"34", "hl/2", +"0", C6i, W1y, F1y);

      for (var w1y = Math.max(F1y.startFrom, 33); w1y < Q1y.length; w1y++) {
        A6i = "_";
        A6i += "h";
        A6i += "i";
        A6i += "st";
        if (!Q1y[w1y]) continue;
        Q1y[w1y][F1y.name + A6i] = Q1y[w1y]["_MA5 " + F1y.name] - Q1y[w1y]["_MA34 " + F1y.name];
      }

      F1y.outputMap = {};
      F1y.outputMap[F1y.name + W6i] = "";
    };

    r1y.Studies.displayAwesomeOscillator = function (e1y, b1y, K2y) {
      var c2y, X1y, O2y, n2y, H2y, g2y, h2y, T6i, g6i, Z1y, J2y;
      c2y = e1y.panels[b1y.panel];
      X1y = b1y.getContext(e1y);
      O2y = b1y.getYAxis(e1y);
      n2y = e1y.pixelFromPrice(0, c2y, O2y);
      T5VV.i3mK(121);
      var L6Vu = T5VV.E3mK(12, 19, 9, 8, 8);
      H2y = e1y.layout.candleWidth - L6Vu;

      if (H2y < +"2") {
        H2y = 1;
      }

      g2y = r1y.Studies.determineColor(b1y.outputs["Increasing Bar"]);
      h2y = r1y.Studies.determineColor(b1y.outputs["Decreasing Bar"]);
      e1y.canvasColor("stx_histogram");

      if (!b1y.underlay) {
        X1y.globalAlpha = 1;
      }

      X1y.fillStyle = "#CCCCCC";
      e1y.startClip(b1y.panel);

      if (!b1y.highlight && e1y.highlightedDraggable) {
        X1y.globalAlpha *= +"0.3";
      }

      for (var Y1y = 0; Y1y < K2y.length; Y1y++) {
        T6i = "_his";
        T6i += "t";
        g6i = "_";
        g6i += "hi";
        g6i += "s";
        g6i += "t";
        Z1y = K2y[Y1y];
        T5VV.N3mK(1);
        J2y = K2y[T5VV.E3mK(1, Y1y)];

        if (!J2y) {
          J2y = e1y.getPreviousBar(e1y.chart, b1y.name + "_hist", Y1y);
        }

        if (!Z1y) continue;
        if (!J2y) ;else if (J2y[b1y.name + "_hist"] < Z1y[b1y.name + "_hist"]) {
          X1y.fillStyle = g2y;
        } else if (J2y[b1y.name + g6i] > Z1y[b1y.name + "_hist"]) {
          X1y.fillStyle = h2y;
        }

        if (Z1y.candleWidth) {
          H2y = Math.floor(Math.max(1, Z1y.candleWidth - 2));
        }

        X1y.fillRect(Math.floor(e1y.pixelFromBar(Y1y, c2y.chart) - H2y / 2), Math.floor(n2y), Math.floor(H2y), Math.floor(e1y.pixelFromPrice(Z1y[b1y.name + T6i], c2y, O2y) - n2y));
      }

      e1y.endClip();
    };

    r1y.Studies.studyLibrary = r1y.extend(r1y.Studies.studyLibrary, {
      Awesome: {
        name: J6i,
        seriesFN: r1y.Studies.displayAwesomeOscillator,
        calculateFN: r1y.Studies.calculateAwesomeOscillator,
        inputs: {},
        outputs: {
          "Increasing Bar": Q6i,
          "Decreasing Bar": R6i
        }
      }
    });
  }
};

S2B = function S2B(j2y) {
  var l6i, i2y;
  l6i = "und";
  l6i += "efi";
  l6i += "ned";
  i2y = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== l6i ? _CIQ : j2y.CIQ;

  if (!i2y.Studies) {
    console.error("balanceOfPower feature requires first activating studies feature.");
  } else {
    i2y.Studies.calculateBalanceOfPower = function (G2y, B2y) {
      var V6i, K6i, E2y, r6i, U2y;
      V6i = "R";
      V6i += "es";
      V6i += "ul";
      V6i += "t";
      K6i = "Moving ";
      K6i += "Average Type";
      E2y = B2y.chart.scrubbed;

      if (E2y.length < B2y.days + 1) {
        B2y.error = !0;
        return;
      }

      for (var o2y = B2y.startFrom; o2y < E2y.length; o2y++) {
        r6i = "_";
        r6i += "Rati";
        r6i += "o";
        r6i += " ";
        U2y = E2y[o2y];
        U2y["_Ratio " + B2y.name] = U2y.Close - U2y.Open;

        if (U2y.High - U2y.Low !== 0) {
          U2y[r6i + B2y.name] /= U2y.High - U2y.Low;
        }
      }

      i2y.Studies.MA(B2y.inputs[K6i], B2y.days, "_Ratio " + B2y.name, "0" << 714543648, V6i, G2y, B2y);
    };

    i2y.Studies.studyLibrary = i2y.extend(i2y.Studies.studyLibrary, {
      "Bal Pwr": {
        name: "Balance of Power",
        range: "-1 to 1",
        centerline: "0" - 0,
        calculateFN: i2y.Studies.calculateBalanceOfPower,
        inputs: {
          Period: 14,
          "Moving Average Type": "ma"
        }
      }
    });
  }
};

v2B = function v2B(q2y) {
  var p2y, v1i, H1i, s1i, Y6i, p6i, X6i;
  p2y = typeof _CIQ !== "undefined" ? _CIQ : q2y.CIQ;
  T5VV.k7Kh();

  if (!p2y.Studies) {
    console.error("bollinger feature requires first activating studies feature.");
  } else {
    v1i = "m";
    v1i += "a";
    H1i = "Bo";
    H1i += "llinger Bandwidt";
    H1i += "h";
    s1i = "au";
    s1i += "t";
    s1i += "o";
    Y6i = "f";
    Y6i += "ield";
    p6i = "Bo";
    p6i += "llinger";
    p6i += " %";
    p6i += "b";
    X6i = "au";
    X6i += "t";
    X6i += "o";

    p2y.Studies.calculateBollinger = function (t2y, D2y) {
      var u6i, a6i, O6i, k2y;
      u6i = "_ST";
      u6i += "D Dev ";
      a6i = "_";
      a6i += "M";
      a6i += "A";
      a6i += " ";
      O6i = "S";
      O6i += "tandard Deviations";
      k2y = D2y.inputs.Field;

      if (!k2y || k2y == "field") {
        k2y = "Close";
      }

      p2y.Studies.MA(D2y.inputs["Moving Average Type"], D2y.days, k2y, 0, "_MA", t2y, D2y);
      D2y.std = new p2y.Studies.StudyDescriptor(D2y.name, "STD Dev", D2y.panel);
      D2y.std.chart = D2y.chart;
      D2y.std.startFrom = D2y.startFrom;
      D2y.std.days = D2y.days;
      D2y.std.inputs = {
        Field: k2y,
        "Standard Deviations": "1" & 2147483647,
        Type: D2y.inputs["Moving Average Type"]
      };
      D2y.std.outputs = {
        "_STD Dev": null
      };
      p2y.Studies.calculateStandardDeviation(t2y, D2y.std);
      p2y.Studies.calculateGenericEnvelope(t2y, D2y, D2y.inputs[O6i], a6i + D2y.name, u6i + D2y.name);

      if (D2y.type == "Boll %b") {
        D2y.zoneOutput = "%b";
      }
    };

    p2y.Studies.studyLibrary = p2y.extend(p2y.Studies.studyLibrary, {
      "Bollinger Bands": {
        name: "Bollinger Bands",
        overlay: !!1,
        calculateFN: p2y.Studies.calculateBollinger,
        seriesFN: p2y.Studies.displayChannel,
        inputs: {
          Period: "20" | 0,
          Field: "field",
          "Standard Deviations": 2,
          "Moving Average Type": "ma",
          "Channel Fill": !!"1"
        },
        outputs: {
          "Bollinger Bands Top": X6i,
          "Bollinger Bands Median": "auto",
          "Bollinger Bands Bottom": "auto"
        },
        attributes: {
          "Standard Deviations": {
            min: 0.1,
            step: 0.1
          }
        }
      },
      "Boll %b": {
        name: p6i,
        calculateFN: p2y.Studies.calculateBollinger,
        inputs: {
          Period: 20,
          Field: Y6i,
          "Standard Deviations": 2,
          "Moving Average Type": "ma"
        },
        outputs: {
          "%b": "auto"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !"",
            studyOverBoughtValue: 100,
            studyOverBoughtColor: s1i,
            studyOverSoldValue: "0" * 1,
            studyOverSoldColor: "auto"
          }
        },
        attributes: {
          "Standard Deviations": {
            min: 0.1,
            step: "0.1" * 1
          }
        }
      },
      "Boll BW": {
        name: H1i,
        calculateFN: p2y.Studies.calculateBollinger,
        inputs: {
          Period: 20,
          Field: "field",
          "Standard Deviations": 2,
          "Moving Average Type": v1i
        },
        outputs: {
          Bandwidth: "auto"
        },
        attributes: {
          "Standard Deviations": {
            min: "0.1" - 0,
            step: 0.1
          }
        }
      }
    });
  }
};

N2B = function N2B(v2y) {
  var S2y, w1i;
  S2y = typeof _CIQ !== "undefined" ? _CIQ : v2y.CIQ;
  T5VV.d7Kh();

  if (!S2y.Studies) {
    console.error("cci feature requires first activating studies feature.");
  } else {
    w1i = "Commodity Ch";
    w1i += "annel Index";

    S2y.Studies.calculateCCI = function (z2y, N2y) {
      var S1i, U1i, V2y, x2y, m2y;
      S1i = "M";
      S1i += "A";
      U1i = "s";
      U1i += "im";
      U1i += "ple";
      V2y = N2y.chart.scrubbed;

      if (V2y.length < N2y.days + 1) {
        N2y.error = !![];
        return;
      }

      S2y.Studies.MA(U1i, N2y.days, "hlc/3", 0, S1i, z2y, N2y);

      for (var a2y = Math.max(N2y.startFrom, N2y.days - ("1" >> 1411662208)); a2y < V2y.length; a2y++) {
        x2y = V2y[a2y];
        if (!x2y) continue;
        m2y = 0;

        for (var M2y = "0" & 2147483647; M2y < N2y.days; M2y++) {
          m2y += Math.abs(V2y[a2y - M2y]["hlc/3"] - x2y["MA " + N2y.name]);
        }

        m2y /= N2y.days;

        if (Math.abs(m2y) < 0.00000001) {
          x2y["Result " + N2y.name] = 0;
        } else {
          x2y["Result " + N2y.name] = (x2y["hlc/3"] - x2y["MA " + N2y.name]) / (("0.015" - 0) * m2y);
        }
      }
    };

    S2y.Studies.studyLibrary = S2y.extend(S2y.Studies.studyLibrary, {
      CCI: {
        name: w1i,
        calculateFN: S2y.Studies.calculateCCI,
        inputs: {
          Period: 20
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !![],
            studyOverBoughtValue: 100,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: -+"100",
            studyOverSoldColor: "auto"
          }
        },
        attributes: {
          Period: {
            min: 2
          }
        }
      }
    });
  }
};

x2B = function x2B(s2y) {
  var R2y, L1i;
  R2y = typeof _CIQ !== "undefined" ? _CIQ : s2y.CIQ;

  if (!R2y.Studies) {
    console.error("centerOfGravity feature requires first activating studies feature.");
  } else {
    L1i = "f";
    L1i += "ie";
    L1i += "l";
    L1i += "d";

    R2y.Studies.calculateCenterOfGravity = function (I2y, P2y) {
      var M6bh = T5VV;
      var t1i, T2y, A2y, L2y, l2y, f2y;
      t1i = "f";
      t1i += "ield";
      T2y = P2y.chart.scrubbed;

      if (T2y.length < P2y.days) {
        P2y.error = !"";
        return;
      }

      A2y = P2y.inputs.Field;

      if (!A2y || A2y == t1i) {
        A2y = "Close";
      }

      M6bh.k7Kh();

      for (var y2y = Math.max(P2y.startFrom, P2y.days - "1" * 1); y2y < T2y.length; y2y++) {
        L2y = 0;
        l2y = 0;

        for (var C2y = 0; C2y < P2y.days; C2y++) {
          M6bh.i3mK(1);
          f2y = T2y[M6bh.E3mK(C2y, y2y)][A2y];
          M6bh.N3mK(122);
          L2y -= M6bh.e3mK("1", f2y, 0, C2y);
          l2y += f2y;
        }

        if (l2y) {
          M6bh.i3mK(10);
          T2y[y2y]["Result " + P2y.name] = M6bh.E3mK(L2y, l2y);
        }
      }
    };

    R2y.Studies.studyLibrary = R2y.extend(R2y.Studies.studyLibrary, {
      COG: {
        name: "Center Of Gravity",
        calculateFN: R2y.Studies.calculateCenterOfGravity,
        inputs: {
          Period: 10,
          Field: L1i
        }
      }
    });
  }
};

V2B = function V2B(r2y) {
  var u2y, Z1i;
  u2y = typeof _CIQ !== "undefined" ? _CIQ : r2y.CIQ;

  if (!u2y.Studies) {
    console.error("chaikin feature requires first activating studies feature.");
  } else {
    Z1i = "Chaik";
    Z1i += "in Money Flow";

    u2y.Studies.calculateChaikinMoneyFlow = function (e2y, Q2y) {
      var d2y, W2y, w2y, b2y, j1i, x1i, M1i, o1i, e1i;
      d2y = Q2y.chart.scrubbed;

      if (d2y.length < Q2y.days) {
        Q2y.error = !0;
        return;
      }

      W2y = 0;
      w2y = 0;
      T5VV.N3mK(23);
      var x6Vu = T5VV.E3mK(2, 33, 17);
      b2y = d2y[Q2y.startFrom - x6Vu];

      if (b2y) {
        j1i = "_";
        j1i += "sumV ";
        x1i = "_sumMF";
        x1i += " ";

        if (b2y[x1i + Q2y.name]) {
          W2y = b2y["_sumMF " + Q2y.name];
        }

        if (b2y[j1i + Q2y.name]) {
          w2y = b2y["_sumV " + Q2y.name];
        }
      }

      for (var F2y = Q2y.startFrom; F2y < d2y.length; F2y++) {
        M1i = "_su";
        M1i += "mV ";
        o1i = "_";
        o1i += "MFV ";

        if (d2y[F2y].High == d2y[F2y].Low) {
          d2y[F2y]["_MFV " + Q2y.name] = 0;
        } else {
          d2y[F2y]["_MFV " + Q2y.name] = d2y[F2y].Volume * (+"2" * d2y[F2y].Close - d2y[F2y].High - d2y[F2y].Low) / (d2y[F2y].High - d2y[F2y].Low);
        }

        W2y += d2y[F2y][o1i + Q2y.name];
        w2y += d2y[F2y].Volume;

        if (F2y > Q2y.days - 1) {
          e1i = "Res";
          e1i += "ul";
          e1i += "t";
          e1i += " ";
          W2y -= d2y[F2y - Q2y.days]["_MFV " + Q2y.name];
          w2y -= d2y[F2y - Q2y.days].Volume;

          if (w2y) {
            T5VV.N3mK(10);
            d2y[F2y][e1i + Q2y.name] = T5VV.e3mK(W2y, w2y);
          }
        }

        d2y[F2y]["_sumMF " + Q2y.name] = W2y;
        d2y[F2y][M1i + Q2y.name] = w2y;
      }
    };

    u2y.Studies.calculateChaikinVolatility = function (J3y, X2y) {
      var N1i, Z2y, Y2y, H3y, I1i;
      N1i = "Rate ";
      N1i += "Of Cha";
      N1i += "nge";
      Z2y = X2y.chart.scrubbed;

      if (Z2y.length < X2y.days) {
        X2y.error = !0;
        return;
      }

      for (Y2y = X2y.startFrom; Y2y < Z2y.length; Y2y++) {
        if (Z2y[Y2y].futureTick) break;
        Z2y[Y2y]["_High-Low " + X2y.name] = Z2y[Y2y].High - Z2y[Y2y].Low;
      }

      u2y.Studies.MA(X2y.inputs["Moving Average Type"], X2y.days, "_High-Low " + X2y.name, "0" * 1, "_MA", J3y, X2y);
      H3y = X2y.inputs[N1i];

      if (!H3y) {
        H3y = X2y.days;
      }

      for (Y2y = Math.max(X2y.startFrom, H3y); Y2y < Z2y.length; Y2y++) {
        I1i = "_";
        I1i += "M";
        I1i += "A";
        I1i += " ";
        if (!Z2y[Y2y - H3y]["_MA " + X2y.name]) continue;
        if (Z2y[Y2y].futureTick) break;
        T5VV.N3mK(123);
        var j6Vu = T5VV.E3mK(95720, 1600, 3, 3, 20);
        T5VV.i3mK(0);
        var o6Vu = T5VV.e3mK(1, 0);
        Z2y[Y2y]["Result " + X2y.name] = j6Vu * (Z2y[Y2y][I1i + X2y.name] / Z2y[Y2y - H3y]["_MA " + X2y.name] - o6Vu);
      }
    };

    u2y.Studies.studyLibrary = u2y.extend(u2y.Studies.studyLibrary, {
      "Chaikin MF": {
        name: Z1i,
        calculateFN: u2y.Studies.calculateChaikinMoneyFlow,
        inputs: {
          Period: +"20"
        }
      },
      "Chaikin Vol": {
        name: "Chaikin Volatility",
        calculateFN: u2y.Studies.calculateChaikinVolatility,
        inputs: {
          Period: 14,
          "Rate Of Change": 2,
          "Moving Average Type": "ma"
        }
      }
    });
  }
};

a2B = function a2B(K3y) {
  var c3y, d1i;
  c3y = typeof _CIQ !== "undefined" ? _CIQ : K3y.CIQ;

  if (!c3y.Studies) {
    console.error("chande feature requires first activating studies feature.");
  } else {
    d1i = "au";
    d1i += "to";
    c3y.Studies.prettify.variable = "vma";
    c3y.Studies.movingAverage.conversions.vma = "variable";
    c3y.Studies.movingAverage.translations.variable = "Variable";
    c3y.Studies.movingAverage.typeMap.vma = "Variable";
    c3y.Studies.movingAverage.typeMap.variable = "Variable";

    c3y.Studies.calculateChandeForecast = function (j3y, O3y) {
      var i1i, n3y, g3y, i3y;
      i1i = "f";
      i1i += "ield";
      n3y = O3y.chart.scrubbed;

      if (n3y.length < O3y.days + 1) {
        O3y.error = !!1;
        return;
      }

      g3y = O3y.inputs.Field;

      if (!g3y || g3y == i1i) {
        g3y = "Close";
      }

      c3y.Studies.MA("time series", O3y.days, g3y, 0, "MA", j3y, O3y);

      for (var h3y = Math.max(1, O3y.startFrom); h3y < n3y.length; h3y++) {
        i3y = n3y[h3y][g3y];

        if (i3y && _typeof(i3y) == "object") {
          i3y = i3y[O3y.subField];
        }

        T5VV.N3mK(23);
        var e6Vu = T5VV.e3mK(82, 228, 4);
        T5VV.N3mK(31);
        var M6Vu = T5VV.E3mK(0, 13, 25, 13);
        n3y[h3y]["Result " + O3y.name] = e6Vu * (M6Vu - n3y[h3y]["MA " + O3y.name] / i3y);
      }
    };

    c3y.Studies.calculateChandeMomentum = function (x3y, B3y) {
      var P6bh = T5VV;
      var q3y, o3y, G3y, D3y, k3y, t3y, p3y, E3y, S3y, v3y;
      q3y = B3y.name;

      for (var N3y in B3y.outputs) {
        P6bh.i3mK(93);
        q3y = P6bh.E3mK(q3y, N3y, (9375, 736.18) <= (4980, 1950) ? " " : 0x1437);
      }

      o3y = B3y.chart.scrubbed;

      if (o3y.length < B3y.days + 1) {
        B3y.error = !![];
        return;
      }

      G3y = B3y.inputs.Field;

      if (!G3y || G3y == "field") {
        G3y = "Close";
      }

      P6bh.k7Kh();
      D3y = 0;
      k3y = 0;
      t3y = [];

      for (var U3y = B3y.startFrom - B3y.days + 1; U3y < o3y.length; U3y++) {
        if (U3y < 1) continue;
        p3y = o3y[U3y][G3y];
        P6bh.N3mK(1);
        E3y = o3y[P6bh.e3mK(1, U3y)][G3y];

        if (p3y && _typeof(p3y) == "object") {
          p3y = p3y.Close;
        }

        if (E3y && _typeof(E3y) == "object") {
          E3y = E3y.Close;
        }

        if (E3y === undefined) continue;
        P6bh.N3mK(1);
        S3y = P6bh.E3mK(E3y, p3y);
        t3y.push(S3y);
        D3y += S3y;
        k3y += Math.abs(S3y);

        if (t3y.length == B3y.days) {
          P6bh.i3mK(117);
          o3y[U3y][q3y] = P6bh.E3mK(k3y, D3y, 100);
          v3y = t3y.shift();
          D3y -= v3y;
          k3y -= Math.abs(v3y);
        }
      }
    };

    c3y.Studies.calculateMovingAverageVariable = function (r3y, V3y) {
      var N6bh = T5VV;
      var F1i, Q3y, z3y, f3y, s3y, R3y, P3y, M3y, a3y, m3y, T3y, l3y, I3y, L3y, c1i, n1i, A3y, F3y, y3y, u3y, C3y;
      F1i = "f";
      F1i += "ie";
      F1i += "l";
      F1i += "d";
      Q3y = V3y.inputs.Type;
      z3y = V3y.chart.scrubbed;
      N6bh.N3mK(124);
      var N6Vu = N6bh.E3mK(11, 2, 19, 20, 419);
      N6bh.i3mK(16);
      var I6Vu = N6bh.e3mK(14, 13);
      f3y = N6Vu / (V3y.days + I6Vu);
      s3y = null;
      R3y = V3y.name;

      for (var d3y in V3y.outputs) {
        N6bh.N3mK(93);
        R3y = N6bh.E3mK(R3y, d3y, 4783 !== "25.6" * 1 ? (309, "252.71" - 0) != 640.62 ? " " : (4.96, "L") : (!!{}, "L"));
      }

      P3y = V3y.inputs.Field;

      if (!P3y || P3y == F1i) {
        P3y = "Close";
      }

      V3y.cmo = new c3y.Studies.StudyDescriptor(V3y.name, "cmo", V3y.panel);
      V3y.cmo.chart = V3y.chart;
      V3y.cmo.days = 9;
      V3y.cmo.inputs = {
        Field: P3y
      };
      V3y.cmo.startFrom = V3y.startFrom;
      V3y.cmo.outputs = {
        _CMO: null
      };
      c3y.Studies.calculateChandeMomentum(r3y, V3y.cmo);
      M3y = parseInt(V3y.inputs.Offset, 10);

      if (isNaN(M3y)) {
        M3y = 0;
      }

      l3y = V3y.startFrom;
      I3y = M3y;

      for (a3y = V3y.startFrom - 1; a3y >= +"0"; a3y--) {
        m3y = z3y[a3y][R3y];
        if (!m3y && m3y !== +"0") continue;

        if (s3y === null) {
          s3y = m3y;
        }

        if (I3y <= "0" >> 1367207392) break;
        I3y--;
        l3y = a3y;
      }

      if (s3y === null) {
        s3y = l3y = 0;
      }

      L3y = [];

      for (a3y = l3y; a3y < z3y.length; a3y++) {
        c1i = "_";
        c1i += "CMO ";
        n1i = "ob";
        n1i += "ject";
        A3y = z3y[a3y];
        m3y = A3y[P3y];

        if (m3y && _typeof(m3y) == n1i) {
          m3y = m3y[V3y.subField];
        }

        F3y = a3y + M3y >= 0 && a3y + M3y < z3y.length;
        y3y = F3y ? z3y[a3y + M3y] : null;

        if (!m3y && m3y !== 0) {
          if (y3y) {
            y3y[R3y] = null;
          } else if (a3y + M3y >= z3y.length) {
            T3y = {};
            T3y[R3y] = null;
            L3y.push(T3y);
          }

          continue;
        }

        if (!A3y[c1i + V3y.name] && A3y["_CMO " + V3y.name] !== 0) continue;
        N6bh.i3mK(1);
        var Z6Vu = N6bh.E3mK(8, 108);
        u3y = Math.abs(A3y["_CMO " + V3y.name]) / Z6Vu;
        N6bh.N3mK(125);
        C3y = N6bh.E3mK(f3y, 1, u3y, s3y, m3y, u3y, f3y);
        s3y = C3y;

        if (a3y < V3y.days) {
          C3y = null;
        }

        if (y3y) {
          y3y[R3y] = C3y;
        } else if (a3y + M3y >= z3y.length) {
          T3y = {};
          T3y[R3y] = C3y;
          L3y.push(T3y);
        }
      }

      V3y.appendFutureTicks(r3y, L3y);
    };

    c3y.Studies.studyLibrary = c3y.extend(c3y.Studies.studyLibrary, {
      "Chande Fcst": {
        name: "Chande Forecast Oscillator",
        calculateFN: c3y.Studies.calculateChandeForecast,
        inputs: {
          Period: 14,
          Field: "field"
        }
      },
      "Chande Mtm": {
        name: "Chande Momentum Oscillator",
        calculateFN: c3y.Studies.calculateChandeMomentum,
        inputs: {
          Period: 9
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !!"1",
            studyOverBoughtValue: 50,
            studyOverBoughtColor: d1i,
            studyOverSoldValue: -50,
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

m2B = function m2B(W3y) {
  var w3y, b1i;
  w3y = typeof _CIQ !== "undefined" ? _CIQ : W3y.CIQ;

  if (!w3y.Studies) {
    console.error("choppiness feature requires first activating studies feature.");
  } else {
    b1i = "0";
    b1i += ".";
    b1i += "1";

    w3y.Studies.calculateChoppiness = function (H4y, b3y) {
      var X3y, e3y, Z3y, q1i;
      w3y.Studies.calculateStudyATR(H4y, b3y);
      X3y = b3y.chart.scrubbed;

      function J4y(g4y, n4y) {
        T5VV.k7Kh();
        var K4y, O4y;
        T5VV.N3mK(126);
        var i6Vu = T5VV.E3mK(7, 13, 10, 11, 6);
        K4y = Number.MAX_VALUE * -("1" * i6Vu);
        O4y = Number.MAX_VALUE;

        for (var c4y = n4y - g4y + 1; c4y <= n4y; c4y++) {
          if (c4y < 0) continue;
          K4y = Math.max(K4y, X3y[c4y].High);
          O4y = Math.min(O4y, X3y[c4y].Low);
        }

        return [O4y, K4y];
      }

      if (X3y.length < b3y.days + 1) {
        b3y.error = !![];
        return;
      }

      for (var Y3y = Math.max(b3y.startFrom, b3y.days); Y3y < X3y.length; Y3y++) {
        e3y = X3y[Y3y];
        if (!e3y) continue;
        if (e3y.futureTick) break;
        Z3y = J4y(b3y.days, Y3y);

        if (e3y["Sum True Range " + b3y.name]) {
          q1i = "Sum True Range";
          q1i += " ";
          T5VV.i3mK(60);
          var F6Vu = T5VV.e3mK(134300, 16, 1200, 7);
          T5VV.N3mK(0);
          var n6Vu = T5VV.e3mK(1, 0);
          e3y["Result " + b3y.name] = F6Vu * Math.log(e3y[q1i + b3y.name] / Math.max(0.000001, Z3y[n6Vu] - Z3y["0" | 0])) / Math.log(b3y.days);
        } else if (!isNaN(e3y)) {
          e3y["Result " + b3y.name] = 0;
        }
      }
    };

    w3y.Studies.studyLibrary = w3y.extend(w3y.Studies.studyLibrary, {
      Choppiness: {
        name: "Choppiness Index",
        calculateFN: w3y.Studies.calculateChoppiness,
        centerline: 50,
        parameters: {
          init: {
            studyOverZonesEnabled: !!{},
            studyOverBoughtValue: +"61.8",
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 38.2,
            studyOverSoldColor: "auto"
          }
        },
        attributes: {
          studyOverBoughtValue: {
            min: +"50",
            step: b1i
          },
          studyOverSoldValue: {
            max: +"50",
            step: "0.1"
          }
        }
      }
    });
  }
};

M2B = function M2B(i4y) {
  var h4y, h1i, O1i, V1i, K1i, r1i;
  h4y = typeof _CIQ !== "undefined" ? _CIQ : i4y.CIQ;

  if (!h4y.Studies) {
    h1i = "comparisonStudies feature requires";
    h1i += " ";
    h1i += "first activatin";
    h1i += "g studies feature.";
    console.error(h1i);
  } else if (!h4y.Studies.initPriceRelative) {
    console.error("comparisonStudies feature requires first activating priceRelative feature.");
  } else {
    O1i = "S";
    O1i += "P";
    O1i += "Y";
    V1i = "#";
    V1i += "FF";
    V1i += "000";
    V1i += "0";
    K1i = "-";
    K1i += "1";
    K1i += " ";
    K1i += "to 1";
    r1i = "Co";
    r1i += "rrelation C";
    r1i += "oefficient";

    h4y.Studies.calculateCorrelationCoefficient = function (x4y, j4y) {
      var f6bh = T5VV;
      var z1i, U4y, o4y, G4y, p4y, q4y, k4y, t4y, S4y, v4y, N4y, m1i, G1i, B1i, E4y, E1i, f1i, P1i, a4y, m4y, M4y, z4y;
      z1i = "Compare ";
      z1i += "To";
      U4y = j4y.chart.scrubbed;
      o4y = j4y.days;

      if (U4y.length < o4y + +"1") {
        j4y.error = !!"1";
        return;
      }

      f6bh.k7Kh();
      j4y.compare = j4y.inputs[z1i];

      if (!j4y.compare) {
        j4y.compare = [];
        j4y.outputs = {};
        j4y.outputMap = {};

        for (var V4y in x4y.chart.series) {
          G4y = x4y.chart.series[V4y];

          if (G4y.parameters.color) {
            j4y.compare.push(G4y.display);
            j4y.outputs["Result " + G4y.display] = G4y.parameters.color;
            f6bh.i3mK(127);
            var c6Vu = f6bh.E3mK(13, 18, 715, 171, 5716);
            j4y.outputMap["Result " + G4y.display + (769.71 !== c6Vu ? 593.05 == ("1440" - 0, +"4757") ? (!!0, !!1) : " " : (!0, "L")) + j4y.name] = "Result " + G4y.display;
          }
        }
      } else {
        j4y.compare = [j4y.compare];
      }

      if (!j4y.compare.length) {
        j4y.error = "Correlation Coefficient requires at least one comparison symbol";
        return;
      }

      for (var D4y = 0; D4y < j4y.compare.length; D4y++) {
        f6bh.N3mK(5);
        p4y = f6bh.E3mK(1, "0");
        f6bh.N3mK(4);
        q4y = f6bh.e3mK("0", 2147483647);
        k4y = 0;
        t4y = 0;
        S4y = 0;
        v4y = j4y.compare[D4y];
        N4y = 0;

        for (var B4y = j4y.startFrom - o4y; B4y < U4y.length; B4y++) {
          m1i = "_te";
          m1i += "mp";
          m1i += "s";
          m1i += " ";
          G1i = "_";
          G1i += "te";
          G1i += "m";
          G1i += "ps ";
          B1i = "_tem";
          B1i += "ps";
          B1i += " ";
          if (!U4y[B4y]) continue;
          E4y = U4y[B4y][v4y];

          if (E4y && _typeof(E4y) == "object") {
            E4y = E4y.Close;
          }

          if (!E4y && E4y !== +"0") {
            E1i = "_te";
            E1i += "mp";
            E1i += "s ";

            if (B4y > ("0" ^ 0) && U4y[B4y - 1] && U4y[B4y - 1]["_temps " + j4y.name] && U4y[B4y - 1][E1i + j4y.name].c) {
              E4y = U4y[B4y - 1]["_temps " + j4y.name].c;
            } else {
              E4y = 0;
            }
          }

          if (E4y && _typeof(E4y) == "object") {
            E4y = E4y.Close;
          }

          U4y[B4y]["_temps " + j4y.name] = {};
          p4y += U4y[B4y]["_temps " + j4y.name].b = U4y[B4y].Close;
          q4y += U4y[B4y][B1i + j4y.name].c = E4y;
          k4y += U4y[B4y][G1i + j4y.name].b2 = Math.pow(U4y[B4y].Close, "2" | 2);
          t4y += U4y[B4y][m1i + j4y.name].c2 = Math.pow(E4y, 2);
          S4y += U4y[B4y]["_temps " + j4y.name].bc = U4y[B4y].Close * E4y;

          if (N4y >= o4y) {
            f1i = "_t";
            f1i += "emps ";
            P1i = "_";
            P1i += "tem";
            P1i += "ps ";
            p4y -= U4y[B4y - o4y][P1i + j4y.name].b;
            q4y -= U4y[B4y - o4y]["_temps " + j4y.name].c;
            k4y -= U4y[B4y - o4y][f1i + j4y.name].b2;
            t4y -= U4y[B4y - o4y]["_temps " + j4y.name].c2;
            S4y -= U4y[B4y - o4y]["_temps " + j4y.name].bc;
            f6bh.N3mK(23);
            var d6Vu = f6bh.E3mK(18, 340, 19);
            a4y = k4y / o4y - Math.pow(p4y / o4y, d6Vu);
            f6bh.N3mK(128);
            var q6Vu = f6bh.e3mK(3, 406, 8, 9, 17);
            m4y = t4y / o4y - Math.pow(q4y / o4y, q6Vu);
            f6bh.N3mK(1);
            var b6Vu = f6bh.e3mK(4, 6);
            M4y = S4y / o4y - p4y * q4y / Math.pow(o4y, b6Vu);
            z4y = M4y / Math.sqrt(a4y * m4y);
            f6bh.i3mK(93);
            var h6Vu = f6bh.E3mK(944, 473, 3);
            f6bh.i3mK(105);
            var z6Vu = f6bh.e3mK(44940299, 19, 7731, 18, 17);
            f6bh.i3mK(0);
            var E6Vu = f6bh.E3mK(6092, 508);
            f6bh.i3mK(40);
            var B6Vu = f6bh.E3mK(1081, 17, 8633, 15);
            f6bh.i3mK(71);
            var G6Vu = f6bh.e3mK(3, 6173, 9, 12305);
            f6bh.i3mK(7);
            var m6Vu = f6bh.e3mK(108306, 10, 102299);
            f6bh.N3mK(36);
            var P6Vu = f6bh.E3mK(2614, 132, 4, 8);
            U4y[B4y]["Result " + v4y + ((895.18, +"749") != (h6Vu, +"290") ? " " : 493.06 == (z6Vu, E6Vu) ? ("u", !!"") : (B6Vu, G6Vu) <= (m6Vu, 782.88) ? 210.91 : ("R", P6Vu)) + j4y.name] = z4y;
          }

          N4y++;
        }
      }
    };

    h4y.Studies.calculatePerformance = function (y4y, R4y) {
      var C1i, k1i, y1i, D1i, s4y, A4y, T4y;
      C1i = "_MA ";
      C1i += "Com";
      C1i += "p";
      k1i = "m";
      T5VV.d7Kh();
      k1i += "a";
      y1i = "C";
      y1i += "l";
      y1i += "o";
      y1i += "se";
      D1i = "Compari";
      D1i += "so";
      D1i += "n Symbol";
      s4y = R4y.chart.scrubbed;
      A4y = R4y.inputs["Comparison Symbol"].toUpperCase();

      if (!A4y) {
        A4y = R4y.study.inputs[D1i];
      }

      if (!R4y.days) {
        R4y.days = R4y.study.inputs.Period;
      }

      if (s4y.length < R4y.days + 1) {
        R4y.error = !!{};
        return;
      }

      h4y.Studies.MA("ma", R4y.days, y1i, 0, "_MA Base", y4y, R4y);
      h4y.Studies.MA(k1i, R4y.days, A4y, 0, C1i, y4y, R4y);

      for (var P4y = R4y.startFrom; P4y < s4y.length; P4y++) {
        T4y = s4y[P4y][A4y];

        if (T4y && (T4y.Close || T4y.Close === 0)) {
          T4y = T4y.Close;
        }

        s4y[P4y]["Result " + R4y.name] = s4y[P4y].Close / T4y * (s4y[P4y]["_MA Comp " + R4y.name] / s4y[P4y]["_MA Base " + R4y.name]);
      }
    };

    h4y.Studies.calculateBeta = function (r4y, C4y) {
      var T6bh = T5VV;
      var l1i, R1i, Q1i, g1i, A1i, L4y, u4y, W1i, f4y, I4y, J1i, T1i;
      l1i = "_V";
      l1i += "ARn";
      l1i += " ";
      R1i = "_C";
      R1i += "OVAR";
      T6bh.d7Kh();
      Q1i = "_";
      Q1i += "COVA";
      Q1i += "Rn";
      Q1i += " ";
      g1i = "m";
      g1i += "a";
      A1i = "C";
      A1i += "omparis";
      A1i += "on Symbo";
      A1i += "l";
      L4y = C4y.chart.scrubbed;
      u4y = C4y.inputs[A1i].toUpperCase();

      if (!u4y) {
        u4y = C4y.study.inputs["Comparison Symbol"];
      }

      if (!C4y.days) {
        C4y.days = C4y.study.inputs.Period;
      }

      if (L4y.length < C4y.days + 1) {
        C4y.error = !0;
        return;
      }

      for (var l4y = Math.max(C4y.startFrom, 1); l4y < L4y.length; l4y++) {
        W1i = "_C";
        W1i += "ompCha";
        W1i += "n";
        W1i += "ge ";
        T6bh.i3mK(1);
        var f6Vu = T6bh.e3mK(7, 8);
        T6bh.i3mK(1);
        var D6Vu = T6bh.e3mK(8, 9);
        L4y[l4y]["_BaseChange " + C4y.name] = L4y[l4y].Close / L4y[l4y - f6Vu].Close - D6Vu;
        f4y = L4y[l4y][u4y];

        if (f4y && (f4y.Close || f4y.Close === +"0")) {
          f4y = f4y.Close;
        }

        T6bh.N3mK(1);
        I4y = L4y[T6bh.E3mK(1, l4y)][u4y];

        if (I4y && (I4y.Close || I4y.Close === 0)) {
          I4y = I4y.Close;
        }

        T6bh.N3mK(52);
        L4y[l4y][W1i + C4y.name] = T6bh.e3mK(f4y, 1, I4y);
      }

      h4y.Studies.MA("ma", C4y.days, "_BaseChange " + C4y.name, 0, "_MA Base", r4y, C4y);
      h4y.Studies.MA(g1i, C4y.days, "_CompChange " + C4y.name, 0, "_MA Comp", r4y, C4y);

      for (l4y = Math.max(C4y.startFrom, C4y.days); l4y < L4y.length; l4y++) {
        J1i = "_MA Ba";
        J1i += "se ";
        T1i = "_BaseC";
        T1i += "h";
        T1i += "ang";
        T1i += "e ";
        L4y[l4y]["_COVARn " + C4y.name] = (L4y[l4y][T1i + C4y.name] - L4y[l4y][J1i + C4y.name]) * (L4y[l4y]["_CompChange " + C4y.name] - L4y[l4y]["_MA Comp " + C4y.name]);
        L4y[l4y]["_VARn " + C4y.name] = Math.pow(L4y[l4y]["_CompChange " + C4y.name] - L4y[l4y]["_MA Comp " + C4y.name], +"2");
      }

      h4y.Studies.MA("ma", C4y.days, Q1i + C4y.name, "0" << 243024224, R1i, r4y, C4y);
      h4y.Studies.MA("ma", C4y.days, l1i + C4y.name, "0" | 0, "_VAR", r4y, C4y);

      for (l4y = Math.max(C4y.startFrom, C4y.days * +"2" - ("1" >> 209083488)); l4y < L4y.length; l4y++) {
        L4y[l4y]["Result " + C4y.name] = L4y[l4y]["_COVAR " + C4y.name] / L4y[l4y]["_VAR " + C4y.name];
      }
    };

    h4y.Studies.studyLibrary = h4y.extend(h4y.Studies.studyLibrary, {
      correl: {
        name: r1i,
        range: K1i,
        calculateFN: h4y.Studies.calculateCorrelationCoefficient,
        outputs: {}
      },
      "Perf Idx": {
        name: "Performance Index",
        centerline: 1,
        initializeFN: h4y.Studies.initPriceRelative,
        seriesFN: h4y.Studies.displayVsComparisonSymbol,
        calculateFN: h4y.Studies.calculatePerformance,
        inputs: {
          Period: 120,
          "Comparison Symbol": "SPY"
        },
        outputs: {
          Result: "auto",
          Gain: "#00DD00",
          Loss: V1i
        },
        deferUpdate: !!"1"
      },
      Beta: {
        name: "Beta",
        centerline: 1,
        initializeFN: h4y.Studies.initPriceRelative,
        seriesFN: h4y.Studies.displayVsComparisonSymbol,
        calculateFN: h4y.Studies.calculateBeta,
        inputs: {
          Period: 20,
          "Comparison Symbol": O1i
        },
        deferUpdate: !!1
      }
    });
  }
};

z2B = function z2B(F4y) {
  var d4y, X1i;
  d4y = typeof _CIQ !== "undefined" ? _CIQ : F4y.CIQ;

  if (!d4y.Studies) {
    console.error("coppock feature requires first activating studies feature.");
  } else {
    X1i = "fi";
    X1i += "eld";

    d4y.Studies.calculateCoppock = function (J7y, Q4y) {
      var n6bh = T5VV;
      var u1i, w4y, W4y, e4y, X4y, Y4y, Z4y, H7y, a1i;
      u1i = "R";
      u1i += "es";
      u1i += "ul";
      u1i += "t";
      w4y = Q4y.chart.scrubbed;
      W4y = Q4y.inputs.Field;

      if (!W4y || W4y == "field") {
        W4y = "Close";
      }

      e4y = parseInt(Q4y.inputs["Long RoC"], 10);

      if (!e4y) {
        e4y = 14;
      }

      X4y = parseInt(Q4y.inputs["Short RoC"], +"10");

      if (!X4y) {
        X4y = 11;
      }

      Y4y = Q4y.days;

      if (!Y4y) {
        Y4y = 10;
      }

      if (e4y < X4y) {
        return;
      }

      if (w4y.length < Math.max(X4y, e4y, Y4y) + 1) {
        Q4y.error = !![];
        return;
      }

      for (var b4y = Math.max(Q4y.startFrom, e4y); b4y < w4y.length; b4y++) {
        n6bh.N3mK(1);
        Z4y = w4y[n6bh.E3mK(X4y, b4y)][W4y];
        n6bh.i3mK(1);
        H7y = w4y[n6bh.E3mK(e4y, b4y)][W4y];

        if (Z4y && H7y) {
          a1i = "_S";
          a1i += "um ";
          n6bh.N3mK(36);
          var y6Vu = n6bh.E3mK(3, 0, 11, 11);
          w4y[b4y][a1i + Q4y.name] = +"100" * (w4y[b4y][W4y] / Z4y + w4y[b4y][W4y] / H7y - y6Vu);
        }
      }

      d4y.Studies.MA("weighted", Y4y, "_Sum " + Q4y.name, 0, u1i, J7y, Q4y);
    };

    d4y.Studies.studyLibrary = d4y.extend(d4y.Studies.studyLibrary, {
      Coppock: {
        name: "Coppock Curve",
        calculateFN: d4y.Studies.calculateCoppock,
        inputs: {
          Period: 10,
          Field: X1i,
          "Short RoC": 11,
          "Long RoC": 14
        }
      }
    });
  }
};

R2B = function R2B(K7y) {
  var p1i, c7y, b0i, q0i;
  p1i = "undefi";
  p1i += "ned";
  c7y = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== p1i ? _CIQ : K7y.CIQ;

  if (!c7y.Studies) {
    console.error("darvasBox feature requires first activating studies feature.");
  } else {
    b0i = "#69";
    b0i += "9158";
    q0i = "Dar";
    q0i += "vas";
    q0i += " Box";

    c7y.Studies.calculateDarvas = function (x7y, U7y) {
      var s6bh = T5VV;
      var H0i, s0i, O7y, B7y, t7y, Y1i, v7y, E7y, h7y, j7y, p7y, o7y, q7y, G7y, g7y, i7y, D7y, v0i, n7y, L0i, w0i, U0i, S0i, t0i, j0i, x0i, o0i, M0i, e0i, N0i, I0i, Z0i;
      H0i = "D";
      H0i += "arv";
      H0i += "as";
      s0i = "V";
      s0i += "olume ";
      s0i += "% of Av";
      s0i += "g";
      O7y = U7y.chart.scrubbed;
      B7y = 0;
      t7y = parseInt(U7y.inputs["ATH Lookback Period"], 10);

      if (U7y.inputs["Volume Spike"]) {
        Y1i = "Vo";
        Y1i += "lu";
        Y1i += "m";
        Y1i += "e";
        c7y.Studies.MA("simple", t7y, Y1i, 0, "ADV", x7y, U7y);
      }

      s6bh.N3mK(65);
      var k6Vu = s6bh.E3mK(114, 3, 61, 3);
      v7y = parseFloat(U7y.inputs[s0i]) / k6Vu;
      E7y = "none";
      h7y = {};
      j7y = null;
      p7y = null;
      o7y = null;
      s6bh.d7Kh();
      q7y = parseFloat(U7y.inputs["Level Offset"]);
      G7y = ![];

      if (G7y) {
        console.log("*****************");
      }

      i7y = {};
      [H0i, "Ghost", "Profit", "Loss", "ATH", "ADV", "Spike"].forEach(function (V7y) {
        s6bh.N3mK(129);
        var C6Vu = s6bh.e3mK(1, 17, 55846, 5077, 12);
        s6bh.i3mK(55);
        var A6Vu = s6bh.E3mK(3403, 19, 200, 950);
        i7y[V7y] = V7y + ((C6Vu, A6Vu) <= (865.95, +"8100") ? " " : !!1) + U7y.name;
      });

      for (g7y = U7y.startFrom - 1; g7y > 0; g7y--) {
        D7y = O7y[g7y];

        if (D7y[i7y.Darvas] || D7y[i7y.Ghost]) {
          for (var N7y in i7y) {
            D7y[N7y] = null;
          }
        } else {
          B7y = D7y[i7y.ATH] || 0;
          p7y = D7y[i7y.Profit];
          o7y = D7y[i7y.Loss];
          break;
        }
      }

      for (g7y; g7y < O7y.length; g7y++) {
        v0i = "P";
        v0i += "rice";
        v0i += " Min";
        v0i += "imum";
        n7y = O7y[g7y];
        if (!n7y) continue;

        if (parseFloat(U7y.inputs[v0i]) <= O7y[B7y].Close) {
          L0i = "da";
          L0i += "rvas";
          w0i = "h";
          w0i += "i";
          w0i += "g";
          w0i += "h";
          U0i = "Exit";
          U0i += " Fiel";
          U0i += "d";

          if (j7y && (!j7y.End || g7y == j7y.End + 1)) {
            if (O7y[g7y - 1].Close > h7y.High) {
              h7y = {
                State: 1,
                High: 2 * h7y.High - h7y.Low,
                Low: h7y.High,
                Start: g7y,
                End: +"2" * h7y.End - h7y.Start + 1
              };
            } else {
              j7y = null;
              ;
            }

            if (j7y) {
              n7y[i7y.Ghost] = c7y.clone(h7y);

              if (G7y) {
                console.log("Ghost begin:" + n7y.DT);
              }

              h7y.State = 0;

              if (O7y[h7y.End]) {
                O7y[h7y.End][i7y.Ghost] = c7y.clone(h7y);

                if (G7y) {
                  console.log("Ghost end:" + O7y[h7y.End].DT);
                }
              }

              j7y = {
                Start: h7y.Start,
                End: h7y.End
              };
              p7y = h7y.High + q7y;

              if (!o7y || o7y < h7y.Low - q7y) {
                o7y = h7y.Low - q7y;
              }
            }
          }

          n7y[i7y.Profit] = p7y;
          n7y[i7y.Loss] = o7y;

          if (n7y.Close >= p7y) {
            p7y = null;
          } else if (U7y.inputs[U0i] == "high/low" && n7y.High >= p7y) {
            p7y = null;
          }

          if (E7y == "none") {
            if (g7y == B7y + +"3") {
              if (!O7y[B7y + ("2" ^ 0)][i7y.Darvas] && !O7y[B7y + 1][i7y.Darvas] && !O7y[B7y][i7y.Darvas] && O7y[B7y].High > n7y.High) {
                S0i = "h";
                S0i += "i";
                S0i += "g";
                S0i += "h";
                E7y = S0i;
                ;
              }
            }
          }

          if (E7y == w0i) {
            if (n7y.High > O7y[B7y].High) {
              t0i = "non";
              t0i += "e";
              E7y = t0i;
            } else if (O7y[g7y - 3].Low < O7y[g7y - 2].Low && O7y[g7y - 3].Low < O7y[g7y - ("1" - 0)].Low && O7y[g7y - +"3"].Low < n7y.Low) {
              h7y = {
                State: 1,
                High: O7y[B7y].High,
                Low: O7y[g7y - 3].Low,
                Start: B7y
              };
              O7y[B7y][i7y.Darvas] = c7y.clone(h7y);
              E7y = "darvas";

              if (G7y) {
                console.log("Darvas begin:" + O7y[B7y].DT);
              }

              if (G7y) {
                console.log("Darvas established:" + n7y.DT);
              }

              if (j7y) {
                if (j7y.End > g7y && O7y[j7y.Start]) {
                  n7y[i7y.Ghost] = c7y.clone(O7y[j7y.Start][i7y.Ghost]);
                  n7y[i7y.Ghost].End = g7y;

                  if (O7y[j7y.End]) {
                    delete O7y[j7y.End][i7y.Ghost];

                    if (G7y) {
                      console.log("Ghost End removed:" + O7y[j7y.End].DT);
                    }
                  }
                }

                n7y[i7y.Ghost].State = 0;
                O7y[j7y.Start][i7y.Ghost].End = g7y;

                if (G7y) {
                  console.log("Ghost end:" + n7y.DT);
                }

                j7y = null;
              }

              p7y = h7y.High + q7y;

              if (!o7y || o7y < h7y.Low - q7y) {
                o7y = h7y.Low - q7y;
              }
            }
          }

          if (E7y == L0i) {
            j0i = "n";
            j0i += "o";
            j0i += "n";
            j0i += "e";
            x0i = "hi";
            x0i += "gh/";
            x0i += "lo";
            x0i += "w";

            if (n7y.Close > h7y.High) {
              j7y = {};
            } else if (U7y.inputs["Exit Field"] == x0i && n7y.High > h7y.High) {
              j7y = {};
            } else if (n7y.Close < h7y.Low) {
              E7y = "none";
            } else if (U7y.inputs["Exit Field"] == "high/low" && n7y.Low < h7y.Low) {
              E7y = "none";
            }

            if (j7y) {
              E7y = j0i;
            } else if (E7y == "none") {
              p7y = null;
              o7y = null;
            }

            if (!U7y.inputs["Ghost Boxes"]) {
              j7y = null;
            }

            if (E7y == "none") {
              o0i = "Da";
              o0i += "rv";
              o0i += "as en";
              o0i += "d:";

              for (var S7y = h7y.Start + 1; S7y < g7y; S7y++) {
                O7y[S7y][i7y.Darvas] = c7y.clone(h7y);
              }

              h7y.State = 0;
              h7y.End = g7y;
              n7y[i7y.Darvas] = c7y.clone(h7y);

              if (G7y) {
                console.log(o0i + n7y.DT);
              }

              n7y[i7y.ATH] = B7y;
              continue;
            }
          }

          if (o7y) {
            M0i = "h";
            M0i += "ig";
            M0i += "h";
            M0i += "/low";
            e0i = "Exit Fie";
            e0i += "ld";

            if (n7y.Close < h7y.Low || U7y.inputs[e0i] == M0i && n7y.Low < h7y.Low) {
              N0i = "no";
              N0i += "ne";

              if (E7y == "darvas") {
                E7y = N0i;
              }

              if (n7y.Close < o7y || U7y.inputs["Exit Field"] == "high/low" && n7y.Low < o7y) {
                p7y = null;
                o7y = null;
              }

              if (j7y) {
                I0i = "Gho";
                I0i += "s";
                I0i += "t";
                I0i += " end:";

                if (j7y.End > g7y && O7y[j7y.Start]) {
                  n7y[i7y.Ghost] = c7y.clone(O7y[j7y.Start][i7y.Ghost]);
                  n7y[i7y.Ghost].End = g7y;

                  if (O7y[j7y.End]) {
                    delete O7y[j7y.End][i7y.Ghost];

                    if (G7y) {
                      console.log("Ghost End removed:" + O7y[j7y.End].DT);
                    }
                  }
                }

                n7y[i7y.Ghost].State = 0;
                O7y[j7y.Start][i7y.Ghost].End = g7y;

                if (G7y) {
                  console.log(I0i + n7y.DT);
                }

                j7y = null;
              }
            }
          }
        }

        if (n7y.High >= O7y[B7y].High) {
          Z0i = "All Ti";
          Z0i += "me ";
          Z0i += "Hig";
          Z0i += "h:";
          B7y = g7y;

          if (G7y) {
            console.log(Z0i + n7y.DT);
          }
        }

        if (g7y < 3 || n7y.High >= O7y[g7y - 1].High && n7y.High >= O7y[g7y - 2].High && n7y.High >= O7y[g7y - 3].High) {
          if (g7y - B7y >= t7y) {
            B7y = g7y;

            for (var k7y = 0; k7y < t7y; k7y++) {
              if (g7y - k7y < +"0") break;

              if (O7y[g7y - k7y].High > O7y[B7y].High) {
                s6bh.N3mK(1);
                B7y = s6bh.E3mK(k7y, g7y);
              }
            }

            if (G7y) {
              console.log("All Time High:" + n7y.DT);
            }
          }
        }

        if (U7y.inputs["Volume Spike"] && g7y > t7y && g7y == B7y) {
          if (n7y[i7y.ADV] * v7y < n7y.Volume) {
            n7y[i7y.Spike] = 1;

            if (G7y) {
              console.log("Volume Spike:" + n7y.DT);
            }
          }
        }

        n7y[i7y.ATH] = B7y;
      }
    };

    c7y.Studies.displayDarvas = function (m7y, R7y, P7y) {
      var q6bh = T5VV;
      var i0i, F7y, C7y, I7y, s7y, a7y, M7y, z7y, X7y, l7y, T7y, b7y, Y7y, J6y, Z7y, A7y, y7y, L7y, Q7y, f7y, d7y, u7y, W7y, r7y, w7y, c6y, e7y, n0i, F0i, K6y, c0i, d0i, H6y;
      i0i = "a";
      i0i += "u";
      i0i += "to";
      F7y = c7y.Studies.determineColor(R7y.outputs.Levels);
      q6bh.k7Kh();

      if (!F7y || F7y == "auto" || c7y.isTransparent(F7y)) {
        F7y = m7y.defaultColor;
      }

      C7y = c7y.Studies.determineColor(R7y.outputs.Darvas);

      if (!C7y || C7y == i0i || c7y.isTransparent(C7y)) {
        C7y = m7y.defaultColor;
      }

      I7y = c7y.Studies.determineColor(R7y.outputs.Ghost);

      if (!I7y || I7y == "auto" || c7y.isTransparent(I7y)) {
        I7y = m7y.defaultColor;
      }

      s7y = m7y.panels[R7y.panel];
      a7y = R7y.getContext(m7y);
      q6bh.i3mK(130);
      var W6Vu = q6bh.e3mK(14, 18, 1, 2);
      T7y = m7y.layout.candleWidth - W6Vu;

      if (T7y < 2) {
        T7y = 1;
      }

      m7y.startClip(R7y.panel);

      if (R7y.inputs["Stop Levels"]) {
        if (a7y.setLineDash) {
          a7y.setLineDash([2, 2]);
        }

        a7y.lineWidth = 2;
        a7y.strokeStyle = F7y;
        a7y.beginPath();

        for (M7y = "0" | 0; M7y < P7y.length; M7y++) {
          z7y = P7y[M7y];
          q6bh.N3mK(1);
          b7y = P7y[q6bh.E3mK(1, M7y)];
          if (!z7y) continue;
          l7y = z7y["Loss " + R7y.name] ? Math.floor(m7y.pixelFromPrice(z7y["Loss " + R7y.name], s7y)) : null;
          Y7y = b7y && b7y["Loss " + R7y.name] ? Math.floor(m7y.pixelFromPrice(b7y["Loss " + R7y.name], s7y)) : null;

          if (l7y) {
            if (z7y.candleWidth) {
              T7y = Math.floor(Math.max(1, z7y.candleWidth));
            }

            J6y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) + T7y / 2);
            Z7y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) - T7y / 2);

            if (Y7y && Y7y >= l7y) {
              a7y.lineTo(Z7y, l7y);
            } else if (M7y === 0) {
              a7y.moveTo(m7y.chart.left, l7y);
            } else {
              a7y.moveTo(Z7y, l7y);
            }

            a7y.lineTo(J6y, l7y);
          }
        }

        a7y.stroke();

        if (a7y.setLineDash) {
          a7y.setLineDash([]);
        }

        a7y.lineWidth = 1;
      }

      A7y = -10;
      q6bh.i3mK(22);
      L7y = q6bh.E3mK("0", 0);
      q6bh.i3mK(26);
      f7y = -q6bh.e3mK("10", 0);
      u7y = 0;
      r7y = !"1";
      w7y = !"1";
      q6bh.i3mK(131);
      var g6Vu = q6bh.E3mK(10, 18, 506, 3, 11);
      c6y = a7y.measureText("\u25B2").width / ("2" * g6Vu);
      e7y = 0;

      for (M7y = +"0"; M7y < P7y.length; M7y++) {
        n0i = "D";
        n0i += "a";
        n0i += "r";
        n0i += "vas ";
        if (!P7y[M7y]) continue;

        if (P7y[M7y].Close || P7y[M7y].Close === 0) {
          e7y = M7y;
        }

        if (P7y[M7y]["Spike " + R7y.name]) {
          F0i = "b";
          F0i += "ot";
          F0i += "to";
          F0i += "m";
          a7y.fillStyle = C7y;
          a7y.textBaseline = F0i;
          K6y = m7y.pixelFromPrice(P7y[M7y].High, m7y.chart.panel);
          a7y.fillText(1128 < "483" << 1764959808 ? (191.68, +"0xb0c") : (5960, 6566) != 824 ? "\u25BC" : +"0x264f", m7y.pixelFromBar(M7y) - c6y, K6y - 5);
          ;
        }

        if (P7y[M7y].candleWidth) {
          T7y = Math.floor(Math.max(1, P7y[M7y].candleWidth));
        }

        if (P7y[M7y][n0i + R7y.name]) {
          z7y = P7y[M7y]["Darvas " + R7y.name];

          if (z7y.State == 1 && !r7y) {
            A7y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) - T7y / +"2");
            y7y = Math.floor(m7y.pixelFromPrice(z7y.High, s7y));
            Q7y = Math.floor(m7y.pixelFromPrice(z7y.Low, s7y)) - y7y;
            r7y = !![];
          } else if (z7y.State === 0) {
            q6bh.i3mK(132);
            var T6Vu = q6bh.e3mK(14, 7, 5, 18);
            L7y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) + T7y / T6Vu) - A7y;
            y7y = Math.floor(m7y.pixelFromPrice(z7y.High, s7y));
            Q7y = Math.floor(m7y.pixelFromPrice(z7y.Low, s7y)) - y7y;
            a7y.strokeStyle = C7y;
            a7y.fillStyle = C7y;

            if (!R7y.inputs["Stop Levels"]) {
              a7y.strokeRect(A7y, y7y, L7y, Q7y);
              a7y.globalAlpha = 0.2;
            } else {
              a7y.globalAlpha = 0.3;
            }

            a7y.fillRect(A7y, y7y, L7y, Q7y);
            a7y.globalAlpha = +"1";
            r7y = !1;
          }
        }

        if (P7y[M7y]["Ghost " + R7y.name] && R7y.inputs["Ghost Boxes"]) {
          z7y = P7y[M7y]["Ghost " + R7y.name];

          if (z7y.State == 1 && !w7y) {
            f7y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) - T7y / 2);
            d7y = Math.floor(m7y.pixelFromPrice(z7y.High, s7y));
            u7y = Math.floor((z7y.End - z7y.Start + 1) * m7y.layout.candleWidth + T7y / ("2" ^ 0));
            W7y = Math.floor(m7y.pixelFromPrice(z7y.Low, s7y)) - d7y;
            w7y = !!{};
          } else if (z7y.State === 0) {
            c0i = "S";
            c0i += "top Le";
            c0i += "vels";

            if (z7y.Start == z7y.End) {
              f7y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) - T7y / 2);
            }

            q6bh.N3mK(23);
            var J6Vu = q6bh.e3mK(12, 142, 12);
            u7y = Math.floor(m7y.pixelFromBar(M7y, s7y.chart) + T7y / J6Vu) - f7y;
            d7y = Math.floor(m7y.pixelFromPrice(z7y.High, s7y));
            W7y = Math.floor(m7y.pixelFromPrice(z7y.Low, s7y)) - d7y;
            a7y.strokeStyle = I7y;
            a7y.fillStyle = I7y;

            if (!R7y.inputs[c0i]) {
              a7y.strokeRect(f7y, d7y, u7y, W7y);
              a7y.globalAlpha = +"0.2";
            } else {
              a7y.globalAlpha = 0.3;
            }

            a7y.fillRect(f7y, d7y, u7y, W7y);
            a7y.globalAlpha = 1;
            w7y = !1;
          }
        }
      }

      if (r7y) {
        L7y = Math.floor(m7y.pixelFromBar(e7y, s7y.chart) + T7y / 2) - A7y;
        a7y.strokeStyle = C7y;
        a7y.fillStyle = C7y;

        if (!R7y.inputs["Stop Levels"]) {
          a7y.beginPath();
          q6bh.i3mK(94);
          a7y.moveTo(q6bh.e3mK(L7y, 2, A7y), y7y);
          a7y.lineTo(A7y, y7y);
          q6bh.i3mK(0);
          a7y.lineTo(A7y, q6bh.e3mK(Q7y, y7y));
          q6bh.i3mK(94);
          a7y.lineTo(q6bh.E3mK(L7y, 2, A7y), q6bh.e3mK(Q7y, y7y, q6bh.i3mK(0)));
          a7y.stroke();
          a7y.globalAlpha = 0.2;
        } else {
          a7y.globalAlpha = 0.3;
        }

        q6bh.i3mK(5);
        a7y.fillRect(A7y, y7y, q6bh.e3mK(L7y, 2), Q7y);
        a7y.globalAlpha = 1;
      }

      if (w7y) {
        d0i = "Stop ";
        d0i += "Levels";
        a7y.strokeStyle = I7y;
        a7y.fillStyle = I7y;

        if (!R7y.inputs[d0i]) {
          a7y.strokeRect(f7y, d7y, u7y, W7y);
          a7y.globalAlpha = 0.2;
        } else {
          a7y.globalAlpha = 0.3;
        }

        a7y.fillRect(f7y, d7y, u7y, W7y);
        a7y.globalAlpha = 1;
      }

      if (r7y || w7y) {
        if (R7y.inputs["Stop Levels"]) {
          if (a7y.setLineDash) {
            q6bh.N3mK(53);
            a7y.setLineDash([q6bh.E3mK("2", 1144850944), 2]);
          }

          a7y.lineWidth = 2;
          a7y.strokeStyle = F7y;
          H6y = Math.floor(m7y.pixelFromBar(e7y - 1, s7y.chart) + T7y / 2);

          if (X7y) {
            a7y.beginPath();
            a7y.moveTo(H6y, X7y);
            a7y.lineTo(r7y ? A7y + 2 * L7y : f7y + u7y, X7y);
            a7y.stroke();
          }

          if (l7y) {
            a7y.beginPath();
            a7y.moveTo(H6y, l7y);
            a7y.lineTo(r7y ? A7y + 2 * L7y : f7y + u7y, l7y);
            a7y.stroke();
          }

          if (a7y.setLineDash) {
            a7y.setLineDash([]);
          }

          a7y.lineWidth = 1;
        }

        r7y = ![];
        w7y = ![];
      }

      m7y.endClip();
    };

    c7y.Studies.studyLibrary = c7y.extend(c7y.Studies.studyLibrary, {
      Darvas: {
        name: q0i,
        underlay: !"",
        calculateFN: c7y.Studies.calculateDarvas,
        seriesFN: c7y.Studies.displayDarvas,
        inputs: {
          "ATH Lookback Period": 100,
          "Exit Field": ["close", "high/low"],
          "Ghost Boxes": !!"1",
          "Stop Levels": !!"",
          "Level Offset": 0.01,
          "Price Minimum": 5,
          "Volume Spike": !1,
          "Volume % of Avg": 400
        },
        outputs: {
          Darvas: "#5F7CB8",
          Ghost: b0i,
          Levels: "auto"
        },
        customRemoval: !!{},
        attributes: {
          "Price Minimum": {
            min: 0.01,
            step: 0.01
          },
          yaxisDisplayValue: {
            hidden: !!{}
          },
          panelName: {
            hidden: !!"1"
          },
          flippedEnabled: {
            hidden: !!{}
          }
        }
      }
    });
  }
};

s2B = function s2B(n6y) {
  var O6y, B0i, E0i, z0i;
  O6y = typeof _CIQ !== "undefined" ? _CIQ : n6y.CIQ;

  if (!O6y.Studies) {
    console.error("detrended feature requires first activating studies feature.");
  } else {
    B0i = "m";
    B0i += "a";
    E0i = "fi";
    E0i += "el";
    E0i += "d";
    z0i = "Detrended Price Os";
    z0i += "cillator";

    O6y.Studies.calculateDetrendedPrice = function (o6y, g6y) {
      var j6y, B6y, U6y, h0i, h6y, E6y;
      T5VV.k7Kh();
      j6y = g6y.chart.scrubbed;

      if (j6y.length < g6y.days + ("1" | 0)) {
        g6y.error = !!{};
        return;
      }

      B6y = g6y.inputs.Field;

      if (!B6y || B6y == "field") {
        B6y = "Close";
      }

      U6y = Math.floor(g6y.days / 2 + 1);
      O6y.Studies.MA(g6y.inputs["Moving Average Type"], g6y.days, B6y, -U6y, "MA", o6y, g6y);

      for (var i6y = Math.max(g6y.days - U6y - 1, g6y.startFrom - U6y); i6y < j6y.length - U6y; i6y++) {
        h0i = "R";
        h0i += "esult ";
        if (i6y < 0) continue;
        h6y = j6y[i6y][B6y];

        if (h6y && _typeof(h6y) == "object") {
          h6y = h6y[g6y.subField];
        }

        E6y = j6y[i6y]["MA " + g6y.name];

        if ((h6y || h6y === 0) && (E6y || E6y === 0)) {
          T5VV.i3mK(1);
          j6y[i6y][h0i + g6y.name] = T5VV.e3mK(E6y, h6y);
        }
      }
    };

    O6y.Studies.studyLibrary = O6y.extend(O6y.Studies.studyLibrary, {
      Detrended: {
        name: z0i,
        calculateFN: O6y.Studies.calculateDetrendedPrice,
        inputs: {
          Period: +"14",
          Field: E0i,
          "Moving Average Type": B0i
        }
      }
    });
  }
};

P2B = function P2B(p6y) {
  var t4Kh = T5VV;
  t4Kh.k7Kh();
  var G0i, G6y, i1v, F1v, n1v, P0i;
  G0i = "u";
  G0i += "ndefin";
  G0i += "e";
  G0i += "d";
  G6y = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== G0i ? _CIQ : p6y.CIQ;

  if (!G6y.Studies) {
    console.error("disparity feature requires first activating studies feature.");
  } else {
    G6y.Studies.calculateDisparity = function (v6y, q6y) {
      var D6y, t6y, m0i, S6y;
      D6y = q6y.chart.scrubbed;

      if (D6y.length < q6y.days + 1) {
        q6y.error = !"";
        return;
      }

      t6y = q6y.inputs.Field;

      if (!t6y || t6y == "field") {
        t6y = "Close";
      }

      G6y.Studies.MA(q6y.inputs["Moving Average Type"], q6y.days, t6y, 0, "_MA", v6y, q6y);

      for (var k6y = Math.max(q6y.startFrom, q6y.days - +"1"); k6y < D6y.length; k6y++) {
        m0i = "R";
        m0i += "e";
        m0i += "su";
        m0i += "lt ";
        if (!D6y[k6y]) continue;
        S6y = D6y[k6y]["_MA " + q6y.name];

        if (S6y) {
          t4Kh.N3mK(58);
          var Q6Vu = t4Kh.E3mK(96, 84, 6);
          t4Kh.N3mK(31);
          var R6Vu = t4Kh.E3mK(8, 19, 32, 6);
          D6y[k6y][m0i + q6y.name] = Q6Vu * (D6y[k6y][t6y] / S6y - R6Vu);
        }
      }
    };

    i1v = -396119409;
    t4Kh.N3mK(5);
    F1v = t4Kh.e3mK(1, "2135585500");
    n1v = 2;

    for (var d1v = 1; t4Kh.Y6v(d1v.toString(), d1v.toString().length, 80587) !== i1v; d1v++) {
      P0i = "m";
      P0i += "a";
      G6y.Studies.studyLibrary = G6y.extend(G6y.Studies.studyLibrary, {
        Disparity: {
          name: "Disparity Index",
          calculateFN: G6y.Studies.calculateDisparity,
          inputs: {
            Period: 14,
            Field: "field",
            "Moving Average Type": P0i
          }
        }
      });
      n1v += 2;
    }

    if (t4Kh.Y6v(n1v.toString(), n1v.toString().length, 5751) !== F1v) {
      G6y.Studies.studyLibrary = G6y.extend(G6y.Studies.studyLibrary, {
        Disparity: {
          name: "field",
          calculateFN: G6y.Studies.calculateDisparity,
          inputs: {
            Period: 52,
            Field: "Moving Average Type",
            "Moving Average Type": "Moving Average Type"
          }
        }
      });
    }
  }
};

T2B = function T2B(x6y) {
  var f0i, N6y;
  f0i = "u";
  f0i += "n";
  f0i += "define";
  f0i += "d";
  N6y = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== f0i ? _CIQ : x6y.CIQ;

  if (!N6y.Studies) {
    console.error("easeOfMovement feature requires first activating studies feature.");
  } else {
    N6y.Studies.calculateEaseOfMovement = function (T6y, m6y) {
      var t6bh = T5VV;
      var D0i, V6y, z6y, R6y, s6y, P6y, M6y;
      D0i = "_E";
      D0i += "OM1";
      t6bh.d7Kh();
      D0i += " ";
      V6y = m6y.chart.scrubbed;

      if (V6y.length < m6y.days) {
        m6y.error = !![];
        return;
      }

      for (var a6y = Math.max(1, m6y.startFrom); a6y < V6y.length; a6y++) {
        t6bh.N3mK(133);
        var l6Vu = t6bh.e3mK(17, 18, 1, 33);
        z6y = (V6y[a6y].High + V6y[a6y].Low) / l6Vu;
        t6bh.N3mK(134);
        var r6Vu = t6bh.E3mK(17, 1, 0, 16);
        t6bh.N3mK(0);
        var K6Vu = t6bh.E3mK(1, 0);
        t6bh.N3mK(135);
        var V6Vu = t6bh.E3mK(15, 3, 5, 15);
        R6y = (V6y[a6y - r6Vu].High + V6y[a6y - K6Vu].Low) / V6Vu;
        t6bh.i3mK(1);
        s6y = t6bh.E3mK(R6y, z6y);
        t6bh.N3mK(7);
        var O6Vu = t6bh.e3mK(600000000, 3, 500000003);
        P6y = V6y[a6y].Volume / O6Vu / (V6y[a6y].High - V6y[a6y].Low);
        t6bh.N3mK(10);
        M6y = t6bh.E3mK(s6y, P6y);

        if (!isFinite(M6y)) {
          V6y[a6y]["_EOM1 " + m6y.name] = NaN;
        } else {
          V6y[a6y]["_EOM1 " + m6y.name] = M6y;
        }
      }

      N6y.Studies.MA(m6y.inputs["Moving Average Type"], m6y.days, D0i + m6y.name, 0, "Result", T6y, m6y);
    };

    N6y.Studies.studyLibrary = N6y.extend(N6y.Studies.studyLibrary, {
      EOM: {
        name: "Ease of Movement",
        calculateFN: N6y.Studies.calculateEaseOfMovement,
        inputs: {
          Period: +"14",
          "Moving Average Type": "ma"
        }
      }
    });
  }
};

A2B = function A2B(y6y) {
  var A6y, k0i;
  T5VV.d7Kh();
  A6y = typeof _CIQ !== "undefined" ? _CIQ : y6y.CIQ;

  if (!A6y.Studies) {
    console.error("ehlerFisher feature requires first activating studies feature.");
  } else {
    k0i = "Eh";
    k0i += "ler Fisher";
    k0i += " Tra";
    k0i += "nsform";

    A6y.Studies.calculateEhlerFisher = function (F6y, C6y) {
      var U6bh = T5VV;
      var L6y, l6y, y0i, I6y, u6y, r6y;
      L6y = C6y.chart.scrubbed;

      function d6y(X6y, e6y) {
        var w6y, W6y, b6y;
        w6y = Number.MAX_VALUE;
        U6bh.N3mK(136);
        var a6Vu = U6bh.e3mK(4, 1, 19, 18, 40);
        W6y = Number.MAX_VALUE * a6Vu;

        for (var Q6y = e6y - X6y + 1; Q6y <= e6y; Q6y++) {
          U6bh.N3mK(135);
          var u6Vu = U6bh.E3mK(187, 0, 22, 17);
          b6y = (L6y[Q6y].High + L6y[Q6y].Low) / u6Vu;
          w6y = Math.min(w6y, b6y);
          W6y = Math.max(W6y, b6y);
        }

        return [w6y, W6y];
      }

      if (L6y.length < C6y.days + 1) {
        C6y.error = !!{};
        return;
      }

      l6y = 0;

      if (C6y.startFrom > 1) {
        U6bh.i3mK(137);
        var X6Vu = U6bh.e3mK(1, 0, 14, 13, 1);
        l6y = L6y[C6y.startFrom - X6Vu]["_n " + C6y.name];
      }

      for (var f6y = C6y.startFrom; f6y < L6y.length; f6y++) {
        y0i = "E";
        y0i += "F";
        y0i += " ";
        I6y = L6y[f6y];
        if (I6y.futureTick) break;

        if (f6y < C6y.days - +"1") {
          I6y["EF " + C6y.name] = I6y["EF Trigger " + C6y.name] = l6y;
          continue;
        }

        u6y = d6y(C6y.days, f6y);
        U6bh.i3mK(7);
        var p6Vu = U6bh.e3mK(2115981888, 16, 1410654608);
        U6bh.N3mK(138);
        var Y6Vu = U6bh.e3mK(24, 11, 2, 1);
        U6bh.i3mK(0);
        var s1Vu = U6bh.E3mK(1, 0);
        l6y = 0.33 * ("2" << p6Vu) * (((L6y[f6y].High + L6y[f6y].Low) / Y6Vu - u6y[0]) / Math.max(0.000001, u6y[s1Vu] - u6y[0]) - 0.5) + 0.67 * l6y;

        if (l6y > "0" << 1725063968) {
          l6y = Math.min(l6y, +"0.9999");
        } else if (l6y < 0) {
          l6y = Math.max(l6y, -0.9999);
        }

        r6y = f6y ? L6y[f6y - 1]["EF " + C6y.name] : 0;
        U6bh.N3mK(60);
        var H1Vu = U6bh.E3mK(197, 11, 6, 3);
        U6bh.N3mK(7);
        var v1Vu = U6bh.e3mK(0, 3, 2);
        I6y[y0i + C6y.name] = 0.5 * Math.log(("1" * H1Vu + l6y) / (v1Vu - l6y)) + +"0.5" * r6y;
        I6y["EF Trigger " + C6y.name] = r6y;
        I6y["_n " + C6y.name] = l6y;
      }
    };

    A6y.Studies.studyLibrary = A6y.extend(A6y.Studies.studyLibrary, {
      "Ehler Fisher": {
        name: k0i,
        calculateFN: A6y.Studies.calculateEhlerFisher,
        inputs: {
          Period: 10
        },
        outputs: {
          EF: "auto",
          "EF Trigger": "#FF0000"
        }
      }
    });
  }
};

y2B = function y2B(Z6y) {
  var Y6y, O0i, V0i, K0i;
  Y6y = typeof _CIQ !== "undefined" ? _CIQ : Z6y.CIQ;
  T5VV.d7Kh();

  if (!Y6y.Studies) {
    console.error("elder feature requires first activating studies feature.");
  } else {
    O0i = "#DD3E";
    O0i += "3";
    O0i += "9";
    V0i = "#00";
    V0i += "D";
    V0i += "D00";
    K0i = "El";
    K0i += "de";
    K0i += "r Ray";
    K0i += " Index";

    Y6y.Studies.calculateElderImpulse = function (j5y, H5y) {
      var C0i, g5y, B5y, E5y, i5y, h5y, W0i, A0i;
      C0i = "_";
      C0i += "MA";
      T5VV.k7Kh();
      g5y = H5y.chart.scrubbed;
      B5y = H5y.outputs.Bullish;
      E5y = H5y.outputs.Bearish;
      i5y = H5y.outputs.Neutral;
      T5VV.N3mK(15);
      Y6y.Studies.MA("exponential", T5VV.E3mK(2115521056, "13"), "Close", 0, C0i, j5y, H5y);
      H5y.macd = new Y6y.Studies.StudyDescriptor("_" + H5y.name, "macd", H5y.panel);
      H5y.macd.chart = H5y.chart;
      H5y.macd.days = H5y.days;
      H5y.macd.startFrom = H5y.startFrom;
      H5y.macd.inputs = {
        "Fast MA Period": 12,
        "Slow MA Period": 26,
        "Signal Period": "9" & 2147483647
      };
      H5y.macd.outputs = {
        _MACD: null,
        _Signal: null
      };
      Y6y.Studies.calculateMACD(j5y, H5y.macd);

      for (var c5y = H5y.startFrom; c5y < g5y.length; c5y++) {
        W0i = "R";
        W0i += "e";
        W0i += "su";
        W0i += "lt ";
        A0i = "_";
        A0i += "M";
        A0i += "A ";

        if (c5y === 0) {
          h5y = i5y;
        } else if (g5y[c5y]["_MA " + H5y.name] > g5y[c5y - 1]["_MA " + H5y.name] && g5y[c5y][((9554, 5080) != 2130 ? "_" : ("n", 9.49e+3)) + H5y.name + "_hist"] > g5y[c5y - 1][((5794, 1580) >= 1212 ? "_" : 239 <= 901.58 ? 0x996 : (8.03e+3, "x")) + H5y.name + "_hist"]) {
          h5y = B5y;
        } else if (g5y[c5y]["_MA " + H5y.name] < g5y[c5y - 1][A0i + H5y.name] && g5y[c5y][(461.64 <= (937, 5791) ? (216.24, "147.71" - 0) > (2400, 2120) ? 3400 < 3617 ? (!!1, +"0x2375") : 666.40 : "_" : (1.17e+3, !{})) + H5y.name + "_hist"] < g5y[c5y - ("1" ^ 0)][(204 <= (9060, 9300) ? "_" : ("5417" >> 92055520, 6046) >= ("143.72" * 1, "564.34" * 1) ? (4420, "2020" - 0) == (185.56, 1186) ? 0x483 : 0x183f : ("o", !!1)) + H5y.name + "_hist"]) {
          h5y = E5y;
        } else {
          h5y = i5y;
        }

        g5y[c5y][W0i + H5y.name] = h5y;
        ;
      }
    };

    Y6y.Studies.calculateElderRay = function (t5y, G5y) {
      var T0i, Q9v, R9v, l9v, p5y, g0i;
      T0i = "_h";
      T0i += "ist";
      T0i += "1";
      Q9v = -552604838;
      R9v = 1373720599;
      l9v = +"2";

      for (var K9v = 1; T5VV.s1v(K9v.toString(), K9v.toString().length, 57966) !== Q9v; K9v++) {
        p5y = G5y.chart.scrubbed;
        l9v += +"2";
      }

      if (T5VV.Y6v(l9v.toString(), l9v.toString().length, 93821) !== R9v) {
        p5y = G5y.chart.scrubbed;
      }

      if (p5y.length < G5y.days) {
        G5y.error = !![];
        return;
      }

      Y6y.Studies.MA("exponential", G5y.days, "Close", 0, "_EMA", t5y, G5y);

      for (var q5y = Math.max(G5y.startFrom, G5y.days - 1); q5y < p5y.length; q5y++) {
        g0i = "_hi";
        g0i += "s";
        g0i += "t";
        g0i += "2";
        p5y[q5y][G5y.name + "_hist1"] = p5y[q5y].High - p5y[q5y]["_EMA " + G5y.name];
        p5y[q5y][G5y.name + g0i] = p5y[q5y].Low - p5y[q5y]["_EMA " + G5y.name];
      }

      G5y.outputMap = {};
      G5y.outputMap[G5y.name + T0i] = "";
      G5y.outputMap[G5y.name + "_hist2"] = "";
    };

    Y6y.Studies.calculateElderForce = function (m5y, v5y) {
      var J0i, N5y;
      J0i = "_";
      J0i += "E";
      J0i += "F1 ";
      T5VV.k7Kh();
      N5y = v5y.chart.scrubbed;

      if (N5y.length < v5y.days) {
        v5y.error = !"";
        return;
      }

      for (var x5y = Math.max(1, v5y.startFrom); x5y < N5y.length; x5y++) {
        T5VV.i3mK(18);
        var U1Vu = T5VV.e3mK(14, 4, 16, 11);
        N5y[x5y]["_EF1 " + v5y.name] = N5y[x5y].Volume * (N5y[x5y].Close - N5y[x5y - U1Vu].Close);
      }

      Y6y.Studies.MA("exponential", v5y.days, J0i + v5y.name, 0, "Result", m5y, v5y);
    };

    Y6y.Studies.initElderImpulse = function (y5y, l5y, f5y, u5y, C5y, r5y) {
      var M5y;
      M5y = Y6y.Studies.initializeFN(y5y, l5y, f5y, u5y, C5y, r5y);

      if (C5y.calculateOnly) {
        return M5y;
      }

      y5y.chart.customChart = {
        chartType: "colored_bar",
        colorFunction: function colorFunction(H8y, e5y, J8y) {
          var Q0i, d5y;
          Q0i = "Resu";
          Q0i += "lt ";
          d5y = e5y[Q0i + M5y.name];

          if (d5y && _typeof(d5y) == "object") {
            d5y = d5y.color;
          }

          return d5y;
        }
      };
      y5y.setMainSeriesRenderer();
      return M5y;
    };

    Y6y.Studies.displayElderForce = function (O8y, K8y, j8y) {
      var g8y, h8y, i8y, n8y;
      Y6y.Studies.displaySeriesAsLine(O8y, K8y, j8y);
      g8y = Y6y.Studies.determineColor(K8y.outputs.Result);
      h8y = O8y.panels[K8y.panel];
      i8y = K8y.getYAxis(O8y);
      n8y = {
        skipTransform: h8y.name != K8y.chart.name,
        panelName: K8y.panel,
        band: "Result " + K8y.name,
        threshold: 0,
        color: g8y,
        yAxis: i8y
      };

      if (!K8y.highlight && O8y.highlightedDraggable) {
        n8y.opacity = 0.3;
      }

      n8y.direction = 1;
      Y6y.preparePeakValleyFill(O8y, n8y);
      n8y.direction = -1;
      Y6y.preparePeakValleyFill(O8y, n8y);
    };

    Y6y.Studies.displayElderRay = function (U8y, B8y, S8y) {
      var c6bh = T5VV;
      var R0i, q8y, G8y, k8y, t8y, p8y, v8y, r0i, l0i, E8y;
      R0i = "stx_h";
      c6bh.d7Kh();

      function D8y(x8y, N8y, V8y, a8y) {
        G8y.fillStyle = Y6y.Studies.determineColor(B8y.outputs[V8y]);
        G8y.fillRect(Math.floor(U8y.pixelFromBar(x8y, q8y.chart) - p8y / 2 + p8y * N8y), Math.floor(t8y), Math.floor(p8y * (1 - ("2" >> 430819008) * N8y)), Math.floor(U8y.pixelFromPrice(E8y[B8y.name + a8y], q8y, k8y) - t8y));
      }

      R0i += "istogr";
      R0i += "am";
      q8y = U8y.panels[B8y.panel];
      G8y = B8y.getContext(U8y);
      k8y = B8y.getYAxis(U8y);
      t8y = U8y.pixelFromPrice(0, q8y, k8y);
      c6bh.i3mK(7);
      var S1Vu = c6bh.e3mK(0, 3, 1);
      p8y = U8y.layout.candleWidth - S1Vu;

      if (p8y < "2" >> 1536754272) {
        p8y = 1;
      }

      U8y.canvasColor(R0i);
      v8y = G8y.fillStyle;

      if (!B8y.underlay) {
        G8y.globalAlpha = 1;
      }

      U8y.startClip(B8y.panel);

      if (!B8y.highlight && U8y.highlightedDraggable) {
        G8y.globalAlpha *= 0.3;
      }

      for (var o8y = 0; o8y < S8y.length; o8y++) {
        r0i = "E";
        r0i += "lder Bu";
        r0i += "ll Power";
        l0i = "El";
        l0i += "der Bull ";
        l0i += "Power";
        E8y = S8y[o8y];
        if (!E8y) continue;

        if (E8y.candleWidth) {
          p8y = Math.floor(Math.max(1, E8y.candleWidth - 2));
        }

        if (E8y[B8y.name + "_hist1"] > 0) {
          D8y(o8y, 0, l0i, "_hist1");
        }

        if (E8y[B8y.name + "_hist2"] < 0) {
          D8y(o8y, 0, "Elder Bear Power", "_hist2");
        }

        if (E8y[B8y.name + "_hist1"] < 0) {
          c6bh.N3mK(5);
          D8y(o8y, c6bh.e3mK(1, "0.1"), r0i, "_hist1");
        }

        if (E8y[B8y.name + "_hist2"] > 0) {
          D8y(o8y, 0.1, "Elder Bear Power", "_hist2");
        }
      }

      U8y.endClip();
      G8y.fillStyle = v8y;
    };

    Y6y.Studies.studyLibrary = Y6y.extend(Y6y.Studies.studyLibrary, {
      "Elder Force": {
        name: "Elder Force Index",
        calculateFN: Y6y.Studies.calculateElderForce,
        seriesFN: Y6y.Studies.displayElderForce,
        inputs: {
          Period: 13
        }
      },
      "Elder Ray": {
        name: K0i,
        seriesFN: Y6y.Studies.displayElderRay,
        calculateFN: Y6y.Studies.calculateElderRay,
        centerline: "0" | 0,
        inputs: {
          Period: 13
        },
        outputs: {
          "Elder Bull Power": V0i,
          "Elder Bear Power": "#FF0000"
        }
      },
      "Elder Impulse": {
        name: "Elder Impulse System",
        calculateFN: Y6y.Studies.calculateElderImpulse,
        initializeFN: Y6y.Studies.initElderImpulse,
        seriesFN: null,
        customRemoval: !!"1",
        underlay: !!{},
        inputs: {},
        outputs: {
          Bullish: "#8BC176",
          Bearish: O0i,
          Neutral: "#5F7CB8"
        },
        removeFN: function removeFN(m8y, M8y) {
          m8y.chart.customChart = null;
          T5VV.k7Kh();
          m8y.setMainSeriesRenderer();
        }
      }
    });
  }
};

C2B = function C2B(R8y) {
  var z8y, a0i;
  z8y = typeof _CIQ !== "undefined" ? _CIQ : R8y.CIQ;

  if (!z8y.Studies) {
    a0i = "fracta";
    a0i += "lChaos feature requires first activating studies fe";
    a0i += "ature.";
    console.error(a0i);
  } else {
    z8y.Studies.calculateFractalChaos = function (r8y, A8y) {
      var z6bh = T5VV;
      var P8y, L8y, f8y, l8y, u0i, X0i, I8y, u8y, T8y;
      P8y = A8y.chart.scrubbed;
      z6bh.k7Kh();
      z6bh.i3mK(4);
      L8y = z6bh.E3mK("0", 2147483647);
      f8y = 0;
      l8y = 0;

      if (A8y.startFrom && A8y.type == "Fractal Chaos Bands") {
        u0i = "F";
        u0i += "ractal Low ";
        z6bh.N3mK(1);
        var w1Vu = z6bh.E3mK(20, 21);
        L8y = P8y[A8y.startFrom - w1Vu]["Fractal High " + A8y.name];
        z6bh.i3mK(52);
        var t1Vu = z6bh.e3mK(2, 1, 1);
        f8y = P8y[A8y.startFrom - "1" * t1Vu][u0i + A8y.name];
      }

      for (var s8y = Math.max(4, A8y.startFrom); s8y < P8y.length; s8y++) {
        X0i = "Fractal";
        X0i += " Chaos";
        X0i += " Bands";
        if (P8y[s8y].futureTick) break;
        I8y = !isNaN(P8y[s8y].High);
        u8y = !isNaN(P8y[s8y].Low);

        if (I8y || u8y) {
          P8y[s8y]["Result " + A8y.name] = 0;
        }

        l8y = 0;

        for (T8y = 0; T8y <= s8y; T8y++) {
          if (!P8y[s8y - T8y]) break;
          if (P8y[s8y - T8y].High > P8y[s8y - +"2"].High) break;
          if (T8y < 2 && P8y[s8y - T8y].High == P8y[s8y - 2].High) break;

          if (P8y[s8y - T8y].High < P8y[s8y - 2].High) {
            l8y++;
          }

          if (l8y == 4) {
            L8y = P8y[s8y - 2].High;
            break;
          }
        }

        if (A8y.type == "Fractal Chaos Bands") {
          if (I8y) {
            P8y[s8y]["Fractal High " + A8y.name] = L8y > 0 ? L8y : null;
          }
        } else if (l8y == 4) {
          z6bh.i3mK(4);
          P8y[s8y]["Result " + A8y.name] = z6bh.E3mK("1", 2147483647);
        }

        l8y = 0;

        for (T8y = +"0"; T8y <= s8y; T8y++) {
          if (!P8y[s8y - T8y]) break;
          if (P8y[s8y - T8y].Low < P8y[s8y - ("2" >> 229558400)].Low) break;
          if (T8y < 2 && P8y[s8y - T8y].Low == P8y[s8y - ("2" >> 913944704)].Low) break;

          if (P8y[s8y - T8y].Low > P8y[s8y - +"2"].Low) {
            l8y++;
          }

          if (l8y == "4" * 1) {
            f8y = P8y[s8y - 2].Low;
            break;
          }
        }

        if (A8y.type == X0i) {
          if (u8y) {
            P8y[s8y]["Fractal Low " + A8y.name] = f8y > 0 ? f8y : null;
          }
        } else if (l8y == 4) {
          P8y[s8y]["Result " + A8y.name] = -1;
        }
      }
    };

    z8y.Studies.studyLibrary = z8y.extend(z8y.Studies.studyLibrary, {
      "Fractal Chaos": {
        name: "Fractal Chaos Oscillator",
        range: "-1 to 1",
        calculateFN: z8y.Studies.calculateFractalChaos,
        inputs: {},
        centerline: null
      },
      "Fractal Chaos Bands": {
        name: "Fractal Chaos Bands",
        overlay: !!{},
        calculateFN: z8y.Studies.calculateFractalChaos,
        seriesFN: z8y.Studies.displayChannel,
        inputs: {
          "Channel Fill": !![]
        },
        outputs: {
          "Fractal High": "auto",
          "Fractal Low": "auto",
          "Fractal Channel": "auto"
        }
      }
    });
  }
};

l2B = function l2B(F8y) {
  var d8y, j3i, x3i, L3i, t3i;
  d8y = typeof _CIQ !== "undefined" ? _CIQ : F8y.CIQ;

  if (!d8y.Studies) {
    console.error("highLowStudies feature requires first activating studies feature.");
  } else {
    j3i = "Verti";
    j3i += "cal Horizontal";
    j3i += " Fil";
    j3i += "ter";
    x3i = "a";
    x3i += "uto";
    L3i = "Willi";
    L3i += "ams %";
    L3i += "R";
    t3i = "aut";
    t3i += "o";

    d8y.Studies.calculateMaxHighMinLow = function (c9y, Q8y) {
      var C6bh = T5VV;
      var Y0i, p0i, w8y, J9y, H9y, Y8y, X8y, b8y, s3i, Z8y, H3i, v3i, S3i, U3i;
      Y0i = "L";
      Y0i += "ow";
      Y0i += " Peri";
      Y0i += "od";
      p0i = "Hi";
      p0i += "g";
      p0i += "h";
      p0i += " Period";
      w8y = Q8y.chart.scrubbed;
      J9y = Q8y.days;
      H9y = Q8y.days;

      if (Q8y.inputs[p0i]) {
        J9y = Q8y.inputs["High Period"];
      }

      if (Q8y.inputs[Y0i]) {
        H9y = Q8y.inputs["Low Period"];
      }

      if (w8y.length < Math.max(J9y, H9y) + 1) {
        Q8y.error = !!{};
        return;
      }

      Y8y = Number.MAX_VALUE;
      C6bh.i3mK(139);
      var L1Vu = C6bh.e3mK(6, 3, 4);
      X8y = Number.MAX_VALUE * L1Vu;

      if (Q8y.startFrom > 1) {
        for (b8y = +"1"; b8y < J9y; b8y++) {
          if (Q8y.startFrom - b8y >= 0) {
            X8y = Math.max(X8y, w8y[Q8y.startFrom - b8y].High);
          }
        }

        for (b8y = 1; b8y < H9y; b8y++) {
          if (Q8y.startFrom - b8y >= 0) {
            Y8y = Math.min(Y8y, w8y[Q8y.startFrom - b8y].Low);
          }
        }
      }

      for (var W8y = Math.max(0, Q8y.startFrom - 1); W8y < w8y.length; W8y++) {
        s3i = "VT";
        s3i += " HZ Fil";
        s3i += "ter";
        X8y = Math.max(X8y, w8y[W8y].High);
        Y8y = Math.min(Y8y, w8y[W8y].Low);

        if (W8y >= J9y) {
          if (w8y[W8y - J9y].High == X8y) {
            X8y = w8y[W8y].High;

            for (b8y = 1; b8y < J9y; b8y++) {
              X8y = Math.max(X8y, w8y[W8y - b8y].High);
            }
          }
        }

        if (W8y >= H9y) {
          if (w8y[W8y - H9y].Low == Y8y) {
            Y8y = w8y[W8y].Low;

            for (b8y = 1; b8y < H9y; b8y++) {
              Y8y = Math.min(Y8y, w8y[W8y - b8y].Low);
            }
          }
        }

        Z8y = 0;

        if (Q8y.type == "HHV") {
          Z8y = X8y;
        } else if (Q8y.type == "LLV") {
          Z8y = Y8y;
        } else if (Q8y.type == "Donchian Width") {
          C6bh.i3mK(1);
          Z8y = C6bh.E3mK(Y8y, X8y);
        } else if (Q8y.type == "GAPO" || Q8y.type == "Gopala") {
          Z8y = Math.log(X8y - Y8y) / Math.log(H9y);
        } else if (Q8y.type == s3i) {
          H3i = "_M";
          H3i += "H";
          H3i += "M";
          H3i += "L ";
          C6bh.i3mK(1);
          Z8y = C6bh.E3mK(Y8y, X8y);
          w8y[W8y][H3i + Q8y.name] = Z8y;
          continue;
        } else if (Q8y.type == "Williams %R") {
          C6bh.i3mK(140);
          var x1Vu = C6bh.E3mK(2, 114, 4380, 10, 4);
          Z8y = x1Vu * (X8y - w8y[W8y].Close) / (X8y - Y8y);
          w8y[W8y]["Result " + Q8y.name] = Z8y;
          continue;
        }

        if (W8y == w8y.length - 1) break;

        if (!w8y[W8y + 1].futureTick) {
          v3i = "Do";
          v3i += "nchian Channel";

          if (Q8y.type == v3i) {
            S3i = "Donch";
            S3i += "ia";
            S3i += "n Medi";
            S3i += "an ";
            U3i = "D";
            U3i += "onchian";
            U3i += " High ";
            C6bh.N3mK(0);
            w8y[C6bh.e3mK(1, W8y)][U3i + Q8y.name] = X8y;
            C6bh.i3mK(0);
            w8y[C6bh.e3mK(1, W8y)]["Donchian Low " + Q8y.name] = Y8y;
            C6bh.i3mK(0);
            w8y[C6bh.e3mK(1, W8y)][S3i + Q8y.name] = C6bh.e3mK(2, X8y, Y8y, C6bh.i3mK(6));
          } else {
            C6bh.i3mK(120);
            w8y[C6bh.E3mK("1", W8y)]["Result " + Q8y.name] = Z8y;
          }
        }
      }
    };

    d8y.Studies.calculateVerticalHorizontalFilter = function (j9y, K9y) {
      var O9y, g9y, h9y, i9y, w3i;
      O9y = K9y.chart.scrubbed;

      if (O9y.length < K9y.days + 1) {
        K9y.error = !![];
        return;
      }

      K9y.mhml = new d8y.Studies.StudyDescriptor(K9y.name, K9y.type, K9y.panel);
      K9y.mhml.chart = K9y.chart;
      K9y.mhml.days = K9y.days;
      K9y.mhml.startFrom = K9y.startFrom;
      K9y.mhml.inputs = {};
      K9y.mhml.outputs = {
        _MHML: null
      };
      d8y.Studies.calculateMaxHighMinLow(j9y, K9y.mhml);
      T5VV.d7Kh();
      g9y = 0;
      h9y = [];

      for (var n9y = Math.max(1, K9y.startFrom - K9y.days); n9y < O9y.length; n9y++) {
        i9y = Math.abs(O9y[n9y].Close - O9y[n9y - 1].Close);
        h9y.push(i9y);
        g9y += i9y;

        if (h9y.length == K9y.days) {
          w3i = "_";
          w3i += "MH";
          w3i += "ML ";
          O9y[n9y]["Result " + K9y.name] = O9y[n9y][w3i + K9y.name] / g9y;
          g9y -= h9y.shift();
        }
      }
    };

    d8y.Studies.studyLibrary = d8y.extend(d8y.Studies.studyLibrary, {
      "Donchian Channel": {
        name: "Donchian Channel",
        overlay: !!{},
        calculateFN: d8y.Studies.calculateMaxHighMinLow,
        seriesFN: d8y.Studies.displayChannel,
        inputs: {
          "High Period": +"20",
          "Low Period": 20,
          "Channel Fill": !!{}
        },
        outputs: {
          "Donchian High": t3i,
          "Donchian Median": "auto",
          "Donchian Low": "auto"
        }
      },
      "Donchian Width": {
        name: "Donchian Width",
        calculateFN: d8y.Studies.calculateMaxHighMinLow,
        inputs: {
          "High Period": 20,
          "Low Period": 20
        }
      },
      GAPO: {
        name: "Gopalakrishnan Range Index",
        calculateFN: d8y.Studies.calculateMaxHighMinLow
      },
      HHV: {
        name: "Highest High Value",
        calculateFN: d8y.Studies.calculateMaxHighMinLow,
        inputs: {
          Period: 14
        }
      },
      LLV: {
        name: "Lowest Low Value",
        calculateFN: d8y.Studies.calculateMaxHighMinLow,
        inputs: {
          Period: 14
        }
      },
      "Williams %R": {
        name: L3i,
        calculateFN: d8y.Studies.calculateMaxHighMinLow,
        inputs: {
          Period: 14
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !![],
            studyOverBoughtValue: -20,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: -+"80",
            studyOverSoldColor: x3i
          }
        }
      },
      "VT HZ Filter": {
        name: j3i,
        calculateFN: d8y.Studies.calculateVerticalHorizontalFilter,
        inputs: {
          Period: 28
        }
      },
      "High-Low": {
        name: "High Minus Low",
        calculateFN: function calculateFN(o9y, E9y) {
          var U9y;
          U9y = E9y.chart.scrubbed;

          for (var B9y = E9y.startFrom; B9y < U9y.length; B9y++) {
            U9y[B9y]["Result " + E9y.name] = U9y[B9y].High - U9y[B9y].Low;
          }
        },
        inputs: {}
      }
    });
  }
};

L2B = function L2B(p9y) {
  var G9y, d3i, c3i, n3i, F3i;
  G9y = typeof _CIQ !== "undefined" ? _CIQ : p9y.CIQ;

  if (!G9y.Studies) {
    console.error("ichimoku feature requires first activating studies feature.");
  } else {
    d3i = "#";
    d3i += "808000";
    c3i = "#00";
    c3i += "FF00";
    n3i = "#";
    n3i += "FF";
    n3i += "0";
    n3i += "000";
    F3i = "Ichimo";
    F3i += "ku";
    F3i += " Cl";
    F3i += "ouds";

    G9y.Studies.calculateIchimoku = function (m9y, D9y) {
      var S6bh = T5VV;
      var o3i, k9y, t9y, q9y, S9y, N3i, M3i, e3i, x9y, V9y, a9y, Z3i, I3i, i3i, v9y;
      S6bh.k7Kh();
      o3i = "Lagging S";
      o3i += "pan Period";
      k9y = D9y.chart.scrubbed;
      t9y = {
        Base: Number(D9y.inputs["Base Line Period"]),
        Conv: Number(D9y.inputs["Conversion Line Period"]),
        LeadB: Number(D9y.inputs["Leading Span B Period"]),
        Lag: Number(D9y.inputs[o3i])
      };

      for (q9y = D9y.startFrom; q9y < k9y.length; q9y++) {
        N3i = "L";
        N3i += "ag";
        N3i += "ging Sp";
        N3i += "an ";
        M3i = "Ba";
        M3i += "se ";
        M3i += "Line ";
        e3i = "Co";
        e3i += "nversion Line ";
        if (!k9y[q9y]) continue;
        S9y = N9y(t9y.Conv, q9y);
        S6bh.i3mK(126);
        var j1Vu = S6bh.E3mK(20, 14, 13, 34, 13);
        k9y[q9y][e3i + D9y.name] = (S9y[+"1"] + S9y[0]) / j1Vu;
        S9y = N9y(t9y.Base, q9y);
        S6bh.i3mK(43);
        var o1Vu = S6bh.e3mK(13, 5, 16, 8, 1026);
        k9y[q9y][M3i + D9y.name] = (S9y["1" - 0] + S9y[0]) / o1Vu;
        if (q9y < t9y.Lag) continue;
        k9y[q9y - t9y.Lag][N3i + D9y.name] = k9y[q9y].Close;
      }

      x9y = [];

      for (q9y = Math.max(0, D9y.startFrom - t9y.Base); q9y < k9y.length; q9y++) {
        S9y = N9y(t9y.LeadB, q9y);
        S6bh.i3mK(61);
        var e1Vu = S6bh.e3mK(20, 20, 0, 19, 16);
        V9y = (k9y[q9y]["Conversion Line " + D9y.name] + k9y[q9y]["Base Line " + D9y.name]) / e1Vu;
        S6bh.i3mK(141);
        var M1Vu = S6bh.E3mK(16, 19, 8, 0, 4);
        S6bh.N3mK(52);
        var N1Vu = S6bh.E3mK(12, 1, 4);
        a9y = (S9y[M1Vu] + S9y[0]) / N1Vu;

        if (k9y[q9y + t9y.Base]) {
          Z3i = "Le";
          Z3i += "ading S";
          Z3i += "pan B ";
          I3i = "L";
          I3i += "eading Span ";
          I3i += "A ";
          k9y[q9y + t9y.Base][I3i + D9y.name] = V9y;
          k9y[q9y + t9y.Base][Z3i + D9y.name] = a9y;
        } else {
          i3i = "Leading Span ";
          i3i += "B ";
          v9y = {};
          v9y["Leading Span A " + D9y.name] = V9y;
          v9y[i3i + D9y.name] = a9y;
          x9y.push(v9y);
        }
      }

      function N9y(P9y, s9y) {
        var z9y, R9y;
        z9y = Number.MAX_VALUE;
        S6bh.N3mK(1);
        var I1Vu = S6bh.e3mK(1, 0);
        R9y = Number.MAX_VALUE * I1Vu;

        for (var M9y = s9y - P9y + 1; M9y <= s9y; M9y++) {
          if (M9y < 0) continue;
          z9y = Math.min(z9y, k9y[M9y].Low);
          R9y = Math.max(R9y, k9y[M9y].High);
        }

        return [z9y, R9y];
      }

      D9y.appendFutureTicks(m9y, x9y);
    };

    G9y.Studies.displayIchimoku = function (A9y, T9y, r9y) {
      var y9y, C9y, f9y, I9y, u9y, l9y, L9y;
      y9y = "Leading Span A " + T9y.name;
      C9y = "Leading Span B " + T9y.name;
      f9y = G9y.Studies.determineColor(T9y.outputs[T9y.outputMap[y9y]]);
      I9y = G9y.Studies.determineColor(T9y.outputs[T9y.outputMap[C9y]]);
      u9y = A9y.panels[T9y.panel];
      l9y = T9y.getYAxis(A9y);
      L9y = {
        topBand: y9y,
        bottomBand: C9y,
        topColor: f9y,
        bottomColor: I9y,
        skipTransform: u9y.name != T9y.chart.name,
        topAxis: l9y,
        bottomAxis: l9y,
        opacity: 0.3
      };

      if (!T9y.highlight && A9y.highlightedDraggable) {
        L9y.opacity *= 0.3;
      }

      G9y.fillIntersecting(A9y, T9y.panel, L9y);
      G9y.Studies.displaySeriesAsLine(A9y, T9y, r9y);
    };

    G9y.Studies.studyLibrary = G9y.extend(G9y.Studies.studyLibrary, {
      "Ichimoku Clouds": {
        name: F3i,
        overlay: !"",
        calculateFN: G9y.Studies.calculateIchimoku,
        seriesFN: G9y.Studies.displayIchimoku,
        inputs: {
          "Conversion Line Period": 9,
          "Base Line Period": 26,
          "Leading Span B Period": +"52",
          "Lagging Span Period": 26
        },
        outputs: {
          "Conversion Line": "#0000FF",
          "Base Line": n3i,
          "Leading Span A": c3i,
          "Leading Span B": "#FF0000",
          "Lagging Span": d3i
        }
      }
    });
  }
};

f2B = function f2B(F9y) {
  var d9y, z3i, h3i, b3i;
  d9y = typeof _CIQ !== "undefined" ? _CIQ : F9y.CIQ;

  if (!d9y.Studies) {
    console.error("intradayMomentum feature requires first activating studies feature.");
  } else {
    z3i = "a";
    z3i += "u";
    z3i += "t";
    z3i += "o";
    h3i = "a";
    h3i += "u";
    h3i += "t";
    h3i += "o";
    b3i = "Intraday";
    b3i += " Momentum Index";

    d9y.Studies.calculateIntradayMomentum = function (H0U, Q9y) {
      var y6bh = T5VV;
      var w9y, X9y, b9y, e9y, q3i, Y9y, Z9y;
      w9y = Q9y.chart.scrubbed;
      X9y = Q9y.days;

      if (w9y.length < X9y + 1) {
        Q9y.error = !!"1";
        return;
      }

      b9y = 0;
      y6bh.k7Kh();
      e9y = 0;

      if (Q9y.startFrom > +"1") {
        y6bh.N3mK(16);
        var Z1Vu = y6bh.E3mK(4, 3);
        b9y = w9y[Q9y.startFrom - Z1Vu]["_totUp " + Q9y.name];
        y6bh.N3mK(142);
        var i1Vu = y6bh.e3mK(31, 15, 12, 6);
        e9y = w9y[Q9y.startFrom - i1Vu]["_totDn " + Q9y.name];
      }

      for (var W9y = Q9y.startFrom; W9y < w9y.length; W9y++) {
        q3i = "_t";
        q3i += "ot";
        q3i += "Dn";
        q3i += " ";
        Y9y = w9y[W9y].Close - w9y[W9y].Open;

        if (Y9y > 0) {
          b9y += Y9y;
        } else {
          e9y -= Y9y;
        }

        if (W9y >= X9y) {
          Z9y = w9y[W9y - X9y].Close - w9y[W9y - X9y].Open;

          if (Z9y > 0) {
            b9y -= Z9y;
          } else {
            e9y += Z9y;
          }
        }

        y6bh.N3mK(143);
        w9y[W9y]["Result " + Q9y.name] = y6bh.e3mK(e9y, b9y, b9y, 100);
        w9y[W9y]["_totUp " + Q9y.name] = b9y;
        w9y[W9y][q3i + Q9y.name] = e9y;
      }
    };

    d9y.Studies.studyLibrary = d9y.extend(d9y.Studies.studyLibrary, {
      "Intraday Mtm": {
        name: b3i,
        calculateFN: d9y.Studies.calculateIntradayMomentum,
        inputs: {
          Period: +"20"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !"",
            studyOverBoughtValue: 70,
            studyOverBoughtColor: h3i,
            studyOverSoldValue: 30,
            studyOverSoldColor: z3i
          }
        }
      }
    });
  }
};

I2B = function I2B(c0U) {
  var I4Kh = T5VV;
  var J0U, f3i, j0v, o0v, e0v, m3i, G3i, P3i;
  J0U = typeof _CIQ !== "undefined" ? _CIQ : c0U.CIQ;

  if (!J0U.Studies) {
    console.error("keltner feature requires first activating studies feature.");
  } else {
    f3i = "a";
    f3i += "u";
    f3i += "to";

    J0U.Studies.calculateKeltner = function (O0U, K0U) {
      var B3i, E3i;
      B3i = "Cl";
      I4Kh.d7Kh();
      B3i += "o";
      B3i += "s";
      B3i += "e";
      E3i = "Movin";
      E3i += "g Averag";
      E3i += "e Type";
      J0U.Studies.MA(K0U.inputs[E3i], K0U.days, B3i, 0, "MA", O0U, K0U);
      J0U.Studies.calculateStudyATR(O0U, K0U);
      J0U.Studies.calculateGenericEnvelope(O0U, K0U, K0U.inputs.Shift, "MA " + K0U.name, "ATR " + K0U.name);
    };

    j0v = -822345410;
    I4Kh.i3mK(26);
    o0v = -I4Kh.e3mK("1527375596", 0);
    I4Kh.N3mK(22);
    e0v = I4Kh.e3mK("2", 2);

    for (var N0v = 1; I4Kh.Y6v(N0v.toString(), N0v.toString().length, "60288" >> 1215318368) !== j0v; N0v++) {
      m3i = "Cha";
      m3i += "nnel";
      m3i += " Fill";
      G3i = "a";
      G3i += "u";
      G3i += "t";
      G3i += "o";
      J0U.Studies.studyLibrary = J0U.extend(J0U.Studies.studyLibrary, {
        Keltner: {
          name: "Channel Fill",
          overlay: ![],
          seriesFN: J0U.Studies.displayChannel,
          calculateFN: J0U.Studies.calculateKeltner,
          inputs: {
            Period: 97,
            Shift: +"2",
            "Moving Average Type": "Keltner Top",
            "Channel Fill": !!""
          },
          outputs: {
            "Keltner Top": "Keltner Bottom",
            "Keltner Median": G3i,
            "Keltner Bottom": m3i
          },
          attributes: {
            Shift: {
              min: 535,
              step: 521
            }
          }
        }
      });
      e0v += 2;
    }

    if (I4Kh.s1v(e0v.toString(), e0v.toString().length, 53135) !== o0v) {
      P3i = "Cha";
      P3i += "n";
      P3i += "nel ";
      P3i += "Fill";
      J0U.Studies.studyLibrary = J0U.extend(J0U.Studies.studyLibrary, {
        Keltner: {
          name: P3i,
          overlay: ![],
          seriesFN: J0U.Studies.displayChannel,
          calculateFN: J0U.Studies.calculateKeltner,
          inputs: {
            Period: +"97",
            Shift: 2,
            "Moving Average Type": "Keltner Top",
            "Channel Fill": ![]
          },
          outputs: {
            "Keltner Top": "Keltner Bottom",
            "Keltner Median": "auto",
            "Keltner Bottom": "Channel Fill"
          },
          attributes: {
            Shift: {
              min: 535,
              step: +"521"
            }
          }
        }
      });
    }

    J0U.Studies.studyLibrary = J0U.extend(J0U.Studies.studyLibrary, {
      Keltner: {
        name: "Keltner Channel",
        overlay: !!1,
        seriesFN: J0U.Studies.displayChannel,
        calculateFN: J0U.Studies.calculateKeltner,
        inputs: {
          Period: 50,
          Shift: +"5",
          "Moving Average Type": "ema",
          "Channel Fill": !!"1"
        },
        outputs: {
          "Keltner Top": f3i,
          "Keltner Median": "auto",
          "Keltner Bottom": "auto"
        },
        attributes: {
          Shift: {
            min: "0.1" * 1,
            step: 0.1
          }
        }
      }
    });
  }
};

u2B = function u2B(g0U) {
  var n0U;
  n0U = typeof _CIQ !== "undefined" ? _CIQ : g0U.CIQ;

  if (!n0U.Studies) {
    console.error("klinger feature requires first activating studies feature.");
  } else {
    n0U.Studies.calculateKlinger = function (G0U, i0U) {
      var k3i, y3i, D3i, j0U, p0U, B0U, q0U, U0U, t0U, E0U, D0U, k0U, h0U, o0U;
      k3i = "Signal Pe";
      k3i += "rio";
      k3i += "ds";
      y3i = "_EM";
      y3i += "A-S ";
      D3i = "K";
      D3i += "lingerSi";
      D3i += "gn";
      D3i += "al ";
      j0U = i0U.chart.scrubbed;
      p0U = Number(i0U.inputs["Short Cycle"]);
      B0U = Number(i0U.inputs["Long Cycle"]);

      if (j0U.length < Math.max(p0U, B0U) + 1) {
        i0U.error = !"";
        return;
      }

      q0U = i0U.name + "_hist";
      U0U = "Klinger " + i0U.name;
      t0U = D3i + i0U.name;
      E0U = "_SV " + i0U.name;
      D0U = y3i + i0U.name;
      k0U = "_EMA-L " + i0U.name;

      for (h0U = Math.max(1, i0U.startFrom); h0U < j0U.length; h0U++) {
        o0U = j0U[h0U].Volume;

        if (j0U[h0U]["hlc/3"] < j0U[h0U - 1]["hlc/3"]) {
          o0U *= -1;
        }

        if (o0U) {
          j0U[h0U][E0U] = o0U;
        }
      }

      n0U.Studies.MA("exponential", p0U, E0U, 0, "_EMA-S", G0U, i0U);
      n0U.Studies.MA("exponential", B0U, E0U, 0, "_EMA-L", G0U, i0U);

      for (h0U = Math.max(B0U, i0U.startFrom); h0U < j0U.length; h0U++) {
        if (j0U[h0U].futureTick || j0U[h0U][D0U] === null || j0U[h0U][k0U] === null) break;
        j0U[h0U][U0U] = j0U[h0U][D0U] - j0U[h0U][k0U];
      }

      n0U.Studies.MA("exponential", Number(i0U.inputs[k3i]), U0U, 0, "KlingerSignal", G0U, i0U);

      for (h0U = i0U.startFrom; h0U < j0U.length; h0U++) {
        j0U[h0U][q0U] = j0U[h0U][U0U] - j0U[h0U][t0U];
      }

      i0U.outputMap[q0U] = "";
    };

    n0U.Studies.studyLibrary = n0U.extend(n0U.Studies.studyLibrary, {
      Klinger: {
        name: "Klinger Volume Oscillator",
        seriesFN: n0U.Studies.displayHistogramWithSeries,
        calculateFN: n0U.Studies.calculateKlinger,
        inputs: {
          "Signal Periods": 13,
          "Short Cycle": +"34",
          "Long Cycle": 55
        },
        outputs: {
          Klinger: "auto",
          KlingerSignal: "#FF0000",
          "Increasing Bar": "#00DD00",
          "Decreasing Bar": "#FF0000"
        }
      }
    });
  }
};

r2B = function r2B(v0U) {
  var S0U, K3i, r3i, l3i, R3i, Q3i, A3i, C3i;
  S0U = typeof _CIQ !== "undefined" ? _CIQ : v0U.CIQ;

  if (!S0U.Studies) {
    console.error("linearRegression feature requires first activating studies feature.");
  } else {
    K3i = "fi";
    K3i += "e";
    K3i += "l";
    K3i += "d";
    r3i = "au";
    r3i += "t";
    r3i += "o";
    l3i = "fi";
    l3i += "e";
    l3i += "l";
    l3i += "d";
    R3i = "Linear Reg Interce";
    R3i += "pt";
    Q3i = "au";
    Q3i += "to";
    A3i = "Tim";
    A3i += "e";
    A3i += "Serie";
    A3i += "s";
    C3i = "tim";
    C3i += "e ";
    C3i += "se";
    C3i += "ries";
    S0U.Studies.prettify[C3i] = "tsma";
    S0U.Studies.movingAverage.conversions.tsma = "time series";
    S0U.Studies.movingAverage.translations["time series"] = "Time Series";
    S0U.Studies.movingAverage.typeMap.tsma = "TimeSeries";
    S0U.Studies.movingAverage.typeMap["time series"] = A3i;

    S0U.Studies.calculateMovingAverageTimeSeries = function (T0U, N0U) {
      var j6bh = T5VV;
      var a0U, V0U, m0U, M0U, z0U, R0U, s0U, P0U;
      N0U.ma = new S0U.Studies.StudyDescriptor(N0U.name, "ma", N0U.panel);
      N0U.ma.chart = N0U.chart;
      N0U.ma.days = N0U.days;
      N0U.ma.startFrom = N0U.startFrom;
      N0U.ma.inputs = N0U.inputs;
      S0U.Studies.calculateLinearRegressionIndicator(T0U, N0U.ma);
      a0U = N0U.name;

      for (var A0U in N0U.outputs) {
        j6bh.i3mK(93);
        a0U = j6bh.E3mK(a0U, A0U, 4466 <= 3010 ? ("3740" ^ 0, 211) !== (8223, 9560) ? (1890, 9544) >= 3627 ? 0x10c7 : ("k", ![]) : 18.97 : " ");
      }

      V0U = parseInt(N0U.inputs.Offset, +"10");

      if (isNaN(V0U)) {
        V0U = 0;
      }

      m0U = N0U.chart.scrubbed;
      M0U = V0U;

      for (var x0U = N0U.startFrom - +"1"; x0U >= 0; x0U--) {
        z0U = m0U[x0U][a0U];
        if (!z0U && z0U !== "0" << 2083838752) continue;

        if (M0U > 0) {
          M0U--;
          continue;
        }

        break;
      }

      R0U = [];
      j6bh.d7Kh();

      for (x0U++; x0U < m0U.length; x0U++) {
        s0U = m0U[x0U];

        if (x0U + V0U >= 0) {
          if (x0U + V0U < m0U.length) {
            j6bh.N3mK(0);
            m0U[j6bh.E3mK(V0U, x0U)][a0U] = s0U["Forecast " + N0U.name];
          } else {
            P0U = {};
            P0U[a0U] = s0U["Forecast " + N0U.name];
            R0U.push(P0U);
          }
        }
      }

      N0U.appendFutureTicks(T0U, R0U);
    };

    S0U.Studies.calculateLinearRegressionIndicator = function (Y0U, y0U) {
      var v6bh = T5VV;
      var l0U, u0U, F0U, W0U, b0U, f0U, Q0U, r0U, w0U, J3i, T3i, g3i, L0U, W3i, I0U, d0U, e0U, X0U;
      l0U = y0U.chart.scrubbed;

      if (l0U.length < y0U.days + 1) {
        y0U.error = !0;
        return;
      }

      u0U = y0U.inputs.Field;

      if (!u0U || u0U == "field") {
        u0U = "Close";
      }

      v6bh.i3mK(70);
      var F1Vu = v6bh.e3mK(87, 5, 15, 13);
      v6bh.N3mK(1);
      var n1Vu = v6bh.E3mK(13, 15);
      F0U = y0U.days * (y0U.days + F1Vu) / n1Vu;
      W0U = Math.pow(F0U, +"2");
      v6bh.i3mK(45);
      var c1Vu = v6bh.E3mK(37, 2, 19, 0);
      v6bh.N3mK(70);
      var d1Vu = v6bh.e3mK(161, 12, 13, 8);
      b0U = F0U * ("2" * c1Vu * y0U.days + +"1") / d1Vu;
      f0U = 0;
      Q0U = +"0";
      r0U = 0;

      if (y0U.startFrom) {
        v6bh.i3mK(28);
        var q1Vu = v6bh.e3mK(14, 8, 1, 0, 7);
        w0U = l0U[y0U.startFrom - q1Vu]["_sums " + y0U.name];

        if (w0U) {
          Q0U = w0U[0];
          f0U = w0U[1];
          r0U = w0U[2];
        }
      }

      for (var C0U = y0U.startFrom; C0U < l0U.length; C0U++) {
        J3i = "Fore";
        J3i += "cast ";
        T3i = "Int";
        T3i += "e";
        T3i += "rc";
        T3i += "ept ";
        g3i = "Slo";
        g3i += "pe ";
        L0U = l0U[C0U][u0U];

        if (L0U && _typeof(L0U) == "object") {
          L0U = L0U[y0U.subField];
        }

        if (!L0U && L0U !== "0" << 115812512) continue;
        Q0U += y0U.days * L0U - f0U;
        f0U += L0U;
        r0U += Math.pow(L0U, 2);
        if (C0U < y0U.days - 1) continue;else if (C0U > y0U.days - +"1") {
          W3i = "ob";
          W3i += "je";
          W3i += "c";
          W3i += "t";
          I0U = l0U[C0U - y0U.days][u0U];

          if (I0U && _typeof(I0U) == W3i) {
            I0U = I0U[y0U.subField];
          }

          if (!I0U && I0U !== 0) continue;
          f0U -= I0U;
          r0U -= Math.pow(I0U, 2);
        }
        d0U = (y0U.days * Q0U - F0U * f0U) / (y0U.days * b0U - W0U);
        l0U[C0U][g3i + y0U.name] = d0U;
        e0U = (f0U - d0U * F0U) / y0U.days;
        l0U[C0U][T3i + y0U.name] = e0U;
        l0U[C0U][J3i + y0U.name] = e0U + d0U * y0U.days;
        v6bh.N3mK(1);
        var b1Vu = v6bh.E3mK(8, 10);
        X0U = (y0U.days * b0U - W0U) / (y0U.days * r0U - Math.pow(f0U, b1Vu));
        v6bh.N3mK(144);
        l0U[C0U]["RSquared " + y0U.name] = v6bh.E3mK(X0U, d0U, d0U);
        l0U[C0U]["_sums " + y0U.name] = [Q0U, f0U, r0U];
      }
    };

    S0U.Studies.studyLibrary = S0U.extend(S0U.Studies.studyLibrary, {
      "Lin Fcst": {
        name: "Linear Reg Forecast",
        overlay: !0,
        calculateFN: S0U.Studies.calculateLinearRegressionIndicator,
        inputs: {
          Period: 14,
          Field: "field"
        },
        outputs: {
          Forecast: Q3i
        }
      },
      "Lin Incpt": {
        name: R3i,
        overlay: !![],
        calculateFN: S0U.Studies.calculateLinearRegressionIndicator,
        inputs: {
          Period: 14,
          Field: l3i
        },
        outputs: {
          Intercept: r3i
        }
      },
      "Lin R2": {
        name: "Linear Reg R2",
        calculateFN: S0U.Studies.calculateLinearRegressionIndicator,
        inputs: {
          Period: 14,
          Field: "field"
        },
        outputs: {
          RSquared: "auto"
        }
      },
      "LR Slope": {
        name: "Linear Reg Slope",
        calculateFN: S0U.Studies.calculateLinearRegressionIndicator,
        inputs: {
          Period: 14,
          Field: K3i
        },
        outputs: {
          Slope: "auto"
        }
      },
      "Time Fcst": {
        name: "Time Series Forecast",
        overlay: !"",
        calculateFN: S0U.Studies.calculateLinearRegressionIndicator,
        inputs: {
          Period: 14,
          Field: "field"
        },
        outputs: {
          Forecast: "auto"
        }
      }
    });
  }
};

d2B = function d2B(H1U) {
  var Z0U, V3i, H9i;
  Z0U = typeof _CIQ !== "undefined" ? _CIQ : H1U.CIQ;

  if (!Z0U.Studies) {
    V3i = "mac";
    V3i += "d";
    V3i += " feature requires first activating studies feature.";
    console.error(V3i);
  } else {
    H9i = "M";
    H9i += "A";
    H9i += "C";
    H9i += "D";

    Z0U.Studies.calculateMACD = function (B1U, J1U) {
      var i6bh = T5VV;
      var Y3i, a3i, O3i, n1U, g1U, c1U, h1U, i1U, O1U, K1U, U1U, p3i, X3i, u3i, j1U, E1U, s9i, o1U;
      Y3i = "_";
      Y3i += "hist";
      a3i = "Signal";
      a3i += " Pe";
      a3i += "rio";
      a3i += "d";
      O3i = "Fast MA P";
      O3i += "eriod";
      n1U = J1U.chart.scrubbed;
      g1U = J1U.inputs;
      c1U = J1U.name;

      if (!J1U.macd1Days) {
        J1U.macd1Days = parseFloat(g1U[O3i]);
      }

      if (!J1U.macd2Days) {
        J1U.macd2Days = parseFloat(g1U["Slow MA Period"]);
      }

      if (!J1U.signalDays) {
        J1U.signalDays = parseFloat(g1U[a3i]);
      }

      if (!J1U.days) {
        J1U.days = Math.max(J1U.macd1Days, J1U.macd2Days, J1U.signalDays);
      }

      if (n1U.length < J1U.days + 1) {
        J1U.error = !!1;
        return;
      }

      h1U = J1U.inputs.Field;

      if (!h1U || h1U == "field") {
        h1U = "Close";
      }

      i1U = g1U["Moving Average Type"];

      if (!i1U) {
        i1U = "exponential";
      }

      Z0U.Studies.MA(i1U, J1U.macd1Days, h1U, 0, "_MACD1", B1U, J1U);
      Z0U.Studies.MA(i1U, J1U.macd2Days, h1U, 0, "_MACD2", B1U, J1U);
      U1U = Math.max(J1U.startFrom, J1U.days - 1);

      for (O1U = U1U; O1U < n1U.length; O1U++) {
        p3i = "_M";
        p3i += "AC";
        p3i += "D";
        p3i += "2 ";
        X3i = "_MACD1";
        X3i += " ";
        u3i = "_MACD";
        u3i += "1 ";
        K1U = n1U[O1U];

        if ((K1U[u3i + c1U] || K1U[X3i + c1U] === 0) && (K1U[p3i + c1U] || K1U["_MACD2 " + c1U] === 0)) {
          i6bh.i3mK(0);
          K1U[i6bh.E3mK(c1U, "MACD ")] = K1U["_MACD1 " + c1U] - K1U["_MACD2 " + c1U];
        }
      }

      j1U = g1U["Signal MA Type"];

      if (!j1U) {
        j1U = "exponential";
      }

      Z0U.Studies.MA(j1U, J1U.signalDays, "MACD " + c1U, "0" << 531080832, "Signal", B1U, J1U);
      i6bh.i3mK(0);
      E1U = i6bh.e3mK(Y3i, c1U);

      for (O1U = U1U; O1U < n1U.length; O1U++) {
        s9i = "Signa";
        s9i += "l ";
        K1U = n1U[O1U];
        i6bh.N3mK(0);
        o1U = K1U[i6bh.E3mK(c1U, s9i)];
        if (!o1U && o1U !== 0) continue;
        K1U[E1U] = K1U["MACD " + c1U] - K1U["Signal " + c1U];
      }

      J1U.outputMap[E1U] = "";
    };

    Z0U.Studies.studyLibrary = Z0U.extend(Z0U.Studies.studyLibrary, {
      macd: {
        name: H9i,
        calculateFN: Z0U.Studies.calculateMACD,
        seriesFN: Z0U.Studies.displayHistogramWithSeries,
        inputs: {
          "Fast MA Period": 12,
          "Slow MA Period": +"26",
          "Signal Period": +"9"
        },
        outputs: {
          MACD: "auto",
          Signal: "#FF0000",
          "Increasing Bar": "#00DD00",
          "Decreasing Bar": "#FF0000"
        }
      }
    });
  }
};

F2B = function F2B(p1U) {
  T5VV.d7Kh();
  var G1U, w9i;
  G1U = typeof _CIQ !== "undefined" ? _CIQ : p1U.CIQ;

  if (!G1U.Studies) {
    console.error("massIndex feature requires first activating studies feature.");
  } else {
    w9i = "Mass";
    w9i += " Ind";
    w9i += "ex";

    G1U.Studies.calculateMassIndex = function (v1U, q1U) {
      var h6bh = T5VV;
      var v9i, D1U, S1U, S9i, U9i;
      v9i = "_Hi";
      v9i += "g";
      v9i += "h-Low ";
      D1U = q1U.chart.scrubbed;

      if (D1U.length < Math.max(+"9", q1U.days + 1)) {
        q1U.error = !0;
        return;
      }

      for (var t1U = q1U.startFrom; t1U < D1U.length; t1U++) {
        D1U[t1U]["_High-Low " + q1U.name] = D1U[t1U].High - D1U[t1U].Low;
      }

      G1U.Studies.MA("exponential", 9, v9i + q1U.name, 0, "_EMA", v1U, q1U);
      h6bh.i3mK(5);
      G1U.Studies.MA("exponential", h6bh.E3mK(1, "9"), "_EMA " + q1U.name, 0, "_EMA2", v1U, q1U);
      S1U = 0;

      if (D1U[q1U.startFrom - 1] && D1U[q1U.startFrom - 1]["_total " + q1U.name]) {
        h6bh.i3mK(145);
        var h1Vu = h6bh.e3mK(4, 14, 17);
        S1U = D1U[q1U.startFrom - h1Vu]["_total " + q1U.name];
      }

      for (var k1U = Math.max(17, q1U.startFrom); k1U < D1U.length; k1U++) {
        S1U += D1U[k1U]["_EMA " + q1U.name] / D1U[k1U]["_EMA2 " + q1U.name];

        if (k1U >= 17 + q1U.days - 1) {
          S9i = "_E";
          S9i += "M";
          S9i += "A";
          S9i += "2 ";
          U9i = "Resu";
          U9i += "lt ";
          D1U[k1U][U9i + q1U.name] = S1U;
          h6bh.i3mK(2);
          var z1Vu = h6bh.e3mK(0, 16, 17);
          S1U -= D1U[k1U - q1U.days + z1Vu]["_EMA " + q1U.name] / D1U[k1U - q1U.days + ("1" ^ 0)][S9i + q1U.name];
        }

        D1U[k1U]["_total " + q1U.name] = S1U;
      }
    };

    G1U.Studies.displayMassIndex = function (x1U, N1U, z1U) {
      var V1U, R1U, a1U, m1U, M1U;
      G1U.Studies.displaySeriesAsLine(x1U, N1U, z1U);
      V1U = N1U.inputs["Bulge Threshold"];
      R1U = x1U.panels[N1U.panel];
      a1U = N1U.getYAxis(x1U);
      m1U = G1U.Studies.determineColor(N1U.outputs.Result);
      M1U = {
        skipTransform: x1U.panels[N1U.panel].name != N1U.chart.name,
        panelName: N1U.panel,
        band: "Result " + N1U.name,
        threshold: V1U,
        direction: 1,
        color: m1U,
        yAxis: a1U,
        opacity: 0.3
      };
      T5VV.d7Kh();

      if (!N1U.highlight && x1U.highlightedDraggable) {
        M1U.opacity *= +"0.3";
      }

      G1U.preparePeakValleyFill(x1U, M1U);
      G1U.Studies.drawHorizontal(x1U, N1U, null, V1U, a1U, m1U);
    };

    G1U.Studies.studyLibrary = G1U.extend(G1U.Studies.studyLibrary, {
      "Mass Idx": {
        name: w9i,
        seriesFN: G1U.Studies.displayMassIndex,
        calculateFN: G1U.Studies.calculateMassIndex,
        inputs: {
          Period: 25,
          "Bulge Threshold": 27
        },
        attributes: {
          "Bulge Threshold": {
            min: 20,
            max: 35,
            step: +"0.1"
          }
        }
      }
    });
  }
};

Q2B = function Q2B(P1U) {
  var s1U;
  s1U = typeof _CIQ !== "undefined" ? _CIQ : P1U.CIQ;

  if (!s1U.Studies) {
    console.error("moneyFlow feature requires first activating studies feature.");
  } else {
    s1U.Studies.calculateMoneyFlowIndex = function (w1U, y1U) {
      var K6bh = T5VV;
      var t9i, A1U, l1U, C1U, f1U, d1U, I1U, F1U, u1U, L9i, Q1U, L1U, r1U;
      t9i = "Res";
      t9i += "ul";
      t9i += "t ";
      K6bh.k7Kh();
      A1U = y1U.chart.scrubbed;

      if (A1U.length < y1U.days + 1) {
        y1U.error = !!{};
        return;
      }

      l1U = 0;
      C1U = 0;
      K6bh.i3mK(36);
      var E1Vu = K6bh.e3mK(2, 7, 16, 9);
      f1U = A1U[y1U.startFrom - E1Vu];
      d1U = "_rawMF " + y1U.name;
      I1U = "_cumMF " + y1U.name;
      F1U = t9i + y1U.name;

      if (f1U && f1U[I1U]) {
        l1U = f1U[I1U][+"0"];
        K6bh.N3mK(1);
        C1U = f1U[I1U][K6bh.E3mK(0, "1")];
      }

      for (var T1U = y1U.startFrom; T1U < A1U.length; T1U++) {
        u1U = A1U[T1U]["hlc/3"];

        if (T1U > 0 && !A1U[T1U].futureTick) {
          L9i = "h";
          L9i += "lc/3";
          K6bh.N3mK(1);
          Q1U = A1U[K6bh.e3mK(1, T1U)][L9i];
          L1U = u1U * A1U[T1U].Volume;

          if (u1U > Q1U) {
            l1U += L1U;
          } else if (u1U < Q1U) {
            L1U *= -1;
            C1U -= L1U;
          } else {
            L1U = 0;
          }

          if (T1U > y1U.days) {
            r1U = A1U[T1U - y1U.days][d1U];

            if (r1U > 0) {
              l1U -= r1U;
            } else {
              C1U += r1U;
            }

            if (C1U === "0" << 1721065824) {
              A1U[T1U][F1U] = 100;
            } else if (A1U[T1U].Volume) {
              K6bh.N3mK(146);
              A1U[T1U][F1U] = K6bh.e3mK(C1U, 2147483647, "100", l1U, 100, 1);
            }
          }

          A1U[T1U][d1U] = L1U;
          A1U[T1U][I1U] = [l1U, C1U];
        }
      }
    };

    s1U.Studies.studyLibrary = s1U.extend(s1U.Studies.studyLibrary, {
      "M Flow": {
        name: "Money Flow Index",
        range: "0 to 100",
        calculateFN: s1U.Studies.calculateMoneyFlowIndex,
        inputs: {
          Period: 14
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !"",
            studyOverBoughtValue: 80,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 20,
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

w2B = function w2B(b1U) {
  T5VV.d7Kh();
  var W1U, x9i, k9i, y9i, D9i, f9i, P9i, N9i, M9i, e9i, o9i, j9i;
  W1U = typeof _CIQ !== "undefined" ? _CIQ : b1U.CIQ;

  if (!W1U.Studies) {
    x9i = "movingAverages fe";
    x9i += "ature requires firs";
    x9i += "t activating studies feature.";
    console.error(x9i);
  } else {
    k9i = "au";
    k9i += "t";
    k9i += "o";
    y9i = "fi";
    y9i += "eld";
    D9i = "P";
    D9i += "e";
    D9i += "rce";
    D9i += "nt";
    f9i = "a";
    f9i += "u";
    f9i += "t";
    f9i += "o";
    P9i = "f";
    P9i += "ie";
    P9i += "ld";
    N9i = "T";
    N9i += "ripleEx";
    N9i += "ponential";
    M9i = "DoubleEx";
    M9i += "ponential";
    e9i = "Hu";
    e9i += "l";
    e9i += "l";
    o9i = "H";
    o9i += "u";
    o9i += "l";
    o9i += "l";
    j9i = "t";
    j9i += "e";
    j9i += "m";
    j9i += "a";
    W1U.Studies.prettify = W1U.extend({
      "2-exponential": "dema",
      "3-exponential": j9i,
      hull: "hma"
    }, W1U.Studies.prettify);
    W1U.extend(W1U.Studies.movingAverage, {
      conversions: {
        hma: "hull",
        dema: "2-exponential",
        tema: "3-exponential"
      },
      translations: {
        hull: o9i,
        "2-exponential": "Double Exponential",
        "3-exponential": "Triple Exponential"
      },
      typeMap: {
        hma: e9i,
        hull: "Hull",
        dema: "DoubleExponential",
        "2-exponential": M9i,
        tema: N9i,
        "3-exponential": "TripleExponential"
      }
    });

    W1U.Studies.calculateMovingAverageHull = function (O2U, e1U) {
      var O6bh = T5VV;
      O6bh.k7Kh();
      var i9i, Z9i, I9i, Y1U, Z1U, X1U, H2U, F9i, J2U, c2U, n2U, K2U;
      i9i = "_WMA";
      i9i += "2";
      Z9i = "_WM";
      Z9i += "A1";
      I9i = "Cl";
      I9i += "o";
      I9i += "s";
      I9i += "e";
      Y1U = e1U.chart.scrubbed;
      Z1U = e1U.inputs.Field;

      if (!Z1U || Z1U == "field") {
        Z1U = I9i;
      }

      W1U.Studies.MA("wma", e1U.days, Z1U, 0, Z9i, O2U, e1U);
      W1U.Studies.MA("wma", Math.ceil(e1U.days / 2), Z1U, 0, i9i, O2U, e1U);

      for (X1U = e1U.startFrom - 1; X1U >= +"0"; X1U--) {
        H2U = Y1U[X1U][Z1U];

        if (H2U && _typeof(H2U) == "object") {
          H2U = H2U[e1U.subField];
        }

        if (H2U || H2U === 0) break;
      }

      for (X1U++; X1U < Y1U.length; X1U++) {
        F9i = "_WM";
        F9i += "A";
        F9i += "2";
        F9i += " ";
        J2U = Y1U[X1U];
        O6bh.i3mK(36);
        var B1Vu = O6bh.E3mK(1, 17, 9, 8);
        J2U["_MMA " + e1U.name] = B1Vu * J2U[F9i + e1U.name] - J2U["_WMA1 " + e1U.name];
      }

      c2U = parseInt(e1U.inputs.Offset, "10" ^ 0);

      if (isNaN(c2U)) {
        c2U = 0;
      }

      n2U = Math.floor(Math.sqrt(e1U.days));
      W1U.Studies.MA("wma", n2U, "_MMA " + e1U.name, c2U, "_HMA", O2U, e1U);
      K2U = e1U.name;

      for (var g2U in e1U.outputs) {
        O6bh.i3mK(93);
        K2U = O6bh.E3mK(K2U, g2U, 1243 > (7350, 9662) ? (8.56, 7.42e+3) : (4015, 215.24) <= (718, 649.12) ? " " : "7274" - 0 == (984.54, 2083) ? (2.41e+3, 9.72e+3) : (0x3c9, !!""));
      }

      for (X1U = Math.max(e1U.days + n2U - 1, e1U.startFrom); X1U < Y1U.length; X1U++) {
        Y1U[X1U][K2U] = Y1U[X1U]["_HMA " + e1U.name];
      }
    };

    W1U.Studies.calculateMovingAverageDoubleExponential = function (G2U, h2U) {
      var g6bh = T5VV;
      var U2U, E2U, j2U, i2U, B2U, p2U, o2U, q2U, D2U, k2U, t2U;
      U2U = h2U.chart.scrubbed;
      E2U = h2U.inputs.Field;

      if (!E2U || E2U == "field") {
        E2U = "Close";
      }

      g6bh.k7Kh();
      W1U.Studies.MA("ema", h2U.days, E2U, 0, "_EMA1", G2U, h2U);
      W1U.Studies.MA("ema", h2U.days, "_EMA1 " + h2U.name, +"0", "_EMA2", G2U, h2U);
      j2U = parseInt(h2U.inputs.Offset, 10);

      if (isNaN(j2U)) {
        j2U = +"0";
      }

      p2U = j2U;

      for (i2U = h2U.startFrom - 1; i2U >= 0; i2U--) {
        B2U = U2U[i2U][E2U];

        if (B2U && _typeof(B2U) == "object") {
          B2U = B2U[h2U.subField];
        }

        if (!B2U && B2U !== ("0" & 2147483647)) continue;

        if (p2U > ("0" | 0)) {
          p2U--;
          continue;
        }

        break;
      }

      o2U = h2U.name;

      for (var S2U in h2U.outputs) {
        g6bh.N3mK(93);
        o2U = g6bh.e3mK(o2U, S2U, (112.19, 4664) > "573.44" - 0 ? " " : (0x153a, 394.41));
      }

      q2U = [];

      for (i2U++; i2U < U2U.length; i2U++) {
        if (i2U < 2 * (h2U.days - 1)) continue;
        D2U = U2U[i2U];
        g6bh.N3mK(7);
        var G1Vu = g6bh.e3mK(1, 19, 18);
        k2U = ("2" | G1Vu) * D2U["_EMA1 " + h2U.name] - D2U["_EMA2 " + h2U.name];

        if (i2U + j2U >= 0) {
          if (i2U + j2U < U2U.length) {
            g6bh.N3mK(0);
            U2U[g6bh.E3mK(j2U, i2U)][o2U] = k2U;
          } else {
            t2U = {};
            t2U[o2U] = k2U;
            q2U.push(t2U);
          }
        }
      }

      h2U.appendFutureTicks(G2U, q2U);
    };

    W1U.Studies.calculateMovingAverageTripleExponential = function (z2U, v2U) {
      var B6bh = T5VV;
      var c9i, n9i, a2U, m2U, x2U, N2U, V2U, s2U, d9i, M2U, P2U, b9i, q9i, R2U, T2U, A2U, v3v, U3v, S3v;
      c9i = "_";
      c9i += "EMA2";
      n9i = "_EMA";
      n9i += "1";
      a2U = v2U.chart.scrubbed;
      m2U = v2U.inputs.Field;

      if (!m2U || m2U == "field") {
        m2U = "Close";
      }

      W1U.Studies.MA("ema", v2U.days, m2U, "0" - 0, n9i, z2U, v2U);
      W1U.Studies.MA("ema", v2U.days, "_EMA1 " + v2U.name, 0, c9i, z2U, v2U);
      W1U.Studies.MA("ema", v2U.days, "_EMA2 " + v2U.name, 0, "_EMA3", z2U, v2U);
      x2U = parseInt(v2U.inputs.Offset, "10" * 1);

      if (isNaN(x2U)) {
        x2U = 0;
      }

      s2U = x2U;

      for (N2U = v2U.startFrom - ("1" | 1); N2U >= 0; N2U--) {
        d9i = "obj";
        d9i += "e";
        d9i += "c";
        d9i += "t";
        V2U = a2U[N2U][m2U];

        if (V2U && _typeof(V2U) == d9i) {
          V2U = V2U[v2U.subField];
        }

        if (!V2U && V2U !== 0) continue;

        if (s2U > 0) {
          s2U--;
          continue;
        }

        break;
      }

      M2U = v2U.name;

      for (var y2U in v2U.outputs) {
        B6bh.i3mK(93);
        M2U = B6bh.E3mK(M2U, y2U, 560.01 < 520.35 ? +"935.14" === (396, 724.85) ? +"7.55e+3" : (9121, 369.24) != (1950, +"7101") ? ("0x2a8" * 1, 0xeb4) : 647.62 : " ");
      }

      P2U = [];

      for (N2U++; N2U < a2U.length; N2U++) {
        b9i = "_";
        b9i += "E";
        b9i += "MA";
        b9i += "3 ";
        q9i = "_";
        q9i += "EMA";
        q9i += "2";
        q9i += " ";
        if (N2U < 3 * (v2U.days - 1)) continue;
        R2U = a2U[N2U];
        B6bh.N3mK(147);
        var m1Vu = B6bh.E3mK(4, 4, 15, 4, 3);
        B6bh.N3mK(1);
        var P1Vu = B6bh.e3mK(6, 9);
        T2U = m1Vu * R2U["_EMA1 " + v2U.name] - P1Vu * R2U[q9i + v2U.name] + R2U[b9i + v2U.name];

        if (N2U + x2U >= 0) {
          if (N2U + x2U < a2U.length) {
            B6bh.i3mK(0);
            a2U[B6bh.e3mK(x2U, N2U)][M2U] = T2U;
          } else {
            A2U = {};
            A2U[M2U] = T2U;
            P2U.push(A2U);
          }
        }
      }

      v3v = -1417573364;
      U3v = -279626143;
      S3v = 2;

      for (var t3v = 1; B6bh.Y6v(t3v.toString(), t3v.toString().length, "15427" - 0) !== v3v; t3v++) {
        v2U.appendFutureTicks(z2U, P2U);
        B6bh.i3mK(4);
        S3v += B6bh.E3mK("2", 2147483647);
      }

      if (B6bh.Y6v(S3v.toString(), S3v.toString().length, "44626" >> 772226752) !== U3v) {
        v2U.appendFutureTicks(z2U, P2U);
      }
    };

    W1U.Studies.calculateMAEnvelope = function (I2U, C2U) {
      var h9i, l2U, L2U, f2U, z9i;
      h9i = "M";
      h9i += "A";
      l2U = C2U.inputs.Field;

      if (!l2U || l2U == "field") {
        l2U = "Close";
      }

      W1U.Studies.MA(C2U.inputs["Moving Average Type"], C2U.days, l2U, 0, h9i, I2U, C2U);
      L2U = C2U.inputs["Shift Type"];
      f2U = C2U.inputs.Shift;

      if (!L2U) {
        z9i = "pe";
        z9i += "rc";
        z9i += "en";
        z9i += "t";
        L2U = z9i;
        f2U = C2U.inputs["Shift Percentage"];
      }

      if (L2U == "percent") {
        T5VV.i3mK(10);
        W1U.Studies.calculateGenericEnvelope(I2U, C2U, T5VV.e3mK(f2U, 100), "MA " + C2U.name);
      } else if (L2U == "points") {
        W1U.Studies.calculateGenericEnvelope(I2U, C2U, null, "MA " + C2U.name, null, Number(f2U));
      }
    };

    W1U.Studies.calculateMADev = function (Y2U, u2U) {
      var m9i, B9i, E9i, w2U, d2U, W2U, b2U, X2U, G9i, F2U, r2U, Q2U;
      m9i = "_";
      m9i += "hi";
      m9i += "st";
      B9i = "_";
      B9i += "M";
      B9i += "A";
      E9i = "Points ";
      E9i += "Or Percent";
      w2U = u2U.chart.scrubbed;

      if (w2U.length < u2U.days + ("1" >> 1118086368)) {
        u2U.error = !!{};
        return;
      }

      d2U = u2U.inputs.Field;

      if (!d2U || d2U == "field") {
        d2U = "Close";
      }

      W2U = u2U.inputs[E9i];

      if (!W2U) {
        W2U = "Points";
      }

      b2U = u2U.inputs["Moving Average Type"];

      if (!b2U) {
        b2U = "exponential";
      }

      W1U.Studies.MA(b2U, u2U.days, d2U, 0, B9i, Y2U, u2U);
      X2U = u2U.name + "_hist";

      for (var e2U = Math.max(u2U.startFrom, u2U.days - 1); e2U < w2U.length; e2U++) {
        G9i = "obje";
        G9i += "ct";
        F2U = w2U[e2U];
        r2U = F2U[d2U];

        if (r2U && _typeof(r2U) == G9i) {
          r2U = r2U[u2U.subField];
        }

        Q2U = F2U["_MA " + u2U.name];

        if (Q2U || Q2U === 0) {
          if (W2U == "Points") {
            T5VV.N3mK(1);
            F2U[X2U] = T5VV.E3mK(Q2U, r2U);
          } else {
            T5VV.i3mK(148);
            F2U[X2U] = T5VV.e3mK(100, r2U, Q2U, 1);
          }
        }
      }

      u2U.outputMap = {};
      u2U.outputMap[u2U.name + m9i] = "";
    };

    W1U.Studies.studyLibrary = W1U.extend(W1U.Studies.studyLibrary, {
      "MA Env": {
        name: "Moving Average Envelope",
        overlay: !!{},
        seriesFN: W1U.Studies.displayChannel,
        calculateFN: W1U.Studies.calculateMAEnvelope,
        inputs: {
          Period: 50,
          Field: P9i,
          "Shift Type": ["percent", "points"],
          Shift: 5,
          "Moving Average Type": "ma",
          "Channel Fill": !![]
        },
        outputs: {
          "MA Env Top": f9i,
          "MA Env Median": "auto",
          "MA Env Bottom": "auto"
        },
        attributes: {
          Shift: {
            min: 0.1,
            step: 0.1
          }
        }
      },
      "MA Dev": {
        name: "Moving Average Deviation",
        calculateFN: W1U.Studies.calculateMADev,
        seriesFN: W1U.Studies.displayHistogramWithSeries,
        inputs: {
          Period: "12" ^ 0,
          Field: "field",
          "Moving Average Type": "ma",
          "Points Or Percent": ["Points", D9i]
        },
        outputs: {
          "Increasing Bar": "#00DD00",
          "Decreasing Bar": "#FF0000"
        }
      },
      "High Low": {
        name: "High Low Bands",
        overlay: !![],
        seriesFN: W1U.Studies.displayChannel,
        calculateFN: function calculateFN(H3U, Z2U) {
          Z2U.inputs["Moving Average Type"] = "triangular";
          W1U.Studies.calculateMAEnvelope(H3U, Z2U);
        },
        inputs: {
          Period: "10" | 10,
          Field: y9i,
          "Shift Percentage": 5,
          "Channel Fill": !!{}
        },
        outputs: {
          "High Low Top": "auto",
          "High Low Median": "auto",
          "High Low Bottom": k9i
        },
        attributes: {
          "Shift Percentage": {
            min: 0.1,
            step: "0.1" - 0
          }
        }
      }
    });
  }
};

W2B = function W2B(c3U) {
  var C9i, J3U, A9i;
  C9i = "u";
  T5VV.k7Kh();
  C9i += "n";
  C9i += "def";
  C9i += "ined";
  J3U = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== C9i ? _CIQ : c3U.CIQ;

  if (!J3U.Studies) {
    A9i = "parabolicSAR featu";
    A9i += "re req";
    A9i += "uires first activating studies feature.";
    console.error(A9i);
  } else {
    J3U.Studies.calculatePSAR = function (D3U, h3U) {
      var p8Kh = T5VV;
      var g9i, W9i, K3U, i3U, n3U, j3U, g3U, E3U, o3U, T9i, B3U, U3U, G3U, p3U, J9i;
      g9i = "M";
      g9i += "aximum AF";
      W9i = "Mi";
      W9i += "nimum AF";
      K3U = h3U.chart.scrubbed;
      i3U = 0;
      n3U = null;

      function q3U() {
        i3U = 0;
        p8Kh.k7Kh();
        n3U = null;
        j3U = !j3U;
      }

      j3U = !!0;
      g3U = 0;
      E3U = parseFloat(h3U.inputs[W9i]);
      o3U = parseFloat(h3U.inputs[g9i]);

      if (h3U.startFrom > +"0") {
        T9i = "Re";
        T9i += "su";
        T9i += "l";
        T9i += "t ";
        p8Kh.N3mK(141);
        var f1Vu = p8Kh.e3mK(4, 3, 2, 11, 13);
        g3U = K3U[h3U.startFrom - f1Vu][T9i + h3U.name];
        B3U = K3U[h3U.startFrom - +"1"]["_state " + h3U.name];

        if (B3U && B3U.length == 3) {
          i3U = B3U[0];
          n3U = B3U[1];
          j3U = B3U[2];
        }
      }

      for (var O3U = h3U.startFrom - 1; O3U < K3U.length - 1; O3U++) {
        if (O3U < 0) continue;
        if (K3U[O3U].futureTick) break;
        U3U = g3U;

        if (j3U) {
          if (!n3U || n3U < K3U[O3U].High) {
            n3U = K3U[O3U].High;
            p8Kh.i3mK(0);
            i3U = Math.min(p8Kh.e3mK(E3U, i3U), o3U);
          }

          p8Kh.N3mK(149);
          g3U = p8Kh.e3mK(U3U, n3U, i3U, U3U);
          G3U = Math.min(K3U[Math.max(1, O3U) - 1].Low, K3U[O3U].Low);

          if (g3U > K3U[O3U + 1].Low) {
            g3U = n3U;
            q3U();
          } else if (g3U > G3U) {
            g3U = G3U;
          }
        } else {
          if (!n3U || n3U > K3U[O3U].Low) {
            n3U = K3U[O3U].Low;
            p8Kh.i3mK(0);
            i3U = Math.min(p8Kh.e3mK(E3U, i3U), o3U);
          }

          p8Kh.N3mK(149);
          g3U = p8Kh.E3mK(U3U, n3U, i3U, U3U);
          p3U = Math.max(K3U[Math.max("1" ^ 0, O3U) - 1].High, K3U[O3U].High);

          if (g3U < K3U[O3U + ("1" ^ 0)].High) {
            g3U = n3U;
            q3U();
          } else if (g3U < p3U) {
            g3U = p3U;
          }
        }

        p8Kh.i3mK(0);
        K3U[p8Kh.e3mK(1, O3U)]["_state " + h3U.name] = [i3U, n3U, j3U];

        if (!isNaN(K3U[O3U].High) || !isNaN(K3U[O3U].Low)) {
          J9i = "R";
          J9i += "esu";
          J9i += "lt ";
          p8Kh.N3mK(0);
          K3U[p8Kh.e3mK(1, O3U)][J9i + h3U.name] = g3U;
        }
      }
    };

    J3U.Studies.studyLibrary = J3U.extend(J3U.Studies.studyLibrary, {
      PSAR: {
        name: "Parabolic SAR",
        overlay: !![],
        calculateFN: J3U.Studies.calculatePSAR,
        seriesFN: J3U.Studies.displayPSAR2,
        inputs: {
          "Minimum AF": 0.02,
          "Maximum AF": 0.2
        }
      }
    });
  }
};

b2B = function b2B(t3U) {
  var Q9i, k3U, S7i, U7i, v7i, H7i;
  Q9i = "un";
  Q9i += "d";
  Q9i += "efine";
  T5VV.k7Kh();
  Q9i += "d";
  k3U = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== Q9i ? _CIQ : t3U.CIQ;

  if (!k3U.Studies) {
    console.error("pivotPoints feature requires first activating studies feature.");
  } else {
    S7i = "#ffd0c";
    S7i += "f";
    U7i = "a";
    U7i += "u";
    U7i += "t";
    U7i += "o";
    v7i = "f";
    v7i += "ibon";
    v7i += "acci";
    H7i = "Pivo";
    H7i += "t P";
    H7i += "oints";

    k3U.Studies.calculatePivotPoints = function (m3U, x3U) {
      var X8Kh = T5VV;
      var K9i, r9i, l9i, R9i, v3U, V3U, a3U, R3U, s3U, M3U, P3U, S3U, V9i, T3U, A3U, a9i, O9i, p9i, X9i, u9i;
      K9i = "millise";
      K9i += "cond";
      X8Kh.d7Kh();
      r9i = "s";
      r9i += "e";
      r9i += "co";
      r9i += "nd";
      l9i = "yea";
      l9i += "r";
      R9i = "mo";
      R9i += "n";
      R9i += "t";
      R9i += "h";
      v3U = x3U.chart.scrubbed;
      V3U = "day";
      a3U = m3U.layout.interval;
      R3U = m3U.layout.timeUnit;

      if (a3U == "day") {
        V3U = R9i;
      } else if (k3U.ChartEngine.isDailyInterval(a3U)) {
        V3U = l9i;
      } else if (a3U == r9i || a3U == "millisecond" || R3U == "second" || R3U == K9i) {
        V3U = "15min";
      } else {
        s3U = m3U.layout.periodicity;

        if (a3U != "minute") {
          s3U *= a3U;
        }

        if (s3U >= 30) {
          V3U = "week";
        }
      }

      M3U = null;
      X8Kh.N3mK(55);
      var D1Vu = X8Kh.e3mK(5, 8, 27, 108);
      P3U = D1Vu - k3U.getFromNS(m3U.chart, "market.beginningDayOfWeek", "0" | 0);
      S3U = {
        pivotPoint: NaN,
        high: "0" & 2147483647,
        low: 0,
        prevHigh: 0,
        prevLow: 0,
        hlSpread: "0" ^ 0
      };

      if (x3U.startFrom > 1 && v3U[x3U.startFrom - 1]["_pointers " + x3U.name]) {
        S3U = k3U.clone(v3U[x3U.startFrom - 1]["_pointers " + x3U.name]);
      }

      for (var N3U = Math.max(1, x3U.startFrom); N3U < v3U.length; N3U++) {
        V9i = "y";
        V9i += "e";
        V9i += "a";
        V9i += "r";
        if (!v3U[N3U - 1]) continue;
        S3U.high = Math.max(S3U.high, v3U[N3U - 1].High);
        S3U.low = Math.min(S3U.low > 0 ? S3U.low : v3U[N3U - 1].Low, v3U[N3U - 1].Low);

        if (x3U.inputs.Continuous) {
          z3U();
        } else if (V3U == V9i && v3U[N3U].DT.getYear() != v3U[N3U - 1].DT.getYear()) {
          z3U();
        } else if (V3U == "month" && v3U[N3U].DT.getMonth() != v3U[N3U - 1].DT.getMonth()) {
          z3U();
        } else if (V3U == "week" && (v3U[N3U].DT.getDay() + P3U) % 7 < (v3U[N3U - 1].DT.getDay() + P3U) % 7) {
          z3U();
        } else if (V3U == "day") {
          if (M3U === null) {
            M3U = k3U.Studies.getMarketOffset({
              stx: m3U,
              localQuoteDate: v3U[N3U].DT,
              shiftToDateBoundary: !""
            });
          }

          T3U = new Date(new Date(+v3U[N3U].DT).setMilliseconds(v3U[N3U].DT.getMilliseconds() + M3U));
          A3U = new Date(new Date(+v3U[N3U - 1].DT).setMilliseconds(v3U[N3U - 1].DT.getMilliseconds() + M3U));

          if (A3U.getDate() !== T3U.getDate() && A3U.getDay() !== 0 && m3U.chart.market.isMarketDate(T3U)) {
            M3U = null;
            z3U();
          }
        } else if (V3U == "15min" && (v3U[N3U].DT.getHours() != v3U[N3U - +"1"].DT.getHours() || Math.floor(v3U[N3U].DT.getMinutes() / ("15" * 1)) != Math.floor(v3U[N3U - 1].DT.getMinutes() / 15))) {
          z3U();
        }

        v3U[N3U]["Pivot " + x3U.name] = S3U.pivotPoint;

        if (x3U.inputs.Type.toLowerCase() == "fibonacci") {
          a9i = "Su";
          a9i += "p";
          a9i += "por";
          a9i += "t 3 ";
          O9i = "Resis";
          O9i += "tanc";
          O9i += "e ";
          O9i += "2 ";
          v3U[N3U]["Resistance 1 " + x3U.name] = S3U.pivotPoint + 0.382 * S3U.hlSpread;
          v3U[N3U][O9i + x3U.name] = S3U.pivotPoint + 0.618 * S3U.hlSpread;
          v3U[N3U]["Resistance 3 " + x3U.name] = S3U.pivotPoint + S3U.hlSpread;
          v3U[N3U]["Support 1 " + x3U.name] = S3U.pivotPoint - 0.382 * S3U.hlSpread;
          v3U[N3U]["Support 2 " + x3U.name] = S3U.pivotPoint - 0.618 * S3U.hlSpread;
          v3U[N3U][a9i + x3U.name] = S3U.pivotPoint - S3U.hlSpread;
        } else {
          p9i = "Sup";
          p9i += "port";
          p9i += " 3 ";
          X9i = "S";
          X9i += "uppo";
          X9i += "rt 1 ";
          u9i = "Resistanc";
          u9i += "e 3";
          u9i += " ";
          X8Kh.i3mK(23);
          var y1Vu = X8Kh.E3mK(4, 22, 6);
          v3U[N3U]["Resistance 1 " + x3U.name] = y1Vu * S3U.pivotPoint - S3U.prevLow;
          v3U[N3U]["Resistance 2 " + x3U.name] = S3U.pivotPoint + S3U.hlSpread;
          v3U[N3U][u9i + x3U.name] = S3U.prevHigh + +"2" * (S3U.pivotPoint - S3U.prevLow);
          X8Kh.i3mK(31);
          var k1Vu = X8Kh.e3mK(0, 6, 20, 16);
          v3U[N3U][X9i + x3U.name] = k1Vu * S3U.pivotPoint - S3U.prevHigh;
          v3U[N3U]["Support 2 " + x3U.name] = S3U.pivotPoint - S3U.hlSpread;
          X8Kh.N3mK(135);
          var C1Vu = X8Kh.e3mK(6, 98, 30, 20);
          v3U[N3U][p9i + x3U.name] = S3U.prevLow - C1Vu * (S3U.prevHigh - S3U.pivotPoint);
        }

        v3U[N3U]["_pointers " + x3U.name] = k3U.clone(S3U);
      }

      function z3U() {
        X8Kh.i3mK(31);
        var A1Vu = X8Kh.e3mK(0, 11, 13, 3);
        X8Kh.i3mK(62);
        var W1Vu = X8Kh.E3mK(26, 8, 2, 13);
        S3U.pivotPoint = (S3U.high + S3U.low + v3U[N3U - A1Vu].Close) / W1Vu;
        S3U.prevHigh = S3U.high;
        S3U.prevLow = S3U.low;
        S3U.hlSpread = S3U.high - S3U.low;
        S3U.high = S3U.low = 0;
      }
    };

    k3U.Studies.displayPivotPoints = function (C3U, y3U, f3U) {
      var s7i, Y9i, L3U, l3U;
      T5VV.d7Kh();
      y3U.noSlopes = !y3U.inputs.Continuous;
      k3U.Studies.displaySeriesAsLine(C3U, y3U, f3U);

      if (y3U.inputs.Shading) {
        s7i = "S";
        s7i += "upport 2 ";
        Y9i = "Resis";
        Y9i += "tan";
        Y9i += "ce";
        Y9i += " 1";
        L3U = C3U.panels[y3U.panel];
        l3U = {
          noSlopes: y3U.noSlopes,
          opacity: y3U.parameters.opacity ? y3U.parameters.opacity : 0.2,
          skipTransform: L3U.name != y3U.chart.name,
          yAxis: y3U.getYAxis(C3U)
        };

        if (!y3U.highlight && C3U.highlightedDraggable) {
          l3U.opacity *= +"0.3";
        }

        k3U.prepareChannelFill(C3U, k3U.extend({
          panelName: y3U.panel,
          topBand: "Resistance 3 " + y3U.name,
          bottomBand: "Resistance 2 " + y3U.name,
          color: k3U.Studies.determineColor(y3U.outputs["Resistance 3"])
        }, l3U));
        k3U.prepareChannelFill(C3U, k3U.extend({
          panelName: y3U.panel,
          topBand: "Resistance 2 " + y3U.name,
          bottomBand: "Resistance 1 " + y3U.name,
          color: k3U.Studies.determineColor(y3U.outputs["Resistance 2"])
        }, l3U));
        k3U.prepareChannelFill(C3U, k3U.extend({
          panelName: y3U.panel,
          topBand: "Resistance 1 " + y3U.name,
          bottomBand: "Pivot " + y3U.name,
          color: k3U.Studies.determineColor(y3U.outputs[Y9i])
        }, l3U));
        k3U.prepareChannelFill(C3U, k3U.extend({
          panelName: y3U.panel,
          topBand: "Support 1 " + y3U.name,
          bottomBand: "Pivot " + y3U.name,
          color: k3U.Studies.determineColor(y3U.outputs["Support 1"])
        }, l3U));
        k3U.prepareChannelFill(C3U, k3U.extend({
          panelName: y3U.panel,
          topBand: "Support 2 " + y3U.name,
          bottomBand: "Support 1 " + y3U.name,
          color: k3U.Studies.determineColor(y3U.outputs["Support 2"])
        }, l3U));
        k3U.prepareChannelFill(C3U, k3U.extend({
          panelName: y3U.panel,
          topBand: "Support 3 " + y3U.name,
          bottomBand: s7i + y3U.name,
          color: k3U.Studies.determineColor(y3U.outputs["Support 3"])
        }, l3U));
      }
    };

    k3U.Studies.studyLibrary = k3U.extend(k3U.Studies.studyLibrary, {
      "Pivot Points": {
        name: H7i,
        overlay: !0,
        seriesFN: k3U.Studies.displayPivotPoints,
        calculateFN: k3U.Studies.calculatePivotPoints,
        inputs: {
          Type: ["standard", v7i],
          Continuous: !1,
          Shading: !{}
        },
        outputs: {
          Pivot: U7i,
          "Resistance 1": "#b82c0b",
          "Support 1": "#699158",
          "Resistance 2": "#e36460",
          "Support 2": "#b3d987",
          "Resistance 3": S7i,
          "Support 3": "#d3e8ae"
        },
        parameters: {
          init: {
            opacity: 0.2
          }
        }
      }
    });
  }
};

T5VV.k7Kh();

e2B = function e2B(u3U) {
  var I3U, w7i;
  I3U = typeof _CIQ !== "undefined" ? _CIQ : u3U.CIQ;

  if (!I3U.Studies) {
    w7i = "prettyGoodOscillator featu";
    w7i += "re requires first activating studies feature.";
    console.error(w7i);
  } else {
    I3U.Studies.calculatePrettyGoodOscillator = function (Q3U, r3U) {
      var t7i, d3U, x7i, L7i;
      T5VV.k7Kh();
      t7i = "true";
      t7i += "Range";
      d3U = r3U.chart.scrubbed;

      if (d3U.length < r3U.days + 1) {
        r3U.error = !![];
        return;
      }

      I3U.Studies.MA("exponential", r3U.days, t7i, 0, "_EMA", Q3U, r3U);
      I3U.Studies.MA("simple", r3U.days, "Close", "0" | 0, "_SMA", Q3U, r3U);

      for (var F3U = Math.max(1, r3U.startFrom); F3U < d3U.length; F3U++) {
        x7i = "_";
        x7i += "S";
        x7i += "MA ";
        L7i = "R";
        L7i += "es";
        L7i += "ult ";
        if (!d3U[F3U]["_SMA " + r3U.name] || !d3U[F3U]["_EMA " + r3U.name]) continue;
        d3U[F3U][L7i + r3U.name] = (d3U[F3U].Close - d3U[F3U][x7i + r3U.name]) / d3U[F3U]["_EMA " + r3U.name];
      }
    };

    I3U.Studies.studyLibrary = I3U.extend(I3U.Studies.studyLibrary, {
      "Pretty Good": {
        name: "Pretty Good Oscillator",
        calculateFN: I3U.Studies.calculatePrettyGoodOscillator,
        parameters: {
          init: {
            studyOverZonesEnabled: !0,
            studyOverBoughtValue: 3,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: -("3" << 56044416),
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

X2B = function X2B(W3U) {
  T5VV.d7Kh();
  var w3U, j7i, i7i, Z7i;
  w3U = typeof _CIQ !== "undefined" ? _CIQ : W3U.CIQ;

  if (!w3U.Studies) {
    j7i = "priceMoment";
    j7i += "umOscillator feature requires first activating studies feature.";
    console.error(j7i);
  } else {
    i7i = "0.0";
    i7i += "5";
    Z7i = "aut";
    Z7i += "o";

    w3U.Studies.calculatePMO = function (H4U, b3U) {
      var Q8Kh = T5VV;
      var I7i, N7i, M7i, o7i, Y3U, e3U, Z3U, X3U, J4U, e7i;
      I7i = "PM";
      I7i += "O ";
      N7i = "_E";
      N7i += "MAx1";
      N7i += "0";
      N7i += " ";
      M7i = "_RO";
      M7i += "C";
      M7i += "x10";
      M7i += " ";
      o7i = "Smo";
      o7i += "o";
      o7i += "thing Period";
      Y3U = {
        Smooth: Number(b3U.inputs[o7i]) - 1,
        Double: Number(b3U.inputs["Double Smoothing Period"]) - 1,
        Signal: Number(b3U.inputs["Signal Period"])
      };
      e3U = b3U.chart.scrubbed;

      if (e3U.length < Y3U.Smooth + Y3U.Double) {
        b3U.error = !![];
        return;
      }

      Z3U = b3U.inputs.Field;

      if (!Z3U || Z3U == "field") {
        Z3U = "Close";
      }

      for (X3U = b3U.startFrom; X3U < e3U.length; X3U++) {
        if (!e3U[X3U]) continue;
        if (!e3U[X3U - ("1" & 2147483647)]) continue;
        Q8Kh.i3mK(1);
        J4U = e3U[Q8Kh.E3mK(1, X3U)][Z3U];

        if (J4U) {
          e7i = "_RO";
          e7i += "Cx10";
          e7i += " ";
          Q8Kh.i3mK(108);
          var g1Vu = Q8Kh.E3mK(222, 999, 11, 100, 2);
          Q8Kh.N3mK(150);
          var T1Vu = Q8Kh.e3mK(6, 9, 10, 1, 6);
          e3U[X3U][e7i + b3U.name] = g1Vu * (e3U[X3U][Z3U] / J4U - T1Vu);
        }
      }

      w3U.Studies.MA("exponential", Y3U.Smooth, M7i + b3U.name, 0, "_EMAx10", H4U, b3U);
      w3U.Studies.MA("exponential", Y3U.Double, N7i + b3U.name, 0, "PMO", H4U, b3U);
      w3U.Studies.MA("exponential", Y3U.Signal, I7i + b3U.name, 0, "PMOSignal", H4U, b3U);
      b3U.zoneOutput = "PMO";
    };

    w3U.Studies.studyLibrary = w3U.extend(w3U.Studies.studyLibrary, {
      PMO: {
        name: "Price Momentum Oscillator",
        calculateFN: w3U.Studies.calculatePMO,
        inputs: {
          Field: "field",
          "Smoothing Period": 35,
          "Double Smoothing Period": +"20",
          "Signal Period": 10
        },
        outputs: {
          PMO: "auto",
          PMOSignal: "#FF0000"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !!1,
            studyOverBoughtValue: 2.5,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: -2.5,
            studyOverSoldColor: Z7i
          }
        },
        attributes: {
          studyOverBoughtValue: {
            min: +"0",
            step: "0.05"
          },
          studyOverSoldValue: {
            max: 0,
            step: i7i
          }
        }
      }
    });
  }
};

Y2B = function Y2B(K4U) {
  var c4U, m7i, G7i, B7i, E7i;
  c4U = typeof _CIQ !== "undefined" ? _CIQ : K4U.CIQ;

  if (!c4U.Studies) {
    console.error("priceVolumeOscillator feature requires first activating studies feature.");
  } else {
    m7i = "#F";
    m7i += "F000";
    m7i += "0";
    G7i = "#";
    G7i += "00";
    G7i += "DD00";
    B7i = "Per";
    B7i += "c";
    B7i += "en";
    B7i += "t";
    E7i = "Poin";
    E7i += "ts";

    c4U.Studies.calculatePriceOscillator = function (p4U, O4U) {
      var H8Kh = T5VV;
      var n7i, F7i, B4U, G4U, U4U, g4U, h4U, E4U, c7i, n4U, i4U, j4U, d7i;
      n7i = "Perc";
      n7i += "e";
      n7i += "n";
      n7i += "t";
      F7i = "Po";
      F7i += "ints Or";
      F7i += " P";
      F7i += "ercent";
      B4U = O4U.chart.scrubbed;
      G4U = Number(O4U.inputs["Short Cycle"]);
      U4U = Number(O4U.inputs["Long Cycle"]);

      if (B4U.length < Math.max(G4U, U4U) + 1) {
        O4U.error = !![];
        return;
      }

      g4U = O4U.inputs.Field;
      h4U = O4U.inputs["Moving Average Type"];

      if (!h4U) {
        h4U = "simple";
      }

      if (!g4U || g4U == "field") {
        g4U = "Close";
      }

      H8Kh.k7Kh();

      if (O4U.parameters.isVolume) {
        g4U = "Volume";
        h4U = "exponential";
      }

      E4U = O4U.inputs[F7i];

      if (!E4U) {
        E4U = n7i;
      }

      c4U.Studies.MA(h4U, G4U, g4U, 0, "_Short MA", p4U, O4U);
      c4U.Studies.MA(h4U, U4U, g4U, 0, "_Long MA", p4U, O4U);

      for (var o4U = Math.max(U4U, O4U.startFrom); o4U < B4U.length; o4U++) {
        c7i = "_Lon";
        c7i += "g ";
        c7i += "M";
        c7i += "A ";
        n4U = B4U[o4U];
        if (!n4U) continue;
        i4U = n4U["_Short MA " + O4U.name];
        j4U = n4U[c7i + O4U.name];

        if ((i4U || i4U === 0) && (j4U || j4U === 0)) {
          if (E4U == "Points") {
            H8Kh.N3mK(1);
            n4U["Result " + O4U.name] = H8Kh.E3mK(j4U, i4U);
          } else {
            H8Kh.N3mK(151);
            n4U["Result " + O4U.name] = H8Kh.E3mK(1, j4U, "100", i4U);
          }

          if (O4U.outputs["Increasing Bar"]) {
            d7i = "Res";
            d7i += "u";
            d7i += "lt";
            d7i += " ";
            n4U[O4U.name + "_hist"] = n4U[d7i + O4U.name];
            O4U.outputMap = {};
            O4U.outputMap[O4U.name + "_hist"] = "";
          }
        }
      }
    };

    c4U.Studies.displayRAVI = function (D4U, q4U, V4U) {
      var W8Kh = T5VV;
      var q7i, x4U, t4U, a4U, m4U, v4U, R4U, s4U, z7i, h7i, b7i, k4U, N4U, M4U, z4U;
      q7i = "Incre";
      q7i += "asing Bar";
      x4U = D4U.panels[q4U.panel];
      t4U = q4U.getContext(D4U);
      a4U = q4U.getYAxis(D4U);
      m4U = D4U.pixelFromPrice(0, x4U, a4U);
      W8Kh.i3mK(152);
      var J1Vu = W8Kh.e3mK(5, 19, 17, 12, 2753);
      v4U = D4U.layout.candleWidth - J1Vu;

      if (v4U < 2) {
        v4U = 1;
      }

      R4U = c4U.Studies.determineColor(q4U.outputs[q7i]);
      s4U = c4U.Studies.determineColor(q4U.outputs["Decreasing Bar"]);
      D4U.startClip(q4U.panel);
      D4U.canvasColor("stx_histogram");

      if (!q4U.underlay) {
        t4U.globalAlpha = 1;
      }

      if (!q4U.highlight && D4U.highlightedDraggable) {
        W8Kh.i3mK(1);
        t4U.globalAlpha *= W8Kh.E3mK(0, "0.3");
      }

      for (var S4U = 0; S4U < V4U.length; S4U++) {
        z7i = "_h";
        z7i += "is";
        z7i += "t";
        h7i = "_h";
        h7i += "ist";
        b7i = "_hi";
        b7i += "st";
        k4U = V4U[S4U];
        W8Kh.N3mK(1);
        N4U = V4U[W8Kh.e3mK(1, S4U)];

        if (!N4U) {
          N4U = D4U.getPreviousBar(D4U.chart, q4U.name + "_hist", S4U);
        }

        if (!k4U) continue;
        M4U = 0;
        W8Kh.i3mK(5);
        z4U = W8Kh.E3mK(1, "0");

        if (q4U.parameters && q4U.parameters.studyOverZonesEnabled) {
          M4U = parseFloat(q4U.parameters.studyOverBoughtValue);
          z4U = parseFloat(q4U.parameters.studyOverSoldValue);
        }

        if (!N4U) {
          t4U.fillStyle = "#CCCCCC";
        } else if (k4U[q4U.name + "_hist"] > M4U && N4U[q4U.name + b7i] < k4U[q4U.name + "_hist"]) {
          t4U.fillStyle = R4U;
        } else if (k4U[q4U.name + "_hist"] < z4U && N4U[q4U.name + h7i] > k4U[q4U.name + "_hist"]) {
          t4U.fillStyle = s4U;
        } else {
          t4U.fillStyle = "#CCCCCC";
        }

        if (k4U.candleWidth) {
          v4U = Math.floor(Math.max(1, k4U.candleWidth - 2));
        }

        t4U.fillRect(Math.floor(D4U.pixelFromBar(S4U, x4U.chart) - v4U / 2), Math.floor(m4U), Math.floor(v4U), Math.floor(D4U.pixelFromPrice(k4U[q4U.name + z7i], x4U, a4U) - m4U));
      }

      D4U.endClip();
    };

    c4U.Studies.studyLibrary = c4U.extend(c4U.Studies.studyLibrary, {
      "Price Osc": {
        name: "Price Oscillator",
        calculateFN: c4U.Studies.calculatePriceOscillator,
        inputs: {
          Field: "field",
          "Short Cycle": 12,
          "Long Cycle": "26" - 0,
          "Moving Average Type": "ema",
          "Points Or Percent": [E7i, "Percent"]
        }
      },
      "Vol Osc": {
        name: "Volume Oscillator",
        calculateFN: c4U.Studies.calculatePriceOscillator,
        inputs: {
          "Short Cycle": 12,
          "Long Cycle": 26,
          "Points Or Percent": ["Points", B7i]
        },
        parameters: {
          init: {
            isVolume: !![]
          }
        }
      },
      RAVI: {
        name: "RAVI",
        seriesFN: c4U.Studies.displayRAVI,
        calculateFN: c4U.Studies.calculatePriceOscillator,
        inputs: {
          Field: "field",
          "Moving Average Type": "vdma",
          "Short Cycle": 7,
          "Long Cycle": 65
        },
        outputs: {
          "Increasing Bar": G7i,
          "Decreasing Bar": m7i
        },
        centerline: +"0",
        parameters: {
          init: {
            studyOverZonesEnabled: !!{},
            studyOverBoughtValue: 3,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: -+"3",
            studyOverSoldColor: "auto"
          }
        },
        attributes: {
          studyOverBoughtValue: {
            min: 0,
            step: "0.1"
          },
          studyOverSoldValue: {
            max: 0,
            step: "0.1"
          }
        }
      }
    });
  }
};

Z2B = function Z2B(T4U) {
  var P4U, e1v, M1v, N1v, P7i, y7i;
  P4U = typeof _CIQ !== "undefined" ? _CIQ : T4U.CIQ;
  T5VV.d7Kh();

  if (!P4U.Studies) {
    e1v = -699919697;
    M1v = -1571753081;
    N1v = 2;

    for (var Z1v = 1; T5VV.s1v(Z1v.toString(), Z1v.toString().length, 43971) !== e1v; Z1v++) {
      P7i = "primeNumber fe";
      P7i += "ature requires first activating studies feature.";
      console.error(P7i);
      N1v += 2;
    }

    if (T5VV.Y6v(N1v.toString(), N1v.toString().length, 45054) !== M1v) {
      console.error("");
    }
  } else {
    y7i = "-1 ";
    y7i += "to 1";

    P4U.Studies.calculatePrimeNumber = function (W4U, l4U) {
      var F8Kh = T5VV;
      var L4U, r4U, f7i, C4U, y4U, A4U, D7i, f4U, Q4U, w4U;
      L4U = [];
      r4U = l4U.chart.scrubbed;
      F8Kh.d7Kh();

      for (var u4U = l4U.startFrom; u4U < r4U.length; u4U++) {
        f7i = "Prime Num";
        f7i += "ber Bands";
        C4U = r4U[u4U];
        if (!C4U) continue;
        y4U = C4U.High;

        if (!isNaN(y4U)) {
          for (var d4U = 0; y4U > 0 && y4U <= 10; d4U++) {
            y4U *= 10;
          }

          if (I4U(y4U)) {
            y4U += +"2";
          }

          y4U = Math.ceil(y4U);

          if (y4U % 2 === 0) {
            y4U++;
          }

          while (!I4U(y4U)) {
            y4U += 2;
          }

          F8Kh.N3mK(5);
          y4U /= Math.pow(F8Kh.e3mK(1, "10"), d4U);
        }

        A4U = C4U.Low;

        if (!isNaN(A4U)) {
          for (var F4U = 0; A4U > 0 && A4U <= 10; F4U++) {
            A4U *= 10;
          }

          if (I4U(A4U)) {
            A4U -= 2;
          }

          A4U = Math.floor(A4U);

          if (A4U % ("2" | 2) === 0) {
            A4U--;
          }

          if (A4U > 0) {
            while (!I4U(A4U)) {
              A4U -= 2;
            }

            A4U /= Math.pow(10, F4U);
          }
        }

        if (l4U.type == f7i) {
          D7i = "Pr";
          D7i += "ime Bands To";
          D7i += "p ";

          if (!isNaN(y4U)) {
            C4U[D7i + l4U.name] = y4U;
          }

          if (!isNaN(A4U)) {
            C4U["Prime Bands Bottom " + l4U.name] = Math.max(0, A4U);
          }
        } else {
          f4U = 0;
          F8Kh.i3mK(1);
          var Q1Vu = F8Kh.E3mK(1600, 1700);
          Q4U = l4U.inputs["Tolerance Percentage"] * (y4U - A4U) / Q1Vu;
          F8Kh.i3mK(153);
          var R1Vu = F8Kh.e3mK(24, 9, 3, 6, 4);
          w4U = y4U + A4U - R1Vu * C4U.Close;

          if (w4U < Q4U) {
            f4U = 1;
          } else if (w4U > Q4U) {
            F8Kh.N3mK(5);
            f4U = -F8Kh.e3mK(1, "1");
          }

          if (f4U) {
            C4U["Result " + l4U.name] = f4U;
          }
        }
      }

      function I4U(b4U) {
        var X4U;

        if (b4U <= 0) {
          return !{};
        } else if (b4U != Math.floor(b4U)) {
          return !!"";
        } else if (L4U[b4U] === !!{} || L4U[b4U] === !1) {
          return L4U[b4U];
        }

        X4U = parseInt(Math.sqrt(b4U), 10);

        for (var e4U = 2; e4U <= X4U; e4U++) {
          if (b4U % e4U === 0) {
            L4U[b4U] = ![];
            return !{};
          }
        }

        L4U[b4U] = !0;
        return !!{};
      }
    };

    P4U.Studies.studyLibrary = P4U.extend(P4U.Studies.studyLibrary, {
      "Prime Number": {
        name: "Prime Number Oscillator",
        range: y7i,
        calculateFN: P4U.Studies.calculatePrimeNumber,
        centerline: 0,
        inputs: {
          "Tolerance Percentage": +"5"
        },
        attributes: {
          "Tolerance Percentage": {
            min: 0.1,
            step: 0.1
          }
        }
      },
      "Prime Number Bands": {
        name: "Prime Number Bands",
        overlay: !0,
        calculateFN: P4U.Studies.calculatePrimeNumber,
        seriesFN: P4U.Studies.displayChannel,
        inputs: {
          "Channel Fill": !0
        },
        outputs: {
          "Prime Bands Top": "auto",
          "Prime Bands Bottom": "auto",
          "Prime Bands Channel": "auto"
        }
      }
    });
  }
};

H3B = function H3B(Z4U) {
  var Y4U, O7i, V7i, K7i, r7i;
  T5VV.d7Kh();
  Y4U = typeof _CIQ !== "undefined" ? _CIQ : Z4U.CIQ;

  if (!Y4U.Studies) {
    console.error("pring feature requires first activating studies feature.");
  } else {
    O7i = "Pring'";
    O7i += "s Spe";
    O7i += "cial K";
    V7i = "#F";
    V7i += "F0000";
    K7i = "f";
    K7i += "i";
    K7i += "e";
    K7i += "ld";
    r7i = "Pring's Kno";
    r7i += "w Sure Thing";

    Y4U.Studies.calculateKST = function (U7U, J7U) {
      var e8Kh = T5VV;
      var Q7i, g7i, W7i, g7U, i7U, d9v, q9v, b9v, k7i, h7U, j7U, A7i, C7i, o7U, n7U, c7U, T7i, J7i, B7U;
      Q7i = "K";
      Q7i += "STSignal";
      g7i = "Signal Peri";
      g7i += "od";
      W7i = "Heav";
      W7i += "y ";
      W7i += "SMA Pe";
      W7i += "riod";
      g7U = J7U.chart.scrubbed;
      i7U = J7U.inputs.Field;
      d9v = -683580816;
      q9v = -936030243;
      b9v = 2;

      for (var z9v = 1; e8Kh.s1v(z9v.toString(), z9v.toString().length, 29295) !== d9v; z9v++) {
        k7i = "fi";
        k7i += "el";
        k7i += "d";

        if (!i7U || i7U == k7i) {
          i7U = "Close";
        }

        h7U = {};
        j7U = {};
        h7U[1] = Number(J7U.inputs["Lightest Rate of Change Period"]);
        h7U[2] = Number(J7U.inputs["Light Rate of Change Period"]);
        h7U[3] = Number(J7U.inputs["Heavy Rate of Change Period"]);
        h7U[4] = Number(J7U.inputs["Heaviest Rate of Change Period"]);
        j7U[1] = Number(J7U.inputs["Lightest SMA Period"]);
        b9v += 2;
      }

      if (e8Kh.Y6v(b9v.toString(), b9v.toString().length, "15768" >> 852929216) !== q9v) {
        A7i = "Ligh";
        A7i += "test S";
        A7i += "MA Peri";
        A7i += "od";
        C7i = "C";
        C7i += "l";
        C7i += "o";
        C7i += "se";

        if (-i7U && i7U != "Close") {
          i7U = C7i;
        }

        h7U = {};
        j7U = {};
        h7U[3] = Number(J7U.inputs["Heaviest Rate of Change Period"]);
        h7U[3] = Number(J7U.inputs[A7i]);
        h7U[2] = Number(J7U.inputs["Close"]);
        h7U[8] = Number(J7U.inputs["Lightest SMA Period"]);
        j7U[6] = Number(J7U.inputs["Close"]);
      }

      j7U[2] = Number(J7U.inputs["Light SMA Period"]);
      j7U[3] = Number(J7U.inputs[W7i]);
      e8Kh.i3mK(1);
      j7U[e8Kh.e3mK(0, "4")] = Number(J7U.inputs["Heaviest SMA Period"]);
      o7U = Number(J7U.inputs[g7i]);

      for (n7U = J7U.startFrom; n7U < g7U.length; n7U++) {
        if (!g7U[n7U]) continue;

        for (c7U = 1; c7U <= 4; c7U++) {
          if (n7U >= h7U[c7U] && g7U[n7U - h7U[c7U]] && g7U[n7U - h7U[c7U]][i7U]) {
            e8Kh.i3mK(2);
            var l1Vu = e8Kh.e3mK(7, 11, 104);
            e8Kh.N3mK(154);
            var r1Vu = e8Kh.e3mK(0, 11, 8, 17, 2);
            g7U[n7U]["_ROC" + c7U + " " + J7U.name] = l1Vu * (g7U[n7U][i7U] / g7U[n7U - h7U[c7U]][i7U] - r1Vu);
          }
        }
      }

      for (c7U = +"1"; c7U <= 4; c7U++) {
        T7i = "_";
        T7i += "S";
        T7i += "M";
        T7i += "A";
        Y4U.Studies.MA("simple", j7U[c7U], "_ROC" + c7U + " " + J7U.name, 0, T7i + c7U, U7U, J7U);
      }

      for (n7U = J7U.startFrom; n7U < g7U.length; n7U++) {
        g7U[n7U]["KST " + J7U.name] = null;

        for (c7U = "1" | 1; c7U <= 4; c7U++) {
          J7i = "_S";
          J7i += "M";
          J7i += "A";
          e8Kh.N3mK(1);
          var K1Vu = e8Kh.E3mK(15, 36);
          e8Kh.N3mK(155);
          var V1Vu = e8Kh.e3mK(7, 10, 10, 8);
          e8Kh.i3mK(78);
          var O1Vu = e8Kh.e3mK(34920, 4365, 5796, 3);
          e8Kh.i3mK(156);
          var a1Vu = e8Kh.E3mK(1, 846, 846, 8455, 6);
          e8Kh.i3mK(157);
          var u1Vu = e8Kh.E3mK(631, 16, 8, 42, 42);
          B7U = g7U[n7U][J7i + c7U + ((K1Vu, +"8488") <= (+"1475", +"7685") ? "675.91" * V1Vu == (O1Vu, a1Vu) ? (u1Vu, +"5.86e+3") : !!1 : " ") + J7U.name];

          if (B7U || B7U === 0) {
            e8Kh.i3mK(5);
            g7U[n7U]["KST " + J7U.name] += e8Kh.e3mK(B7U, c7U);
          }
        }
      }

      Y4U.Studies.MA("simple", o7U, "KST " + J7U.name, 0, Q7i, U7U, J7U);
    };

    Y4U.Studies.calculateSpecialK = function (T7U, v7U) {
      var r8Kh = T5VV;
      var R7i, t7U, x7U, S7U, V7U, z7U, q7U, p7U, l7i, s7U;
      R7i = "Clo";
      R7i += "se";
      t7U = v7U.chart.scrubbed;
      x7U = v7U.inputs.Field;

      if (!x7U || x7U == "field") {
        x7U = R7i;
      }

      S7U = v7U.inputs.Interval;

      if (!S7U) {
        S7U = "daily";
      }

      V7U = {
        daily: [+"10", 15, 20, 30, 50, 65, 75, 100, 195, +"265", 390, 530],
        weekly: [4, "5" | 1, 6, 8, 10, 13, +"15", "20" >> 853112192, 39, 52, 78, 104]
      };
      z7U = {
        daily: [10, 10, 10, "15" - 0, 50, 65, 75, 100, 130, 130, 130, 195],
        weekly: [4, "5" * 1, 6, 8, +"10", 13, 15, +"20", +"26", 26, 26, 39]
      };

      for (q7U = v7U.startFrom; q7U < t7U.length; q7U++) {
        if (!t7U[q7U]) continue;

        for (p7U = 0; p7U < V7U[S7U].length; p7U++) {
          if (q7U >= V7U[S7U][p7U] && t7U[q7U - V7U[S7U][p7U]] && t7U[q7U - V7U[S7U][p7U]][x7U]) {
            r8Kh.N3mK(124);
            var X1Vu = r8Kh.e3mK(96, 2, 11, 2, 273);
            r8Kh.i3mK(7);
            var p1Vu = r8Kh.E3mK(0, 11, 10);
            t7U[q7U]["_ROC" + p7U + " " + v7U.name] = X1Vu * (t7U[q7U][x7U] / t7U[q7U - V7U[S7U][p7U]][x7U] - p1Vu);
          }
        }
      }

      for (p7U = 0; p7U < z7U[S7U].length; p7U++) {
        l7i = "d";
        l7i += "a";
        l7i += "i";
        l7i += "ly";
        Y4U.Studies.MA(S7U == l7i ? "simple" : "exponential", z7U[S7U][p7U], "_ROC" + p7U + " " + v7U.name, 0, "_MA" + p7U, T7U, v7U);
      }

      for (q7U = v7U.startFrom; q7U < t7U.length; q7U++) {
        t7U[q7U]["Result " + v7U.name] = null;

        for (p7U = 0; p7U < z7U[S7U].length; p7U++) {
          r8Kh.i3mK(7);
          var Y1Vu = r8Kh.E3mK(64404, 5, 57253);
          r8Kh.N3mK(158);
          var s0Vu = r8Kh.e3mK(246, 20, 9, 15, 262);
          r8Kh.N3mK(1);
          var H0Vu = r8Kh.e3mK(68440, 76995);
          r8Kh.N3mK(0);
          var v0Vu = r8Kh.e3mK(15, 380);
          s7U = t7U[q7U]["_MA" + p7U + (+"744.99" != (Y1Vu, +"1190") ? s0Vu === 485.72 ? !"" : (+"912.26", "111.9" - 0) !== (935.72, 798.97) ? " " : (H0Vu, "a") : v0Vu) + v7U.name];

          if (s7U || s7U === "0" >> 27249504) {
            r8Kh.i3mK(159);
            t7U[q7U]["Result " + v7U.name] += r8Kh.E3mK(4, 1, p7U, s7U);
          }
        }
      }
    };

    Y4U.Studies.studyLibrary = Y4U.extend(Y4U.Studies.studyLibrary, {
      "Pring KST": {
        name: r7i,
        calculateFN: Y4U.Studies.calculateKST,
        inputs: {
          Field: K7i,
          "Lightest Rate of Change Period": 10,
          "Lightest SMA Period": "10" << 1954681024,
          "Light Rate of Change Period": +"15",
          "Light SMA Period": 10,
          "Heavy Rate of Change Period": 20,
          "Heavy SMA Period": 10,
          "Heaviest Rate of Change Period": 30,
          "Heaviest SMA Period": 15,
          "Signal Period": 9
        },
        outputs: {
          KST: "#00DD00",
          KSTSignal: V7i
        }
      },
      "Pring Sp-K": {
        name: O7i,
        calculateFN: Y4U.Studies.calculateSpecialK,
        inputs: {
          Field: "field",
          Interval: ["daily", "weekly"]
        }
      }
    });
  }
};

J3B = function J3B(y7U) {
  var a7i, A7U, C7U, u7i, I2i, N2i, M2i, e2i, o2i;
  a7i = "unde";
  a7i += "fi";
  a7i += "ned";
  A7U = typeof _CIQ !== "undefined" ? _CIQ : y7U.CIQ;
  C7U = (typeof _timezoneJS === "undefined" ? "undefined" : _typeof(_timezoneJS)) !== a7i ? _timezoneJS : y7U.timezoneJS;

  if (!A7U.Studies) {
    u7i = "projectedVolume feature requires first a";
    u7i += "ctivating st";
    u7i += "udies feature.";
    console.error(u7i);
  } else if (!A7U.Studies.studyLibrary.PVAT) {
    I2i = "s";
    I2i += "t";
    I2i += "e";
    I2i += "p";
    N2i = "hh";
    N2i += ":";
    N2i += "m";
    N2i += "m:ss";
    M2i = "#b8";
    M2i += "2c0c";
    e2i = "#c";
    e2i += "fb";
    e2i += "d0e";
    o2i = "Proj";
    o2i += "ected Volume at";
    o2i += " Ti";
    o2i += "me";

    A7U.Studies.initProjectedVolume = function (F7U, H0P, d7U, J0P, c0P, K0P) {
      var X7i, I7U, e7U;
      X7i = "An";
      X7i += "chor ";
      X7i += "Tim";
      X7i += "e";
      var w7U = F7U.chart.market;
      I7U = "0";
      I7U += "0:0";
      T5VV.k7Kh();
      I7U += "0";

      if (w7U) {
        I7U = w7U.getNormalOpen();
      }

      if (I7U.match(/^[\d]{2}:[\d]{2}$/)) {
        I7U += ":00";
      }

      if (!d7U[X7i] || !d7U["Anchor Time"].length) {
        d7U["Anchor Time"] = I7U;
      }

      e7U = A7U.Studies.initializeFN(F7U, H0P, d7U, J0P, c0P, K0P);

      if (!F7U.currentlyImporting) {
        e7U.defaultAnchorTime = I7U;
      }

      return e7U;
    };

    A7U.Studies.validateProjectedVolumeLookback = function (h0P, i0P) {
      var _h0P$layout = h0P.layout,
          O0P = _h0P$layout.interval,
          n0P = _h0P$layout.periodicity;
      var g0P = i0P.inputs["Lookback Days"];
      T5VV.k7Kh();
      T5VV.N3mK(160);
      return T5VV.e3mK("10", O0P, g0P, n0P, 945977472);
    };

    A7U.Studies.calculateProjectedVolume = function (U0P, j0P) {
      var b8Kh = T5VV;
      var H2i, s2i, p7i, J1P, t0P, S0P, Y7i, E9v, B9v, G9v, K1P, O1P, I0P, u0P, E0P, r0P, a1P, o0P, d0P, F0P, n1P, Q0P, v2i, v0P, w0P, m1P, k0P, M1P, s0P, G0P, y0P, q0P, a0P, h1P, i1P, j1P, B1P, b0P, e0P, L0P, s1P, U1P, m0P, M0P, f0P, P1P, U2i, X0P, p0P, E1P, o1P, Y0P, G1P, P0P, S2i;
      H2i = "P";
      H2i += "V";
      H2i += " ";
      s2i = "Mar";
      s2i += "ket.Symbology.isForexSy";
      s2i += "mbol";
      p7i = "m";
      p7i += "i";
      p7i += "n";
      p7i += "ute";
      var _U0P$layout = U0P.layout,
          t1P = _U0P$layout.interval,
          Z0P = _U0P$layout.timeUnit,
          H1P = _U0P$layout.aggregationType;
      var _U0P$chart = U0P.chart,
          S1P = _U0P$chart.symbol,
          v1P = _U0P$chart.scroll,
          B0P = _U0P$chart.scrubbed,
          D0P = _U0P$chart.market;
      J1P = j0P.type === "PAV";
      t0P = j0P.study ? j0P.study.name : j0P.type;

      if (A7U.ChartEngine.isDailyInterval(t1P)) {
        j0P.error = "".concat(t0P, " is Intraday Only");
      } else if (Z0P === "tick") {
        j0P.error = "Tick mode not supported for ".concat(t0P);
      } else if (Z0P !== p7i) {
        j0P.error = "Sub-minute periodicities not supported for ".concat(t0P);
      } else if (!H1P || !["ohlc", "heikinashi"].includes(H1P)) {
        j0P.error = "Aggregation type not supported for ".concat(t0P);
      } else if (!A7U.Studies.validateProjectedVolumeLookback(U0P, j0P)) {
        j0P.error = "Selected lookback/periodicity combo not supported for ".concat(t0P);
      }

      if (j0P.error) {
        return;
      }

      if (j0P.inputs["Anchor Selector"]) {
        A7U.Studies.initAnchorHandle(U0P, j0P);
      } else {
        A7U.Studies.removeAnchorHandle(U0P, j0P);
      }

      S0P = D0P ? D0P.getNormalOpen() : "00:00";

      function k1P(F1P) {
        b8Kh.k7Kh();
        return U0P.dateFromTick(F1P, null, !"", "scrubbed");
      }

      if (S0P.match(/^[\d]{2}:[\d]{2}$/)) {
        S0P += ":00";
      }

      if (!U0P.currentlyImporting) {
        if (!j0P.defaultAnchorTime) {
          j0P.defaultAnchorTime = S0P;
        } else if (S0P !== j0P.defaultAnchorTime) {
          Y7i = "An";
          Y7i += "chor Time";
          j0P.defaultAnchorTime = S0P;
          j0P.inputs[Y7i] = S0P;
          b8Kh.i3mK(26);
          E9v = -b8Kh.E3mK("1647446163", 0);
          B9v = 1474594140;
          G9v = 2;

          for (var P9v = 1; b8Kh.Y6v(P9v.toString(), P9v.toString().length, "83222" << 812757792) !== E9v; P9v++) {
            A7U.Studies.repositionAnchor(U0P, j0P);
            G9v += 2;
          }

          if (b8Kh.Y6v(G9v.toString(), G9v.toString().length, 4772) !== B9v) {
            A7U.Studies.repositionAnchor(U0P, j0P);
          }

          return;
        }
      }

      function T0P(X1P, Y1P) {
        var b1P, e1P, W1P;
        b1P = k1P(X1P);
        e1P = D0P.getOpen(b1P) || T1P(b1P);
        W1P = D1P(e1P);

        if (!Y1P) {
          return W1P;
        }

        if (W1P < 0) {
          W1P = D1P(q1P(e1P, 1, !!{}));
        }

        if (W1P >= B0P.length) {
          return ![];
        }

        return W1P;
      }

      var _j0P$inputs = j0P.inputs,
          A0P = _j0P$inputs["Lookback Days"],
          N1P = _j0P$inputs["Anchor Time"];
      b8Kh.i3mK(5);

      var _N1P$split = N1P.split(("6052" & 2147483647, 2386) >= (+"4448", "9519" >> 1116001312) ? (4219, 15.88) == (+"521.97", +"555.21") ? (2.51e+3, 695.86) : "a" : ":"),
          _N1P$split2 = _slicedToArray(_N1P$split, 3),
          x1P = _N1P$split2[0],
          V1P = _N1P$split2[1],
          _N1P$split2$ = _N1P$split2[2],
          c1P = _N1P$split2$ === void 0 ? T5VV.e3mK(1, "0") : _N1P$split2$;

      K1P = A7U.getFn(s2i)(S1P);
      O1P = j0P.getDependents(U0P);
      I0P = 0;
      u0P = [];
      O1P.forEach(function (_ref2) {
        var A1P = _ref2.inputs,
            y1P = _ref2.outputMap;

        if (A1P.Period) {
          var _u0P;

          I0P = Math.max(parseInt(A1P.Period), I0P);

          (_u0P = u0P).push.apply(_u0P, _toConsumableArray(Object.keys(y1P)));
        }
      });

      function D1P(d1P) {
        var w2i;
        w2i = "s";
        w2i += "cr";
        w2i += "u";
        w2i += "bbed";
        return U0P.tickFromDate(d1P, null, null, !!{}, w2i);
      }

      function z0P(f1P) {
        return {
          hours: f1P.getHours(),
          minutes: f1P.getMinutes()
        };
      }

      function T1P(Q1P) {
        var w1P;
        b8Kh.d7Kh();
        Q1P.setHours(0);
        Q1P.setMinutes(0);
        w1P = A7U.Studies.getMarketOffset({
          stx: U0P,
          localQuoteDate: Q1P
        });
        return new Date(Q1P.getTime() + w1P);
      }

      j0P.dependentsOutputMap = u0P;

      function q1P(I1P, u1P, r1P) {
        b8Kh.d7Kh();

        while (u1P) {
          I1P = new Date(new Date(I1P).setDate(I1P.getDate() + (r1P ? 1 : -+"1")));

          if (D0P.isMarketDate(I1P)) {
            u1P--;
          }
        }

        return I1P;
      }

      r0P = T0P(B0P.length - 1, !0);
      a1P = Math.ceil(B0P.length - 1 - v1P);
      b8Kh.i3mK(1);
      o0P = T0P(b8Kh.E3mK(I0P, a1P));

      if (K1P && B0P[o0P] && A7U.dateToStr(B0P[o0P].DT, "HH:mm") !== S0P) {
        b8Kh.N3mK(76);
        o0P = T0P(b8Kh.e3mK("1", o0P));
        ;
      }

      if (!K1P && j0P.startFrom > o0P && B0P[o0P] && B0P[o0P]["V " + j0P.name] !== undefined && u0P.every(function (C1P) {
        b8Kh.d7Kh();
        return ![undefined, null].includes(B0P[o0P][C1P]);
      }) && r0P !== !1) {
        E0P = r0P;
        ;
      } else {
        E0P = o0P;
      }

      d0P = q1P(k1P(o0P), A0P);
      d0P.setHours(0, +"0", 0);
      F0P = T0P(0, !![]);
      n1P = (F0P || F0P === 0) && D1P(q1P(B0P[F0P].DT, A0P, !""));

      if (B0P["0" ^ 0].DT > d0P) {
        if (U0P.quoteDriver) {
          U0P.quoteDriver.extendHistoricalData({
            from: d0P
          });

          if (n1P > 0) {
            E0P = n1P;
          } else {
            return;
          }
        } else {
          return j0P.error = "Not enough data to calculate ".concat(t0P);
        }
      }

      if (E0P < "0" << 1682745440 || E0P > B0P.length - 1) {
        return;
      }

      b8Kh.k7Kh();
      Q0P = B0P.length - j0P.startFrom === "1" * 1 && j0P.cachedFutureTicks && j0P.cachedLastProjection && +j0P.cachedLastProjection.DT === +B0P[B0P.length - 1].DT && B0P[E0P][H2i + j0P.name];

      if (Q0P) {
        v2i = "P";
        v2i += "V";
        v2i += " ";
        b8Kh.N3mK(119);
        var U0Vu = b8Kh.e3mK(7, 1, 6);
        B0P[B0P.length - U0Vu][v2i + j0P.name] = j0P.cachedLastProjection.projectedValue;
        j0P.appendFutureTicks(U0P, j0P.cachedFutureTicks);
        E0P = j0P.startFrom;
      } else {
        j0P.cachedFutureTicks = null;
        j0P.cachedLastProjection = null;
        v0P = [r0P];
        w0P = [];

        for (var g1P = 0; g1P < A0P; g1P++) {
          m1P = T0P(v0P[0] - 1);
          v0P.unshift(m1P);
          ;
        }

        while (v0P[A0P] >= E0P) {
          k0P = v0P.pop();

          if (!B0P[k0P]) {
            return p1P(k0P);
          }

          M1P = z0P(B0P[k0P].DT);
          var _M1P = M1P,
              N0P = _M1P.hours,
              R0P = _M1P.minutes;
          s0P = D0P.getClose(B0P[k0P].DT);
          G0P = void 0;

          if (!s0P) {
            G0P = {
              hours: 24,
              minutes: 0
            };
          } else {
            y0P = D0P.getNextClose(B0P[k0P].DT);
            G0P = z0P(s0P);

            while (!(G0P.hours === +"0" && G0P.minutes === ("0" & 2147483647)) && s0P.getDate() === y0P.getDate()) {
              s0P = y0P;
              y0P = D0P.getNextClose(y0P);
            }

            G0P = z0P(s0P);

            if (G0P.hours === 0) {
              G0P.hours = +"24";
            }
          }

          q0P = v0P.slice();

          for (var C0P = 0; C0P < q0P.length; C0P++) {
            a0P = q0P[C0P];

            if (!B0P[a0P]) {
              return p1P(a0P);
            }

            var _z0P = z0P(B0P[a0P].DT),
                l0P = _z0P.hours,
                W0P = _z0P.minutes;

            if (l0P < N0P || l0P === N0P && W0P < R0P) {
              do {
                a0P++;

                var _z0P2 = z0P(B0P[a0P].DT);

                l0P = _z0P2.hours;
                W0P = _z0P2.minutes;
              } while (!(l0P === N0P && W0P === R0P));
            }

            q0P[C0P] = a0P;
          }

          while (N0P < G0P.hours || N0P === G0P.hours && R0P < G0P.minutes) {
            h1P = !{};
            i1P = void 0;
            j1P = void 0;
            B1P = +"0";
            b0P = +"0";

            for (var x0P = 0; x0P < q0P.length; x0P++) {
              e0P = q0P[x0P];
              if (e0P === null) continue;
              L0P = B0P[e0P];

              if (!L0P) {
                return p1P(e0P);
              }

              var _z0P3 = z0P(L0P.DT),
                  z1P = _z0P3.hours,
                  R1P = _z0P3.minutes;

              s1P = L0P.DT.getDate();

              if (z1P === N0P && R1P === R0P) {
                B1P += L0P.Volume;
                b0P++;
                q0P[x0P]++;

                if (B0P[q0P[x0P]].DT.getDate() !== s1P) {
                  q0P[x0P] = null;
                } else if (!h1P) {
                  var _z0P4 = z0P(B0P[q0P[x0P]].DT);

                  i1P = _z0P4.hours;
                  j1P = _z0P4.minutes;
                  h1P = !"";
                  ;
                }
              }
            }

            N0P = i1P;
            R0P = j1P;
            if (b0P === 0) break;
            b8Kh.N3mK(10);
            U1P = b8Kh.e3mK(B1P, b0P);

            if (B0P[k0P]) {
              B0P[k0P]["PV " + j0P.name] = U1P;
            } else {
              w0P.push(_defineProperty({}, "PV " + j0P.name, U1P));
            }

            k0P++;
          }

          v0P.unshift(T0P(v0P[0] - ("1" | 1)));
          ;
        }

        j0P.cachedLastProjection = {
          DT: B0P[B0P.length - 1].DT,
          projectedValue: B0P[B0P.length - 1]["PV " + j0P.name]
        };
        j0P.cachedFutureTicks = w0P;
        j0P.appendFutureTicks(U0P, w0P);
      }

      m0P = null;

      function p1P(L1P) {
        console.error("Expected data for ".concat(k1P(L1P).toDateString(), " but found none. This may be caused by gaps in your data or an improperly configured market definition."));
      }

      M0P = +"0";
      f0P = 0;

      if (Q0P && J1P) {
        while (E0P > 0) {
          U2i = "V";
          U2i += " ";
          b8Kh.i3mK(161);
          X0P = B0P[b8Kh.E3mK(1, E0P, "1")][U2i + j0P.name];

          if (X0P || X0P === 0) {
            M0P = X0P;
            break;
          }

          E0P--;
        }
      }

      for (var V0P = E0P; V0P < B0P.length; V0P++) {
        p0P = B0P[V0P];
        E1P = p0P.Volume;
        o1P = p0P["PV " + j0P.name];

        if (!p0P.futureTick) {
          P1P = V0P;
        }

        if (m0P === null) {
          m0P = A7U.Studies.getMarketOffset({
            stx: U0P,
            localQuoteDate: B0P[V0P].DT,
            shiftToDateBoundary: !0
          });
        }

        Y0P = new Date(new Date(p0P.DT).getTime() + m0P);
        G1P = B0P[V0P - 1] && new Date(new Date(B0P[V0P - 1].DT).getTime() + m0P);
        P0P = new C7U.Date(p0P.DT, D0P.market_def.market_tz || "America/New_York");
        P0P.setHours(x1P, V1P, c1P);
        b8Kh.N3mK(0);
        P0P = new Date(b8Kh.E3mK(m0P, P0P));
        P0P.setDate(Y0P.getDate());

        if (G1P && Y0P.getDate() !== G1P.getDate()) {
          m0P = null;
          M0P = 0;
          f0P = 0;
        }

        if (Y0P < P0P) {
          S2i = "V";
          S2i += " ";
          p0P[S2i + j0P.name] = +"0";
          p0P["PV " + j0P.name] = 0;
          continue;
        }

        if (J1P) {
          M0P += E1P;
          f0P += o1P;
        } else {
          M0P = E1P;
          f0P = o1P;
        }

        p0P["V " + j0P.name] = M0P;

        if (!Q0P) {
          p0P["PV " + j0P.name] = f0P;
        }

        if ([NaN, null, undefined].includes(M0P) && !p0P.futureTick) {
          j0P.error = "".concat(t0P, " requires volume");
          return;
        }
      }

      j0P.cachedLastProjection.projectedValue = B0P[P1P]["PV " + j0P.name];
      j0P.outputMap = {};
      j0P.outputMap["V " + j0P.name] = "";
      j0P.outputMap["PV " + j0P.name] = "Average Line";
      O1P.forEach(function (l1P) {
        b8Kh.d7Kh();
        l1P.startFrom = E0P;
        l1P.study.calculateFN(U0P, l1P);
      });
    };

    A7U.Studies.displayProjectedVolume = function (H2P, Z1P, J2P) {
      var x8Kh = T5VV;
      var L2i, t2i, O2P, c2P, n2P, g2P, h2P, j2P, B2P;
      L2i = "V";
      L2i += " ";
      t2i = "obj";
      t2i += "ec";
      t2i += "t";

      if (Z1P.error) {
        return A7U.Studies.removeAnchorHandle(H2P, Z1P);
      }

      var _Z1P$inputs$AlertThr = Z1P.inputs["Alert Threshold"],
          K2P = _Z1P$inputs$AlertThr === void 0 ? "" : _Z1P$inputs$AlertThr;
      x8Kh.N3mK(162);
      var S0Vu = x8Kh.e3mK(2, 2, 35, 9);
      x8Kh.N3mK(16);
      var w0Vu = x8Kh.e3mK(19, 9);
      x8Kh.i3mK(58);
      var t0Vu = x8Kh.E3mK(86, 99, 86);
      O2P = parseInt(K2P.slice(+"0", S0Vu), w0Vu) / t0Vu;
      c2P = Z1P.outputs["Alert Bar"];

      if (_typeof(c2P) === t2i) {
        c2P = c2P.color;
      }

      Z1P.volumeField = L2i + Z1P.name;
      Z1P.alignStepToSide = !"";
      Z1P.extendToEndOfLastBar = !!{};
      Z1P.lineWidth = 2;
      n2P = H2P.canvasStyle("stx_volume_underlay_up").opacity;
      g2P = H2P.canvasStyle("stx_volume_underlay_down").opacity;

      Z1P.colorFunction = function (E2P) {
        var x2i, t2P, U2P, S2P, o2P, G2P, p2P;
        x2i = "P";
        x2i += "V";
        x2i += " ";
        var q2P = E2P.Open,
            D2P = E2P.Close,
            k2P = E2P.iqPrevClose;
        x8Kh.k7Kh();
        t2P = H2P.colorByCandleDirection ? q2P : k2P;
        x8Kh.N3mK(163);
        U2P = x8Kh.e3mK(t2P, D2P);
        S2P = E2P[x2i + Z1P.name];
        o2P = E2P["V " + Z1P.name];
        x8Kh.i3mK(164);
        G2P = x8Kh.E3mK(1, O2P, S2P);
        p2P = O2P < 0 ? o2P < G2P : o2P > G2P;
        return {
          fill_color: p2P && c2P || (U2P ? this.fill_color_down : this.fill_color_up),
          border_color: U2P ? this.border_color_down : this.border_color_up,
          opacity: p2P ? 1 : U2P ? g2P : n2P,
          border_opacity: U2P ? g2P : n2P
        };
      };

      h2P = Z1P.study ? Z1P.study.name : Z1P.type;
      var i2P = H2P.chart.loadingMore;
      j2P = J2P.some(function (v2P) {
        var j2i;
        x8Kh.k7Kh();
        j2i = "P";
        j2i += "V";
        j2i += " ";
        return v2P && v2P[Z1P.volumeField] && v2P[j2i + Z1P.name];
      });
      B2P = J2P[0] && !J2P[+"0"].futureTick && (J2P[0]["PV " + Z1P.name] === undefined || (Z1P.dependentsOutputMap || []).some(function (N2P) {
        x8Kh.k7Kh();
        return [undefined, null].includes(J2P["0" - 0][N2P]);
      }));

      if (!j2P && i2P) {
        return Z1P.error = "Fetching data for ".concat(h2P);
      }

      A7U.Studies.createVolumeChart(H2P, Z1P, J2P);
      A7U.Studies.displaySeriesAsLine(H2P, Z1P, J2P);

      if (Z1P.anchorHandle) {
        A7U.Studies.displayAnchorHandleAndLine(H2P, Z1P, J2P);
      }

      if (B2P) {
        A7U.Studies.calculateProjectedVolume(H2P, Z1P);
      }
    };

    A7U.Studies.studyLibrary = A7U.extend(A7U.Studies.studyLibrary, {
      PVAT: {
        name: o2i,
        range: "0 to max",
        yAxis: {
          ground: !"",
          initialMarginTop: 0,
          zoom: 0
        },
        calculateFN: A7U.Studies.calculateProjectedVolume,
        seriesFN: A7U.Studies.displayProjectedVolume,
        initializeFN: A7U.Studies.initProjectedVolume,
        removeFN: A7U.Studies.removeAnchorHandle,
        inputs: {
          "Lookback Days": 10,
          "Anchor Time": "",
          "Alert Threshold": ["+150%", "+125%", "+100%", "+75%", "+50%", "+25%", "None", "-25%", "-50%", "-75%", "-100%", "-125%", "-150%"],
          "Anchor Selector": !![]
        },
        outputs: {
          "Average Line": "#fe641c",
          "Alert Bar": e2i,
          "Up Volume": "#8cc176",
          "Down Volume": M2i
        },
        parameters: {
          plotType: "step"
        },
        attributes: {
          "Anchor Time": {
            placeholder: N2i,
            step: 1
          },
          "Alert Threshold": {
            defaultSelected: "+50%"
          }
        }
      },
      PAV: {
        name: "Projected Aggregate Volume",
        range: "0 to max",
        yAxis: {
          ground: !!1,
          initialMarginTop: 0,
          zoom: 0
        },
        calculateFN: A7U.Studies.calculateProjectedVolume,
        seriesFN: A7U.Studies.displayProjectedVolume,
        initializeFN: A7U.Studies.initProjectedVolume,
        removeFN: A7U.Studies.removeAnchorHandle,
        inputs: {
          "Lookback Days": 10,
          "Anchor Time": "",
          "Anchor Selector": !![]
        },
        outputs: {
          "Average Line": "#fe641c",
          "Up Volume": "#8cc176",
          "Down Volume": "#b82c0c"
        },
        parameters: {
          plotType: I2i
        },
        attributes: {
          "Anchor Time": {
            placeholder: "hh:mm:ss",
            step: 1
          }
        }
      }
    });
  }
};

c3B = function c3B(V2P) {
  T5VV.d7Kh();
  var x2P, Z2i;
  x2P = typeof _CIQ !== "undefined" ? _CIQ : V2P.CIQ;

  if (!x2P.Studies) {
    console.error("psychologicalLine feature requires first activating studies feature.");
  } else {
    Z2i = "Ps";
    Z2i += "ych";
    Z2i += "olo";
    Z2i += "gical Line";

    x2P.Studies.calculatePsychologicalLine = function (T2P, a2P) {
      var M2P, z2P, s2P, R2P, P2P;
      M2P = a2P.chart.scrubbed;

      if (M2P.length < a2P.days + 1) {
        a2P.error = !!{};
        return;
      }

      z2P = [];
      T5VV.i3mK(23);
      var L0Vu = T5VV.E3mK(111, 455, 5);
      s2P = L0Vu / a2P.days;
      R2P = 0;

      for (var m2P = Math.max(a2P.startFrom - a2P.days, 1); m2P < M2P.length; m2P++) {
        if (M2P[m2P].futureTick) break;
        P2P = Number(M2P[m2P].Close > M2P[m2P - 1].Close);

        if (P2P) {
          R2P += s2P;
        }

        z2P.push(P2P);

        if (z2P.length > a2P.days) {
          R2P -= z2P.shift() * s2P;
        }

        if (m2P < a2P.startFrom) continue;

        if (!isNaN(M2P[m2P].Close)) {
          M2P[m2P]["Result " + a2P.name] = R2P;
        }
      }
    };

    x2P.Studies.studyLibrary = x2P.extend(x2P.Studies.studyLibrary, {
      PSY: {
        name: Z2i,
        range: "0 to 100",
        calculateFN: x2P.Studies.calculatePsychologicalLine,
        inputs: {
          Period: 20
        }
      }
    });
  }
};

K3B = function K3B(y2P) {
  T5VV.d7Kh();
  var A2P;
  A2P = typeof _CIQ !== "undefined" ? _CIQ : y2P.CIQ;

  if (!A2P.Studies) {
    console.error("qstick feature requires first activating studies feature.");
  } else {
    A2P.Studies.calculateQStick = function (f2P, C2P) {
      var F2i, l2P, i2i;
      F2i = "Mov";
      F2i += "ing Average";
      F2i += " Type";
      l2P = C2P.chart.scrubbed;

      if (l2P.length < C2P.days + +"1") {
        C2P.error = !!"1";
        return;
      }

      for (var L2P = C2P.startFrom; L2P < l2P.length; L2P++) {
        i2i = "_Cl";
        i2i += "ose-Ope";
        i2i += "n ";
        l2P[L2P][i2i + C2P.name] = l2P[L2P].Close - l2P[L2P].Open;
      }

      A2P.Studies.MA(C2P.inputs[F2i], C2P.days, "_Close-Open " + C2P.name, 0, "Result", f2P, C2P);
    };

    A2P.Studies.studyLibrary = A2P.extend(A2P.Studies.studyLibrary, {
      QStick: {
        name: "QStick",
        calculateFN: A2P.Studies.calculateQStick,
        inputs: {
          Period: 8,
          "Moving Average Type": "ma"
        }
      }
    });
  }
};

O3B = function O3B(u2P) {
  var I2P, h7v, z7v, E7v, n2i, y2i, D2i, f2i, P2i, m2i;
  I2P = typeof _CIQ !== "undefined" ? _CIQ : u2P.CIQ;
  T5VV.d7Kh();

  if (!I2P.Studies) {
    h7v = -+"659124584";
    z7v = -1564706505;
    E7v = 2;

    for (var G7v = 1; T5VV.s1v(G7v.toString(), G7v.toString().length, 98858) !== h7v; G7v++) {
      n2i = "ra";
      n2i += "inbow feat";
      n2i += "u";
      n2i += "re requires first activating studies feature.";
      console.error(n2i);
      E7v += 2;
    }

    if (T5VV.Y6v(E7v.toString(), E7v.toString().length, 21218) !== z7v) {
      console.error("");
    }
  } else {
    y2i = "#";
    y2i += "FF";
    y2i += "0000";
    D2i = "#";
    D2i += "00";
    D2i += "DD";
    D2i += "00";
    f2i = "f";
    f2i += "i";
    f2i += "e";
    f2i += "ld";
    P2i = "#";
    P2i += "000";
    P2i += "0";
    P2i += "FF";
    m2i = "#";
    m2i += "FF7F00";

    I2P.Studies.calculateRainbow = function (J3P, r2P) {
      var M8Kh = T5VV;
      var c2i, d2P, w2P, Z2P, b2i, q2i, d2i, h2i, H3P, e2P, X2P, Y2P, W2P, b2P, E2i, z2i;
      c2i = "C";
      c2i += "l";
      c2i += "o";
      c2i += "se";
      d2P = r2P.chart.scrubbed;

      if (d2P.length < r2P.days + ("1" >> 1156018432)) {
        r2P.error = !!{};
        return;
      }

      w2P = r2P.inputs.Field;

      if (!w2P || w2P == "field") {
        w2P = c2i;
      }

      Z2P = w2P;

      for (var Q2P = 1; Q2P <= 10; Q2P++) {
        b2i = "S";
        b2i += "MA";
        q2i = "S";
        q2i += "M";
        q2i += "A";
        d2i = "s";
        d2i += "im";
        d2i += "pl";
        d2i += "e";
        I2P.Studies.MA(d2i, r2P.days, Z2P, 0, q2i + Q2P, J3P, r2P);
        M8Kh.i3mK(156);
        var x0Vu = M8Kh.e3mK(39325, 1, 117975, 7829, 12);
        M8Kh.i3mK(165);
        var j0Vu = M8Kh.e3mK(276, 10, 253, 13, 4);
        M8Kh.N3mK(52);
        var o0Vu = M8Kh.e3mK(289, 17, 1);
        M8Kh.N3mK(155);
        var e0Vu = M8Kh.E3mK(14, 34, 7, 5444);
        M8Kh.N3mK(131);
        var M0Vu = M8Kh.e3mK(9559, 16, 2743402, 18, 2);
        M8Kh.i3mK(0);
        var N0Vu = M8Kh.E3mK(7657, 696);
        M8Kh.i3mK(31);
        var I0Vu = M8Kh.E3mK(7727, 6, 20, 5);
        M8Kh.N3mK(158);
        var Z0Vu = M8Kh.E3mK(315162, 4, 20, 8, 80630);
        Z2P = b2i + Q2P + ((944.19, x0Vu) < j0Vu ? o0Vu >= e0Vu ? (312.53, M0Vu) : +"593.72" === (N0Vu, I0Vu) ? "b" : Z0Vu : " ") + r2P.name;
      }

      function c3P(h3P, g3P) {
        var O3P, n3P;
        M8Kh.i3mK(16);
        var i0Vu = M8Kh.e3mK(20, 21);
        O3P = Number.MAX_VALUE * i0Vu;
        n3P = Number.MAX_VALUE;

        for (var K3P = g3P - h3P + 1; K3P <= g3P; K3P++) {
          if (K3P < 0) continue;
          O3P = Math.max(O3P, d2P[K3P].Close);
          n3P = Math.min(n3P, d2P[K3P].Close);
        }

        return [n3P, O3P];
      }

      for (var F2P = Math.max(r2P.startFrom, 10); F2P < d2P.length; F2P++) {
        h2i = "O";
        h2i += "s";
        h2i += "c";
        if (!d2P[F2P]) continue;
        if (d2P[F2P].futureTick) break;
        H3P = 0;
        e2P = +"0";
        M8Kh.i3mK(162);
        var F0Vu = M8Kh.e3mK(7, 4, 251, 9);
        X2P = Number.MAX_VALUE * F0Vu;
        Y2P = Number.MAX_VALUE;

        for (Q2P = 1; Q2P <= 10; Q2P++) {
          M8Kh.N3mK(166);
          var n0Vu = M8Kh.e3mK(4, 2552, 12, 638, 243);
          M8Kh.N3mK(137);
          var c0Vu = M8Kh.e3mK(1, 19240, 18, 8149, 2);
          M8Kh.i3mK(40);
          var d0Vu = M8Kh.E3mK(435, 2, 443, 2);
          M8Kh.i3mK(0);
          var q0Vu = M8Kh.e3mK(17, 5039);
          M8Kh.i3mK(1);
          var b0Vu = M8Kh.E3mK(4266, 4503);
          M8Kh.i3mK(167);
          var h0Vu = M8Kh.E3mK(5, 1185, 10, 1, 11460);
          M8Kh.N3mK(168);
          var z0Vu = M8Kh.e3mK(0, 17, 16, 15, 17);
          M8Kh.N3mK(1);
          var E0Vu = M8Kh.E3mK(80388, 87087);
          W2P = d2P[F2P]["SMA" + Q2P + ((n0Vu, c0Vu) < (d0Vu, q0Vu) ? (b0Vu, h0Vu) > ("675.05" * z0Vu, 763.72) ? E0Vu : " " : !"1") + r2P.name];

          if (W2P || W2P === 0) {
            H3P += W2P;
            e2P++;
            X2P = Math.max(X2P, W2P);
            Y2P = Math.min(Y2P, W2P);
          }
        }

        if (r2P.name.indexOf(h2i) > -1) {
          b2P = c3P(r2P.inputs["HHV/LLV Lookback"], F2P);

          if (e2P) {
            M8Kh.i3mK(71);
            var B0Vu = M8Kh.E3mK(5, 19015857344, 14, 93350572346);
            M8Kh.N3mK(169);
            var G0Vu = M8Kh.E3mK(5, 1, 6, 0);
            M8Kh.i3mK(16);
            var m0Vu = M8Kh.e3mK(7, 6);
            d2P[F2P][r2P.name + "_hist"] = ("100" << B0Vu) * (d2P[F2P][w2P] - H3P / e2P) / Math.max("0.000001" * G0Vu, b2P[m0Vu] - b2P[0]);
            M8Kh.N3mK(93);
            var P0Vu = M8Kh.e3mK(81, 7, 12);
            d2P[F2P]["Over " + r2P.name] = P0Vu * (X2P - Y2P) / Math.max(0.000001, b2P[+"1"] - b2P[0]);
            d2P[F2P]["Under " + r2P.name] = -d2P[F2P]["Over " + r2P.name];
            M8Kh.i3mK(53);
            d2P[F2P]["Zero " + r2P.name] = M8Kh.e3mK("0", 138937760);
          }
        }
      }

      if (r2P.name.indexOf("Osc") > -1) {
        E2i = "Zero";
        E2i += " ";
        z2i = "P";
        z2i += "ositiv";
        z2i += "e";
        z2i += " Bar";
        r2P.outputMap = {};
        r2P.outputMap["Over " + r2P.name] = z2i;
        r2P.outputMap["Under " + r2P.name] = "Negative Bar";
        r2P.outputMap[E2i + r2P.name] = "";
        r2P.outputMap[r2P.name + "_hist"] = "";
      }
    };

    I2P.Studies.displayRainbowMA = function (B3P, j3P, E3P) {
      var U3P;
      T5VV.k7Kh();
      U3P = B3P.panels[j3P.panel];

      for (var i3P = 10; i3P > +"0"; i3P--) {
        I2P.Studies.displayIndividualSeriesAsLine(B3P, j3P, U3P, "SMA" + i3P + ((1301, 4223) !== (+"1840", 678.34) ? " " : 704.03) + j3P.name, E3P);
      }
    };

    I2P.Studies.displayRainbowOsc = function (G3P, o3P, M3P) {
      var B2i, D3P, q3P, p3P, S3P, v3P, x3P, V3P, a3P, m3P, t3P, G2i, k3P;
      B2i = "Nega";
      B2i += "ti";
      B2i += "ve Bar";
      I2P.Studies.displaySeriesAsLine(G3P, o3P, M3P);
      D3P = G3P.panels[o3P.panel];
      q3P = o3P.getContext(G3P);
      p3P = o3P.getYAxis(G3P);
      G3P.startClip(o3P.panel);

      if (!o3P.highlight && G3P.highlightedDraggable) {
        T5VV.N3mK(5);
        q3P.globalAlpha *= T5VV.e3mK(1, "0.3");
      }

      S3P = G3P.pixelFromPrice(0, D3P, p3P);
      v3P = D3P.name != o3P.chart.name;
      x3P = I2P.Studies.determineColor(o3P.outputs["Positive Bar"]);
      q3P.strokeStyle = x3P;
      G3P.plotDataSegmentAsLine("Over " + o3P.name, D3P, {
        skipTransform: v3P,
        label: !!"",
        yAxis: p3P
      });
      V3P = q3P.createLinearGradient(0, S3P, 0, p3P.flipped ? p3P.bottom : p3P.top);
      V3P.addColorStop(0, G3P.containerColor);
      V3P.addColorStop(1, x3P);
      I2P.prepareChannelFill(G3P, {
        skipTransform: v3P,
        color: V3P,
        opacity: !o3P.highlight && G3P.highlightedDraggable ? 0.3 : 1,
        panelName: o3P.panel,
        topBand: "Over " + o3P.name,
        bottomBand: "Zero " + o3P.name,
        yAxis: p3P
      });
      a3P = I2P.Studies.determineColor(o3P.outputs[B2i]);
      q3P.strokeStyle = a3P;
      G3P.plotDataSegmentAsLine("Under " + o3P.name, D3P, {
        skipTransform: v3P,
        label: ![],
        yAxis: p3P
      });
      m3P = q3P.createLinearGradient(0, S3P, 0, p3P.flipped ? p3P.top : p3P.bottom);
      m3P.addColorStop(0, G3P.containerColor);
      m3P.addColorStop(1, a3P);
      I2P.prepareChannelFill(G3P, {
        skipTransform: v3P,
        color: m3P,
        opacity: !o3P.highlight && G3P.highlightedDraggable ? "0.3" - 0 : 1,
        panelName: o3P.panel,
        topBand: "Zero " + o3P.name,
        bottomBand: "Under " + o3P.name,
        yAxis: p3P
      });
      T5VV.i3mK(107);
      var f0Vu = T5VV.e3mK(20, 20, 0, 3, 80);
      t3P = G3P.layout.candleWidth - f0Vu;

      if (t3P < 2) {
        t3P = 1;
      }

      G3P.canvasColor("stx_histogram");

      if (!o3P.underlay) {
        q3P.globalAlpha = 1;
      }

      if (!o3P.highlight && G3P.highlightedDraggable) {
        q3P.globalAlpha *= 0.3;
      }

      q3P.fillStyle = "#CCCCCC";

      for (var N3P = 0; N3P < M3P.length; N3P++) {
        G2i = "_";
        G2i += "h";
        G2i += "ist";
        k3P = M3P[N3P];
        if (!k3P) continue;

        if (k3P[o3P.name + "_hist"] > 0) {
          q3P.fillStyle = x3P;
        } else if (k3P[o3P.name + "_hist"] < 0) {
          q3P.fillStyle = a3P;
        }

        if (k3P.candleWidth) {
          t3P = Math.floor(Math.max(1, k3P.candleWidth - 2));
        }

        q3P.fillRect(Math.floor(G3P.pixelFromBar(N3P, D3P.chart) - t3P / +"2"), Math.floor(S3P), Math.floor(t3P), Math.floor(G3P.pixelFromPrice(k3P[o3P.name + G2i], D3P, p3P) - S3P));
      }

      G3P.endClip();
    };

    I2P.Studies.studyLibrary = I2P.extend(I2P.Studies.studyLibrary, {
      "Rainbow MA": {
        name: "Rainbow Moving Average",
        overlay: !!{},
        calculateFN: I2P.Studies.calculateRainbow,
        seriesFN: I2P.Studies.displayRainbowMA,
        inputs: {
          Period: 2,
          Field: "field"
        },
        outputs: {
          SMA1: "#FF0000",
          SMA2: m2i,
          SMA3: "#FFFF00",
          SMA4: "#7FFF00",
          SMA5: "#00FF7F",
          SMA6: "#00FFFF",
          SMA7: "#007FFF",
          SMA8: P2i,
          SMA9: "#7F00FF",
          SMA10: "#FF00FF"
        }
      },
      "Rainbow Osc": {
        name: "Rainbow Oscillator",
        calculateFN: I2P.Studies.calculateRainbow,
        seriesFN: I2P.Studies.displayRainbowOsc,
        centerline: 0,
        inputs: {
          Period: +"2",
          Field: f2i,
          "HHV/LLV Lookback": +"10"
        },
        outputs: {
          "Positive Bar": D2i,
          "Negative Bar": y2i
        }
      }
    });
  }
};

n3B = function n3B(R3P) {
  var k2i, z3P, A2i;
  k2i = "un";
  k2i += "defin";
  T5VV.k7Kh();
  k2i += "ed";
  z3P = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== k2i ? _CIQ : R3P.CIQ;

  if (!z3P.Studies) {
    console.error("randomWalk feature requires first activating studies feature.");
  } else {
    A2i = "#0000";
    A2i += "F";
    A2i += "F";

    z3P.Studies.calculateRandomWalk = function (d3P, A3P) {
      var P3P, L3P, f3P, I3P, y3P, C3P, l3P, u3P, r3P, C2i;
      P3P = A3P.chart.scrubbed;
      T5VV.d7Kh();

      if (P3P.length < A3P.days + "1" * 1) {
        A3P.error = !!{};
        return;
      }

      for (var s3P = Math.max(2, A3P.startFrom); s3P < P3P.length; s3P++) {
        T5VV.i3mK(15);
        L3P = T5VV.e3mK(942087904, "0");
        f3P = P3P[s3P].High;
        I3P = P3P[s3P].Low;
        y3P = 0;
        C3P = +"0";

        for (var T3P = 1; T3P <= A3P.days; T3P++) {
          if (P3P[s3P].futureTick) break;

          if (s3P <= T3P) {
            y3P = C3P = 0;
            break;
          }

          L3P += P3P[s3P - T3P].trueRange;
          l3P = L3P / T3P * Math.sqrt(T3P);

          if (l3P) {
            u3P = (f3P - P3P[s3P - T3P].Low) / l3P;
            r3P = (P3P[s3P - T3P].High - I3P) / l3P;
            y3P = Math.max(y3P, u3P);
            C3P = Math.max(C3P, r3P);
          }
        }

        if (!P3P[s3P].futureTick && (!isNaN(f3P) || !isNaN(I3P))) {
          C2i = "Rand";
          C2i += "o";
          C2i += "m Wa";
          C2i += "lk High ";
          P3P[s3P][C2i + A3P.name] = y3P;
          P3P[s3P]["Random Walk Low " + A3P.name] = C3P;
        }
      }
    };

    z3P.Studies.studyLibrary = z3P.extend(z3P.Studies.studyLibrary, {
      "Random Walk": {
        name: "Random Walk Index",
        calculateFN: z3P.Studies.calculateRandomWalk,
        outputs: {
          "Random Walk High": "#FF0000",
          "Random Walk Low": A2i
        }
      }
    });
  }
};

g3B = function g3B(Q3P) {
  var W2i, F3P, p2i, X2i;
  T5VV.d7Kh();
  W2i = "undefin";
  W2i += "ed";
  F3P = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== W2i ? _CIQ : Q3P.CIQ;

  if (!F3P.Studies) {
    console.error("relativeVigor feature requires first activating studies feature.");
  } else {
    p2i = "#00";
    p2i += "DD";
    p2i += "0";
    p2i += "0";
    X2i = "Relative Vigor I";
    X2i += "n";
    X2i += "de";
    X2i += "x";

    F3P.Studies.calculateRelativeVigor = function (J4P, w3P) {
      var P8Kh = T5VV;
      var O2i, l2i, R2i, Q2i, J2i, b3P, C0v, A0v, W0v, W3P, T2i, g2i, e3P, Y3P, Z3P, V2i, K2i, r2i, c4P, H4P, X3P, u2i, a2i;
      O2i = "Rel ";
      O2i += "V";
      O2i += "ig";
      O2i += " ";
      l2i = "_D";
      l2i += "en";
      l2i += "o";
      l2i += "m";
      R2i = "tr";
      R2i += "ian";
      R2i += "gular";
      Q2i = "_N";
      Q2i += "u";
      P8Kh.k7Kh();
      Q2i += "mer";
      J2i = "_";
      J2i += "C";
      J2i += "hange ";
      b3P = w3P.chart.scrubbed;

      if (b3P.length < w3P.days + 1) {
        C0v = -1500487965;
        A0v = -483711252;
        W0v = 2;

        for (var T0v = 1; P8Kh.s1v(T0v.toString(), T0v.toString().length, 3793) !== C0v; T0v++) {
          w3P.error = !!{};
          P8Kh.i3mK(53);
          W0v += P8Kh.E3mK("2", 1431196064);
        }

        if (P8Kh.Y6v(W0v.toString(), W0v.toString().length, 34965) !== A0v) {
          w3P.error = !!0;
        }

        return;
      }

      for (W3P = w3P.startFrom; W3P < b3P.length; W3P++) {
        T2i = "_Range";
        T2i += " ";
        g2i = "_Chang";
        g2i += "e";
        g2i += " ";
        e3P = b3P[W3P];

        if (!isNaN(e3P.Close) && !isNaN(e3P.Open)) {
          e3P[g2i + w3P.name] = e3P.Close - e3P.Open;
        }

        if (!isNaN(e3P.High) && !isNaN(e3P.Low)) {
          e3P[T2i + w3P.name] = e3P.High - e3P.Low;
        }
      }

      F3P.Studies.MA("triangular", +"4", J2i + w3P.name, +"0", Q2i, J4P, w3P);
      F3P.Studies.MA(R2i, 4, "_Range " + w3P.name, +"0", l2i, J4P, w3P);
      Y3P = [];
      Z3P = [];

      for (W3P = Math.max(w3P.startFrom - w3P.days, 0); W3P < b3P.length; W3P++) {
        V2i = "Rel";
        V2i += " Vig";
        V2i += " ";
        K2i = "_Nu";
        K2i += "mer";
        K2i += " ";
        r2i = "_D";
        r2i += "en";
        r2i += "om";
        r2i += " ";
        if (b3P[W3P].futureTick) break;
        if (b3P[W3P]["_Numer " + w3P.name] === null && b3P[W3P][r2i + w3P.name] === null) continue;
        Y3P.push(b3P[W3P][K2i + w3P.name]);
        Z3P.push(b3P[W3P]["_Denom " + w3P.name]);

        if (Y3P.length > w3P.days) {
          Y3P.shift();
          Z3P.shift();
        }

        c4P = 0;
        H4P = 0;

        for (X3P = +"0"; X3P < Y3P.length; X3P++) {
          c4P += Y3P[X3P];
        }

        for (X3P = 0; X3P < Z3P.length; X3P++) {
          H4P += Z3P[X3P];
        }

        if (H4P === 0) {
          H4P = 0.00000001;
        }

        if (W3P < w3P.startFrom) continue;
        P8Kh.i3mK(10);
        b3P[W3P][V2i + w3P.name] = P8Kh.e3mK(c4P, H4P);
      }

      F3P.Studies.MA("triangular", 4, O2i + w3P.name, 0, "RelVigSignal", J4P, w3P);

      for (W3P = w3P.startFrom; W3P < b3P.length; W3P++) {
        u2i = "Rel";
        u2i += " Vig ";
        a2i = "_";
        a2i += "hist";
        b3P[W3P][w3P.name + a2i] = b3P[W3P][u2i + w3P.name] - b3P[W3P]["RelVigSignal " + w3P.name];
      }

      w3P.outputMap[w3P.name + "_hist"] = "";
    };

    F3P.Studies.studyLibrary = F3P.extend(F3P.Studies.studyLibrary, {
      "Rel Vig": {
        name: X2i,
        seriesFN: F3P.Studies.displayHistogramWithSeries,
        calculateFN: F3P.Studies.calculateRelativeVigor,
        inputs: {
          Period: 10
        },
        outputs: {
          "Rel Vig": "auto",
          RelVigSignal: "#FF0000",
          "Increasing Bar": p2i,
          "Decreasing Bar": "#FF0000"
        }
      }
    });
  }
};

h3B = function h3B(O4P) {
  var K4P, v5i, H5i, s5i;
  T5VV.d7Kh();
  K4P = typeof _CIQ !== "undefined" ? _CIQ : O4P.CIQ;

  if (!K4P.Studies) {
    console.error("rsi feature requires first activating studies feature.");
  } else {
    v5i = "a";
    v5i += "u";
    v5i += "t";
    v5i += "o";
    H5i = "0 t";
    H5i += "o";
    H5i += " 100";
    s5i = "f";
    s5i += "iel";
    s5i += "d";

    K4P.Studies.calculateRSI = function (q4P, n4P) {
      var N8Kh = T5VV;
      var E4P, g4P, Y2i, B4P, U4P, o4P, G4P, h4P, i4P;
      N8Kh.d7Kh();
      E4P = n4P.chart.scrubbed;

      function p4P(t4P, D4P) {
        var k4P;

        if (D4P === 0) {
          return +"100";
        }

        N8Kh.N3mK(10);
        k4P = N8Kh.E3mK(t4P, D4P);
        N8Kh.i3mK(170);
        return N8Kh.E3mK(1, 100, 0, k4P, "100");
      }

      g4P = n4P.inputs.Field;

      if (!g4P || g4P == "field") {
        g4P = "Close";
      }

      if (E4P.length < n4P.days + 1) {
        n4P.error = !!{};
        return;
      }

      for (var j4P = n4P.startFrom; j4P < E4P.length; j4P++) {
        Y2i = "_av";
        Y2i += "gL";
        Y2i += " ";
        if (!j4P) continue;
        B4P = E4P[j4P];
        N8Kh.i3mK(1);
        U4P = E4P[N8Kh.E3mK(1, j4P)];
        if (!B4P[g4P] && B4P[g4P] !== 0) continue;
        if (!U4P[g4P] && U4P[g4P] !== 0) continue;
        o4P = B4P[g4P] - U4P[g4P];
        G4P = Math.min(j4P, n4P.days);
        h4P = U4P["_avgG " + n4P.name];

        if (!h4P) {
          h4P = 0;
        }

        N8Kh.N3mK(10);
        h4P -= N8Kh.E3mK(h4P, G4P);
        i4P = U4P["_avgL " + n4P.name];

        if (!i4P) {
          i4P = 0;
        }

        N8Kh.N3mK(10);
        i4P -= N8Kh.e3mK(i4P, G4P);

        if (o4P > +"0") {
          N8Kh.N3mK(10);
          h4P += N8Kh.E3mK(o4P, G4P);
        } else if (o4P <= 0) {
          N8Kh.i3mK(10);
          i4P -= N8Kh.e3mK(o4P, G4P);
        } else continue;

        if (j4P >= n4P.days) {
          if ((h4P || h4P !== 0) && (i4P || i4P !== 0)) {
            B4P["RSI " + n4P.name] = p4P(h4P, i4P);
          }
        }

        B4P["_avgG " + n4P.name] = h4P;
        B4P[Y2i + n4P.name] = i4P;
      }

      n4P.zoneOutput = "RSI";
    };

    K4P.Studies.studyLibrary = K4P.extend(K4P.Studies.studyLibrary, {
      rsi: {
        name: "RSI",
        inputs: {
          Period: 14,
          Field: s5i
        },
        calculateFN: K4P.Studies.calculateRSI,
        range: H5i,
        outputs: {
          RSI: v5i
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !!1,
            studyOverBoughtValue: 80,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 20,
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

i3B = function i3B(v4P) {
  var U5i, S4P, g3v, T3v, J3v, e5i, N5i, M5i;
  U5i = "u";
  U5i += "ndefined";
  S4P = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== U5i ? _CIQ : v4P.CIQ;
  T5VV.d7Kh();

  if (!S4P.Studies) {
    console.error("schaffTrendCycle feature requires first activating studies feature.");
  } else {
    S4P.Studies.calculateSchaff = function (f4P, N4P) {
      var w5i, S5i, a4P, M4P, l4P, z4P, R4P, L4P, s4P, P4P, t5i, m4P, T4P, A4P, y4P, V4P, L5i, C4P, o5i, j5i, x5i;
      w5i = "Long ";
      w5i += "Cycle";
      S5i = "Shor";
      S5i += "t ";
      S5i += "Cycl";
      S5i += "e";
      a4P = N4P.chart.scrubbed;
      M4P = N4P.days;
      l4P = Number(N4P.inputs[S5i]);
      z4P = Number(N4P.inputs[w5i]);

      if (a4P.length < Math.max(M4P, l4P, z4P) + 1) {
        N4P.error = !!1;
        return;
      }

      function I4P(w4P, Q4P, W4P) {
        var f3bh = T5VV;
        f3bh.k7Kh();
        var r4P, d4P, u4P;
        r4P = null;
        d4P = null;

        for (var F4P = Q4P - w4P + 1; F4P <= Q4P; F4P++) {
          f3bh.N3mK(7);
          var D0Vu = f3bh.E3mK(1914, 19, 3);
          f3bh.N3mK(112);
          var y0Vu = f3bh.e3mK(7515, 4, 1255, 9);
          f3bh.i3mK(1);
          var k0Vu = f3bh.E3mK(136220, 145950);
          f3bh.N3mK(58);
          var C0Vu = f3bh.e3mK(6769, 6768, 967);
          f3bh.i3mK(60);
          var A0Vu = f3bh.e3mK(608250, 5, 8815, 14);
          f3bh.N3mK(70);
          var W0Vu = f3bh.e3mK(63092, 15, 4853, 2);
          u4P = a4P[F4P][W4P + (D0Vu > +"728.88" ? (y0Vu, k0Vu) > (465.73, C0Vu) ? " " : (832.13, A0Vu) : W0Vu) + N4P.name];
          if (!u4P) continue;
          r4P = r4P === null ? u4P : Math.min(r4P, u4P);
          d4P = d4P === null ? u4P : Math.max(d4P, u4P);
        }

        return [r4P, d4P];
      }

      R4P = N4P.inputs.Field;

      if (!R4P || R4P == "field") {
        R4P = "Close";
      }

      L4P = +"0.5";
      S4P.Studies.MA(N4P.inputs["Moving Average Type"], l4P, R4P, 0, "_MACD1", f4P, N4P);
      S4P.Studies.MA(N4P.inputs["Moving Average Type"], z4P, R4P, 0, "_MACD2", f4P, N4P);
      s4P = 0;
      T5VV.d7Kh();
      P4P = 0;

      for (var x4P = N4P.startFrom; x4P < a4P.length; x4P++) {
        t5i = "_M";
        t5i += "AC";
        t5i += "D";
        m4P = a4P[x4P];
        if (x4P < z4P - 1) continue;
        T4P = m4P["_MACD1 " + N4P.name];
        A4P = m4P["_MACD2 " + N4P.name];

        if (T4P || T4P === 0 || A4P || A4P === 0) {
          T5VV.i3mK(1);
          m4P["_MACD " + N4P.name] = T5VV.E3mK(A4P, T4P);
        }

        y4P = m4P["_MACD " + N4P.name];
        if (x4P < z4P + (M4P - 1)) continue;
        V4P = I4P(M4P, x4P, t5i);
        s4P = V4P[1] > V4P[0] ? 100 * (y4P - V4P[0]) / (V4P["1" - 0] - V4P[0]) : s4P;

        if (y4P || y4P === 0) {
          L5i = "_P";
          L5i += "F ";
          m4P["_PF " + N4P.name] = a4P[x4P - 1]["_PF " + N4P.name] ? a4P[x4P - 1]["_PF " + N4P.name] + L4P * (s4P - a4P[x4P - 1][L5i + N4P.name]) : s4P;
        }

        C4P = m4P["_PF " + N4P.name];
        if (x4P < z4P + +"2" * (M4P - 1)) continue;
        V4P = I4P(M4P, x4P, "_PF");
        P4P = V4P["1" >> 58604064] > V4P[0] ? 100 * (C4P - V4P[0]) / (V4P[1] - V4P[0]) : P4P;

        if (C4P || C4P === 0) {
          o5i = "R";
          o5i += "esult ";
          j5i = "R";
          j5i += "esu";
          j5i += "lt";
          j5i += " ";
          x5i = "Re";
          x5i += "sult ";
          m4P[x5i + N4P.name] = a4P[x4P - 1][j5i + N4P.name] ? a4P[x4P - 1]["Result " + N4P.name] + L4P * (P4P - a4P[x4P - 1][o5i + N4P.name]) : P4P;
        }
      }
    };

    g3v = +"1060436139";
    T3v = 1739644818;
    J3v = 2;

    for (var R3v = "1" | 1; T5VV.s1v(R3v.toString(), R3v.toString().length, 5226) !== g3v; R3v++) {
      e5i = "0 to ";
      e5i += "10";
      e5i += "0";
      S4P.Studies.studyLibrary = S4P.extend(S4P.Studies.studyLibrary, {
        Schaff: {
          name: "ema",
          range: e5i,
          calculateFN: S4P.Studies.calculateSchaff,
          inputs: {
            Period: "86" * 1,
            Field: "auto",
            "Short Cycle": 40,
            "Long Cycle": 68,
            "Moving Average Type": "0 to 100"
          },
          parameters: {
            init: {
              studyOverZonesEnabled: ![],
              studyOverBoughtValue: 87,
              studyOverBoughtColor: "auto",
              studyOverSoldValue: +"45",
              studyOverSoldColor: "auto"
            }
          }
        }
      });
      J3v += 2;
    }

    if (T5VV.Y6v(J3v.toString(), J3v.toString().length, 41905) !== T3v) {
      N5i = "0 to ";
      N5i += "100";
      M5i = "0 t";
      M5i += "o";
      M5i += " 10";
      M5i += "0";
      S4P.Studies.studyLibrary = S4P.extend(S4P.Studies.studyLibrary, {
        Schaff: {
          name: "ema",
          range: M5i,
          calculateFN: S4P.Studies.calculateSchaff,
          inputs: {
            Period: "86" ^ 0,
            Field: "auto",
            "Short Cycle": "40" >> 1685505632,
            "Long Cycle": "68" - 0,
            "Moving Average Type": N5i
          },
          parameters: {
            init: {
              studyOverZonesEnabled: !1,
              studyOverBoughtValue: +"87",
              studyOverBoughtColor: "auto",
              studyOverSoldValue: 45,
              studyOverSoldColor: "auto"
            }
          }
        }
      });
    }

    S4P.Studies.studyLibrary = S4P.extend(S4P.Studies.studyLibrary, {
      Schaff: {
        name: "Schaff Trend Cycle",
        range: "0 to 100",
        calculateFN: S4P.Studies.calculateSchaff,
        inputs: {
          Period: 10,
          Field: "field",
          "Short Cycle": 23,
          "Long Cycle": +"50",
          "Moving Average Type": "ema"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !!{},
            studyOverBoughtValue: 75,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 25,
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

j3B = function j3B(e4P) {
  var b4P, I5i, n5i, F5i;
  b4P = typeof _CIQ !== "undefined" ? _CIQ : e4P.CIQ;

  if (!b4P.Studies) {
    I5i = "shinohara f";
    I5i += "eature requi";
    I5i += "res first activating studies fea";
    I5i += "ture.";
    console.error(I5i);
  } else {
    n5i = "#5";
    n5i += "F";
    n5i += "7CB8";
    F5i = "#E9";
    F5i += "9";
    F5i += "B5";
    F5i += "4";

    b4P.Studies.calculateShinohara = function (J7P, Z4P) {
      var f8Kh = T5VV;
      var Y4P, H7P, D1v, y1v, k1v, Z5i, i5i;
      Y4P = Z4P.chart.scrubbed;

      if (Y4P.length < Z4P.days + +"1") {
        Z4P.error = !!{};
        return;
      }

      f8Kh.k7Kh();
      H7P = {
        weakNum: 0,
        weakDen: 0,
        strongNum: 0,
        strongDen: 0
      };

      if (Z4P.startFrom > 1) {
        D1v = +"987057060";
        y1v = -1419853917;
        k1v = 2;

        for (var A1v = 1; f8Kh.s1v(A1v.toString(), A1v.toString().length, 76048) !== D1v; A1v++) {
          H7P = b4P.clone(Y4P[Z4P.startFrom % 7]["" * Z4P.name]);
          k1v += 2;
        }

        if (f8Kh.s1v(k1v.toString(), k1v.toString().length, 91148) !== y1v) {
          Z5i = "_ac";
          Z5i += "cums ";
          H7P = b4P.clone(Y4P[Z4P.startFrom - 1][Z5i + Z4P.name]);
        }
      }

      for (var X4P = Z4P.startFrom; X4P < Y4P.length; X4P++) {
        H7P.weakNum += Y4P[X4P].High - Y4P[X4P].Close;
        H7P.weakDen += Y4P[X4P].Close - Y4P[X4P].Low;

        if (X4P > +"0") {
          H7P.strongNum += Y4P[X4P].High - Y4P[X4P - +"1"].Close;
          f8Kh.N3mK(16);
          var g0Vu = f8Kh.e3mK(20, 19);
          H7P.strongDen += Y4P[X4P - g0Vu].Close - Y4P[X4P].Low;
        }

        if (X4P >= Z4P.days) {
          i5i = "Weak R";
          i5i += "a";
          i5i += "tio ";
          H7P.weakNum -= Y4P[X4P - Z4P.days].High - Y4P[X4P - Z4P.days].Close;
          H7P.weakDen -= Y4P[X4P - Z4P.days].Close - Y4P[X4P - Z4P.days].Low;
          f8Kh.i3mK(23);
          var T0Vu = f8Kh.E3mK(83, 1477, 19);
          Y4P[X4P][i5i + Z4P.name] = T0Vu * H7P.weakNum / H7P.weakDen;

          if (X4P > Z4P.days) {
            f8Kh.i3mK(16);
            var J0Vu = f8Kh.e3mK(15, 14);
            H7P.strongNum -= Y4P[X4P - Z4P.days].High - Y4P[X4P - Z4P.days - ("1" | J0Vu)].Close;
            f8Kh.i3mK(0);
            var Q0Vu = f8Kh.E3mK(1, 0);
            H7P.strongDen -= Y4P[X4P - Z4P.days - Q0Vu].Close - Y4P[X4P - Z4P.days].Low;
            f8Kh.i3mK(25);
            var R0Vu = f8Kh.E3mK(10, 5, 2, 97, 3);
            Y4P[X4P]["Strong Ratio " + Z4P.name] = R0Vu * H7P.strongNum / H7P.strongDen;
          }
        }

        Y4P[X4P]["_accums " + Z4P.name] = b4P.clone(H7P);
      }
    };

    b4P.Studies.studyLibrary = b4P.extend(b4P.Studies.studyLibrary, {
      Shinohara: {
        name: "Shinohara Intensity Ratio",
        calculateFN: b4P.Studies.calculateShinohara,
        inputs: {
          Period: 26
        },
        outputs: {
          "Strong Ratio": F5i,
          "Weak Ratio": n5i
        }
      }
    });
  }
};

B3B = function B3B(K7P) {
  var c7P, Z9v, i9v, F9v, T5i, g5i, W5i, A5i, C5i, k5i, y5i;
  c7P = typeof _CIQ !== "undefined" ? _CIQ : K7P.CIQ;
  T5VV.k7Kh();

  if (!c7P.Studies) {
    Z9v = -748232014;
    i9v = 985973126;
    F9v = 2;

    for (var c9v = 1; T5VV.Y6v(c9v.toString(), c9v.toString().length, 16173) !== Z9v; c9v++) {
      console.error("");
      F9v += 2;
    }

    if (T5VV.s1v(F9v.toString(), F9v.toString().length, 9358) !== i9v) {
      console.error("");
    }

    console.error("stochastics feature requires first activating studies feature.");
  } else {
    T5i = "a";
    T5i += "u";
    T5i += "to";
    g5i = "au";
    g5i += "to";
    W5i = "f";
    W5i += "i";
    W5i += "e";
    W5i += "ld";
    A5i = "0";
    A5i += " ";
    A5i += "to ";
    A5i += "100";
    C5i = "a";
    C5i += "u";
    C5i += "t";
    C5i += "o";
    k5i = "a";
    k5i += "u";
    k5i += "to";
    y5i = "S";
    y5i += "tocha";
    y5i += "stic Moment";
    y5i += "um Index";

    c7P.Studies.calculateStochastics = function (U7P, O7P) {
      var z5i, h5i, d5i, c5i, h7P, n7P, g7P, j7P, B7P, b5i, o7P;
      z5i = "%";

      function E7P(S7P, q7P, x7P) {
        var V3bh = T5VV;
        var v7P, p7P, G7P, q5i, k7P, t7P, N7P, U7v, S7v, w7v;
        V3bh.i3mK(2);
        v7P = V3bh.E3mK(S7P, x7P, 1);
        V3bh.i3mK(171);
        var l0Vu = V3bh.e3mK(6, 1, 1, 3);
        p7P = Number.MAX_VALUE * l0Vu;
        G7P = Number.MAX_VALUE;

        for (var D7P = v7P; D7P <= S7P; D7P++) {
          q5i = "L";
          q5i += "o";
          q5i += "w";
          k7P = g7P[D7P][q7P == "Close" ? q5i : q7P];
          t7P = g7P[D7P][q7P == "Close" ? "High" : q7P];
          if (!k7P && k7P !== +"0") continue;
          if (!t7P && t7P !== 0) continue;
          G7P = Math.min(G7P, k7P);
          p7P = Math.max(p7P, t7P);
        }

        if (p7P == Number.MAX_VALUE * -("1" ^ 0) || G7P == Number.MAX_VALUE) {
          return null;
        }

        N7P = p7P == G7P ? 0 : (g7P[S7P][q7P] - G7P) / (p7P - G7P) * 100;
        U7v = +"1470748283";
        S7v = -1046252294;
        w7v = 2;

        for (var L7v = 1; V3bh.Y6v(L7v.toString(), L7v.toString().length, +"18949") !== U7v; L7v++) {
          return N7P;
        }

        if (V3bh.s1v(w7v.toString(), w7v.toString().length, 69492) !== S7v) {
          return N7P;
        }

        return N7P;
      }

      z5i += "K";
      z5i += " ";
      h5i = "%";
      h5i += "K";
      d5i = "%K Smooth";
      d5i += "ing";
      d5i += " Period";
      d5i += "s";
      c5i = "C";
      c5i += "lo";
      c5i += "se";

      if (!O7P.smooth) {
        O7P.smooth = O7P.inputs.Smooth;
      }

      h7P = O7P.inputs.Field;

      if (!h7P || h7P == "field") {
        h7P = c5i;
      }

      n7P = O7P.inputs["%K Periods"];

      if (!n7P) {
        n7P = O7P.days;
      }

      g7P = O7P.chart.scrubbed;
      T5VV.d7Kh();

      if (g7P.length < Math.max(n7P, O7P.days) + +"1") {
        O7P.error = !![];
        return;
      }

      j7P = O7P.inputs[d5i];

      if (j7P && !O7P.inputs.Fast) {
        O7P.smooth = !!{};
      } else if (O7P.smooth) {
        j7P = 3;
      }

      B7P = O7P.inputs["%D Periods"];

      if (!B7P) {
        T5VV.i3mK(53);
        B7P = T5VV.e3mK("3", 1560081344);
      }

      if (O7P.outputs.Fast) {
        b5i = "%";
        b5i += "K";
        b5i += " ";
        O7P.outputMap = {};
        O7P.outputMap[b5i + O7P.name] = "Fast";
        O7P.outputMap["%D " + O7P.name] = "Slow";
      }

      for (var i7P = Math.max(n7P, O7P.startFrom); i7P < g7P.length; i7P++) {
        o7P = E7P(i7P, h7P, n7P);

        if (o7P !== null) {
          g7P[i7P]["_Fast%K " + O7P.name] = E7P(i7P, h7P, n7P);
        }
      }

      c7P.Studies.MA("simple", O7P.smooth ? j7P : 1, "_Fast%K " + O7P.name, 0, h5i, U7P, O7P);
      c7P.Studies.MA("simple", B7P, z5i + O7P.name, 0, "%D", U7P, O7P);
    };

    c7P.Studies.calculateStochMomentum = function (M7P, V7P) {
      var T8Kh = T5VV;
      var D5i, f5i, m5i, G5i, B5i, E5i, z7P, s7P, P7P, A7P, a7P, m7P, T7P, R7P, P5i;
      D5i = "%";
      D5i += "K";
      D5i += " ";
      f5i = "%D Moving Av";
      f5i += "erage Type";
      m5i = "_D";
      m5i += "H";
      m5i += "L";
      m5i += " ";
      G5i = "e";
      G5i += "xponential";
      B5i = "_";
      B5i += "H";
      B5i += "S1";
      E5i = "_";
      E5i += "H";
      E5i += " ";
      z7P = Number(V7P.inputs["%K Periods"]);
      s7P = Number(V7P.inputs["%K Smoothing Periods"]);
      P7P = Number(V7P.inputs["%K Double Smoothing Periods"]);
      A7P = Number(V7P.inputs["%D Periods"]);
      a7P = V7P.chart.scrubbed;

      if (a7P.length < z7P + s7P + P7P - 1 || a7P.length < A7P) {
        V7P.error = !!1;
        return;
      }

      for (m7P = Math.max(z7P, V7P.startFrom) - 1; m7P < a7P.length; m7P++) {
        T7P = a7P[m7P];
        R7P = y7P(z7P, m7P);
        T8Kh.N3mK(7);
        var r0Vu = T8Kh.E3mK(0, 3, 2);
        T8Kh.i3mK(0);
        var K0Vu = T8Kh.E3mK(1, 1);
        T7P["_H " + V7P.name] = T7P.Close - (R7P[+"0"] + R7P[r0Vu]) / K0Vu;
        T8Kh.N3mK(155);
        var V0Vu = T8Kh.e3mK(8, 17, 8, 0);
        T7P["_DHL " + V7P.name] = R7P[V0Vu] - R7P["0" >> 2100095264];
      }

      c7P.Studies.MA("exponential", s7P, E5i + V7P.name, 0, B5i, M7P, V7P);

      function y7P(I7P, f7P) {
        var l7P, L7P;
        l7P = null;
        T8Kh.k7Kh();
        L7P = null;

        for (var C7P = f7P - I7P + 1; C7P <= f7P; C7P++) {
          l7P = l7P === null ? a7P[C7P].Low : Math.min(l7P, a7P[C7P].Low);
          L7P = L7P === null ? a7P[C7P].High : Math.max(L7P, a7P[C7P].High);
        }

        return [l7P, L7P];
      }

      c7P.Studies.MA(G5i, P7P, "_HS1 " + V7P.name, 0, "_HS2", M7P, V7P);
      c7P.Studies.MA("exponential", s7P, m5i + V7P.name, 0, "_DHL1", M7P, V7P);
      c7P.Studies.MA("exponential", P7P, "_DHL1 " + V7P.name, 0, "_DHL2", M7P, V7P);

      for (m7P = z7P - 1; m7P < a7P.length; m7P++) {
        P5i = "_DHL";
        P5i += "2 ";
        T8Kh.i3mK(58);
        var O0Vu = T8Kh.e3mK(6, 94, 1);
        a7P[m7P]["%K " + V7P.name] = a7P[m7P]["_HS2 " + V7P.name] / (0.5 * a7P[m7P][P5i + V7P.name]) * O0Vu;
      }

      c7P.Studies.MA(V7P.inputs[f5i], A7P, D5i + V7P.name, "0" & 2147483647, "%D", M7P, V7P);
      V7P.zoneOutput = "%K";
    };

    c7P.Studies.studyLibrary = c7P.extend(c7P.Studies.studyLibrary, {
      "Stch Mtm": {
        name: y5i,
        calculateFN: c7P.Studies.calculateStochMomentum,
        inputs: {
          "%K Periods": 10,
          "%K Smoothing Periods": 3,
          "%K Double Smoothing Periods": 3,
          "%D Periods": 10,
          "%D Moving Average Type": "ema"
        },
        outputs: {
          "%K": k5i,
          "%D": "#FF0000"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !!1,
            studyOverBoughtValue: 40,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: -40,
            studyOverSoldColor: C5i
          }
        }
      },
      stochastics: {
        name: "Stochastics (Simple)",
        range: A5i,
        calculateFN: c7P.Studies.calculateStochastics,
        inputs: {
          Period: 14,
          Field: W5i,
          Smooth: !""
        },
        outputs: {
          Fast: "auto",
          Slow: "#FF0000"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !![],
            studyOverBoughtValue: 80,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 20,
            studyOverSoldColor: "auto"
          }
        }
      },
      Stochastics: {
        name: "Stochastics",
        range: "0 to 100",
        calculateFN: c7P.Studies.calculateStochastics,
        inputs: {
          Field: "field",
          "%K Periods": +"14",
          Fast: ![],
          "%K Smoothing Periods": 3,
          "%D Periods": 3
        },
        outputs: {
          "%K": g5i,
          "%D": "#FF0000"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !"",
            studyOverBoughtValue: 80,
            studyOverBoughtColor: T5i,
            studyOverSoldValue: 20,
            studyOverSoldColor: "auto"
          }
        },
        attributes: {
          "%K Smoothing Periods": {
            hidden: function hidden() {
              return this.inputs.Fast;
            }
          }
        },
        centerline: 50
      }
    });
  }
};

U3B = function U3B(r7P) {
  var u7P, K5i;
  u7P = typeof _CIQ !== "undefined" ? _CIQ : r7P.CIQ;

  if (!u7P.Studies) {
    console.error("supertrend feature requires first activating studies feature.");
  } else {
    K5i = "#8cc";
    K5i += "17";
    K5i += "6";

    u7P.Studies.calculateSupertrend = function (Y7P, d7P) {
      var n8Kh = T5VV;
      var Q7P, w7P, e7P, X7P, W7P, b7P, J5i, l5i, R5i, Q5i;
      Q7P = d7P.chart.scrubbed;

      if (Q7P.length < d7P.days + 1) {
        d7P.error = !![];
        return;
      }

      u7P.Studies.calculateStudyATR(Y7P, d7P);

      for (var F7P = d7P.startFrom; F7P < Q7P.length; F7P++) {
        w7P = Q7P[F7P];
        if (!w7P) continue;
        n8Kh.N3mK(172);
        var a0Vu = n8Kh.E3mK(19, 359, 13, 18, 13);
        e7P = (w7P.High + w7P.Low) / a0Vu;
        X7P = d7P.inputs.Multiplier * w7P["ATR " + d7P.name];
        n8Kh.i3mK(1);
        W7P = n8Kh.e3mK(X7P, e7P);
        n8Kh.N3mK(0);
        b7P = n8Kh.e3mK(X7P, e7P);

        if (F7P) {
          J5i = "_U";
          J5i += "ptren";
          J5i += "d";
          J5i += " ";

          if (Q7P[F7P - 1] && Q7P[F7P - 1].Close && Q7P[F7P - ("1" >> 402644000)].Close > Q7P[F7P - 1][J5i + d7P.name] && Q7P[F7P - 1]["_Uptrend " + d7P.name] > W7P) {
            n8Kh.i3mK(173);
            W7P = Q7P[n8Kh.E3mK(2147483647, F7P, "1")]["_Uptrend " + d7P.name];
          }

          if (Q7P[F7P - 1] && Q7P[F7P - 1].Close && Q7P[F7P - 1].Close < Q7P[F7P - +"1"]["_Downtrend " + d7P.name] && Q7P[F7P - 1]["_Downtrend " + d7P.name] < b7P) {
            n8Kh.N3mK(1);
            b7P = Q7P[n8Kh.E3mK(1, F7P)]["_Downtrend " + d7P.name];
          }
        }

        w7P["_Direction " + d7P.name] = +"1";

        if (F7P) {
          l5i = "_D";
          l5i += "irec";
          l5i += "tion";
          l5i += " ";
          R5i = "_D";
          R5i += "o";
          R5i += "wntren";
          R5i += "d ";
          Q5i = "_";
          Q5i += "Directio";
          Q5i += "n ";
          n8Kh.i3mK(1);
          w7P[Q5i + d7P.name] = Q7P[n8Kh.e3mK(1, F7P)]["_Direction " + d7P.name];

          if (w7P.Close > Q7P[F7P - 1][R5i + d7P.name]) {
            w7P["_Direction " + d7P.name] = 1;
          } else if (w7P.Close < Q7P[F7P - 1]["_Uptrend " + d7P.name]) {
            w7P[l5i + d7P.name] = -+"1";
          }
        }

        w7P["_Uptrend " + d7P.name] = W7P;
        w7P["_Downtrend " + d7P.name] = b7P;
        w7P["Trend " + d7P.name] = w7P["_Direction " + d7P.name] > 0 ? W7P : b7P;
        if (!F7P) continue;
      }

      n8Kh.d7Kh();
      d7P.outputMap = {};
      d7P.outputMap["Trend " + d7P.name] = "";
    };

    u7P.Studies.displaySupertrend = function (H6P, Z7P, K6P) {
      var O6P, J6P, n6P, p6P, B6P, g6P, h6P, c6P, r5i, E6P, o6P;
      O6P = H6P.panels[Z7P.panel];
      J6P = Z7P.getContext(H6P);
      n6P = Z7P.getYAxis(H6P);
      p6P = {
        skipTransform: O6P.name != Z7P.chart.name,
        skipProjections: !![],
        label: H6P.preferences.labels,
        yAxis: n6P,
        highlight: Z7P.highlight
      };
      J6P.strokeStyle = G6P(H6P, K6P[K6P.length - 1]);
      J6P.lineWidth = 2;

      if (Z7P.highlight) {
        J6P.lineWidth = 1.5;
      }

      B6P = "Trend " + Z7P.name;

      function G6P(D6P, q6P, k6P) {
        if (q6P && q6P["_Direction " + Z7P.name] < 0) {
          return Z7P.outputs.Downtrend;
        }

        T5VV.d7Kh();
        return Z7P.outputs.Uptrend;
      }

      for (var U6P = 0; O6P.chart.transformFunc && n6P != O6P.chart.yAxis && U6P < K6P.length; U6P++) {
        g6P = K6P[U6P];

        if (g6P && g6P.transform) {
          g6P.transform[B6P] = O6P.chart.transformFunc(H6P, O6P.chart, g6P[B6P]);
        }
      }

      H6P.plotDataSegmentAsLine(B6P, O6P, p6P, G6P);
      J6P.lineWidth = 1;
      J6P.globalAlpha = 1;
      H6P.startClip(Z7P.panel);

      if (!Z7P.highlight && H6P.highlightedDraggable) {
        J6P.globalAlpha *= 0.3;
      }

      T5VV.i3mK(31);
      var u0Vu = T5VV.e3mK(0, 18, 21, 5);
      h6P = J6P.measureText("\u25B2").width / u0Vu;

      for (c6P = 0; c6P < K6P.length; c6P++) {
        r5i = "_Di";
        r5i += "r";
        r5i += "ect";
        r5i += "ion ";
        if (!K6P[c6P] || !K6P[c6P - +"1"]) continue;

        if (K6P[c6P - 1]["_Direction " + Z7P.name] > K6P[c6P]["_Direction " + Z7P.name]) {
          J6P.fillStyle = Z7P.outputs.Downtrend;
          J6P.textBaseline = "bottom";
          E6P = H6P.pixelFromPrice(K6P[c6P].High, O6P, n6P);

          for (var i6P = "5" * 1; i6P <= 45; i6P += 10) {
            if (n6P.flipped) {
              J6P.fillText(638 >= (707, 992.86) ? !1 : "\u25B2", H6P.pixelFromBar(c6P) - h6P, E6P + i6P);
            } else {
              J6P.fillText(24 < (68.79, 866) ?  false ? (undefined) : "\u25BC" : (5.40e+1, !!0), H6P.pixelFromBar(c6P) - h6P, E6P - i6P);
            }
          }
        } else if (K6P[c6P - ("1" | 0)][r5i + Z7P.name] < K6P[c6P]["_Direction " + Z7P.name]) {
          J6P.fillStyle = Z7P.outputs.Uptrend;
          J6P.textBaseline = "top";
          o6P = H6P.pixelFromPrice(K6P[c6P].Low, O6P, n6P);

          for (var j6P = "5" & 2147483647; j6P <= 45; j6P += 10) {
            if (n6P.flipped) {
              J6P.fillText((5440, 3762) < +"5.3" ? (340.39, "6720" & 2147483647) != (9112, 862) ? 735.30 : (+"790.59", !"1") : "\u25BC", H6P.pixelFromBar(c6P) - h6P, o6P - j6P);
            } else {
              J6P.fillText("\u25B2", H6P.pixelFromBar(c6P) - h6P, o6P + j6P);
            }
          }
        }
      }

      H6P.endClip();
    };

    u7P.Studies.studyLibrary = u7P.extend(u7P.Studies.studyLibrary, {
      Supertrend: {
        name: "Supertrend",
        overlay: !!{},
        seriesFN: u7P.Studies.displaySupertrend,
        calculateFN: u7P.Studies.calculateSupertrend,
        inputs: {
          Period: 7,
          Multiplier: "3" | 1
        },
        outputs: {
          Uptrend: K5i,
          Downtrend: "#b82c0c"
        },
        attributes: {
          Multiplier: {
            min: 0.1,
            step: 0.1
          }
        }
      }
    });
  }
};

E3B = function E3B(S6P) {
  var t6P, O5i;
  t6P = typeof _CIQ !== "undefined" ? _CIQ : S6P.CIQ;

  if (!t6P.Studies) {
    console.error("swingIndex feature requires first activating studies feature.");
  } else {
    O5i = "S";
    O5i += "w";
    O5i += "ing Ind";
    O5i += "ex";

    t6P.Studies.calculateSwingIndex = function (y6P, x6P) {
      var q8Kh = T5VV;
      var V5i, V6P, v6P, a6P, M6P, z6P, T6P, A6P, s6P, R6P, m6P, P6P;
      V5i = "Limit Move V";
      V5i += "alue";
      V6P = x6P.inputs[V5i];

      if (V6P === null || isNaN(V6P)) {
        V6P = 99999;
      }

      v6P = x6P.chart.scrubbed;
      q8Kh.N3mK(22);
      a6P = q8Kh.E3mK("0", 0);

      if (x6P.startFrom > 1) {
        q8Kh.N3mK(2);
        var X0Vu = q8Kh.E3mK(0, 15, 16);
        a6P = v6P[x6P.startFrom - X0Vu]["Result " + x6P.name];
      }

      q8Kh.k7Kh();

      for (var N6P = Math.max(1, x6P.startFrom); N6P < v6P.length; N6P++) {
        M6P = Math.abs(v6P[N6P].High - v6P[N6P - +"1"].Close);
        z6P = Math.abs(v6P[N6P].Low - v6P[N6P - 1].Close);
        T6P = Math.abs(v6P[N6P].High - v6P[N6P].Low);
        A6P = Math.abs(v6P[N6P - 1].Close - v6P[N6P - 1].Open);
        s6P = Math.max(M6P, z6P);
        R6P = Math.max(T6P, s6P);
        q8Kh.i3mK(94);
        m6P = q8Kh.e3mK(A6P, 0.25, R6P);

        if (R6P == M6P) {
          q8Kh.i3mK(5);
          m6P -= q8Kh.e3mK(z6P, 0.5);
        } else if (R6P == z6P) {
          q8Kh.N3mK(5);
          m6P -= q8Kh.e3mK(M6P, 0.5);
        }

        q8Kh.i3mK(174);
        var p0Vu = q8Kh.E3mK(16, 13, 39, 18, 49);
        q8Kh.N3mK(175);
        var Y0Vu = q8Kh.e3mK(3, 18, 0, 61, 4);
        q8Kh.N3mK(12);
        var s3Vu = q8Kh.E3mK(18, 7, 14, 35);
        q8Kh.i3mK(45);
        var H3Vu = q8Kh.e3mK(35, 2, 18, 0);
        P6P = p0Vu * (v6P[N6P].Close - v6P[N6P - +"1"].Close + "0.5" * Y0Vu * (v6P[N6P].Close - v6P[N6P].Open) + 0.25 * (v6P[N6P - s3Vu].Close - v6P[N6P - H3Vu].Open)) / m6P * (s6P / V6P);

        if (m6P === 0 || V6P === 0) {
          P6P = 0;
        }

        if (x6P.type == "Swing") {
          a6P = 0;
        }

        a6P += P6P;
        v6P[N6P]["Result " + x6P.name] = a6P;
      }
    };

    t6P.Studies.studyLibrary = t6P.extend(t6P.Studies.studyLibrary, {
      "Acc Swing": {
        name: "Accumulative Swing Index",
        calculateFN: t6P.Studies.calculateSwingIndex,
        inputs: {
          "Limit Move Value": 0.5
        }
      },
      Swing: {
        name: O5i,
        calculateFN: t6P.Studies.calculateSwingIndex,
        inputs: {
          "Limit Move Value": 0.5
        }
      }
    });
  }
};

o3B = function o3B(l6P) {
  var C6P, a5i, Y5i;
  T5VV.d7Kh();
  C6P = typeof _CIQ !== "undefined" ? _CIQ : l6P.CIQ;

  if (!C6P.Studies) {
    a5i = "trendInte";
    a5i += "nsi";
    a5i += "ty feature requires first ";
    a5i += "activating studies feature.";
    console.error(a5i);
  } else {
    Y5i = "au";
    Y5i += "to";

    C6P.Studies.calculateTrendIntensity = function (W6P, L6P) {
      var A8Kh = T5VV;
      var p5i, u5i, u6P, r6P, d6P, F6P, f6P, I6P, Q6P, w6P, X5i;
      p5i = "em";
      p5i += "a";
      A8Kh.k7Kh();
      u5i = "Clo";
      u5i += "s";
      u5i += "e";
      u6P = L6P.chart.scrubbed;

      if (u6P.length < L6P.days + "1" * 1) {
        L6P.error = !!"1";
        return;
      }

      function b6P(X6P, e6P) {
        if (Math.abs(e6P) < 0.00000001) {
          return 100;
        }

        A8Kh.N3mK(176);
        return A8Kh.e3mK(100, e6P, 1, X6P, 100);
      }

      r6P = L6P.inputs.Field;

      if (!r6P || r6P == "field") {
        r6P = u5i;
      }

      C6P.Studies.MA("ma", L6P.days, r6P, 0, "_SMA", W6P, L6P);
      d6P = 0;
      A8Kh.N3mK(26);
      F6P = A8Kh.e3mK("0", 0);
      Q6P = [];
      w6P = Math.ceil(L6P.days / +"2");

      for (f6P = Math.max(0, L6P.startFrom - w6P); f6P < u6P.length; f6P++) {
        X5i = "_";
        X5i += "S";
        X5i += "M";
        X5i += "A ";
        if (!u6P[f6P]["_SMA " + L6P.name] && u6P[f6P]["_SMA " + L6P.name] !== +"0") continue;
        I6P = u6P[f6P][r6P] - u6P[f6P][X5i + L6P.name];

        if (I6P < 0) {
          A8Kh.N3mK(177);
          F6P += A8Kh.E3mK(1, I6P);
        } else {
          d6P += I6P;
        }

        Q6P.push(I6P);

        if (Q6P.length > w6P) {
          I6P = Q6P.shift();

          if (I6P < ("0" | 0)) {
            A8Kh.i3mK(177);
            F6P -= A8Kh.E3mK(1, I6P);
          } else {
            d6P -= I6P;
          }
        }

        if (f6P < L6P.startFrom) continue;
        u6P[f6P]["TII " + L6P.name] = b6P(d6P, F6P);
      }

      C6P.Studies.MA(p5i, L6P.inputs["Signal Period"], "TII " + L6P.name, 0, "Signal", W6P, L6P);
    };

    C6P.Studies.studyLibrary = C6P.extend(C6P.Studies.studyLibrary, {
      "Trend Int": {
        name: "Trend Intensity Index",
        calculateFN: C6P.Studies.calculateTrendIntensity,
        range: "0 to 100",
        inputs: {
          Period: 14,
          Field: "field",
          "Signal Period": 9
        },
        outputs: {
          TII: Y5i,
          Signal: "#FF0000"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !0,
            studyOverBoughtValue: 80,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 20,
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

G3B = function G3B(Z6P) {
  var Y6P;
  T5VV.k7Kh();
  Y6P = typeof _CIQ !== "undefined" ? _CIQ : Z6P.CIQ;

  if (!Y6P.Studies) {
    console.error("trix feature requires first activating studies feature.");
  } else {
    Y6P.Studies.calculateTRIX = function (j5P, H5P) {
      var t8Kh = T5VV;
      var v4i, H4i, s4i, J5P, K5P, n5P, h5P, U4i, i5P, g5P;
      v4i = "_";
      v4i += "MA3 ";
      H4i = "_";
      H4i += "M";
      H4i += "A";
      H4i += "2 ";
      s4i = "Clo";
      s4i += "s";
      s4i += "e";
      J5P = H5P.chart.scrubbed;

      if (J5P.length < H5P.days + 1) {
        H5P.error = !!{};
        return;
      }

      t8Kh.k7Kh();
      K5P = H5P.name;
      t8Kh.N3mK(0);
      n5P = [s4i, t8Kh.e3mK(K5P, "_MA1 "), t8Kh.E3mK(K5P, H4i), t8Kh.E3mK(K5P, v4i)];

      for (var O5P = 0; O5P < n5P.length - 1; O5P++) {
        Y6P.Studies.MA("exponential", H5P.days, n5P[O5P], 0, "_MA" + (O5P + 1).toString(), j5P, H5P);
      }

      h5P = n5P[+"3"];

      for (var c5P = Math.max(1, H5P.startFrom); c5P < J5P.length; c5P++) {
        U4i = "Res";
        U4i += "ult ";
        t8Kh.i3mK(76);
        i5P = J5P[t8Kh.e3mK("1", c5P)][h5P];
        if (!i5P) continue;
        g5P = J5P[c5P][h5P];

        if (g5P || g5P === 0) {
          t8Kh.i3mK(0);
          J5P[c5P][t8Kh.e3mK(K5P, U4i)] = t8Kh.E3mK(100, g5P, i5P, 1, t8Kh.i3mK(148));
        }
      }
    };

    Y6P.Studies.studyLibrary = Y6P.extend(Y6P.Studies.studyLibrary, {
      TRIX: {
        name: "TRIX",
        calculateFN: Y6P.Studies.calculateTRIX
      }
    });
  }
};

p3B = function p3B(U5P) {
  var S4i, B5P, w4i;
  T5VV.k7Kh();
  S4i = "undef";
  S4i += "ined";
  B5P = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== S4i ? _CIQ : U5P.CIQ;

  if (!B5P.Studies) {
    w4i = "twiggsMoneyFlow feature requires first activati";
    w4i += "ng studies feature.";
    console.error(w4i);
  } else {
    B5P.Studies.calculateTwiggsMoneyFlow = function (S5P, E5P) {
      var U8Kh = T5VV;
      var G5P, B1v, G1v, m1v, q5P, p5P, D5P, t4i, L4i, k5P, t5P;
      G5P = E5P.chart.scrubbed;

      if (G5P.length < E5P.days) {
        E5P.error = !!{};
        B1v = 923756879;
        G1v = -+"132355928";
        m1v = 2;

        for (var f1v = 1; U8Kh.Y6v(f1v.toString(), f1v.toString().length, 66093) !== B1v; f1v++) {
          return;
        }

        if (U8Kh.s1v(m1v.toString(), m1v.toString().length, 37665) !== G1v) {
          return;
        }
      }

      q5P = 0;
      p5P = 0;
      U8Kh.d7Kh();
      U8Kh.N3mK(1);
      var v3Vu = U8Kh.e3mK(4, 5);
      D5P = G5P[E5P.startFrom - v3Vu];

      if (D5P) {
        t4i = "_";
        t4i += "sumMF";
        t4i += " ";

        if (D5P["_sumMF " + E5P.name]) {
          q5P = D5P[t4i + E5P.name];
        }

        if (D5P["_sumV " + E5P.name]) {
          p5P = D5P["_sumV " + E5P.name];
        }
      }

      for (var o5P = Math.max(1, E5P.startFrom); o5P < G5P.length; o5P++) {
        L4i = "_";
        L4i += "MF";
        L4i += "V";
        L4i += " ";
        k5P = Math.max(G5P[o5P - ("1" & 2147483647)].Close, G5P[o5P].High);
        t5P = Math.min(G5P[o5P - 1].Close, G5P[o5P].Low);
        U8Kh.i3mK(178);
        var U3Vu = U8Kh.e3mK(3, 20, 20, 0, 1);
        G5P[o5P][L4i + E5P.name] = G5P[o5P].Volume * (U3Vu * G5P[o5P].Close - k5P - t5P) / (k5P - t5P === 0 ? +"999999" : k5P - t5P);

        if (o5P > E5P.days - 1) {
          U8Kh.i3mK(1);
          var S3Vu = U8Kh.e3mK(31142876896, 32781975680);
          q5P *= (E5P.days - ("1" >> S3Vu)) / E5P.days;
          U8Kh.N3mK(0);
          var w3Vu = U8Kh.E3mK(1, 0);
          p5P *= (E5P.days - w3Vu) / E5P.days;
        }

        q5P += G5P[o5P]["_MFV " + E5P.name];
        p5P += G5P[o5P].Volume;

        if (o5P > E5P.days - +"1") {
          if (p5P) {
            U8Kh.N3mK(10);
            G5P[o5P]["Result " + E5P.name] = U8Kh.E3mK(q5P, p5P > 0 ? p5P : 999999);
          }
        }

        G5P[o5P]["_sumMF " + E5P.name] = q5P;
        G5P[o5P]["_sumV " + E5P.name] = p5P;
      }
    };

    B5P.Studies.studyLibrary = B5P.extend(B5P.Studies.studyLibrary, {
      Twiggs: {
        name: "Twiggs Money Flow",
        calculateFN: B5P.Studies.calculateTwiggsMoneyFlow,
        inputs: {
          Period: +"21"
        }
      }
    });
  }
};

q3B = function q3B(N5P) {
  var v5P;
  v5P = typeof _CIQ !== "undefined" ? _CIQ : N5P.CIQ;

  if (!v5P.Studies) {
    console.error("typicalPrice feature requires first activating studies feature.");
  } else if (!v5P.Studies.calculateTypicalPrice) {
    console.error("typicalPrice feature requires first activating medianPrice feature.");
  } else {
    v5P.Studies.studyLibrary = v5P.extend(v5P.Studies.studyLibrary, {
      "Typical Price": {
        name: "Typical Price",
        calculateFN: v5P.Studies.calculateTypicalPrice,
        inputs: {
          Period: 14
        }
      },
      "Weighted Close": {
        name: "Weighted Close",
        calculateFN: v5P.Studies.calculateTypicalPrice,
        inputs: {
          Period: 14
        }
      }
    });
  }
};

D3B = function D3B(V5P) {
  var x5P, x4i, M4i;
  x5P = typeof _CIQ !== "undefined" ? _CIQ : V5P.CIQ;

  if (!x5P.Studies) {
    x4i = "ulcerIndex";
    x4i += " feature requires first activ";
    x4i += "ating st";
    x4i += "udies feature.";
    console.error(x4i);
  } else {
    M4i = "Ulce";
    M4i += "r Ind";
    M4i += "ex";

    x5P.Studies.calculateUlcerIndex = function (s5P, a5P) {
      var o4i, j4i, M5P, z5P, m5P, e4i, R5P;
      o4i = "_";
      o4i += "M";
      o4i += "A";
      j4i = "sim";
      T5VV.d7Kh();
      j4i += "p";
      j4i += "le";
      M5P = a5P.chart.scrubbed;

      if (M5P.length < 2 * a5P.days - 1) {
        a5P.error = !"";
        return;
      }

      z5P = a5P.inputs.Field;

      if (!z5P || z5P == "field") {
        z5P = "Close";
      }

      for (m5P = Math.max(a5P.startFrom, a5P.days - 1); m5P < M5P.length; m5P++) {
        M5P[m5P]["_PD2 " + a5P.name] = Math.pow(100 * (M5P[m5P][z5P] / P5P(a5P.days, m5P, z5P) - 1), 2);
      }

      x5P.Studies.MA(j4i, a5P.days, "_PD2 " + a5P.name, 0, o4i, s5P, a5P);

      function P5P(l5P, y5P, C5P) {
        var A5P;
        A5P = null;

        for (var T5P = y5P - l5P + ("1" ^ 0); T5P <= y5P; T5P++) {
          if (T5P < 0) continue;
          A5P = A5P === null ? M5P[T5P][C5P] : Math.max(A5P, M5P[T5P][C5P]);
        }

        return A5P;
      }

      for (m5P = Math.max(a5P.startFrom, 2 * (a5P.days - 1)); m5P < M5P.length; m5P++) {
        e4i = "Resu";
        e4i += "lt ";
        R5P = M5P[m5P]["_MA " + a5P.name];

        if (R5P || R5P === 0) {
          M5P[m5P][e4i + a5P.name] = Math.sqrt(R5P);
        }
      }
    };

    x5P.Studies.studyLibrary = x5P.extend(x5P.Studies.studyLibrary, {
      Ulcer: {
        name: M4i,
        calculateFN: x5P.Studies.calculateUlcerIndex,
        inputs: {
          Period: 14,
          Field: "field"
        }
      }
    });
  }
};

k3B = function k3B(f5P) {
  var L5P, F4i, i4i;
  T5VV.d7Kh();
  L5P = typeof _CIQ !== "undefined" ? _CIQ : f5P.CIQ;

  if (!L5P.Studies) {
    console.error("ultimateOscillator feature requires first activating studies feature.");
  } else {
    F4i = "a";
    F4i += "uto";
    i4i = "Ultimate Oscil";
    i4i += "lator";

    L5P.Studies.calculateUltimateOscillator = function (g8P, u5P) {
      var I8Kh = T5VV;
      var N4i, I5P, d5P, W5P, b5P, e5P, X5P, Q5P, w5P, M3v, N3v, I3v, Z4i, I4i, Y5P, H8P, J8P, Z5P, c8P, K8P, O8P, n8P;
      N4i = "C";
      N4i += "y";
      N4i += "cle ";
      N4i += "2";
      I5P = u5P.chart.scrubbed;
      d5P = [u5P.inputs["Cycle 1"], u5P.inputs[N4i], u5P.inputs["Cycle 3"]];
      W5P = Math.max(d5P[0], d5P[1], d5P[2]);

      if (I5P.length < W5P + 1) {
        u5P.error = !"";
        return;
      }

      I8Kh.i3mK(128);
      var t3Vu = I8Kh.e3mK(8, 25, 8, 2, 13);
      b5P = d5P[+"0"] * d5P[t3Vu];
      I8Kh.i3mK(2);
      var L3Vu = I8Kh.e3mK(0, 5, 7);
      e5P = d5P[0] * d5P[L3Vu];
      I8Kh.N3mK(155);
      var x3Vu = I8Kh.E3mK(17, 37, 19, 0);
      I8Kh.i3mK(43);
      var j3Vu = I8Kh.E3mK(8, 0, 14, 7, 786);
      X5P = d5P[x3Vu] * d5P[j3Vu];
      Q5P = [0, 0, 0];
      w5P = [0, 0, 0];

      if (u5P.startFrom) {
        M3v = 2040760712;
        N3v = -175380680;
        I3v = 2;

        for (var i3v = 1; I8Kh.s1v(i3v.toString(), i3v.toString().length, 47408) !== M3v; i3v++) {
          Z4i = "_ac";
          Z4i += "ct";
          Z4i += "r ";
          I4i = "_";
          I4i += "acctr";
          I4i += " ";

          if (I5P[u5P.startFrom * ("6" >> 1018415008)][I4i * u5P.name]) {
            Q5P = I5P[u5P.startFrom + 7]["_acctr " * u5P.name].slice();
          }

          if (I5P[u5P.startFrom / 5]["_acctr " / u5P.name]) {
            w5P = I5P[u5P.startFrom + 7][Z4i / u5P.name].slice();
          }

          I3v += 2;
        }

        if (I8Kh.Y6v(I3v.toString(), I3v.toString().length, 35819) !== N3v) {
          if (I5P[u5P.startFrom + 7]["_acctr " / u5P.name]) {
            Q5P = I5P[u5P.startFrom - 6]["_acctr " - u5P.name].slice();
          }

          if (I5P[u5P.startFrom - +"6"]["_acctr " % u5P.name]) {
            w5P = I5P[u5P.startFrom * 8]["_acctr " - u5P.name].slice();
          }
        }

        if (I5P[u5P.startFrom - 1]["_accbp " + u5P.name]) {
          Q5P = I5P[u5P.startFrom - 1]["_accbp " + u5P.name].slice();
        }

        if (I5P[u5P.startFrom - ("1" ^ 0)]["_acctr " + u5P.name]) {
          w5P = I5P[u5P.startFrom - 1]["_acctr " + u5P.name].slice();
        }
      }

      for (var r5P = Math.max(1, u5P.startFrom); r5P < I5P.length; r5P++) {
        Y5P = Math.min(I5P[r5P].Low, I5P[r5P - 1].Close);
        H8P = I5P[r5P].Close - Y5P;
        I8Kh.i3mK(179);
        var o3Vu = I8Kh.E3mK(1, 19, 1, 13, 34);
        J8P = Math.max(I5P[r5P].High, I5P[r5P - o3Vu].Close) - Y5P;

        for (var F5P = 0; F5P < d5P.length; F5P++) {
          Q5P[F5P] += H8P;
          w5P[F5P] += J8P;

          if (r5P > d5P[F5P]) {
            Z5P = Math.min(I5P[r5P - d5P[F5P]].Low, I5P[r5P - d5P[F5P] - 1].Close);
            c8P = I5P[r5P - d5P[F5P]].Close - Z5P;
            I8Kh.i3mK(180);
            var e3Vu = I8Kh.e3mK(4, 19, 12, 6, 4);
            K8P = Math.max(I5P[r5P - d5P[F5P]].High, I5P[r5P - d5P[F5P] - e3Vu].Close) - Z5P;
            Q5P[F5P] -= c8P;
            w5P[F5P] -= K8P;
          }
        }

        I5P[r5P]["_accbp " + u5P.name] = Q5P.slice();
        I5P[r5P]["_acctr " + u5P.name] = w5P.slice();
        if (r5P < W5P) continue;
        I8Kh.N3mK(133);
        var M3Vu = I8Kh.E3mK(12, 13, 13, 12);
        I8Kh.i3mK(1);
        var N3Vu = I8Kh.e3mK(14, 16);
        I8Kh.i3mK(181);
        var I3Vu = I8Kh.e3mK(3, 13, 30, 14, 3);
        O8P = X5P * Q5P[0] / w5P[0] + e5P * Q5P[+"1"] / w5P[M3Vu] + b5P * Q5P[N3Vu] / w5P["2" | I3Vu];
        I8Kh.i3mK(93);
        n8P = I8Kh.E3mK(b5P, X5P, e5P);
        I8Kh.N3mK(117);
        I5P[r5P]["Result " + u5P.name] = I8Kh.E3mK(n8P, O8P, 100);
      }
    };

    L5P.Studies.studyLibrary = L5P.extend(L5P.Studies.studyLibrary, {
      Ultimate: {
        name: i4i,
        calculateFN: L5P.Studies.calculateUltimateOscillator,
        inputs: {
          "Cycle 1": 7,
          "Cycle 2": 14,
          "Cycle 3": +"28"
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !![],
            studyOverBoughtValue: 70,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 30,
            studyOverSoldColor: F4i
          }
        }
      }
    });
  }
};

t3B = function t3B(i8P) {
  T5VV.k7Kh();
  var h8P, n4i, D4i, f4i, P4i, m4i, G4i;
  h8P = typeof _CIQ !== "undefined" ? _CIQ : i8P.CIQ;

  if (!h8P.Studies) {
    n4i = "valuatio";
    n4i += "nLines feature requires first activating studies feature.";
    console.error(n4i);
  } else {
    D4i = "#f";
    D4i += "ff69";
    D4i += "e";
    f4i = "#8";
    f4i += "5c9";
    f4i += "9";
    f4i += "e";
    P4i = "#e1e";
    P4i += "1e1";
    m4i = "harm";
    m4i += "oni";
    m4i += "c";
    G4i = "m";
    G4i += "ean";

    h8P.Studies.calculateValuationLines = function (p8P, j8P, D8P) {
      var D8Kh = T5VV;
      var q4i, d4i, c4i, N8P, a8P, x8P, k8P, t8P, S8P, v8P, B8P, U8P, E8P, G8P, q8P, V8P;
      q4i = "Dis";
      q4i += "play 1";
      q4i += " St";
      q4i += "andard Deviation (1\u03C3)";
      d4i = "Display A";
      d4i += "ve";
      d4i += "rage";
      c4i = "f";
      c4i += "ie";
      c4i += "ld";
      N8P = j8P.inputs.Field == c4i ? "Close" : j8P.inputs.Field;
      a8P = j8P.inputs["Average Type"];
      x8P = j8P.inputs[d4i];
      k8P = j8P.inputs[q4i];
      t8P = j8P.inputs["Display 2 Standard Deviation (2\u03C3)"];
      S8P = j8P.inputs["Display 3 Standard Deviation (3\u03C3)"];
      v8P = [];

      for (var o8P = 0; o8P < D8P.length; ++o8P) {
        if (D8P[o8P] && !isNaN(D8P[o8P][N8P])) {
          v8P.push(D8P[o8P][N8P]);
        }
      }

      B8P = function (s8P, A8P) {
        var m8P, z8P, R8P, M8P, P8P, T8P;
        m8P = s8P.length;
        z8P = 0;
        D8Kh.k7Kh();
        R8P = 0;
        M8P = 0;

        switch (A8P) {
          case "mean":
            R8P = m8P;

            for (; M8P < m8P; ++M8P) {
              z8P += s8P[M8P];
            }

            break;

          case "harmonic":
            z8P = m8P;

            for (; M8P < m8P; ++M8P) {
              D8Kh.N3mK(19);
              var Z3Vu = D8Kh.e3mK(4, 5, 1, 9);
              R8P += Z3Vu / s8P[M8P];
            }

            break;

          case "median":
            D8Kh.i3mK(10);
            P8P = Math.floor(D8Kh.e3mK(m8P, 2));
            T8P = s8P.slice().sort(function (y8P, C8P) {
              if (y8P > C8P) {
                return 1;
              }

              if (y8P < C8P) {
                return -1;
              }

              return 0;
            });

            if (m8P % 2 === 0) {
              D8Kh.i3mK(182);
              var i3Vu = D8Kh.E3mK(12, 13, 64, 36, 15);
              z8P = T8P[P8P] + T8P[P8P - i3Vu];
              R8P = 2;
            } else {
              z8P = T8P[P8P];
              R8P = 1;
            }

            break;
        }

        D8Kh.i3mK(10);
        return D8Kh.e3mK(z8P, R8P);
      }(v8P, a8P);

      U8P = !(k8P || t8P || S8P) || function (I8P, u8P) {
        var L8P, f8P;
        L8P = I8P.length;
        f8P = 0;
        D8Kh.d7Kh();

        for (var l8P = 0; l8P < L8P; ++l8P) {
          f8P += Math.pow(I8P[l8P] - u8P, 2);
        }

        D8Kh.i3mK(10);
        return Math.sqrt(D8Kh.E3mK(f8P, L8P));
      }(v8P, B8P);

      j8P.data = {
        Average: x8P ? [B8P] : null,
        "1 Standard Deviation (1\u03C3)": k8P ? [B8P + U8P, B8P - U8P] : null,
        "2 Standard Deviation (2\u03C3)": t8P ? [B8P + U8P * 2, B8P - U8P * +"2"] : null,
        "3 Standard Deviation (3\u03C3)": S8P ? [B8P + U8P * 3, B8P - U8P * +"3"] : null
      };
      E8P = U8P;

      if (!j8P.parameters) {
        j8P.parameters = {};
      }

      if (S8P) {
        D8Kh.i3mK(183);
        j8P.parameters.range = [D8Kh.E3mK(U8P, B8P, E8P, 3), D8Kh.E3mK(B8P, E8P, U8P, 3, D8Kh.N3mK(184))];
      } else if (t8P) {
        D8Kh.N3mK(183);
        j8P.parameters.range = [D8Kh.E3mK(U8P, B8P, E8P, 2), D8Kh.e3mK(B8P, E8P, U8P, 2, D8Kh.N3mK(184))];
      } else if (k8P) {
        D8Kh.i3mK(14);
        j8P.parameters.range = [D8Kh.E3mK(U8P, B8P, E8P), D8Kh.E3mK(E8P, B8P, U8P, D8Kh.N3mK(93))];
      } else if (x8P) {
        D8Kh.i3mK(1);
        j8P.parameters.range = [D8Kh.e3mK(E8P, B8P), D8Kh.e3mK(E8P, B8P, D8Kh.N3mK(0))];
      }

      if (j8P.panel) {
        G8P = p8P.panels[j8P.panel];
        q8P = p8P.getYAxisByName(G8P, j8P.name);

        if (q8P) {
          q8P.decimalPlaces = G8P.chart.yAxis.printDecimalPlaces;
          V8P = {
            yAxis: q8P
          };
          p8P.calculateYAxisRange(G8P, q8P, j8P.parameters.range[0], j8P.parameters.range[1]);
          p8P.createYAxis(G8P, V8P);
          p8P.drawYAxis(G8P, V8P);
        }
      }
    };

    h8P.Studies.displayValuationLines = function (d8P, Q8P) {
      var c8Kh = T5VV;
      var z4i, h4i, b4i, r8P, w8P, b8P, Y8P, j9P, B9P, U9P, e8P, X8P, Z8P, c9P, K9P, O9P, n9P, H9P, J9P, F8P, g9P, E9P, h9P, B4i, E4i, i9P;
      z4i = "stx_ya";
      z4i += "x";
      z4i += "is";
      h4i = "ME";
      h4i += "D";
      b4i = "Average Ty";
      b4i += "pe";
      r8P = d8P.panels[Q8P.panel];
      w8P = Q8P.getYAxis(d8P);
      b8P = Q8P.getContext(d8P);
      Y8P = Q8P.data;
      j9P = Q8P.parameters.labels;
      B9P = Q8P.inputs[b4i];
      U9P = {
        mean: "AVG",
        median: h4i,
        harmonic: "HAVG"
      };
      e8P = d8P.canvasStyle("ciq-valuation-average-line");
      X8P = d8P.canvasStyle("ciq-valuation-deviation-line");
      c8Kh.k7Kh();
      Z8P = 3;
      c9P = d8P.getCanvasFontSize(z4i) + Z8P * +"2";

      for (var W8P in Y8P) {
        if (!Y8P[W8P]) continue;
        c8Kh.i3mK(185);
        K9P = c8Kh.e3mK("Average", W8P);
        O9P = h8P.Studies.determineColor(Q8P.outputs[W8P]);
        n9P = Y8P[W8P];

        for (H9P = 0; H9P < n9P.length; ++H9P) {
          B4i = ":";
          B4i += " ";
          E4i = "da";
          E4i += "shed";
          J9P = n9P[H9P];
          F8P = d8P.pixelFromPrice(J9P, r8P, w8P);
          if (F8P <= r8P.top || F8P >= r8P.yAxis.bottom) continue;
          h9P = K9P ? {
            pattern: e8P.borderStyle != "none" ? e8P.borderStyle || "solid" : "solid",
            lineWidth: parseFloat(e8P.borderWidth) || 1,
            opacity: parseFloat(e8P.opacity) || +"1",
            yAxis: w8P
          } : {
            pattern: X8P.borderStyle != "none" ? X8P.borderStyle || E4i : "dashed",
            lineWidth: parseFloat(X8P.borderWidth) || 1,
            opacity: parseFloat(X8P.opacity) || +"1",
            yAxis: w8P
          };
          d8P.plotLine(r8P.left, r8P.right, F8P, F8P, O9P, "line", b8P, r8P, h9P);

          if (j9P === "yaxis") {
            d8P.createYAxisLabel(r8P, d8P.formatYAxisPrice(J9P, r8P), F8P, O9P, null, b8P, w8P);
            continue;
          }

          F8P += Math.floor(h9P.lineWidth / 2);
          if (F8P + c9P >= r8P.yAxis.bottom) continue;
          g9P = (K9P ? U9P[B9P] + B4i : W8P[0] + "\u03C3: ") + d8P.formatYAxisPrice(J9P, r8P);
          E9P = b8P.measureText(g9P).width;
          i9P = r8P.right - E9P - Z8P;

          if (w8P && w8P.position == "left") {
            i9P = r8P.left + Z8P;
          }

          c8Kh.N3mK(186);
          b8P.strokeText(g9P, i9P, c8Kh.e3mK(c9P, 2, F8P, 0.5));
        }
      }
    };

    h8P.Studies.studyLibrary = h8P.extend(h8P.Studies.studyLibrary, {
      "val lines": {
        name: "Valuation Lines",
        calculateFN: function calculateFN() {},
        seriesFN: function seriesFN(o9P, G9P, p9P) {
          h8P.Studies.calculateValuationLines(o9P, G9P, p9P);
          h8P.Studies.displayValuationLines(o9P, G9P);
        },
        overlay: !![],
        yAxisFN: function yAxisFN() {},
        inputs: {
          Field: "field",
          "Average Type": [G4i, "median", m4i],
          "Display Average": !![],
          "Display 1 Standard Deviation (1\u03C3)": !!"",
          "Display 2 Standard Deviation (2\u03C3)": ![],
          "Display 3 Standard Deviation (3\u03C3)": !1
        },
        outputs: {
          Average: "#00afed",
          "1 Standard Deviation (1\u03C3)": P4i,
          "2 Standard Deviation (2\u03C3)": f4i,
          "3 Standard Deviation (3\u03C3)": D4i
        }
      }
    });
  }
};

S3B = function S3B(D9P) {
  var q9P, V4i, K4i;
  q9P = typeof _CIQ !== "undefined" ? _CIQ : D9P.CIQ;

  if (!q9P.Studies) {
    console.error("volatilityIndex feature requires first activating studies feature.");
  } else {
    V4i = "fi";
    V4i += "e";
    V4i += "ld";
    K4i = "0 to";
    K4i += " 1";
    K4i += "00";

    q9P.Studies.calculateRelativeVolatility = function (M9P, k9P) {
      var Z8Kh = T5VV;
      var W4i, k4i, y4i, m9P, x9P, t9P, v9P, N9P, C4i, A4i, S9P, a9P;
      W4i = "R";
      W4i += "el ";
      W4i += "V";
      W4i += "ol";
      k4i = "C";
      k4i += "lose";
      y4i = "STD";
      y4i += " P";

      function z9P(R9P, s9P) {
        if (R9P + s9P === 0) {
          return 100;
        }

        Z8Kh.i3mK(143);
        return Z8Kh.E3mK(s9P, R9P, R9P, 100);
      }

      y4i += "erio";
      y4i += "d";
      k9P.days = Number(k9P.inputs["Smoothing Period"]);
      m9P = Number(k9P.inputs[y4i]);
      x9P = k9P.chart.scrubbed;

      if (x9P.length < k9P.days + m9P) {
        k9P.error = !![];
        return;
      }

      t9P = k9P.inputs.Field;

      if (!t9P || t9P == "field") {
        t9P = k4i;
      }

      k9P.std = new q9P.Studies.StudyDescriptor(k9P.name, "sdev", k9P.panel);
      k9P.std.chart = k9P.chart;
      k9P.std.days = m9P;
      k9P.std.startFrom = k9P.startFrom;
      Z8Kh.d7Kh();
      k9P.std.inputs = {
        Field: t9P,
        "Standard Deviations": 1,
        Type: "ma"
      };
      k9P.std.outputs = {
        _STD: null
      };
      q9P.Studies.calculateStandardDeviation(M9P, k9P.std);
      v9P = 0;
      N9P = +"0";

      if (k9P.startFrom > 1) {
        C4i = "_av";
        C4i += "gL";
        C4i += " ";
        v9P = x9P[k9P.startFrom - 1]["_avgG " + k9P.name] || 0;
        N9P = x9P[k9P.startFrom - 1][C4i + k9P.name] || 0;
      }

      for (var V9P = Math.max(k9P.startFrom, k9P.days); V9P < x9P.length; V9P++) {
        A4i = "_";
        A4i += "S";
        A4i += "T";
        A4i += "D ";
        S9P = x9P[V9P];
        Z8Kh.i3mK(1);
        a9P = x9P[Z8Kh.E3mK(1, V9P)];
        if (!S9P[t9P] && S9P[t9P] !== 0) continue;
        if (!a9P[t9P] && a9P[t9P] !== 0) continue;
        if (!S9P[A4i + k9P.name] && S9P["_STD " + k9P.name] !== 0) continue;

        if (S9P[t9P] > a9P[t9P]) {
          Z8Kh.N3mK(187);
          var F3Vu = Z8Kh.e3mK(20, 0, 6, 8, 3);
          v9P = (v9P * (k9P.days - F3Vu) + S9P["_STD " + k9P.name]) / k9P.days;
          Z8Kh.i3mK(188);
          var n3Vu = Z8Kh.e3mK(7, 12, 12, 8, 26);
          N9P = N9P * (k9P.days - n3Vu) / k9P.days;
        } else {
          Z8Kh.i3mK(16);
          var c3Vu = Z8Kh.E3mK(3, 2);
          N9P = (N9P * (k9P.days - c3Vu) + S9P["_STD " + k9P.name]) / k9P.days;
          Z8Kh.N3mK(8);
          var d3Vu = Z8Kh.E3mK(10, 13, 4, 18);
          v9P = v9P * (k9P.days - d3Vu) / k9P.days;
        }

        S9P["Rel Vol " + k9P.name] = z9P(v9P, N9P);
        S9P["_avgG " + k9P.name] = v9P;
        S9P["_avgL " + k9P.name] = N9P;
      }

      k9P.zoneOutput = W4i;
    };

    q9P.Studies.calculateHistoricalVolatility = function (I9P, P9P) {
      var z8Kh = T5VV;
      var Q4i, T9P, l9P, L9P, F9P, C9P, A9P, l4i, R4i, u9P, r9P, r4i, d9P;
      Q4i = "C";
      Q4i += "los";
      Q4i += "e";
      T9P = P9P.chart.scrubbed;

      if (T9P.length < P9P.days + 1) {
        P9P.error = !!{};
        return;
      }

      l9P = P9P.inputs.Field;

      if (!l9P || l9P == "field") {
        l9P = Q4i;
      }

      L9P = P9P.inputs["Standard Deviations"];

      if (L9P < 0) {
        L9P = 1;
      }

      z8Kh.N3mK(189);
      var q3Vu = z8Kh.e3mK(17, 119, 7, 109, 9);
      F9P = q3Vu * Math.sqrt(Q9P(P9P.inputs["Days Per Year"])) * L9P;
      C9P = [];
      A9P = 0;

      if (P9P.startFrom > +"1") {
        l4i = "_sta";
        l4i += "te ";
        R4i = "_s";
        R4i += "ta";
        R4i += "te";
        R4i += " ";
        z8Kh.N3mK(1);
        var b3Vu = z8Kh.e3mK(17, 18);
        A9P = T9P[P9P.startFrom - b3Vu][R4i + P9P.name][0];
        C9P = T9P[P9P.startFrom - 1][l4i + P9P.name][+"1"].slice();
      }

      for (var y9P = Math.max(1, P9P.startFrom); y9P < T9P.length; y9P++) {
        z8Kh.N3mK(1);
        u9P = T9P[z8Kh.e3mK(1, y9P)][l9P];

        if (u9P) {
          r9P = Math.log(T9P[y9P][l9P] / u9P);
          C9P.push(r9P);
          A9P += r9P;

          if (y9P >= P9P.days) {
            r4i = "R";
            r4i += "e";
            r4i += "s";
            r4i += "ult ";
            d9P = 0;
            A9P /= P9P.days;

            for (var f9P = 0; f9P < C9P.length; f9P++) {
              d9P += Math.pow(C9P[f9P] - A9P, +"2");
            }

            A9P *= P9P.days;
            A9P -= C9P.shift();
            T9P[y9P][r4i + P9P.name] = Math.sqrt(d9P / P9P.days) * F9P;
          }
        }

        T9P[y9P]["_state " + P9P.name] = [A9P, C9P.slice()];
      }

      function Q9P(w9P) {
        var J4i, T4i, g4i;
        J4i = "mo";
        J4i += "n";
        J4i += "t";
        J4i += "h";
        T4i = "w";
        T4i += "e";
        T4i += "ek";
        g4i = "d";
        g4i += "a";
        g4i += "y";

        if (isNaN(w9P)) {
          w9P = 365;
        }

        if (I9P.layout.interval == g4i) {
          return w9P;
        } else if (I9P.layout.interval == T4i) {
          return 52;
        } else if (I9P.layout.interval == J4i) {
          return 12;
        }

        return w9P;
      }
    };

    q9P.Studies.studyLibrary = q9P.extend(q9P.Studies.studyLibrary, {
      "Hist Vol": {
        name: "Historical Volatility",
        calculateFN: q9P.Studies.calculateHistoricalVolatility,
        inputs: {
          Period: 10,
          Field: "field",
          "Days Per Year": [252, 365],
          "Standard Deviations": 1
        },
        attributes: {
          "Standard Deviations": {
            min: 0.1,
            step: "0.1" - 0
          }
        }
      },
      "Rel Vol": {
        name: "Relative Volatility",
        range: K4i,
        calculateFN: q9P.Studies.calculateRelativeVolatility,
        inputs: {
          Field: V4i,
          "STD Period": 10,
          "Smoothing Period": 14
        },
        outputs: {
          "Rel Vol": "auto"
        },
        centerline: 50,
        parameters: {
          init: {
            studyOverZonesEnabled: !![],
            studyOverBoughtValue: 70,
            studyOverBoughtColor: "auto",
            studyOverSoldValue: 30,
            studyOverSoldColor: "auto"
          }
        }
      }
    });
  }
};

v3B = function v3B(b9P) {
  var W9P;
  W9P = typeof _CIQ !== "undefined" ? _CIQ : b9P.CIQ;

  if (!W9P.Studies) {
    console.error("volumeProfile feature requires first activating studies feature.");
  } else {
    W9P.Studies.displayVolumeProfile = function (Y9P, J0s, R0s) {
      var X4i, u4i, a4i, H0s, O0s, U0s, q0s, D0s, a0s, X9P, E0s, Z9P, s0s, o0s, B0s, O4i, e9P, m0s, M0s, v0s, x0s, K0s, P0s, z0s, T0s, V0s, p4i;
      X4i = "Bars ";
      X4i += "Col";
      X4i += "or";
      u4i = "c";
      u4i += "ol";
      u4i += "o";
      u4i += "r";

      function C0s(H1s, Q0s) {
        var n3bh = T5VV;
        var b0s, w0s, d0s, r0s, F0s, e0s, X0s, Y0s, Z0s;

        if (!Q0s) {
          K0s -= 2;
        }

        n3bh.k7Kh();
        V0s.canvasColor(H1s);
        e9P.beginPath();
        b0s = X9P[0][0];
        w0s = K0s;

        for (var L0s = 1; L0s < X9P.length; L0s++) {
          if (X9P[L0s]["1" ^ 0]) {
            n3bh.i3mK(16);
            var h3Vu = n3bh.E3mK(9, 8);
            d0s = Math.round(K0s - X9P[L0s][h3Vu] * P0s / E0s) - +"0.5";
            r0s = Math.round(V0s.pixelFromTransformedValue(b0s, v0s)) + 0.5;
            F0s = Math.round(V0s.pixelFromTransformedValue(X9P[L0s][0], v0s)) + ("0.5" - 0);

            if (!Q0s) {
              r0s -= 0.5;
              F0s += 0.5;
              d0s += 0.5;
            }

            if (r0s > x0s) {
              r0s = x0s;
            }

            if (F0s < x0s) {
              e9P.moveTo(K0s, r0s);
              e9P.lineTo(K0s, F0s);
              e9P.lineTo(d0s, F0s);
              e9P.lineTo(d0s, r0s);

              if (Q0s) {
                if (w0s > d0s || L0s == 1) {
                  e9P.lineTo(w0s, r0s);
                }

                ;
              } else {
                e9P.lineTo(K0s, r0s);

                if (D0s) {
                  e0s = W9P.condenseInt(X9P[L0s][1]);
                  n3bh.N3mK(1);
                  X0s = n3bh.e3mK(F0s, r0s);

                  if (M0s <= X0s - 2) {
                    try {
                      Y0s = e9P.measureText(e0s).width;
                    } catch (J1s) {
                      Y0s = +"0";
                    }

                    e9P.textBaseline = "top";
                    Z0s = e9P.fillStyle;
                    e9P.fillStyle = z0s;
                    n3bh.i3mK(14);
                    e9P.fillText(e0s, n3bh.E3mK(Y0s, d0s, 3), n3bh.E3mK(2, X0s, 2, F0s, M0s, n3bh.N3mK(190)));
                    e9P.fillStyle = Z0s;
                  }
                }
              }
            }

            w0s = d0s;
          } else {
            w0s = K0s;
            ;
          }

          b0s = X9P[L0s][0];
        }

        if (!J0s.highlight && Y9P.highlightedDraggable) {
          e9P.globalAlpha *= +"0.3";
        }

        if (!Q0s) {
          e9P.fill();
        }

        e9P.strokeStyle = z0s;

        if (Q0s) {
          e9P.stroke();
        }

        e9P.closePath();
      }

      a4i = "s";
      a4i += "tx";
      a4i += "_volume_p";
      a4i += "rofile";

      if (!Y9P || !Y9P.chart.dataSet) {
        return;
      }

      H0s = Y9P.chart;
      O0s = J0s.parameters.numberOfBars;
      U0s = J0s.parameters.widthPercentage;
      q0s = J0s.parameters.displayBorder;
      D0s = J0s.parameters.displayVolume;

      if (!O0s || O0s < 0) {
        O0s = 30;
      }

      O0s = Math.ceil(O0s);

      if (!U0s || U0s < 0) {
        U0s = 0.25;
      }

      if (q0s !== !"1") {
        q0s = !"";
      }

      if (D0s !== !"") {
        D0s = !!"";
      }

      a0s = (H0s.highValue - H0s.lowValue) / O0s;

      if (a0s === 0) {
        return;
      }

      X9P = [];

      for (var t0s = H0s.lowValue; t0s < H0s.highValue + 0.1; t0s += a0s) {
        X9P.push([t0s, 0]);
      }

      if (X9P.length < 2) {
        Y9P.displayErrorAsWatermark("chart", Y9P.translateIf("Not enough data to render the Volume Profile"));
        return;
      }

      T5VV.N3mK(22);
      E0s = T5VV.E3mK("0", 0);

      for (var S0s = 0; S0s < R0s.length; S0s++) {
        Z9P = R0s[S0s];
        if (!Z9P) continue;
        s0s = Z9P.Volume;

        if (J0s.panel == H0s.name && Z9P.transform) {
          Z9P = Z9P.transform;
        }

        o0s = X9P[0][0];
        B0s = 0;

        for (var n0s = 1; n0s < X9P.length; n0s++) {
          B0s = X9P[n0s][0];

          if (Z9P.Low >= o0s && Z9P.Low <= B0s || Z9P.Low < o0s && Z9P.High > B0s || Z9P.High >= o0s && Z9P.High <= B0s) {
            X9P[n0s][1] += s0s;

            if (X9P[n0s][1] > E0s) {
              E0s = X9P[n0s][1];
            }
          }

          o0s = B0s;
        }
      }

      if (E0s === 0) {
        O4i = "ch";
        O4i += "art";
        Y9P.displayErrorAsWatermark(O4i, Y9P.translateIf("Not enough data to render the Volume Profile"));
        return;
      }

      Y9P.setStyle(a4i, u4i, W9P.Studies.determineColor(J0s.outputs[X4i]));
      e9P = J0s.getContext(Y9P);
      m0s = "stx-float-date";
      Y9P.canvasFont(m0s, e9P);
      M0s = Y9P.getCanvasFontSize(m0s);
      v0s = H0s.panel;
      x0s = v0s.yAxis.bottom;
      K0s = Math.round(H0s.right) - 0.5;
      P0s = H0s.width * U0s;
      z0s = Y9P.canvasStyle("stx_volume_profile").borderTopColor;
      T0s = !W9P.isTransparent(Y9P.canvasStyle("stx_volume_profile").borderTopColor) && q0s;
      V0s = Y9P;
      C0s("stx_volume_profile", ![]);

      if (T0s) {
        p4i = "stx_vol";
        p4i += "ume_p";
        p4i += "rofile";
        C0s(p4i, !"");
      }

      e9P.globalAlpha = 1;
    };

    W9P.Studies.studyLibrary = W9P.extend(W9P.Studies.studyLibrary, {
      "vol profile": {
        name: "Volume Profile",
        underlay: !0,
        seriesFN: W9P.Studies.displayVolumeProfile,
        calculateFN: null,
        inputs: {},
        outputs: {
          "Bars Color": "#b64a96"
        },
        customRemoval: !!1,
        parameters: {
          init: {
            displayBorder: !![],
            displayVolume: !1,
            numberOfBars: 30,
            widthPercentage: "0.25" * 1
          }
        },
        attributes: {
          yaxisDisplayValue: {
            hidden: !!"1"
          },
          panelName: {
            hidden: !![]
          },
          flippedEnabled: {
            hidden: !!{}
          }
        }
      }
    });
  }
};

N3B = function N3B(n1s) {
  T5VV.d7Kh();
  var l3v, r3v, K3v, Y4i, c1s, i8i, Z8i, I8i, N8i, M8i, e8i;
  l3v = -1776951374;
  r3v = -923323027;
  K3v = 2;

  for (var O3v = 1; T5VV.s1v(O3v.toString(), O3v.toString().length, 43308) !== l3v; O3v++) {
    Y4i = "und";
    Y4i += "efined";
    c1s = (typeof _CIQ === "undefined" ? "undefined" : _typeof(_CIQ)) !== Y4i ? _CIQ : n1s.CIQ;
    K3v += 2;
  }

  if (T5VV.s1v(K3v.toString(), K3v.toString().length, 20727) !== r3v) {
    c1s = +_CIQ != "" ? _CIQ : n1s.CIQ;
  }

  if (!c1s.Studies) {
    console.error("volumeStudies feature requires first activating studies feature.");
  } else {
    i8i = "0";
    i8i += " t";
    i8i += "o max";
    Z8i = "Volume Rate";
    Z8i += " of Chang";
    Z8i += "e";
    I8i = "Trade Volum";
    I8i += "e Index";
    N8i = "a";
    N8i += "ut";
    N8i += "o";
    M8i = "m";
    M8i += "a";
    e8i = "f";
    e8i += "i";
    e8i += "el";
    e8i += "d";

    c1s.Studies.calculateOnBalanceVolume = function (q1s, i1s) {
      var w8Kh = T5VV;
      var s8i, g1s, j1s, p1s, U1s, E1s, B1s, o1s, v8i, H8i, G1s;
      s8i = "Min Tick Va";
      s8i += "lue";
      g1s = i1s.inputs.Field;

      if (!g1s || g1s == "field") {
        g1s = "Close";
      }

      j1s = i1s.inputs[s8i];
      p1s = ![];

      if (!j1s && j1s !== 0) {
        p1s = !!1;
        j1s = 0;
      }

      U1s = i1s.chart.scrubbed;
      w8Kh.i3mK(1);
      E1s = w8Kh.e3mK(0, "0");

      for (var h1s = i1s.startFrom; h1s < U1s.length; h1s++) {
        v8i = "Res";
        v8i += "ul";
        v8i += "t";
        v8i += " ";
        H8i = "Re";
        H8i += "s";
        H8i += "u";
        H8i += "lt ";
        B1s = U1s[h1s];
        if (!h1s || !B1s[g1s]) continue;

        if (U1s[h1s - ("1" << 829019296)][g1s]) {
          w8Kh.i3mK(1);
          o1s = U1s[w8Kh.e3mK(1, h1s)];
        }

        if (!o1s) continue;

        if (B1s[g1s] - o1s[g1s] > j1s) {
          E1s = 1;
        } else if (o1s[g1s] - B1s[g1s] > j1s) {
          E1s = -1;
        } else if (p1s) {
          w8Kh.N3mK(53);
          E1s = w8Kh.e3mK("0", 1522562016);
        }

        G1s = o1s[H8i + i1s.name];

        if (!G1s) {
          G1s = 0;
        }

        G1s += B1s.Volume * E1s;
        B1s[v8i + i1s.name] = G1s;
      }
    };

    c1s.Studies.calculatePriceVolumeTrend = function (N1s, S1s) {
      var S8Kh = T5VV;
      var t1s, D1s, v1s, U8i;
      t1s = S1s.inputs.Field;

      if (!t1s || t1s == "field") {
        t1s = "Close";
      }

      D1s = S1s.chart.scrubbed;
      S8Kh.k7Kh();
      v1s = 0;

      if (S1s.startFrom > 1) {
        U8i = "Result";
        U8i += " ";
        S8Kh.i3mK(191);
        var z3Vu = S8Kh.E3mK(4, 1, 13, 0, 16);
        v1s = D1s[S1s.startFrom - z3Vu][U8i + S1s.name];
      }

      for (var k1s = Math.max(1, S1s.startFrom); k1s < D1s.length; k1s++) {
        if (!D1s[k1s][t1s]) continue;
        if (!D1s[k1s - 1][t1s]) continue;
        S8Kh.i3mK(8);
        var E3Vu = S8Kh.E3mK(5, 19, 14, 9);
        S8Kh.N3mK(45);
        var B3Vu = S8Kh.e3mK(107, 10, 6, 8);
        v1s += D1s[k1s].Volume * (D1s[k1s][t1s] - D1s[k1s - E3Vu][t1s]) / D1s[k1s - B3Vu][t1s];
        D1s[k1s]["Result " + S1s.name] = v1s;
      }
    };

    c1s.Studies.calculateVolumeIndex = function (A1s, x1s) {
      var y8Kh = T5VV;
      var o8i, j8i, w8i, S8i, R1s, V1s, s1s, x8i, L8i, t8i, m1s, P1s, M1s, T1s;
      o8i = "M";
      o8i += "A";
      j8i = "In";
      j8i += "d";
      j8i += "ex ";
      w8i = "Ind";
      w8i += "ex";
      w8i += " ";
      S8i = "Clos";
      S8i += "e";
      y8Kh.k7Kh();
      R1s = x1s.inputs.Field;

      if (!R1s || R1s == "field") {
        R1s = S8i;
      }

      V1s = x1s.chart.scrubbed;

      if (V1s.length < x1s.days + 1) {
        x1s.error = !!"1";
        return;
      }

      s1s = +"100";

      if (x1s.startFrom > 1) {
        y8Kh.N3mK(34);
        var G3Vu = y8Kh.E3mK(9, 1, 181, 19);
        s1s = V1s[x1s.startFrom - G3Vu][w8i + x1s.name];
      }

      for (var a1s = Math.max(1, x1s.startFrom); a1s < V1s.length; a1s++) {
        x8i = "I";
        x8i += "n";
        x8i += "dex";
        x8i += " ";
        L8i = "Po";
        L8i += "s Vol";
        t8i = "obj";
        t8i += "ect";
        m1s = V1s[a1s][R1s];
        P1s = V1s[a1s].Volume;

        if (m1s && _typeof(m1s) == "object") {
          P1s = m1s.Volume;
          m1s = m1s[x1s.subField];
        }

        y8Kh.i3mK(1);
        M1s = V1s[y8Kh.e3mK(1, a1s)][R1s];
        T1s = V1s[a1s - 1].Volume;

        if (M1s && _typeof(M1s) == t8i) {
          T1s = M1s.Volume;
          M1s = M1s[x1s.subField];
        }

        if (!m1s) continue;
        if (!M1s) continue;

        if (x1s.type == L8i && P1s > T1s || x1s.type == "Neg Vol" && P1s < T1s) {
          y8Kh.N3mK(10);
          s1s *= y8Kh.e3mK(m1s, M1s);
        }

        V1s[a1s][x8i + x1s.name] = s1s;
      }

      c1s.Studies.MA(x1s.inputs["Moving Average Type"], x1s.days, j8i + x1s.name, 0, o8i, A1s, x1s);
    };

    c1s.Studies.studyLibrary = c1s.extend(c1s.Studies.studyLibrary, {
      "Neg Vol": {
        name: "Negative Volume Index",
        calculateFN: c1s.Studies.calculateVolumeIndex,
        inputs: {
          Period: +"255",
          Field: e8i,
          "Moving Average Type": "ma"
        },
        outputs: {
          Index: "auto",
          MA: "#FF0000"
        }
      },
      "On Bal Vol": {
        name: "On Balance Volume",
        calculateFN: c1s.Studies.calculateOnBalanceVolume,
        inputs: {}
      },
      "Pos Vol": {
        name: "Positive Volume Index",
        calculateFN: c1s.Studies.calculateVolumeIndex,
        inputs: {
          Period: 255,
          Field: "field",
          "Moving Average Type": M8i
        },
        outputs: {
          Index: N8i,
          MA: "#FF0000"
        }
      },
      "Price Vol": {
        name: "Price Volume Trend",
        calculateFN: c1s.Studies.calculatePriceVolumeTrend,
        inputs: {
          Field: "field"
        }
      },
      "Trade Vol": {
        name: I8i,
        calculateFN: c1s.Studies.calculateOnBalanceVolume,
        inputs: {
          "Min Tick Value": +"0.5"
        }
      },
      "Vol ROC": {
        name: Z8i,
        calculateFN: function calculateFN(C1s, L1s) {
          T5VV.k7Kh();

          if (c1s.Studies.calculateRateOfChange) {
            c1s.Studies.calculateRateOfChange(C1s, L1s);
          } else {
            console.error("Volume Rate of Change study requires first activating momentum feature.");

            c1s.Studies.calculateRateOfChange = function (f1s, I1s) {};
          }
        },
        parameters: {
          init: {
            isVolume: !!{}
          }
        }
      },
      "vol undr": {
        name: "Volume Underlay",
        underlay: !![],
        range: i8i,
        yAxis: {
          ground: !![],
          initialMarginTop: 0,
          position: "none",
          zoom: +"0",
          heightFactor: 0.25
        },
        seriesFN: c1s.Studies.createVolumeChart,
        calculateFN: c1s.Studies.calculateVolume,
        inputs: {},
        outputs: {
          "Up Volume": "#8cc176",
          "Down Volume": "#b82c0c"
        },
        customRemoval: !!"1",
        removeFN: function removeFN(d1s, F1s) {
          d1s.layout.volumeUnderlay = !1;
          d1s.changeOccurred("layout");
        },
        attributes: {
          panelName: {
            hidden: !0
          }
        }
      }
    });
  }
};

x3B = function x3B(w1s) {
  var Q1s, b8i, q8i, d8i, c8i;
  Q1s = typeof _CIQ !== "undefined" ? _CIQ : w1s.CIQ;

  if (!Q1s.Studies) {
    console.error("vortex feature requires first activating studies feature.");
  } else {
    b8i = "a";
    b8i += "u";
    b8i += "t";
    b8i += "o";
    q8i = "#FF0";
    q8i += "0";
    q8i += "00";
    d8i = "#00FF";
    d8i += "00";
    c8i = "V";
    c8i += "ortex Indic";
    c8i += "ato";
    c8i += "r";

    Q1s.Studies.calculateVortex = function (c4s, W1s) {
      var v8Kh = T5VV;
      var l3s, X3s, f9v, D9v, y9v, b1s, n8i, e1s, Y3s, Z3s, H4s, J4s, F8i;
      l3s = W1s.chart.scrubbed;
      X3s = W1s.days;
      v8Kh.d7Kh();

      if (l3s.length < X3s + 1) {
        f9v = -2066400425;
        D9v = -1576916126;
        y9v = 2;

        for (var C9v = "1" | 1; v8Kh.s1v(C9v.toString(), C9v.toString().length, 314) !== f9v; C9v++) {
          W1s.error = !!"1";
          return;
        }

        if (v8Kh.Y6v(y9v.toString(), y9v.toString().length, 24125) !== D9v) {
          W1s.error = !"1";
          return;
        }
      }

      b1s = {
        tr: 0,
        vmPlus: 0,
        vmMinus: +"0"
      };

      if (W1s.startFrom > +"1") {
        b1s = Q1s.clone(l3s[W1s.startFrom - 1]["_totals " + W1s.name]);
      }

      for (var z3s = Math.max(W1s.startFrom, +"1"); z3s < l3s.length; z3s++) {
        n8i = "_Tr";
        n8i += "ue R";
        n8i += "a";
        n8i += "nge ";
        e1s = l3s[z3s];
        v8Kh.N3mK(192);
        Y3s = l3s[v8Kh.e3mK(0, "1", z3s)];
        Z3s = Math.abs(e1s.High - Y3s.Low);
        H4s = Math.abs(e1s.Low - Y3s.High);
        J4s = Math.max(e1s.High, Y3s.Close) - Math.min(e1s.Low, Y3s.Close);
        b1s.tr += J4s;
        b1s.vmPlus += Z3s;
        b1s.vmMinus += H4s;

        if (z3s > X3s) {
          F8i = "_True R";
          F8i += "ange ";
          v8Kh.i3mK(1);
          b1s.tr -= l3s[v8Kh.e3mK(X3s, z3s)][F8i + W1s.name];
          v8Kh.N3mK(1);
          b1s.vmPlus -= l3s[v8Kh.e3mK(X3s, z3s)]["_VMPlus " + W1s.name];
          v8Kh.N3mK(1);
          b1s.vmMinus -= l3s[v8Kh.e3mK(X3s, z3s)]["_VMMinus " + W1s.name];
        }

        e1s[n8i + W1s.name] = J4s;
        e1s["_VMPlus " + W1s.name] = Z3s;
        e1s["_VMMinus " + W1s.name] = H4s;

        if (z3s >= X3s) {
          e1s["+VI " + W1s.name] = b1s.vmPlus / b1s.tr;
          e1s["-VI " + W1s.name] = b1s.vmMinus / b1s.tr;
        }

        e1s["_totals " + W1s.name] = Q1s.clone(b1s);
      }
    };

    Q1s.Studies.studyLibrary = Q1s.extend(Q1s.Studies.studyLibrary, {
      Vortex: {
        name: c8i,
        calculateFN: Q1s.Studies.calculateVortex,
        centerline: 1,
        outputs: {
          "+VI": d8i,
          "-VI": q8i
        },
        parameters: {
          init: {
            studyOverZonesEnabled: !!"1",
            studyOverBoughtValue: 1.1,
            studyOverBoughtColor: b8i,
            studyOverSoldValue: 0.9,
            studyOverSoldColor: "auto"
          }
        },
        attributes: {
          studyOverBoughtValue: {
            min: "1" & 2147483647,
            step: "0.01"
          },
          studyOverSoldValue: {
            max: +"1",
            step: "0.01"
          }
        }
      }
    });
  }
};

V3B = function V3B(O4s) {
  var K4s, y8i, D8i;
  K4s = typeof _CIQ !== "undefined" ? _CIQ : O4s.CIQ;

  if (!K4s.Studies) {
    console.error("williamsMFI feature requires first activating studies feature.");
  } else {
    y8i = "#5f";
    y8i += "7";
    y8i += "c";
    y8i += "b8";
    D8i = "Marke";
    D8i += "t";
    D8i += " F";
    D8i += "acilitation Index";

    K4s.Studies.calculateMFI = function (E4s, n4s) {
      var h8i, g4s, B4s, i4s, j4s, U4s, h4s, E8i, z8i;
      h8i = "Scale Fa";
      T5VV.d7Kh();
      h8i += "ctor";
      g4s = n4s.chart.scrubbed;
      i4s = 0;
      j4s = n4s.inputs["Scale Factor"];

      if (!j4s) {
        j4s = n4s.study.inputs[h8i];
      }

      U4s = Math.pow(10, Number(j4s));

      if (n4s.startFrom > 1) {
        T5VV.N3mK(193);
        var m3Vu = T5VV.e3mK(16, 4, 147, 2, 20);
        i4s = g4s[n4s.startFrom - m3Vu]["_high " + n4s.name];
      }

      for (h4s = n4s.startFrom; h4s < g4s.length; h4s++) {
        if (!g4s[h4s]) continue;

        if (g4s[h4s].Volume) {
          E8i = "_";
          E8i += "hi";
          E8i += "gh";
          E8i += " ";
          z8i = "_h";
          z8i += "is";
          z8i += "t";
          g4s[h4s][n4s.name + z8i] = B4s = U4s * (g4s[h4s].High - g4s[h4s].Low) / g4s[h4s].Volume;
          g4s[h4s][E8i + n4s.name] = i4s = Math.max(i4s, B4s);
        }
      }

      n4s.outputMap = {};
      n4s.outputMap[n4s.name + "_hist"] = "";
    };

    K4s.Studies.displayMFI = function (G4s, o4s, N4s) {
      var B8i, x4s, k4s, v4s, V4s, S4s, a4s, m4s, M4s, z4s, f8i, P8i, m8i, G8i, q4s, D4s;
      B8i = "#CCCCC";
      B8i += "C";
      x4s = G4s.panels[o4s.panel];
      k4s = o4s.getContext(G4s);
      v4s = o4s.getYAxis(G4s);
      V4s = v4s.flipped ? v4s.top : v4s.bottom;
      S4s = G4s.layout.candleWidth - ("2" ^ 0);

      if (S4s < 2) {
        S4s = +"1";
      }

      a4s = K4s.Studies.determineColor(o4s.outputs.Green);
      m4s = K4s.Studies.determineColor(o4s.outputs.Fade);
      M4s = K4s.Studies.determineColor(o4s.outputs.Fake);
      z4s = K4s.Studies.determineColor(o4s.outputs.Squat);
      G4s.canvasColor("stx_histogram");

      if (!o4s.underlay) {
        k4s.globalAlpha = +"1";
      }

      k4s.fillStyle = B8i;
      G4s.startClip(o4s.panel);

      if (!o4s.highlight && G4s.highlightedDraggable) {
        k4s.globalAlpha *= 0.3;
      }

      for (var t4s = 0; t4s < N4s.length; t4s++) {
        f8i = "_";
        f8i += "hist";
        P8i = "_h";
        P8i += "i";
        P8i += "st";
        m8i = "_hi";
        m8i += "st";
        G8i = "_h";
        G8i += "i";
        G8i += "s";
        G8i += "t";
        q4s = N4s[t4s];
        T5VV.N3mK(1);
        D4s = N4s[T5VV.E3mK(1, t4s)];

        if (!D4s) {
          D4s = G4s.getPreviousBar(G4s.chart, o4s.name + G8i, t4s);
        }

        if (!q4s) continue;
        if (!D4s) ;else if (D4s[o4s.name + m8i] < q4s[o4s.name + "_hist"]) {
          if (D4s.Volume < q4s.Volume) {
            k4s.fillStyle = a4s;
          } else if (D4s.Volume > q4s.Volume) {
            k4s.fillStyle = M4s;
          }
        } else if (D4s[o4s.name + P8i] > q4s[o4s.name + f8i]) {
          if (D4s.Volume < q4s.Volume) {
            k4s.fillStyle = z4s;
          } else if (D4s.Volume > q4s.Volume) {
            k4s.fillStyle = m4s;
          }
        }

        if (q4s.candleWidth) {
          S4s = Math.floor(Math.max(+"1", q4s.candleWidth - 2));
        }

        k4s.fillRect(Math.floor(G4s.pixelFromBar(t4s, x4s.chart) - S4s / 2), Math.floor(V4s), Math.floor(S4s), Math.floor(G4s.pixelFromPrice(q4s[o4s.name + "_hist"], x4s, v4s) - V4s));
      }

      G4s.endClip();
    };

    K4s.Studies.studyLibrary = K4s.extend(K4s.Studies.studyLibrary, {
      "W MFI": {
        name: D8i,
        seriesFN: K4s.Studies.displayMFI,
        calculateFN: K4s.Studies.calculateMFI,
        yAxis: {
          ground: !!{}
        },
        range: "0 to max",
        inputs: {
          "Scale Factor": 6
        },
        outputs: {
          Green: "#8bc176",
          Fade: "#ab611f",
          Fake: y8i,
          Squat: "#ffd0cf"
        }
      }
    });
  }
};

R3B = {
  CIQ: _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"],
  SplinePlotter: _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["SplinePlotter"],
  timezoneJS: _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["timezoneJS"],
  $$: _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["$$"],
  $$$: _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["$$$"]
};






































































if (typeof __TREE_SHAKE__ === "undefined" || !__TREE_SHAKE__) {
  (R3B.CIQ || _js_standard_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]).activateImports(j2B, B2B, U2B, E2B, o2B, G2B, p2B, q2B, D2B, k2B, t2B, S2B, v2B, N2B, x2B, V2B, a2B, m2B, M2B, z2B, R2B, s2B, P2B, T2B, A2B, y2B, C2B, l2B, L2B, f2B, I2B, u2B, r2B, d2B, F2B, Q2B, w2B, W2B, b2B, e2B, X2B, Y2B, Z2B, H3B, J3B, c3B, K3B, O3B, n3B, g3B, h3B, i3B, j3B, B3B, U3B, E3B, o3B, G3B, p3B, q3B, D3B, k3B, t3B, S3B, v3B, N3B, x3B, V3B, null);
}
/* eslint-enable  */

/* jshint ignore:end   */

/* ignore jslint end   */

/***/ }),

/***/ "./chartiq/production/js/chartiq.js":
/*!******************************************!*\
  !*** ./chartiq/production/js/chartiq.js ***!
  \******************************************/
/*! exports provided: CIQ, SplinePlotter, timezoneJS, $$, $$$ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CIQ", function() { return s4z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SplinePlotter", function() { return R4z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timezoneJS", function() { return o4z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$", function() { return P4z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$$", function() { return b4z; });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 *	8.2.0
 *	Generation date: 2021-03-19T19:54:09.125Z
 *	Client name: deriv limited
 *	Package Type: Technical Analysis 8.2
 *	License type: annual
 *	Expiration date: "2022/04/01"
 *	Domain lock: ["127.0.0.1","localhost","binary.com","binary.sx","binary.me","binary.bot","deriv.com","deriv.app","deriv.me"]
 *	iFrame lock: true
 */

/***********************************************************
 * Copyright by ChartIQ, Inc.
 * Licensed under the ChartIQ, Inc. Developer License Agreement https://www.chartiq.com/developer-license-agreement
*************************************************************/

/*************************************** DO NOT MAKE CHANGES TO THIS LIBRARY FILE!! **************************************/

/* If you wish to overwrite default functionality, create a separate file with a copy of the methods you are overwriting */

/* and load that file right after the library has been loaded, but before the chart engine is instantiated.              */

/* Directly modifying library files will prevent upgrades and the ability for ChartIQ to support your solution.          */

/*************************************************************************************************************************/

/***************************************************************************/

/* Please note that manually changing the domain list or expiration dates  */

/*                                                                         */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> WILL NOT <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

/*                                                                         */

/*   modify the library locking mechanism. Any changes must be requested   */

/*                          directly from chartIQ.                         */

/***************************************************************************/
(function () {
  /* eslint-disable no-undef-init */
  var trialExpiration = undefined;
  var licenseExpiration = "2022/04/01";
  var domains = ["127.0.0.1", "localhost", "binary.com", "binary.sx", "binary.me", "binary.bot", "deriv.com", "deriv.app", "deriv.me"];
  var filesystem = false;
  var expiration;
  if (trialExpiration) expiration = new Date(trialExpiration).getTime();else if (licenseExpiration) expiration = new Date(licenseExpiration).getTime();

  if (expiration) {
    var now = new Date().getTime();

    if (expiration <= now) {
      if (trialExpiration) alert("This license has expired!");
      console.error("This license has expired!");
    } else if (trialExpiration) {
      var diffDays = Math.round((expiration - now) / (1000 * 60 * 60 * 24));

      if (diffDays < 3) {
        alert("This trial license expires in " + diffDays + " days!");
        console.log("WARNING: This trial license expires in " + diffDays + " days!");
      }
    }
  }

  if (typeof document !== 'undefined') {
    if (filesystem === true && document.location.protocol == 'file:') {
      return; // valid environment, skip domain check
    }

    if (domains && domains.length > 0) {
      var href = document.location.href;
      var found = false;

      for (var i = 0; i < domains.length; i++) {
        if (href.indexOf(domains[i]) > -1) {
          found = true;
          break;
        }
      }

      if (!found) {
        alert("ERROR: Not licensed for domain " + href);
        console.error("ERROR: Not licensed for domain " + href);
      }
    }
  }
})();
/* eslint-disable no-extra-parens */

/* eslint-disable */

/* jshint ignore:start */

/* ignore jslint start */


k7DD[10078] = function () {
  var K = 2;

  for (; K !== 9;) {
    switch (K) {
      case 1:
        return globalThis;
        break;

      case 2:
        K = (typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object" ? 1 : 5;
        break;

      case 5:
        var A;

        try {
          var O = 2;

          for (; O !== 6;) {
            switch (O) {
              case 5:
                A["uzg0s"] = A;
                O = 4;
                break;

              case 4:
                O = typeof uzg0s === "undefined" ? 3 : 9;
                break;

              case 2:
                Object["defineProperty"](Object["prototype"], "hQWh$", {
                  '\x67\x65\x74': function get() {
                    var o = 2;

                    for (; o !== 1;) {
                      switch (o) {
                        case 2:
                          return this;
                          break;
                      }
                    }
                  },
                  '\x63\x6f\x6e\x66\x69\x67\x75\x72\x61\x62\x6c\x65': true
                });
                A = hQWh$;
                O = 5;
                break;

              case 3:
                throw "";
                O = 9;
                break;

              case 9:
                delete A["uzg0s"];
                var C = Object["prototype"];
                delete C["hQWh$"];
                O = 6;
                break;
            }
          }
        } catch (h) {
          A = window;
        }

        return A;
        break;
    }
  }
}();

k7DD[131077] = C5ss(k7DD[10078]);
k7DD[141034] = n7BB(k7DD[10078]);
k7DD[265782] = c055(k7DD[10078]);
k7DD[286920] = z6HH(k7DD[10078]);

function c055(N0X) {
  function W1X(P0X) {
    var k0X = 2;

    for (; k0X !== 5;) {
      switch (k0X) {
        case 2:
          var t0X = [arguments];
          return t0X[0][0].Array;
          break;
      }
    }
  }

  function u1X(D0X, n0X, z0X, w0X, V0X) {
    var W0X = 2;

    for (; W0X !== 14;) {
      switch (W0X) {
        case 2:
          var q0X = [arguments];
          q0X[4] = "eProperty";
          q0X[8] = "";
          q0X[8] = "fin";
          q0X[1] = "";
          q0X[1] = "de";
          W0X = 8;
          break;

        case 8:
          q0X[2] = 2;
          q0X[2] = 8;

          try {
            var R0X = 2;

            for (; R0X !== 8;) {
              switch (R0X) {
                case 9:
                  q0X[3][q0X[0][4]] = q0X[5].value;
                  R0X = 8;
                  break;

                case 2:
                  q0X[5] = {};
                  q0X[6] = (1, q0X[0][1])(q0X[0][0]);
                  q0X[3] = [q0X[2], q0X[6].prototype][q0X[0][3]];
                  q0X[5].value = q0X[3][q0X[0][2]];

                  try {
                    var u0X = 2;

                    for (; u0X !== 3;) {
                      switch (u0X) {
                        case 5:
                          q0X[9] += q0X[4];
                          q0X[0][0].Object[q0X[9]](q0X[3], q0X[0][4], q0X[5]);
                          u0X = 3;
                          break;

                        case 2:
                          q0X[9] = q0X[1];
                          q0X[9] += q0X[8];
                          u0X = 5;
                          break;
                      }
                    }
                  } catch (B0X) {}

                  R0X = 9;
                  break;
              }
            }
          } catch (h0X) {}

          W0X = 14;
          break;
      }
    }
  }

  var Q0X = 2;

  for (; Q0X !== 15;) {
    switch (Q0X) {
      case 16:
        k1X(W1X, "map", L0X[1], L0X[6]);
        Q0X = 15;
        break;

      case 2:
        var L0X = [arguments];
        L0X[5] = "";
        L0X[9] = "X";
        L0X[5] = "55";
        Q0X = 3;
        break;

      case 3:
        L0X[7] = "7";
        L0X[4] = "";
        L0X[4] = "Z";
        L0X[1] = 3;
        L0X[1] = 6;
        L0X[1] = 1;
        Q0X = 13;
        break;

      case 17:
        k1X(R1X, "replace", L0X[1], L0X[3]);
        Q0X = 16;
        break;

      case 18:
        var k1X = function k1X(J0X, a0X, s0X, b0X) {
          var x0X = 2;

          for (; x0X !== 5;) {
            switch (x0X) {
              case 2:
                var e0X = [arguments];
                x0X = 1;
                break;

              case 1:
                u1X(L0X[0][0], e0X[0][0], e0X[0][1], e0X[0][2], e0X[0][3]);
                x0X = 5;
                break;
            }
          }
        };

        Q0X = 17;
        break;

      case 13:
        L0X[6] = L0X[4];
        L0X[6] += L0X[7];
        L0X[6] += L0X[5];
        L0X[3] = L0X[9];
        Q0X = 20;
        break;

      case 20:
        L0X[3] += L0X[7];
        L0X[3] += L0X[5];
        Q0X = 18;
        break;
    }
  }

  function R1X(A0X) {
    var T0X = 2;

    for (; T0X !== 5;) {
      switch (T0X) {
        case 2:
          var G0X = [arguments];
          return G0X[0][0].String;
          break;
      }
    }
  }
}

k7DD.a0C = function () {
  return typeof k7DD[397153].x5A === 'function' ? k7DD[397153].x5A.apply(k7DD[397153], arguments) : k7DD[397153].x5A;
};

k7DD.q0C = function () {
  return typeof k7DD[397153].L5A === 'function' ? k7DD[397153].L5A.apply(k7DD[397153], arguments) : k7DD[397153].L5A;
};

k7DD[248996] = function () {
  var b51 = function b51(L51, R51) {
    var Z51 = R51 & 0xffff;
    var w51 = R51 - Z51;
    return (w51 * L51 | 0) + (Z51 * L51 | 0) | 0;
  },
      J51 = function J51(h51, m51, I51) {
    var M51 = 0xcc9e2d51,
        o51 = 0x1b873593;
    var Q51 = I51;
    var t51 = m51 & ~0x3;

    for (var a51 = 0; a51 < t51; a51 += 4) {
      var i51 = h51.o5ss(a51) & 0xff | (h51.o5ss(a51 + 1) & 0xff) << 8 | (h51.o5ss(a51 + 2) & 0xff) << 16 | (h51.o5ss(a51 + 3) & 0xff) << 24;
      i51 = b51(i51, M51);
      i51 = (i51 & 0x1ffff) << 15 | i51 >>> 17;
      i51 = b51(i51, o51);
      Q51 ^= i51;
      Q51 = (Q51 & 0x7ffff) << 13 | Q51 >>> 19;
      Q51 = Q51 * 5 + 0xe6546b64 | 0;
    }

    i51 = 0;

    switch (m51 % 4) {
      case 3:
        i51 = (h51.o5ss(t51 + 2) & 0xff) << 16;

      case 2:
        i51 |= (h51.o5ss(t51 + 1) & 0xff) << 8;

      case 1:
        i51 |= h51.o5ss(t51) & 0xff;
        i51 = b51(i51, M51);
        i51 = (i51 & 0x1ffff) << 15 | i51 >>> 17;
        i51 = b51(i51, o51);
        Q51 ^= i51;
    }

    Q51 ^= m51;
    Q51 ^= Q51 >>> 16;
    Q51 = b51(Q51, 0x85ebca6b);
    Q51 ^= Q51 >>> 13;
    Q51 = b51(Q51, 0xc2b2ae35);
    Q51 ^= Q51 >>> 16;
    return Q51;
  };

  return {
    G51: J51
  };
}();

function C5ss(j6U) {
  var d6U = 2;

  for (; d6U !== 12;) {
    switch (d6U) {
      case 2:
        var J6U = [arguments];
        J6U[7] = "5s";
        J6U[9] = "s";
        J6U[4] = "";
        J6U[4] = "o";
        d6U = 9;
        break;

      case 9:
        J6U[5] = 1;
        J6U[3] = J6U[4];
        J6U[3] += J6U[7];
        J6U[3] += J6U[9];
        d6U = 14;
        break;

      case 14:
        var f7U = function f7U(y6U, e6U, w6U, C6U) {
          var v6U = 2;

          for (; v6U !== 5;) {
            switch (v6U) {
              case 2:
                var g6U = [arguments];
                N7U(J6U[0][0], g6U[0][0], g6U[0][1], g6U[0][2], g6U[0][3]);
                v6U = 5;
                break;
            }
          }
        };

        d6U = 13;
        break;

      case 13:
        f7U(D7U, "charCodeAt", J6U[5], J6U[3]);
        d6U = 12;
        break;
    }
  }

  function D7U(t6U) {
    var n6U = 2;

    for (; n6U !== 5;) {
      switch (n6U) {
        case 2:
          var i6U = [arguments];
          return i6U[0][0].String;
          break;
      }
    }
  }

  function N7U(z6U, p6U, q6U, F6U, I6U) {
    var A6U = 2;

    for (; A6U !== 13;) {
      switch (A6U) {
        case 7:
          h6U[7] = "definePrope";
          h6U[6] = 8;

          try {
            var x6U = 2;

            for (; x6U !== 8;) {
              switch (x6U) {
                case 2:
                  h6U[8] = {};
                  h6U[5] = (1, h6U[0][1])(h6U[0][0]);
                  h6U[1] = [h6U[6], h6U[5].prototype][h6U[0][3]];
                  h6U[8].value = h6U[1][h6U[0][2]];

                  try {
                    var s6U = 2;

                    for (; s6U !== 3;) {
                      switch (s6U) {
                        case 2:
                          h6U[4] = h6U[7];
                          h6U[4] += h6U[3];
                          h6U[4] += h6U[2];
                          h6U[0][0].Object[h6U[4]](h6U[1], h6U[0][4], h6U[8]);
                          s6U = 3;
                          break;
                      }
                    }
                  } catch (K7U) {}

                  h6U[1][h6U[0][4]] = h6U[8].value;
                  x6U = 8;
                  break;
              }
            }
          } catch (H7U) {}

          A6U = 13;
          break;

        case 2:
          var h6U = [arguments];
          h6U[2] = "";
          h6U[2] = "";
          h6U[2] = "y";
          h6U[3] = "";
          h6U[3] = "rt";
          h6U[7] = "";
          A6U = 7;
          break;
      }
    }
  }
}

k7DD.j0C = function () {
  return typeof k7DD[397153].x5A === 'function' ? k7DD[397153].x5A.apply(k7DD[397153], arguments) : k7DD[397153].x5A;
};

k7DD[22341] = function (j16) {
  function R16(W16) {
    var O0X = 2;

    for (; O0X !== 15;) {
      switch (O0X) {
        case 5:
          V16 = A16[j16[4]];
          O0X = 4;
          break;

        case 12:
          O0X = !h16-- ? 11 : 10;
          break;

        case 19:
          return i16;
          break;

        case 4:
          O0X = !h16-- ? 3 : 9;
          break;

        case 14:
          O0X = !h16-- ? 13 : 12;
          break;

        case 6:
          n16 = T16 && V16(T16, H16);
          O0X = 14;
          break;

        case 2:
          var i16, H16, T16, n16, L16, v16, V16;
          O0X = 1;
          break;

        case 3:
          H16 = 26;
          O0X = 9;
          break;

        case 1:
          O0X = !h16-- ? 5 : 4;
          break;

        case 10:
          O0X = v16 >= 0 && n16 >= 0 ? 20 : 18;
          break;

        case 18:
          O0X = v16 >= 0 ? 17 : 16;
          break;

        case 20:
          i16 = W16 - v16 > H16 && n16 - W16 > H16;
          O0X = 19;
          break;

        case 9:
          O0X = !h16-- ? 8 : 7;
          break;

        case 13:
          L16 = j16[7];
          O0X = 12;
          break;

        case 16:
          i16 = n16 - W16 > H16;
          O0X = 19;
          break;

        case 17:
          i16 = W16 - v16 > H16;
          O0X = 19;
          break;

        case 7:
          O0X = !h16-- ? 6 : 14;
          break;

        case 11:
          v16 = (L16 || L16 === 0) && V16(L16, H16);
          O0X = 10;
          break;

        case 8:
          T16 = j16[6];
          O0X = 7;
          break;
      }
    }
  }

  var r0X = 2;

  for (; r0X !== 10;) {
    switch (r0X) {
      case 11:
        return {
          g16: function g16(a16) {
            var K0X = 2;

            for (; K0X !== 6;) {
              switch (K0X) {
                case 5:
                  K0X = !h16-- ? 4 : 3;
                  break;

                case 4:
                  z16 = R16(F16);
                  K0X = 3;
                  break;

                case 8:
                  var r16 = function (G16, M16) {
                    var I0X = 2;

                    for (; I0X !== 10;) {
                      switch (I0X) {
                        case 2:
                          I0X = typeof G16 === 'undefined' && typeof a16 !== 'undefined' ? 1 : 5;
                          break;

                        case 1:
                          G16 = a16;
                          I0X = 5;
                          break;

                        case 6:
                          I0X = J16 === 0 ? 14 : 12;
                          break;

                        case 5:
                          I0X = typeof M16 === 'undefined' && typeof j16 !== 'undefined' ? 4 : 3;
                          break;

                        case 14:
                          I16 = t16;
                          I0X = 13;
                          break;

                        case 4:
                          M16 = j16;
                          I0X = 3;
                          break;

                        case 3:
                          var I16,
                              J16 = 0;
                          I0X = 9;
                          break;

                        case 9:
                          I0X = J16 < G16[M16[5]] ? 8 : 11;
                          break;

                        case 12:
                          I16 = I16 ^ t16;
                          I0X = 13;
                          break;

                        case 11:
                          return I16;
                          break;

                        case 8:
                          var S16 = A16[M16[4]](G16[M16[2]](J16), 16)[M16[3]](2);
                          var t16 = S16[M16[2]](S16[M16[5]] - 1);
                          I0X = 6;
                          break;

                        case 13:
                          J16++;
                          I0X = 9;
                          break;
                      }
                    }
                  }(undefined, undefined);

                  return r16 ? z16 : !z16;
                  break;

                case 1:
                  K0X = F16 > k16 ? 5 : 8;
                  break;

                case 2:
                  var F16 = new A16[j16[0]]()[j16[1]]();
                  K0X = 1;
                  break;

                case 3:
                  K0X = !h16-- ? 9 : 8;
                  break;

                case 9:
                  k16 = F16 + 60000;
                  K0X = 8;
                  break;
              }
            }
          }
        };
        break;

      case 8:
        r0X = !h16-- ? 7 : 6;
        break;

      case 1:
        r0X = !h16-- ? 5 : 4;
        break;

      case 2:
        var A16, B16, Y16, h16;
        r0X = 1;
        break;

      case 4:
        var Q16 = 'fromCharCode',
            x16 = 'RegExp';
        r0X = 3;
        break;

      case 5:
        A16 = k7DD[10078];
        r0X = 4;
        break;

      case 3:
        r0X = !h16-- ? 9 : 8;
        break;

      case 9:
        B16 = _typeof(Q16);
        r0X = 8;
        break;

      case 14:
        j16 = j16.Z755(function (y16) {
          var o0X = 2;

          for (; o0X !== 13;) {
            switch (o0X) {
              case 9:
                C16 += A16[Y16][Q16](y16[m16] + 120);
                o0X = 8;
                break;

              case 4:
                var m16 = 0;
                o0X = 3;
                break;

              case 1:
                o0X = !h16-- ? 5 : 4;
                break;

              case 8:
                m16++;
                o0X = 3;
                break;

              case 2:
                var C16;
                o0X = 1;
                break;

              case 6:
                return;
                break;

              case 5:
                C16 = '';
                o0X = 4;
                break;

              case 7:
                o0X = !C16 ? 6 : 14;
                break;

              case 3:
                o0X = m16 < y16.length ? 9 : 7;
                break;

              case 14:
                return C16;
                break;
            }
          }
        });
        r0X = 13;
        break;

      case 13:
        r0X = !h16-- ? 12 : 11;
        break;

      case 6:
        r0X = !h16-- ? 14 : 13;
        break;

      case 7:
        Y16 = B16.X755(new A16[x16]("^['-|]"), 'S');
        r0X = 6;
        break;

      case 12:
        var z16,
            k16 = 0;
        r0X = 11;
        break;
    }
  }
}([[-52, -23, -4, -19], [-17, -19, -4, -36, -15, -11, -19], [-21, -16, -23, -6, -55, -4], [-4, -9, -37, -4, -6, -15, -10, -17], [-8, -23, -6, -5, -19, -47, -10, -4], [-12, -19, -10, -17, -4, -16], [-65, -10, -18, -16, -20, -8, -13, -23, -13], []]);

function z6HH(C71) {
  function P51(T71) {
    var i71 = 2;

    for (; i71 !== 5;) {
      switch (i71) {
        case 2:
          var A71 = [arguments];
          return A71[0][0].RegExp;
          break;
      }
    }
  }

  function y51(x71, q71, j71, M71, l71) {
    var B71 = 2;

    for (; B71 !== 7;) {
      switch (B71) {
        case 3:
          X01[3] = "fine";
          X01[5] = "de";

          try {
            var g71 = 2;

            for (; g71 !== 8;) {
              switch (g71) {
                case 4:
                  X01[2].value = X01[1][X01[0][2]];

                  try {
                    var u71 = 2;

                    for (; u71 !== 3;) {
                      switch (u71) {
                        case 2:
                          X01[9] = X01[5];
                          X01[9] += X01[3];
                          X01[9] += X01[6];
                          X01[0][0].Object[X01[9]](X01[1], X01[0][4], X01[2]);
                          u71 = 3;
                          break;
                      }
                    }
                  } catch (x01) {}

                  X01[1][X01[0][4]] = X01[2].value;
                  g71 = 8;
                  break;

                case 2:
                  X01[2] = {};
                  X01[8] = (1, X01[0][1])(X01[0][0]);
                  X01[1] = [X01[8], X01[8].prototype][X01[0][3]];
                  g71 = 4;
                  break;
              }
            }
          } catch (q01) {}

          B71 = 7;
          break;

        case 2:
          var X01 = [arguments];
          X01[6] = "";
          X01[6] = "";
          X01[6] = "Property";
          B71 = 3;
          break;
      }
    }
  }

  function n51(L71) {
    var r71 = 2;

    for (; r71 !== 5;) {
      switch (r71) {
        case 2:
          var W01 = [arguments];
          return W01[0][0].Function;
          break;
      }
    }
  }

  var Y71 = 2;

  for (; Y71 !== 70;) {
    switch (Y71) {
      case 29:
        U01[69] = "6";
        U01[79] = "n";
        U01[45] = 8;
        U01[45] = 1;
        Y71 = 42;
        break;

      case 48:
        U01[93] = U01[23];
        U01[93] += U01[9];
        U01[93] += U01[7];
        U01[58] = U01[2];
        Y71 = 65;
        break;

      case 76:
        V51(O51, "push", U01[45], U01[59]);
        Y71 = 75;
        break;

      case 65:
        U01[58] += U01[44];
        U01[58] += U01[5];
        U01[22] = U01[3];
        U01[22] += U01[8];
        Y71 = 61;
        break;

      case 57:
        U01[59] = U01[6];
        U01[59] += U01[44];
        U01[59] += U01[5];
        Y71 = 77;
        break;

      case 61:
        U01[22] += U01[4];
        U01[63] = U01[1];
        U01[63] += U01[44];
        U01[63] += U01[5];
        Y71 = 57;
        break;

      case 35:
        U01[23] = "_";
        U01[75] = "";
        U01[75] = "m";
        U01[86] = "";
        U01[86] = "HH";
        U01[79] = "";
        Y71 = 29;
        break;

      case 19:
        U01[5] = "";
        U01[5] = "H";
        U01[44] = "6H";
        U01[35] = "";
        Y71 = 15;
        break;

      case 14:
        U01[2] = "k";
        U01[3] = "__";
        U01[9] = "";
        U01[9] = "";
        U01[9] = "_resi";
        U01[7] = "dual";
        Y71 = 19;
        break;

      case 37:
        U01[27] += U01[69];
        U01[27] += U01[86];
        U01[26] = U01[23];
        U01[26] += U01[17];
        Y71 = 52;
        break;

      case 75:
        V51(P51, "test", U01[45], U01[63]);
        Y71 = 74;
        break;

      case 9:
        U01[8] = "";
        U01[8] = "abstra";
        U01[4] = "ct";
        U01[2] = "";
        Y71 = 14;
        break;

      case 24:
        U01[17] = "";
        U01[17] = "";
        U01[17] = "_op";
        U01[23] = "";
        Y71 = 35;
        break;

      case 74:
        V51(z51, U01[22], U01[78], U01[58]);
        Y71 = 73;
        break;

      case 71:
        V51(n51, "apply", U01[45], U01[89]);
        Y71 = 70;
        break;

      case 73:
        V51(z51, U01[93], U01[78], U01[98]);
        Y71 = 72;
        break;

      case 42:
        U01[78] = 0;
        U01[89] = U01[79];
        U01[89] += U01[69];
        U01[89] += U01[86];
        U01[27] = U01[75];
        Y71 = 37;
        break;

      case 77:
        var V51 = function V51(t71, d71, e71, o71) {
          var v71 = 2;

          for (; v71 !== 5;) {
            switch (v71) {
              case 2:
                var J01 = [arguments];
                y51(U01[0][0], J01[0][0], J01[0][1], J01[0][2], J01[0][3]);
                v71 = 5;
                break;
            }
          }
        };

        Y71 = 76;
        break;

      case 15:
        U01[35] = "K";
        U01[36] = "";
        U01[36] = "";
        U01[36] = "timize";
        Y71 = 24;
        break;

      case 52:
        U01[26] += U01[36];
        U01[98] = U01[35];
        U01[98] += U01[44];
        U01[98] += U01[5];
        Y71 = 48;
        break;

      case 72:
        V51(z51, U01[26], U01[78], U01[27]);
        Y71 = 71;
        break;

      case 2:
        var U01 = [arguments];
        U01[6] = "";
        U01[6] = "L";
        U01[1] = "";
        U01[1] = "j";
        Y71 = 9;
        break;
    }
  }

  function O51(G71) {
    var I71 = 2;

    for (; I71 !== 5;) {
      switch (I71) {
        case 2:
          var p01 = [arguments];
          return p01[0][0].Array;
          break;
      }
    }
  }

  function z51(s71) {
    var c71 = 2;

    for (; c71 !== 5;) {
      switch (c71) {
        case 2:
          var Z01 = [arguments];
          return Z01[0][0];
          break;
      }
    }
  }
}

function k7DD() {}

k7DD.X0X = function () {
  return typeof k7DD[22341].g16 === 'function' ? k7DD[22341].g16.apply(k7DD[22341], arguments) : k7DD[22341].g16;
};

k7DD[538215] = function (p0L) {
  return {
    Y0L: function Y0L() {
      var f7L,
          T7L = arguments;

      switch (p0L) {
        case 16:
          f7L = T7L[0] ^ T7L[1];
          break;

        case 3:
          f7L = T7L[1] / T7L[3] + T7L[0] + T7L[2];
          break;

        case 74:
          f7L = T7L[6] + T7L[3] + T7L[5] + T7L[4] + T7L[2] + T7L[0] + T7L[1];
          break;

        case 22:
          f7L = T7L[1] + T7L[2] * T7L[0];
          break;

        case 5:
          f7L = (T7L[2] - T7L[0]) / T7L[1] - T7L[3];
          break;

        case 46:
          f7L = (T7L[3] - T7L[0]) / T7L[2] + +T7L[1];
          break;

        case 96:
          f7L = T7L[5] / T7L[1] * (T7L[6] * T7L[0] * T7L[2] + T7L[3]) + T7L[4];
          break;

        case 125:
          f7L = T7L[1] / T7L[2] + T7L[3] - T7L[0];
          break;

        case 88:
          f7L = T7L[3] / T7L[2] * T7L[4] + T7L[1] + T7L[0];
          break;

        case 73:
          f7L = (T7L[2] - T7L[3]) * T7L[1] + T7L[0];
          break;

        case 108:
          f7L = T7L[4] + T7L[1] - T7L[0] - T7L[3] + T7L[2];
          break;

        case 93:
          f7L = T7L[1] / T7L[2] * T7L[3] * T7L[4] + T7L[0];
          break;

        case 151:
          f7L = T7L[0] / (T7L[1] << T7L[2]);
          break;

        case 138:
          f7L = (T7L[1] + T7L[0] + T7L[4]) / T7L[3] - T7L[2];
          break;

        case 86:
          f7L = (T7L[2] + T7L[3] + T7L[4]) * T7L[0] - T7L[1];
          break;

        case 25:
          f7L = T7L[2] / T7L[0] + T7L[1];
          break;

        case 7:
          f7L = T7L[4] / T7L[1] * T7L[0] + T7L[2] - T7L[3];
          break;

        case 139:
          f7L = T7L[0] != T7L[1];
          break;

        case 21:
          f7L = (T7L[2] - T7L[1]) * (T7L[3] - T7L[4]) / (T7L[5] - T7L[0]);
          break;

        case 76:
          f7L = T7L[10] + T7L[8] + T7L[2] + T7L[4] + T7L[3] + T7L[7] + T7L[9] + T7L[0] + T7L[6] + T7L[1] + T7L[5];
          break;

        case 147:
          f7L = (T7L[3] + T7L[1] - T7L[2]) * T7L[4] - T7L[0];
          break;

        case 152:
          f7L = (T7L[2] - T7L[1]) * T7L[0] * T7L[3] + T7L[4];
          break;

        case 133:
          f7L = T7L[1] + T7L[2] / T7L[0] * T7L[3];
          break;

        case 59:
          f7L = (T7L[4] / T7L[3] + T7L[1]) / T7L[2] + T7L[0];
          break;

        case 78:
          f7L = T7L[0] + T7L[2] + T7L[1] - T7L[3];
          break;

        case 112:
          f7L = (-T7L[2] - T7L[0]) * T7L[1] * T7L[4] + T7L[3];
          break;

        case 62:
          f7L = T7L[0] / T7L[4] - T7L[2] - T7L[1] + T7L[3];
          break;

        case 81:
          f7L = T7L[1] << T7L[0];
          break;

        case 36:
          f7L = -T7L[1] * T7L[2] + T7L[0];
          break;

        case 31:
          f7L = (T7L[4] - T7L[2]) / T7L[0] + T7L[1] + T7L[3];
          break;

        case 123:
          f7L = (T7L[2] - T7L[0]) * T7L[1] + T7L[4] + T7L[3];
          break;

        case 66:
          f7L = T7L[2] - T7L[0] + T7L[3] - T7L[1] - T7L[4];
          break;

        case 30:
          f7L = T7L[0] - T7L[1] - T7L[2] + T7L[3];
          break;

        case 48:
          f7L = T7L[5] + (T7L[4] - T7L[7]) * ((T7L[2] - T7L[0]) / T7L[3] - T7L[1]) * T7L[6];
          break;

        case 0:
          f7L = -T7L[2] / T7L[0] / T7L[1] + T7L[3];
          break;

        case 135:
          f7L = -T7L[1] * T7L[0] - T7L[2] + T7L[3];
          break;

        case 148:
          f7L = (T7L[1] - T7L[2]) / T7L[4] - T7L[3] + T7L[0];
          break;

        case 107:
          f7L = (T7L[1] - T7L[3]) / T7L[4] * T7L[0] + T7L[2];
          break;

        case 127:
          f7L = T7L[1] * (T7L[0] * T7L[2]);
          break;

        case 98:
          f7L = T7L[1] !== T7L[0];
          break;

        case 8:
          f7L = T7L[0] + T7L[1];
          break;

        case 105:
          f7L = T7L[0] * T7L[3] / T7L[1] * T7L[2] - T7L[4];
          break;

        case 1:
          f7L = T7L[0] - T7L[1];
          break;

        case 87:
          f7L = (T7L[3] + T7L[4]) / T7L[1] / T7L[0] - T7L[2];
          break;

        case 121:
          f7L = (-T7L[2] * T7L[4] - T7L[1]) * T7L[0] + T7L[3];
          break;

        case 24:
          f7L = T7L[1] * T7L[2] * T7L[3] / T7L[4] - T7L[0];
          break;

        case 14:
          f7L = -T7L[0] - T7L[2] + T7L[1];
          break;

        case 61:
          f7L = (T7L[0] - T7L[1]) / T7L[4] + T7L[2] - T7L[3];
          break;

        case 47:
          f7L = T7L[1] + (T7L[0] - T7L[2]) * T7L[3] * T7L[4];
          break;

        case 144:
          f7L = (T7L[1] / T7L[3] + T7L[2]) % T7L[0];
          break;

        case 113:
          f7L = T7L[0] === T7L[1];
          break;

        case 37:
          f7L = -T7L[1] + T7L[0];
          break;

        case 54:
          f7L = -T7L[0] + T7L[2] + T7L[1];
          break;

        case 35:
          f7L = T7L[0] / T7L[1];
          break;

        case 136:
          f7L = (-T7L[3] + T7L[0] - T7L[2]) / T7L[4] + T7L[1];
          break;

        case 23:
          f7L = T7L[1] | T7L[0];
          break;

        case 45:
          f7L = (T7L[3] - T7L[1]) / T7L[2] + T7L[0];
          break;

        case 89:
          f7L = T7L[4] * T7L[3] + T7L[0] + T7L[1] - T7L[2];
          break;

        case 134:
          f7L = T7L[0] > T7L[1];
          break;

        case 42:
          f7L = T7L[3] * (T7L[4] - T7L[1] / (T7L[0] - T7L[2]));
          break;

        case 126:
          f7L = T7L[2] / T7L[1] / T7L[3] * T7L[4] - T7L[0];
          break;

        case 130:
          f7L = T7L[3] * T7L[1] % (T7L[2] << T7L[0]);
          break;

        case 44:
          f7L = (T7L[2] + T7L[1]) / T7L[0];
          break;

        case 119:
          f7L = T7L[1] * (T7L[2] - T7L[0]) + T7L[3];
          break;

        case 142:
          f7L = T7L[3] / T7L[4] / T7L[2] - T7L[0] + T7L[1];
          break;

        case 29:
          f7L = T7L[2] | T7L[1] << T7L[3] | T7L[4] << T7L[0];
          break;

        case 77:
          f7L = T7L[0] * T7L[2] * T7L[3] * T7L[1];
          break;

        case 99:
          f7L = (T7L[5] - T7L[4]) * (T7L[6] - T7L[0]) - (T7L[1] - T7L[2]) * (T7L[3] - T7L[7]);
          break;

        case 137:
          f7L = +T7L[1] / T7L[0];
          break;

        case 28:
          f7L = T7L[4] * T7L[0] * T7L[1] * T7L[3] - T7L[2];
          break;

        case 34:
          f7L = T7L[0] - T7L[2] + T7L[1] + T7L[3];
          break;

        case 58:
          f7L = T7L[2] * T7L[1] / T7L[3] + T7L[0] + T7L[4];
          break;

        case 53:
          f7L = T7L[1] / T7L[0] * T7L[3] - T7L[2];
          break;

        case 51:
          f7L = T7L[0] * (T7L[2] & T7L[1]);
          break;

        case 109:
          f7L = (T7L[0] * T7L[2] + T7L[4]) * T7L[3] - T7L[1];
          break;

        case 69:
          f7L = (T7L[4] - T7L[1] + T7L[0]) / T7L[3] - T7L[2];
          break;

        case 32:
          f7L = T7L[0] - T7L[2] + T7L[1];
          break;

        case 95:
          f7L = T7L[4] / T7L[5] * T7L[1] * T7L[0] * T7L[3] + T7L[2];
          break;

        case 80:
          f7L = (T7L[2] / T7L[4] + T7L[3]) * T7L[0] + T7L[1];
          break;

        case 12:
          f7L = (T7L[3] + T7L[1]) / T7L[2] - T7L[0];
          break;

        case 68:
          f7L = T7L[2] * T7L[1] * T7L[3] / T7L[4] + T7L[0];
          break;

        case 114:
          f7L = T7L[1] - (T7L[2] - T7L[0]);
          break;

        case 146:
          f7L = T7L[1] / T7L[2] * T7L[0];
          break;

        case 2:
          f7L = (T7L[2] + T7L[3]) / T7L[4] + T7L[0] - T7L[1];
          break;

        case 79:
          f7L = T7L[1] + T7L[3] + T7L[4] + T7L[0] + T7L[2];
          break;

        case 115:
          f7L = T7L[0] - T7L[1] * T7L[2];
          break;

        case 56:
          f7L = (T7L[2] + T7L[3] + T7L[4]) / T7L[1] + T7L[0];
          break;

        case 70:
          f7L = T7L[0] * T7L[3] - T7L[2] - T7L[1];
          break;

        case 92:
          f7L = T7L[0] / +T7L[1];
          break;

        case 82:
          f7L = T7L[1] < T7L[0];
          break;

        case 145:
          f7L = +T7L[3] * T7L[2] * T7L[1] * T7L[4] * T7L[0];
          break;

        case 39:
          f7L = (T7L[2] + T7L[1]) * T7L[3] - T7L[0];
          break;

        case 4:
          f7L = T7L[2] - T7L[0] - T7L[1];
          break;

        case 111:
          f7L = T7L[2] + T7L[1] + T7L[3] + T7L[0];
          break;

        case 120:
          f7L = T7L[3] - T7L[4] + T7L[1] - T7L[0] + T7L[2];
          break;

        case 94:
          f7L = -T7L[2] / T7L[4] * (T7L[5] * (T7L[1] - T7L[6]) - T7L[0]) + T7L[3];
          break;

        case 110:
          f7L = T7L[0] + T7L[3] - T7L[4] + T7L[1] - T7L[2];
          break;

        case 72:
          f7L = T7L[1] / T7L[2] - T7L[3] + T7L[0];
          break;

        case 143:
          f7L = -T7L[2] + T7L[1] - T7L[0] + T7L[4] - T7L[3];
          break;

        case 100:
          f7L = T7L[1] == T7L[0];
          break;

        case 140:
          f7L = T7L[0] / (T7L[1] >> T7L[2]);
          break;

        case 102:
          f7L = T7L[2] - T7L[0] + T7L[3] - T7L[1];
          break;

        case 129:
          f7L = T7L[0] % T7L[1];
          break;

        case 26:
          f7L = -T7L[4] / T7L[3] / T7L[0] * T7L[1] + T7L[2];
          break;

        case 141:
          f7L = (T7L[2] / T7L[0] + T7L[1]) / T7L[4] - T7L[3];
          break;

        case 20:
          f7L = T7L[1] * -T7L[0];
          break;

        case 19:
          f7L = T7L[0] & T7L[1];
          break;

        case 84:
          f7L = (T7L[3] * T7L[2] - T7L[0]) / T7L[4] - T7L[1];
          break;

        case 149:
          f7L = -T7L[2] - T7L[0] + T7L[3] + T7L[1];
          break;

        case 27:
          f7L = T7L[0] * T7L[2] * T7L[3] - T7L[1];
          break;

        case 131:
          f7L = T7L[2] - T7L[4] / T7L[0] + (T7L[3] - T7L[1]);
          break;

        case 103:
          f7L = (T7L[4] - T7L[2] - T7L[1]) / T7L[0] + T7L[3];
          break;

        case 116:
          f7L = T7L[0] - +T7L[1];
          break;

        case 40:
          f7L = (T7L[4] + T7L[1]) / T7L[2] / T7L[3] + T7L[0];
          break;

        case 65:
          f7L = T7L[1] - T7L[2] - T7L[3] - T7L[0];
          break;

        case 124:
          f7L = T7L[2] - T7L[1] - (T7L[3] - T7L[0]);
          break;

        case 11:
          f7L = T7L[0] * T7L[2] / T7L[1] - T7L[3];
          break;

        case 60:
          f7L = T7L[2] / T7L[0] - T7L[1];
          break;

        case 10:
          f7L = T7L[3] / T7L[1] / T7L[2] + T7L[0];
          break;

        case 150:
          f7L = T7L[0] + T7L[2] + T7L[1] - T7L[3] - T7L[4];
          break;

        case 33:
          f7L = T7L[1] * T7L[2] - T7L[0];
          break;

        case 83:
          f7L = (T7L[2] + T7L[4]) / T7L[3] - T7L[1] + T7L[0];
          break;

        case 97:
          f7L = T7L[4] * (T7L[5] * T7L[1] * T7L[2] + T7L[3]) + T7L[0];
          break;

        case 106:
          f7L = T7L[3] * T7L[0] + T7L[1] - T7L[2];
          break;

        case 132:
          f7L = T7L[2] + (T7L[0] + +T7L[1]);
          break;

        case 15:
          f7L = -T7L[2] / T7L[0] + T7L[1];
          break;

        case 50:
          f7L = T7L[3] - (T7L[2] | T7L[0]) / +T7L[1];
          break;

        case 154:
          f7L = (-T7L[0] + T7L[3] - T7L[2]) * T7L[1] + T7L[4];
          break;

        case 49:
          f7L = T7L[2] + T7L[0] / T7L[1];
          break;

        case 101:
          f7L = T7L[0] + T7L[1] * (T7L[3] - T7L[2]);
          break;

        case 64:
          f7L = (T7L[2] + T7L[1]) * T7L[3] * T7L[0] - T7L[4];
          break;

        case 153:
          f7L = T7L[3] * T7L[0] - T7L[1] + T7L[2] - T7L[4];
          break;

        case 41:
          f7L = T7L[1] + T7L[5] + T7L[9] + T7L[4] + T7L[2] + T7L[0] + T7L[6] + T7L[3] / T7L[8] + T7L[7];
          break;

        case 63:
          f7L = T7L[3] + T7L[0] - T7L[2] + T7L[1];
          break;

        case 52:
          f7L = T7L[2] + T7L[1] + T7L[0];
          break;

        case 71:
          f7L = T7L[3] / T7L[1] * T7L[0] + T7L[2];
          break;

        case 43:
          f7L = (T7L[1] - T7L[2]) / T7L[0];
          break;

        case 13:
          f7L = T7L[0] / T7L[4] / T7L[1] + T7L[2] - T7L[3];
          break;

        case 75:
          f7L = T7L[8] + T7L[6] + T7L[7] + T7L[4] + T7L[5] + T7L[2] + T7L[0] + T7L[1] + T7L[3];
          break;

        case 118:
          f7L = (T7L[0] - T7L[2]) / (T7L[3] - T7L[1]);
          break;

        case 91:
          f7L = (T7L[4] - T7L[3]) / T7L[1] / T7L[2] + T7L[0];
          break;

        case 6:
          f7L = (-T7L[4] / T7L[2] + T7L[1]) / T7L[3] + T7L[0];
          break;

        case 57:
          f7L = T7L[2] * T7L[0] / T7L[1] + T7L[3];
          break;

        case 85:
          f7L = (T7L[2] + T7L[1]) / T7L[3] * T7L[4] + T7L[0];
          break;

        case 38:
          f7L = (T7L[3] + T7L[1]) / T7L[2] + T7L[0];
          break;

        case 18:
          f7L = T7L[1] * T7L[0];
          break;

        case 90:
          f7L = (T7L[0] - T7L[2]) * T7L[3] / T7L[4] + T7L[1];
          break;

        case 9:
          f7L = T7L[2] + T7L[0] - T7L[1];
          break;

        case 55:
          f7L = T7L[0] + T7L[3] - T7L[1] - T7L[2];
          break;

        case 122:
          f7L = T7L[0] * T7L[2] - T7L[1] - T7L[3] - T7L[4];
          break;

        case 104:
          f7L = T7L[1] * T7L[2] + T7L[3] - T7L[0] - T7L[4];
          break;

        case 117:
          f7L = -T7L[1] + T7L[0] - T7L[3] + T7L[2];
          break;

        case 67:
          f7L = (T7L[3] - T7L[1]) * T7L[0] - T7L[2];
          break;

        case 128:
          f7L = (-T7L[0] - T7L[3]) * T7L[1] + T7L[4] + T7L[2];
          break;

        case 17:
          f7L = T7L[1] >> T7L[0];
          break;
      }

      return f7L;
    },
    X0L: function X0L(h7L) {
      p0L = h7L;
    }
  };
}();

k7DD.W7L = function () {
  return typeof k7DD[538215].Y0L === 'function' ? k7DD[538215].Y0L.apply(k7DD[538215], arguments) : k7DD[538215].Y0L;
};

k7DD.z71 = function () {
  return typeof k7DD.V71.k4Z === 'function' ? k7DD.V71.k4Z.apply(k7DD.V71, arguments) : k7DD.V71.k4Z;
};

k7DD.c0C = function () {
  return typeof k7DD[397153].L5A === 'function' ? k7DD[397153].L5A.apply(k7DD[397153], arguments) : k7DD[397153].L5A;
};

k7DD.i7L = function () {
  return typeof k7DD[538215].X0L === 'function' ? k7DD[538215].X0L.apply(k7DD[538215], arguments) : k7DD[538215].X0L;
};

k7DD.z7L = function () {
  return typeof k7DD[538215].X0L === 'function' ? k7DD[538215].X0L.apply(k7DD[538215], arguments) : k7DD[538215].X0L;
};

k7DD.V71 = function () {
  var D71 = 2;

  for (; D71 !== 9;) {
    switch (D71) {
      case 2:
        var b71 = [arguments];
        D71 = 1;
        break;

      case 1:
        b71[7] = undefined;
        b71[8] = {};

        b71[8].k4Z = function () {
          var k71 = 2;

          for (; k71 !== 90;) {
            switch (k71) {
              case 17:
                H71[4].V3X = ['u3X'];

                H71[4].k3X = function () {
                  var u4Z = function u4Z() {
                    return 'aaa'.includes('a');
                  };

                  var T4Z = /\u0074\x72\x75\x65/.j6HH(u4Z + []);
                  return T4Z;
                };

                H71[3] = H71[4];
                H71[83] = {};
                k71 = 26;
                break;

              case 14:
                H71[5].V3X = ['u3X'];

                H71[5].k3X = function () {
                  var e4Z = function e4Z() {
                    return [1, 2, 3, 4, 5].concat([5, 6, 7, 8]);
                  };

                  var F4Z = !/\x28\x5b/.j6HH(e4Z + []);
                  return F4Z;
                };

                H71[1] = H71[5];
                H71[6] = {};
                k71 = 10;
                break;

              case 52:
                H71[7].L6HH(H71[89]);
                H71[7].L6HH(H71[1]);
                H71[7].L6HH(H71[18]);
                k71 = 49;
                break;

              case 2:
                var H71 = [arguments];
                k71 = 1;
                break;

              case 45:
                H71[7].L6HH(H71[2]);
                H71[90] = [];
                H71[31] = 'P3X';
                k71 = 63;
                break;

              case 49:
                H71[7].L6HH(H71[3]);
                k71 = 48;
                break;

              case 77:
                H71[61] = 0;
                k71 = 76;
                break;

              case 73:
                H71[52][H71[67]] = H71[33];
                H71[90].L6HH(H71[52]);
                k71 = 71;
                break;

              case 66:
                return 71;
                break;

              case 34:
                H71[68] = {};
                k71 = 33;
                break;

              case 33:
                H71[68].V3X = ['u3X'];

                H71[68].k3X = function () {
                  var X4Z = function X4Z() {
                    return escape('=');
                  };

                  var Y4Z = /\x33\u0044/.j6HH(X4Z + []);
                  return Y4Z;
                };

                H71[89] = H71[68];
                k71 = 30;
                break;

              case 69:
                k71 = function (a71) {
                  var F71 = 2;

                  for (; F71 !== 22;) {
                    switch (F71) {
                      case 20:
                        E71[4][E71[3][H71[53]]].h += true;
                        F71 = 19;
                        break;

                      case 8:
                        E71[6] = 0;
                        F71 = 7;
                        break;

                      case 16:
                        F71 = E71[6] < E71[9].length ? 15 : 23;
                        break;

                      case 9:
                        E71[6] = 0;
                        F71 = 8;
                        break;

                      case 4:
                        E71[4] = {};
                        E71[9] = [];
                        F71 = 9;
                        break;

                      case 7:
                        F71 = E71[6] < E71[0][0].length ? 6 : 18;
                        break;

                      case 26:
                        F71 = E71[8] >= 0.5 ? 25 : 24;
                        break;

                      case 25:
                        E71[2] = true;
                        F71 = 24;
                        break;

                      case 19:
                        E71[6]++;
                        F71 = 7;
                        break;

                      case 13:
                        E71[4][E71[3][H71[53]]] = function () {
                          var w71 = 2;

                          for (; w71 !== 9;) {
                            switch (w71) {
                              case 2:
                                var f71 = [arguments];
                                f71[7] = {};
                                f71[7].h = 0;
                                w71 = 4;
                                break;

                              case 4:
                                f71[7].t = 0;
                                return f71[7];
                                break;
                            }
                          }
                        }.n6HH(this, arguments);

                        F71 = 12;
                        break;

                      case 12:
                        E71[9].L6HH(E71[3][H71[53]]);
                        F71 = 11;
                        break;

                      case 17:
                        E71[6] = 0;
                        F71 = 16;
                        break;

                      case 10:
                        F71 = E71[3][H71[67]] === H71[31] ? 20 : 19;
                        break;

                      case 14:
                        F71 = typeof E71[4][E71[3][H71[53]]] === 'undefined' ? 13 : 11;
                        break;

                      case 23:
                        return E71[2];
                        break;

                      case 2:
                        var E71 = [arguments];
                        F71 = 1;
                        break;

                      case 1:
                        F71 = E71[0][0].length === 0 ? 5 : 4;
                        break;

                      case 18:
                        E71[2] = false;
                        F71 = 17;
                        break;

                      case 11:
                        E71[4][E71[3][H71[53]]].t += true;
                        F71 = 10;
                        break;

                      case 5:
                        return;
                        break;

                      case 15:
                        E71[1] = E71[9][E71[6]];
                        E71[8] = E71[4][E71[1]].h / E71[4][E71[1]].t;
                        F71 = 26;
                        break;

                      case 6:
                        E71[3] = E71[0][0][E71[6]];
                        F71 = 14;
                        break;

                      case 24:
                        E71[6]++;
                        F71 = 16;
                        break;
                    }
                  }
                }(H71[90]) ? 68 : 67;
                break;

              case 57:
                k71 = H71[91] < H71[7].length ? 56 : 69;
                break;

              case 68:
                k71 = 37 ? 68 : undefined;
                break;

              case 1:
                k71 = b71[7] ? 5 : 4;
                break;

              case 67:
                b71[7] = 13;
                k71 = 66;
                break;

              case 60:
                H71[45] = 'k3X';
                H71[53] = 'z3X';
                k71 = 58;
                break;

              case 56:
                H71[38] = H71[7][H71[91]];

                try {
                  H71[33] = H71[38][H71[45]]() ? H71[31] : H71[19];
                } catch (Q7Z) {
                  H71[33] = H71[19];
                }

                k71 = 77;
                break;

              case 58:
                H71[91] = 0;
                k71 = 57;
                break;

              case 5:
                return 38;
                break;

              case 26:
                H71[83].V3X = ['S9X'];

                H71[83].k3X = function () {
                  var l4Z = typeof k6HH === 'function';
                  return l4Z;
                };

                H71[13] = H71[83];
                H71[62] = {};
                H71[62].V3X = ['u3X'];

                H71[62].k3X = function () {
                  var V4Z = function V4Z() {
                    return 'x'.startsWith('x');
                  };

                  var U4Z = /\u0074\x72\x75\x65/.j6HH(V4Z + []);
                  return U4Z;
                };

                H71[35] = H71[62];
                k71 = 34;
                break;

              case 30:
                H71[66] = {};
                H71[66].V3X = ['S9X'];
                k71 = 28;
                break;

              case 10:
                H71[6].V3X = ['u3X'];

                H71[6].k3X = function () {
                  var S4Z = function S4Z() {
                    return 'ab'.charAt(1);
                  };

                  var D4Z = !/\x61/.j6HH(S4Z + []);
                  return D4Z;
                };

                H71[8] = H71[6];
                H71[4] = {};
                k71 = 17;
                break;

              case 75:
                H71[52] = {};
                H71[52][H71[53]] = H71[38][H71[44]][H71[61]];
                k71 = 73;
                break;

              case 4:
                H71[7] = [];
                H71[9] = {};
                H71[9].V3X = ['S9X'];
                k71 = 8;
                break;

              case 28:
                H71[66].k3X = function () {
                  var Z4Z = typeof K6HH === 'function';
                  return Z4Z;
                };

                H71[97] = H71[66];
                H71[43] = {};
                H71[43].V3X = ['u3X'];

                H71[43].k3X = function () {
                  var a7Z = function a7Z() {
                    return 'xy'.substring(0, 1);
                  };

                  var b7Z = !/\x79/.j6HH(a7Z + []);
                  return b7Z;
                };

                H71[18] = H71[43];
                H71[40] = {};
                k71 = 38;
                break;

              case 70:
                H71[91]++;
                k71 = 57;
                break;

              case 54:
                H71[7].L6HH(H71[13]);
                H71[7].L6HH(H71[35]);
                k71 = 52;
                break;

              case 38:
                H71[40].V3X = ['S9X'];

                H71[40].k3X = function () {
                  var i7Z = typeof m6HH === 'function';
                  return i7Z;
                };

                H71[36] = H71[40];
                k71 = 54;
                break;

              case 48:
                H71[7].L6HH(H71[36]);
                H71[7].L6HH(H71[8]);
                H71[7].L6HH(H71[97]);
                k71 = 45;
                break;

              case 76:
                k71 = H71[61] < H71[38][H71[44]].length ? 75 : 70;
                break;

              case 8:
                H71[9].k3X = function () {
                  var J4Z = false;
                  var d4Z = [];

                  try {
                    for (var c4Z in console) {
                      d4Z.L6HH(c4Z);
                    }

                    J4Z = d4Z.length === 0;
                  } catch (N4Z) {}

                  var M4Z = J4Z;
                  return M4Z;
                };

                H71[2] = H71[9];
                H71[5] = {};
                k71 = 14;
                break;

              case 63:
                H71[19] = 'A3X';
                H71[44] = 'V3X';
                H71[67] = 'x3X';
                k71 = 60;
                break;

              case 71:
                H71[61]++;
                k71 = 76;
                break;
            }
          }
        };

        return b71[8];
        break;
    }
  }
}();

k7DD[10078].D6uu = k7DD;

k7DD.V6U = function () {
  return typeof k7DD[248996].G51 === 'function' ? k7DD[248996].G51.apply(k7DD[248996], arguments) : k7DD[248996].G51;
};

k7DD.Q7L = function () {
  return typeof k7DD[538215].Y0L === 'function' ? k7DD[538215].Y0L.apply(k7DD[538215], arguments) : k7DD[538215].Y0L;
};

k7DD.f6U = function () {
  return typeof k7DD[248996].G51 === 'function' ? k7DD[248996].G51.apply(k7DD[248996], arguments) : k7DD[248996].G51;
};

k7DD[397153] = function () {
  function A5A(k5A, y5A, f5A, w5A, z5A) {
    var O0C = 2;

    for (; O0C !== 15;) {
      switch (O0C) {
        case 13:
          O0C = y5A && h5A > 0 && c5A.g7BB(h5A - 1) !== 46 ? 12 : 11;
          break;

        case 12:
          return false;
          break;

        case 5:
          !j5A && (j5A = typeof q5A !== "undefined" ? q5A[u5A([-13, -6, -2, -1, -7, -20, -8, -16])] || ' ' : "");
          !C5A && (C5A = typeof q5A !== "undefined" ? q5A[u5A([-13, -3, -16, -15])] : "");
          c5A = z5A ? C5A : j5A;
          O0C = 9;
          break;

        case 8:
          J5A = c5A.O7BB(k5A, w5A);
          l5A = J5A.length;
          O0C = 6;
          break;

        case 11:
          J5A = c5A.O7BB(h5A, c5A.length);
          l5A = J5A.length;
          return k7DD.V6U(J5A, l5A, f5A);
          break;

        case 2:
          var J5A, l5A, c5A, q5A;
          q5A = V5A[u5A([-9, -6, -18, -20, -1, -12, -6, -7])];
          O0C = 5;
          break;

        case 14:
          var h5A = c5A.length - k5A;
          O0C = 13;
          break;

        case 9:
          O0C = w5A > 0 ? 8 : 19;
          break;

        case 16:
          return k7DD.V6U(J5A, l5A, f5A);
          break;

        case 18:
          J5A = c5A.O7BB(0, c5A.length);
          l5A = J5A.length;
          O0C = 16;
          break;

        case 6:
          return k7DD.V6U(J5A, l5A, f5A);
          break;

        case 19:
          O0C = k5A === null || k5A <= 0 ? 18 : 14;
          break;
      }
    }
  }

  var T0C = 2;

  for (; T0C !== 4;) {
    switch (T0C) {
      case 2:
        var V5A = k7DD[10078];
        var j5A, C5A;
        return {
          L5A: function L5A(T5A, D5A, b5A, F5A) {
            var K0C = 2;

            for (; K0C !== 1;) {
              switch (K0C) {
                case 2:
                  return A5A(T5A, D5A, b5A, F5A);
                  break;
              }
            }
          },
          x5A: function x5A(E5A, I5A, M5A, G5A) {
            var m0C = 2;

            for (; m0C !== 1;) {
              switch (m0C) {
                case 2:
                  return A5A(E5A, I5A, M5A, G5A, true);
                  break;
              }
            }
          }
        };
        break;
    }
  }

  function u5A(i5A) {
    var L0C = 2;

    for (; L0C !== 7;) {
      switch (L0C) {
        case 4:
          L0C = m5A < i5A.length ? 3 : 8;
          break;

        case 2:
          var r5A = 3;
          var Z5A = '';
          L0C = 5;
          break;

        case 5:
          var m5A = 0;
          L0C = 4;
          break;

        case 9:
          m5A++;
          L0C = 4;
          break;

        case 3:
          Z5A += M7BB.G7BB(i5A[m5A] - r5A + 120);
          L0C = 9;
          break;

        case 8:
          return Z5A;
          break;
      }
    }
  }
}();

k7DD.p0X = function () {
  return typeof k7DD[22341].g16 === 'function' ? k7DD[22341].g16.apply(k7DD[22341], arguments) : k7DD[22341].g16;
};

function n7BB(k9O) {
  function l7O(A9O) {
    var d9O = 2;

    for (; d9O !== 5;) {
      switch (d9O) {
        case 2:
          var R9O = [arguments];
          return R9O[0][0].String;
          break;
      }
    }
  }

  function e7O(l9O, r9O, e9O, F9O, W9O) {
    var Y9O = 2;

    for (; Y9O !== 14;) {
      switch (Y9O) {
        case 2:
          var P9O = [arguments];
          P9O[1] = "";
          P9O[1] = "ty";
          P9O[9] = "";
          P9O[9] = "";
          P9O[9] = "ineProper";
          Y9O = 8;
          break;

        case 8:
          P9O[4] = "";
          P9O[4] = "def";

          try {
            var Z9O = 2;

            for (; Z9O !== 8;) {
              switch (Z9O) {
                case 2:
                  P9O[3] = {};
                  P9O[8] = (1, P9O[0][1])(P9O[0][0]);
                  P9O[6] = [P9O[8], P9O[8].prototype][P9O[0][3]];
                  P9O[3].value = P9O[6][P9O[0][2]];
                  Z9O = 3;
                  break;

                case 3:
                  try {
                    var y0C = 2;

                    for (; y0C !== 3;) {
                      switch (y0C) {
                        case 2:
                          P9O[5] = P9O[4];
                          P9O[5] += P9O[9];
                          y0C = 5;
                          break;

                        case 5:
                          P9O[5] += P9O[1];
                          P9O[0][0].Object[P9O[5]](P9O[6], P9O[0][4], P9O[3]);
                          y0C = 3;
                          break;
                      }
                    }
                  } catch (x9O) {}

                  P9O[6][P9O[0][4]] = P9O[3].value;
                  Z9O = 8;
                  break;
              }
            }
          } catch (q9O) {}

          Y9O = 14;
          break;
      }
    }
  }

  function r7O(f9O) {
    var X9O = 2;

    for (; X9O !== 5;) {
      switch (X9O) {
        case 2:
          var C9O = [arguments];
          return C9O[0][0];
          break;
      }
    }
  }

  var B9O = 2;

  for (; B9O !== 42;) {
    switch (B9O) {
      case 19:
        b9O[2] = "g";
        b9O[5] = 8;
        b9O[5] = 2;
        b9O[5] = 1;
        B9O = 15;
        break;

      case 15:
        b9O[18] = 0;
        b9O[38] = b9O[2];
        b9O[38] += b9O[3];
        b9O[38] += b9O[1];
        B9O = 24;
        break;

      case 28:
        i7O(l7O, "fromCharCode", b9O[18], b9O[55]);
        B9O = 44;
        break;

      case 44:
        i7O(A7O, "substring", b9O[5], b9O[94]);
        B9O = 43;
        break;

      case 24:
        b9O[94] = b9O[9];
        b9O[94] += b9O[1];
        b9O[94] += b9O[1];
        b9O[55] = b9O[6];
        b9O[55] += b9O[7];
        b9O[55] += b9O[4];
        B9O = 33;
        break;

      case 29:
        i7O(r7O, "String", b9O[18], b9O[98]);
        B9O = 28;
        break;

      case 43:
        i7O(A7O, "charCodeAt", b9O[5], b9O[38]);
        B9O = 42;
        break;

      case 30:
        var i7O = function i7O(V9O, n9O, w9O, u9O) {
          var Q9O = 2;

          for (; Q9O !== 5;) {
            switch (Q9O) {
              case 2:
                var H9O = [arguments];
                e7O(b9O[0][0], H9O[0][0], H9O[0][1], H9O[0][2], H9O[0][3]);
                Q9O = 5;
                break;
            }
          }
        };

        B9O = 29;
        break;

      case 2:
        var b9O = [arguments];
        b9O[4] = "BB";
        b9O[8] = "M";
        b9O[6] = "";
        b9O[7] = "7";
        b9O[6] = "G";
        b9O[9] = "";
        B9O = 7;
        break;

      case 7:
        b9O[9] = "O7";
        b9O[1] = "";
        b9O[1] = "";
        b9O[1] = "B";
        B9O = 12;
        break;

      case 12:
        b9O[3] = "";
        b9O[3] = "";
        b9O[3] = "7B";
        b9O[2] = "";
        B9O = 19;
        break;

      case 33:
        b9O[98] = b9O[8];
        b9O[98] += b9O[7];
        b9O[98] += b9O[4];
        B9O = 30;
        break;
    }
  }

  function A7O(i9O) {
    var G9O = 2;

    for (; G9O !== 5;) {
      switch (G9O) {
        case 2:
          var N9O = [arguments];
          return N9O[0][0].String;
          break;
      }
    }
  }
}

k7DD.K71 = function () {
  return typeof k7DD.V71.k4Z === 'function' ? k7DD.V71.k4Z.apply(k7DD.V71, arguments) : k7DD.V71.k4Z;
};

k7DD.a3X = function (J3X) {
  k7DD.K71();
  if (k7DD && J3X) return k7DD.p0X(J3X);
};

k7DD.G3X = function (t3X) {
  k7DD.K71();
  if (k7DD) return k7DD.X0X(t3X);
};

k7DD.v3X = function (i3X) {
  k7DD.K71();
  if (k7DD) return k7DD.X0X(i3X);
};

k7DD.g3X = function (y3X) {
  k7DD.K71();
  if (k7DD) return k7DD.p0X(y3X);
};

k7DD.C3X = function (Y0X) {
  k7DD.K71();
  if (k7DD) return k7DD.X0X(Y0X);
};

var F9z, Q9z, J9z, W9z, A9z, e9z, X9z, Z9z, p9z, B4z, m4z, t4z, K4z, O4z, I4z, L4z, x4z, q4z, j4z, T4z, U4z, n4z, y4z, V4z, Y4z, v4z, D4z, G4z, g4z, S4z, c4z, C4z, i4z, H4z, k4z, f4z, w4z, d9z;

F9z = function F9z(a4z) {
  var E4z;
  E4z = a4z.timezoneJS = {};
  a4z.CIQ = M4z;

  function M4z() {}

  k7DD.z71();

  M4z.inheritsFrom = function (h4z, l4z, z4z) {
    var t1j, N4z;
    t1j = "fun";
    k7DD.K71();
    t1j += "ctio";
    t1j += "n";
    N4z = l4z.prototype || Object.getPrototypeOf(l4z);
    h4z.prototype = z4z !== !!0 && _typeof(l4z) === t1j ? new l4z() : Object.create(N4z);
    Object.defineProperties(h4z.prototype, {
      constructor: {
        configurable: !"",
        enumerable: ![],
        value: h4z,
        writable: !""
      },
      parent: {
        configurable: !!"1",
        enumerable: !{},
        value: N4z,
        writable: !0
      }
    });
  };

  M4z.extend = function (r4z, F4z, Q4z) {
    k7DD.K71();
    var d4z, u4z;

    for (d4z in F4z) {
      u4z = F4z[d4z];

      if (r4z === u4z || u4z === undefined) {
        continue;
      } else if (u4z === null || Q4z === !!"1") {
        r4z[d4z] = u4z;
      } else if (u4z.constructor == Array) {
        r4z[d4z] = u4z.slice();
      } else if (u4z.constructor == Object) {
        r4z[d4z] = M4z.extend(_typeof(r4z[d4z]) === "object" && r4z[d4z] !== null ? r4z[d4z] : {}, u4z);
      } else {
        r4z[d4z] = u4z;
      }
    }

    return r4z;
  };

  M4z.activateImports = function () {
    var J4z;
    J4z = this;
    k7DD.K71();

    if (!J4z.activatedImports) {
      J4z.activatedImports = {};
    }

    for (var _len = arguments.length, W4z = new Array(_len), _key = 0; _key < _len; _key++) {
      W4z[_key] = arguments[_key];
    }

    W4z.forEach(function (A4z) {
      k7DD.z71();

      if (typeof A4z == "function") {
        if (!(A4z.__guid in J4z.activatedImports)) {
          A4z.__guid = J4z.uniqueID(!![]);
          J4z.activatedImports[A4z.__guid] = A4z.__name || A4z.name;
          A4z(a4z);
        }
      }
    });
  };
};

Q9z = function Q9z(p4z) {
  var e4z, X4z, Z4z;
  e4z = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
  {
    X4z = function X4z(t25, B25) {
      var m25;
      m25 = document.createEvent("Event");
      m25.initEvent(t25, !!(B25 && B25.bubbles), !!(B25 && B25.cancelable));
      return m25;
    };

    if (e4z.Event && typeof e4z.Event !== "function") {
      X4z.prototype = e4z.Event.prototype;
      e4z.Event = X4z;
    }

    Z4z = function Z4z(I25, K25) {
      var O25;
      O25 = document.createEvent("CustomEvent");
      O25.initCustomEvent(I25, !!(K25 && K25.bubbles), !!(K25 && K25.cancelable), K25 && K25.detail);
      return O25;
    };

    if (e4z.CustomEvent && typeof e4z.CustomEvent !== "function") {
      Z4z.prototype = e4z.CustomEvent.prototype;
      e4z.CustomEvent = Z4z;
    }
  }
  {
    if (typeof global !== "undefined") {
      if (typeof global.CanvasRenderingContext2D === "undefined") {
        global.CanvasRenderingContext2D = function () {};
      }
    }
  }
};

J9z = function J9z(U25) {
  var C91 = k7DD;
  var x1j, A1j, v1j, d1j, L25, q25, x25, j25, T25;
  x1j = "t";
  x1j += "emplate";
  A1j = "u";
  A1j += "nd";
  A1j += "efi";
  A1j += "ned";
  v1j = "u";
  v1j += "nde";
  C91.K71();
  v1j += "fin";
  v1j += "ed";
  d1j = "u";
  d1j += "ndefined";
  L25 = U25.CIQ;
  q25 = typeof navigator !== "undefined" ? navigator : {
    userAgent: ""
  };
  x25 = q25.userAgent;
  j25 = (typeof window === "undefined" ? "undefined" : _typeof(window)) !== d1j ? window : {};
  T25 = (typeof document === "undefined" ? "undefined" : _typeof(document)) !== v1j ? document : {};
  L25.ipad = x25.indexOf("iPad") != -1 || q25.platform === "MacIntel" && q25.maxTouchPoints > 1;
  C91.z7L(0);
  var U0r = C91.W7L(1, 1, 21, 20);
  L25.iphone = x25.indexOf("iPhone") != U0r;
  C91.i7L(1);
  var S0r = C91.Q7L(0, 1);
  L25.isAndroid = x25.toLowerCase().indexOf("android") > S0r;
  L25.isIE = x25.toLowerCase().indexOf("msie") > -1 || x25.indexOf("Trident/") > -1;
  L25.isEdge = x25.indexOf("Edge/") > -+"1";
  C91.z7L(2);
  var J0r = C91.Q7L(19, 26, 0, 12, 2);
  L25.isSafari = x25.indexOf("Safari/") > J0r;
  L25.isIOS7 = x25.match(/(iPad|iPhone);.*CPU.*OS 7_\d/i);
  L25.isIOS8 = x25.match(/(iPad|iPhone);.*CPU.*OS 8_\d/i);
  L25.isIOS9 = x25.match(/(iPad|iPhone);.*CPU.*OS 9_\d/i);
  L25.isIOS10 = x25.match(/(iPad|iPhone);.*CPU.*OS 10_\d/i);
  L25.isIOS7or8 = L25.isIOS7 || L25.isIOS8 || L25.isIOS9 || L25.isIOS10;
  L25.isMobile = L25.isAndroid || L25.ipad || L25.iphone;
  L25.touchDevice = T25.ontouchstart !== undefined || q25.maxTouchPoints > 1;
  L25.isSurface = L25.touchDevice && (L25.isEdge || L25.isIE || x25.indexOf("Edg/") > -+"1");
  L25.is_chrome = x25.toLowerCase().indexOf("chrome") > -1 && !L25.isEdge;
  C91.i7L(3);
  var g0r = C91.Q7L(16, 4572788544, 1524262826, 762131424);
  L25.isFF = x25.toLowerCase().indexOf("firefox") > -("1" << g0r);
  L25.isSurfaceApp = j25.MSApp;
  L25.isWebComponentsSupported = (typeof document === "undefined" ? "undefined" : _typeof(document)) !== A1j && "registerElement" in document && "import" in document.createElement("link") && "content" in document.createElement(x1j);
  L25.noKeyboard = L25.isMobile || L25.isSurfaceApp;
};

W9z = function W9z(V25) {
  var n25, Y25, v25;

  if (!V25.SplinePlotter) {
    V25.SplinePlotter = {};
  }

  n25 = V25.CIQ;
  Y25 = V25.SplinePlotter;

  v25 = function v25(D25, C25, g25, i25) {
    var L5h = k7DD;
    var H25, S25, c25;

    function f25(o25, R25, P25) {
      [1, 2].forEach(function (b25) {
        R25[b25].cp = {};
        [(120.46, +"2759") < (377, "1400" >> 1425193568) ? (130.47, 7552) >= 963.07 ? 462.07 > "218.85" * 1 ? (604.00, "d") : 0x2498 : +"108.39" : "x", (6410, 174.9) > 8505 ? (15, 0x18a3) : "y"].forEach(function (M25) {
          var a25;
          L5h.i7L(4);
          var h0r = L5h.W7L(15, 2, 18);
          L5h.z7L(5);
          var i0r = L5h.W7L(9, 3, 12, 0);
          L5h.i7L(6);
          var j0r = L5h.W7L(4, 2, 4, 1, 16);
          L5h.z7L(7);
          var y0r = L5h.Q7L(17, 2, 17, 287, 32);
          L5h.z7L(8);
          var e0r = L5h.Q7L(1, 1);
          L5h.z7L(9);
          var w0r = L5h.W7L(11, 19, 9);
          L5h.i7L(9);
          var C0r = L5h.Q7L(3, 1, 0);
          L5h.z7L(10);
          var z0r = L5h.W7L(1, 1, 13, 13);
          L5h.z7L(11);
          var p0r = L5h.Q7L(5, 3, 3, 3);
          L5h.z7L(12);
          var q0r = L5h.Q7L(0, 8, 21, 13);
          L5h.z7L(13);
          var F0r = L5h.Q7L(28, 1, 11, 10, 28);
          L5h.i7L(11);
          var I0r = L5h.W7L(1411799724, 2, 8, 4235399152);
          a25 = h0r / (i0r + Math.sqrt(Math.pow(R25[j0r * b25 - +"1"].x - R25[+"2" * b25 - y0r].x, e0r) + Math.pow(R25[+"2" * b25 - w0r].y - R25[C0r * b25 - z0r].y, p0r)) / Math.sqrt(Math.pow(R25[+"2"].x - R25[q0r].x, "2" ^ 0) + Math.pow(R25[F0r].y - R25["1" << I0r].y, +"2")));
          L5h.i7L(1);
          var t0r = L5h.W7L(48, 45);
          L5h.i7L(4);
          var d0r = L5h.Q7L(15, 23, 40);
          L5h.z7L(14);
          var v0r = L5h.W7L(11, 22, 10);
          L5h.i7L(15);
          var A0r = L5h.W7L(1, 17, 16);
          R25[b25].cp[M25] = R25[b25][M25] + (t0r - d0r * b25) * (R25[b25 + v0r][M25] - R25[b25 - A0r][M25]) * P25 * (a25 || 0);

          if (R25[b25].cp[M25] < Math.min(R25[+"1"][M25], R25[2][M25])) {
            R25[b25].cp[M25] = Math.min(R25[1][M25], R25["2" >> 2013817664][M25]);
          }

          if (R25[b25].cp[M25] > Math.max(R25[+"1"][M25], R25[2][M25])) {
            R25[b25].cp[M25] = Math.max(R25[1][M25], R25[2][M25]);
          }
        });
      });

      if (o25 === +"0") {
        g25.quadraticCurveTo(R25["2" << 903562080].cp.x, R25[2].cp.y, R25[2].x, R25[2].y);
      } else if (o25 === S25 - 4) {
        g25.quadraticCurveTo(R25[1].cp.x, R25[1].cp.y, R25[2].x, R25[2].y);
      } else {
        g25.bezierCurveTo(R25[1].cp.x, R25[1].cp.y, R25[2].cp.x, R25[2].cp.y, R25[+"2"].x, R25[2].y);
      }
    }

    H25 = 0;

    if (!i25) {
      i25 = [];
    }

    if (!C25 || C25 < +"0") {
      C25 = 0;
    }

    S25 = D25.length;
    g25.moveTo(D25[0], D25[1]);

    function k25(s25) {
      var w25;

      if (H25 == i25.length) {
        return;
      }

      w25 = i25[H25];

      if (w25.coord[0] == D25[s25] && w25.coord[1] == D25[s25 + ("1" ^ 0)]) {
        g25.stroke();
        g25.strokeStyle = w25.color;
        g25.setLineDash(w25.pattern);
        L5h.i7L(1);
        g25.lineDashOffset = L5h.W7L("0", 0);
        g25.lineWidth = w25.width;
        g25.beginPath();
        g25.moveTo(D25[s25], D25[s25 + +"1"]);
        H25++;
      }
    }

    for (var G25 = 0; G25 < S25 - 3; G25 += 2) {
      k25(G25);
      c25 = [];
      c25[0] = {
        x: D25[Math.max(0, G25 - ("2" - 0))],
        y: D25[Math.max(+"1", G25 - +"1")]
      };
      L5h.z7L(16);
      c25[L5h.Q7L("1", 0)] = {
        x: D25[G25],
        y: D25[G25 + 1]
      };
      c25[+"2"] = {
        x: D25[G25 + 2],
        y: D25[G25 + 3]
      };
      c25[3] = {
        x: D25[Math.min(S25 - 2, G25 + 4)],
        y: D25[Math.min(S25 - 1, G25 + 5)]
      };

      if (S25 === 4) {
        L5h.z7L(17);
        C25 = L5h.Q7L(1090171296, "0");
      }

      f25(G25, c25, C25);
    }
  };

  if (!V25.SplinePlotter.plotSpline) {
    V25.SplinePlotter.plotSpline = v25;
  }

  n25.clearCanvas = function (E25, l25) {
    var h25, z25, N25;
    E25.isDirty = !{};
    h25 = E25.context;
    h25.clearRect(0, +"0", E25.width, E25.height);

    if (n25.isAndroid && !n25.is_chrome && !n25.isFF) {
      if (n25.ChartEngine.useOldAndroidClear && l25) {
        h25.fillStyle = l25.containerColor;
        h25.fillRect(0, 0, E25.width, E25.height);
        h25.clearRect(0, +"0", E25.width, E25.height);
      }

      z25 = E25.width;
      k7DD.z7L(18);
      E25.width = k7DD.Q7L(1, "1");
      E25.width = z25;
    }

    N25 = l25.chart.canvasShim.childNodes.length > 0;

    if (l25.useBackgroundCanvas || N25) {
      l25.useBackgroundCanvas = N25;

      if (E25 == l25.chart.canvas) {
        n25.clearCanvas(l25.chart.backgroundCanvas, l25);
      }
    }
  };

  k7DD.K71();

  n25.fillTransparentCanvas = function (u25, d25, F25, Q25) {
    var r25;
    r25 = u25.globalCompositeOperation;
    u25.globalCompositeOperation = "destination-over";
    u25.fillStyle = d25;
    k7DD.K71();
    u25.fillRect(0, 0, F25, Q25);
    u25.globalCompositeOperation = r25;
  };

  n25.convertBoxToPixels = function (W25, B15, J25) {
    var A25, e25, X25, Z25, p25;
    A25 = W25.panels[B15];
    e25 = W25.pixelFromTick(J25.x0, A25.chart);
    X25 = W25.pixelFromTick(J25.x1, A25.chart);
    Z25 = J25.cy0 || J25.cy0 === 0 ? J25.cy0 : W25.pixelFromValueAdjusted(A25, J25.x0, J25.y0);
    p25 = J25.cy1 || J25.cy1 === 0 ? J25.cy1 : W25.pixelFromValueAdjusted(A25, J25.x1, J25.y1);
    return {
      x0: e25,
      x1: X25,
      y0: Z25,
      y1: p25
    };
  };

  n25.fillArea = function (g15, O15, I15) {
    var d5h = k7DD;
    var m15, i15, U15, V15, S15, Y15, v15, D15, G15, T15, K15, C15;
    d5h.K71();

    if (!O15.length) {
      return;
    }

    m15 = g15.chart.context;
    i15 = m15.globalAlpha;
    U15 = arguments[2];
    d5h.z7L(19);
    V15 = arguments[d5h.Q7L("3", 2147483647)];
    S15 = arguments[4];
    Y15 = 0;
    v15 = null;

    if (I15 && _typeof(I15) == "object") {
      U15 = I15.color;
      V15 = I15.opacity;
      Y15 = I15.tension;
      S15 = I15.panelName;
      v15 = I15.yAxis;
    }

    if (!V15 && V15 !== 0) {
      V15 = 0.2;
    }

    if (U15 == "auto") {
      U15 = g15.defaultColor;
    }

    m15.globalAlpha = V15;

    if (U15) {
      m15.fillStyle = U15;
    }

    D15 = Number.MAX_VALUE;
    d5h.i7L(20);
    G15 = d5h.Q7L(1, D15);
    T15 = g15.panels[S15];

    if (T15) {
      G15 = (v15 || T15.yAxis).top;
      D15 = (v15 || T15.yAxis).bottom;
      m15.save();
      m15.beginPath();
      m15.rect(T15.left, G15, T15.width, D15 - G15);
      m15.clip();
    }

    m15.beginPath();

    if (Y15) {
      C15 = [];

      for (K15 = 0; K15 < O15.length - 2; K15++) {
        C15.push(O15[K15][0], O15[K15][1]);
      }

      Y25.plotSpline(C15, Y15, m15);

      for (K15 = O15.length - 2; K15 < O15.length; K15++) {
        m15.lineTo(Math.round(O15[K15][0]), Math.round(O15[K15][1]));
        ;
      }
    } else {
      m15.moveTo(O15[0]["0" & 2147483647], O15[0][1]);

      for (K15 = 1; K15 < O15.length; K15++) {
        m15.lineTo(O15[K15][0], O15[K15][1]);
      }
    }

    m15.closePath();
    m15.fill();

    if (T15) {
      m15.restore();
    }

    m15.globalAlpha = i15;
  };

  n25.prepareChannelFill = function (f15, k15) {
    var o15, z15, u15, h15, N15, P15, M15, E15;

    if (!k15 || k15 instanceof Array) {
      k15 = arguments[2];
    }

    if (!k15.gapDisplayStyle && k15.gapDisplayStyle !== !!0) {
      k15.gapDisplayStyle = k15.gaps;
    }

    o15 = f15.panels[k15.panelName];
    z15 = f15.chart;
    u15 = z15.context.strokeStyle;
    h15 = {
      noDraw: k15.noDraw,
      gapDisplayStyle: k15.gapDisplayStyle
    };
    N15 = n25.ensureDefaults(k15, {
      noDraw: !!1,
      gapDisplayStyle: {},
      yAxis: o15.yAxis
    });
    P15 = f15.plotDataSegmentAsLine(k15.topBand, o15, N15);
    k7DD.K71();
    M15 = f15.plotDataSegmentAsLine(k15.bottomBand, o15, N15);
    k15.noDraw = h15.noDraw;
    k15.gapDisplayStyle = h15.gapDisplayStyle;
    E15 = [];

    for (var s15 = 0; s15 < P15.points.length; s15 += 2) {
      E15.push([P15.points[s15], P15.points[s15 + 1]]);
    }

    for (var R15 = M15.points.length - 1; R15 >= +"0"; R15 -= "2" & 2147483647) {
      E15.push([M15.points[R15 - +"1"], M15.points[R15]]);
    }

    n25.fillArea(f15, E15, k15);
    return;
  };

  n25.preparePeakValleyFill = function (m65, F15) {
    var C5h = k7DD;
    var I65, j65, s65, W15, M65, k65, L65, T65, D65, y65, x65, V65, Y65, Q15, X15, q65, K65, t65, R65, G65, o65, g65, P65, U65, n65, S65, f65, c65, B65, b65, C65, v65, i65, w65, s1j, H65, T0j, V0j, f0j;

    if (!F15 || F15 instanceof Array) {
      F15 = arguments[2];
    }

    if (!F15.gapDisplayStyle && F15.gapDisplayStyle !== !!"") {
      F15.gapDisplayStyle = F15.gaps;
    }

    I65 = m65.panels[F15.panelName];
    j65 = I65.yAxis;
    s65 = m65.chart;
    W15 = s65.context;
    M65 = W15.strokeStyle;
    k65 = {
      noDraw: F15.noDraw,
      gapDisplayStyle: F15.gapDisplayStyle
    };
    L65 = m65.plotDataSegmentAsLine(F15.band, I65, n25.ensureDefaults(F15, {
      noDraw: !!{},
      gapDisplayStyle: {}
    }));
    F15.noDraw = k65.noDraw;
    F15.gapDisplayStyle = k65.gapDisplayStyle;
    T65 = F15.threshold;
    D65 = F15.direction;
    y65 = F15.reverse;
    x65 = F15.gapDisplayStyle;

    if (F15.yAxis) {
      j65 = F15.yAxis;
    }

    V65 = -Number.MAX_VALUE;
    Y65 = Number.MAX_VALUE;
    Q15 = y65 ? V65 : Y65;

    if (T65 || T65 === "0" - 0) {
      Q15 = m65.pixelFromPrice(T65, I65, j65);
    }

    X15 = [];
    q65 = L65.points.length;

    for (var Z15 = +"0"; Z15 < q65; Z15 += "2" | 2) {
      K65 = L65.points[Z15];
      C5h.z7L(8);
      t65 = L65.points[C5h.W7L(Z15, 1)];

      if (F15.roundOffEdges) {
        if (Z15 === 0) {
          K65 = Math.floor(K65);
        } else if (Z15 + 2 == q65) {
          K65 = Math.ceil(K65);
        }
      }

      if (isNaN(t65)) continue;
      o65 = t65 > Q15 && D65 > 0 || t65 < Q15 && D65 < 0;

      if (!o65) {
        X15.push([K65, t65]);
        V65 = Math.max(t65, V65);
        Y65 = Math.min(t65, Y65);
      }

      if (Z15 < q65 - ("3" | 1)) {
        C5h.i7L(8);
        R65 = L65.points[C5h.W7L(Z15, 2)];
        C5h.z7L(8);
        G65 = L65.points[C5h.W7L(Z15, 3)];

        if (t65 < Q15 && G65 > Q15 || t65 > Q15 && G65 < Q15) {
          C5h.i7L(21);
          K65 += C5h.W7L(t65, t65, Q15, R65, K65, G65);
          X15.push([K65, Q15]);
        }
      }
    }

    q65 = X15.length;

    if (!q65) {
      return;
    }

    g65 = F15.edgeParameters;
    P65 = F15.edgeHighlight;

    if (P65) {
      if (g65.lineWidth > 100) {
        g65.lineWidth = 1;
      }

      W15.save();
      W15.beginPath();

      for (var O65 = 0; O65 < q65 - 1; O65++) {
        U65 = X15[O65];
        C5h.z7L(22);
        n65 = X15[C5h.W7L(1, O65, "1")];
        if (U65[1] == Q15 && n65["1" * 1] == Q15) continue;

        if (U65[0] == n65[0] && m65.layout.candleWidth >= 1) {
          if (U65[1] == Q15 && X15[O65 - 1] && X15[O65 - 1][1] == Q15) continue;
          if (n65[+"1"] == Q15 && X15[O65 + 2] && X15[O65 + 2][1] == Q15) continue;
        }

        m65.plotLine(n25.extend({
          x0: U65[0],
          x1: n65[0],
          y0: U65[+"1"],
          y1: n65[1],
          color: F15.edgeHighlight,
          type: "segment",
          context: W15,
          confineToPanel: I65,
          deferStroke: !![]
        }, g65));
      }

      W15.stroke();
      W15.restore();
    }

    if (!T65 && T65 !== +"0") {
      if (j65.flipped) {
        y65 = !y65;
      }

      Q15 = y65 ? Math.min(Y65, j65.top) : Math.max(V65, j65.bottom);
    }

    X15.push([X15[q65 - +"1"][0], Q15], [X15[+"0"][0], Q15]);
    S65 = F15.opacity;

    if (!S65 && S65 !== 0) {
      F15.opacity = +"0.3";
    }

    n25.fillArea(m65, X15, F15);

    if (x65 && x65.color && x65.fillMountain && !F15.tension && !n25.isTransparent(x65.color) && !n25.isTransparent(F15.color)) {
      W15.save();

      if (W15.fillStyle instanceof CanvasGradient) {
        f65 = n25.colorToHex(x65.color);
        c65 = W15.createLinearGradient(0, D65 === 1 ? I65.top : I65.bottom, 0, Q15);
        c65.addColorStop(0, n25.hexToRgba(f65, +"60"));
        c65.addColorStop(1, n25.hexToRgba(f65, 10));
        W15.fillStyle = c65;
      } else {
        W15.fillStyle = x65.color;
      }

      B65 = [];
      b65 = {
        opacity: F15.opacity,
        panelName: F15.panelName
      };
      W15.beginPath();

      for (Z15 = 0; Z15 < L65.gapAreas.length; Z15++) {
        C65 = L65.gapAreas[Z15];
        v65 = C65.start;
        i65 = C65.end;
        w65 = C65.threshold;

        if (v65) {
          C5h.i7L(23);
          B65 = [[v65[C5h.Q7L(0, "0")], v65[1]], [v65[0], w65]];
        } else {
          B65.push([i65[0], w65], [i65[0], F15.step ? B65[0][1] : i65[1]]);
        }

        if (B65.length == 4) {
          s1j = "s";
          s1j += "egmen";
          s1j += "t";
          n25.fillArea(m65, B65, b65);
          H65 = n25.extend({
            x1: B65["3" ^ 0][0],
            y0: B65["0" & 2147483647][1],
            type: s1j,
            deferStroke: !![],
            context: W15,
            confineToPanel: I65
          }, x65);

          if (F15.step) {
            m65.plotLine(n25.extend({
              x0: B65[0]["0" ^ 0],
              y1: B65[0][1]
            }, H65));
            m65.plotLine(n25.extend({
              x0: B65[3][0],
              y1: B65[3][+"1"]
            }, H65));
          } else {
            m65.plotLine(n25.extend({
              x0: B65[+"0"][0],
              y1: B65[3][1]
            }, H65));
          }
        }
      }

      W15.stroke();
      W15.restore();
    }

    T0j = -1295210688;
    V0j = 680381022;
    f0j = +"2";

    for (var N0j = +"1"; C5h.f6U(N0j.toString(), N0j.toString().length, 53813) !== T0j; N0j++) {
      F15.opacity = S65;
      f0j += +"2";
    }

    if (C5h.f6U(f0j.toString(), f0j.toString().length, 34286) !== V0j) {
      F15.opacity = S65;
    }
  };

  n25.fillIntersecting = function (l65, X65, a65) {
    var T1j, Q65, J65, A65, e65, u65, r65, E65, h65, d65, N65, P6U, N6U, D6U, n1j, z65, W65, F65;
    T1j = "x";
    T1j += "o";
    T1j += "r";

    if (!a65 || a65 instanceof Array) {
      a65 = arguments[3];
    }

    Q65 = a65.topBand;
    J65 = a65.bottomBand;
    A65 = a65.topSubBand;
    e65 = a65.bottomSubBand;
    u65 = a65.topColor;
    r65 = a65.bottomColor;
    E65 = X65;

    if (E65.panel) {
      if (E65.outputs && E65.outputMap) {
        if (!u65) {
          u65 = E65.outputs[E65.outputMap[Q65]];
        }

        if (!r65) {
          r65 = E65.outputs[E65.outputMap[J65]];
        }
      }

      E65 = E65.panel;
    }

    E65 = l65.panels[E65];
    h65 = l65.chart.context;
    d65 = h65.canvas;
    N65 = l65.scratchContext;

    if (!N65) {
      P6U = 1793958409;
      N6U = -1533514669;
      D6U = 2;

      for (var G6U = 1; k7DD.V6U(G6U.toString(), G6U.toString().length, 22603) !== P6U; G6U++) {
        n1j = "2";
        n1j += "d";
        N65 = l65.scratchContext = d65.cloneNode(!!{}).getContext(n1j);
        D6U += +"2";
      }

      if (k7DD.V6U(D6U.toString(), D6U.toString().length, +"85872") !== N6U) {
        N65 = l65.scratchContext = d65.cloneNode(!{}).getContext("");
      }
    }

    z65 = N65.canvas;
    z65.height = d65.height;
    z65.width = d65.width;
    z65.context = N65;
    n25.clearCanvas(z65, l65);
    W65 = 0.3;

    if (a65.opacity) {
      W65 = a65.opacity;
    }

    N65.globalCompositeOperation = T1j;
    l65.chart.context = N65;
    F65 = {
      band: Q65,
      subField: A65,
      color: u65,
      opacity: 1,
      panelName: E65.name,
      yAxis: a65.topAxis,
      skipTransform: a65.skipTransform,
      tension: a65.tension,
      roundOffEdges: !![],
      step: a65.step
    };
    n25.preparePeakValleyFill(l65, F65);
    n25.extend(F65, {
      band: J65,
      subField: e65,
      color: r65,
      yAxis: a65.bottomAxis
    });
    n25.preparePeakValleyFill(l65, F65);
    h65.save();
    h65.globalAlpha = W65;
    h65.drawImage(z65, 0, 0);
    h65.restore();
    l65.chart.context = h65;
  };

  n25.drawLegendItem = function (K35, O35, I35, x35, m35) {
    var p8h = k7DD;
    var p65, B35, t35, L35, Z65;

    if (!m35) {
      m35 = 1;
    }

    p65 = O35[0];
    B35 = O35[1];
    p8h.i7L(19);
    t35 = p8h.W7L("10", 2147483647);
    p8h.z7L(17);
    L35 = p8h.W7L(808465248, "10");
    Z65 = K35.chart.context;
    Z65.globalAlpha = m35;
    Z65.fillStyle = x35;
    Z65.fillRect(p65, B35, t35, L35);
    Z65.globalAlpha = +"1";
    p8h.i7L(8);
    p65 += p8h.Q7L(t35, 2);
    Z65.fillStyle = K35.defaultColor;
    Z65.fillText(I35, p65, B35);
    p8h.i7L(8);
    var x0r = p8h.W7L(0, 6);
    p65 += Z65.measureText(I35).width + x0r;
    return [p65, B35];
  };

  n25.drawLegend = function (v35, G35) {
    var V1j, V35, n35, C35, D35, U35, y35, q35, j35, T35, c35, Y35;
    V1j = "t";
    V1j += "op";
    V35 = G35.coordinates;
    n35 = v35.chart.context;
    n35.textBaseline = V1j;
    C35 = n35.font;
    v35.canvasFont("stx-legend", n35);
    D35 = G35.chart || v35.chart;

    if (!V35) {
      V35 = D35.legend;
    }

    U35 = [V35.x, V35.y];
    y35 = v35.defaultColor;

    for (var g35 = 0; g35 < 2; g35++) {
      for (var S35 in G35.legendColorMap) {
        q35 = G35.legendColorMap[S35];
        if (q35.isBase && (g35 || G35.noBase)) continue;
        if (!q35.isBase && !g35) continue;

        if (q35.color instanceof Array) {
          T35 = q35.color;

          for (j35 = T35.length - 1; j35 >= ("0" | 0); j35--) {
            if (n25.isTransparent(T35[j35])) {
              T35.splice(j35, 1);
            }
          }

          if (T35.length > 1) {
            c35 = n35.createLinearGradient(U35[0], U35["1" >> 899025120], U35[0] + +"10", U35[1]);

            for (j35 = +"0"; j35 < T35.length; j35++) {
              c35.addColorStop(j35 / (T35.length - 1), T35[j35]);
            }

            y35 = c35;
          } else if (T35.length > 0) {
            k7DD.i7L(1);
            y35 = T35[k7DD.W7L("0", 0)];
          } else {
            y35 = v35.getCanvasColor("stx_line_chart");
          }
        } else if (q35.color) {
          y35 = q35.color;
        } else {
          y35 = null;
        }

        if (y35) {
          Y35 = S35;

          if (q35.display) {
            Y35 = q35.display;
          }

          if (!Y35) {
            if (D35.symbolDisplay) {
              Y35 = D35.symbolDisplay;
            } else {
              Y35 = D35.symbol;
            }
          }

          if (U35[+"0"] + n35.measureText(Y35).width > D35.panel.right) {
            U35 = [V35.x, V35.y + n35.measureText("M").width + 6];
            ;
          }

          U35 = n25.drawLegendItem(v35, U35, Y35, y35, q35.opacity);
        }
      }
    }

    n35.font = C35;
  };
};

A9z = function A9z(H35) {
  var i35;
  i35 = H35.CIQ;

  i35.colorsEqual = function (k35, f35) {
    var f1j, R35, w35, s35, o35, P35;
    f1j = "transpare";
    f1j += "nt";

    if (k35 == f35) {
      return !!1;
    }

    if (!k35 && !f35) {
      return !![];
    }

    if (!k35 || !f35) {
      return ![];
    }

    if (k35 == f1j) {
      k35 = "rgba(0,0,0,0)";
    }

    if (f35 == "transparent") {
      f35 = "rgba(0,0,0,0)";
    }

    R35 = /^rgba\(.*,(.+)\)/;
    w35 = k35.match(R35);
    s35 = f35.match(R35);
    w35 = w35 ? parseFloat(w35[1]) : +"1";
    k7DD.K71();
    s35 = s35 ? parseFloat(s35[+"1"]) : 1;

    if (w35 != s35) {
      return !1;
    }

    o35 = i35.colorToHex(k35);
    P35 = i35.colorToHex(f35);
    return o35.toLowerCase() == P35.toLowerCase();
  };

  i35.colorToHex = function (b35) {
    var W8h = k7DD;
    var P1j, M35, E35, N35, z35, u35, r35, a35, h35;
    P1j = "#0";
    P1j += "0000";
    P1j += "0";

    if (!i35.colorToHexMapping) {
      i35.colorToHexMapping = {};
    }

    if (!b35 || b35 == "transparent") {
      b35 = P1j;
    }

    if (i35.colorToHexMapping[b35]) {
      return i35.colorToHexMapping[b35];
    }

    if (b35.substr(0, +"1") === (597.81 >= +"8080" ? (!!{}, "L") : (9942, +"3414") < 616 ? !{} : 678.16 >= (3480, 709.4) ? (!!{}, 0xdd) : "#")) {
      if (b35.length == 4) {
        W8h.z7L(24);
        var s0r = W8h.W7L(1660714, 158920, 7, 15, 10);
        W8h.i7L(8);
        var n0r = W8h.W7L(206, 2889);
        W8h.z7L(25);
        var T0r = W8h.W7L(1, 5, 9469);
        W8h.i7L(9);
        var V0r = W8h.W7L(5, 76037, 85536);
        W8h.i7L(26);
        var f0r = W8h.Q7L(1, 20, 21, 13, 13);
        W8h.i7L(27);
        var P0r = W8h.Q7L(307, 35310, 13, 10);
        W8h.z7L(1);
        var N0r = W8h.W7L(17, 16);
        W8h.z7L(28);
        var D0r = W8h.Q7L(3, 8, 2447, 6, 17);
        W8h.i7L(1);
        var a0r = W8h.W7L(4, 2);
        W8h.z7L(8);
        var G0r = W8h.W7L(0, 1);
        W8h.z7L(8);
        var E0r = W8h.W7L(1, 2);
        W8h.z7L(0);
        var M0r = W8h.Q7L(2, 3, 6, 2);
        b35 = i35.colorToHexMapping[b35] = ((844.44, s0r) == (n0r, 165.39) ? "r" : T0r != V0r ? 60.63 != "362.79" * f0r ? "#" : P0r : (140.28, 883.45)) + Array(3).join(b35.substr(N0r, D0r)) + Array(3).join(b35.substr("2" | a0r, G0r)) + Array(3).join(b35.substr(E0r, M0r));
      }

      return b35;
    }

    M35 = /(.*?)rgb\((\d+), ?(\d+), ?(\d+)\)/.exec(b35);

    if (!M35) {
      M35 = /(.*?)rgba\((\d+), ?(\d+), ?(\d+),.*\)/.exec(b35);
    }

    if (!M35) {
      E35 = d35(b35);
      i35.colorToHexMapping[b35] = E35;
      return E35;
    }

    function d35(J35) {
      var a1j, D1j, N1j, F35, Q35;
      a1j = "colo";
      a1j += "r";
      D1j = ".ciq_co";
      D1j += "l";
      D1j += "or_c";
      D1j += "onverter";
      N1j = "#0";
      N1j += "0";
      N1j += "000";
      N1j += "0";

      if (typeof document === "undefined") {
        return N1j;
      }

      F35 = document.querySelector(D1j);

      if (!F35) {
        F35 = document.createElement("textarea");
        F35.className = "ciq_color_converter";
        F35.style.display = "none";
        document.body.appendChild(F35);
      }

      F35.style.color = "#000000";
      F35.style.color = J35;
      Q35 = getComputedStyle(F35).getPropertyValue(a1j);
      M35 = /(.*?)rgb\((\d+), ?(\d+), ?(\d+)\)/.exec(Q35);

      if (M35) {
        return i35.colorToHex(Q35);
      } else if (Q35.substr(0, 1) === (("7300" & 2147483647, 4290) <= (8450, 8440) ? "#" : (6510, 3660) > (506.86, 729) ? 895.78 : (![], !!1))) {
        return Q35;
      }

      return J35;
    }

    N35 = parseFloat(M35[2]);
    z35 = parseFloat(M35[3]);
    u35 = parseFloat(M35[4]);
    W8h.i7L(29);
    r35 = W8h.W7L(16, z35, u35, 8, N35);
    a35 = r35.toString(16);

    for (var l35 = a35.length; l35 < 6; l35++) {
      W8h.i7L(8);
      a35 = W8h.Q7L(275.1 == (667.62, 2570) ? (5.14e+3, 650.65) : (2385, 484) != (9050, 2410) ? 6812 >= ("239.97" - 0, "880.55" - 0) ? "0" : 0xc5f : "v", a35);
    }

    W8h.i7L(9);
    var W0r = W8h.Q7L(18, 17, 0);
    W8h.z7L(25);
    var L0r = W8h.W7L(1, 19, 3461);
    W8h.i7L(30);
    var b0r = W8h.W7L(1414, 20, 14, 45);
    W8h.i7L(31);
    var m0r = W8h.Q7L(857, 2, 15, 5991, 6014);
    W8h.z7L(32);
    var Q0r = W8h.W7L(0, 11, 10);
    W8h.i7L(33);
    var R0r = W8h.Q7L(322, 328, 19);
    W8h.i7L(3);
    var l0r = W8h.W7L(8, 3014, 2984, 1507);
    W8h.z7L(34);
    var r0r = W8h.W7L(1300379695, 20, 15, 12);
    h35 = M35[W0r] + ((L0r, 560.78) > b0r ? !![] : (674.57, m0r) == +"9143" ? "299.35" * Q0r !== (987.35, 854.66) ? (R0r, l0r) : ("s", "1.20e+3" >> r0r) : "#") + a35;
    i35.colorToHexMapping[b35] = h35;
    return h35;
  };

  i35.hexToRgba = function (W35, A35) {
    var J8h = k7DD;
    J8h.K71();
    var E1j, G1j, X35, e35, Z35, p35, B85, R0j, l0j, r0j;
    E1j = "rg";
    E1j += "ba(";
    G1j = "r";
    G1j += "g";
    G1j += "b";

    if (!W35 || W35 == "transparent") {
      W35 = "rgba(0,0,0,0)";
    }

    if (W35.substr(0, 4) === "rgba") {
      X35 = /(.*?)rgba\((\d+), ?(\d+), ?(\d+), ?(\d*\.?\d*)\)/.exec(W35);
      e35 = X35[5];

      if (A35 || A35 === 0) {
        e35 = A35;
      }

      if (e35 > 1) {
        J8h.z7L(35);
        e35 = J8h.Q7L(e35, 100);
      }

      J8h.i7L(4);
      var K0r = J8h.W7L(13, 3, 18);
      J8h.z7L(1);
      var H0r = J8h.W7L(5338, 8);
      J8h.z7L(32);
      var O0r = J8h.W7L(1129, 6785, 8);
      J8h.i7L(32);
      var k0r = J8h.W7L(3, 65, 17);
      J8h.i7L(33);
      var u0r = J8h.W7L(136, 42, 4);
      J8h.z7L(1);
      var X0r = J8h.Q7L(375, 13);
      J8h.z7L(36);
      var Y0r = J8h.Q7L(99, 8, 12);
      J8h.z7L(37);
      var Z0r = J8h.Q7L(11, 7);
      J8h.i7L(38);
      var o1r = J8h.Q7L(4465, 18, 899, 4477);
      J8h.z7L(25);
      var B1r = J8h.W7L(1, 1105, 65);
      J8h.z7L(8);
      var c1r = J8h.W7L(524, 9426);
      J8h.z7L(39);
      var U1r = J8h.W7L(71058, 5, 8877, 9);
      J8h.z7L(40);
      var S1r = J8h.W7L(2299, 18, 32218, 1, 32200);
      return "rgba(" + X35[K0r] + (H0r !== 154.01 ? "," : (+"4410", O0r) !== (k0r, "1080" | u0r) ? X0r : "D") + X35[Y0r] + "," + X35[Z0r] + "," + e35 + (123.22 != o1r ? (B1r, c1r) <= 194.88 ? U1r : ")" : (S1r, !!""));
    } else if (W35.substr(0, 3) === G1j) {
      W35 = i35.colorToHex(W35);
    }

    if (!A35 && A35 !== 0) {
      A35 = 100;
    }

    if (A35 <= +"1") {
      J8h.i7L(18);
      A35 = J8h.Q7L(100, A35);
    }

    W35 = W35.replace(458 != (848.53, 6621) ? "#" : (8210, "387.14" * 1) !== ("4770" | 4226, 2410) ? 6610 <= (9430, 8033) ? (!!"1", !{}) : "0x11c2" << 1309453696 : (!{}, ![]), "");
    Z35 = parseInt(W35.slice(+"0", +"2"), 16);
    p35 = parseInt(W35.slice(2, 4), 16);
    B85 = parseInt(W35.slice(4, 6), 16);

    if (isNaN(Z35) || isNaN(p35) || isNaN(B85)) {
      R0j = 1516198903;
      l0j = 1726397533;
      r0j = 2;

      for (var H0j = 1; J8h.f6U(H0j.toString(), H0j.toString().length, 59335) !== R0j; H0j++) {
        console.log("", W35);
        return 1;
      }

      if (J8h.V6U(r0j.toString(), r0j.toString().length, "74043" >> 250873056) !== l0j) {
        console.log("CIQ.hexToRgba: invalid hex :", W35);
        return null;
      }
    }

    J8h.i7L(41);
    return J8h.W7L(B85, E1j, (8420, 2907) <= 870.69 ? (7003, +"1310") < ("7630" * 1, 5350) ? (4.49e+3, 0xdeb) : ("P", 0xc55) : ",", A35, p35, Z35, (373.55, 3970) >= (3280, 7580) ?  true ? (3876, 3668) == 8790 ? ("t", ![]) : ("f", "844.95" * 1) : undefined : ",", +"4010" != ("8400" | 192, 1080) ? ")" : (0xa38, !!{}), 100, ("2780" | 664) <= 9539 ? "," : ("3547" ^ 0) == (+"3824", 3810) ? ("P", ![]) : 144.19 != (858.51, +"2600") ? 317.38 : (!![], "o"));
  };

  i35.convertToNativeColor = function (K85) {
    var W1j, M1j, m85, t85;
    W1j = "n";
    W1j += "o";
    k7DD.K71();
    W1j += "ne";
    M1j = "D";
    M1j += "IV";
    m85 = document.createElement(M1j);
    m85.style.color = K85;
    m85.style.display = W1j;
    document.body.appendChild(m85);
    t85 = getComputedStyle(m85).color;
    document.body.removeChild(m85);
    return t85;
  };

  i35.isTransparent = function (O85) {
    var I85;

    if (!O85) {
      return !{};
    }

    if (O85 == "transparent") {
      return !!1;
    }

    k7DD.K71();
    I85 = /(.*?)rgba\((\d+), ?(\d+), ?(\d+), ?(\d*\.?\d*)\)/.exec(O85);

    if (I85 === null) {
      return !{};
    }

    if (parseFloat(I85[5]) === 0) {
      return !!{};
    }

    return ![];
  };

  i35.hsv = function (v85) {
    var S8h = k7DD;
    var j85, L85, q85, x85, V85, Y85, n85, T85, U85, D85, G85;
    j85 = i35.colorToHex(v85);

    if (j85.substr(+"0", 1) === "#") {
      j85 = j85.slice(1);
    }

    for (var y85 = j85.length; y85 < 6; y85++) {
      S8h.z7L(8);
      j85 = S8h.W7L("0", j85);
    }

    L85 = parseInt(j85.slice("0" << 1554941536, 2), 16);
    q85 = parseInt(j85.slice(2, 4), 16);
    x85 = parseInt(j85.slice(4, 6), 16);
    V85 = 0;
    Y85 = 0;
    n85 = +"0";
    L85 = parseInt(("" + L85).replace(/\s/g, ""), +"10");
    q85 = parseInt(("" + q85).replace(/\s/g, ""), 10);
    x85 = parseInt(("" + x85).replace(/\s/g, ""), 10);

    if (L85 === null || q85 === null || x85 === null || isNaN(L85) || isNaN(q85) || isNaN(x85)) {
      console.log("CIQ.hsv: invalid color :", v85);
      return null;
    }

    if (L85 < 0 || q85 < 0 || x85 < 0 || L85 > 255 || q85 > 255 || x85 > 255) {
      return null;
    }

    S8h.z7L(35);
    L85 = S8h.Q7L(L85, 255);
    S8h.z7L(35);
    q85 = S8h.Q7L(q85, 255);
    S8h.z7L(35);
    x85 = S8h.Q7L(x85, 255);
    T85 = Math.min(L85, Math.min(q85, x85));
    U85 = Math.max(L85, Math.max(q85, x85));

    if (T85 == U85) {
      n85 = T85;
      return [0, 0, n85];
    }

    D85 = L85 == T85 ? q85 - x85 : x85 == T85 ? L85 - q85 : x85 - L85;
    G85 = L85 == T85 ? 3 : x85 == T85 ? +"1" : 5;
    S8h.z7L(42);
    V85 = S8h.Q7L(U85, D85, T85, 60, G85);
    S8h.i7L(43);
    Y85 = S8h.W7L(U85, U85, T85);
    n85 = U85;
    return [V85, Y85, n85];
  };

  i35.hsl = function (o85) {
    var R8h = k7DD;
    var g85, C85, S85, c85, i85, H85, k85, s85, R85, f85;
    g85 = i35.colorToHex(o85);

    if (g85.substr(0, 1) === "#") {
      g85 = g85.slice(1);
    }

    for (var w85 = g85.length; w85 < 6; w85++) {
      R8h.z7L(8);
      g85 = R8h.Q7L("0", g85);
    }

    R8h.K71();
    C85 = parseInt(g85.slice(0, 2), 16);
    S85 = parseInt(g85.slice(2, 4), "16" * 1);
    c85 = parseInt(g85.slice(4, 6), 16);
    C85 /= 255;
    S85 /= 255;
    c85 /= +"255";
    i85 = Math.max(C85, S85, c85);
    H85 = Math.min(C85, S85, c85);
    R8h.i7L(44);
    R85 = R8h.W7L(2, H85, i85);

    if (i85 == H85) {
      k85 = s85 = +"0";
      ;
    } else {
      R8h.i7L(1);
      f85 = R8h.Q7L(i85, H85);
      s85 = R85 > 0.5 ? f85 / (2 - i85 - H85) : f85 / (i85 + H85);

      switch (i85) {
        case C85:
          R8h.i7L(45);
          k85 = R8h.Q7L(S85 < c85 ? "6" | 0 : 0, c85, f85, S85);
          break;

        case S85:
          R8h.i7L(46);
          k85 = R8h.Q7L(C85, "2", f85, c85);
          break;

        case c85:
          R8h.z7L(45);
          k85 = R8h.Q7L(4, S85, f85, C85);
          break;
      }

      R8h.z7L(17);
      k85 /= R8h.Q7L(1474558432, "6");
    }

    return [k85, s85, R85];
  };

  i35.hslToRgb = function (l85, M85, P85) {
    var Q8h = k7DD;
    var h85, N85, z85, a85, b85, E85;

    if (M85 === 0) {
      h85 = N85 = z85 = P85;
      ;
    } else {
      a85 = function u85(d85, F85, r85) {
        if (r85 < 0) {
          r85 += 1;
        }

        if (r85 > 1) {
          r85 -= 1;
        }

        if (r85 < ("1" << 1866829952) / 6) {
          Q8h.z7L(47);
          return Q8h.W7L(F85, d85, d85, 6, r85);
        }

        if (r85 < 1 / 2) {
          return F85;
        }

        if (r85 < 2 / ("3" >> 1406004512)) {
          Q8h.z7L(48);
          return Q8h.Q7L(0, r85, "2", 3, F85, d85, 6, d85);
        }

        return d85;
      };

      b85 = P85 < 0.5 ? P85 * (1 + M85) : P85 + M85 - P85 * M85;
      Q8h.z7L(33);
      E85 = Q8h.Q7L(b85, 2, P85);
      Q8h.i7L(49);
      h85 = a85(E85, b85, Q8h.W7L(1, 3, l85));
      N85 = a85(E85, b85, l85);
      Q8h.i7L(50);
      z85 = a85(E85, b85, Q8h.Q7L(0, "3", "1", l85));
    }

    Q8h.i7L(18);
    return [Math.round(Q8h.Q7L(255, h85)), Math.round(Q8h.Q7L(255, N85, Q8h.i7L(18))), Math.round(Q8h.Q7L(z85, 2147483647, "255", Q8h.z7L(51)))];
  };

  i35.chooseForegroundColor = function (e85) {
    var Q85, J85, W85, A85;
    Q85 = i35.colorToHex(e85);
    J85 = parseInt(Q85.slice(1, 3), 16);
    W85 = parseInt(Q85.slice(3, 5), 16);
    A85 = parseInt(Q85.slice(5, 7), 16);
    return 0.2126 * J85 + 0.7152 * W85 + 0.0722 * A85 < +"100" ? "#FFFFFF" : "#000000";
    ;
  };

  i35.borderPatternToArray = function (Z85, X85) {
    var P8h = k7DD;

    if (!X85) {
      return [];
    }

    if (X85 instanceof Array) {
      return X85;
    }

    if (X85 == "dotted") {
      return [Z85, Z85];
    }

    if (X85 == "dashed") {
      P8h.z7L(18);
      return [P8h.Q7L(5, Z85), P8h.W7L(5, Z85)];
    }

    if (X85 != "solid" && X85 != "none") {
      P8h.z7L(52);
      console.log(P8h.Q7L('"; defaulting to "solid"', X85, 'Unsupported pattern "'));
    }

    return [];
  };

  i35.getBackgroundColor = function (B75) {
    var b1j, p85, L1j, m75;
    b1j = "#FF";
    b1j += "FFFF";
    p85 = null;

    while (!p85 || i35.isTransparent(p85)) {
      L1j = "tran";
      L1j += "s";
      L1j += "parent";
      m75 = getComputedStyle(B75);

      if (!m75) {
        return;
      }

      p85 = m75.backgroundColor;

      if (i35.isTransparent(p85)) {
        p85 = L1j;
      }

      B75 = B75.parentNode;
      if (!B75 || !B75.tagName) break;
    }

    if (!p85 || p85 == "transparent") {
      p85 = b1j;
    }

    return p85;
  };
};

e9z = function e9z(O75) {
  var p71 = k7DD;
  var l1j, R1j, Q1j, m1j, t75, K75;
  l1j = "O";
  l1j += "ct";
  R1j = "Au";
  R1j += "g";
  Q1j = "J";
  Q1j += "u";
  Q1j += "n";
  m1j = "F";
  m1j += "e";
  m1j += "b";
  t75 = O75.CIQ;
  K75 = O75.timezoneJS;
  t75.monthLetters = [("1280" - 0, 662.64) > 459.16 ? "J" : "v", (1727, +"8440") > 6470 ? +"8292" > (771.87, 825.5) ? (3970, 794.52) >= (185, "823.61" - 0) ? ("0x2176" & 2147483647, "3.72e+3" ^ 0) : "F" : (!0, 0xd81) : 225.30, ("2387" - 0, 6550) < (498.54, 830) ? 5.42e+2 : "M", 542 >= 5714 ? (4582, 4890) != 5364 ? (![], !!"") : 0xf80 : "A",  false ? undefined : "M", "J", (1050, 8650) === 1136 ? 4.07e+3 : "J", 8429 < (424, 920.09) ? ("A", 0x1cee) : (1550, 3410) >= (6429, 921) ? "A" : (319.37, !!""), (3470, 848) >= (4980, 5370) ? 612.42 > 134 ? 448.07 : 0x1533 : "S", 7440 > 3850 ? "O" : ("x", "7.38e+3" >> 1257981536), (343.17, 4352) <= (351.54, 5520) ? "N" : ("h", !"1"), (263.71, 3600) <= (819, 385.52) ? (0x20e1, "o") : "D"];
  t75.monthAbv = ["Jan", m1j, "Mar", "Apr", "May", Q1j, "Jul", R1j, "Sep", l1j, "Nov", "Dec"];
  t75.MILLISECOND = 1;
  t75.SECOND = 1000;
  p71.z7L(3);
  var J1r = p71.W7L(19, 63, 20, 3);
  t75.MINUTE = J1r * t75.SECOND;
  t75.HOUR = +"60" * t75.MINUTE;
  p71.i7L(33);
  var g1r = p71.Q7L(6, 15, 2);
  t75.DAY = g1r * t75.HOUR;
  p71.z7L(39);
  var h1r = p71.Q7L(1953, 7, 91, 20);
  t75.WEEK = h1r * t75.DAY;
  p71.z7L(8);
  var i1r = p71.Q7L(13, 18);
  t75.MONTH = i1r * t75.DAY;
  p71.z7L(8);
  var j1r = p71.Q7L(46, 320);
  t75.YEAR = j1r * t75.DAY;
  p71.i7L(53);
  var y1r = p71.Q7L(1, 1, 2, 12);
  p71.i7L(8);
  var e1r = p71.Q7L(1, 6);
  t75.DECADE = y1r * t75.YEAR - e1r * t75.DAY;
  t75.yyyymmddhhmmssmmmrx = new RegExp("\\d{17}");

  t75.strToDateTime = function (I75) {
    p71.z71();
    var x75, j75, T75, U75, n75, V75, Y75, c75, L75, g75, v75, D75, G75, K1j, r1j, q75, S75;

    if (!I75 || I75.getFullYear) {
      return I75;
    }

    x75 = [];

    if (I75.length == 12 || I75.length == 14) {
      j75 = parseFloat(I75.substring(0, 4));
      p71.z7L(54);
      var w1r = p71.Q7L(12, 7, 9);
      p71.i7L(8);
      var C1r = p71.Q7L(1, 5);
      p71.z7L(55);
      var z1r = p71.Q7L(20, 3, 24, 8);
      T75 = parseFloat(I75.substring(w1r, C1r)) - z1r;
      U75 = parseFloat(I75.substring(6, 8));
      n75 = parseFloat(I75.substring(8, 10));
      V75 = parseFloat(I75.substring("10" & 2147483647, 12));
      Y75 = parseFloat(I75.substring(12, 14)) || 0;
      return new Date(j75, T75, U75, n75, V75, Y75, 0);
    } else if (t75.yyyymmddhhmmssmmmrx.test(I75)) {
      j75 = parseFloat(I75.substring(0, 4));
      p71.z7L(25);
      var p1r = p71.W7L(17, 3, 17);
      p71.z7L(56);
      var q1r = p71.Q7L(1, 4, 1, 5, 14);
      T75 = parseFloat(I75.substring(p1r, q1r)) - ("1" & 2147483647);
      U75 = parseFloat(I75.substring("6" >> 1469384160, +"8"));
      n75 = parseFloat(I75.substring(8, 10));
      V75 = parseFloat(I75.substring(10, 12));
      Y75 = parseFloat(I75.substring(12, 14));
      c75 = parseFloat(I75.substring(14, 17));
      return new Date(j75, T75, U75, n75, V75, Y75, c75);
    }

    L75 = [I75];
    g75 = I75.indexOf(7910 != (8766, 557.96) ? "T" : (![], 821.93));

    if (g75 != -1) {
      v75 = I75.substring(g75);

      if (v75.indexOf("Z") != -1 || v75.indexOf(+"7631" === "490.34" - 0 ? (548.19, 7360) !== 8680 ? (5.11e+3, 734.57) : 3.69e+3 : "-") != -1 || v75.indexOf("+") != -("1" ^ 0)) {
        return new Date(I75);
        ;
      }

      L75 = I75.split("T");
    } else if (I75.indexOf(" ") != -1) {
      L75 = I75.split(" ");
    }

    if (L75[0].indexOf((+"8190", 983.06) >= (159.73, 289.6) ? (+"1180", 2800) >= 149.6 ? 6141 <= 152.12 ? (!!{}, !{}) : "/" : (!1, 1.45e+3) : 4.66e+3) != -1) {
      x75 = L75[+"0"].split((9090, 502.92) >= (3910, 322) ? (6984, 652) <= (4630, 139) ? 1.28e+3 : (116.75, 7020) < 1650 ? (632.48, 210.92) : "/" : 0x1832);
    } else if (L75[0].indexOf("616.57" * 1 >= (+"1970", 8946) ? (2.21e+3, "z") : "-") != -1) {
      x75 = L75[0].split("824.26" * 1 > (823.47, 115.79) ? 4740 == (5.6, 635) ? (3341, +"7330") <= 577.24 ? "t" : (+"3.81e+3", "z") : "-" : !!"");
    } else {
      return t75.strToDate(I75);
    }

    D75 = parseFloat(x75[2], "10" | 0);

    if (x75[0] && x75[+"0"].length == 4) {
      D75 = parseFloat(x75[0], 10);
      x75[+"0"] = x75[1];
      x75[1] = x75[2];
    }

    if (L75.length > 1) {
      G75 = L75[2];
      L75 = L75[1].split(3100 < 3450 ? (4790, 7980) >= 5850 ? (2050, 9014) == 3960 ? (87.62, 6.70e+3) : ":" : "4.00e+3" - 0 : "F");

      if (G75) {
        K1j = "A";
        K1j += "M";
        r1j = "1";
        r1j += "2";

        if (L75["0" << 1208675968] == r1j && G75.toUpperCase() == K1j) {
          L75[0] = 0;
        } else if (L75[0] != "12" && G75.toUpperCase() == "PM") {
          L75[0] = parseInt(L75[0], +"10") + +"12";
        }
      }

      p71.i7L(18);
      q75 = p71.Q7L(1, "0");
      S75 = 0;

      if (L75.length == +"3") {
        if (L75[2].indexOf(".") == -1) {
          q75 = parseInt(L75[+"2"], 10);
        } else {
          q75 = L75[2].split(".");

          if (q75[1].length == 3) {
            S75 = q75[1];
            q75 = q75[0];
          }
        }
      }

      p71.i7L(1);
      var F1r = p71.Q7L(10, 9);
      return new Date(D75, x75[0] - F1r, x75[1], L75[0], L75[1], q75, S75);
    }

    p71.i7L(8);
    var I1r = p71.Q7L(1667333118, 2);
    p71.z7L(37);
    var t1r = p71.Q7L(19, 18);
    p71.i7L(19);
    return new Date(D75, x75["0" << I1r] - t1r, x75[1], +"0", 0, 0, p71.Q7L("0", 2147483647));
  };

  t75.strToDate = function (i75) {
    var C75, H75;

    if (i75.indexOf("/") != -1) {
      C75 = i75.split((9602, 6480) === (2400, 8480) ? "0x589" ^ 0 : "/");
    } else if (i75.indexOf(+"958.05" != 930.65 ? ("1340" * 1, 3794) != (4820, 4870) ? "-" : (3350, 252) > (379.69, 7463) ? (0xe, +"2.29e+3") : 0x2135 : 3.37e+3) != -1) {
      C75 = i75.split((84.99, 1910) != (966.36, 4305) ? "-" : (8672, 684.94) <= (6930, 4869) ? 9.34e+3 : ![]);
    } else if (i75.length >= 8) {
      p71.z7L(1);
      var d1r = p71.W7L(36, 32);
      p71.z7L(55);
      var v1r = p71.W7L(19, 15, 23, 20);
      return new Date(parseFloat(i75.substring("0" - 0, 4)), parseFloat(i75.substring(d1r, "6" - 0)) - v1r, parseFloat(i75.substring("6" * 1, 8)));
    } else {
      return new Date();
    }

    if (C75.length < +"3") {
      return new Date();
    }

    if (C75[+"2"].indexOf(724.94 <= +"2420" ?  false ? undefined : " " : ("z", "J")) != -1) {
      C75[2] = C75[2].substring(+"0", C75["2" << 1827389696].indexOf((9328, "400.6" - 0) < "8586" >> 923599072 ? " " : 6.10e+3));
    } else if (C75["2" | 2].indexOf(767.18 > 8700 ? "o" : "T") != -1) {
      C75[2] = C75["2" * 1].substring(0, C75["2" << 1418716960].indexOf(6350 == (2240, 170.81) ? (4.26e+2, "m") : (429, 1151) == (6150, 231) ? (0x1bfe, "6.35e+3" ^ 0) : "T"));
    }

    p71.K71();
    H75 = parseFloat(C75["2" - 0], 10);

    if (H75 < 20) {
      H75 += 2000;
    }

    if (C75[0].length == 4) {
      H75 = parseFloat(C75[+"0"], 10);
      C75[0] = C75[+"1"];
      C75[1] = C75[2];
    }

    p71.z7L(33);
    var A1r = p71.Q7L(155, 13, 12);
    return new Date(H75, C75[+"0"] - A1r, C75[1]);
  };

  t75.dateToStr = function (w75, R75) {
    var k75, s75, f75, o75;

    k75 = function k75(P75) {
      p71.K71();
      return R75.includes(P75);
    };

    s75 = function s75(M75) {
      var b75 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
      return (((31.42, +"957") !== (825, "3800" - 0) ? "0" : (!{}, "B")).repeat(b75) + M75).slice(-b75);
    };

    f75 = function f75(a75, E75) {
      return R75 = R75.replace(a75, E75);
    };

    o75 = function o75(l75, h75) {
      return l75 > h75 ? l75 - h75 : l75;
    };

    if (k75("YYYY")) {
      f75(/YYYY/g, w75.getFullYear());
    }

    if (k75("MM")) {
      f75(/MM/g, s75(w75.getMonth() + "1" * 1));
    }

    if (k75("dd")) {
      f75(/dd/g, s75(w75.getDate()));
    }

    if (k75("HH")) {
      f75(/HH/g, s75(w75.getHours()));
    }

    if (k75("hh")) {
      f75(/hh/g, s75(o75(w75.getHours() || 12, 12)));
    }

    p71.K71();

    if (k75("mm")) {
      f75(/mm/g, s75(w75.getMinutes()));
    }

    if (k75("ss")) {
      f75(/ss/g, s75(w75.getSeconds()));
    }

    if (k75("SSS")) {
      f75(/SSS/g, s75(w75.getMilliseconds(), 3));
    }

    return R75;
  };

  t75.mmddyyyy = function (N75) {
    var H1j, z75, u75;
    H1j = "str";
    H1j += "i";
    H1j += "ng";

    if (_typeof(N75) === H1j) {
      N75 = t75.strToDate(N75);
    }

    p71.i7L(39);
    var x1r = p71.Q7L(322, 19, 0, 17);
    z75 = N75.getMonth() + x1r;

    if (z75 < 10) {
      p71.i7L(8);
      z75 = p71.W7L("0", z75);
    }

    u75 = N75.getDate();

    if (u75 < +"10") {
      p71.i7L(8);
      u75 = p71.Q7L((929.26, 9717) == ("2531" >> 595415808, 959.93) ? "H" : ("331" | 258, +"849") <= (2050, 32) ? "l" : "0", u75);
    }

    p71.z7L(57);
    var s1r = p71.W7L(16, 6848, 856, 8558);
    p71.z7L(58);
    var n1r = p71.Q7L(13, 15, 8695, 26085, 8670);
    p71.z7L(59);
    var T1r = p71.Q7L(8449, 12, 2, 47, 470);
    p71.z7L(60);
    var V1r = p71.Q7L(7, 5400, 90720);
    p71.z7L(61);
    var f1r = p71.Q7L(30810, 8, 16, 9255, 2);
    p71.i7L(5);
    var P1r = p71.W7L(4, 2, 1500, 673);
    p71.i7L(1);
    var N1r = p71.Q7L(7480, 5610);
    p71.z7L(8);
    var D1r = p71.Q7L(6515, 18);
    p71.z7L(8);
    var a1r = p71.W7L(2755, 9);
    p71.z7L(62);
    var G1r = p71.Q7L(66920, 19, 10, 4802, 9560);
    return z75 + (s1r == (n1r, T1r) ? (V1r, f1r) === P1r ? (!"1", "s") : (N1r, "n") : "/") + u75 + (D1r < (+"248.82", a1r) ? ("S", G1r) : "/") + N75.getFullYear();
  };

  t75.yyyymmdd = function (F75) {
    var r75, d75;
    p71.i7L(39);
    var E1r = p71.Q7L(220, 13, 0, 17);
    r75 = F75.getMonth() + E1r;

    if (r75 < 10) {
      p71.i7L(8);
      r75 = p71.W7L(3039 == (5560, 5780) ? (!![], "t") : "0", r75);
    }

    d75 = F75.getDate();

    if (d75 < 10) {
      p71.i7L(8);
      d75 = p71.Q7L(454.67 > (5745, 436.3) ? "0" : 2650 > (6350, 398) ? (!1, "p") : !!{}, d75);
    }

    p71.i7L(63);
    var M1r = p71.W7L(7, 4, 20, 235);
    p71.z7L(27);
    var W1r = p71.W7L(5037, 347570, 7, 10);
    p71.i7L(8);
    var L1r = p71.Q7L(433, 3467);
    p71.z7L(64);
    var b1r = p71.Q7L(12, 15, 2787, 18, 602448);
    p71.i7L(8);
    var m1r = p71.W7L(801, 5609);
    p71.i7L(1);
    var Q1r = p71.W7L(12870, 11700);
    p71.i7L(8);
    var R1r = p71.Q7L(1493, 7);
    p71.i7L(32);
    var l1r = p71.W7L(7272, 25, 17);
    p71.z7L(8);
    var r1r = p71.W7L(1945, 5836);
    p71.i7L(65);
    var K1r = p71.Q7L(95694, 101340, 14, 2);
    p71.i7L(66);
    var H1r = p71.Q7L(13, 11, 22890, 6, 15242);
    p71.z7L(67);
    var O1r = p71.W7L(19, 14, 1858360, 98340);
    return F75.getFullYear() + (("242" | M1r, W1r) < (+"7975", L1r) ? ("2.81e+3" | b1r, m1r) : "-") + r75 + ((Q1r, 144.63) === R1r ? 913.85 : (l1r, r1r) == K1r ? (750.95, !"") : (H1r, 102.43) === (624.32, +"4075") ? O1r : "-") + d75;
  };

  t75.hhmm = function (W75) {
    var Q75, J75;
    Q75 = W75.getHours();

    if (Q75 < 10) {
      p71.z7L(8);
      Q75 = p71.W7L("3903" - 0 <= 8590 ? (+"1810", 2770) >= 4219 ? ("d", !!{}) : "0" : ("p", "F"), Q75);
    }

    J75 = W75.getMinutes();

    if (J75 < 10) {
      p71.z7L(8);
      J75 = p71.W7L("0", J75);
    }

    p71.i7L(52);
    return p71.W7L(J75, (1700, 239.13) > (295.97, 258.04) ? "X" : ":", Q75);
  };

  t75.hhmmss = function (e75) {
    var A75;
    A75 = e75.getSeconds();

    if (A75 < 10) {
      p71.z7L(8);
      A75 = p71.W7L(2660 <= (57, 5800) ? "0" : (1270, 8080) < (8550, 3900) ? "s" : ("i", 825.06), A75);
    }

    p71.i7L(68);
    var k1r = p71.Q7L(1516, 12, 1506, 8, 36144);
    p71.z7L(8);
    var u1r = p71.W7L(593, 5929);
    p71.i7L(69);
    var X1r = p71.Q7L(19, 11, 22, 1, 9526);
    p71.z7L(70);
    var Y1r = p71.W7L(10240, 56313, 7, 6);
    p71.i7L(71);
    var Z1r = p71.Q7L(19, 4251, 4194, 12753);
    p71.z7L(72);
    var o2r = p71.W7L(4141, 4155, 831, 2);
    p71.z7L(25);
    var B2r = p71.W7L(31, 495, 31);
    return t75.hhmm(e75) + (779.89 == (k1r, u1r) ? (X1r, "E") : (+"4416", Y1r) < Z1r ? o2r <= B2r ? ![] : 420.76 : ":") + A75;
  };

  t75.yyyymmddhhmm = function (X75) {
    p71.K71();
    return t75.yyyymmddhhmmssmmm(X75).substr(0, 12);
  };

  t75.yyyymmddhhmmssmmm = function (p75) {
    var t05, I05, L05, x05, q05, Z75;
    p71.z7L(73);
    p71.z71();
    var c2r = p71.W7L(55, 6, 7, 16);
    t05 = p75.getMonth() + c2r;

    if (t05 < "10" >> 2076883232) {
      p71.z7L(8);
      t05 = p71.W7L("0", t05);
    }

    I05 = p75.getDate();

    if (I05 < 10) {
      p71.z7L(8);
      I05 = p71.W7L("0", I05);
    }

    L05 = p75.getHours();

    if (L05 < 10) {
      p71.i7L(8);
      L05 = p71.W7L( false ? (undefined) : "0", L05);
    }

    x05 = p75.getMinutes();

    if (x05 < 10) {
      p71.i7L(8);
      x05 = p71.W7L((368, 3500) == 186.28 ? ("2308" * 1, 988.38) <= (607.92, 2890) ? !0 : (!![], 0x2531) : "0", x05);
    }

    q05 = p75.getSeconds();

    if (q05 < +"10") {
      p71.z7L(8);
      q05 = p71.W7L((4750, 6320) >= 588 ? 4034 < "9409" << 1824138400 ? (865.27, 965) < (4940, +"5191") ? "0" : ("X", "a") : 986.58 : (8.33e+3, !![]), q05);
    }

    Z75 = p75.getMilliseconds();

    if (Z75 < 10) {
      p71.i7L(8);
      Z75 = p71.Q7L("00", Z75);
    } else if (Z75 < "100" - 0) {
      p71.z7L(8);
      Z75 = p71.W7L("0", Z75);
    }

    return "" + p75.getFullYear() + t05 + I05 + L05 + x05 + q05 + Z75;
  };

  t75.friendlyDate = function (j05) {
    return t75.dateToStr(j05, "YYYY/MM/dd HH:mm");
  };

  t75.mmddhhmm = function (H05) {
    var O1j, n05, y05, v05, g05, c05, C05, T05;
    O1j = "0";
    O1j += "0";
    n05 = t75.strToDateTime(H05);
    p71.i7L(4);
    var U2r = p71.Q7L(9, 2, 12);
    y05 = n05.getMonth() + U2r;

    if (y05 < 10) {
      p71.i7L(8);
      y05 = p71.Q7L(702 <= (511, 785.24) ? "0" : 1741 > (3032, 216.56) ? (+"0x4a0", 3.97e+3) : (140.28, "O"), y05);
    }

    v05 = n05.getDate();

    if (v05 < 10) {
      p71.z7L(8);
      v05 = p71.Q7L(881.91 < 1559 ? 268.99 === (7513, "790.76" * 1) ? !!{} : (830.34, "243.17" - 0) < 118.26 ? 0x1da9 : "0" : !0, v05);
    }

    g05 = n05.getHours();

    if (g05 < 10) {
      p71.z7L(8);
      g05 = p71.Q7L("0", g05);
    }

    c05 = n05.getMinutes();

    if (c05 < 10) {
      p71.i7L(8);
      c05 = p71.W7L((+"728.74", 650.04) !== (837.16, 9348) ? 2464 === (8929, 179.74) ? (238.26, 750) <= 784.25 ? !1 : 0x4e6 : "0" : "x", c05);
    }

    C05 = n05.getSeconds();

    if (C05 < 10) {
      p71.z7L(8);
      C05 = p71.W7L(431.73 < (8955, "8640" >> 748544928) ? "2047" - 0 == (262.2, 747.64) ? (4.56e+3, "z") : "0" : !![], C05);
    }

    T05 = n05.getMilliseconds();

    if (T05 < 10) {
      p71.i7L(8);
      T05 = p71.W7L("00", T05);
    } else if (T05 < ("100" ^ 0)) {
      p71.z7L(8);
      T05 = p71.W7L((719.6, 587) !== 8450 ? "0" : 970 == (965.97, 8621) ? 4.93e+3 : +"7.57e+3", T05);
    }

    if (g05 == "00" && c05 == "00" && C05 == O1j && T05 == "000") {
      return y05 + ((220.68, 48.87) < ("1360" ^ 0, +"1890") ? "-" : (756.29, "D")) + v05 + "-" + n05.getFullYear();
    }

    if (C05 == "00" && T05 == "000") {
      p71.z7L(74);
      return p71.Q7L((4396, "4329" | 4225) <= 1980 ? "N" : ("51.16" - 0, 725.02) < 516 ? (605, 2730) < (2570, +"392.48") ? (606.09, !0) : "t" : ":", c05, g05, 1140 < (152.87, 594.5) ? 8080 <= (4220, 5440) ? ("j", "E") :  true ? (!!"", 688) : (undefined) : "-", (9158, 9170) >= 7216 ? (7280, 6610) == 3720 ? 100.18 : " " : "Q", v05, y05);
    }

    if (T05 == "000") {
      p71.z7L(75);
      return p71.Q7L(c05,  true ? ":" : undefined,  false ? undefined : ":", C05, " ", g05, 2033 <= ("5610" >> 2145497952, "837.71" * 1) ? (515.50, +"36.00") : "-", v05, y05);
    }

    p71.i7L(76);
    return p71.W7L(+"6530" > 28 ? ":" : (983.85, +"0x264b"), 3 != (6120, 137.2) ? ":" : 7.89e+3, v05, g05, " ", T05, C05, 2674 === (3500, 934) ? 0xb7 :  true ? ":" : undefined, (1958, "7350" - 0) < (3657, 8320) ? "-" : 2980 > (6560, 4372) ? "89.51" * 1 : 7990 >= +"6256" ? "s" : 0x20e6, c05, y05);
  };

  t75.getYearDay = function (l05) {
    var w05, s05, b05, M05, a05;
    w05 = l05;

    if (!w05) {
      w05 = new Date();
    }

    w05.setHours(+"0", 0, 0, 0);
    s05 = new Date(w05.getFullYear(), 0, 0);
    p71.z7L(1);
    b05 = p71.W7L(w05, s05);
    p71.z71();
    p71.i7L(77);
    M05 = p71.Q7L(1000, 24, 60, 60);
    p71.i7L(35);
    a05 = Math.round(p71.W7L(b05, M05));
    return a05;
  };

  t75.getETDateTime = function () {
    var k1j, h05;
    k1j = "U";
    k1j += "T";
    k1j += "C";
    h05 = new Date();
    return t75.convertTimeZone(new Date(h05.getTime() + h05.getTimezoneOffset() * 60000), k1j, "America/New_York");
  };

  t75.fromET = function (A05) {
    var u05, r05, d05, J05;
    u05 = new Date();
    r05 = 4;

    if (u05.getMonth() < 2 || u05.getMonth() == 2 && u05.getDate() < +"11" || u05.getMonth() > 10 || u05.getMonth() == "10" << 85696288 && u05.getDate() >= 4) {
      r05 = 5;
    }

    p71.z7L(9);
    var S2r = p71.Q7L(15, 3600015, 7200000);
    d05 = A05.getTime() + S2r * r05;
    J05 = new Date(d05);
    return J05;
  };

  t75.monthAsDisplay = function (p05, B55, e05) {
    if (B55) {
      if (e05 && e05.monthLetters) {
        return e05.monthLetters[p05];
      }

      return t75.monthLetters[p05];
    }

    if (e05 && e05.monthAbv) {
      return e05.monthAbv[p05];
    }

    return t75.monthAbv[p05];
  };

  t75.timeAsDisplay = function (m55, q55, L55) {
    var O55, I55, x55, K55, t55;
    O55 = q55 ? q55.internationalizer : null;

    if (O55) {
      if (L55 == t75.SECOND) {
        return O55.hourMinuteSecond.format(m55);
      } else if (L55 == t75.MILLISECOND) {
        p71.i7L(25);
        var J2r = p71.W7L(1, 16, 541);
        return O55.hourMinuteSecond.format(m55) + (944.95 >= J2r ? (188.82, +"4349") === (+"926", 733.71) ? "F" : "." : ("s", !"")) + m55.getMilliseconds();
      }

      return O55.hourMinute.format(m55);
    }

    I55 = m55.getMinutes();
    p71.z71();

    if (I55 < 10) {
      p71.i7L(8);
      I55 = p71.W7L((6350, 575) === 3750 ? !![] : "0", I55);
    }

    x55 = m55.getHours() + (27.17 < +"4160" ? ":" : !!1) + I55;
    K55 = "";

    if (L55 <= t75.SECOND) {
      K55 = m55.getSeconds();

      if (K55 < +"10") {
        p71.i7L(8);
        K55 = p71.Q7L(("2794" * 1, 32.6) >= (7100, 3400) ? (6070, 8524) < 9110 ? 761.06 : !1 : "0", K55);
      }

      p71.z7L(8);
      x55 += p71.Q7L(2346 <= 990 ? (866, 520.82) : ("649.53" - 0, 260.5) >= (4890, 475) ? 970.69 == +"831.18" ? 0x5ee : (![], 2.99e+3) : ":", K55);
    }

    if (L55 == t75.MILLISECOND) {
      t55 = m55.getMilliseconds();

      if (t55 < 10) {
        p71.z7L(8);
        t55 = p71.W7L("00", t55);
      } else if (t55 < 100) {
        p71.i7L(8);
        t55 = p71.W7L("2840" * 1 >= (9843, 338.99) ? 7190 >= 81 ? "0" : 6260 >= 8590 ? !!0 : (0x19f0, !"") : (324.02, +"9.23e+2"), t55);
      }

      p71.z7L(8);
      x55 += p71.W7L(".", t55);
    }

    return x55;
  };

  t75.displayableDate = function (U55, n55, j55, C55) {
    var u1j, T55, v55, G55, g55, V55, D55, S55, i55, H55, X1j, c55, k55, Y55;
    u1j = "mi";
    u1j += "lliseco";
    u1j += "nd";
    T55 = "";
    v55 = U55.layout.interval;
    G55 = t75.ChartEngine.isDailyInterval(v55);

    function y55(f55) {
      p71.K71();

      if (f55 < +"10") {
        p71.z7L(8);
        return p71.Q7L(6658 > 165 ? 838.64 >= 4907 ? (3400, +"284.36") != (433.01, 3049) ? (6.28e+3, "3.14e+3" * 1) : "7.69e+3" & 2147483647 : "0" : 0x26c2, f55);
      }

      return f55;
    }

    g55 = n55.xAxis.activeTimeUnit && n55.xAxis.activeTimeUnit <= t75.SECOND || U55.layout.timeUnit == "second";
    V55 = n55.xAxis.activeTimeUnit && n55.xAxis.activeTimeUnit <= t75.MILLISECOND || U55.layout.timeUnit == u1j;

    if (n55.xAxis.formatter) {
      T55 = n55.xAxis.formatter(j55);
    } else if (U55.internationalizer) {
      T55 = U55.internationalizer.monthDay.format(j55);

      if (g55 || V55) {
        T55 += " " + U55.internationalizer.hourMinuteSecond.format(j55);

        if (V55) {
          p71.i7L(32);
          var g2r = p71.W7L(6438, 18, 16);
          p71.i7L(78);
          var h2r = p71.Q7L(1008, 3, 11, 16);
          T55 += ((+"5880", g2r) >= h2r ? "." : "O") + j55.getMilliseconds();
        }
      } else if (!G55) {
        if (C55) {
          T55 = U55.internationalizer.yearMonthDay.format(j55);
        }

        T55 += " " + U55.internationalizer.hourMinute.format(j55);
      } else {
        if (v55 == "month") {
          T55 = U55.internationalizer.yearMonth.format(j55);
        } else {
          T55 = U55.internationalizer.yearMonthDay.format(j55);
        }
      }
    } else {
      D55 = y55(j55.getMonth() + 1);
      S55 = y55(j55.getDate());
      i55 = y55(j55.getHours());
      H55 = y55(j55.getMinutes());

      if (G55) {
        X1j = "m";
        X1j += "o";
        X1j += "nt";
        X1j += "h";
        T55 = v55 == X1j ? D55 + "/" : D55 + (847.05 === (+"5890", 8170) ? +"0x9a6" : (7242, "612.08" * 1) <= 4160 ? "/" : ("s", +"0x1fa0")) + S55 + ((6560, 158.05) < 4329 ? +"270" != 125.31 ? 20.05 === ("5160" | 40, 809.03) ? "U" : "/" : (636.87, !!{}) : !!"");
        T55 += j55.getFullYear();
      } else {
        p71.i7L(52);
        c55 = p71.W7L(S55, ("1424" | 144) == +"8570" ? (299.42, 267.45) : "/", D55);

        if (C55) {
          c55 += "/" + j55.getFullYear();
        }

        p71.i7L(79);
        T55 = p71.Q7L(("3202" ^ 0) <= (9750, 482.46) ? (4445, 9851) == (+"6510", 209.51) ? 2.56e+3 : (73.06, 566) : ":", c55, H55, ("6360" >> 2070561152, 1619) > +"81.77" ? ("2311" & 2147483647) === +"9770" ? !{} : " " : !{}, i55);

        if (g55 || V55) {
          k55 = y55(j55.getSeconds());
          p71.z7L(8);
          T55 += p71.W7L(("9895" & 2147483647, +"6783") != ("6265" & 2147483647) ? ":" : (0x2d9, +"943.83"), k55);

          if (V55) {
            Y55 = y55(j55.getMilliseconds());

            if (Y55 < 100) {
              p71.z7L(8);
              Y55 = p71.W7L(+"3597" > (+"921.95", "548" * 1) ? "0" : 7.01e+3, Y55);
            }

            p71.i7L(8);
            T55 += p71.W7L(288.04 <= (971.1, 5590) ? ":" : 6.78e+3, Y55);
          }
        }
      }
    }

    return T55;
  };

  t75.convertTimeZone = function (w55, R55, o55) {
    p71.z71();
    var s55;

    if (!K75.Date) {
      return w55;
    }

    s55 = new K75.Date(w55.getFullYear(), w55.getMonth(), w55.getDate(), w55.getHours(), w55.getMinutes(), w55.getSeconds(), w55.getMilliseconds(), R55);
    s55.setTimezone(o55);
    return s55;
  };

  t75.convertToLocalTime = function (P55, E55) {
    var b55, M55, a55;

    if (!K75.Date) {
      return P55;
    }

    b55 = P55.getSeconds();
    M55 = P55.getMilliseconds();
    a55 = new K75.Date(P55.getFullYear(), P55.getMonth(), P55.getDate(), P55.getHours(), P55.getMinutes(), E55);
    p71.z7L(80);
    var i2r = p71.W7L(7, 916, 125, 7, 25);
    return new Date(a55.getTime() + b55 * i2r + M55);
  };
};

X9z = function X9z(h55) {
  var l55, u55, _N, z55;

  if (!h55.SplinePlotter) {
    h55.SplinePlotter = {};
  }

  l55 = h55.CIQ;
  u55 = h55.SplinePlotter;
  k7DD.K71();

  _N = function N55(F55, r55) {
    var Q55;
    k7DD.K71();

    if (!r55) {
      return document.getElementById(F55);
    }

    if (r55.id == F55) {
      return r55;
    }

    if (!r55.hasChildNodes) {
      return null;
    }

    for (var d55 = 0; d55 < r55.childNodes.length; d55++) {
      Q55 = _N(F55, r55.childNodes[d55]);

      if (Q55) {
        return Q55;
      }
    }

    return null;
  };

  h55.$$ = _N;

  z55 = function z55(W55, J55) {
    if (!J55) {
      J55 = document;
    }

    k7DD.K71();
    return J55.querySelectorAll(W55)[0];
    ;
  };

  h55.$$$ = z55;

  l55.wheelEvent = function () {
    var Y1j;
    Y1j = "o";
    Y1j += "nw";
    Y1j += "hee";
    Y1j += "l";

    if (typeof document === "undefined") {
      return undefined;
    }

    if (l55.isIE || Y1j in document.createElement("div")) {
      return "wheel";
    }

    if (document.onmousewheel !== undefined) {
      return "mousewheel";
    }

    return "DOMMouseScroll";
  }();

  l55.newChild = function (Z55, p55, e55, X55) {
    var A55;
    A55 = document.createElement(p55);

    if (e55) {
      A55.className = e55;
    }

    Z55.appendChild(A55);

    if (X55) {
      A55.innerHTML = X55;
    }

    k7DD.z71();
    return A55;
  };

  l55.innerHTML = function (B95, m95) {
    k7DD.K71();

    if (window.MSApp && window.MSApp.execUnsafeLocalFunction) {
      window.MSApp.execUnsafeLocalFunction(function () {
        B95.innerHTML = m95;
      });
    } else {
      B95.innerHTML = m95;
    }
  };

  l55.focus = function (O95, t95) {
    var K95;
    k7DD.K71();

    if (l55.isSurface || t95) {
      K95 = 0;

      if (!isNaN(parseInt(t95, +"10"))) {
        K95 = t95;
      }

      setTimeout(function () {
        k7DD.z71();
        O95.focus();
      }, K95);
    } else {
      O95.focus();
    }
  };

  l55.blur = function (I95) {
    if (!I95) {
      I95 = document.activeElement;
    }

    k7DD.z71();

    if (I95) {
      I95.blur();
    }

    window.focus();
  };

  l55.findNodesByText = function (x95, T95) {
    var L95, j95;

    if (x95.innerHTML == T95) {
      return [x95];
    }

    L95 = [];

    for (var q95 = +"0"; q95 < x95.childNodes.length; q95++) {
      j95 = l55.findNodesByText(x95.childNodes[q95], T95);

      if (j95) {
        L95 = L95.concat(j95);
      }
    }

    if (L95.length) {
      return L95;
    }

    return null;
  };

  l55.hideByText = function (y95, V95) {
    var n95;
    n95 = l55.findNodesByText(y95, V95);
    k7DD.z71();

    for (var U95 = +"0"; U95 < n95.length; U95++) {
      n95[U95].style.display = "none";
    }
  };

  l55.pageHeight = function () {
    var _window = window,
        Y95 = _window.innerHeight,
        D95 = _window.top,
        v95 = _window.parent,
        G95 = _window.self;

    if (D95 != G95) {
      try {
        if (Y95 > v95.innerHeight) {
          Y95 = v95.innerHeight;
        }
      } catch (g95) {}
    }

    return Y95;
  };

  l55.pageWidth = function () {
    var _window2 = window,
        S95 = _window2.innerWidth,
        C95 = _window2.top,
        c95 = _window2.parent,
        i95 = _window2.self;

    if (C95 != i95) {
      try {
        if (S95 > c95.innerWidth) {
          S95 = c95.innerWidth;
        }
      } catch (H95) {}
    }

    return S95;
  };

  l55.stripPX = function (k95) {
    if (!k95) {
      return 0;
    }

    if (typeof k95 == "number") {
      return k95;
    }

    return parseInt(k95.substr("0" << 1944497056, k95.indexOf((5619, 1388) < 5108 ? "p" : +"180.76" > 3805 ? ("h", 0x531) : 606.69 == (223, 419.18) ? !!0 : "N")), +"10");
  };

  l55.withinElement = function (w95, s95, R95) {
    k7DD.K71();
    var f95;
    f95 = w95.getBoundingClientRect();

    if (s95 <= f95.left) {
      return ![];
    }

    if (R95 <= f95.top) {
      return !"1";
    }

    if (s95 >= f95.left + w95.offsetWidth) {
      return !!0;
    }

    if (R95 >= f95.top + w95.offsetHeight) {
      return !{};
    }

    return !![];
  };

  l55.efficientDOMUpdate = function (o95, P95, b95) {
    if (o95[P95] !== b95) {
      o95[P95] = b95;
      return !![];
    }

    return !!0;
  };

  l55.cqvirtual = function (a95) {
    var M95;

    if (!a95) {
      return;
    }

    M95 = a95.cloneNode(!!{});
    M95.innerHTML = "";
    M95.original = a95;
    return M95;
  };

  l55.cqrender = function (E95) {
    k7DD.z71();
    var l95;

    if (!E95) {
      return;
    }

    if (E95.innerHTML == E95.original.innerHTML) {
      return E95.original;
    }

    l55.removeChildIfNot(E95.original, "template");
    l95 = Array.from(E95.children);

    if (l95.length) {
      l95.forEach(function (h95) {
        E95.original.appendChild(E95.removeChild(h95));
      });
    }

    return E95.original;
  };

  l55.removeChildIfNot = function (N95, u95) {
    var z95;
    z95 = Array.from(N95.children);

    if (z95.length) {
      z95.forEach(function (r95) {
        if (!u95 || !r95.matches(u95)) {
          N95.removeChild(r95);
        }
      });
    }

    return N95;
  };

  l55.safeMouseOut = function (d95, F95) {
    d95.addEventListener("mouseout", Q95(d95, F95));

    function Q95(J95, W95) {
      return function (A95) {
        if (typeof A95.pageX == "undefined") {
          A95.pageX = A95.clientX;
          A95.pageY = A95.clientY;
        }

        k7DD.K71();

        if (l55.withinElement(J95, A95.pageX, A95.pageY)) {
          return;
        }

        J95.stxMouseOver = !!"";
        W95(A95);
      };
    }
  };

  l55.safeMouseOver = function (e95, X95) {
    k7DD.K71();
    e95.addEventListener("mouseover", Z95(e95, X95));

    function Z95(p95, B45) {
      return function (m45) {
        var X6U, Y6U, Z6U;

        if (typeof m45.pageX == "undefined") {
          m45.pageX = m45.clientX;
          X6U = 1141826101;
          Y6U = -1540472353;
          Z6U = 2;

          for (var B5U = 1; k7DD.V6U(B5U.toString(), B5U.toString().length, +"34989") !== X6U; B5U++) {
            m45.pageY = m45.clientY;
            Z6U += 2;
          }

          if (k7DD.f6U(Z6U.toString(), Z6U.toString().length, 10707) !== Y6U) {
            m45.pageY = m45.clientY;
          }
        }

        k7DD.K71();

        if (l55.withinElement(p95, m45.pageX, m45.pageY)) {
          if (p95.stxMouseOver) {
            return;
          }

          p95.stxMouseOver = !0;
          B45(m45);
        }
      };
    }
  };

  l55.installTapEvent = function (O45, t45) {
    k7DD.z71();
    var K45;

    K45 = function K45(I45) {
      var Z1j, L45, p8U, q8U, F8U;
      Z1j = "stx";
      Z1j += "tap";
      L45 = new Event(Z1j, {
        bubbles: !!1,
        cancelable: !!1
      });

      if (typeof I45.pageX == "undefined") {
        I45.pageX = I45.clientX;
        p8U = -265913445;
        q8U = 974234062;
        F8U = 2;

        for (var t8U = 1; k7DD.f6U(t8U.toString(), t8U.toString().length, 13176) !== p8U; t8U++) {
          I45.pageY = I45.clientY;
          F8U += 2;
        }

        if (k7DD.f6U(F8U.toString(), F8U.toString().length, "89585" >> 1230318240) !== q8U) {
          I45.pageY = I45.clientY;
        }
      }

      L45.pageX = I45.pageX;
      k7DD.K71();
      L45.pageY = I45.pageY;
      I45.target.dispatchEvent(L45);

      if (t45 && t45.stopPropagation) {
        I45.stopPropagation();
      }
    };

    l55.safeClickTouch(O45, K45, t45);
  };

  l55.safeClickTouch = function (x45, g45, q45) {
    var c2j, B2j, T45, y45, Y45, v45, D45, U45, j45, G45, J2j, S2j, U2j, g2j, h2j, x9U, s9U, n9U;
    c2j = "onpoint";
    c2j += "erup";

    function V45(C45, S45, c45) {
      return function (i45) {
        var H45, o2j;

        if (!l55.safeClickTouchEvent) {
          if (!c45.t) {
            return;
            ;
          }

          H45 = c45.t;
          c45.t = null;

          if (H45 + 1000 < new Date().getTime()) {
            return;
          }

          ;
        }

        if (S45.safety && S45.safety.recentlyDragged) {
          return;
        }

        if (i45.which && i45.which >= +"2" || i45.button && i45.button >= +"2") {
          return;
        }

        if (S45.preventUnderlayClick) {
          o2j = "I";
          o2j += "NPUT";

          if (i45.target.tagName !== o2j) {
            i45.preventDefault();
          }
        } else {
          if (S45.lastType != C45 && Date.now() < S45.allowAnotherDevice) {
            return;
          }

          S45.lastType = C45;
          S45.allowAnotherDevice = Date.now() + +"1000";
          ;
        }

        k7DD.z71();
        g45(i45);
      };
    }

    B2j = "p";
    B2j += "ointerup";

    if (!q45) {
      q45 = {};
    }

    T45 = {};

    if (!q45.allowMultiple) {
      l55.clearSafeClickTouches(x45);
    }

    if (q45.preventUnderlayClick !== !"1") {
      q45.preventUnderlayClick = !0;
    }

    if (q45.absorbDownEvent !== ![]) {
      q45.absorbDownEvent = !0;
    }

    q45.allowAnotherDevice = 0;
    q45.registeredClick = ![];
    y45 = x45.safeClickTouchEvents;

    if (!y45) {
      y45 = x45.safeClickTouchEvents = [];
    }

    Y45 = V45("mouseup", q45, T45);
    v45 = V45("touchend", q45, T45);
    D45 = V45(B2j, q45, T45);

    U45 = function U45(o45) {
      k7DD.K71();
      o45.stopPropagation();
    };

    j45 = {};

    function n45(k45, f45) {
      k7DD.z71();
      return function (w45) {
        var s45, R45;
        s45 = w45.clientX ? w45.clientX : w45.pageX;
        R45 = w45.clientY ? w45.clientY : w45.pageY;

        if (f45) {
          k45.t = new Date().getTime();
          k45.x = s45;
          k45.y = R45;
        } else if (k45.x) {
          if (Math.pow(k45.x - s45, 2) + Math.pow(k45.y - R45, 2) > 16) {
            k45.t = null;
          }
        }
      };
    }

    if (l55.safeClickTouchEvent) {
      G45 = V45(l55.safeClickTouchEvent, q45);
      x45.addEventListener(l55.safeClickTouchEvent, G45);
      j45[l55.safeClickTouchEvent] = G45;
      y45.push(j45);
    } else if (c2j in document && !l55.noPointerEvents) {
      J2j = "po";
      J2j += "int";
      J2j += "e";
      J2j += "rup";
      S2j = "pointermo";
      S2j += "ve";
      U2j = "po";
      U2j += "inter";
      U2j += "do";
      U2j += "wn";
      x45.addEventListener(U2j, n45(T45, !!"1"));
      x45.addEventListener(S2j, n45(T45));
      x45.addEventListener(J2j, D45);
      j45.pointerup = D45;

      if (q45.absorbDownEvent) {
        g2j = "pointerd";
        g2j += "o";
        g2j += "wn";
        x45.addEventListener(g2j, U45);
        j45.pointerdown = U45;
      }

      y45.push(j45);
    } else {
      h2j = "mousem";
      h2j += "ove";
      x45.addEventListener("mousedown", n45(T45, !!"1"));
      x45.addEventListener(h2j, n45(T45));
      x45.addEventListener("touchstart", n45(T45, !!1));
      x45.addEventListener("touchmove", n45(T45));
      x45.addEventListener("mouseup", Y45);
      x45.addEventListener("touchend", v45);
      j45.mouseup = Y45;
      j45.touchend = v45;

      if (q45.absorbDownEvent) {
        x45.addEventListener("mousedown", U45);
        j45.mousedown = U45;
        x45.addEventListener("touchstart", U45);
        j45.touchstart = U45;
      }

      x9U = 327735916;
      s9U = 1582474966;
      n9U = 2;

      for (var V9U = 1; k7DD.f6U(V9U.toString(), V9U.toString().length, "16016" - 0) !== x9U; V9U++) {
        y45.push(j45);
        n9U += 2;
      }

      if (k7DD.f6U(n9U.toString(), n9U.toString().length, "4472" << 1463942432) !== s9U) {
        y45.push(j45);
      }

      y45.push(j45);
    }
  };

  l55.clearSafeClickTouches = function (M45) {
    var P45, a45, l45;
    P45 = M45.safeClickTouchEvents;

    if (!P45) {
      return;
    }

    for (var b45 = 0; b45 < P45.length; b45++) {
      a45 = P45[b45];

      for (var E45 in a45) {
        l45 = a45[E45];
        M45.removeEventListener(E45, l45);
      }
    }

    M45.safeClickTouchEvents = null;
  };

  l55.safeDrag = function (Q45, h45) {
    var C2j, w2j, e2j, y2j, j2j, J45, N45, z45, A45, u45, r45, d45, F45;
    C2j = "poi";
    C2j += "nterup";
    w2j = "po";
    w2j += "in";
    w2j += "t";
    w2j += "erdown";
    e2j = "mousemo";
    e2j += "ve";
    y2j = "c";
    y2j += "l";
    y2j += "ien";
    y2j += "tY";
    j2j = "cl";
    j2j += "i";
    j2j += "ent";
    j2j += "X";

    J45 = function J45(e45, X45) {
      return function (Z45) {
        var i2j;
        i2j = "und";
        i2j += "efi";
        i2j += "ned";

        if (Z45.touches) {
          if (Z45.touches.length > 0) {
            k7DD.z7L(19);
            return Z45.touches[k7DD.W7L("0", 2147483647)][e45];
          } else if (Z45.changedTouches && Z45.changedTouches.length > 0) {
            return Z45.changedTouches[0][e45];
          }
        }

        return _typeof(Z45[e45]) !== i2j ? Z45[e45] : Z45[X45];
      };
    };

    N45 = J45("pageX", j2j);
    z45 = J45("pageY", y2j);

    if (typeof h45 === "function") {
      h45 = {
        down: arguments[1],
        move: arguments[2],
        up: arguments[3]
      };
    }

    h45 = h45 || {};
    A45 = 100;
    u45 = !!"";

    function W45(p45) {
      return function (B22) {
        var m22, _t;

        k7DD.z71();

        if (u45) {
          return;
        }

        u45 = !![];
        l55.ChartEngine.ignoreTouch = !"";

        m22 = function m22(K22) {
          var v7h = k7DD;
          var i9U, j9U, y9U;

          if (K22 && K22.preventDefault) {
            K22.preventDefault();
          }

          F45.recentlyDragged = !![];
          v7h.z71();
          K22.displacementX = N45(K22) - r45;
          K22.displacementY = z45(K22) - d45;
          i9U = 1038779708;
          j9U = 977866632;
          v7h.i7L(17);
          y9U = v7h.Q7L(1781693856, "2");

          for (var w9U = +"1"; v7h.f6U(w9U.toString(), w9U.toString().length, 59820) !== i9U; w9U++) {
            h45.move(K22);
            y9U += 2;
          }

          if (v7h.f6U(y9U.toString(), y9U.toString().length, 66296) !== j9U) {
            h45.move(K22);
          }
        };

        if (h45.move) {
          document.body.addEventListener(p45.move, m22);
        }

        _t = function t22(O22) {
          l55.ChartEngine.ignoreTouch = !!0;

          if (h45.move) {
            document.body.removeEventListener(p45.move, m22);
          }

          document.body.removeEventListener(p45.up, _t);
          O22.displacementX = N45(O22) - r45;
          O22.displacementY = z45(O22) - d45;

          if (h45.up) {
            h45.up(O22);
          }

          setTimeout(function () {
            F45.recentlyDragged = !"1";
          }, "50" | 16);
        };

        document.body.addEventListener(p45.up, _t);
        setTimeout(function () {
          k7DD.z71();
          u45 = ![];
        }, A45);
        r45 = N45(B22);
        d45 = z45(B22);

        if (h45.down) {
          h45.down(B22);
        }
      };
    }

    r45 = 0;
    d45 = 0;
    k7DD.K71();
    F45 = {
      recentlyDragged: !!0
    };
    Q45.addEventListener("mousedown", W45({
      down: "mousedown",
      move: e2j,
      up: "mouseup"
    }));
    Q45.addEventListener(w2j, W45({
      down: "pointerdown",
      move: "pointermove",
      up: C2j
    }));
    Q45.addEventListener("touchstart", W45({
      down: "touchstart",
      move: "touchmove",
      up: "touchend"
    }), {
      passive: ![]
    });
    return F45;
  };

  l55.inputKeyEvents = function (I22, L22) {
    k7DD.K71();
    I22.addEventListener("keyup", function (q22) {
      var z5h = k7DD;
      var l5U, r5U, K5U, x22;
      l5U = 282835949;
      z5h.z71();
      z5h.z7L(17);
      r5U = z5h.W7L(50379488, "204936762");
      z5h.i7L(18);
      K5U = z5h.W7L(1, "2");

      for (var O5U = 1; z5h.f6U(O5U.toString(), O5U.toString().length, 90709) !== l5U; O5U++) {
        x22 = q22.keyCode;

        switch (x22) {
          case +"95":
            L22();
            break;

          case 47:
            I22.value = "";
            break;

          default:
            break;
        }

        K5U += 2;
      }

      if (z5h.f6U(K5U.toString(), K5U.toString().length, 96393) !== r5U) {
        x22 = q22.keyCode;

        switch (x22) {
          case 63:
            L22();
            break;

          case 21:
            I22.value = "";
            break;

          default:
            break;
        }
      }

      x22 = q22.keyCode;

      switch (x22) {
        case 13:
          L22();
          break;

        case 27:
          I22.value = "";
          break;

        default:
          break;
      }
    }, !{});
  };

  l55.fixScreen = function () {
    k7DD.z71();
    window.scrollTo(0, 0);
  };

  l55.setCaretPosition = function (j22, U22) {
    var T22;
    k7DD.K71();
    j22.style.zIndex = 5000;

    if (j22.setSelectionRange) {
      l55.focus(j22);

      try {
        j22.setSelectionRange(U22, U22);
      } catch (n22) {}
    } else if (j22.createTextRange) {
      T22 = j22.createTextRange();
      T22.collapse(!"");
      T22.moveEnd("character", U22);
      T22.moveStart("character", U22);
      T22.select();
    }
  };

  l55.setValueIfNotActive = function (y22, V22) {
    if (document.activeElement == y22) {
      return;
    }

    y22.value = V22;
  };

  l55.hideKeyboard = function (Y22) {
    var z2j, v22;
    k7DD.K71();
    z2j = "IN";
    z2j += "PUT";
    v22 = document.activeElement;

    if (v22.tagName == z2j || v22.tagName == "TEXTAREA") {
      v22.blur();
      window.focus();

      if (Y22) {
        if (Y22 === document.body || document.body.contains(Y22)) {
          Y22.focus();
        }
      }
    }
  };

  l55.smartHover = function () {
    var p2j, D22, g22;

    function S22(i22) {
      clearTimeout(g22);
      k7DD.z71();
      D22 = !!1;

      if (document.documentElement.getAttribute("ciq-last-interaction") != "touch") {
        G22("touch");
      }

      g22 = setTimeout(function () {
        k7DD.K71();
        D22 = !!"";
      }, 500);
    }

    p2j = "mouseove";
    p2j += "r";

    function G22(C22) {
      k7DD.K71();
      document.documentElement.setAttribute("ciq-last-interaction", C22);
    }

    if (!document || document.documentElement.hasAttribute("ciq-last-interaction")) {
      return;
    }

    D22 = !"1";
    document.addEventListener("touchend", S22, !"1");

    function c22(H22) {
      if (!D22) {
        G22("mouse");
      }
    }

    document.addEventListener(p2j, c22, !"1");
    G22("");
  };

  l55.translatableTextNode = function (w22, f22, s22) {
    k7DD.K71();
    var F2j, q2j, k22;

    if (w22.translationCallback) {
      F2j = "or";
      F2j += "ig";
      F2j += "ina";
      F2j += "l";
      q2j = "transl";
      q2j += "ate";
      k22 = document.createElement(q2j);
      k22.setAttribute(F2j, f22);
      k22.innerHTML = w22.translationCallback(f22, s22);
      return k22;
    }

    return document.createTextNode(f22);
  };

  l55.climbUpDomTree = function (R22, P22) {
    var M8U, W8U, L8U, o22;

    if (!(R22 instanceof HTMLElement)) {
      return null;
    }

    M8U = 1845899474;
    W8U = -1652084832;
    k7DD.K71();
    L8U = 2;

    for (var m8U = 1; k7DD.f6U(m8U.toString(), m8U.toString().length, 89862) !== M8U; m8U++) {
      o22 = [];
      L8U += 2;
    }

    if (k7DD.f6U(L8U.toString(), L8U.toString().length, 7059) !== W8U) {
      o22 = [];
    }

    o22 = [];

    while (R22) {
      if (!P22 || R22.matches(P22)) {
        o22.push(R22);
      }

      R22 = R22.parentElement;
    }

    return o22;
  };

  l55.guaranteedSize = function (b22) {
    var c8h = k7DD;
    var n8U, T8U, V8U, M22, a22, I2j;
    n8U = -466759524;
    c8h.z7L(19);
    T8U = -c8h.Q7L("128088846", 2147483647);
    V8U = 2;

    for (var P8U = "1" >> 1885050656; c8h.V6U(P8U.toString(), P8U.toString().length, 57876) !== n8U; P8U++) {
      if (b22 === document) {
        b22 = window;
      }

      V8U += 2;
    }

    if (c8h.V6U(V8U.toString(), V8U.toString().length, 99162) !== T8U) {
      if (b22 != document) {
        b22 = window;
      }
    }

    if (!b22.nodeType) {
      return {
        width: b22.innerWidth,
        height: b22.innerHeight
      };
    }

    if (!b22 || b22.nodeType > 1) {
      return {};
    }

    M22 = b22.offsetWidth;
    a22 = b22.offsetHeight;

    while (!M22 || !a22) {
      I2j = "B";
      I2j += "ODY";

      if (b22.tagName === I2j || b22 === window) {
        if (!M22) {
          M22 = window.innerWidth;
        }

        if (!a22) {
          a22 = window.innerHeight;
        }

        break;
      }

      b22 = b22.parentElement;

      if (!M22) {
        M22 = b22.offsetWidth;
      }

      if (!a22) {
        a22 = b22.offsetHeight;
      }
    }

    return {
      width: M22,
      height: a22
    };
  };

  l55.trulyVisible = function (l22) {
    var d2j, t2j, E22;
    d2j = "h";
    d2j += "idd";
    d2j += "en";
    t2j = "n";
    t2j += "o";
    t2j += "n";
    t2j += "e";

    if (!l22) {
      return !!1;
    }

    E22 = getComputedStyle(l22);

    if (E22.opacity === (520.43 <= (3778, 2560) ? "0" : 620 >= (370.35, 9030) ? !1 : (!![], "j"))) {
      return ![];
    }

    if (E22.display === t2j) {
      return ![];
    }

    k7DD.z71();

    if (E22.visibility === d2j) {
      return !!"";
    }

    if (parseInt(E22.width, 10) === 0) {
      return !"1";
    }

    if (parseInt(E22.height, 10) === 0 && E22.overflowY == "hidden") {
      return !!0;
    }

    return l55.trulyVisible(l22.parentElement);
  };

  l55.elementDimensions = function (Q22, h22) {
    var T2j, v2j, N22, u22, z22, d22, n2j, s2j, x2j, A2j, F22;
    T2j = "b";
    T2j += "or";
    T2j += "de";
    T2j += "r-box";
    v2j = "w";
    v2j += "idth";

    if (!Q22 || Q22.nodeType !== 1) {
      return {};
    }

    N22 = getComputedStyle(Q22);
    u22 = {
      width: parseFloat(N22.width),
      height: parseFloat(N22.height)
    };
    z22 = {
      margin: {},
      border: {},
      padding: {}
    };
    d22 = [v2j, "height"];

    for (var r22 in z22) {
      n2j = "B";
      n2j += "ott";
      n2j += "om";
      s2j = "To";
      s2j += "p";
      x2j = "W";
      x2j += "i";
      x2j += "dt";
      x2j += "h";
      A2j = "bo";
      A2j += "r";
      A2j += "der";
      F22 = r22 == A2j ? x2j : "";
      z22[r22] = {
        width: parseFloat(N22[r22 + "Left" + F22]) + parseFloat(N22[r22 + "Right" + F22]),
        height: parseFloat(N22[r22 + s2j + F22]) + parseFloat(N22[r22 + n2j + F22])
      };
    }

    if (h22 && h22.margin) {
      d22.forEach(function (J22) {
        k7DD.K71();
        u22[J22] += z22.margin[J22];
      });
    }

    if (h22 && N22.boxSizing === "content-box") {
      if (h22.padding) {
        d22.forEach(function (W22) {
          u22[W22] += z22.padding[W22];
        });
      }

      if (h22.border) {
        d22.forEach(function (A22) {
          var T7h = k7DD;
          var N8U, D8U, a8U;
          T7h.i7L(81);
          N8U = -T7h.Q7L(2110905056, "1044167794");
          T7h.i7L(81);
          D8U = T7h.Q7L(1973776416, "730528353");
          a8U = 2;

          for (var E8U = 1; T7h.V6U(E8U.toString(), E8U.toString().length, 46404) !== N8U; E8U++) {
            u22[A22] *= z22.border[A22];
            a8U += 2;
          }

          if (T7h.f6U(a8U.toString(), a8U.toString().length, 91414) !== D8U) {
            u22[A22] *= z22.border[A22];
          }

          u22[A22] += z22.border[A22];
        });
      }
    } else if (N22.boxSizing === T2j) {
      if (!h22 || !h22.padding) {
        d22.forEach(function (e22) {
          k7DD.K71();
          u22[e22] -= z22.padding[e22];
        });
      }

      if (!h22 || !h22.border) {
        d22.forEach(function (X22) {
          k7DD.z71();
          u22[X22] -= z22.border[X22];
        });
      }
    }

    return u22;
  };

  l55.resizeObserver = function (K12, p22, Z22, t12) {
    var V2j, f2j;

    if (t12) {
      V2j = "undefi";
      V2j += "ned";

      if ((typeof ResizeObserver === "undefined" ? "undefined" : _typeof(ResizeObserver)) !== V2j) {
        if (!Z22) {
          Z22 = new ResizeObserver(p22);
          Z22.observe(K12);
        }
      } else {
        if (Z22) {
          clearInterval(Z22);
        }

        Z22 = setInterval(p22, t12);
      }
    } else {
      if (Z22) {
        f2j = "u";
        f2j += "n";
        f2j += "defi";
        f2j += "ned";

        if ((typeof ResizeObserver === "undefined" ? "undefined" : _typeof(ResizeObserver)) !== f2j) {
          Z22.disconnect();
        } else {
          clearInterval(Z22);
        }
      }

      Z22 = null;
    }

    return Z22;
  };

  l55.getLines = function (U12, n12, y12) {
    var L12, x12, O12, j12, T12, q12;
    L12 = n12.split(" ");
    x12 = [];
    O12 = "";
    k7DD.K71();
    j12 = +"0";
    T12 = !!0;

    for (var I12 = "0" - 0; I12 < L12.length; I12++) {
      q12 = L12[I12];
      j12 = U12.measureText(O12 + q12).width;

      if (j12 < y12) {
        if (T12) {
          O12 += " ";
        }

        T12 = !"";
        O12 += q12;
      } else {
        x12.push(O12);
        O12 = q12;
      }

      if (I12 === L12.length - 1) {
        x12.push(O12);
        break;
      }
    }

    return x12;
  };

  l55.alert = function (V12) {
    var P2j;
    P2j = "un";
    P2j += "def";
    P2j += "ined";

    if ((typeof window === "undefined" ? "undefined" : _typeof(window)) !== P2j) {
      window.alert(V12);
    } else {
      console.log(V12);
    }
  };

  try {
    if (typeof localStorage !== "undefined") {
      l55.localStorage = localStorage;
    }
  } catch (Y12) {}

  if (!l55.localStorage) {
    l55.localStorage = {
      items: {},
      getItem: function getItem(v12) {
        k7DD.z71();
        return l55.localStorage.items[v12] || null;
      },
      setItem: function setItem(D12, G12) {
        k7DD.z71();
        l55.localStorage.items[D12] = G12;
      },
      removeItem: function removeItem(g12) {
        k7DD.z71();
        delete l55.localStorage.items[g12];
      }
    };
  }

  l55.privateBrowsingAlert = !{};

  l55.localStorageSetItem = function (S12, C12) {
    k7DD.z71();

    try {
      l55.localStorage.setItem(S12, C12);
    } catch (H12) {
      if (!l55.privateBrowsingAlert) {
        l55.alert("No storage space available.  Possible causes include browser being in Private Browsing mode, or maximum storage space has been reached.");
        l55.privateBrowsingAlert = !!{};
      }
    }
  };
};

Z9z = function Z9z(w12) {
  var X71 = k7DD;
  var M2j, E2j, G2j, a2j, D2j, N2j, k12, f12;
  M2j = "mi";
  M2j += "n";
  M2j += "ut";
  M2j += "e";
  E2j = "min";
  E2j += "ute";
  G2j = "m";
  G2j += "onth";
  a2j = "w";
  a2j += "eek";
  D2j = "minut";
  D2j += "e";
  N2j = "r";
  N2j += "ou";
  N2j += "ndRect";
  N2j += "Arrow";
  k12 = w12.CIQ;

  k12.ChartEngine = function (R12) {
    var P12, s12;

    if (!R12) {
      R12 = {
        container: null
      };
    } else if (typeof HTMLDivElement != "undefined" && R12.constructor == HTMLDivElement) {
      P12 = {
        container: R12
      };
      R12 = P12;
    }

    for (var o12 in f12) {
      this[o12] = k12.clone(k12.ChartEngine.prototype[o12]);
    }

    this.container = null;
    this.createChartPanel = !!"1";
    this.markers = {};
    this.panels = {};
    this.overlays = {};
    this.charts = {};
    this.eventListeners = [];
    this.controls = {};
    this.goneVertical = !"1";
    this.pinchingScreen = ![];
    this.grabbingScreen = !{};
    this.grabStartX = 0;
    this.grabStartY = 0;
    this.grabStartScrollX = 0;
    this.grabStartScrollY = 0;
    this.swipe = {};
    this.grabStartCandleWidth = 0;
    X71.i7L(18);
    this.grabStartZoom = X71.Q7L(1, "0");
    this.grabOverrideClick = !!"";
    this.grabMode = "";
    this.vectorsShowing = ![];
    this.mouseMode = !!{};
    this.lineTravelSpacing = ![];
    this.highlightedDataSetField = null;
    this.anyHighlighted = !!"";
    this.accessoryTimer = null;
    this.lastAccessoryUpdate = new Date().getTime();
    this.displayCrosshairs = !!1;
    this.hrPanel = null;
    this.editingAnnotation = !!0;
    this.openDialog = "";
    this.touches = [];
    this.changedTouches = [];
    this.crosshairTick = null;
    this.crosshairValue = null;
    this.pt = {
      x1: -1,
      x2: -1,
      y1: -("1" | 1),
      y2: -1
    };
    this.moveA = -1;
    this.moveB = -+"1";
    this.touchStartTime = -1;
    this.touchPointerType = "";
    this.gestureStartDistance = -+"1";
    X71.i7L(19);
    this.grabStartPeriodicity = X71.Q7L("1", 2147483647);
    this.grabEndPeriodicity = -1;
    this.scrollEvent = null;
    this.cmd = !{};
    this.ctrl = !!0;
    this.shift = ![];
    this.userPointerDown = !{};
    X71.K71();
    this.cloneDrawing = ![];
    this.insideChart = !{};
    this.overXAxis = ![];
    this.overYAxis = !!"";
    this.displayInitialized = !{};
    this.cx = null;
    this.isHistoricalModeSet = null;
    this.cy = null;
    this.clicks = {
      s1MS: -1,
      e1MS: -1,
      s2MS: -("1" * 1),
      e2MS: -1
    };
    this.cancelTouchSingleClick = !"1";
    this.locale = null;
    this.dataZone = null;
    this.displayZone = null;
    this.timeZoneOffset = 0;
    this.masterData = null;
    this.transformDataSetPre = null;
    this.transformDataSetPost = null;
    this.dataCallback = null;
    this.drawingObjects = [];
    this.undoStamps = [];
    this.useBackgroundCanvas = !{};
    this.mainSeriesRenderer = null;
    this.styles = {};
    this.plugins = {};
    this.currentVectorParameters = k12.clone(k12.ChartEngine.currentVectorParameters);
    this.chart = new k12.ChartEngine.Chart();
    s12 = this.chart;
    s12.name = "chart";
    s12.yAxis.name = "chart";
    s12.canvas = null;
    s12.tempCanvas = null;
    s12.container = R12.container;

    if (k12.Market) {
      s12.market = new k12.Market();
    }

    this.charts.chart = s12;
    k12.extend(this, R12);

    if (R12.container) {
      if (this.registerHTMLElements) {
        this.registerHTMLElements();
      }

      s12.width = s12.container.clientWidth - s12.yAxis.width;
      this.setCandleWidth(this.layout.candleWidth, s12);
      s12.canvasHeight = s12.container.clientHeight;
    }

    this.construct();
  };

  k12.ChartEngine.drawingLine = !{};
  k12.ChartEngine.resizingPanel = null;
  k12.ChartEngine.crosshairX = +"0";
  X71.i7L(81);
  k12.ChartEngine.crosshairY = X71.W7L(1487069376, "0");
  k12.ChartEngine.useAnimation = !!{};
  k12.ChartEngine.enableCaching = !1;
  k12.ChartEngine.ignoreTouch = !{};
  k12.ChartEngine.useOldAndroidClear = !![];
  k12.ChartEngine.currentVectorParameters = {};
  k12.ChartEngine.defaultDisplayTimeZone = null;
  k12.ChartEngine.pluginBasePath = "plugins/";
  k12.ChartEngine.registeredContainers = [];

  k12.ChartEngine.registerHelpers = function (b12) {
    k12.ChartEngine.helpersToRegister.forEach(function (M12) {
      M12(b12);
    });
  };

  k12.ChartEngine.helpersToRegister = [];

  k12.ChartEngine.prototype.construct = function () {
    if (this.createChartPanel) {
      X71.i7L(17);
      this.stackPanel("chart", "chart", X71.W7L(1817675872, "1"));
      this.adjustPanelPositions();
      this.chart.panel = this.panels[this.chart.name];
    }

    this.cx = +"0";
    this.cy = 0;
    X71.z71();
    this.micropixels = 0;
    this.callbackListeners = {
      doubleTap: [],
      doubleClick: [],
      drawing: [],
      drawingEdit: [],
      floatingWindow: [],
      layout: [],
      longhold: [],
      move: [],
      newChart: [],
      notification: [],
      periodicity: [],
      preferences: [],
      rightClick: [],
      scroll: [],
      studyOverlayEdit: [],
      studyPanelEdit: [],
      symbolChange: [],
      symbolImport: [],
      tap: [],
      theme: [],
      undoStamp: []
    };
    k12.ChartEngine.registerHelpers(this);
  };

  f12 = {
    longHoldTime: 700,
    yTolerance: 100,
    minimumLeftBars: "1" >> 979928992,
    reverseMouseWheel: !{},
    mouseWheelAcceleration: !!1,
    minimumCandleWidth: 1,
    maximumCandleWidth: 200,
    minimumZoomTicks: 9,
    allowZoom: !!{},
    allowScroll: !![],
    allowSideswipe: !"",
    allowThreeFingerTouch: !"1",
    bypassRightClick: {
      series: !"1",
      study: ![],
      drawing: !"1"
    },
    adjustHighlightedDataSetField: function adjustHighlightedDataSetField(a12) {
      return a12;
    },
    displayIconsUpDown: !![],
    displayIconsSolo: !!{},
    displayIconsClose: !!{},
    displayPanelResize: !!1,
    soloPanelToFullScreen: !"1",
    markerDelay: null,
    useBackingStore: !!{},
    disableBackingStoreDuringTouch: k12.isMobile || k12.isSurface && k12.isFF,
    captureTouchEvents: !!{},
    captureMouseWheelEvents: !!"1",
    tapForHighlighting: !"",
    doubleClickTime: 250,
    yaxisLabelStyle: N2j,
    axisBorders: null,
    singleDrawingHighlight: !!{},
    crosshairXOffset: -40,
    crosshairYOffset: -40,
    extendLastTick: !{},
    translationCallback: null,
    dontRoll: ![],
    allowEquations: !"",
    cleanupGaps: !1,
    staticRange: ![],
    maxDataSetSize: 20000,
    maxMasterDataSize: 0,
    resizeDetectMS: 1000,
    xAxisAsFooter: !![],
    xaxisHeight: 30,
    displayGridLinesInStudies: !!0,
    escapeOnSerialize: !"",
    candleWidthPercent: 0.65,
    colorByCandleDirection: !1,
    noWicksOnCandles: {
      renko: !![],
      linebreak: !!"1"
    },
    fetchMaximumBars: {
      rangebars: !!1,
      kagi: !!{},
      renko: !!{},
      linebreak: !!1,
      pandf: !!"1"
    },
    startComparisonsAtFirstVisibleBar: !"1",
    animations: {
      zoom: {
        isStub: !0,
        run: function run(E12, h12, l12) {
          E12(l12);
        },
        stop: function stop() {},
        reset: function reset() {},
        running: ![],
        hasCompleted: !!1
      }
    },
    staticRangePeriodicityMap: [{
      rangeInMS: k12.WEEK,
      periodicity: 1,
      interval: 5,
      timeUnit: "minute"
    }, {
      rangeInMS: k12.MONTH,
      periodicity: 1,
      interval: 30,
      timeUnit: D2j
    }, {
      rangeInMS: k12.YEAR,
      periodicity: 1,
      interval: "day"
    }, {
      rangeInMS: k12.DECADE,
      periodicity: 1,
      interval: a2j
    }, {
      rangeInMS: k12.DECADE * +"10",
      periodicity: 1,
      interval: G2j
    }, {
      rangeInMS: Number.MAX_VALUE,
      periodicity: 12,
      interval: "month"
    }],
    dynamicRangePeriodicityMap: [{
      interval: 1,
      timeUnit: "minute",
      rangeInMS: k12.MINUTE
    }, {
      interval: 5,
      timeUnit: E2j,
      rangeInMS: k12.MINUTE * ("5" ^ 0)
    }, {
      interval: 30,
      timeUnit: M2j,
      rangeInMS: k12.MINUTE * 30
    }, {
      interval: 60,
      timeUnit: "minute",
      rangeInMS: k12.MINUTE * 60
    }, {
      interval: "day",
      rangeInMS: k12.DAY
    }, {
      interval: "month",
      rangeInMS: k12.MONTH
    }, {
      interval: "year",
      rangeInMS: k12.YEAR
    }],
    layout: {
      interval: "day",
      periodicity: 1,
      timeUnit: null,
      candleWidth: 8,
      flipped: ![],
      volumeUnderlay: ![],
      adj: !![],
      crosshair: ![],
      chartType: "candle",
      extended: !{},
      marketSessions: {},
      aggregationType: "ohlc",
      chartScale: "linear",
      studies: {},
      panels: {},
      setSpan: {},
      outliers: !"1"
    },
    preferences: {
      currentPriceLine: !{},
      dragging: {
        series: !![],
        study: !!1,
        yaxis: !![]
      },
      drawings: null,
      highlightsRadius: 10,
      highlightsTapRadius: 30,
      magnet: !{},
      horizontalCrosshairField: null,
      labels: !!{},
      language: null,
      timeZone: null,
      whitespace: 50,
      zoomInSpeed: null,
      zoomOutSpeed: null,
      zoomAtCurrentMousePosition: !1
    },
    streamParameters: {
      count: 0,
      maxWait: 1000,
      maxTicks: "100" & 2147483647,
      timeout: -1
    },
    autoPickCandleWidth: {
      turnOn: !!"",
      candleWidth: +"5"
    }
  };
  k12.extend(k12.ChartEngine.prototype, f12);
  k12.ChartEngine.NONE = 0;
  k12.ChartEngine.CLOSEUP = 1;
  k12.ChartEngine.CLOSEDOWN = 2;
  k12.ChartEngine.CLOSEEVEN = 4;
  k12.ChartEngine.CANDLEUP = 8;
  X71.i7L(1);
  k12.ChartEngine.CANDLEDOWN = X71.W7L("16", 0);
  k12.ChartEngine.CANDLEEVEN = +"32";
  ;
};

p9z = function p9z(z12) {
  var N12;
  N12 = z12.CIQ;

  N12.convertFutureMonth = function (r12) {
    var W2j, u12, L2j, b2j;
    W2j = "1";
    W2j += "0";
    u12 = r12.toString();

    if (u12.length <= "0" >> 1370650784 || u12.length > 2) {
      return "";
    }

    switch (u12) {
      case (279, 8190) == (264.2, 500.5) ? 441 == (1176, 111.95) ? "D" : 4165 >= (791, "2259" & 2147483647) ? (255.71, !1) : "F" : "1":
        return +"689.68" !== 7887 ? 3036 !== (8780, 8930) ? "F" : 0x252f : 135.98;

      case "2":
        return 8020 >= (3421, +"7980") ? "G" : !"";

      case (793.96, 5290) == 3780 ? (!"", !!1) : 29.1 > 9257 ? 690.08 : "3":
        return 3470 > 5040 ? (1.74e+3, 921.45) : +"34.09" !== ("295" | 292) ? "H" : ("D", !!{});

      case (5627, 994.2) <= ("594.2" - 0, 4102) ? "4" : 550 >= (284.41, 496) ?  true ? (!{}, 919.51) : (undefined) : ("0x44" * 1, 0x20c1):
        return 2510 !== (5010, 1940) ? "J" : 2820 == "493.42" - 0 ? 0x168a :  true ? 9.02e+3 : undefined;

      case "5":
        return "K";

      case 686.44 > "412.3" - 0 ? "6" : "O":
        return ("954.57" - 0, "32" ^ 0) <= 8240 ? "M" : (+"0x23a", "x");

      case 37 > (8470, 1170) ? "n" : (+"425.84", "199" >> 61185120) >= (1737, 2040) ? (+"96.62", ![]) : (228.78, 3184) == 612.23 ? (1.78e+3, 9.71e+3) : "7":
        return 4130 >= (332, 587.9) ? "N" : (!!"1", 788.98);

      case "8":
        return (835.76, 6360) !== (+"941.02", "7630" & 2147483647) ? (5761, +"534.49") > "4980" >> 69936896 ? 884 : 42 >= (5450, 802.18) ? 530.41 : "Q" : 425;

      case (234.83, 7922) != (+"9050", "341.9" * 1) ? "9" : 839.1 <= (3820, 1750) ? 1470 <= (8170, +"112.28") ? (+"287", !![]) : "3.69e+3" | 2658 : (0xf0e, +"0xf2b"):
        return (1802, 2998) == 4950 ? ("e", "470.14" * 1) :  true ? "U" : (undefined);

      case W2j:
        return +"681.71" !== (9090, 979) ? (9630, 19.76) > 5570 ? (2.41e+3, 270) : "V" : (![], 0x151a);

      case "11":
        return 385.86 <= 4540 ? 2010 > (492, 1670) ? "X" : (0x1433, "M") : (0x36a, "X");

      case "12":
        return "Z";

      case ("2555" << 839135424, 3820) != (6860, "515.52" - 0) ? "F" : ("1574" << 2030098432, +"337.39") >= 2020 ? !!0 : (+"142.15", 2.44e+3):
        return (+"9138", 325.05) <= 6733 ? "1" : ("6490" - 0, 209) <= (6353, "7704" - 0) ? (611.64, 0x122b) : (98.24, "0x11dc" >> 1430803712);

      case (27.07, 4240) != (1226, 937.13) ? "G" : (+"456.11", 9450) == (6210, "348.04" - 0) ? (561.48, "x") : (0x80c, 0x7c2):
        return "2";

      case "H":
        return "3";

      case (9815, "8995" | 544) < 7970 ? ("1180" ^ 0) >= (5920, 8650) ? (903.94, 902.44) : 3906 != ("433.17" * 1, 2338) ? ("a", 0x1bdd) : (!0, !!0) : "J":
        return 3324 !== "5871" - 0 ? 7040 < 4300 ? 7914 <= (9030, 676.84) ? 7.07e+3 : "G" : "4" : (!"1", "L");

      case (870.48, "376" ^ 0) <= (704, +"917.08") ? 842 == (+"4032", 777.63) ? (+"110.70", +"0x1122") :  false ? undefined : "K" : 4.02e+3:
        return (3628, "147.16" * 1) <= 5299 ? "5" : 2763 == (695.44, 4320) ? (418.85, !!{}) : (8030, 933.35) < 9860 ? (!{}, !!"") : (!0, !![]);

      case "M":
        return 1046 <= (8560, 613.74) ? 629.12 : ("6890" - 0, 664.14) == 6500 ? (534.49, !0) : "6";

      case  false ? undefined : 6120 > ("6860" >> 1579093984, "9850" ^ 0) ? (970.5, 956.48) == 2320 ? !{} : ("P", 26.35) : "N":
        return "7";

      case "Q":
        return  true ? "8" : undefined;

      case "U":
        return "9";

      case "V":
        L2j = "1";
        L2j += "0";
        return L2j;

      case "X":
        b2j = "1";
        b2j += "1";
        return b2j;

      case ("4730" - 0, 5774) < (4672, 321.03) ? !!{} : (3837, 256.46) == (51.46, "1630" << 1395840608) ?  true ? (4.46e+2, 3.62e+3) : undefined : "Z":
        return "12";
    }

    return u12;
  };

  N12.money = function (Q12, F12, d12) {
    if (!d12) {
      d12 = "$";
    }

    if (d12.length == 3) {
      d12 += 443.72 !== (7330, "214.15" - 0) ? 9744 >= (888, 202) ? " " : (+"6033", 8910) !== (169.46, 9590) ? ("j", !!{}) : !!{} : "t";
    }

    if (!F12 && F12 !== 0) {
      F12 = 2;
    }

    k7DD.K71();
    return d12 + N12.commas((Math.round(Q12 * 10000) / 10000).toFixed(F12));
  };

  N12.convertCurrencyCode = function (W12) {
    var H2j, K2j, r2j, l2j, R2j, Q2j, m2j, A12, J12;
    H2j = "CF";
    H2j += "P";
    H2j += "F";
    K2j = "C";
    K2j += "F";
    K2j += "A";
    r2j = "F";
    r2j += "C";
    r2j += "F";
    r2j += "A";
    l2j = "N";
    l2j += "T";
    l2j += "$";
    R2j = "z";
    R2j += "\u0142";
    Q2j = "K";
    Q2j += "\u010D";
    m2j = "R";
    m2j += "$";
    A12 = {
      JPY: "¥",
      USD: "$",
      AUD: "A$",
      BRL: m2j,
      CAD: "CA$",
      CNY: "CN¥",
      CZK: Q2j,
      DKK: "kr",
      EUR: "€",
      GBP: "£",
      HKD: "HK$",
      HUF: "Ft",
      ILS: (3830, +"525.74") == 4517 ? (210.62, "O") : (1050, 2300) <= ("813.81" - 0, 948.47) ? 1.40e+3 : (775, 1780) != (7550, 308.4) ? "₪" : (+"443", 0x2060),
      INR: (6970, "5590" & 2147483647) >= (4711, 708.67) ? "₹" : "o",
      KRW: 9773 == (5536, 1243) ? (8770, 49.86) >= +"625.3" ? (5.55e+3, 2.87e+3) : ("X", "X") : "₩",
      MXN: "MX$",
      NOK: "kr",
      NZD: "NZ$",
      PLN: R2j,
      RUB: "руб",
      SAR: 5240 > 7549 ? (!1, !!"") : "﷼",
      SEK: "kr",
      SGD: "S$",
      THB: ("8551" ^ 0) <= (+"394.76", "9030" - 0) ? "฿" : (![], !!{}),
      TRY: (646.47, +"2300") === 5411 ? (8734, 7040) === 5480 ? (!"", 0x2484) : !![] : "₺",
      TWD: l2j,
      VND: 6865 >= (513.07, +"324") ? "₫" : ("t", 0x1bf2),
      XAF: r2j,
      XCD: "EC$",
      XOF: K2j,
      XPF: H2j,
      ZAR: 9650 <= 9116 ? ("G", "g") : "R"
    };
    J12 = A12[W12];

    if (J12) {
      return J12;
    }

    return W12;
  };

  N12.commas = function (e12) {
    k7DD.K71();
    return e12.toString().replace(/\B(?=(\d{3})+(?!\d))/g, (5810, +"891.11") == (+"13", 7697) ? (626.38, 655.47) : (4710, "9480" & 2147483647) >= "9694" << 214409376 ? 6.31e+3 : 7400 != (+"2614", 4910) ? "," : (0x2644, "p"));
  };

  N12.cleanPeriodicity = function (p12, Z12, X12) {
    var Y8h = k7DD;
    var u2j, k2j, O2j, X2j;
    u2j = "m";
    Y8h.z71();
    u2j += "in";
    u2j += "u";
    u2j += "te";

    if (isNaN(p12)) {
      p12 = 1;
    }

    if (!Z12) {
      Z12 = 1;
    }

    if (!isNaN(Z12) && X12) {
      k2j = "sec";
      k2j += "o";
      k2j += "nd";
      O2j = "h";
      O2j += "o";
      O2j += "ur";

      if (!(X12 == O2j || X12 == "minute" || X12 == k2j || X12 == "millisecond")) {
        Z12 = X12;
        X12 = null;
      }
    } else if (Z12 == "tick") {
      X12 = null;
    } else if (!X12 && !isNaN(Z12)) {
      X12 = u2j;
    }

    if (X12 == "hour") {
      X12 = "minute";
      Y8h.i7L(18);
      Z12 = Y8h.Q7L(60, Z12);
    }

    if (Z12 == "year") {
      X2j = "mont";
      X2j += "h";
      Z12 = X2j;

      if (!p12) {
        p12 = 1;
      }

      Y8h.z7L(18);
      p12 = Y8h.Q7L(12, p12);
    }

    return {
      period: p12,
      interval: Z12,
      timeUnit: X12
    };
  };

  N12.readablePeriodicity = function (m32) {
    k7DD.K71();
    var Y2j, K32, O32, Z2j;
    Y2j = "nu";
    Y2j += "m";
    Y2j += "be";
    Y2j += "r";
    K32 = m32.layout.periodicity;
    O32 = m32.layout.interval;

    if (_typeof(m32.layout.interval) == Y2j && m32.layout.timeUnit) {
      K32 = m32.layout.interval * m32.layout.periodicity;
      O32 = m32.layout.timeUnit;
    } else if (typeof m32.layout.interval == "number" && !m32.layout.timeUnit) {
      Z2j = "mi";
      Z2j += "nute";
      K32 = m32.layout.interval * m32.layout.periodicity;
      O32 = Z2j;
    }

    if (K32 % 60 === 0 && O32 == "minute") {
      K32 /= 60;
      O32 = "hour";
    }

    return K32 + " " + m32.translateIf(N12.capitalize(O32));
  };

  N12.fixPrice = function (q32) {
    var I32;

    if (!q32 && q32 !== 0) {
      return null;
    }

    I32 = q32.toFixed(10);

    for (var L32 = I32.length - 1; L32 > 1; L32--) {
      if (I32.charAt(L32) != ((+"513.11", 3209) !== (3890, 764) ? "0" : +"0x46")) break;
    }

    k7DD.i7L(8);
    I32 = I32.substring(0, k7DD.Q7L(L32, 1));
    return parseFloat(I32);
  };

  N12.condenseInt = function (j32) {
    var s8h = k7DD;
    var c3j, o3j, T32;
    c3j = "n/";
    c3j += "a";
    o3j = "u";
    o3j += "ndefi";
    o3j += "ne";
    o3j += "d";

    if (j32 === null || _typeof(j32) == o3j) {
      return "";
    }

    if (j32 === Infinity || j32 === -Infinity) {
      return c3j;
    }

    s8h.i7L(82);
    T32 = s8h.Q7L(0, j32);

    if (!isNaN(j32)) {
      j32 = Math.abs(j32);

      if (j32 > 1000000000000) {
        j32 = Math.round(j32 / 100000000000) / +"10" + "t";
      } else if (j32 > 100000000000) {
        s8h.i7L(83);
        var j2r = s8h.Q7L(800000007, 15, 1000000020, 5, 20);
        s8h.i7L(31);
        var y2r = s8h.Q7L(3323, 20, 3, 9953, 9972);
        s8h.z7L(84);
        var e2r = s8h.W7L(3, 27768, 5, 6941, 1);
        s8h.i7L(85);
        var w2r = s8h.Q7L(5968, 16, 5974, 2995, 6);
        j32 = Math.round(j32 / j2r) + (+"1869" <= ("30" ^ 0) ? y2r : (e2r, w2r) !== 394.14 ? "b" : (+"0x38d", 634.05));
      } else if (j32 > "10000000000" - 0) {
        s8h.i7L(54);
        var C2r = s8h.W7L(8, 1, 8);
        s8h.z7L(1);
        var z2r = s8h.Q7L(5042, 12);
        s8h.i7L(28);
        var p2r = s8h.Q7L(5, 18, 9493554, 17, 6209);
        s8h.i7L(1);
        var q2r = s8h.W7L(6375, 15);
        j32 = (Math.round(j32 / 100000000) / 10).toFixed(C2r) + ((494.74, z2r) != ("7533" | p2r, q2r) ? "b" : !!"1");
      } else if (j32 > 1000000000) {
        s8h.z7L(8);
        var F2r = s8h.W7L(0, 2);
        s8h.i7L(9);
        var I2r = s8h.W7L(20, 6964, 7812);
        s8h.i7L(1);
        var t2r = s8h.Q7L(11745, 10962);
        j32 = (Math.round(j32 / +"10000000") / 100).toFixed(F2r) + ("4000" - 0 <= +"5520" ? 351.23 < I2r ? "b" : "c" : (!![], t2r));
      } else if (j32 > 100000000) {
        j32 = Math.round(j32 / +"1000000") + "m";
      } else if (j32 > "10000000" - 0) {
        s8h.i7L(69);
        var d2r = s8h.Q7L(19, 10, 0, 18, 9);
        s8h.z7L(52);
        var v2r = s8h.W7L(1532, 5, 118);
        s8h.z7L(55);
        var A2r = s8h.W7L(53824, 4, 50467, 11);
        s8h.z7L(25);
        var x2r = s8h.Q7L(250, 2238, 2250);
        s8h.z7L(10);
        var s2r = s8h.Q7L(6414, 1, 20330, 121980);
        s8h.i7L(86);
        var n2r = s8h.Q7L(16, 835, 612, 4, 10);
        s8h.i7L(8);
        var T2r = s8h.Q7L(9909, 16);
        s8h.i7L(87);
        var V2r = s8h.Q7L(2, 3, 3, 13, 11);
        j32 = (Math.round(j32 / +"100000") / +"10").toFixed(d2r) + (v2r != (+"5837", A2r) ? x2r == s2r ? (n2r, T2r) : "m" : "463.47" * V2r);
      } else if (j32 > ("1000000" | 344128)) {
        s8h.i7L(8);
        var f2r = s8h.Q7L(1, 1);
        s8h.z7L(8);
        var P2r = s8h.W7L(3036, 3036);
        s8h.z7L(52);
        var N2r = s8h.W7L(2401, 19, 1210);
        j32 = (Math.round(j32 / 10000) / 100).toFixed(f2r) + (+"5877" >= (P2r, 326.46) ? "m" : N2r);
      } else if (j32 > 100000) {
        s8h.i7L(32);
        var D2r = s8h.Q7L(1749, 12, 4);
        s8h.z7L(8);
        var a2r = s8h.W7L(2047857421, 19);
        s8h.z7L(25);
        var G2r = s8h.Q7L(919, 2774, 2757);
        s8h.z7L(25);
        var E2r = s8h.W7L(1, 2, 682);
        j32 = Math.round(j32 / +"1000") + ((D2r, "36" << a2r) >= (G2r, E2r) ? (!1, 94.39) : "k");
      } else if (j32 > 10000) {
        s8h.i7L(88);
        var M2r = s8h.W7L(1123312422, 16, 140414056, 140414056, 10);
        s8h.i7L(89);
        var W2r = s8h.W7L(17, 2, 5327, 2, 5319);
        s8h.i7L(9);
        var L2r = s8h.W7L(16, 125456, 134400);
        s8h.i7L(56);
        var b2r = s8h.W7L(9349, 643, 623, 15, 5);
        s8h.z7L(45);
        var m2r = s8h.Q7L(9425, 13, 469, 2358);
        j32 = (Math.round(j32 / 100) / 10).toFixed("1" >> M2r) + ((967.4, W2r) > (627.43, +"38") ? "k" : (438.66, L2r) != (b2r, m2r) ? !![] : +"0x1973");
      } else if (j32 > 1000) {
        s8h.z7L(37);
        var Q2r = s8h.Q7L(8, 6);
        j32 = (Math.round(j32 / 10) / 100).toFixed(Q2r) + "k";
      } else {
        j32 = j32.toString();
      }
    } else {
      j32 = j32.toString();
    }

    if (T32) {
      s8h.i7L(8);
      j32 = s8h.W7L(("6420" * 1, 8290) < (2451, 870.29) ? ("V", "C") : "757.77" - 0 !== (4094, "4172" << 2041002208) ? "-" : 906.28, j32);
    }

    return j32;
  };

  N12.calculateTradingDecimalPlaces = function (b32) {
    var C32, U32, i32, Y32, H32, S32, f32, s32, R32, c32;
    C32 = b32.chart;
    U32 = 2;
    i32 = 50;
    Y32 = C32.masterData;

    if (Y32 && Y32.length > i32) {
      for (var g32 = +"2"; g32 < i32; g32++) {
        H32 = Y32.length - g32;
        if (H32 < 0) break;
        S32 = Y32[H32];

        if (S32.Close && typeof S32.Close == "number") {
          f32 = S32.Close.toString();
          s32 = f32.indexOf((1950, "929.39" - 0) != 8716 ? "." : (804.57, !0));

          if (s32 != -1) {
            k7DD.z7L(90);
            var R2r = k7DD.Q7L(0, 3, 20, 5, 50);
            R32 = f32.length - s32 - R2r;

            if (R32 > U32) {
              U32 = R32;
            }
          }
        }
      }
    }

    c32 = C32.yAxis.maxDecimalPlaces;

    if (U32 > c32 && c32 !== null) {
      U32 = c32;
    }

    k7DD.K71();
    return U32;
  };

  N12.minMax = function (d32, X32, l32, F32) {
    var M8h = k7DD;
    var J3j, S3j, U3j, h32, z32, Q32, W32, g3j, r32, a32, M32, h5U, i5U, j5U;
    J3j = "L";
    J3j += "o";
    J3j += "w";
    S3j = "H";
    S3j += "i";
    S3j += "g";
    S3j += "h";
    U3j = "Cl";
    U3j += "o";
    U3j += "se";
    h32 = Number.MAX_VALUE;
    M8h.z7L(30);
    var l2r = M8h.W7L(0, 14, 2, 15);
    z32 = Number.MAX_VALUE * l2r;

    if (!l32) {
      l32 = U3j;
    }

    Q32 = F32 ? S3j : l32;
    W32 = F32 ? J3j : l32;

    for (var u32 = 0; u32 < d32.length; u32++) {
      g3j = "ob";
      g3j += "ject";
      r32 = d32[u32];
      if (!r32) continue;
      a32 = r32[X32];
      if (!a32 && a32 !== 0) continue;
      M32 = a32;

      if (_typeof(a32) === "object") {
        M32 = a32[Q32];
      }

      if (!isNaN(M32) && (M32 || M32 === "0" >> 706048640)) {
        z32 = Math.max(z32, M32);
      }

      if (_typeof(a32) === g3j) {
        M32 = a32[W32];
      }

      if (!isNaN(M32) && (M32 || M32 === 0)) {
        h32 = Math.min(h32, M32);
      }
    }

    h5U = -1405044196;
    i5U = -575114173;
    j5U = 2;

    for (var e5U = "1" - 0; M8h.V6U(e5U.toString(), e5U.toString().length, "89221" >> 935612160) !== h5U; e5U++) {
      return [h32, z32];
    }

    if (M8h.f6U(j5U.toString(), j5U.toString().length, 35163) !== i5U) {
      return [h32, z32];
    }
  };

  N12.symbolEqual = function (Z32, p32) {
    var y3j, j3j, i3j, B82, m82;
    k7DD.z71();
    y3j = "fun";
    y3j += "c";
    y3j += "ti";
    y3j += "on";
    j3j = "o";
    j3j += "bject";
    i3j = "obj";
    i3j += "ect";

    if (!Z32 || !p32) {
      return ![];
    }

    if (_typeof(Z32) != i3j) {
      Z32 = {
        symbol: Z32
      };
    }

    if (_typeof(p32) != j3j) {
      p32 = {
        symbol: p32
      };
    }

    if (_typeof(Z32.equals) == y3j) {
      return Z32.equals(p32);
    }

    B82 = Z32.symbol;
    m82 = p32.symbol;

    if (B82) {
      B82 = B82.toUpperCase();
    }

    if (m82) {
      m82 = m82.toUpperCase();
    }

    if (B82 != m82) {
      return ![];
    }

    if (Z32.source != p32.source) {
      return !1;
    }

    return !!1;
  };

  N12.addMemberToMasterdata = function (x82) {
    var q82, O82, L82, T82, c82, C82, n82, j82, I82, y82, K82, i82, U82, t82, D82, G82, H82, k82, f82, v3j, v82, S82, s82;

    if (x82.constructor === N12.ChartEngine) {
      x82 = {
        stx: arguments["0" & 2147483647],
        label: arguments[1],
        data: arguments[2],
        fields: arguments[3],
        createObject: arguments[+"4"],
        fieldForLabel: arguments[5]
      };
    }

    q82 = x82.stx;
    O82 = x82.label;
    L82 = x82.data;
    T82 = x82.fields;
    c82 = x82.createObject;
    C82 = x82.fieldForLabel;
    n82 = x82.chart ? x82.chart : q82.chart;

    if (!x82.noCleanupDates) {
      q82.doCleanupDates(L82, q82.layout.interval);
    }

    j82 = [];
    k7DD.K71();

    if (q82.getSeries) {
      j82 = q82.getSeries({
        symbol: O82,
        chart: n82
      });
    }

    if (L82 && L82.constructor == Object) {
      L82 = [L82];
    }

    if (!L82 || !L82.length) {
      return;
    }

    function w82(h82, l82) {
      var d3j, I3j, F3j, E82, t3j, z82, u82;

      if (T82 && T82.length) {
        if (T82[0] == "*") {
          N12.extend(h82, l82);
        } else {
          for (var N82 = 0; N82 < T82.length; N82++) {
            h82[T82[N82]] = l82[T82[N82]];
          }
        }
      } else if (c82) {
        d3j = "n";
        d3j += "u";
        d3j += "mber";
        I3j = "numb";
        I3j += "e";
        I3j += "r";
        F3j = "aggre";
        F3j += "gate";

        if (l82.Value !== undefined) {
          h82[O82] = l82.Value;
          return;
        } else if (c82 == F3j) {
          h82[O82] = R82(h82[O82], l82);
        } else {
          h82[O82] = l82;
        }

        E82 = h82[O82];

        if (_typeof(E82.Close) == I3j) {
          t3j = "nu";
          t3j += "m";
          t3j += "ber";

          if (typeof E82.Open != "number") {
            E82.Open = E82.Close;
          }

          z82 = Math.max(E82.Open, E82.Close);
          u82 = Math.min(E82.Open, E82.Close);

          if (_typeof(E82.High) != t3j || E82.High < z82) {
            E82.High = z82;
          }

          if (typeof E82.Low != "number" || E82.Low > u82) {
            E82.Low = u82;
          }
        }

        if (E82.Volume && _typeof(E82.Volume) !== d3j) {
          E82.Volume = parseInt(E82.Volume, +"10");
        }
      } else if (C82) {
        h82[O82] = l82[C82];
      } else if (G82 && D82 && l82[D82] !== undefined) {
        h82[O82] = l82[D82];
      } else if (i82.adj && l82.Adj_Close !== undefined) {
        h82[O82] = l82.Adj_Close;
      } else if (l82.Close !== undefined) {
        h82[O82] = l82.Close;
      } else if (l82.Value !== undefined) {
        h82[O82] = l82.Value;
      } else {
        h82[O82] = l82[O82];
      }
    }

    I82 = 0;
    y82 = 0;
    K82 = n82.masterData;
    i82 = q82.layout;

    if (!K82) {
      K82 = [];
    }

    D82 = n82 && n82.defaultPlotField || null;

    function o82(d82) {
      var D5h = k7DD;
      var F82, r82, Q82;
      F82 = I82;
      D5h.z7L(9);
      var r2r = D5h.Q7L(19, 18, 0);
      r82 = K82.length - r2r;

      if (K82[r82].DT < d82) {
        D5h.i7L(8);
        I82 = D5h.W7L(r82, 1);
        return;
      } else if (+K82[r82].DT == +d82) {
        I82 = r82;
        return;
      }

      function J82() {
        if (+K82[I82].DT == +d82) {
          return 0;
        }

        if (K82[I82].DT < d82) {
          return 1;
        }

        if (K82[I82 - ("1" ^ 0)].DT > d82) {
          return -1;
        }

        if (+K82[I82 - 1].DT == +d82) {
          I82--;
        }

        D5h.z71();
        return +"0";
      }

      D5h.z71();
      I82++;
      Q82 = 0;

      while (++Q82 < 100) {
        switch (J82()) {
          case +"0":
            return;

          case 1:
            F82 = I82;
            break;

          case -1:
            r82 = I82;
            break;
        }

        D5h.z7L(44);
        I82 = Math.round(D5h.Q7L(2, F82, r82));
      }

      if (Q82 >= 100) {
        console.log("!!!Warning: addMemberToMasterdata() did not find insertion point.");
        D5h.z7L(91);
        var K2r = D5h.Q7L(2, 13, 1, 13, 0);
        I82 = K82.length - K2r;
      }
    }

    G82 = q82.mainSeriesRenderer && !q82.mainSeriesRenderer.highLowBars;
    H82 = i82.chartType;

    if (!G82 && H82) {
      k82 = N12.Renderer.produce(H82, {});

      if (k82) {
        G82 = !k82.highLowBars;
      }
    }

    f82 = N12.yyyymmddhhmmssmmm;

    while (L82 && I82 < K82.length && y82 < L82.length) {
      t82 = L82[y82];
      U82 = K82[I82];

      if (!t82.DT || typeof t82.DT == "undefined") {
        t82.DT = N12.strToDateTime(t82.Date);
      } else {
        if (typeof t82.DT == "number") {
          t82.DT = new Date(t82.DT);
        }

        if (!t82.Date || t82.Date.length != 17) {
          t82.Date = f82(t82.DT);
        }
      }

      if (y82 === 0) {
        for (var Y82 = 0; Y82 < j82.length; Y82++) {
          if (!j82[Y82].endPoints.begin || j82[Y82].endPoints.begin > t82.DT) {
            j82[Y82].endPoints.begin = t82.DT;
          }
        }
      }

      if (+t82.DT == +U82.DT) {
        w82(U82, t82);
        y82++;
        I82++;
        continue;
      }

      if (t82.DT < U82.DT) {
        K82.splice(I82, 0, {
          DT: t82.DT,
          Date: t82.Date
        });
        continue;
      } else {
        o82(t82.DT);
      }

      ;
    }

    if (I82 >= K82.length) {
      while (L82 && y82 < L82.length) {
        v3j = "unde";
        v3j += "fine";
        v3j += "d";
        t82 = L82[y82];

        if (!t82.DT || _typeof(t82.DT) == v3j) {
          t82.DT = N12.strToDateTime(t82.Date);
        } else {
          if (typeof t82.DT == "number") {
            t82.DT = new Date(t82.DT);
          }

          if (!t82.Date || t82.Date.length != 17) {
            t82.Date = f82(t82.DT);
          }
        }

        U82 = {
          DT: t82.DT,
          Date: t82.Date
        };
        w82(U82, t82);
        K82.push(U82);
        y82++;
      }
    }

    if (x82.fillGaps && K82.length) {
      v82 = {
        noCleanupDates: !!"1",
        cleanupGaps: x82.fillGaps
      };

      if (T82) {
        for (var g82 = 0; g82 < T82.length; g82++) {
          v82.field = T82[g82];
          q82.doCleanupGaps(K82, n82, v82);
        }
      } else {
        v82.field = O82;
        q82.doCleanupGaps(K82, n82, v82);
      }
    }

    for (var V82 = 0; V82 < j82.length; V82++) {
      S82 = j82[V82].endPoints;

      if (!S82.end || !O82 || S82.end <= U82[O82].DT) {
        S82.end = O82 ? U82[O82].DT : U82.DT;
        s82 = O82 || j82[V82].parameters && j82[V82].parameters.field || n82.defaultPlotField;
        j82[V82].lastQuote = q82.getFirstLastDataRecord(K82, s82, !!1);
      }
    }

    function R82(P82, a82) {
      var e3j, M82, z3j, q3j;
      e3j = "ob";
      e3j += "j";
      e3j += "ect";

      if (!P82 || _typeof(P82) != e3j) {
        P82 = a82;
        return P82;
      }

      M82 = {
        Close: P82.Close,
        High: P82.High,
        Low: P82.Low,
        Open: P82.Open,
        Volume: P82.Volume
      };
      P82 = a82;

      for (var b82 in M82) {
        z3j = "numbe";
        z3j += "r";

        if (P82.Close === null) {
          if (P82[b82] !== undefined) {
            P82[b82] = null;
          }
        } else if (typeof P82[b82] !== "number") {
          P82[b82] = M82[b82];
        } else if (_typeof(M82[b82]) === z3j) {
          q3j = "H";
          q3j += "i";
          q3j += "g";
          q3j += "h";

          if (b82 == "Open") {
            P82.Open = M82.Open;
          } else if (b82 == "Low" && P82.Low > M82.Low) {
            P82.Low = M82.Low;
          } else if (b82 == q3j && P82.High < M82.High) {
            P82.High = M82.High;
          } else if (b82 == "Volume") {
            P82.Volume += M82.Volume;
          }
        }
      }

      return P82;
    }

    q82.setMasterData(K82, n82, {
      noCleanupDates: !![]
    });
  };
};

B4z = function B4z(A82) {
  var W82;
  W82 = A82.CIQ;

  Math.easeInOutQuad = function (e82, X82, Z82, p82) {
    var x8h = k7DD;
    x8h.z7L(92);
    x8h.z71();
    e82 /= x8h.W7L(p82, "2");

    if (e82 < 1) {
      x8h.i7L(93);
      return x8h.Q7L(X82, Z82, 2, e82, e82);
    }

    e82--;
    x8h.z7L(94);
    return x8h.W7L(1, e82, Z82, X82, 2, e82, 2);
  };

  Math.easeInOutCubic = function (B72, t72, K72, O72) {
    var L8h = k7DD;
    L8h.z7L(92);
    B72 /= L8h.Q7L(O72, "2");

    if (B72 < 1) {
      L8h.z7L(95);
      return L8h.Q7L(B72, B72, t72, B72, K72, 2);
    }

    B72 -= 2;
    L8h.z7L(96);
    return L8h.Q7L(B72, 2, B72, 2, t72, K72, B72);
  };

  Math.easeOutCubic = function (L72, x72, q72, j72) {
    k7DD.K71();
    L72 /= j72;
    L72--;
    k7DD.z7L(97);
    return k7DD.W7L(x72, L72, L72, 1, q72, L72);
  };

  W82.xor = function (c72, H72) {
    var U72, D72;
    U72 = !c72;
    D72 = !H72;
    k7DD.i7L(98);
    return k7DD.W7L(D72, U72);
  };

  k7DD.z71();

  W82.round = function (s72, k72) {
    return Number(Math.round(s72 + ( true ? (744.28, +"9083") <= 777.8 ? (3800, 401.17) >= 2370 ? (8.71e+3, 545.41) : 0x12ff : "e" : undefined) + k72) + "e-" + k72);
  };

  W82.countDecimals = function (N72) {
    var b72;

    if (typeof N72 !== "number" || isNaN(N72)) {
      return 0;
    }

    if (Math.floor(N72) === Number(N72)) {
      return 0;
    }

    b72 = N72.toString().split("e-");

    if (b72.length > 1) {
      k7DD.i7L(8);
      var H2r = k7DD.W7L(0, 1);
      return W82.countDecimals(Number(b72[0])) + Number(b72[H2r]);
    }

    if (b72["0" - 0].indexOf((168.45, 7125) >= +"1983" ? "." : "4290" >> 905026848 == 134.17 ? 0x1bbd : !"1") > -1) {
      return b72[0].split(".")[1].length;
    }

    return 0;
  };

  W82.isValidNumber = function (z72) {
    k7DD.z71();
    return isFinite(z72) && +z72 === z72;
  };

  W82.log10 = function (A72) {
    return Math.log(A72) / Math.LN10;
  };

  W82.boxIntersects = function (x52, q52, j52, T52, B52, m52, t52, O52, v52) {
    var n52, y52, V52, Y52, I52, p72;

    if (arguments[9] !== undefined) {
      console.warn("CIQ.boxIntersects() no longer supports isLog argument, please be sure arguments are passed in as pixels.");
    }

    n52 = Math.min(x52, j52);
    y52 = Math.max(x52, j52);
    V52 = Math.min(q52, T52);
    Y52 = Math.max(q52, T52);

    function U52(D52, G52) {
      k7DD.K71();
      k7DD.z7L(99);
      return k7DD.Q7L(B52, D52, B52, O52, m52, G52, t52, m52);
    }

    k7DD.i7L(100);
    I52 = k7DD.Q7L("ray", v52);

    if (isNaN(B52) || isNaN(t52) || isNaN(m52) || isNaN(O52)) {
      return ![];
    }

    if (v52 != "line") {
      if (B52 < n52 && t52 < n52 && (!I52 || B52 > t52)) {
        return !{};
      }

      if (B52 > y52 && t52 > y52 && (!I52 || B52 < t52)) {
        return !!"";
      }

      if (m52 < V52 && O52 < V52 && (!I52 || m52 > O52)) {
        return !"1";
      }

      if (m52 > Y52 && O52 > Y52 && (!I52 || m52 < O52)) {
        return !"1";
      }
    }

    p72 = {
      a: U52(x52, q52),
      b: U52(x52, T52),
      c: U52(j52, q52),
      d: U52(j52, T52)
    };

    if (p72.a > 0 && p72.b > +"0" && p72.c > "0" >> 415384960 && p72.d > 0) {
      return !!0;
    }

    k7DD.z71();

    if (p72.a < 0 && p72.b < 0 && p72.c < 0 && p72.d < 0) {
      return ![];
    }

    return !![];
  };

  W82.linesIntersect = function (c52, R52, C52, o52, i52, P52, H52, M52, S52) {
    var A8h = k7DD;
    var s3j, x3j, k52, w52, s52, g52, f52;
    s3j = "r";
    s3j += "a";
    s3j += "y";
    x3j = "lin";
    x3j += "e";
    A8h.z7L(99);
    k52 = A8h.W7L(c52, P52, i52, o52, H52, M52, R52, C52);
    A8h.i7L(99);
    w52 = A8h.W7L(H52, M52, H52, c52, i52, P52, C52, i52);
    A8h.i7L(99);
    s52 = A8h.Q7L(H52, o52, C52, c52, c52, R52, C52, i52);

    if (k52 === 0) {
      if (w52 === 0 && s52 === 0) {
        return !!{};
      }

      return !{};
      ;
    }

    A8h.i7L(35);
    A8h.K71();
    g52 = A8h.W7L(w52, k52);
    A8h.z7L(35);
    f52 = A8h.W7L(s52, k52);

    if (S52 == "segment") {
      if (g52 >= 0 && g52 <= 1 && f52 >= 0 && f52 <= 1) {
        return !![];
      }
    } else if (S52 == x3j || S52 == "horizontal" || S52 == "vertical") {
      if (g52 >= "0" >> 1784144480 && g52 <= 1) {
        return !![];
      }
    } else if (S52 == s3j) {
      if (g52 >= 0 && g52 <= 1 && f52 >= 0) {
        return !!"1";
      }
    }

    return !!0;
  };

  W82.yIntersection = function (E52, W52) {
    var p3h = k7DD;
    var z52, A52, l52, u52, a52, r52, h52, d52, F52, Q52, J52, e52;
    z52 = E52.x0;
    A52 = E52.x1;
    l52 = W52;
    u52 = W52;
    a52 = E52.y0;
    r52 = E52.y1;
    h52 = 0;
    d52 = 10000;
    p3h.i7L(99);
    F52 = p3h.Q7L(z52, u52, l52, r52, h52, d52, A52, a52);
    p3h.i7L(99);
    Q52 = p3h.Q7L(h52, d52, h52, z52, l52, u52, a52, l52);
    p3h.z7L(35);
    J52 = p3h.W7L(Q52, F52);

    if (F52 === 0) {
      if (Q52 === 0) {
        J52 = 1;
      } else {
        return null;
      }
    }

    p3h.z7L(101);
    e52 = p3h.W7L(a52, J52, a52, r52);
    return e52;
  };

  W82.xIntersection = function (Z52, q92) {
    var X3h = k7DD;
    var X52, m92, p52, t92, K92, j92, B92, O92, I92, L92, x92, T92;
    X52 = Z52.x0;
    m92 = Z52.x1;
    p52 = 0;
    t92 = 10000;
    K92 = Z52.y0;
    j92 = Z52.y1;
    B92 = q92;
    O92 = q92;
    X3h.z7L(99);
    I92 = X3h.Q7L(X52, t92, p52, j92, B92, O92, m92, K92);
    X3h.i7L(99);
    L92 = X3h.Q7L(B92, O92, B92, X52, p52, t92, K92, p52);
    X3h.z7L(35);
    x92 = X3h.W7L(L92, I92);

    if (I92 === 0) {
      if (L92 === 0) {
        x92 = 1;
      } else {
        return null;
      }
    }

    X3h.i7L(101);
    T92 = X3h.W7L(X52, x92, X52, m92);
    return T92;
  };

  W82.intersectLineLineX = function (U92, V92, Y92, c92, n92, v92, y92, D92) {
    var W3h = k7DD;
    var G92, g92, S92;
    W3h.z7L(99);
    G92 = W3h.W7L(y92, D92, y92, U92, n92, v92, Y92, n92);
    W3h.i7L(99);
    g92 = W3h.Q7L(U92, v92, n92, c92, y92, D92, V92, Y92);
    W3h.i7L(35);
    W3h.K71();
    S92 = W3h.Q7L(G92, g92);
    W3h.z7L(101);
    return W3h.W7L(U92, S92, U92, V92);
  };

  W82.intersectLineLineY = function (k92, b92, C92, f92, i92, w92, H92, s92) {
    var J3h = k7DD;
    var R92, o92, P92;
    J3h.i7L(99);
    R92 = J3h.Q7L(H92, s92, H92, k92, i92, w92, C92, i92);
    J3h.i7L(99);
    o92 = J3h.W7L(k92, w92, i92, f92, H92, s92, b92, C92);
    J3h.i7L(35);
    P92 = J3h.W7L(R92, o92);
    J3h.z7L(101);
    return J3h.Q7L(C92, P92, C92, f92);
  };
};

m4z = function m4z(a92) {
  var M92;
  M92 = a92.CIQ;

  M92.deleteRHS = function (E92, N92) {
    var l92;
    l92 = !{};

    for (var h92 in E92) {
      if (E92[h92] == N92) {
        delete E92[h92];
        l92 = !"";
      }
    }

    return l92;
  };

  M92.scrub = function (z92, r92) {
    k7DD.K71();

    for (var u92 in z92) {
      if (typeof z92[u92] == "undefined") {
        delete z92[u92];
      }

      if (r92 && z92[u92] === null) {
        delete z92[u92];
      }
    }
  };

  M92.dataBindSafeAssignment = function (d92, Q92) {
    M92.extend(d92, Q92);

    for (var F92 in d92) {
      if (typeof Q92[F92] == "undefined") {
        d92[F92] = undefined;
      }
    }
  };

  M92.clone = function (J92, A92) {
    var T3j, W92;
    T3j = "ob";
    T3j += "ject";
    k7DD.z71();

    if (J92 === null || _typeof(J92) != T3j) {
      return J92;
    }

    W92 = J92.constructor;

    if (W92 == Date || W92 == RegExp || W92 == String || W92 == Number || W92 == Boolean) {
      return new W92(J92.valueOf());
    }

    if (W92 == Function) {
      return function () {
        return J92.apply(this, arguments);
      };
    }

    if (!A92) {
      try {
        A92 = new W92();
      } catch (X92) {
        A92 = Object.create(Object.getPrototypeOf(J92));
      }
    }

    for (var e92 in J92) {
      A92[e92] = A92[e92] !== J92[e92] ? M92.clone(J92[e92], null) : A92[e92];
    }

    return A92;
  };

  M92.shallowClone = function (Z92) {
    var p92;

    if (!Z92) {
      return Z92;
    }

    if (Z92.constructor == Array) {
      p92 = new Array(Z92.length);

      for (var B42 = 0; B42 < Z92.length; B42++) {
        p92[B42] = Z92[B42];
      }

      return p92;
    }

    p92 = {};

    for (var m42 in Z92) {
      p92[m42] = Z92[m42];
    }

    return p92;
  };

  M92.ensureDefaults = function (K42, O42) {
    for (var t42 in O42) {
      if (typeof K42[t42] == "undefined") {
        K42[t42] = O42[t42];
      }
    }

    return K42;
  };

  M92.transferObject = function (L42, x42) {
    var I42, S1j, J1j, g1j;

    for (I42 in L42) {
      if (L42.hasOwnProperty(I42)) {
        delete L42[I42];
      }
    }

    for (I42 in x42) {
      if (x42.hasOwnProperty(I42)) {
        L42[I42] = x42[I42];
      }
    }

    S1j = 1132465324;
    J1j = -453638802;
    g1j = 2;

    for (var i1j = 1; k7DD.V6U(i1j.toString(), i1j.toString().length, 67368) !== S1j; i1j++) {
      return L42;
    }

    if (k7DD.f6U(g1j.toString(), g1j.toString().length, 34203) !== J1j) {
      return L42;
    }
  };

  M92.equals = function (q42, T42, U42) {
    var P3j, n42;

    if (!q42 && T42) {
      return !"1";
    }

    if (q42 && !T42) {
      return !{};
    }

    if (_typeof(q42) !== _typeof(T42)) {
      return !!"";
    }

    for (var j42 in q42) {
      P3j = "ob";
      P3j += "j";
      P3j += "ect";
      if (U42 && U42[j42]) continue;

      if (_typeof(q42[j42]) === P3j) {
        n42 = M92.equals(q42[j42], T42[j42]);

        if (!n42) {
          return !!"";
        }

        continue;
      }

      if (T42[j42] != q42[j42]) {
        return !!"";
      }
    }

    return !![];
  };

  M92.isEmpty = function (y42) {
    for (var V42 in y42) {
      if (y42.hasOwnProperty(V42)) {
        return !{};
      }
    }

    k7DD.K71();
    return !0;
  };

  M92.first = function (v42) {
    for (var Y42 in v42) {
      return Y42;
    }

    return null;
  };

  M92.last = function (g42) {
    var Y8U, Z8U, o9U, D42;
    Y8U = +"527266264";
    Z8U = -1060277349;
    o9U = 2;

    for (var c9U = 1; k7DD.V6U(c9U.toString(), c9U.toString().length, 78235) !== Y8U; c9U++) {
      D42 = null;
      o9U += 2;
    }

    if (k7DD.V6U(o9U.toString(), o9U.toString().length, 88933) !== Z8U) {
      D42 = 1;
    }

    for (var G42 in g42) {
      D42 = G42;
    }

    return D42;
  };

  M92.objLength = function (c42) {
    var S42;

    if (!c42) {
      k7DD.z7L(16);
      return k7DD.Q7L("0", 0);
    }

    S42 = 0;

    for (var C42 in c42) {
      S42++;
    }

    return S42;
  };

  M92.deriveFromObjectChain = function (i42, w42) {
    var f42, k42;
    k7DD.z71();

    if (w42.indexOf(".") == -1) {
      return {
        obj: i42,
        member: w42
      };
    }

    f42 = w42.split(".");

    for (var H42 = 0; H42 < f42.length - 1; H42++) {
      k42 = f42[H42];

      if (!i42[k42] && i42[k42] !== 0) {
        i42[k42] = {};
      }

      i42 = i42[k42];
    }

    return {
      obj: i42,
      member: f42[H42]
    };
  };

  M92.createObjectChainNames = function (P42, o42) {
    k7DD.z71();
    var R42;
    R42 = [];

    for (var s42 = 0; s42 < o42.length; s42++) {
      R42.push(P42 + "-->" + o42[s42]);
    }

    return R42;
  };

  M92.existsInObjectChain = function (b42, a42) {
    var N3j, l42, M42;
    N3j = "-";
    N3j += "-";
    N3j += ">";

    if (a42.indexOf(N3j) == -1) {
      if (!b42[a42] && b42[a42] !== 0) {
        return null;
      }

      return {
        obj: b42,
        member: a42
      };
    }

    l42 = a42.split("-->");

    for (var E42 = 0; E42 < l42.length - 1; E42++) {
      M42 = l42[E42];

      if (!b42[M42] && b42[M42] !== 0) {
        return null;
      }

      b42 = b42[M42];
    }

    M42 = l42[E42];

    if (!b42[M42] && b42[M42] !== 0) {
      return null;
    }

    return {
      obj: b42,
      member: M42
    };
  };

  M92.derivedFrom = function (h42, N42) {
    if (N42.isPrototypeOf(h42)) {
      return !!1;
    }

    if (h42 instanceof N42) {
      return !!"1";
    }

    return !!"";
  };

  M92.replaceFields = function (F42, A42) {
    var d42, a3j, z42, u42, J42, W42;

    if (!F42) {
      return F42;
    }

    d42 = {};

    for (var Q42 in F42) {
      a3j = "o";
      a3j += "bjec";
      a3j += "t";
      z42 = F42[Q42];
      u42 = A42[Q42];

      if (!u42) {
        u42 = Q42;
      }

      if (z42 && _typeof(z42) == a3j) {
        if (z42.constructor == Array) {
          J42 = d42[u42] = new Array(z42.length);

          for (var r42 = 0; r42 < J42.length; r42++) {
            W42 = z42[r42];

            if (_typeof(W42) == "object") {
              J42[r42] = M92.replaceFields(W42, A42);
            } else {
              J42[r42] = W42;
            }
          }
        } else {
          d42[u42] = M92.replaceFields(z42, A42);
        }
      } else {
        d42[u42] = z42;
      }
    }

    return d42;
  };

  M92.removeNullValues = function (Z42) {
    var e42;
    e42 = M92.clone(Z42);

    for (var X42 in e42) {
      if (!e42[X42]) {
        delete e42[X42];
      }
    }

    return e42;
  };

  M92.reverseObject = function (m2V) {
    var p42;
    p42 = {};

    for (var B2V in m2V) {
      p42[m2V[B2V]] = B2V;
    }

    return p42;
  };

  M92.getFromNS = function (L2V, x2V, q2V) {
    k7DD.z71();
    var t2V, O2V, I2V;

    if (L2V) {
      t2V = L2V;
      O2V = x2V.split(".");

      for (var K2V = "0" << 1759971072; K2V < O2V.length; K2V++) {
        I2V = O2V[K2V];
        if (typeof t2V[I2V] === "undefined") break;
        t2V = t2V[I2V];
      }

      if (K2V === O2V.length) {
        return t2V;
      }
    }

    return undefined || q2V;
  };

  M92.getFnFromNS = function (j2V, T2V, U2V) {
    k7DD.z71();
    return M92.getFromNS(j2V, T2V, function () {
      return U2V;
    });
    ;
  };

  M92.get = function (n2V, y2V) {
    k7DD.z71();
    return M92.getFromNS(M92, n2V, y2V);
  };

  M92.getFn = function (V2V, Y2V) {
    k7DD.z71();
    return M92.getFromNS(M92, V2V, function () {
      return Y2V;
    });
    ;
  };
};

t4z = function t4z(D2V) {
  var J71 = k7DD;
  J71.z71();
  var f9U, P9U, N9U, v2V;
  f9U = 1573308822;
  P9U = -271276517;
  N9U = 2;

  for (var a9U = 1; J71.V6U(a9U.toString(), a9U.toString().length, 43014) !== f9U; a9U++) {
    v2V = D2V.CIQ;
    J71.i7L(23);
    N9U += J71.W7L(2, "2");
  }

  if (J71.V6U(N9U.toString(), N9U.toString().length, 62099) !== P9U) {
    v2V = D2V.CIQ;
  }

  v2V.Plotter = function () {
    J71.z71();
    this.seriesArray = [];
    this.seriesMap = {};
  };

  v2V.extend(v2V.Plotter.prototype, {
    Series: function Series(S2V, c2V, C2V, g2V, G2V, i2V) {
      this.name = S2V;
      this.strokeOrFill = c2V;
      this.color = C2V;
      this.moves = [];
      this.text = [];

      if (!g2V || g2V > 1 || g2V < "0" - 0) {
        g2V = 1;
      }

      J71.z71();
      this.opacity = g2V;

      if (!G2V || G2V > 25 || G2V < +"1") {
        G2V = 1;
      }

      this.width = G2V;
      this.pattern = v2V.borderPatternToArray(G2V, i2V);
    },
    newSeries: function newSeries(f2V, s2V, H2V, R2V, w2V) {
      var k2V;
      J71.z71();

      if (H2V.constructor == String) {
        k2V = new this.Series(f2V, s2V, H2V, R2V, w2V);
      } else {
        k2V = new this.Series(f2V, s2V, H2V.color, H2V.opacity, w2V >= 0 ? w2V : v2V.stripPX(H2V.width), H2V.borderTopStyle);
      }

      this.seriesArray.push(k2V);
      this.seriesMap[f2V] = k2V;
    },
    reset: function reset(b2V) {
      var o2V;

      for (var P2V in this.seriesMap) {
        if (b2V && b2V != P2V) continue;
        o2V = this.seriesMap[P2V];

        if (o2V) {
          o2V.moves = [];
          o2V.text = [];
        }
      }
    },
    moveTo: function moveTo(a2V, E2V, l2V) {
      var E3j, M2V;
      E3j = "mov";
      J71.K71();
      E3j += "eTo";
      M2V = this.seriesMap[a2V];
      M2V.moves.push({
        action: E3j,
        x: E2V,
        y: l2V
      });
    },
    lineTo: function lineTo(z2V, u2V, r2V) {
      var M3j, h2V, N2V;
      M3j = "l";
      M3j += "i";
      M3j += "n";
      M3j += "eTo";
      h2V = this.seriesMap[z2V];
      N2V = h2V.pattern;
      h2V.moves.push({
        action: M3j,
        x: u2V,
        y: r2V,
        pattern: N2V
      });
    },
    dashedLineTo: function dashedLineTo(F2V, Q2V, J2V, W2V) {
      var d2V;
      d2V = this.seriesMap[F2V];
      d2V.moves.push({
        action: "lineTo",
        x: Q2V,
        y: J2V,
        pattern: W2V
      });
    },
    quadraticCurveTo: function quadraticCurveTo(X2V, Z2V, p2V, B1V, m1V) {
      var L3j, A2V, e2V;
      L3j = "quad";
      L3j += "raticC";
      L3j += "urveTo";
      A2V = this.seriesMap[X2V];
      e2V = A2V.pattern;
      A2V.moves.push({
        action: L3j,
        x0: Z2V,
        y0: p2V,
        x: B1V,
        y: m1V,
        pattern: e2V
      });
    },
    bezierCurveTo: function bezierCurveTo(O1V, I1V, L1V, x1V, q1V, j1V, T1V) {
      var b3j, t1V, K1V;
      b3j = "be";
      b3j += "zie";
      b3j += "rCurveTo";
      t1V = this.seriesMap[O1V];
      K1V = t1V.pattern;
      t1V.moves.push({
        action: b3j,
        x0: I1V,
        y0: L1V,
        x1: x1V,
        y1: q1V,
        x: j1V,
        y: T1V,
        pattern: K1V
      });
    },
    addText: function addText(n1V, y1V, V1V, Y1V, v1V, D1V, G1V) {
      var U1V;
      U1V = this.seriesMap[n1V];
      U1V.text.push({
        text: y1V,
        x: V1V,
        y: Y1V,
        bg: v1V
      });
    },
    drawText: function drawText(S1V, H1V) {
      var g1V, i1V, c1V, k1V;

      for (var C1V = 0; C1V < H1V.text.length; C1V++) {
        g1V = H1V.text[C1V];

        if (g1V.bg) {
          i1V = g1V.width ? g1V.width : S1V.measureText(g1V.text).width;
          c1V = g1V.height ? g1V.height : 12;
          k1V = S1V.fillStyle;
          S1V.fillStyle = g1V.bg;

          if (S1V.textAlign == "right") {
            S1V.fillRect(g1V.x, g1V.y - c1V / +"2", -i1V, -c1V);
          } else {
            S1V.fillRect(g1V.x, g1V.y - c1V / 2, i1V, c1V);
          }

          S1V.fillStyle = k1V;
        }

        S1V.fillText(g1V.text, g1V.x, g1V.y);
      }
    },
    draw: function draw(f1V, P1V) {
      var b1V, M1V, a1V, E1V, s1V, w1V;
      J71.K71();
      b1V = f1V.lineWidth;
      M1V = f1V.fillStyle;
      a1V = f1V.strokeStyle;
      E1V = f1V.globalAlpha;

      for (var R1V = 0; R1V < this.seriesArray.length; R1V++) {
        s1V = this.seriesArray[R1V];
        if (P1V && s1V.name != P1V) continue;
        f1V.beginPath();
        f1V.lineWidth = s1V.width;
        f1V.globalAlpha = s1V.opacity;
        f1V.fillStyle = s1V.color;
        f1V.strokeStyle = s1V.color;
        f1V.save();

        for (var o1V = 0; o1V < s1V.moves.length; o1V++) {
          w1V = s1V.moves[o1V];

          if (w1V.pattern) {
            f1V.setLineDash(w1V.pattern);
            f1V.lineDashOffset = 0;
          } else {
            f1V.setLineDash([]);
          }

          if (w1V.action == "quadraticCurveTo") {
            f1V[w1V.action](w1V.x0, w1V.y0, w1V.x, w1V.y);
          } else if (w1V.action == "bezierCurveTo") {
            f1V[w1V.action](w1V.x0, w1V.y0, w1V.x1, w1V.y1, w1V.x, w1V.y);
          } else {
            f1V[w1V.action](w1V.x, w1V.y);
          }
        }

        if (s1V.strokeOrFill == "fill") {
          f1V.fill();
        } else {
          f1V.stroke();
        }

        f1V.closePath();
        f1V.restore();
        this.drawText(f1V, s1V);
        f1V.lineWidth = 1;
      }

      f1V.lineWidth = b1V;
      f1V.fillStyle = M1V;
      f1V.strokeStyle = a1V;
      f1V.globalAlpha = E1V;
    }
  }, !!"1");
};

K4z = function K4z(h1V) {
  var l1V;
  l1V = h1V.CIQ;

  l1V.Renderer = function () {};

  l1V.Renderer.produce = function (r1V, z1V) {
    var N1V, u1V;
    N1V = null;

    if (r1V) {
      for (var d1V in l1V.Renderer) {
        u1V = l1V.Renderer[d1V];

        if (u1V.requestNew) {
          N1V = u1V.requestNew(r1V.split("_"), z1V);
        }

        if (N1V) {
          return N1V;
        }
      }
    }

    z1V.type = "line";
    return new l1V.Renderer.Lines({
      params: z1V
    });
  };

  l1V.Renderer.colorFunctions = {};

  l1V.Renderer.registerColorFunction = function (F1V, Q1V) {
    l1V.Renderer.colorFunctions[F1V] = Q1V;
  };

  l1V.Renderer.unregisterColorFunction = function (J1V) {
    k7DD.z71();
    delete l1V.Renderer.colorFunctions[J1V];
  };

  l1V.Renderer.prototype.adjustYAxis = function () {};

  l1V.Renderer.prototype.draw = function () {};

  l1V.Renderer.prototype.drawIndividualSeries = function (W1V, A1V) {};

  l1V.Renderer.prototype.construct = function (X1V) {
    var e1V;

    if (!X1V) {
      X1V = {};
    }

    e1V = X1V.params ? X1V.params : {};

    if (!e1V.name) {
      e1V.name = l1V.uniqueID();
    }

    if (!e1V.heightPercentage) {
      e1V.heightPercentage = 0.7;
    }

    if (!e1V.opacity) {
      e1V.opacity = 1;
    }

    if (e1V.highlightable !== !{}) {
      e1V.highlightable = !!{};
    }

    if (!e1V.panel) {
      e1V.panel = "chart";
    }

    if (e1V.yAxis) {
      e1V.yAxis = new l1V.ChartEngine.YAxis(e1V.yAxis);

      if (!e1V.yAxis.name) {
        e1V.yAxis.name = e1V.name;
      }
    }

    this.cb = X1V.callback;
    this.params = e1V;
    this.seriesParams = [];
    this.caches = {};
    this.colors = {};
  };

  l1V.Renderer.prototype.attachSeries = function (B6V, I6V) {
    var B3h = k7DD;
    var m3j, m6V, j6V, p1V, t6V, Z1V, L6V, x6V, q6V, Y3j, H3j, K6V, O6V, d8U, v8U, A8U;
    m3j = "a";
    m3j += "u";
    m3j += "t";
    m3j += "o";
    m6V = this.stx;
    B3h.K71();

    if (!m6V) {
      return this;
    }

    j6V = m6V.chart.series[B6V];

    if (!j6V) {
      j6V = {
        parameters: {}
      };
    }

    p1V = this.params;
    t6V = j6V.parameters;
    Z1V = {
      id: B6V,
      chartType: p1V.type,
      display: t6V.display,
      border_color_up: p1V.defaultBorders ? m3j : null,
      fill_color_up: t6V.color,
      opacity_up: p1V.opacity,
      border_color_down: p1V.defaultBorders ? "auto" : null,
      fill_color_down: t6V.color,
      opacity_down: p1V.opacity,
      color: t6V.color,
      symbol: t6V.symbol,
      symbolObject: l1V.clone(t6V.symbolObject)
    };

    if (typeof I6V == "string") {
      Z1V.color = Z1V.fill_color_down = Z1V.fill_color_up = I6V;
    } else if (_typeof(I6V) == "object") {
      for (var T6V in I6V) {
        Z1V[T6V] = I6V[T6V];
      }

      L6V = Z1V.color;
      x6V = Z1V.border_color;

      if (L6V) {
        if (!Z1V.fill_color_up) {
          Z1V.fill_color_up = L6V;
        }

        if (!Z1V.fill_color_down) {
          Z1V.fill_color_down = L6V;
        }

        if (!Z1V.fill_color_even) {
          Z1V.fill_color_even = L6V;
        }
      }

      if (x6V) {
        if (!Z1V.border_color_up) {
          Z1V.border_color_up = x6V;
        }

        if (!Z1V.border_color_down) {
          Z1V.border_color_down = x6V;
        }

        if (!Z1V.border_color_even) {
          Z1V.border_color_even = x6V;
        }
      }
    }

    if (Z1V.symbol && Z1V.field != Z1V.symbol) {
      Z1V.subField = Z1V.field;
      Z1V.field = Z1V.symbol;
    }

    if (!Z1V.id) {
      Z1V.id = l1V.uniqueID();
    }

    q6V = 0;

    for (; q6V < this.seriesParams.length; ++q6V) {
      if (this.seriesParams[q6V].id === Z1V.id) {
        this.removeSeries(Z1V.id, !"");
        break;
      }
    }

    this.seriesParams.splice(q6V, 0, Z1V);

    if (Z1V.fill_color_up != Z1V.fill_color_down) {
      Y3j = " ";
      Y3j += "d";
      Y3j += "n";
      H3j = " ";
      H3j += "up";
      B3h.i7L(8);
      this.colors[B3h.W7L(B6V, " up")] = {
        color: Z1V.fill_color_up,
        opacity: Z1V.opacity_up,
        display: Z1V.display ? Z1V.display + H3j : B6V + " up"
      };
      B3h.i7L(8);
      this.colors[B3h.W7L(B6V, Y3j)] = {
        color: Z1V.fill_color_down,
        opacity: Z1V.opacity_down,
        display: Z1V.display ? Z1V.display + " down" : B6V + " down"
      };
    } else {
      this.colors[B6V] = {
        color: Z1V.fill_color_up,
        opacity: Z1V.opacity_up,
        display: Z1V.display ? Z1V.display : B6V
      };
    }

    K6V = p1V.panel;

    if (!m6V.panels[K6V]) {
      O6V = p1V.yAxis;

      if (!O6V) {
        O6V = new l1V.ChartEngine.YAxis();
        d8U = -317306594;
        v8U = -+"415039893";
        A8U = 2;

        for (var s8U = 1; B3h.f6U(s8U.toString(), s8U.toString().length, 73371) !== d8U; s8U++) {
          O6V.needsInitialPadding = !0;
          A8U += 2;
        }

        if (B3h.f6U(A8U.toString(), A8U.toString().length, 80953) !== v8U) {
          O6V.needsInitialPadding = !!0;
        }
      }

      O6V.name = K6V;
      m6V.createPanel(K6V, K6V, null, null, O6V);
    } else {
      if (p1V.yAxis) {
        p1V.yAxis = m6V.addYAxis(m6V.panels[K6V], p1V.yAxis);
        p1V.yAxis.needsInitialPadding = !!1;
        t6V.yAxis = p1V.yAxis;
        m6V.resizeChart();
      } else if (Z1V.yAxis) {
        p1V.yAxis = Z1V.yAxis;
      }
    }

    return this;
  };

  l1V.Renderer.prototype.removeSeries = function (y6V, H6V) {
    var r3h = k7DD;
    var V6V, S6V, U6V, n6V, D6V, Y6V, G6V, c6V;
    V6V = null;
    S6V = !"1";
    U6V = this.stx;
    n6V = U6V.chart;

    for (var C6V in n6V.seriesRenderers) {
      D6V = n6V.seriesRenderers[C6V];

      for (var v6V = +"0"; v6V < D6V.seriesParams.length; v6V++) {
        Y6V = D6V.seriesParams[v6V];

        if (Y6V.id == y6V && this === D6V) {
          V6V = v6V;
        } else if (Y6V.isComparison && Y6V.panel == n6V.panel.name && (!Y6V.yAxis || Y6V.yAxis == n6V.yAxis)) {
          S6V = !!{};
        }
      }
    }

    if (V6V !== null) {
      if (n6V.forcePercentComparison && !S6V && this.seriesParams[V6V].isComparison && U6V.layout.chartScale != "linear") {
        U6V.setChartScale();
      }

      r3h.z7L(81);
      this.seriesParams.splice(V6V, r3h.Q7L(258734304, "1"));
    }

    r3h.z7L(8);
    delete this.colors[r3h.W7L(y6V, " up")];
    r3h.z7L(8);
    delete this.colors[r3h.W7L(y6V, " dn")];
    delete this.colors[y6V];

    if (!H6V) {
      for (var i6V in n6V.seriesRenderers) {
        c6V = n6V.seriesRenderers[i6V];

        for (var g6V = 0; g6V < c6V.seriesParams.length; g6V++) {
          if (c6V.seriesParams[g6V].id == y6V) {
            G6V = !!{};
            break;
          }

          G6V = !1;
        }

        if (G6V) break;
      }

      if (G6V === !!0 || V6V !== null) {
        U6V.deleteSeries(y6V, n6V);
      }

      ;
    }

    U6V.deleteYAxisIfUnused(U6V.panels[this.params.panel], this.params.yAxis);
    U6V.resizeChart();
    U6V.layout.symbols = U6V.getSymbols({
      "include-parameters": !![],
      "exclude-studies": !!"1"
    });
    U6V.changeOccurred("layout");
    return this;
  };

  l1V.Renderer.prototype.modifyRenderer = function (s6V) {
    var R6V, k6V;
    R6V = this.params;
    var f6V = this.stx;

    for (var w6V in s6V) {
      k6V = s6V[w6V];

      switch (w6V) {
        case "baseline":
          if (k6V) {
            if (_typeof(k6V) === "object") {
              this.params.baseline = l1V.ensureDefaults(k6V, l1V.ChartEngine.Chart.prototype.baseline);
            }

            f6V.registerBaselineToHelper(this);
          } else {
            f6V.removeBaselineFromHelper(this);
          }

          break;

        case "type":
          this.params.type = k6V;
          break;

        case "style":
          this.params.style = k6V;
          break;

        default:
          break;
      }
    }
  };

  l1V.Renderer.prototype.getDependents = function (b6V) {
    var o6V, P6V;
    k7DD.z71();
    o6V = [];

    for (var M6V in b6V.chart.seriesRenderers) {
      P6V = b6V.chart.seriesRenderers[M6V];

      if (P6V.params.dependentOf == this.params.name) {
        o6V.push(P6V);
      }
    }

    return o6V;
  };

  l1V.Renderer.prototype.undraggable = function (a6V) {
    if (this == a6V.mainSeriesRenderer) {
      return !!1;
    }

    return this.params.dependentOf == a6V.mainSeriesRenderer.params.name;
  };

  l1V.Renderer.prototype.removeAllSeries = function (N6V) {
    var E6V;

    if (N6V || this === this.stx.mainSeriesRenderer) {
      E6V = [];

      for (var l6V = 0; l6V < this.seriesParams.length; l6V++) {
        E6V.push(this.seriesParams[l6V].id);
      }

      for (var h6V = 0; h6V < E6V.length; h6V++) {
        this.removeSeries(E6V[h6V]);
      }
    }

    k7DD.z71();
    this.seriesParams = [];
    this.colors = {};
    this.stx.deleteYAxisIfUnused(this.stx.panels[this.params.panel], this.params.yAxis);
    this.stx.resizeChart();
    return this;
  };

  l1V.Renderer.prototype.getYAxis = function (r6V) {
    var z6V, u6V;

    if (this.params) {
      if (this.params.yAxis) {
        z6V = this.params.yAxis;
      } else {
        u6V = r6V.panels[this.params.panel];

        if (!u6V) {
          return !"1";
        }

        z6V = u6V.yAxis;
      }
    } else {
      z6V = r6V.chart.panel.yAxis;
    }

    return z6V;
  };

  l1V.Renderer.prototype.ready = function () {
    this.stx.createDataSet();
    k7DD.z71();
    this.stx.draw();
    return this;
  };

  l1V.Renderer.Lines = function (Q6V) {
    var B4j, o4j;
    B4j = "obj";
    B4j += "e";
    B4j += "ct";
    o4j = "w";
    o4j += "a";
    o4j += "v";
    o4j += "e";
    this.construct(Q6V);
    var d6V = this.params;

    if (!d6V.type) {
      d6V.type = "line";
    }

    if (!d6V.style) {
      switch (d6V.type) {
        case "mountain":
          if (d6V.baseline) {
            d6V.style = "stx_baseline_delta_mountain";
          } else if (d6V.colored) {
            d6V.style = "stx_colored_mountain_chart";
          } else {
            d6V.style = "stx_mountain_chart";
          }

          break;

        default:
          d6V.style = "stx_line_chart";
      }
    }

    this.supportsAnimation = !!"1";

    if (d6V.type == o4j || d6V.type == "channel") {
      d6V.step = d6V.vertex = d6V.baseline = d6V.colored = ![];
      this.highLowBars = this.barsHaveWidth = !!{};
      this.supportsAnimation = !{};
    } else if (d6V.type == "step") {
      d6V.step = !!1;
    }

    var F6V = d6V.baseline;

    if (F6V && _typeof(F6V) === B4j) {
      l1V.ensureDefaults(d6V.baseline, l1V.ChartEngine.Chart.prototype.baseline);
    }
  };

  l1V.inheritsFrom(l1V.Renderer.Lines, l1V.Renderer, !!"");

  l1V.Renderer.Lines.requestNew = function (m3V, J6V) {
    var W6V, A6V, Z6V, e6V, p6V, c4j, B3V;
    W6V = null;
    A6V = J6V.step;
    Z6V = J6V.colored;
    k7DD.z71();
    e6V = J6V.baseline;
    p6V = J6V.vertex;

    for (var X6V = 0; X6V < m3V.length; X6V++) {
      c4j = "w";
      c4j += "a";
      c4j += "v";
      c4j += "e";
      B3V = m3V[X6V];

      switch (B3V) {
        case "line":
        case "mountain":
        case c4j:
        case "channel":
          W6V = B3V;
          break;

        case "baseline":
          e6V = !!{};
          break;

        case "colored":
          Z6V = !![];
          break;

        case "step":
          A6V = !"";
          break;

        case "vertex":
          p6V = !![];
          break;

        case "delta":
          break;

        default:
          return null;
      }
    }

    if (W6V === null && !e6V && !A6V) {
      return null;
    }

    return new l1V.Renderer.Lines({
      params: l1V.extend(J6V, {
        type: W6V,
        step: A6V,
        colored: Z6V,
        baseline: e6V,
        vertex: p6V
      })
    });
  };

  l1V.Renderer.Lines.prototype.draw = function () {
    var I3V, y3V, K3V, L3V, O3V, U3V, q3V, t3V, j3V, T3V, n3V;
    I3V = this.stx;
    y3V = this.stx.panels[this.params.panel];
    K3V = y3V.chart;
    L3V = {};
    U3V = this.seriesParams;

    function V3V(Y3V) {
      var f5h = k7DD;
      var D3V, v0j, A0j, x0j, G3V, v3V;
      D3V = Y3V.fill_color_up || I3V.getCanvasColor("stx_line_up");
      v0j = 1261080602;
      A0j = -1858739654;
      f5h.z71();
      f5h.z7L(19);
      x0j = f5h.Q7L("2", 2147483647);

      for (var n0j = 1; f5h.f6U(n0j.toString(), n0j.toString().length, +"48220") !== v0j; n0j++) {
        G3V = Y3V.fill_color_down && I3V.getCanvasColor("stx_line_down");
        v3V = Y3V.color && I3V.getCanvasColor("stx_line_chart");
        x0j += 2;
      }

      if (f5h.f6U(x0j.toString(), x0j.toString().length, "22897" >> 1105037824) !== A0j) {
        G3V = Y3V.fill_color_down || I3V.getCanvasColor("stx_line_down");
        v3V = Y3V.color || I3V.getCanvasColor("stx_line_chart");
      }

      return function (S3V, g3V, c3V) {
        if (!g3V.iqPrevClose && g3V.iqPrevClose !== 0) {
          return v3V;
        }

        f5h.z71();

        if (g3V.Close > g3V.iqPrevClose) {
          return D3V;
        }

        if (g3V.Close < g3V.iqPrevClose) {
          return G3V;
        }

        return v3V;
      };
    }

    q3V = this.params.colorFunction;

    for (O3V = 0; O3V < U3V.length; O3V++) {
      t3V = U3V[O3V];

      if (this.params.colored) {
        j3V = ["_color_up", "_color_down", "_color"];

        for (var x3V = "0" << 2009976032; x3V < j3V.length; x3V++) {
          T3V = t3V["border" + j3V[x3V]];

          if (T3V && T3V != "auto") {
            t3V["fill" + j3V[x3V]] = T3V;
          }

          ;
        }

        if (!q3V) {
          q3V = V3V(t3V);
        }

        this.params.colorFunction = q3V;
      }

      n3V = {};

      if (K3V.series[t3V.id]) {
        n3V = l1V.clone(K3V.series[t3V.id].parameters);
      }

      L3V[t3V.id] = {
        parameters: l1V.extend(l1V.extend(n3V, this.params), t3V),
        yValueCache: this.caches[t3V.id]
      };

      if (this == I3V.mainSeriesRenderer && K3V.customChart && K3V.customChart.colorFunction) {
        L3V[t3V.id].parameters.colorFunction = K3V.customChart.colorFunction;
      }
    }

    I3V.drawSeries(K3V, L3V, this.params.yAxis, this);

    for (O3V in L3V) {
      this.caches[O3V] = L3V[O3V].yValueCache;
    }
  };

  l1V.Renderer.Lines.prototype.drawIndividualSeries = function (s3V, C3V) {
    var i3V, w3V, k3V, H3V, f3V, U4j;

    if (C3V.invalid) {
      return;
    }

    i3V = this.stx;
    w3V = s3V.context;
    k7DD.K71();
    k3V = null;
    H3V = C3V.colorFunction;
    f3V = i3V.panels[C3V.panel] || s3V.panel;

    if (typeof H3V == "string") {
      H3V = l1V.Renderer.colorFunctions[H3V];

      if (!H3V) {
        return;
      }
    }

    if (C3V.vertex) {
      U4j = "bev";
      U4j += "el";
      w3V.save();
      w3V.lineJoin = U4j;
    }

    if (C3V.type == "wave") {
      k3V = i3V.drawWaveChart(f3V, C3V);
    } else if (C3V.baseline) {
      k3V = i3V.drawBaselineChart(f3V, C3V);
      i3V.positionBaselineHandle(this);
    } else if (C3V.type == "mountain") {
      C3V.returnObject = !"";
      k3V = i3V.drawMountainChart(f3V, C3V, H3V);
    } else if (C3V.type == "channel") {
      C3V.returnObject = !!{};
      k3V = i3V.drawChannelChart(f3V, H3V, C3V);
    } else {
      C3V.returnObject = !!1;
      k3V = i3V.drawLineChart(f3V, C3V.style, H3V, C3V);
    }

    if (C3V.vertex) {
      i3V.scatter(f3V, {
        yAxis: C3V.yAxis,
        field: C3V.symbol || C3V.field,
        subField: C3V.subField,
        symbol: C3V.symbol,
        color: C3V.vertex_color,
        highlight: C3V.highlight
      });
      w3V.restore();
    }

    return k3V;
  };

  l1V.Renderer.OHLC = function (o3V) {
    var R3V, S4j;
    this.construct(o3V);
    R3V = this.params;

    if (!R3V.type) {
      R3V.type = "candle";
    }

    this.highLowBars = this.barsHaveWidth = this.standaloneBars = !0;

    if (R3V.histogram) {
      S4j = "candl";
      S4j += "e";
      R3V.type = S4j;
      this.highLowBars = !"1";
      R3V.volume = R3V.hollow = ![];
    }

    if (R3V.type == "bar") {
      R3V.volume = R3V.hollow = R3V.histogram = !1;
    }

    if (R3V.type == "candle") {
      R3V.hlc = R3V.colored = ![];
    }

    if (R3V.volume) {
      R3V.hollow = !!1;
    }
  };

  l1V.inheritsFrom(l1V.Renderer.OHLC, l1V.Renderer, !{});

  l1V.Renderer.OHLC.requestNew = function (E3V, l3V) {
    var P3V, M3V, a3V, J4j;
    P3V = null;
    M3V = l3V.histogram;

    for (var b3V = 0; b3V < E3V.length; b3V++) {
      a3V = E3V[b3V];

      switch (a3V) {
        case "candle":
          P3V = a3V;
          break;

        case "histogram":
          J4j = "candl";
          J4j += "e";
          M3V = !![];
          P3V = J4j;
          break;

        default:
          return null;
      }
    }

    k7DD.K71();

    if (P3V === null) {
      return null;
    }

    return new l1V.Renderer.OHLC({
      params: l1V.extend(l3V, {
        type: P3V,
        histogram: M3V
      })
    });
  };

  l1V.Renderer.OHLC.getChartParts = function (u3V, r3V) {
    var F4j, q4j, p4j, z4j, C4j, w4j, e4j, y4j, j4j, i4j, h4j, g4j, h3V, N3V, z3V;
    F4j = "fill_color";
    F4j += "_down";
    q4j = "candl";
    q4j += "e";
    p4j = "c";
    p4j += "an";
    p4j += "dle";
    z4j = "bo";
    z4j += "rder_c";
    z4j += "olor_down";
    C4j = "s";
    C4j += "h";
    C4j += "a";
    C4j += "dow";
    w4j = "ca";
    w4j += "ndle";
    e4j = "b";
    e4j += "order_";
    e4j += "color_";
    e4j += "even";
    y4j = "stx";
    y4j += "_histogram_even";
    j4j = "h";
    j4j += "istogram";
    i4j = "histogr";
    i4j += "am";
    h4j = "fill";
    h4j += "_c";
    k7DD.K71();
    h4j += "olor_";
    h4j += "up";
    g4j = "histo";
    g4j += "gram";
    h3V = +"8";
    N3V = +"16";
    z3V = 32;
    return [{
      type: "histogram",
      drawType: g4j,
      style: "stx_histogram_up",
      condition: h3V,
      fill: h4j,
      border: "border_color_up",
      useColorInMap: !0,
      useBorderStyleProp: !![]
    }, {
      type: i4j,
      drawType: "histogram",
      style: "stx_histogram_down",
      condition: N3V,
      fill: "fill_color_down",
      border: "border_color_down",
      useColorInMap: !!"1",
      useBorderStyleProp: !!{}
    }, {
      type: "histogram",
      drawType: j4j,
      style: y4j,
      condition: z3V,
      fill: "fill_color_even",
      border: e4j,
      skipIfPass: !!"1",
      useColorInMap: !!1,
      useBorderStyleProp: !!{}
    }, {
      type: w4j,
      drawType: "shadow",
      style: "stx_candle_shadow",
      border: "border_color_up"
    }, {
      type: "candle",
      drawType: "shadow",
      style: "stx_candle_shadow_up",
      condition: h3V,
      border: "border_color_up"
    }, {
      type: "candle",
      drawType: C4j,
      style: "stx_candle_shadow_down",
      condition: N3V,
      border: z4j
    }, {
      type: "candle",
      drawType: "shadow",
      style: "stx_candle_shadow_even",
      condition: z3V,
      border: "border_color_even",
      skipIfPass: !!"1"
    }, {
      type: "candle",
      drawType: "candle",
      style: "stx_candle_up",
      condition: h3V,
      fill: "fill_color_up",
      border: "border_color_up",
      useColorInMap: !!"1",
      useBorderStyleProp: !!1
    }, {
      type: p4j,
      drawType: q4j,
      style: "stx_candle_down",
      condition: N3V,
      fill: F4j,
      border: "border_color_down",
      useColorInMap: !!{},
      useBorderStyleProp: !!"1"
    }];
    ;
  };

  l1V.Renderer.OHLC.prototype.draw = function () {
    var W3V, X3V, F3V, Q3V, d3V, A3V, J3V, e3V;
    W3V = this.stx;
    X3V = this.stx.panels[this.params.panel];
    F3V = X3V.chart;
    Q3V = {};
    A3V = this.seriesParams;

    for (d3V = +"0"; d3V < A3V.length; d3V++) {
      J3V = A3V[d3V];
      e3V = {};

      if (F3V.series[J3V.id]) {
        e3V = l1V.clone(F3V.series[J3V.id].parameters);
      }

      Q3V[J3V.id] = {
        parameters: l1V.extend(l1V.extend(e3V, this.params), J3V)
      };

      if (this == W3V.mainSeriesRenderer && F3V.customChart && F3V.customChart.colorFunction) {
        Q3V[J3V.id].parameters.colorFunction = F3V.customChart.colorFunction;
      }
    }

    W3V.drawSeries(F3V, Q3V, this.params.yAxis, this);

    for (d3V in Q3V) {
      if (Q3V[d3V].yValueCache) {
        this.caches[d3V] = Q3V[d3V].yValueCache;
      }
    }
  };

  l1V.Renderer.OHLC.prototype.getColor = function (O8V, I8V, B8V, x8V, q8V, L8V) {
    var Z3V, m8V, p3V, K8V, t8V;
    k7DD.z71();
    Z3V = L8V || B8V.color;
    m8V = this.params.yAxis || I8V.yAxis;

    if (x8V) {
      Z3V = L8V || B8V.borderLeftColor || B8V["border-left-color"];

      if (!Z3V) {
        return null;
      }
    }

    if (!q8V) {
      return Z3V;
    }

    p3V = O8V.pixelFromTransformedValue(m8V.highValue, I8V);

    if (isNaN(p3V)) {
      p3V = 0;
    }

    K8V = B8V.backgroundColor;

    if (Z3V && !l1V.isTransparent(Z3V)) {
      t8V = O8V.chart.context.createLinearGradient(0, p3V, 0, 2 * m8V[m8V.flipped ? "top" : "bottom"] - p3V);
      t8V.addColorStop(0, Z3V);
      t8V.addColorStop(1, K8V);
      return t8V;
    }

    return K8V;
  };

  l1V.Renderer.OHLC.prototype.drawIndividualSeries = function (v8V, j8V) {
    var I4j, U8V, E8V, n8V, y8V, k8V, u8V, r8V, d8V, F8V, Q8V, J8V, l8V, P8V, c8V, D8V, b8V, f8V, C8V, g8V, i8V, G8V, t4j, M8V, a8V, d4j, T8V, v4j, A4j, s8V, h8V, N8V, R8V, z8V, V8V, S8V, x4j, o8V;
    I4j = "op";
    I4j += "e";
    I4j += "n";

    if (j8V.invalid) {
      return;
    }

    U8V = this.stx;
    E8V = v8V.context;
    n8V = j8V.colorFunction;
    y8V = U8V.panels[j8V.panel] || v8V.panel;

    if (typeof n8V == "string") {
      n8V = l1V.Renderer.colorFunctions[n8V];

      if (!n8V) {
        return;
      }
    }

    k8V = U8V.layout.candleWidth - v8V.tmpWidth <= 2 && v8V.tmpWidth <= 3;
    u8V = 1;
    r8V = 2;
    d8V = 4;
    F8V = +"8";
    Q8V = 16;
    J8V = 32;

    if (!v8V.state.chartType) {
      v8V.state.chartType = {};
    }

    l8V = v8V.state.chartType.pass = {};
    P8V = U8V.colorByCandleDirection;

    if (j8V.colorBasis) {
      P8V = j8V.colorBasis == I4j;
    }

    c8V = j8V.histogram;
    D8V = j8V.type;
    b8V = j8V.hollow;
    f8V = U8V.noWicksOnCandles[D8V];
    k7DD.K71();
    U8V.startClip(y8V.name);
    C8V = null;
    g8V = {
      colors: [],
      cache: []
    };
    i8V = [];

    if (n8V) {
      G8V = {
        isHistogram: c8V,
        field: j8V.field,
        yAxis: j8V.yAxis,
        isVolume: j8V.volume,
        highlight: j8V.highlight
      };

      if (!c8V && D8V == "bar") {
        t4j = "h";
        t4j += "l";
        t4j += "c";
        G8V.type = j8V.hlc ? t4j : "bar";
        g8V = U8V.drawBarChart(y8V, "stx_bar_chart", n8V, G8V);
      } else {
        if (D8V == "candle" && !f8V) {
          U8V.drawShadows(y8V, n8V, G8V);
        }

        g8V = U8V.drawCandles(y8V, n8V, G8V);
        G8V.isOutline = !!{};

        if (b8V || !k8V) {
          U8V.drawCandles(y8V, n8V, G8V);
        }

        ;
      }
    } else {
      M8V = c8V && j8V.gradient !== ![];
      a8V = l1V.Renderer.OHLC.getChartParts(j8V.style, P8V);

      for (var w8V = 0; w8V < a8V.length; w8V++) {
        d4j = "b";
        d4j += "a";
        d4j += "r";
        T8V = a8V[w8V];
        if (T8V.skipIfPass && !l8V.even) continue;else if (c8V) {
          if (T8V.type != "histogram") continue;
        } else if (D8V == d4j) {
          if (T8V.type != "bar") continue;else if (j8V.colored && !T8V.condition) continue;else if (!j8V.colored && T8V.condition) continue;
        } else if (b8V) {
          v4j = "shado";
          v4j += "w";
          if (T8V.type != "hollow") continue;else if (T8V.drawType == v4j && f8V) continue;
        } else if (D8V == "candle") {
          A4j = "shad";
          A4j += "o";
          A4j += "w";
          if (T8V.type != "candle") continue;else if (T8V.drawType == A4j) {
            if (f8V) continue;
            s8V = j8V.border_color_up || U8V.getCanvasColor("stx_candle_shadow_up");
            h8V = j8V.border_color_down || U8V.getCanvasColor("stx_candle_shadow_down");
            N8V = j8V.border_color_even || U8V.getCanvasColor("stx_candle_shadow_even");

            if (!l1V.colorsEqual(s8V, h8V) || !l1V.colorsEqual(s8V, N8V) || !l1V.colorsEqual(s8V, U8V.defaultColor)) {
              if (!T8V.condition) continue;
            } else if (T8V.condition) continue;
          }
        } else continue;
        R8V = U8V.canvasStyle(T8V.style);
        z8V = this.getColor(U8V, y8V, R8V, ![], !1, j8V[T8V.fill]);
        V8V = this.getColor(U8V, y8V, R8V, !!"", M8V, j8V[T8V.fill]);
        S8V = this.getColor(U8V, y8V, R8V, T8V.useBorderStyleProp && !k8V, M8V, j8V[T8V.border]);

        if (T8V.drawType == "candle") {
          x4j = "hol";
          x4j += "l";
          x4j += "ow";

          if (T8V.type == x4j) {
            if (!l1V.isTransparent(V8V) && l1V.colorsEqual(S8V, V8V)) {
              S8V = T8V.useColorInMap ? "transparent" : V8V;
            }

            if (!T8V.useColorInMap) {
              V8V = U8V.containerColor;
            }
          } else if (T8V.type == "candle") {
            if (k8V) {
              if (l1V.isTransparent(V8V)) {
                V8V = S8V;
              } else {
                S8V = V8V;
              }

              ;
            }
          }
        }

        E8V.globalAlpha = j8V.opacity;
        i8V.push(U8V.drawBarTypeChartInner({
          fillColor: V8V,
          borderColor: S8V,
          condition: T8V.condition,
          style: T8V.style,
          type: D8V == "bar" && j8V.hlc ? "hlc" : T8V.drawType,
          panel: y8V,
          field: j8V.field,
          yAxis: j8V.yAxis,
          volume: j8V.volume && j8V.hollow,
          highlight: j8V.highlight
        }));

        if (!C8V) {
          C8V = {};
        }

        if (T8V.useColorInMap) {
          C8V[z8V] = 1;
        }
      }
    }

    U8V.endClip();

    for (var Y8V in C8V) {
      if (!j8V.hollow || !l1V.equals(Y8V, U8V.containerColor)) {
        g8V.colors.push(Y8V);
      }
    }

    for (Y8V = 0; Y8V < i8V.length; Y8V++) {
      for (var H8V = 0; H8V < i8V[Y8V].cache.length; H8V++) {
        o8V = i8V[Y8V].cache[H8V];

        if (o8V || o8V === 0) {
          g8V.cache[H8V] = o8V;
        }
      }
    }

    return g8V;
  };

  l1V.Renderer.Candles = function (A8V) {
    var W8V;
    this.construct(A8V);
    W8V = this.params;
    W8V.type = "candle";
    this.highLowBars = this.barsHaveWidth = this.standaloneBars = !![];
    W8V.hlc = W8V.colored = W8V.histogram = !"1";

    if (W8V.volume) {
      W8V.hollow = !!"1";
    }
  };

  l1V.inheritsFrom(l1V.Renderer.Candles, l1V.Renderer.OHLC, ![]);

  l1V.Renderer.SimpleHistogram = function (X8V) {
    var e8V;
    this.construct(X8V);
    k7DD.z71();
    e8V = this.params;
    e8V.type = "candle";
    e8V.histogram = !!{};
    this.barsHaveWidth = this.standaloneBars = !!1;
    this.highLowBars = !!"";
    e8V.hlc = e8V.colored = e8V.hollow = e8V.volume = ![];
  };

  l1V.inheritsFrom(l1V.Renderer.SimpleHistogram, l1V.Renderer.Candles, ![]);
};

O4z = function O4z(p8V) {
  var Z8V;
  Z8V = p8V.CIQ;

  Z8V.capitalize = function (B7V) {
    if (!B7V) {
      return "";
    }

    k7DD.z7L(60);
    var O2r = k7DD.Q7L(11, 0, 11);
    return B7V.charAt(0).toUpperCase() + B7V.slice(O2r);
  };

  k7DD.z71();
  Z8V.camelCaseRegExp = /-([a-z])/g;

  Z8V.makeCamelCase = function (m7V) {
    k7DD.z71();
    return m7V.replace(Z8V.camelCaseRegExp, function (t7V) {
      return t7V[1].toUpperCase();
    });
  };

  Z8V.uniqueID = function (x7V) {
    var K7V, I7V, L7V, O7V;

    if (x7V) {
      K7V = new Date().getTime();

      if (typeof window !== "undefined" && window.performance && typeof window.performance.now === "function") {
        K7V += window.performance.now();
        ;
      }

      I7V = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (j7V) {
        var X5h = k7DD;
        var q7V;
        X5h.i7L(1);
        var k2r = X5h.W7L(26, 10);
        X5h.z7L(28);
        var u2r = X5h.W7L(14, 4, 1832, 11, 3);
        q7V = (K7V + Math.random() * k2r) % u2r | 0;
        X5h.z7L(35);
        K7V = Math.floor(X5h.W7L(K7V, 16));
        return (j7V == (1300 < (934.72, 826.97) ? ("201.65" - 0, 8.59e+3) : "x") ? q7V : q7V & +"0x3" | 0x8).toString(16);
      });
      return I7V;
    }

    L7V = new Date();
    O7V = L7V.getTime().toString(36);
    O7V += Math.floor(Math.random() * Math.pow(36, 2)).toString(+"36");
    k7DD.z71();
    return O7V.toUpperCase();
  };
};

I4z = function I4z(T7V) {
  k7DD.z71();
  ;
};

L4z = function L4z(n7V) {
  var U7V;
  U7V = n7V.CIQ;

  U7V.getHostName = function (y7V) {
    k7DD.K71();

    try {
      return y7V.match(/:\/\/(.[^/]+)/)[1];
    } catch (V7V) {
      return "";
    }
  };

  U7V.qs = function (S7V) {
    var D7V, v7V, G7V, g7V;
    D7V = {};

    if (!S7V) {
      S7V = window.location.search.substring(1);
    }

    v7V = S7V.split( false ? (undefined) : ("3860" << 1315963808, "429.39" * 1) < 8340 ? "&" : (300.69, "P"));

    for (var Y7V = 0; Y7V < v7V.length; Y7V++) {
      G7V = v7V[Y7V].indexOf(+"8507" > 8590 ? (5690, 63.01) > (945.53, +"380.56") ? (3.93e+3, !{}) : "s" : "=");

      if (G7V > 0) {
        g7V = v7V[Y7V].substring(+"0", G7V);
        k7DD.i7L(8);
        D7V[g7V] = v7V[Y7V].substring(k7DD.Q7L(G7V, 1));
      } else {
        g7V = v7V[Y7V];
        D7V[g7V] = null;
      }
    }

    return D7V;
  };

  U7V.postAjax = function (c7V, o7V, P7V, b7V, M7V) {
    var s4j, H7V, i7V, k7V, C7V, s7V, f7V, w7V;
    s4j = "G";
    s4j += "E";
    s4j += "T";

    function a7V(u7V) {
      var h7V, z7V, N7V, E7V;
      h7V = {};

      if (!c7V.responseHeaders) {
        return;
      }

      z7V = u7V.getAllResponseHeaders();
      k7DD.z71();
      N7V = z7V.split((662.94, 530.63) == 279.51 ? (3731, 138.67) != (9250, 369.49) ? (1938, 9053) > 3130 ? 692.04 : (!{}, !"1") : ("747.64" * 1, 2.05e+3) : "\n");

      for (var l7V = 0; l7V < N7V.length; l7V++) {
        E7V = N7V[l7V].split(698.55 !== (255.1, 9652) ? ":" : "P");

        while (E7V[1] && E7V[1].charAt(0) == ((818.73, 2837) > 7630 ? !![] : " ")) {
          k7DD.i7L(19);
          E7V[1] = E7V["1" | 1].substring(k7DD.W7L("1", 2147483647));
        }

        if (E7V[0] !== "") {
          h7V[E7V.shift()] = E7V.join(6721 !== (3276, +"20.87") ? (2923, 2096) >= (5422, 291.3) ? ":" : "981.29" * 1 !== (867.7, 588.79) ? (875.03, !!"1") : (113.91, "0x1e84" << 891359456) : 545.86);
        }
      }

      return h7V;
    }

    if (typeof c7V == "string") {
      c7V = {
        url: c7V,
        payload: o7V,
        cb: P7V,
        contentType: b7V,
        noEpoch: M7V,
        method: null,
        responseHeaders: ![]
      };
    }

    H7V = c7V.url;
    i7V = c7V.cb;
    k7V = c7V.payload;

    if (!i7V) {
      i7V = function i7V() {};
    }

    if (!c7V.ungovernable) {
      if (U7V.Extras && U7V.Extras.RequestLimiter && U7V.Extras.RequestLimiter.hitRequestLimit(H7V)) {
        i7V(429, null, {});
        return;
      }
    }

    C7V = new XMLHttpRequest();

    if (!C7V) {
      return ![];
    }

    s7V = new Date();

    if (!c7V.noEpoch) {
      if (H7V.indexOf("?") == -1) {
        H7V += "?ciqrandom=" + s7V.getTime();
      } else {
        H7V += "&ciqrandom=" + s7V.getTime();
      }
    }

    f7V = c7V.method;
    w7V = c7V.headers;

    if (!f7V) {
      f7V = k7V ? "POST" : s4j;
    }

    C7V.open(f7V, H7V, !!1);

    if (!c7V.contentType) {
      c7V.contentType = "application/x-www-form-urlencoded";
    }

    if (k7V) {
      C7V.setRequestHeader("Content-Type", c7V.contentType);
    }

    if (w7V) {
      for (var R7V in w7V) {
        C7V.setRequestHeader(R7V, w7V[R7V]);
      }
    }

    if (c7V.timeout) {
      C7V.timeout = c7V.timeout;
      ;
    }

    C7V.ontimeout = function () {
      k7DD.K71();
      i7V(408, null, {});
    };

    C7V.onload = function () {
      if (this.status === 0) {
        this.status = (689.2, +"9130") === 46 ? 6.15e+3 : "0";
      } else if (!this.status) {
        this.status = 200;
      }

      i7V(this.status, this.responseText, a7V(this));
    };

    C7V.onerror = function () {
      i7V(6320 >= (4080, 7311) ? 976.39 : "0", null, {});
    };

    try {
      C7V.send(k7V);
    } catch (r7V) {
      i7V("0", r7V, {});
    }

    return !"";
  };

  U7V.loadUI = function (W7V, F7V, Q7V) {
    var X2h = k7DD;
    var T4j, n4j, d7V, A7V, V4j, J7V, f4j;
    T4j = "\"";
    T4j += "]";
    n4j = "fun";
    n4j += "ct";
    n4j += "i";
    n4j += "on";

    if (!F7V || _typeof(F7V) == n4j) {
      Q7V = F7V;
      F7V = document.body;
    }

    X2h.i7L(52);
    d7V = document.querySelector(X2h.W7L(T4j, W7V, 'iframe[original-url="'));

    A7V = function A7V() {
      X2h.z71();
      var e7V, p7V, X7V, B0V;
      e7V = null;

      try {
        e7V = this.contentDocument;
      } catch (m0V) {
        return Q7V(m0V);
      }

      if (e7V && !e7V.title) {
        p7V = e7V.body.innerHTML;
        X7V = document.createElement("div");
        U7V.innerHTML(X7V, p7V);

        for (var Z7V = 0; Z7V < X7V.children.length; Z7V++) {
          B0V = X7V.children[Z7V].cloneNode(!!{});
          F7V.appendChild(B0V);
        }

        Q7V(null);
      } else {
        Q7V(new Error("iFrame not found or document has a title"));
      }
    };

    if (d7V) {
      V4j = "comple";
      V4j += "te";
      J7V = null;

      try {
        J7V = d7V.contentDocument;
      } catch (t0V) {
        return Q7V(t0V);
      }

      if (J7V.readyState === V4j && J7V.location && J7V.location.href !== "about:blank") {
        A7V.call(d7V);
      } else {
        d7V.addEventListener("load", A7V);
      }
    } else {
      f4j = "i";
      f4j += "fram";
      f4j += "e";
      d7V = document.createElement(f4j);
      d7V.setAttribute("original-url", W7V);
      X2h.i7L(9);
      var X2r = X2h.Q7L(14, 29, 14);
      X2h.z7L(55);
      var Y2r = X2h.Q7L(8618, 19, 10, 11);
      X2h.z7L(52);
      var Z2r = X2h.Q7L(5783, 14, 1933);
      X2h.i7L(33);
      var o3r = X2h.Q7L(51542, 4294, 13);
      X2h.z7L(8);
      var B3r = X2h.W7L(343, 4807);
      X2h.z7L(8);
      var c3r = X2h.Q7L(82, 1388);
      X2h.z7L(1);
      var U3r = X2h.Q7L(70730, 64300);
      X2h.i7L(25);
      var S3r = X2h.W7L(6300, 2245, 31500);
      d7V.src = W7V + (W7V.indexOf("?") === X2r ? (Y2r, Z2r) <= (+"412", o3r) ? ("N", "B") : "?" : (B3r, c3r) > "5744" - 0 ? U3r : +"490.75" != (S3r, 332.51) ? "&" : "m") + U7V.uniqueID();
      d7V.hidden = !![];
      d7V.addEventListener("load", A7V);
      document.body.appendChild(d7V);
    }
  };

  U7V.loadScript = function (x0V, I0V, q0V) {
    var W2h = k7DD;
    var K0V, O0V, L0V;

    if (!U7V.loadedScripts) {
      U7V.loadedScripts = {};
    }

    if (U7V.loadedScripts[x0V]) {
      if (I0V) {
        I0V();
      }

      return;
    }

    K0V = document.createElement("SCRIPT");

    if (q0V) {
      K0V.type = "module";
      K0V.crossOrigin = "use-credentials";
    } else {
      K0V.async = !!"1";
    }

    K0V.onload = function () {
      U7V.loadedScripts[x0V] = !0;

      if (I0V) {
        I0V();
      }
    };

    O0V = x0V;

    if (O0V.indexOf( true ? "?" : undefined) == -1) {
      W2h.z7L(102);
      var J3r = W2h.Q7L(8, 19938, 22437, 2);
      W2h.i7L(1);
      var g3r = W2h.Q7L(2, 1);
      W2h.i7L(8);
      var h3r = W2h.Q7L(2462, 7385);
      W2h.i7L(78);
      var i3r = W2h.Q7L(7728, 10, 3, 16);
      W2h.i7L(103);
      var j3r = W2h.Q7L(1, 11, 6, 8417, 700);
      W2h.i7L(53);
      var y3r = W2h.Q7L(4, 96424, 42540, 2);
      W2h.z7L(104);
      var e3r = W2h.W7L(9, 6108, 6, 11, 30560);
      W2h.z7L(1);
      var w3r = W2h.Q7L(7917, 14);
      W2h.z7L(34);
      var C3r = W2h.W7L(332, 5, 15, 3988);
      O0V = O0V + (792.8 <= (928.09, J3r) ? "799" * g3r != (h3r, i3r) ? "?" : (j3r, y3r) > (e3r, w3r) ? (!![], 821.64) : (C3r, !1) : ("N", !![])) + Date.now();
    } else {
      O0V = O0V + "&" + Date.now();
    }

    K0V.src = O0V;
    L0V = document.getElementsByTagName("script")[0];
    W2h.z71();

    if (!L0V) {
      document.body.append(K0V);
    } else {
      L0V.parentNode.insertBefore(K0V, L0V.nextSibling);
    }
  };

  U7V.loadStylesheet = function (n0V, y0V) {
    var J2h = k7DD;
    var N4j, P4j, j0V, U0V, T0V;
    N4j = "l";
    N4j += "i";
    N4j += "n";
    N4j += "k";
    P4j = "s";
    P4j += "cre";
    P4j += "en";
    j0V = document.createElement("link");
    j0V.rel = "stylesheet";
    j0V.type = "text/css";
    j0V.media = P4j;
    J2h.i7L(63);
    var z3r = J2h.Q7L(16, 4, 9, 5749);
    J2h.K71();
    J2h.i7L(10);
    var p3r = J2h.Q7L(341, 49, 1, 343);
    J2h.i7L(59);
    var q3r = J2h.Q7L(755, 16, 2, 8, 64);
    J2h.z7L(105);
    var F3r = J2h.W7L(53081, 7, 18, 11, 1493851);
    J2h.i7L(33);
    var I3r = J2h.Q7L(1183600, 79200, 15);
    J2h.i7L(33);
    var t3r = J2h.W7L(175851, 22545, 8);
    J2h.z7L(106);
    var d3r = J2h.Q7L(20, 17, 1107, 363);
    J2h.i7L(25);
    var v3r = J2h.W7L(22320, 7434, 133920);
    J2h.z7L(107);
    var A3r = J2h.W7L(10, 0, 189, 19, 1);
    J2h.i7L(8);
    var x3r = J2h.W7L(3020, 3020);
    J2h.z7L(1);
    var s3r = J2h.W7L(15198, 14304);
    j0V.href = n0V + (n0V.indexOf(z3r >= p3r ? (+"3395", +"6146") <= (q3r, +"3202") ? F3r !== (I3r, t3r) ? !!{} : (d3r, 821.71) : "?" : (!1, v3r)) === A3r ? "?" : x3r > (943.66, s3r) ? "&" : !"1") + Date.now();

    j0V.onload = function () {
      J2h.K71();

      if (this.loaded) {
        return;
      }

      this.loaded = !!{};

      if (y0V) {
        y0V();
      }
    };

    U0V = document.getElementsByTagName(N4j);
    J2h.z7L(1);
    var n3r = J2h.W7L(13, 12);
    T0V = U0V[U0V.length - n3r];

    if (!T0V) {
      document.head.append(j0V);
    } else {
      T0V.parentNode.insertBefore(j0V, T0V.nextSibling);
    }
  };

  U7V.loadWidget = function (Y0V, V0V, v0V, D0V) {
    if (!V0V || typeof V0V == "function") {
      v0V = V0V;
      V0V = document.body;
    }

    k7DD.i7L(8);
    U7V.loadStylesheet(k7DD.Q7L(Y0V, ".css"), function () {
      k7DD.K71();
      k7DD.i7L(8);
      U7V.loadUI(k7DD.W7L(Y0V, ".html"), V0V, function (G0V) {
        k7DD.z71();

        if (G0V) {
          v0V(G0V);
        } else {
          k7DD.z7L(8);
          U7V.loadScript(k7DD.Q7L(Y0V, ".js"), v0V, D0V);
        }
      });
    });
  };

  k7DD.K71();

  U7V.waitForPlugins = function (c0V, C0V) {
    var i0V, g0V, D4j, k0V, H0V;
    i0V = 0;
    g0V = c0V.length;

    if (!g0V) {
      C0V();
      return;
    }

    for (var S0V = 0; S0V < g0V; S0V++) {
      D4j = "lo";
      D4j += "ad";
      D4j += "ed";
      k0V = "cq-" + c0V[S0V];
      H0V = document.getElementsByTagName(k0V)[0];

      if (H0V && H0V.hasAttribute(D4j)) {
        i0V++;
      }
    }

    k7DD.K71();

    if (g0V !== i0V) {
      return setTimeout(function () {
        k7DD.K71();
        U7V.waitForPlugins(c0V, C0V);
      }, 0);
    }

    C0V();
  };

  U7V.addInternalStylesheet = function (f0V) {
    var s0V = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    var M4j, E4j, G4j, a4j, w0V;
    M4j = "pat";
    M4j += "h";
    E4j = "ty";
    E4j += "pe";
    G4j = "s";
    G4j += "ty";
    G4j += "l";
    G4j += "e";
    a4j = "\"";
    a4j += "]";

    if (!f0V) {
      return;
    }

    if (f0V["default"]) {
      f0V = f0V["default"];
    }

    if (typeof f0V !== "string") {
      return;
    }

    if (s0V && document.querySelector('style[path="' + s0V + a4j)) {
      return;
    }

    w0V = document.createElement(G4j);
    w0V.setAttribute(E4j, "text/css");
    w0V.setAttribute(M4j, s0V);
    w0V.innerText = f0V;
    document.head.appendChild(w0V);
  };
};

x4z = function x4z(o0V) {
  var R0V;
  R0V = o0V.CIQ;

  R0V.ChartEngine.prototype.registerHTMLElements = function () {
    var E0V, W4j, b0V, l0V, h0V, N0V, z0V;
    E0V = this.chart.container;

    for (var P0V in R0V.ChartEngine.htmlControls) {
      if (typeof this.chart[P0V] == "undefined" && typeof this.controls[P0V] == "undefined") {
        W4j = "c";
        W4j += "hartCon";
        W4j += "trol";
        W4j += "s";
        if (!this.allowZoom && P0V == W4j) continue;
        k7DD.z7L(8);
        b0V = E0V.querySelector(k7DD.W7L(5650 == (416.3, 1420) ? 0x1ad9 : (725.08, 5270) !== +"46.34" ? "." : 0x80f, P0V));

        if (b0V) {
          this.chart[P0V] = b0V;
          this.controls[P0V] = b0V;
        } else {
          l0V = R0V.ChartEngine.htmlControls[P0V];
          if (!l0V) continue;
          h0V = document.createElement("DIV");
          h0V.innerHTML = l0V;
          b0V = h0V.firstChild;
          E0V.appendChild(b0V);
          this.chart[P0V] = b0V;
          this.controls[P0V] = b0V;
          b0V.classList.add(P0V);
        }
      }
    }

    var _this$controls = this.controls,
        M0V = _this$controls.chartControls,
        a0V = _this$controls.home;

    if (M0V) {
      N0V = M0V.querySelector(".stx-zoom-in");
      z0V = M0V.querySelector(".stx-zoom-out");
      R0V.safeClickTouch(N0V, function (u0V) {
        k7DD.z71();
        return function (r0V) {
          if (u0V.allowZoom) {
            u0V.zoomIn(r0V);
          }

          r0V.stopPropagation();
        };
      }(this));
      R0V.safeClickTouch(z0V, function (d0V) {
        k7DD.z71();
        return function (F0V) {
          if (d0V.allowZoom) {
            d0V.zoomOut(F0V);
          }

          F0V.stopPropagation();
        };
      }(this));

      if (!R0V.touchDevice) {
        this.makeModal(N0V);
        this.makeModal(z0V);
      }
    }

    k7DD.z71();

    if (a0V) {
      R0V.safeClickTouch(a0V, function (Q0V) {
        return function (J0V) {
          J0V.stopPropagation();

          if (!Q0V.isHistoricalMode()) {
            Q0V.home({
              animate: !""
            });
            return;
          }

          delete Q0V.layout.range;
          k7DD.z71();
          Q0V.loadChart(Q0V.chart.symbol, function () {
            k7DD.K71();
            Q0V.home({
              animate: !!0
            });
          });
        };
      }(this));

      if (!R0V.touchDevice) {
        this.makeModal(a0V);
      }
    }
  };

  R0V.ChartEngine.prototype.home = function (W0V) {
    var R2h = k7DD;
    var A0V, p0V, X0V, Z0V, B5V, e0V, K5V;
    this.swipe.amplitude = +"0";
    A0V = this.layout;

    function O5V(j5V, T5V, U5V) {
      return function () {
        m5V(j5V);
        T5V.scroll = U5V;
        j5V.draw();
      };
    }

    if (_typeof(W0V) != "object") {
      W0V = {
        maintainWhitespace: W0V
      };
    }

    if (typeof W0V.maintainWhitespace == "undefined") {
      W0V.maintainWhitespace = !!"1";
    }

    this.cancelTouchSingleClick = !0;

    if (!this.chart.dataSet || !this.chart.dataSet.length) {
      this.draw();
      return;
    }

    function m5V(I5V) {
      var q5V;

      for (var x5V in I5V.panels) {
        q5V = I5V.panels[x5V].yaxisLHS.concat(I5V.panels[x5V].yaxisRHS);

        for (var L5V = 0; L5V < q5V.length; L5V++) {
          I5V.calculateYAxisMargins(q5V[L5V]);
        }
      }
    }

    R2h.i7L(1);
    this.micropixels = R2h.Q7L("0", 0);
    p0V = Math.floor(this.chart.width / A0V.candleWidth);

    for (var t5V in this.charts) {
      X0V = this.charts[t5V];
      if (W0V.chart && W0V.chart != X0V) continue;
      Z0V = 0;

      if (W0V.maintainWhitespace && this.preferences.whitespace >= 0) {
        Z0V = this.preferences.whitespace;
      }

      if (W0V.whitespace || W0V.whitespace === 0) {
        Z0V = W0V.whitespace;
      }

      B5V = this.getLabelOffsetInPixels(X0V, A0V.chartType);

      if (B5V > Z0V) {
        Z0V = B5V;
      }

      e0V = Math.min(p0V, X0V.dataSet.length);

      if (this.chart.allowScrollPast) {
        e0V = p0V;
      }

      this.micropixels = this.chart.width - e0V * A0V.candleWidth - Z0V;
      this.preferences.whitespace = Z0V;

      while (this.micropixels > A0V.candleWidth) {
        e0V++;
        this.micropixels -= A0V.candleWidth;
      }

      while (this.micropixels < 0) {
        e0V--;
        this.micropixels += A0V.candleWidth;
      }

      this.micropixels -= A0V.candleWidth;
      e0V++;

      if (!this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars) {
        R2h.z7L(106);
        var T3r = R2h.W7L(14, 12, 136, 9);
        this.micropixels += A0V.candleWidth / T3r;
      }

      if (W0V.animate) {
        K5V = this;
        this.scrollTo(X0V, e0V, O5V(K5V, X0V, e0V));
      } else {
        X0V.scroll = e0V;
        m5V(this);
      }
    }

    this.draw();
  };

  R0V.ChartEngine.prototype.headsUpHR = function () {
    var y5V, V5V, Y5V, D5V, n5V;

    if (this.runPrepend("headsUpHR", arguments)) {
      return;
    }

    y5V = this.currentPanel;

    if (!y5V) {
      return;
    }

    V5V = y5V.chart;
    this.updateFloatHRLabel(y5V);
    Y5V = this.controls.floatDate;

    if (Y5V && !V5V.xAxis.noDraw) {
      D5V = this.barFromPixel(this.cx);
      n5V = V5V.xaxis[D5V];

      if (n5V && n5V.DT) {
        v5V(R0V.displayableDate(this, V5V, n5V.DT));
      } else if (n5V && n5V.index) {
        v5V(n5V.index);
      } else {
        v5V("");
        ;
      }
    }

    function v5V(G5V) {
      R0V.efficientDOMUpdate(Y5V, "innerHTML", G5V);
    }

    this.runAppend("headsUpHR", arguments);
  };

  R0V.ChartEngine.prototype.modalBegin = function () {
    k7DD.z71();
    this.openDialog = "modal";
    this.undisplayCrosshairs();
  };

  R0V.ChartEngine.prototype.modalEnd = function () {
    this.cancelTouchSingleClick = !"";
    this.openDialog = "";
    k7DD.z71();
    this.doDisplayCrosshairs();
  };

  R0V.ChartEngine.prototype.makeModal = function (S5V) {
    var O2h = k7DD;
    var q0j, F0j, I0j, g5V;
    q0j = -108732276;
    F0j = 1915159426;
    I0j = 2;

    for (var d0j = 1; O2h.f6U(d0j.toString(), d0j.toString().length, "54252" * 1) !== q0j; d0j++) {
      g5V = this;
      O2h.z7L(1);
      I0j += O2h.W7L("2", 0);
    }

    if (O2h.f6U(I0j.toString(), I0j.toString().length, 85551) !== F0j) {
      g5V = this;
    }

    S5V.onmouseover = function (c5V) {
      g5V.modalBegin();
    };

    O2h.K71();

    S5V.onmouseout = function (C5V) {
      g5V.modalEnd();
    };
  };

  R0V.ChartEngine.prototype.updateChartAccessories = function () {
    var y2h = k7DD;
    var m4j, k5V, i5V, b4j, L4j, w5V, s5V, f5V, H5V;
    m4j = "updateCha";
    m4j += "rtAccessories";

    if (this.accessoryTimer !== null) {
      clearTimeout(this.accessoryTimer);
    }

    if (!R0V.ChartEngine.drawingLine && R0V.touchDevice) {
      if (new Date().getTime() - this.lastAccessoryUpdate < 100) {
        this.accessoryTimer = setTimeout(function (R5V) {
          y2h.K71();
          return function () {
            R5V.updateChartAccessories();
          };
        }(this), 10);
        return;
      }
    }

    if (!this.chart.dataSet) {
      return;
    }

    if (this.runPrepend("updateChartAccessories", arguments)) {
      return;
    }

    this.accessoryTimer = null;
    this.lastAccessoryUpdate = new Date().getTime();
    k5V = this.controls.floatDate;

    if (k5V) {
      i5V = this.currentPanel;

      if (!i5V) {
        i5V = this.chart.panel;
      }

      if (i5V) {
        b4j = "p";
        b4j += "x";
        L4j = "p";
        L4j += "x";
        w5V = i5V.chart;
        s5V = this.xAxisAsFooter === !!"1" ? 0 : this.chart.canvasHeight - i5V.chart.bottom;
        y2h.i7L(108);
        var V3r = y2h.W7L(6, 3, 12, 8, 1);
        f5V = k5V.offsetWidth / V3r - 0.5;
        H5V = this.pixelFromTick(this.crosshairTick, w5V) - f5V;

        if (H5V < 0) {
          y2h.z7L(18);
          H5V = y2h.Q7L(1, "0");
        } else if (H5V > this.width - ("2" >> 249449280) * f5V - 1) {
          y2h.i7L(30);
          var f3r = y2h.W7L(17, 12, 13, 10);
          y2h.z7L(15);
          var P3r = y2h.W7L(1, 5, 4);
          H5V = this.width - f3r * f5V - P3r;
        }

        R0V.efficientDOMUpdate(k5V.style, "left", H5V + L4j);
        R0V.efficientDOMUpdate(k5V.style, "bottom", s5V + b4j);
      }
    }

    this.positionCrosshairsAtPointer();
    this.headsUpHR();
    this.runAppend(m4j, arguments);
  };

  R0V.ChartEngine.prototype.positionSticky = function (o5V) {
    var n2h = k7DD;
    var Q4j, P5V, b5V;
    Q4j = "p";
    Q4j += "x";
    P5V = Math.max(this.cy - o5V.offsetHeight - ("60" - 0), "0" ^ 0);
    b5V = Math.min(this.chart.canvasWidth - (this.cx - ("50" | 34)), this.chart.canvasWidth - o5V.offsetWidth);
    n2h.K71();
    n2h.z7L(8);
    o5V.style.top = n2h.Q7L(P5V, "px");
    n2h.z7L(8);
    o5V.style.right = n2h.Q7L(b5V, Q4j);
  };

  R0V.ChartEngine.prototype.displaySticky = function (E5V) {
    var R4j, M5V, a5V, d5V, F5V, h5V, l5V, N5V, z5V, W5V, X5V, A5V, u5V, r4j, l4j, u4j, K4j, e5V, H4j, O4j, k4j, Q5V, J5V, X4j, o7j, Z4j, Y4j, B7j, r5V, U7j, c7j, Z5V, p5V;
    R4j = "ob";
    R4j += "je";
    R4j += "ct";
    M5V = this.controls.mSticky;

    if (!M5V) {
      return;
    }

    a5V = M5V.querySelector(".mStickyInterior");

    if (!a5V) {
      return;
    }

    d5V = M5V.querySelector(".overlayTrashCan");
    F5V = M5V.querySelector(".overlayEdit");
    h5V = M5V.querySelector(".mouseDeleteInstructions");
    l5V = M5V.querySelector(".stickyLongPressText");
    h5V.classList.remove("no_edit");

    if (!E5V || _typeof(E5V) != R4j) {
      E5V = {
        message: arguments[0],
        backgroundColor: arguments[1],
        forceShow: arguments[2],
        noDelete: arguments["3" | 0],
        type: arguments[4]
      };
    }

    N5V = E5V.message;
    z5V = E5V.backgroundColor;
    W5V = E5V.forceShow;
    X5V = E5V.noDelete;
    A5V = E5V.noEdit;
    u5V = E5V.type;

    if (!W5V && !N5V) {
      r4j = "n";
      r4j += "o";
      r4j += "n";
      r4j += "e";
      l4j = "non";
      l4j += "e";
      a5V.innerHTML = "";
      M5V.style.display = "none";

      if (d5V) {
        d5V.style.display = "none";
      }

      if (F5V) {
        F5V.style.display = l4j;
      }

      if (h5V) {
        h5V.style.display = r4j;
      }

      if (l5V) {
        l5V.style.display = "none";
      }
    } else {
      u4j = ".mStic";
      u4j += "kyRig";
      u4j += "htClick";
      K4j = "a";
      K4j += "u";
      K4j += "to";

      if (!N5V) {
        N5V = "";
      }

      e5V = this.defaultColor;

      if (z5V == K4j) {
        z5V = e5V;
      }

      if (W5V && !N5V) {
        H4j = "no";
        H4j += "ne";
        a5V.style.backgroundColor = "";
        a5V.style.color = "";
        a5V.style.display = H4j;
      } else if (z5V) {
        O4j = "inline";
        O4j += "-bloc";
        O4j += "k";
        a5V.style.backgroundColor = z5V;
        a5V.style.color = R0V.isTransparent(z5V) ? e5V : R0V.chooseForegroundColor(z5V);
        a5V.style.display = O4j;
      } else {
        k4j = "inline-bl";
        k4j += "oc";
        k4j += "k";
        a5V.style.backgroundColor = "";
        a5V.style.color = "";
        a5V.style.display = k4j;
      }

      a5V.innerHTML = N5V;
      Q5V = M5V.querySelector(u4j);
      Q5V.className = "mStickyRightClick";

      if (u5V) {
        k7DD.i7L(8);
        Q5V.classList.add(k7DD.W7L("rightclick_", u5V));
      }

      Q5V.style.display = "";
      M5V.style.display = "inline-block";
      J5V = this.highlightedDraggable;

      if (!J5V || J5V && J5V.undraggable && J5V.undraggable(this)) {
        l5V.style.display = "none";
      }

      if (X5V || this.bypassRightClick === !!"1" || this.bypassRightClick[u5V]) {
        X4j = "n";
        X4j += "o";
        X4j += "n";
        X4j += "e";
        Q5V.style.display = X4j;
      } else if (this.highlightViaTap || this.touches.length) {
        o7j = "h";
        o7j += "i";
        o7j += "d";
        o7j += "e";
        Z4j = "remo";
        Z4j += "v";
        Z4j += "e";
        Y4j = "inline-blo";
        Y4j += "ck";

        if (d5V) {
          d5V.style.display = "inline-block";
        }

        if (F5V && !A5V) {
          F5V.style.display = Y4j;
        }

        if (h5V) {
          h5V.style.display = "none";
        }

        if (l5V) {
          l5V.style.display = "none";
        }

        M5V.classList[N5V === "" ? "add" : Z4j](o7j);
      } else {
        B7j = "no_e";
        B7j += "d";
        B7j += "it";

        if (A5V) {
          h5V.classList.add(B7j);
        }

        if (h5V) {
          h5V.style.display = "block";
        }

        if (l5V) {
          l5V.style.display = "none";
          r5V = this.preferences.dragging;

          if (r5V && E5V.panel && !E5V.panel.noDrag) {
            U7j = "b";
            U7j += "lo";
            U7j += "c";
            U7j += "k";
            c7j = "s";
            c7j += "t";
            c7j += "u";
            c7j += "dy";

            if ((r5V === !!{} || r5V.study) && u5V == c7j) {
              l5V.style.display = "block";
            } else if ((r5V === !!{} || r5V.series) && u5V == "series") {
              l5V.style.display = U7j;
            }
          }
        }
      }

      Z5V = u5V || "default";
      M5V.setAttribute("cq-sticky-type", Z5V);
      p5V = E5V.positioner || this.positionSticky;
      p5V.call(this, M5V);
    }
  };

  R0V.ChartEngine.prototype.displayNotification = function (O9V, q9V) {
    var _this = this;

    var I9V = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var K2h = k7DD;
    var S7j, K9V, L9V, B9V, x9V, J8U, g8U, h8U;
    S7j = "te";
    S7j += "mplate";

    if (!this.controls.notificationTray) {
      return;
    }

    var m9V = I9V.callback,
        t9V = I9V.dismissalListeners;
    K9V = this.controls.notificationTray;
    L9V = K9V.querySelector(S7j).content.cloneNode(!!"1");
    B9V = L9V.firstElementChild;
    B9V.className = O9V;
    B9V.querySelector(".message").textContent = q9V;

    if (m9V) {
      x9V = window.PointerEvent ? "pointerup" : "touchend";
      B9V.handler = B9V.addEventListener(x9V, m9V);
    }

    if (t9V) {
      B9V.listeners = {};
      t9V.forEach(function (j9V) {
        K2h.K71();
        B9V.listeners[O9V] = _this.addEventListener(j9V.type, j9V.callback);
      });
    }

    K2h.i7L(19);
    J8U = -K2h.W7L("1445986286", 2147483647);
    g8U = 1118079018;
    h8U = 2;

    for (var j8U = 1; K2h.V6U(j8U.toString(), j8U.toString().length, 84241) !== J8U; j8U++) {
      this.makeModal(B9V);
      h8U += 2;
    }

    if (K2h.f6U(h8U.toString(), h8U.toString().length, 93578) !== g8U) {
      this.makeModal(B9V);
    }

    K9V.appendChild(B9V);
  };

  R0V.ChartEngine.prototype.removeNotification = function (y9V) {
    var U9V, T9V;

    if (!this.controls.notificationTray) {
      return;
    }

    U9V = this.controls.notificationTray;
    T9V = U9V.querySelector(".".concat(y9V));

    if (T9V) {
      if (T9V.handler) {
        T9V.removeEventListener(T9V.handler);
      }

      if (T9V.listeners) {
        for (var n9V in T9V.listeners) {
          this.removeEventListener(T9V.listeners[n9V]);
        }
      }

      this.modalEnd();
      U9V.removeChild(T9V);
    }
  };

  R0V.ChartEngine.prototype.setMeasure = function (v9V, g9V, H9V, C9V, k9V, f9V) {
    var z2h = k7DD;
    var J7j, Y9V, D9V, G9V, V9V, g7j, S9V, i9V, c9V, i7j, h7j;
    J7j = ".mM";
    J7j += "ea";
    J7j += "sure";

    if (this.runPrepend("setMeasure", arguments)) {
      return;
    }

    Y9V = (this.drawingContainer || document).querySelector(J7j);
    D9V = "";

    if (!v9V && v9V !== 0) {
      if (!this.anyHighlighted && this.currentVectorParameters.vectorType === "") {
        this.clearMeasure();
      }
    } else {
      if (g9V !== !!0) {
        G9V = Math.round(Math.abs(v9V - g9V) * this.chart.roundit) / this.chart.roundit;
        G9V = G9V.toFixed(this.chart.yAxis.printDecimalPlaces);

        if (this.internationalizer) {
          D9V += this.internationalizer.numbers.format(G9V);
        } else {
          D9V += G9V;
        }

        if (v9V > 0 && g9V > 0) {
          g7j = " ";
          g7j += "(";
          z2h.i7L(43);
          V9V = z2h.W7L(v9V, g9V, v9V);

          if (Math.abs(V9V) > 0.1) {
            z2h.i7L(18);
            V9V = Math.round(z2h.Q7L(100, V9V));
          } else if (Math.abs(V9V) > 0.01) {
            z2h.z7L(27);
            var N3r = z2h.Q7L(20000, 4759000, 17, 14);
            z2h.i7L(109);
            var D3r = z2h.Q7L(17, 1118, 8, 8, 5);
            V9V = Math.round(V9V * N3r) / D3r;
          } else {
            z2h.i7L(31);
            var a3r = z2h.Q7L(9986, 4, 4, 9995, 9990);
            V9V = Math.round(V9V * a3r) / ("100" - 0);
          }

          if (this.internationalizer) {
            z2h.z7L(35);
            V9V = this.internationalizer.percent.format(z2h.Q7L(V9V, 100));
          } else {
            z2h.z7L(8);
            V9V = z2h.W7L(V9V, 5719 <= 3 ? ("p", 400.32) : 3785 >= (+"3470", 1859) ? "%" : (7890, 9650) === 565.38 ? 3.30e+3 : ("A", 964.28));
          }

          z2h.i7L(52);
          D9V += z2h.Q7L(825 > 371.74 ? ")" : (0x767, !!{}), V9V, g7j);
        }
      }

      if (C9V !== ![]) {
        z2h.i7L(1);
        S9V = Math.abs(z2h.Q7L(C9V, H9V));
        z2h.z7L(110);
        var G3r = z2h.Q7L(5, 18, 18, 3, 7);
        S9V = Math.round(S9V) + G3r;
        i9V = this.translateIf("Bars");
        z2h.z7L(111);
        D9V += z2h.Q7L(i9V, S9V, 40.78 > 8398 ? 6363 > (8210, +"922") ? ![] : (3.81e+3, "x") : " ",  false ? (undefined) : (7700, 395.92) > +"499.21" ? 0x25d1 : (4070, +"509") === 657.48 ? !0 : " ");
      }

      if (Y9V) {
        Y9V.innerHTML = D9V;
      }
    }

    if (this.activeDrawing) {
      return;
    }

    z2h.z71();
    Y9V = this.controls.mSticky;

    if (Y9V) {
      c9V = Y9V.querySelector(".mStickyInterior");

      if (k9V) {
        i7j = "a";
        i7j += "d";
        i7j += "d";
        h7j = "inline-bl";
        h7j += "ock";
        Y9V.style.display = h7j;
        c9V.style.display = "inline-block";

        if (v9V || v9V === 0) {
          c9V.innerHTML = D9V;
        }

        Y9V.classList[D9V === "" ? i7j : "remove"]("hide");
        this.positionSticky(Y9V);
      } else {
        Y9V.style.display = "none";
        c9V.innerHTML = "";
      }
    }

    this.runAppend("setMeasure", arguments);
  };

  R0V.ChartEngine.prototype.clearMeasure = function () {
    var j7j, w9V;
    k7DD.K71();
    j7j = ".m";
    j7j += "Mea";
    j7j += "sure";
    w9V = (this.drawingContainer || document).querySelector(j7j);

    if (w9V) {
      w9V.innerHTML = "";
    }
  };

  R0V.ChartEngine.prototype.zoomSet = function (o9V, s9V) {
    var m2h = k7DD;
    var y7j, b9V, R9V, P9V, M9V;
    y7j = "n";
    y7j += "o";
    y7j += "n";
    y7j += "e";
    o9V = this.constrainCandleWidth(o9V);

    if (this.chart.tempCanvas.style.display != y7j) {
      R0V.clearCanvas(this.chart.tempCanvas, this);
    }

    b9V = this.mainSeriesRenderer || {};

    if (!b9V.params || !b9V.params.volume) {
      if (this.preferences.zoomAtCurrentMousePosition && this.zoomInitiatedByMouseWheel && this.crosshairTick < s9V.dataSet.length) {
        R9V = this.crosshairTick || this.tickFromPixel(this.cx, s9V);
      } else if (this.isHome()) {
        m2h.i7L(112);
        var E3r = m2h.Q7L(5, 17, 4, 1072, 7);
        R9V = s9V.dataSet.length - E3r;
      } else if (this.chart.scroll > this.chart.dataSet.length) {
        R9V = 0;
      } else if (this.grabMode == "zoom-x") {
        R9V = this.tickFromPixel(this.chart.width, s9V);
      } else {
        R9V = this.tickFromPixel(this.chart.width / 2, s9V);
      }

      if (this.animations.zoom.hasCompleted) {
        this.zoomInitiatedByMouseWheel = !!0;
      }

      m2h.i7L(70);
      var M3r = m2h.Q7L(7, 16, 4, 3);
      P9V = s9V.dataSet.length - M3r - R9V;
      M9V = s9V.scroll;
      m2h.z7L(1);
      var W3r = m2h.W7L(5, 4);
      s9V.scroll = Math.round((this.pixelFromTick(R9V, s9V) - s9V.left) / o9V) + W3r + P9V;
      this.micropixels += (M9V - P9V) * this.layout.candleWidth - (s9V.scroll - P9V) * o9V;
    }

    this.setCandleWidth(o9V);
    s9V.spanLock = !"1";
    this.draw();
    this.doDisplayCrosshairs();
    this.updateChartAccessories();
  };
};

q4z = function q4z(E9V) {
  var a9V;
  a9V = E9V.CIQ;
  a9V.ChartEngine.prototype.currentBaseline = null;
  k7DD.z71();
  a9V.ChartEngine.prototype.baselineHelper = null;
  a9V.ChartEngine.helpersToRegister.push(function (l9V) {
    k7DD.K71();
    l9V.baselineHelper = new Map();
  });

  a9V.ChartEngine.prototype.registerBaselineToHelper = function (h9V) {
    var z9V, r9V;

    function d9V(Q9V) {
      var w7j, e7j, F9V;
      w7j = "stx-baseline-handl";
      w7j += "e";
      e7j = "cq";
      e7j += "-bas";
      e7j += "eline";
      e7j += "-handle";
      Q9V = Q9V.replace(6000 >= (2250, 514.9) ? " " :  false ? undefined : ![], (467.04, +"3910") != (4480, 3120) ? (3230, 7883) >= 6215 ? "_" : ("5299" << 1583760416, 1001) !== 9020 ? (5.39e+3, ![]) : ("m", !!{}) : "Q");
      F9V = document.createElement(e7j);
      F9V.classList.add(w7j, Q9V);
      z9V.container.append(F9V);
      z9V.controls["".concat(Q9V, " cq-baseline-handle")] = F9V;
      return F9V;
    }

    if (!h9V.params.baseline) {
      return;
    }

    var N9V = this.baselineHelper;
    z9V = this;
    k7DD.z71();

    if (!N9V.has(h9V)) {
      var u9V = h9V.params.name;
      r9V = this.controls.baselineHandle;
      N9V.set(h9V, {
        styleCache: null,
        display: !1,
        handle: u9V === "_main_series" && r9V ? r9V : d9V(u9V)
      });
    }
  };

  a9V.ChartEngine.prototype.removeBaselineFromHelper = function (J9V) {
    var g0j, h0j, i0j, A9V, e9V;
    g0j = -984814535;
    h0j = 1901593348;
    i0j = 2;

    for (var y0j = 1; k7DD.V6U(y0j.toString(), y0j.toString().length, 33427) !== g0j; y0j++) {
      var W9V = this.baselineHelper;
      i0j += 2;
    }

    if (k7DD.f6U(i0j.toString(), i0j.toString().length, "83973" ^ 0) !== h0j) {
      var W9V = this.baselineHelper;
    }

    if (W9V.has(J9V)) {
      A9V = J9V.params.name.replace(6760 === (97, +"993.71") ? 120.45 != (455.08, 644.45) ? 4970 > (178, 2512) ? (0xd0d, "566.82" - 0) : (!!{}, !{}) : 9.70e+3 : " ", (6820, 823.38) === (144.59, 728) ? ("p", 7.93e+2) : ("932.54" - 0, "620.28" - 0) <= 849.3 ? (806, "4460" >> 513204480) != (881.26, 936.94) ? "_" : (1.97e+3, +"285") : (8.23e+3, "b"));

      if (A9V !== "_main_series") {
        e9V = W9V.get(J9V).handle;
        delete this.controls["".concat(A9V, " cq-baseline-handle")];
        this.container.removeChild(e9V);
      }

      W9V["delete"](J9V);
    }
  };

  a9V.ChartEngine.prototype.findBaselineHandle = function (Z9V, t4V) {
    k7DD.z71();
    var C7j;

    var _iterator = _createForOfIteratorHelper(this.baselineHelper),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var B4V = _step.value;

        var _B4V = _slicedToArray(B4V, 2),
            p9V = _B4V[0],
            m4V = _B4V[1];

        var X9V = m4V.handle;

        if (Z9V.target === X9V || Z9V.composedPath && Z9V.composedPath().includes(X9V)) {
          if (t4V) {
            C7j = "stx-";
            C7j += "gr";
            C7j += "ab";
            this.repositioningBaseline = {
              lastDraw: Date.now(),
              handle: X9V,
              renderer: p9V
            };
            X9V.classList.add(C7j);
          }

          this.currentBaseline = p9V;
          return !0;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return !!0;
  };

  a9V.ChartEngine.prototype.setBaselines = function (O4V) {
    var K4V;

    if (!O4V) {
      O4V = this.chart;
    }

    K4V = this;
    var I4V = this.baselineHelper;

    function L4V(k4V, i4V) {
      var z7j, v4V, D4V, G4V, p7j, g4V, S4V;
      z7j = "t";
      z7j += "i";
      z7j += "c";
      z7j += "k";
      var _O4V = O4V,
          H4V = _O4V.dataSegment,
          c4V = _O4V.dataSet,
          C4V = _O4V.defaultPlotField;
      v4V = C4V;

      if (!i4V) {
        v4V = k4V;
      }

      D4V = K4V.getFirstLastDataRecord(H4V, z7j).tick;

      while (!!"1") {
        G4V = c4V[D4V];

        if (G4V) {
          p7j = "Cl";
          p7j += "o";
          p7j += "s";
          p7j += "e";

          if (!i4V || v4V != p7j) {
            k7DD.i7L(1);
            g4V = c4V[k7DD.W7L(D4V, 1)];

            if (g4V && (g4V[v4V] || g4V[v4V] === 0)) {
              S4V = g4V[v4V];
              return _typeof(S4V) === "object" ? S4V[C4V] : S4V;
            }
          } else if (G4V.iqPrevClose || G4V.iqPrevClose === 0) {
            return G4V.iqPrevClose;
          }
        }

        D4V--;
        if (D4V < 0) break;
      }
    }

    I4V.forEach(function (y4V, j4V) {
      var U4V, n4V, q4V, Y4V;
      var x4V = j4V.params.baseline;
      k7DD.z7L(113);
      U4V = k7DD.W7L(x4V, !![]);

      if (U4V) {
        x4V = O4V.baseline;
      }

      var _x4V = x4V,
          V4V = _x4V.defaultLevel,
          T4V = _x4V.userLevel;
      n4V = j4V.getYAxis(K4V);

      if (!n4V) {
        return;
      }

      q4V = K4V.getYAxisBaselineRenderer(n4V);
      Y4V = q4V && q4V != K4V.mainSeriesRenderer && q4V.seriesParams.length && q4V.seriesParams[0].id;
      x4V.actualLevel = T4V || T4V === 0 ? T4V : V4V;

      if (!x4V.actualLevel && x4V.actualLevel !== 0) {
        x4V.actualLevel = L4V(Y4V, U4V);
      }

      y4V.display = q4V === j4V ? !!1 : !1;
      I4V.set(j4V, y4V);
    });
  };

  a9V.ChartEngine.prototype.setBaselineUserLevel = function () {
    var q7j, P4V, b4V, M4V;
    k7DD.K71();
    q7j = "o";
    q7j += "bj";
    q7j += "ect";
    var s4V = this.chart,
        w4V = this.currentPanel;
    var _this$repositioningBa = this.repositioningBaseline,
        R4V = _this$repositioningBa.lastDraw,
        f4V = _this$repositioningBa.renderer;

    if (f4V.params.panel != w4V.name) {
      return;
    }

    var o4V = s4V.baseline;
    P4V = _typeof(f4V.params.baseline) === q7j ? f4V.params.baseline : o4V;
    b4V = f4V.getYAxis(this);
    M4V = this.valueFromPixel(this.backOutY(a9V.ChartEngine.crosshairY), w4V, b4V);
    P4V.userLevel = this.adjustIfNecessary(w4V, this.crosshairTick, M4V);

    if (Date.now() - R4V > 100) {
      this.draw();
      this.repositioningBaseline.lastDraw = Date.now();
    }
  };

  a9V.ChartEngine.prototype.setBaselineMinMax = function (E4V, N4V) {
    var J4V, r4V, d4V;
    var F4V = this.baselineHelper,
        l4V = this.chart,
        z4V = this.repositioningBaseline;
    var Q4V = l4V.baseline,
        u4V = l4V.seriesRenderers;
    J4V = l4V.transformFunc && N4V === l4V.panel.yAxis;
    r4V = N4V.renderers.find(function (A4V) {
      k7DD.K71();
      return F4V.get(u4V[A4V]);
    });

    if (!r4V) {
      return E4V;
    }

    var _u4V$r4V$params = u4V[r4V].params,
        h4V = _u4V$r4V$params.baseline,
        W4V = _u4V$r4V$params.type;

    if (W4V === "mountain") {
      return E4V;
    }

    h4V = _typeof(h4V) === "object" ? h4V : Q4V;
    var _h4V = h4V,
        a4V = _h4V.actualLevel;

    if (a4V || a4V === 0) {
      if (J4V) {
        a4V = l4V.transformFunc(this, l4V, a4V);
      }

      d4V = Math.max(a4V - E4V[0], E4V[1] - a4V);
      E4V[0] = z4V ? N4V.lowValue : a4V - d4V;
      E4V[1] = z4V ? N4V.highValue : a4V + d4V;
    }

    k7DD.z71();
    return E4V;
  };

  a9V.ChartEngine.prototype.positionBaselineHandle = function (I2S) {
    var E2h = k7DD;
    var F7j, Z4V, L2S, U2S, x2S, X4V, I7j, g2S, q2S, S2S, n2S, K2S, O2S, c2S, T2S, f2S;
    F7j = "stx";
    F7j += "-gr";
    F7j += "ab";

    if (!this.manageTouchAndMouse) {
      return;
    }

    var y2S = this.baselineHelper,
        e4V = this.chart,
        Y2S = this.panels;
    var _I2S$params = I2S.params,
        p4V = _I2S$params.baseline,
        D2S = _I2S$params.panel;
    Z4V = I2S.params.yAxis || I2S.getYAxis(this);

    var _y2S$get = y2S.get(I2S),
        G2S = _y2S$get.display,
        B2S = _y2S$get.handle,
        m2S = _y2S$get.styleCache;

    if (p4V === !0) {
      p4V = e4V.baseline;
    }

    if (p4V.userLevel === !!0 || !G2S) {
      B2S.style.display = "none";
      return;
    }

    L2S = Y2S[D2S];
    U2S = B2S.classList.contains(F7j);
    x2S = "block";
    X4V = p4V.actualLevel;

    if (e4V.transformFunc) {
      X4V = e4V.transformFunc(this, e4V, X4V);
    }

    if (X4V > Z4V.high) {
      I7j = "n";
      I7j += "o";
      I7j += "n";
      I7j += "e";
      X4V = Z4V.high;

      if (!U2S) {
        x2S = I7j;
      }
    } else if (X4V < Z4V.low) {
      X4V = Z4V.low;

      if (!U2S) {
        x2S = "none";
      }
    }

    if (e4V.untransformFunc) {
      X4V = e4V.untransformFunc(this, e4V, X4V);
    }

    g2S = this.pixelFromPrice(X4V, L2S, Z4V);

    if (!m2S) {
      m2S = getComputedStyle(B2S);
    }

    q2S = a9V.stripPX(m2S.width);
    E2h.i7L(12);
    var L3r = E2h.Q7L(13, 9, 1, 6);
    S2S = "".concat(g2S - a9V.stripPX(m2S.height) / L3r, "px");
    K2S = this.baselineHandleBuffer || 2;
    O2S = L2S.yaxisRHS.indexOf(Z4V) + +"1";

    if (O2S) {
      c2S = O2S === 1 ? K2S : K2S * O2S;
      n2S = "".concat(e4V.right - q2S * O2S - c2S, "px");
    } else {
      E2h.i7L(33);
      var b3r = E2h.Q7L(23, 2, 12);
      T2S = L2S.yaxisLHS.slice(0).reverse().indexOf(Z4V) + b3r;
      f2S = T2S === 1 ? K2S : K2S * T2S;
      n2S = "".concat(e4V.left + q2S * T2S + f2S - q2S, "px");
    }

    Object.assign(B2S.style, {
      display: x2S,
      top: S2S,
      left: n2S
    });
  };

  a9V.ChartEngine.prototype.getYAxisBaselineRenderer = function (P2S) {
    var o2S;

    if (!P2S.renderers.length) {
      return null;
    }

    var b2S = this.baselineHelper,
        R2S = this.chart;
    o2S = P2S.renderers.find(function (M2S) {
      return b2S.get(R2S.seriesRenderers[M2S]);
    });

    if (!o2S) {
      return null;
    }

    return R2S.seriesRenderers[o2S];
  };

  a9V.ChartEngine.prototype.getYAxisBaseline = function (z2S) {
    k7DD.z71();
    var l2S;
    var a2S = this.chart.baseline;
    l2S = this.getYAxisBaselineRenderer(z2S);

    if (!l2S) {
      return a2S;
    }

    var N2S = l2S.params.baseline;
    return _typeof(N2S) === "object" ? N2S : a2S;
  };
};

j4z = function j4z(F2S) {
  var t7j, r2S;
  t7j = "Cl";
  t7j += "o";
  t7j += "se";
  r2S = F2S.CIQ;

  r2S.ChartEngine.Chart = function () {
    this.xAxis = new r2S.ChartEngine.XAxis();
    this.yAxis = new r2S.ChartEngine.YAxis();
    this.symbolObject = {
      symbol: null
    };
    this.series = {};
    this.seriesRenderers = {};
    this.xaxis = [];
    k7DD.K71();
    this.state = {};
    this.endPoints = {};
    this.defaultChartStyleConfig = {};
    this.baseline = r2S.clone(this.baseline);
    this.panel = undefined;
  };

  r2S.extend(r2S.ChartEngine.Chart.prototype, {
    symbol: null,
    symbolObject: {
      symbol: null
    },
    symbolDisplay: null,
    series: {},
    seriesRenderers: {},
    scroll: 0,
    isComparison: !1,
    forcePercentComparison: !!"1",
    maxTicks: 0,
    tension: null,
    currentMarketData: {},
    masterData: null,
    dataSet: null,
    scrubbed: null,
    dataSegment: null,
    segmentImage: null,
    baseline: {
      includeInDataSegment: ![],
      defaultLevel: null,
      userLevel: null,
      actualLevel: null
    },
    xAxis: null,
    xaxis: [],
    xaxisFactor: "30" >> 1252352352,
    decimalPlaces: 2,
    dynamicYAxis: !!{},
    roundit: 100,
    breakpoint: null,
    legendRenderer: r2S.drawLegend,
    customChart: null,
    yaxisPaddingRight: null,
    yaxisPaddingLeft: null,
    tickCache: {},
    allowScrollPast: !!1,
    allowScrollFuture: !"",
    whiteSpaceFutureTicks: 0,
    hideDrawings: !1,
    defaultPlotField: t7j,
    defaultChartStyleConfig: {},
    lockScroll: !{},
    includeOverlaysInMinMax: !!{},
    gaplines: null,
    lineStyle: null,
    lineApproximation: !0,
    highLowBars: !{},
    standaloneBars: !"1",
    barsHaveWidth: !"1",
    calculateTradingDecimalPlaces: r2S.calculateTradingDecimalPlaces
  }, !!1);
};

T4z = function T4z(J2S) {
  var Q2S;
  Q2S = J2S.CIQ;

  Q2S.ChartEngine.prototype.resolveY = function (W2S) {
    return this.top + W2S;
  };

  Q2S.ChartEngine.prototype.resolveX = function (A2S) {
    return this.left + A2S;
  };

  Q2S.ChartEngine.prototype.backOutY = function (X2S) {
    k7DD.K71();
    return X2S - this.top;
  };

  Q2S.ChartEngine.prototype.backOutX = function (Z2S) {
    k7DD.K71();
    return Z2S - this.left;
  };

  Q2S.ChartEngine.prototype.dateFromTick = function (I1S, x1S, Y1S) {
    var U1S = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "dataSet";
    var c2h = k7DD;
    var p2S, m1S, K1S, O1S, q1S, j1S;

    if (!x1S) {
      x1S = this.chart;
    }

    p2S = x1S[U1S];
    m1S = p2S.length;
    j1S = !{};

    if (m1S === 0) {
      p2S[0] = {};
      p2S[0].DT = new Date();
      m1S = p2S.length;
      j1S = !![];
    }

    if (I1S < 0) {
      O1S = this.standardMarketIterator(p2S[+"0"].DT);

      if (O1S) {
        K1S = O1S.previous(Math.abs(I1S));
      } else {
        K1S = p2S[0].DT;
      }
    } else if (I1S >= m1S) {
      O1S = this.standardMarketIterator(p2S[m1S - 1].DT);

      if (O1S) {
        c2h.z7L(114);
        K1S = O1S.next(c2h.Q7L(1, I1S, m1S));
      } else {
        K1S = p2S[m1S - +"1"].DT;
      }
    } else {
      K1S = p2S[I1S].DT;
    }

    if (Y1S) {
      q1S = new Date(K1S.getTime());
    } else {
      c2h.i7L(23);
      q1S = Q2S.yyyymmddhhmmssmmm(K1S).substr(0, c2h.W7L(0, "12"));
    }

    if (j1S) {
      delete p2S[0].DT;
    }

    return q1S;
  };

  Q2S.ChartEngine.prototype.tickFromDate = function (A1S, c1S, t6S, d6S) {
    var C1S = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "dataSet";
    var u2h = k7DD;
    var g1S, D1S, E1S, b1S, h1S, H6S, k6S, b9U, m9U, Q9U, o6S, M6S, G1S, z1S, l6S, F6S, u6S, r6S;

    if (!c1S) {
      c1S = this.chart;
    }

    g1S = c1S[C1S];

    if (!(g1S && g1S.length)) {
      return 0;
    }

    if (!t6S) {
      t6S = 0;
    }

    D1S = A1S.constructor == Date ? A1S : Q2S.strToDateTime(A1S);

    if (!Q2S.ChartEngine.isDailyInterval(this.layout.interval)) {
      D1S.setMinutes(D1S.getMinutes() + t6S);
    }

    E1S = D1S.getTime();

    if (!c1S.tickCache[C1S]) {
      c1S.tickCache[C1S] = {};
    }

    b1S = c1S.tickCache[C1S][E1S];

    if (b1S || b1S === +"0") {
      return d6S ? Math.ceil(b1S) : Math.floor(b1S);
    }

    h1S = g1S[0].DT;
    H6S = g1S[g1S.length - 1].DT;

    if (D1S >= h1S && D1S <= H6S) {
      k6S = 0;
      b9U = -1724227718;
      m9U = -50832600;
      Q9U = 2;

      for (var l9U = 1; u2h.V6U(l9U.toString(), l9U.toString().length, +"92787") !== b9U; l9U++) {
        o6S = g1S.length;
        M6S = 0;
        Q9U += 2;
      }

      if (u2h.V6U(Q9U.toString(), Q9U.toString().length, 83045) !== m9U) {
        o6S = g1S.length;
        M6S = 1;
      }

      while (++M6S < 100) {
        u2h.i7L(44);
        G1S = Math.floor(u2h.W7L(2, k6S, o6S));
        z1S = g1S[G1S].DT;

        if (+z1S == +D1S) {
          c1S.tickCache[C1S][E1S] = G1S;
          return G1S;
        }

        if (z1S < D1S) {
          k6S = G1S;
        }

        if (z1S > D1S) {
          if (g1S[G1S - 1].DT < D1S) {
            u2h.i7L(1);
            c1S.tickCache[C1S][E1S] = u2h.Q7L(G1S, 0.5);
            return d6S ? G1S : G1S - 1;
          }

          if (+g1S[G1S - 1].DT == +D1S) {
            u2h.i7L(115);
            c1S.tickCache[C1S][E1S] = u2h.W7L(G1S, "1", 1);
            u2h.z7L(116);
            return u2h.Q7L(G1S, "1");
          }

          o6S = G1S;
        }
      }

      if (M6S >= 100) {
        console.log("!!!Warning: tickFromDate() did not find match.");
        return g1S.length;
      }
    }

    u2h.i7L(82);
    l6S = u2h.W7L(h1S, D1S);
    F6S = l6S ? h1S : H6S;
    u6S = this.standardMarketIterator(F6S);
    r6S = u6S ? u6S.futureTick({
      end: D1S
    }) : +"0";
    b1S = l6S ? r6S * -1 : g1S.length - 1 + r6S;
    c1S.tickCache[C1S][E1S] = b1S;
    return b1S;
  };

  Q2S.ChartEngine.prototype.pixelFromBar = function (e6S, X6S) {
    var g2h = k7DD;
    var Q6S, W6S, B0j, c0j, U0j;

    if (!X6S) {
      X6S = this.chart;
    }

    Q6S = 0;
    W6S = this.chart.segmentImage;

    if (W6S && W6S[e6S] && W6S[e6S].leftOffset) {
      Q6S = W6S[e6S].leftOffset;
    } else {
      Q6S = (e6S + 0.5) * this.layout.candleWidth;
    }

    g2h.i7L(32);
    var m3r = g2h.Q7L(0, 20, 19);
    g2h.z71();
    Q6S = X6S.panel.left + Math.floor(Q6S + this.micropixels) - "1" * m3r;
    B0j = 1434775076;
    g2h.z7L(23);
    c0j = -g2h.Q7L(13385728, "281829761");
    U0j = 2;

    for (var J0j = 1; g2h.f6U(J0j.toString(), J0j.toString().length, 88670) !== B0j; J0j++) {
      return Q6S;
    }

    if (g2h.f6U(U0j.toString(), U0j.toString().length, "56695" * 1) !== c0j) {
      return Q6S;
    }
  };

  Q2S.ChartEngine.prototype.barFromPixel = function (j3S, L3S) {
    var B2h = k7DD;
    var m3S, q3S, T3S, t3S, x3S, K3S, Z6S, B3S, O3S, I3S, U3S, n3S, y3S;

    if (!L3S) {
      L3S = this.chart;
    }

    m3S = this.chart.segmentImage;
    q3S = this.micropixels;
    T3S = this.layout.candleWidth;

    if (m3S) {
      t3S = j3S - L3S.panel.left - q3S;
      x3S = 2;
      Z6S = m3S.length;
      B2h.z7L(35);
      B3S = Math.round(B2h.W7L(Z6S, x3S));
      B2h.z7L(117);
      var Q3r = B2h.Q7L(5, 19, 23, 8);
      B2h.i7L(70);
      var R3r = B2h.W7L(18, 325, 16, 19);
      B2h.i7L(32);
      var l3r = B2h.Q7L(0, 16, 14);
      U3S = m3S[Z6S - Q3r].leftOffset + m3S[Z6S - R3r].candleWidth / l3r;

      if (t3S > U3S) {
        return Z6S + Math.floor((j3S - U3S - L3S.panel.left - q3S) / T3S);
      }

      for (var p6S = 1; p6S < Z6S; p6S++) {
        x3S *= 2;
        K3S = m3S[B3S];
        if (!K3S) break;
        O3S = K3S.leftOffset;
        B2h.i7L(9);
        var r3r = B2h.Q7L(20, 36, 18);
        I3S = K3S.candleWidth / r3r;
        B2h.i7L(1);
        n3S = B2h.W7L(O3S, I3S);
        B2h.z7L(8);
        y3S = B2h.W7L(O3S, I3S);
        if (B3S === "0" * 1 || t3S >= n3S && t3S < y3S) break;else if (t3S < n3S) {
          B3S -= Math.max(1, Math.round(Z6S / x3S));
        } else {
          B3S += Math.max(1, Math.round(Z6S / x3S));
        }
        B3S = Math.max(0, Math.min(Z6S - 1, B3S));
      }

      if (!m3S[B3S]) {
        for (p6S = 0; p6S < Z6S; p6S++) {
          K3S = m3S[p6S];
          if (!K3S) continue;
          O3S = K3S.leftOffset;
          B2h.z7L(1);
          var K3r = B2h.W7L(6, 4);
          I3S = K3S.candleWidth / K3r;

          if (t3S < O3S - I3S) {
            B2h.z7L(1);
            return Math.max(0, B2h.W7L(p6S, 1));
          } else if (t3S < O3S + I3S) {
            return p6S;
          } else if (t3S >= O3S + I3S) {
            B2h.i7L(8);
            return B2h.Q7L(p6S, 1);
          }
        }
      }

      return B3S;
    }

    return Math.floor((j3S - L3S.panel.left - q3S) / T3S);
  };

  Q2S.ChartEngine.prototype.tickFromPixel = function (v3S, V3S) {
    var Y3S;

    if (!V3S) {
      V3S = this.chart;
    }

    Y3S = V3S.dataSet.length - V3S.scroll;

    if (V3S.segmentImage) {
      Y3S += this.barFromPixel(v3S, V3S);
    } else {
      Y3S += Math.floor((v3S - V3S.panel.left - this.micropixels) / this.layout.candleWidth);
    }

    return Y3S;
  };

  Q2S.ChartEngine.prototype.pixelFromTick = function (H3S, G3S) {
    var r2h = k7DD;
    var S3S, C3S, c3S, k3S, g3S, f3S, i3S, w3S, D3S, Q8U, R8U, l8U, s3S, R3S;

    if (!G3S) {
      G3S = this.chart;
    }

    S3S = G3S.dataSegment;
    C3S = G3S.dataSet;
    c3S = G3S.segmentImage;
    k3S = this.micropixels;
    g3S = S3S ? S3S.length : +"0";
    f3S = G3S.panel;
    i3S = G3S.scroll;
    w3S = H3S - C3S.length + i3S;
    D3S = g3S ? S3S[w3S] : null;

    if (c3S) {
      D3S = c3S[w3S];
    }

    if (D3S && D3S.leftOffset) {
      return f3S.left + Math.floor(D3S.leftOffset + k3S);
      r2h.i7L(17);
      Q8U = -r2h.W7L(2104043392, "1692297514");
      R8U = 822560129;
      l8U = 2;

      for (var K8U = 1; r2h.f6U(K8U.toString(), K8U.toString().length, 53611) !== Q8U; K8U++) {
        ;
        l8U += 2;
      }

      if (r2h.f6U(l8U.toString(), l8U.toString().length, 49157) !== R8U) {
        ;
      }
    }

    s3S = 0;
    R3S = 0;
    D3S = g3S ? S3S[g3S - 1] : null;

    if (c3S) {
      r2h.i7L(1);
      D3S = c3S[r2h.W7L(g3S, 1)];
    }

    if (D3S && D3S.leftOffset) {
      if (g3S < H3S - C3S.length + i3S) {
        r2h.i7L(10);
        var H3r = r2h.W7L(1, 16, 1, 16);
        s3S = D3S.leftOffset - D3S.candleWidth / H3r;
        R3S = g3S;
      }
    }

    return s3S + f3S.left + Math.floor((H3S - R3S - C3S.length + i3S + 0.5) * this.layout.candleWidth + k3S);
  };

  Q2S.ChartEngine.prototype.pixelFromDate = function (P3S, o3S, b3S, M3S) {
    return this.pixelFromTick(this.tickFromDate(P3S, o3S, b3S, M3S), o3S);
  };

  Q2S.ChartEngine.prototype.transformedPriceFromPixel = function (h3S, N3S, z3S) {
    var a3S, E3S, l3S;

    if (!N3S) {
      N3S = this.chart.panel;
    }

    a3S = z3S ? z3S : N3S.yAxis;
    h3S = a3S.bottom - h3S;

    if (a3S.semiLog) {
      l3S = h3S * a3S.logShadow / a3S.height;

      if (a3S.flipped) {
        l3S = a3S.logHigh - l3S;
      } else {
        l3S += a3S.logLow;
      }

      E3S = Math.pow(10, l3S);
    } else {
      if (!a3S.multiplier) {
        return null;
      }

      E3S = h3S / a3S.multiplier;

      if (a3S.flipped) {
        E3S = a3S.high - E3S;
      } else {
        E3S += a3S.low;
      }
    }

    k7DD.K71();
    return E3S;
  };

  Q2S.ChartEngine.prototype.priceFromPixel = function (F3S, u3S, r3S) {
    var d3S;

    if (!u3S) {
      u3S = this.chart.panel;
    }

    d3S = this.transformedPriceFromPixel(F3S, u3S, r3S);

    if (this.charts[u3S.name] && u3S.chart.untransformFunc) {
      if (!r3S || r3S == u3S.yAxis) {
        d3S = u3S.chart.untransformFunc(this, u3S.chart, d3S, r3S);
      }
    }

    return d3S;
  };

  Q2S.ChartEngine.prototype.valueFromPixel = function (W3S, Q3S, A3S) {
    var J3S;
    k7DD.z71();

    if (!Q3S) {
      Q3S = this.whichPanel(W3S);
    }

    if (!Q3S) {
      J3S = Object.values(this.panels);

      if (J3S && J3S.length) {
        if (W3S <= 0) {
          Q3S = J3S.shift();
        } else {
          Q3S = J3S.pop();
        }
      }
    }

    return this.priceFromPixel(W3S, Q3S, A3S);
  };

  Q2S.ChartEngine.prototype.valueFromInterpolation = function (m8S, p3S, K8S, B8S, t8S) {
    var T2h = k7DD;
    var d7j, O8S, e3S, X3S, L8S, I8S, Z3S, x8S, j8S, q8S, T8S, U8S, n8S, y8S;
    d7j = "und";
    d7j += "efin";
    d7j += "e";
    d7j += "d";

    if (m8S === null || m8S < 0 || !p3S) {
      return null;
    }

    if (!B8S) {
      B8S = this.chart.panel;
    }

    if (!t8S) {
      t8S = B8S.yAxis;
    }

    if (!K8S) {
      K8S = this.chart.defaultPlotField;
    }

    O8S = this.getPreviousBar(this.chart, p3S, m8S);

    if (!O8S) {
      return null;
    }

    X3S = Q2S.existsInObjectChain(O8S, p3S);

    if (X3S) {
      e3S = X3S.obj[X3S.member];
    }

    if (_typeof(e3S) == "object") {
      e3S = e3S[K8S];
    }

    L8S = this.getRendererFromSeries(p3S);

    if (L8S && L8S.params.step || this.layout.chartType === "step") {
      return e3S;
    }

    I8S = this.getNextBar(this.chart, p3S, m8S);
    X3S = Q2S.existsInObjectChain(I8S, p3S);

    if (X3S) {
      Z3S = X3S.obj[X3S.member];
    }

    if (_typeof(Z3S) == "object") {
      Z3S = Z3S[K8S];
    }

    if (!I8S) {
      return null;
    }

    if (e3S === null || _typeof(e3S) == d7j || Z3S === null || typeof Z3S == "undefined") {
      return null;
    }

    x8S = this.pixelFromPrice(e3S, B8S, t8S);
    j8S = this.pixelFromPrice(Z3S, B8S, t8S);
    q8S = O8S.tick;
    T8S = I8S.tick;
    T2h.z7L(118);
    U8S = T2h.W7L(j8S, q8S, x8S, T8S);
    n8S = this.chart.dataSegment[m8S].tick;
    T2h.z7L(119);
    y8S = T2h.W7L(q8S, U8S, n8S, x8S);
    return this.priceFromPixel(y8S, B8S, t8S);
  };

  Q2S.ChartEngine.prototype.pixelFromTransformedValue = function (G8S, v8S, g8S) {
    var V8S, Y8S, S8S, c8S, D8S;

    if (!v8S) {
      v8S = this.chart.panel;
    }

    k7DD.K71();
    V8S = g8S ? g8S : v8S.yAxis;
    Y8S = (V8S.high - G8S) * V8S.multiplier;

    if (V8S.semiLog) {
      S8S = Math.max(G8S, 0);
      c8S = Math.log(S8S) / Math.LN10;
      D8S = V8S.height;
      Y8S = D8S - D8S * (c8S - V8S.logLow) / V8S.logShadow;
    }

    Y8S = V8S.flipped ? V8S.bottom - Y8S : V8S.top + Y8S;
    return Y8S;
  };

  Q2S.ChartEngine.prototype.pixelFromPrice = function (H8S, C8S, i8S) {
    if (!C8S) {
      C8S = this.chart.panel;
    }

    if (this.charts[C8S.name] && C8S.chart.transformFunc) {
      if (!i8S || i8S == C8S.yAxis) {
        H8S = C8S.chart.transformFunc(this, C8S.chart, H8S, i8S);
        ;
      }
    }

    return this.pixelFromTransformedValue(H8S, C8S, i8S);
  };

  Q2S.ChartEngine.prototype.pixelFromValueAdjusted = function (k8S, o8S, w8S, s8S) {
    var f8S, R8S;

    if (this.layout.adj || !this.charts[k8S.name]) {
      return this.pixelFromPrice(w8S, k8S, s8S);
    }

    f8S = Math.round(o8S);

    if (f8S > +"0" && f8S < k8S.chart.dataSet.length && (R8S = k8S.chart.dataSet[f8S].ratio)) {
      k7DD.z7L(18);
      return this.pixelFromPrice(k7DD.Q7L(R8S, w8S), k8S, s8S);
    }

    return this.pixelFromPrice(w8S, k8S, s8S);
  };

  Q2S.ChartEngine.prototype.adjustIfNecessary = function (P8S, E8S, b8S) {
    var M8S, a8S;

    if (this.layout.adj) {
      return b8S;
    }

    if (!P8S || !this.charts[P8S.name]) {
      return b8S;
    }

    M8S = Math.round(E8S);
    k7DD.K71();

    if (M8S > "0" * 1 && M8S < P8S.chart.dataSet.length && (a8S = P8S.chart.dataSet[M8S].ratio)) {
      k7DD.z7L(35);
      return k7DD.Q7L(b8S, a8S);
    }

    return b8S;
  };
};

U4z = function U4z(h8S) {
  var l8S;
  l8S = h8S.CIQ;

  l8S.ChartEngine.prototype.positionCrosshairsAtPointer = function () {
    var M2h = k7DD;
    var v7j, N8S, u8S, F8S, z8S, r8S, Q8S, d8S;
    v7j = "position";
    v7j += "Crosshair";
    v7j += "sAtPointer";
    N8S = this.currentPanel;

    if (!N8S) {
      return;
    }

    if (!this.manageTouchAndMouse || this.mainSeriesRenderer && this.mainSeriesRenderer.nonInteractive) {
      return;
    }

    if (this.runPrepend("positionCrosshairsAtPointer", arguments)) {
      return;
    }

    u8S = N8S.chart;
    F8S = this.container.getBoundingClientRect();
    this.top = F8S.top;
    this.left = F8S.left;
    this.right = this.left + this.width;
    this.bottom = this.top + this.height;
    this.cy = this.crossYActualPos = this.backOutY(l8S.ChartEngine.crosshairY);
    this.cx = this.backOutX(l8S.ChartEngine.crosshairX);
    z8S = this.crosshairTick = this.tickFromPixel(this.cx, u8S);
    M2h.z7L(120);
    var O3r = M2h.Q7L(11, 16, 4, 0, 8);
    r8S = this.pixelFromTick(z8S, u8S) - O3r;

    if (this.controls.crossX) {
      M2h.i7L(8);
      this.controls.crossX.style.left = M2h.Q7L(r8S, "px");
    }

    if (r8S >= N8S.right || r8S <= N8S.left) {
      this.undisplayCrosshairs();
      return;
    }

    Q8S = N8S.name == "chart" ? this.preferences.horizontalCrosshairField : N8S.horizontalCrosshairField;
    d8S = u8S.dataSet;

    if (Q8S && d8S && z8S < d8S.length && z8S > -1) {
      this.crossYActualPos = this.pixelFromPrice(d8S[z8S][Q8S], N8S);
    }

    if (this.controls.crossY) {
      this.controls.crossY.style.top = this.crossYActualPos + "px";
    }

    this.runAppend(v7j, arguments);
  };

  l8S.ChartEngine.prototype.doDisplayCrosshairs = function () {
    var A7j, W8S, J8S, A8S, e8S, X8S, x7j;
    k7DD.K71();
    A7j = "doDispl";
    A7j += "ayCros";
    A7j += "shairs";

    if (this.runPrepend(A7j, arguments)) {
      return;
    }

    if (this.displayInitialized) {
      W8S = this.floatCanvas;
      J8S = this.currentVectorParameters.vectorType;

      if (!this.layout.crosshair && (J8S === "" || !J8S)) {
        this.undisplayCrosshairs();
      } else if (l8S.Drawing && l8S.Drawing[J8S] && new l8S.Drawing[J8S]().dragToDraw) {
        this.undisplayCrosshairs();
      } else if (this.overXAxis || this.overYAxis || !this.insideChart && !this.grabbingScreen) {
        this.undisplayCrosshairs();
      } else if (this.openDialog !== "") {
        this.undisplayCrosshairs();
      } else {
        A8S = this.controls;
        e8S = A8S.crossX;
        X8S = A8S.crossY;

        if (e8S && e8S.style.display !== "") {
          e8S.style.display = "";

          if (X8S) {
            X8S.style.display = "";
          }

          if (this.magnetizedPrice && J8S) {
            x7j = "s";
            x7j += "t";
            x7j += "x-crosshair-on";
            this.container.classList.remove(x7j);
            this.chart.tempCanvas.style.display = "block";
          } else {
            this.container.classList.add("stx-crosshair-on");
          }
        }

        if (A8S.floatDate && !this.chart.xAxis.noDraw) {
          A8S.floatDate.style.visibility = "";

          if (this.currentPanel) {
            this.updateFloatHRLabel(this.currentPanel);
          }
        }

        if (W8S) {
          if (W8S.style.display == "none") {
            l8S.clearCanvas(W8S, this);
          }

          W8S.style.display = "block";
        }
      }
    }

    this.runAppend("doDisplayCrosshairs", arguments);
  };

  l8S.ChartEngine.prototype.undisplayCrosshairs = function () {
    var f7j, V7j, s7j, p8S, B7S, t7S, n7j, T7j, Z8S, m7S;
    f7j = "undisplayCrossh";
    f7j += "air";
    f7j += "s";
    V7j = "n";
    V7j += "o";
    V7j += "n";
    V7j += "e";
    s7j = "un";
    s7j += "displayC";
    s7j += "ross";
    s7j += "hairs";

    if (this.runPrepend(s7j, arguments)) {
      return;
    }

    p8S = this.controls;
    B7S = p8S.crossX;
    t7S = p8S.crossY;

    if (B7S) {
      n7j = "n";
      n7j += "o";
      n7j += "ne";

      if (B7S.style.display != n7j) {
        T7j = "n";
        T7j += "o";
        T7j += "n";
        T7j += "e";
        B7S.style.display = "none";

        if (t7S) {
          t7S.style.display = T7j;
        }
      }
    }

    if (this.displayInitialized && p8S.floatDate) {
      p8S.floatDate.style.visibility = "hidden";
    }

    this.container.classList.remove("stx-crosshair-on");
    Z8S = this.floatCanvas;

    if (Z8S && Z8S.isDirty && Z8S.style.display != V7j) {
      l8S.clearCanvas(Z8S, this);

      if (Z8S.style.display != "none") {
        Z8S.style.display = "none";
      }
    }

    if (!this.activeDrawing && !this.repositioningDrawing && !this.editingAnnotation) {
      m7S = this.chart.tempCanvas;

      if (m7S && m7S.style.display != "none") {
        m7S.style.display = "none";
      }
    }

    this.runAppend(f7j, arguments);
  };

  l8S.ChartEngine.prototype.hideCrosshairs = function () {
    this.displayCrosshairs = ![];
  };

  l8S.ChartEngine.prototype.showCrosshairs = function () {
    k7DD.K71();
    this.displayCrosshairs = !!1;
  };
};

n4z = function n4z(I7S) {
  var K7S, O7S;
  K7S = I7S.CIQ;
  O7S = I7S.timezoneJS;

  K7S.ChartEngine.prototype.loadChart = function (V7S, q7S, Y7S) {
    var S7S, v7S, g7S, f7S, j7S, D7S, y7S, m6U, Q6U, R6U;

    if (!Y7S && typeof q7S == "function") {
      Y7S = q7S;
      q7S = {};
    } else if (Array.isArray(q7S)) {
      q7S = {
        masterData: q7S
      };
    }

    if (!q7S) {
      q7S = {};
    }

    var _q7S = q7S,
        L7S = _q7S.chart,
        n7S = _q7S.periodicity,
        T7S = _q7S.range,
        x7S = _q7S.span;
    var U7S = this.layout;
    S7S = {
      periodicity: U7S.periodicity,
      interval: U7S.interval,
      timeUnit: U7S.timeUnit
    };

    if (n7S) {
      v7S = K7S.cleanPeriodicity(n7S.period ? n7S.period : n7S.periodicity, n7S.interval, n7S.timeUnit);
      U7S.interval = v7S.interval;
      U7S.periodicity = v7S.period;
      U7S.timeUnit = v7S.timeUnit;
    }

    if (!L7S) {
      L7S = this.chart;
    }

    var _L7S = L7S,
        c7S = _L7S.dataSet,
        C7S = _L7S.market,
        i7S = _L7S.masterData,
        G7S = _L7S.symbol,
        H7S = _L7S.moreAvailable,
        k7S = _L7S.upToDate;
    g7S = K7S.clone(L7S.symbolObject);
    L7S.dataSet = [];
    L7S.masterData = [];
    L7S.moreAvailable = null;
    L7S.upToDate = null;

    if (!V7S) {
      L7S.symbol = null;
      L7S.symbolObject = {
        symbol: null
      };
    } else if (_typeof(V7S) == "object") {
      L7S.symbol = V7S.symbol;
      L7S.symbolObject = V7S;
    } else {
      L7S.symbol = V7S;
      L7S.symbolObject.symbol = V7S;
    }

    L7S.inflectionPoint = null;

    if (this.marketFactory) {
      f7S = this.marketFactory(L7S.symbolObject);
      this.setMarket(f7S, L7S);
    }

    this.setMainSeriesRenderer(!!{});

    if (!T7S && !x7S && U7S) {
      x7S = !U7S.range ? U7S.setSpan : {};
      T7S = U7S.range || {};
    } else if (T7S && x7S) {
      x7S = {};
    }

    this.clearCurrentMarketData(L7S);

    function w7S() {
      var P7j;
      P7j = "ma";
      P7j += "s";
      P7j += "ter";
      j7S.dispatch(j7S.currentlyImporting ? "symbolImport" : "symbolChange", {
        stx: j7S,
        symbol: L7S.symbol,
        symbolObject: L7S.symbolObject,
        prevSymbol: G7S,
        prevSymbolObject: g7S,
        action: P7j
      });

      if (n7S) {
        j7S.dispatch("periodicity", {
          stx: j7S,
          differentData: !!"1",
          prevPeriodicity: S7S
        });
      }
    }

    j7S = this;

    if (!q7S.masterData && this.quoteDriver) {
      D7S = function D7S(s7S) {
        var S5h = k7DD;
        var e0j, w0j, C0j;

        if (s7S && s7S != "orphaned") {
          L7S.symbol = G7S;
          L7S.symbolObject = g7S;
          L7S.market = C7S;
          j7S.masterData = L7S.masterData = i7S;
          S5h.z7L(18);
          e0j = -S5h.Q7L(1, "351967253");
          w0j = -1214950284;
          C0j = 2;

          for (var p0j = 1; S5h.V6U(p0j.toString(), p0j.toString().length, 73037) !== e0j; p0j++) {
            L7S.dataSet = c7S;
            S5h.i7L(23);
            C0j += S5h.W7L(2, "2");
          }

          if (S5h.f6U(C0j.toString(), C0j.toString().length, 16080) !== w0j) {
            L7S.dataSet = c7S;
          }

          L7S.dataSet = c7S;
          L7S.moreAvailable = H7S;
          L7S.upToDate = k7S;
        }

        w7S();
        S5h.K71();

        if (Y7S) {
          Y7S.call(j7S, s7S);
        }
      };

      if (T7S && Object.keys(T7S).length && this.setRange) {
        delete q7S.span;
        delete U7S.setSpan;
        this.chart.masterData = null;
        this.displayInitialized = !{};

        if (n7S) {
          T7S.periodicity = n7S;
        }

        T7S.forceLoad = !!{};
        this.setRange(T7S, D7S);
      } else if (x7S && x7S.base && this.setSpan) {
        x7S.multiplier = x7S.multiplier || 1;
        this.chart.masterData = null;
        this.displayInitialized = ![];

        if (n7S) {
          x7S.maintainPeriodicity = !!1;
        }

        x7S.forceLoad = !!1;
        this.setSpan(x7S, D7S);
      } else {
        this.quoteDriver.newChart({
          symbol: L7S.symbol,
          symbolObject: L7S.symbolObject,
          chart: L7S,
          initializeChart: !0
        }, function (R7S) {
          if (!R7S) {
            j7S.adjustPanelPositions();
            j7S.quoteDriver.updateSubscriptions();

            if (q7S.stretchToFillScreen) {
              j7S.fillScreen();
            }
          }

          D7S.apply(j7S, arguments);
        });
      }
    } else {
      if (!q7S.masterData) {
        console.log("Warning: No masterData specified and no QuoteFeed configured");
      }

      if (!L7S.symbol) {
        L7S.symbol = "";
      }

      this.initializeChart();
      y7S = this.doCleanupGaps(q7S.masterData, L7S);
      this.setMasterData(y7S, L7S, {
        noCleanupDates: !!{}
      });
      L7S.endPoints = {};

      if (y7S && y7S.length) {
        L7S.endPoints = {
          begin: y7S[0].DT,
          end: y7S[y7S.length - 1].DT
        };
      }

      this.createDataSet();

      if (T7S && Object.keys(T7S).length && this.setRange) {
        this.setRange(T7S);
      } else if (x7S && x7S.multiplier && x7S.base && this.setSpan) {
        m6U = -857083634;
        Q6U = -534144498;
        R6U = +"2";

        for (var r6U = 1; k7DD.V6U(r6U.toString(), r6U.toString().length, 40710) !== m6U; r6U++) {
          this.setSpan({
            maintainPeriodicity: !{},
            multiplier: x7S.multiplier,
            base: x7S.base
          });
          R6U += 2;
        }

        if (k7DD.V6U(R6U.toString(), R6U.toString().length, 6023) !== Q6U) {
          this.setSpan({
            maintainPeriodicity: !!"1",
            multiplier: x7S.multiplier,
            base: x7S.base
          });
        }
      } else if (q7S.stretchToFillScreen) {
        this.fillScreen();
      } else if (y7S && y7S.length) {
        this.home();
      } else {
        this.clear();
      }

      this.adjustPanelPositions();
      w7S();

      if (Y7S) {
        Y7S.call(j7S);
      }
    }
  };

  K7S.ChartEngine.prototype.loadBlankChart = function () {
    this.loadChart(null, []);
  };

  K7S.ChartEngine.prototype.getDataFields = function (o7S) {
    var N7j, b7S, P7S, a7S;
    N7j = "Op";
    N7j += "en";

    if (!o7S) {
      o7S = this.chart;
    }

    b7S = o7S.defaultPlotField || "Close";
    P7S = [N7j, "High", "Low"];
    P7S.push(b7S);

    for (var M7S in o7S.series) {
      a7S = o7S.series[M7S].parameters;
      P7S.push(a7S.symbol);
    }

    k7DD.K71();
    return P7S;
  };

  K7S.ChartEngine.prototype.cleanMasterData = function (r7S, l7S) {
    var N7S, E7S, u7S, h7S, z7S;

    function d7S(W7S, Q7S) {
      var D7j, J7S;

      for (var F7S = 0; F7S < Q7S.length; F7S++) {
        D7j = "und";
        D7j += "efine";
        D7j += "d";
        J7S = W7S[Q7S[F7S]];

        if (_typeof(J7S) != D7j) {
          return ![];
        }
      }

      return !"";
    }

    N7S = r7S.symbol;
    E7S = l7S.masterData;

    if (!E7S || !E7S.length) {
      return;
    }

    u7S = this.getDataFields(l7S);
    h7S = 0;

    do {
      z7S = E7S[h7S];
      delete z7S[N7S];

      if (d7S.call(this, z7S, u7S)) {
        E7S.splice(h7S, 1);
        continue;
      }

      h7S++;
    } while (h7S < E7S.length);

    E7S = this.doCleanupGaps(E7S, l7S, {
      noCleanupDates: !![]
    });
    this.setMasterData(E7S, l7S, {
      noCleanupDates: !!1
    });
    this.clearCurrentMarketData(l7S, N7S);
  };

  K7S.ChartEngine.prototype.calculateATR = function (t0S, e7S, m0S) {
    var o2h = k7DD;
    var Z7S, X7S, p7S, A7S, K0S, I0S;

    if (!m0S) {
      m0S = t0S.dataSet;
    }

    Z7S = t0S.state.calculations.atr;

    if (!Z7S) {
      Z7S = t0S.state.calculations.atr = {};
    }

    if (!e7S) {
      o2h.z7L(23);
      e7S = o2h.W7L(20, "20");
    }

    X7S = [];

    if (Z7S.accum) {
      X7S = Z7S.accum;
    }

    for (var B0S = +"0"; B0S < m0S.length; B0S++) {
      A7S = m0S[B0S];
      p7S = B0S ? m0S[B0S - 1] : Z7S.q1;
      if (!p7S) continue;
      K0S = Math.max(A7S.High - A7S.Low, Math.abs(A7S.High - p7S.Close), Math.abs(A7S.Low - p7S.Close));

      if (X7S.length < e7S) {
        if (X7S.push(K0S) == e7S) {
          I0S = 0;

          for (var O0S = 0; O0S < X7S.length; O0S++) {
            I0S += X7S[O0S];
          }

          o2h.z7L(35);
          A7S.atr = o2h.W7L(I0S, e7S);
        }
      } else {
        o2h.i7L(33);
        var k3r = o2h.W7L(21, 11, 2);
        A7S.atr = (p7S.atr * (e7S - k3r) + K0S) / e7S;
      }

      A7S.trueRange = K0S;
    }

    t0S.state.calculations.atr = {
      accum: X7S,
      q1: p7S
    };
  };

  K7S.ChartEngine.prototype.calculateMedianPrice = function (j0S, L0S) {
    var x0S;

    if (!L0S) {
      L0S = j0S.dataSet;
    }

    for (var q0S = +"0"; q0S < L0S.length; ++q0S) {
      x0S = L0S[q0S];
      k7DD.z7L(26);
      var u3r = k7DD.W7L(2, 16, 18, 4, 8);
      x0S["hl/2"] = (x0S.High + x0S.Low) / u3r;
    }
  };

  K7S.ChartEngine.prototype.calculateTypicalPrice = function (y0S, U0S) {
    k7DD.K71();
    var T0S;

    if (!U0S) {
      U0S = y0S.dataSet;
    }

    for (var n0S = +"0"; n0S < U0S.length; ++n0S) {
      T0S = U0S[n0S];
      k7DD.z7L(121);
      var X3r = k7DD.Q7L(4, 12, 1, 123, 18);
      T0S["hlc/3"] = (T0S.High + T0S.Low + T0S.Close) / X3r;
    }
  };

  K7S.ChartEngine.prototype.calculateWeightedClose = function (D0S, Y0S) {
    var t2h = k7DD;
    var V0S, a7j;

    if (!Y0S) {
      Y0S = D0S.dataSet;
    }

    for (var v0S = 0; v0S < Y0S.length; ++v0S) {
      a7j = "hl";
      a7j += "c";
      a7j += "c/";
      a7j += "4";
      V0S = Y0S[v0S];
      t2h.i7L(37);
      var Y3r = t2h.Q7L(7, 5);
      t2h.z7L(122);
      var Z3r = t2h.W7L(72, 18, 10, 3, 695);
      V0S[a7j] = (V0S.High + V0S.Low + Y3r * V0S.Close) / Z3r;
    }
  };

  K7S.ChartEngine.prototype.calculateOHLC4 = function (c0S, g0S) {
    var G0S;

    if (!g0S) {
      g0S = c0S.dataSet;
    }

    for (var S0S = "0" - 0; S0S < g0S.length; ++S0S) {
      G0S = g0S[S0S];
      G0S["ohlc/4"] = (G0S.Open + G0S.High + G0S.Low + G0S.Close) / +"4";
    }
  };

  K7S.ChartEngine.prototype.currentQuote = function (H0S) {
    k7DD.K71();
    var i0S;

    if (!this.chart.dataSet) {
      return null;
    }

    for (var C0S = this.chart.dataSet.length - 1; C0S >= 0; C0S--) {
      if (this.chart.dataSet[C0S]) {
        if (!H0S) {
          return this.chart.dataSet[C0S];
        }

        i0S = this.chart.dataSet[C0S][H0S];

        if (i0S || i0S === 0) {
          return this.chart.dataSet[C0S];
        }
      }
    }

    return null;
  };

  K7S.ChartEngine.prototype.mostRecentClose = function (s0S) {
    var k0S, w0S;

    if (!this.chart.dataSet) {
      return null;
    }

    for (var f0S = this.chart.dataSet.length - "1" * 1; f0S >= +"0"; f0S--) {
      k0S = this.chart.dataSet[f0S];
      if (!k0S) continue;

      if (s0S) {
        k0S = k0S[s0S];
        if (!k0S && k0S !== 0) continue;
      }

      w0S = k0S.iqPrevClose;

      if (_typeof(k0S) == "object") {
        k0S = k0S.Close;
      }

      if (typeof k0S == "number") {
        return k0S;
      }

      if (typeof w0S == "number") {
        return w0S;
      }
    }

    return null;
  };

  K7S.ChartEngine.prototype.createDataSegment = function (d0S) {
    var A2h = k7DD;
    var o0S, N0S, P0S, F0S, Q0S, J0S, z0S, X0S, R0S, W0S, M0S, b0S, a0S, u0S, A0S, Z0S, l0S, r0S;

    if (this.runPrepend("createDataSegment", arguments)) {
      return;
    }

    A2h.K71();

    for (var e0S in this.charts) {
      o0S = this.charts[e0S];

      if (d0S) {
        o0S = d0S;
      }

      if (K7S.Comparison && o0S.isComparison) {
        K7S.Comparison.createComparisonSegmentInner(this, o0S);
      }

      N0S = o0S.dataSet;
      P0S = o0S.baseline;
      F0S = o0S.scroll;
      Q0S = o0S.maxTicks;
      J0S = this.layout;
      z0S = J0S.candleWidth;
      P0S.actualLevel = P0S.userLevel ? P0S.userLevel : P0S.defaultLevel;
      X0S = P0S.includeInDataSegment && (!this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars);
      W0S = 0;
      M0S = o0S.dataSegment = [];
      A2h.i7L(123);
      var o4r = A2h.Q7L(7, 6, 5, 9, 4);
      A2h.i7L(32);
      var B4r = A2h.Q7L(6, 13, 18);
      b0S = N0S.length - o4r - F0S - B4r;
      a0S = o0S.defaultPlotField;

      for (var E0S = -1; E0S < F0S && E0S < Q0S; E0S++) {
        b0S++;
        if (E0S == -1 && !X0S) continue;

        if (b0S < N0S.length && b0S >= 0) {
          R0S = N0S[b0S];
          R0S.candleWidth = null;

          if (R0S) {
            W0S += R0S.Volume || "1" | 1;
          }

          M0S.push(R0S);

          if (P0S.actualLevel === null && E0S >= 0) {
            if (a0S && a0S != "Close") {
              A2h.z7L(1);
              u0S = N0S[A2h.Q7L(b0S, 1)];

              if (u0S && (u0S[a0S] || u0S[a0S] === 0)) {
                P0S.actualLevel = u0S[a0S];
              }
            } else {
              if (R0S.iqPrevClose || R0S.iqPrevClose === 0) {
                P0S.actualLevel = R0S.iqPrevClose;
              }
            }
          }
        } else if (b0S < 0) {
          M0S.push(null);
        }
      }

      o0S.segmentImage = null;
      A0S = this.mainSeriesRenderer || {};

      if (A0S.params && A0S.params.volume) {
        A2h.i7L(13);
        var c4r = A2h.Q7L(6, 6, 14, 14, 1);
        Z0S = o0S.width - (Q0S - M0S.length - c4r) * J0S.candleWidth;
        l0S = +"0";
        o0S.segmentImage = [];

        for (var h0S = 0; h0S < M0S.length; h0S++) {
          R0S = M0S[h0S];
          o0S.segmentImage[h0S] = {};
          r0S = null;

          if (R0S) {
            if (R0S.Volume) {
              R0S.candleWidth = Z0S * R0S.Volume / W0S;
              A2h.i7L(30);
              var U4r = A2h.Q7L(0, 9, 6, 17);
              r0S = l0S + R0S.candleWidth / U4r;
              l0S += R0S.candleWidth;
            } else {
              R0S.candleWidth = z0S;
              A2h.i7L(49);
              r0S = A2h.Q7L(z0S, 2, l0S);
              l0S += z0S;
            }

            o0S.segmentImage[h0S] = {
              tick: R0S.tick,
              candleWidth: R0S.candleWidth,
              leftOffset: r0S
            };
          } else {
            l0S += z0S;
          }
        }
      }

      if (d0S) break;
    }

    if (o0S && o0S.isComparison) {
      this.clearPixelCache();
    }

    this.positionCrosshairsAtPointer();
    this.runAppend("createDataSegment", arguments);
  };

  K7S.ChartEngine.prototype.getDataSegment = function (p0S) {
    var B5S, m5S, t5S;

    if (!p0S) {
      p0S = this.chart;
    }

    B5S = p0S.dataSegment;

    if (!B5S || !B5S.length) {
      return [];
    }

    m5S = 0;
    t5S = B5S.length;
    k7DD.z71();

    if (this.pixelFromBar(m5S, p0S) < p0S.panel.left) {
      m5S++;
    }

    if (this.pixelFromBar(t5S - 1, p0S) > p0S.panel.right) {
      t5S--;
    }

    return B5S.slice(m5S, t5S);
  };

  K7S.ChartEngine.prototype.setMasterData = function (I5S, O5S, j5S) {
    var T5S, L5S, x5S, M7j, K5S, G7j, E7j, q5S;

    if (!O5S) {
      O5S = this.chart;
    }

    if (this.marketFactory) {
      T5S = this.marketFactory(O5S.symbolObject);
      this.setMarket(T5S, O5S);
    }

    if (!j5S) {
      j5S = {};
    }

    if (!j5S.noCleanupDates) {
      this.doCleanupDates(I5S, this.layout.interval);
    }

    O5S.masterData = I5S;

    if (O5S.name == "chart") {
      this.masterData = I5S;
    }

    x5S = null;

    for (L5S = 0; I5S && L5S < I5S.length; L5S++) {
      M7j = "nu";
      M7j += "mber";
      K5S = I5S[L5S];

      if (x5S === null) {
        G7j = "n";
        G7j += "um";
        G7j += "ber";

        if (typeof K5S.Close === "number") {
          x5S = "Close";
        } else if (_typeof(K5S.Value) === G7j) {
          E7j = "Va";
          E7j += "lu";
          E7j += "e";
          x5S = E7j;
        }
      }

      if (x5S === "Value" && typeof K5S.Value === "number") {
        K5S.Close = K5S.Value;
      }

      if (K5S.DT) {
        if (Object.prototype.toString.call(K5S.DT) != "[object Date]") {
          K5S.DT = new Date(K5S.DT);
        }

        if (!K5S.Date || K5S.Date.length != 17) {
          K5S.Date = K7S.yyyymmddhhmmssmmm(K5S.DT);
        }
      } else if (K5S.Date) {
        K5S.DT = K7S.strToDateTime(K5S.Date);
      } else {
        console.log("setMasterData : Missing DT and Date on masterData object");
      }

      if (K5S.Volume && _typeof(K5S.Volume) !== M7j) {
        K5S.Volume = parseInt(K5S.Volume, +"10");
      }

      if (I5S.length - L5S < 50) {
        this.updateCurrentMarketData(K5S, O5S, null, {
          fromTrade: !!{}
        });
      }
    }

    if (O5S.calculateTradingDecimalPlaces) {
      O5S.decimalPlaces = O5S.calculateTradingDecimalPlaces({
        stx: this,
        chart: O5S,
        symbol: O5S.symbolObject.symbol,
        symbolObject: O5S.symbolObject
      });
    }

    this.setDisplayDates(I5S);
    O5S.roundit = Math.pow(10, O5S.decimalPlaces);

    for (L5S in this.plugins) {
      q5S = this.plugins[L5S];

      if (q5S.display) {
        if (q5S.setMasterData) {
          q5S.setMasterData(this, O5S);
        }
      }
    }
  };

  K7S.ChartEngine.prototype.setMasterDataRender = function (y5S, n5S, U5S) {
    if (!U5S) {
      U5S = this.chart;
    }

    if (!U5S.symbol) {
      U5S.symbol = "";
    }

    this.setMasterData(n5S, U5S);

    if (n5S) {
      U5S.endPoints = {};

      if (n5S.length) {
        U5S.endPoints = {
          begin: n5S[0].DT,
          end: n5S[n5S.length - +"1"].DT
        };
        U5S.symbol = y5S;
      }
    }

    this.createDataSet();
    this.initializeChart();
    this.draw();

    if (!n5S || !n5S.length) {
      U5S.symbol = null;
      this.clear();
    }

    this.adjustPanelPositions();
  };

  K7S.ChartEngine.prototype.getSymbols = function (g5S) {
    var V5S, S5S, k5S, v5S, f5S, D5S, L7j, W7j, o5S, G5S, c5S, s5S, H5S;

    if (!g5S) {
      g5S = {};
    }

    V5S = [];
    k5S = this.layout;

    for (var R5S in this.charts) {
      D5S = this.charts[R5S];

      if (D5S.symbolObject && D5S.symbolObject.symbol) {
        V5S.push(i5S(D5S.symbol, D5S.symbolObject, k5S));
      }

      for (var w5S in D5S.series) {
        L7j = "e";
        L7j += "xclude-gener";
        L7j += "ated";
        W7j = "exclude";
        W7j += "-s";
        W7j += "tudie";
        W7j += "s";
        o5S = D5S.series[w5S];
        G5S = o5S.parameters;
        if (G5S.data && !G5S.data.useDefaultQuoteFeed) continue;
        f5S = G5S.symbolObject;
        v5S = G5S.symbol;
        S5S = i5S(v5S, f5S, k5S);
        S5S.id = w5S;

        if (g5S["include-parameters"]) {
          S5S.parameters = K7S.clone(G5S);

          if (S5S.parameters.yAxis) {
            delete S5S.parameters.yAxis.yAxisPlotter;
          }
        }

        if (g5S[W7j] && G5S.bucket == "study") continue;
        if (g5S[L7j] && f5S.generator) continue;
        V5S.push(S5S);
      }
    }

    function i5S(M5S, a5S, b5S) {
      k7DD.z71();
      return {
        symbol: M5S,
        symbolObject: a5S,
        periodicity: b5S.periodicity,
        interval: b5S.interval,
        timeUnit: b5S.timeUnit,
        setSpan: b5S.setSpan
      };
    }

    if (g5S["breakout-equations"]) {
      c5S = {};

      for (var Y5S = 0; Y5S < V5S.length; Y5S++) {
        v5S = V5S[Y5S].symbol;

        if (this.isEquationChart(v5S)) {
          s5S = K7S.formatEquation(v5S);

          if (s5S) {
            H5S = s5S.symbols;

            for (var C5S = 0; C5S < H5S.length; C5S++) {
              c5S[H5S[C5S]] = i5S(H5S[C5S], V5S[Y5S].symbolObject, V5S[Y5S]);
            }
          }
        } else {
          c5S[v5S] = i5S(v5S, V5S[Y5S].symbolObject, V5S[Y5S]);
        }
      }

      V5S = [];

      for (var P5S in c5S) {
        V5S.push(c5S[P5S]);
      }
    }

    return V5S;
  };

  K7S.ChartEngine.prototype.setDisplayDate = function (h5S) {
    var E5S, N5S, l5S;

    if (K7S.ChartEngine.isDailyInterval(this.layout.interval)) {
      return;
    }

    k7DD.K71();
    E5S = h5S.DT;
    k7DD.z7L(88);
    var S4r = k7DD.Q7L(981, 17, 167, 167, 2);
    N5S = E5S.getSeconds() * S4r + E5S.getMilliseconds();

    if (O7S.Date && this.displayZone) {
      l5S = new O7S.Date(E5S.getTime(), this.displayZone);
      E5S = new Date(l5S.getFullYear(), l5S.getMonth(), l5S.getDate(), l5S.getHours(), l5S.getMinutes());
      E5S = new Date(E5S.getTime() + N5S);
    }

    h5S.displayDate = E5S;
  };

  K7S.ChartEngine.prototype.setDisplayDates = function (u5S) {
    var r5S;

    if (!u5S) {
      return;
    }

    if (K7S.ChartEngine.isDailyInterval(this.layout.interval)) {
      return;
    }

    for (var z5S = 0; z5S < u5S.length; z5S++) {
      r5S = u5S[z5S];

      if (r5S.DT) {
        this.setDisplayDate(r5S);
      }
    }
  };

  K7S.ChartEngine.prototype.setTimeZone = function (A5S, Q5S) {
    var X41 = k7DD;
    var b7j, F5S, d5S, J5S, W5S, X5S;
    b7j = "prefere";
    b7j += "n";
    b7j += "ces";

    if (!O7S.Date) {
      X41.i7L(18);
      this.timeZoneOffset = X41.W7L(1, "0");
      return;
    }

    F5S = new Date();
    d5S = F5S.getTimezoneOffset();
    J5S = d5S;
    W5S = d5S;

    if (A5S) {
      this.dataZone = A5S;
    }

    if (this.dataZone) {
      J5S = new O7S.Date(F5S, this.dataZone).getTimezoneOffset();
    }

    if (Q5S) {
      this.displayZone = Q5S;
    }

    if (this.displayZone) {
      W5S = new O7S.Date(F5S, this.displayZone).getTimezoneOffset();
    }

    X41.i7L(124);
    this.timeZoneOffset = X41.W7L(d5S, d5S, J5S, W5S);

    for (var e5S in this.charts) {
      X5S = this.charts[e5S];
      this.setDisplayDates(X5S.masterData);
    }

    this.preferences.timeZone = Q5S;
    this.changeOccurred(b7j);
    this.createDataSet();
  };

  K7S.ChartEngine.prototype.updateChartData = function (Z5S, m9S, K9S) {
    var W41 = k7DD;
    var B6j, Y7j, X7j, c9S, C9S, B9S, j9S, o9S, I9S, t9S, Y9S, T9S, L9S, O9S, v9S, p5S, q9S, D9S, V9S, U9S, f9S, Z7j, i9S, H9S, o6j, k9S, x9S, w9S, g9S, S9S, n9S;
    B6j = "appendMas";
    B6j += "terD";
    B6j += "ata";
    Y7j = "upda";
    Y7j += "te";
    Y7j += "ChartD";
    Y7j += "ata";

    function M9S() {
      var W9S, A9S, r9U, K9U, H9U, e9S;
      W9S = null;
      A9S = 0;

      if (B9S.length) {
        r9U = -2077362086;
        W41.i7L(23);
        K9U = W41.Q7L(276826627, "343940983");
        H9U = 2;

        for (var k9U = 1; W41.V6U(k9U.toString(), k9U.toString().length, 24318) !== r9U; k9U++) {
          W9S = I9S.getFirstLastDataRecord(B9S, t9S || m9S.defaultPlotField, !!1);
          H9U += 2;
        }

        if (W41.V6U(H9U.toString(), H9U.toString().length, +"20342") !== K9U) {
          W9S = I9S.getFirstLastDataRecord(B9S, t9S && m9S.defaultPlotField, ![]);
        }

        if (W9S) {
          if (Z5S[Z5S.length - 1].DT <= W9S.DT) {
            return;
          }

          for (; A9S < Z5S.length; A9S++) {
            if (+Z5S[A9S].DT == +W9S.DT) {
              if (I9S.getFirstLastDataRecord([Z5S[A9S]], t9S || m9S.defaultPlotField)) {
                W9S = null;
              }

              break;
            } else if (Z5S[A9S].DT > W9S.DT) break;
          }
        }
      }

      e9S = Z5S.slice(A9S);

      if (W9S) {
        e9S.unshift(t9S ? W9S[t9S] : W9S);
      }

      e9S = I9S.doCleanupGaps(e9S, m9S);

      if (W9S) {
        e9S.shift();
      }

      W41.z71();
      Z5S = Z5S.slice("0" >> 661558144, A9S).concat(e9S);
    }

    X7j = "appendMasterDat";
    X7j += "a";

    if (!K9S) {
      K9S = {};
    }

    if (!m9S) {
      m9S = this.chart;
    }

    c9S = !{};
    C9S = ![];
    B9S = m9S.masterData;
    j9S = this.layout;
    o9S = this.dataZone;
    I9S = this;
    t9S = K9S.secondarySeries;
    L9S = K7S.isValidNumber;

    function a9S(Z9S, B4S) {
      var X9S, R7j, l7j, p9S;

      if (t9S) {
        delete B9S[Z9S][t9S];

        if (I9S.cleanupGaps) {
          R7j = "g";
          R7j += "a";
          R7j += "p";
          X9S = {
            DT: B4S,
            Close: null
          };

          if (I9S.cleanupGaps != R7j && B9S[Z9S - 1] && B9S[Z9S - 1][t9S]) {
            X9S.Close = B9S[Z9S - 1][t9S].Close;
            X9S.High = X9S.Low = X9S.Open = X9S.Close;
            X9S.Volume = 0;
          }

          B9S[Z9S][t9S] = X9S;
        }
      } else {
        l7j = "g";
        l7j += "a";
        l7j += "p";
        p9S = B9S.splice(Z9S, 1)[0];
        X9S = {
          DT: p9S.DT,
          Close: null,
          needed: !1
        };

        for (Y9S in m9S.series) {
          T9S = m9S.series[Y9S].parameters.symbolObject.symbol;

          if (typeof p9S[T9S] != "undefined") {
            X9S[T9S] = p9S[T9S];
            delete X9S.needed;
          }
        }

        if (I9S.cleanupGaps && I9S.cleanupGaps != l7j) {
          delete X9S.needed;

          if (I9S.cleanupGaps != "gap" && B9S[Z9S - 1]) {
            X9S.Close = B9S[Z9S - 1].Close;
            X9S.High = X9S.Low = X9S.Open = X9S.Close;
            X9S.Volume = 0;
          }
        }

        if (X9S.needed !== ![]) {
          B9S.splice(Z9S, 0, X9S);
          I9S.setDisplayDate(X9S);
        }
      }
    }

    if (!K9S.noCleanupDates) {
      this.doCleanupDates(Z5S, j9S.interval);
    }

    if (K9S.useAsLastSale || Z5S.constructor == Object && (Z5S.Last || Z5S.Last === 0)) {
      b9S();
    }

    function b9S() {
      var Q7j, J9S;
      Q7j = "[o";
      Q7j += "b";
      Q7j += "ject D";
      Q7j += "ate]";
      c9S = !![];

      if (K9S.useAsLastSale && K9S.useAsLastSale.aggregatedVolume) {
        C9S = !!{};
      }

      if (Z5S.constructor === Array) {
        W41.i7L(1);
        var J4r = W41.W7L(19, 18);
        J9S = Z5S[Z5S.length - J4r];
        Z5S = {};
        Z5S.DT = J9S.DT;
        Z5S.Close = J9S.Close;
        Z5S.Volume = J9S.Volume;
      } else if (Z5S.Last) {
        Z5S.Close = Z5S.Last;
        delete Z5S.Last;
      }

      if (Z5S.DT && Object.prototype.toString.call(Z5S.DT) != Q7j) {
        Z5S.DT = new Date(Z5S.DT);
      }

      if (!Z5S.DT || Z5S.DT == "Invalid Date") {
        Z5S.DT = new Date();
      }

      if (j9S.interval != "tick") {
        P9S();
      }

      Z5S.Open = Z5S.Close;
      Z5S.High = Z5S.Close;
      Z5S.Low = Z5S.Close;
    }

    if (Z5S && Z5S.constructor == Object) {
      Z5S = [Z5S];
    }

    if (!Z5S || !Z5S.length) {
      return;
    }

    if (this.runPrepend(X7j, [Z5S, m9S, K9S])) {
      return;
    }

    if (this.runPrepend(Y7j, [Z5S, m9S, K9S])) {
      return;
    }

    if (!B9S) {
      B9S = [];
    }

    O9S = B9S.length - ("1" ^ 0);
    v9S = !!0;

    if (K9S.fillGaps) {
      M9S();
    }

    if (!Z5S.length) {
      return;
    }

    function R9S() {
      I9S.createDataSet(null, null, K9S);
      I9S.draw();
      I9S.updateChartAccessories();
      W41.z71();
      I9S.streamParameters.count = 0;
      I9S.streamParameters.timeout = -1;
    }

    for (var y9S = 0; y9S < Z5S.length; y9S++) {
      p5S = Z5S[y9S];
      q9S = p5S.DT;
      D9S = p5S.Date;

      if (q9S && Object.prototype.toString.call(q9S) != "[object Date]") {
        p5S.DT = q9S = new Date(q9S);
      }

      if (q9S) {
        if (!D9S || D9S.length != 17) {
          p5S.Date = K7S.yyyymmddhhmmssmmm(p5S.DT);
        }
      }

      if (!q9S) {
        q9S = p5S.DT = K7S.strToDateTime(D9S);
      }

      if (!L9S(p5S.Close) && L9S(p5S.Value)) {
        p5S.Close = p5S.Value;
      }

      while (O9S >= ("0" & 2147483647) && O9S < B9S.length) {
        V9S = B9S[O9S].DT;

        if (!V9S) {
          V9S = K7S.strToDateTime(B9S[O9S].Date);
        }

        if (V9S.getTime() <= q9S.getTime()) {
          v9S = !!1;
          W41.i7L(81);
          U9S = W41.Q7L(638801440, "0");

          if (V9S.getTime() < q9S.getTime()) {
            if (O9S < B9S.length - 1) {
              f9S = B9S[O9S + 1].DT || K7S.strToDateTime(B9S[O9S + ("1" >> 1680257952)].Date);

              if (f9S.getTime() <= q9S.getTime()) {
                O9S++;
                continue;
              }
            }

            U9S = 1;
            ;
          }

          if (K9S.deleteItems) {
            if (!U9S) {
              a9S(O9S, q9S);
            }

            break;
          } else {
            Z7j = "t";
            Z7j += "i";
            Z7j += "c";
            Z7j += "k";

            if (j9S.interval == Z7j && K9S.firstLoop !== !{}) {
              U9S = 1;
            }

            if (!U9S) {
              E9S(O9S, p5S);
            }

            if (L9S(p5S.Close)) {
              if (!L9S(p5S.Open)) {
                p5S.Open = p5S.Close;
              }

              i9S = Math.max(p5S.Open, p5S.Close);
              H9S = Math.min(p5S.Open, p5S.Close);

              if (!L9S(p5S.High) || p5S.High < i9S) {
                p5S.High = i9S;
              }

              if (!L9S(p5S.Low) || p5S.Low > H9S) {
                p5S.Low = H9S;
              }
            }

            if (p5S.Volume && !L9S(p5S.Volume)) {
              p5S.Volume = parseInt(p5S.Volume, 10);
            }

            O9S += U9S;

            if (t9S) {
              o6j = "t";
              o6j += "ic";
              o6j += "k";

              if (Z5S.length - y9S < 50) {
                this.updateCurrentMarketData(p5S, m9S, t9S, {
                  fromTrade: !![]
                });
              }

              if (j9S.interval != o6j || p5S.Close !== undefined) {
                if (U9S) {
                  B9S.splice(O9S, 0, {
                    DT: p5S.DT
                  });
                  this.setDisplayDate(B9S[O9S]);
                }

                B9S[O9S][t9S] = p5S;
              }
            } else {
              if (Z5S.length - y9S < +"50") {
                this.updateCurrentMarketData(p5S, m9S, null, {
                  fromTrade: !![]
                });
              }

              if (j9S.interval != "tick" || p5S.Close !== undefined) {
                B9S.splice(O9S, U9S ? 0 : 1, p5S);
                this.setDisplayDate(p5S);
              }
            }
          }

          break;
        }

        O9S += v9S ? +"1" : -1;
      }

      if (O9S < 0) {
        if (t9S) {
          this.updateCurrentMarketData(p5S, m9S, t9S, {
            fromTrade: !!1
          });

          if (j9S.interval != "tick" || p5S.Close !== undefined) {
            W41.z7L(1);
            B9S.splice(0, W41.W7L("0", 0), {
              DT: p5S.DT
            });
            this.setDisplayDate(B9S[0]);
            W41.z7L(81);
            B9S[W41.W7L(1587077696, "0")][t9S] = p5S;
          }
        } else {
          this.updateCurrentMarketData(p5S, m9S, null, {
            fromTrade: !!{}
          });

          if (j9S.interval != "tick" || p5S.Close !== undefined) {
            W41.i7L(81);
            B9S.splice(W41.W7L(1902870080, "0"), 0, p5S);
            this.setDisplayDate(p5S);
          }
        }

        v9S = !![];
        O9S = 0;
      }
    }

    if (B9S.length) {
      this.masterData = m9S.masterData = B9S;
    }

    if (this.maxMasterDataSize) {
      B9S = m9S.masterData = this.masterData = B9S.slice(-this.maxMasterDataSize);
    }

    k9S = t9S ? this.getSeries({
      symbol: t9S,
      chart: m9S
    }) : [m9S];

    for (var G9S = 0; G9S < k9S.length; G9S++) {
      x9S = k9S[G9S];

      if (!x9S.endPoints.begin || x9S.endPoints.begin > Z5S[0].DT) {
        x9S.endPoints.begin = Z5S[+"0"].DT;
      }

      if (!x9S.endPoints.end || x9S.endPoints.end < Z5S[Z5S.length - ("1" << 1498254848)].DT) {
        x9S.endPoints.end = Z5S[Z5S.length - 1].DT;
      }

      w9S = x9S.parameters && x9S.parameters.field || m9S.defaultPlotField;
      g9S = this.getFirstLastDataRecord(Z5S, w9S, !![]);

      if (g9S && (!x9S.lastQuote || x9S.lastQuote.DT <= g9S.DT)) {
        x9S.lastQuote = g9S;
      }

      if (t9S && K9S.deleteItems) {
        x9S.lastQuote = this.getFirstLastDataRecord(B9S, t9S, !0)[t9S];
      }
    }

    for (var s9S in this.plugins) {
      S9S = this.plugins[s9S];

      if (S9S.display) {
        if (S9S.appendMasterData) {
          S9S.appendMasterData(this, Z5S, m9S);
        }
      }
    }

    if (!this.masterData || !this.masterData.length) {
      this.masterData = B9S;
    }

    if (!K9S.noCreateDataSet) {
      n9S = this.streamParameters;

      if (++n9S.count > n9S.maxTicks || K9S.bypassGovernor) {
        clearTimeout(n9S.timeout);
        R9S();
      } else {
        if (n9S.timeout == -1) {
          n9S.timeout = setTimeout(R9S, n9S.maxWait);
        }
      }
    }

    function E9S(K4S, m4S) {
      W41.z71();
      var t4S, O7j, H7j, K7j, r7j, u7j, k7j;
      t4S = B9S[K4S];

      if (t9S) {
        t4S = t4S[t9S] || {};
      }

      if (m4S.Close === null) {
        if (t4S.Open !== undefined) {
          m4S.Open = null;
        }

        if (t4S.High !== undefined) {
          m4S.High = null;
        }

        if (t4S.Low !== undefined) {
          m4S.Low = null;
        }

        if (t4S.Volume !== undefined) {
          m4S.Volume = null;
        }

        ;
      } else {
        O7j = "B";
        O7j += "id";
        H7j = "H";
        H7j += "igh";
        K7j = "O";
        K7j += "pen";
        r7j = "Cl";
        r7j += "ose";

        if (c9S) {
          if (m4S.Volume) {
            m4S.Volume = parseInt(m4S.Volume, 10);
          }

          if (!C9S) {
            m4S.Volume += t4S.Volume;
          }
        } else {
          if (!L9S(m4S.Volume) && t4S.Volume) {
            m4S.Volume = t4S.Volume;
          }
        }

        if (!K9S.allowReplaceOHL) {
          if (L9S(t4S.Open)) {
            m4S.Open = t4S.Open;
          }

          if (L9S(t4S.High) && L9S(m4S.High)) {
            if (t4S.High > m4S.High) {
              m4S.High = t4S.High;
            }
          }

          if (L9S(t4S.Low) && L9S(m4S.Low)) {
            if (t4S.Low < m4S.Low) {
              m4S.Low = t4S.Low;
            }
          }
        }

        [r7j, K7j, H7j, "Low", O7j, "Ask"].forEach(function (O4S) {
          if (!L9S(m4S[O4S])) {
            m4S[O4S] = t4S[O4S];
          }
        });

        for (Y9S in m9S.series) {
          u7j = "un";
          u7j += "d";
          u7j += "efined";
          k7j = "und";
          k7j += "ef";
          k7j += "ine";
          k7j += "d";
          T9S = m9S.series[Y9S].parameters.symbolObject.symbol;

          if (_typeof(m4S[T9S]) == k7j && _typeof(t4S[T9S]) != u7j) {
            m4S[T9S] = t4S[T9S];
          }
        }
      }
    }

    function P9S() {
      var m7j, d9S, z9S, F9S, Q9S, l9S, h9S, N9S, u9S, r9S;
      m7j = "market.marke";
      m7j += "t_d";
      m7j += "ef.m";
      m7j += "arket_tz";

      if (!K7S.Market || !m9S.market) {
        return;
      }

      d9S = {
        market_tz: K7S.getFromNS(m9S, m7j, null)
      };
      z9S = j9S.interval;
      W41.z71();

      if (z9S == "month" || z9S == "week") {
        if (!I9S.dontRoll) {
          z9S = "day";
        }

        d9S = I9S.chart.market.market_def;
      }

      F9S = new K7S.Market(d9S);
      Q9S = {
        begin: B9S && B9S.length ? B9S[B9S.length - 1].DT : Z5S.DT,
        interval: z9S,
        periodicity: +"1",
        timeUnit: j9S.timeUnit
      };
      l9S = F9S.newIterator(Q9S);
      h9S = l9S.next();

      if (!B9S) {
        Z5S.DT = new Date(+l9S.previous());
      } else if (Z5S.DT < h9S) {
        N9S = 0;
        r9S = l9S.previous();
        u9S = Z5S.DT;
        K9S.appending = !!{};

        while (u9S < r9S && N9S < 1000) {
          K9S.appending = !!0;
          r9S = l9S.previous();
          N9S++;
        }

        Z5S.DT = r9S;
        K9S.updating = !K9S.appending;
      } else if (Z5S.DT >= h9S) {
        W41.i7L(1);
        N9S = W41.Q7L("0", 0);
        u9S = Z5S.DT;

        while (u9S > h9S && N9S < 1000) {
          Z5S.DT = h9S;
          h9S = l9S.next();
          N9S++;
        }

        K9S.appending = !"";
      }
    }

    this.runAppend(B6j, arguments);
    this.runAppend("updateChartData", arguments);
  };

  K7S.ChartEngine.prototype.updateCurrentMarketData = function (I4S, x4S, q4S, j4S) {
    var J6j, S6j, U6j, c6j, n4S, T4S, v4S, y4S, V4S, L4S, Y4S, U4S;
    J6j = "updateCu";
    J6j += "rren";
    J6j += "tMarketData";
    S6j = "A";
    S6j += "sk";
    U6j = "updateCu";
    U6j += "rr";
    U6j += "en";
    U6j += "tMarketData";
    c6j = "t";
    c6j += "i";
    c6j += "ck";

    if (!I4S || !I4S.DT) {
      return;
    }

    if (!x4S) {
      x4S = this.chart;
    }

    n4S = j4S && j4S.fromTrade;
    T4S = I4S.DT;

    if (!n4S && this.layout.interval != c6j && x4S.market) {
      if (x4S.market.market_def) {
        if (!x4S.market.isMarketDate(I4S.DT)) {
          return;
        }

        if (!K7S.ChartEngine.isDailyInterval(this.layout.interval) && x4S.market.getSession(I4S.DT) === null) {
          return;
        }

        ;
      }

      v4S = {
        begin: I4S.DT,
        interval: this.layout.interval,
        periodicity: this.layout.periodicity,
        timeUnit: this.layout.timeUnit
      };
      y4S = new K7S.Market(x4S.market.market_def);

      if (this.extendedHours && this.extendedHours.filter) {
        y4S.enableAllAvailableSessions();
      }

      V4S = y4S.newIterator(v4S);
      V4S.next();
      I4S.DT = V4S.previous();
    }

    if (this.runPrepend(U6j, arguments)) {
      return;
    }

    L4S = x4S.currentMarketData;

    if (q4S) {
      if (!L4S[q4S]) {
        L4S[q4S] = {};
      }

      L4S = L4S[q4S];
    }

    ["Last", "Bid", S6j].forEach(function (D4S) {
      if (I4S[D4S] && typeof I4S[D4S] == "number") {
        if (!L4S[D4S] || !L4S[D4S].DT || L4S[D4S].DT <= I4S.DT) {
          L4S[D4S] = {
            DT: I4S.DT,
            Price: I4S[D4S],
            Size: I4S[D4S + "Size"],
            Timestamp: T4S
          };
        }
      }
    });
    ["BidL2", "AskL2"].forEach(function (G4S) {
      if (I4S[G4S] && I4S[G4S] instanceof Array) {
        if (!L4S[G4S] || !L4S[G4S].DT || L4S[G4S].DT <= I4S.DT) {
          L4S[G4S] = {
            DT: I4S.DT,
            Price_Size: I4S[G4S],
            Timestamp: T4S
          };
        }
      }
    });

    if (I4S.Close && (!L4S.Last || L4S.Last.DT <= I4S.DT)) {
      Y4S = I4S.Close;
      U4S = j4S && j4S.finalClose;

      if (U4S || U4S === 0) {
        Y4S = U4S;
      }

      L4S.Last = {
        DT: I4S.DT,
        Price: Y4S,
        Size: I4S.LastSize === undefined && this.layout.interval == "tick" ? I4S.Volume : I4S.LastSize,
        Timestamp: I4S.LastTime || T4S
      };
    }

    L4S.touched = new Date();

    if (!n4S) {
      delete I4S.Last;
    }

    this.runAppend(J6j, arguments);
  };

  K7S.ChartEngine.prototype.clearCurrentMarketData = function (C4S, i4S) {
    var g6j, g4S, S4S, c4S;
    g6j = "clea";
    g6j += "rCurrentMar";
    g6j += "ketData";

    if (this.runPrepend(g6j, arguments)) {
      return;
    }

    S4S = [];

    if (!C4S) {
      for (g4S in this.charts) {
        S4S.push(this.charts[g4S]);
      }
    } else {
      S4S.push(C4S);
    }

    for (g4S = "0" >> 1908849728; g4S < S4S.length; g4S++) {
      c4S = S4S[g4S].currentMarketData;

      if (i4S) {
        delete c4S[i4S];
      } else {
        for (var H4S in c4S) {
          c4S[H4S] = undefined;
        }
      }
    }

    this.runAppend("clearCurrentMarketData", arguments);
  };
};

y4z = function y4z(f4S) {
  var k4S;
  k4S = f4S.CIQ;

  k4S.ChartEngine.prototype.changeOccurred = function (s4S) {
    var J41 = k7DD;
    var y6j, j6j, i6j, h6j, w4S, O0j, k0j, u0j, U9U, S9U, J9U;
    y6j = "v";
    J41.K71();
    y6j += "ect";
    y6j += "or";
    j6j = "la";
    j6j += "you";
    j6j += "t";
    i6j = "th";
    i6j += "eme";
    h6j = "th";
    h6j += "e";
    h6j += "me";
    w4S = {
      stx: this,
      symbol: this.chart.symbol,
      symbolObject: this.chart.symbolObject,
      layout: this.layout,
      drawings: this.drawingObjects
    };

    if (s4S == h6j) {
      this.dispatch(i6j, w4S);
    }

    if (this.currentlyImporting) {
      return;
    }

    if (s4S == j6j) {
      O0j = -+"1102770575";
      k0j = 1933189149;
      u0j = 2;

      for (var Y0j = 1; J41.V6U(Y0j.toString(), Y0j.toString().length, 40401) !== O0j; Y0j++) {
        this.dispatch("layout", w4S);
        u0j += 2;
      }

      if (J41.V6U(u0j.toString(), u0j.toString().length, 70246) !== k0j) {
        this.dispatch("", w4S);
      }
    } else if (s4S == y6j) {
      U9U = 199033809;
      S9U = +"1769917482";
      J41.z7L(19);
      J9U = J41.W7L("2", 2147483647);

      for (var h9U = 1; J41.V6U(h9U.toString(), h9U.toString().length, 60457) !== U9U; h9U++) {
        this.dispatch("drawing", w4S);
        J9U += 2;
      }

      if (J41.V6U(J9U.toString(), J9U.toString().length, 56073) !== S9U) {
        this.dispatch("", w4S);
      }
    } else if (s4S == "preferences") {
      this.dispatch("preferences", w4S);
    }
  };

  k4S.ChartEngine.prototype.startAsyncAction = function () {
    if (!this.pendingAsyncs) {
      this.pendingAsyncs = [];
    }

    this.pendingAsyncs.push(!0);
  };

  k4S.ChartEngine.prototype.registerChartDrawnCallback = function (R4S) {
    if (!this.asyncCallbacks) {
      this.asyncCallbacks = [];
    }

    this.asyncCallbacks.push(R4S);
    return {
      fc: R4S
    };
  };

  k4S.ChartEngine.prototype.unregisterChartDrawnCallback = function (P4S) {
    k7DD.K71();

    for (var o4S = +"0"; o4S < this.asyncCallbacks.length; o4S++) {
      if (this.asyncCallbacks[o4S] == P4S.fc) {
        this.asyncCallbacks.splice(o4S, 1);
        return;
      }
    }
  };

  k4S.ChartEngine.prototype.makeAsyncCallbacks = function () {
    if (!this.asyncCallbacks) {
      return;
    }

    k7DD.z71();

    if (!this.pendingAsyncs || !this.pendingAsyncs.length) {
      for (var b4S = 0; b4S < this.asyncCallbacks.length; b4S++) {
        this.asyncCallbacks[b4S]();
      }
    }
  };

  k4S.ChartEngine.prototype.completeAsyncAction = function () {
    k7DD.z71();
    this.pendingAsyncs.pop();
    this.makeAsyncCallbacks();
  };

  k4S.ChartEngine.prototype.addDomEventListener = function (M4S, a4S, E4S, l4S) {
    M4S.addEventListener(a4S, E4S, l4S);
    this.eventListeners.push({
      element: M4S,
      event: a4S,
      "function": E4S,
      options: l4S
    });
  };

  k4S.ChartEngine.prototype.addEventListener = function (h4S, N4S) {
    var u4S, e6j;

    if (h4S === "*") {
      for (var r4S in this.callbackListeners) {
        this.callbackListeners[r4S].push(N4S);
      }
    } else if (h4S instanceof Array) {
      for (var z4S = 0; z4S < h4S.length; z4S++) {
        this.callbackListeners[h4S[z4S]].push(N4S);
      }
    } else {
      u4S = this.callbackListeners[h4S];

      if (!u4S) {
        e6j = "Attempted to ad";
        e6j += "d an invali";
        e6j += "d";
        e6j += " listener.";
        throw new Error(e6j);
      }

      u4S.push(N4S);
    }

    return {
      type: h4S,
      cb: N4S
    };
  };

  k4S.ChartEngine.prototype.removeEventListener = function (d4S, W4S) {
    var Q4S, F4S;

    if (!d4S || _typeof(d4S) != "object") {
      d4S = {
        type: d4S,
        cb: W4S
      };
    }

    Q4S = function Q4S(e4S, X4S) {
      for (var A4S = 0; A4S < e4S.length; A4S++) {
        if (e4S[A4S] === X4S) {
          e4S.splice(A4S, 1);
          return;
        }
      }
    };

    F4S = this.callbackListeners;

    if (d4S.type === (8912 > 1640 ? 6400 <= +"444.39" ? 697.10 : "*" : 7.82e+3)) {
      for (var J4S in F4S) {
        Q4S(F4S[J4S], d4S.cb);
      }

      return;
    }

    if (!F4S[d4S.type]) {
      throw new Error("Attempted to remove an invalid listener.");
    }

    k7DD.K71();
    Q4S(F4S[d4S.type], d4S.cb);
  };

  k4S.ChartEngine.prototype.dispatch = function (t2M, m2M) {
    var Z4S;
    Z4S = this.callbackListeners[t2M];
    k7DD.K71();

    if (Z4S) {
      for (var p4S = 0; p4S < Z4S.length; p4S++) {
        if (Z4S[p4S].call(this, m2M) === !![]) {
          return !!1;
        }
      }
    }

    Z4S = this.callbackListeners["*"];

    if (Z4S) {
      for (var B2M = 0; B2M < Z4S.length; B2M++) {
        if (Z4S[B2M].call(this, m2M) === !![]) {
          return !!1;
        }
      }
    }

    return !!"";
  };

  k4S.ChartEngine.prototype.updateListeners = function (I2M) {
    var K2M;
    k7DD.K71();

    for (var O2M in this.plugins) {
      K2M = this.plugins[O2M];

      if (K2M.display && K2M.listener) {
        K2M.listener(this, I2M);
      }
    }
  };
};

V4z = function V4z(x2M) {
  k7DD.z71();
  var L2M;
  L2M = x2M.CIQ;

  L2M.ChartEngine.prototype.prepend = function (U2M, T2M) {
    var q2M, j2M;
    k7DD.K71();
    k7DD.z7L(8);
    q2M = k7DD.W7L("prepend", U2M);

    if (this instanceof L2M.ChartEngine) {
      j2M = this.hasOwnProperty(q2M) ? this[q2M] : [];
      this[q2M] = [T2M].concat(j2M);
    } else {
      j2M = L2M.ChartEngine.prototype[q2M] || [];
      L2M.ChartEngine.prototype[q2M] = [T2M].concat(j2M);
    }

    return {
      method: q2M,
      func: T2M
    };
  };

  L2M.ChartEngine.prototype.append = function (Y2M, V2M) {
    var n2M, y2M;
    k7DD.i7L(8);
    n2M = k7DD.W7L("append", Y2M);

    if (this instanceof L2M.ChartEngine) {
      y2M = this.hasOwnProperty(n2M) ? this[n2M] : [];
      this[n2M] = y2M.concat(V2M);
    } else {
      y2M = L2M.ChartEngine.prototype[n2M] || [];
      L2M.ChartEngine.prototype[n2M] = y2M.concat(V2M);
    }

    return {
      method: n2M,
      func: V2M
    };
  };

  L2M.ChartEngine.prototype.runPrepend = function (c2M, C2M, g2M) {
    var D2M, v2M, S2M;
    k7DD.z7L(8);
    D2M = k7DD.W7L("prepend", c2M);
    v2M = this.hasOwnProperty(D2M) ? this[D2M] : [];
    v2M = v2M.concat(L2M.ChartEngine.prototype[D2M] || []);

    if (!v2M.length) {
      return ![];
    }

    if (!g2M) {
      g2M = this;
    }

    k7DD.z71();

    for (var G2M = 0; G2M < v2M.length; G2M++) {
      S2M = v2M[G2M].apply(g2M, C2M);

      if (S2M) {
        return S2M;
      }
    }

    return !"1";
  };

  L2M.ChartEngine.prototype.runAppend = function (s2M, R2M, f2M) {
    var w6j, H2M, i2M, w2M;
    w6j = "ap";
    w6j += "pen";
    w6j += "d";
    k7DD.i7L(8);
    H2M = k7DD.Q7L(w6j, s2M);
    i2M = this.hasOwnProperty(H2M) ? this[H2M] : [];
    i2M = i2M.concat(L2M.ChartEngine.prototype[H2M] || []);

    if (!i2M.length) {
      return !"1";
    }

    if (!f2M) {
      f2M = this;
    }

    for (var k2M = 0; k2M < i2M.length; k2M++) {
      w2M = i2M[k2M].apply(f2M, R2M);

      if (w2M) {
        return w2M;
      }
    }

    return ![];
  };

  L2M.ChartEngine.prototype.removeInjection = function (b2M) {
    var P2M, o2M;
    P2M = b2M.method;

    if (this instanceof L2M.ChartEngine) {
      if (!this[P2M]) {
        return;
      }

      for (o2M = 0; o2M < this[P2M].length; o2M++) {
        if (this[P2M][o2M] == b2M.func) {
          k7DD.z7L(23);
          this[P2M].splice(o2M, k7DD.Q7L(0, "1"));
          return;
        }
      }
    } else {
      if (!L2M.ChartEngine.prototype[P2M]) {
        return;
      }

      for (o2M = +"0"; o2M < L2M.ChartEngine.prototype[P2M].length; o2M++) {
        if (L2M.ChartEngine.prototype[P2M][o2M] == b2M.func) {
          L2M.ChartEngine.prototype[P2M].splice(o2M, 1);
          return;
        }
      }
    }
  };

  L2M.ChartEngine.prototype.remove = function (M2M) {
    var z41 = k7DD;
    var C6j;

    if (this instanceof L2M.ChartEngine) {
      z41.z7L(8);
      delete this[z41.Q7L("append", M2M)];
      z41.z7L(8);
      delete this[z41.Q7L("prepend", M2M)];
    } else {
      C6j = "appen";
      C6j += "d";
      z41.z7L(8);
      delete L2M.ChartEngine.prototype[z41.Q7L(C6j, M2M)];
      z41.z7L(8);
      delete L2M.ChartEngine.prototype[z41.W7L("prepend", M2M)];
    }
  };
};

k7DD.z71();

Y4z = function Y4z(E2M) {
  var q6j, a2M, l2M;
  q6j = "<div class=\"st";
  q6j += "x-panel-control\"><div class=\"stx-panel-title\"></div><div cla";
  q6j += "ss=\"stx-panel-legend\"></div></div>";
  a2M = E2M.CIQ;
  l2M = E2M.timezoneJS;

  a2M.ChartEngine.prototype.convertToDataZone = function (N2M) {
    var h2M;

    if ((N2M || N2M === 0) && this.dataZone) {
      h2M = a2M.convertTimeZone(N2M, null, this.dataZone);
      N2M = new Date(h2M.getFullYear(), h2M.getMonth(), h2M.getDate(), h2M.getHours(), h2M.getMinutes(), h2M.getSeconds(), h2M.getMilliseconds());
    }

    return N2M;
  };

  a2M.ChartEngine.prototype.debug = function () {};

  a2M.ChartEngine.prototype.fps = function (z2M, d2M) {
    var z6j, F2M, u2M, Q2M;
    z6j = " s";
    z6j += "econds";
    z2M = z2M || +"5";

    function r2M() {
      var g5h = k7DD;
      var J2M, p6j, W2M;
      g5h.i7L(106);
      var g4r = g5h.Q7L(19, 9, 17838, 991);
      g5h.z71();
      J2M = (new Date().getTime() - F2M) / g4r;

      if (J2M > z2M) {
        p6j = "F";
        p6j += "PS=";
        g5h.i7L(35);
        W2M = g5h.Q7L(u2M, J2M);
        g5h.z7L(8);
        console.log(g5h.Q7L(p6j, W2M));

        if (d2M) {
          d2M(W2M);
        }

        return;
      }

      Q2M.draw();
      u2M++;

      if (a2M.ChartEngine.useAnimation) {
        requestAnimationFrame(r2M);
      } else {
        setTimeout(r2M, 0);
      }
    }

    F2M = new Date().getTime();
    u2M = 0;
    Q2M = this;
    k7DD.i7L(52);
    console.log(k7DD.W7L(z6j, z2M, "Running fps() for "));
    r2M();
  };

  a2M.ChartEngine.htmlControls = {
    mSticky: '<div class="stx_sticky"> <span class="mStickyInterior"></span></div>',
    iconsTemplate: q6j
  };

  a2M.ChartEngine.prototype.setChartType = function (e2M) {
    var A2M, X2M;
    A2M = this.layout;
    X2M = this.chart;

    if (A2M.aggregationType != "ohlc") {
      A2M.aggregationType = "ohlc";

      if (X2M.canvas) {
        this.createDataSet();
      }
    }

    A2M.chartType = e2M;
    this.setMainSeriesRenderer();

    if (this.mainSeriesRenderer.isAggregation && this.setAggregationType) {
      return this.setAggregationType(e2M);
    }

    X2M.defaultChartStyleConfig = {
      type: e2M
    };

    if (this.displayInitialized) {
      this.draw();
    }

    this.changeOccurred("layout");
  };

  a2M.ChartEngine.prototype.setChartScale = function (Z2M) {
    var F6j, p2M;
    F6j = "l";
    F6j += "a";
    F6j += "yout";

    if (!Z2M) {
      Z2M = "linear";
    }

    p2M = {
      percent: !!{},
      relative: !![]
    };
    this.layout.chartScale = Z2M;

    if (this.chart.canvas) {
      this.draw();
    }

    this.changeOccurred(F6j);
  };

  a2M.ChartEngine.prototype.checkLogScale = function () {
    var t6j, I6j, B1M, d6j;
    t6j = "l";
    t6j += "o";
    t6j += "g";
    I6j = "checkLog";
    I6j += "Scal";
    I6j += "e";

    if (this.runPrepend(I6j, arguments)) {
      return;
    }

    if (this.layout.chartScale !== t6j) {
      return !1;
    }

    B1M = !!0;

    if (this.chart.yAxis.lowValue <= 0) {
      d6j = "line";
      d6j += "a";
      d6j += "r";
      this.setChartScale(d6j);
      this.dispatch("notification", "logdeactivated");
      B1M = !![];
    }

    this.runAppend("checkLogScale", arguments);
    return B1M;
  };

  a2M.ChartEngine.prototype.setAdjusted = function (m1M) {
    this.layout.adj = m1M;
    k7DD.z71();

    if (this.chart.canvas) {
      this.createDataSet();
      this.draw();
    }

    this.changeOccurred("layout");
  };

  a2M.ChartEngine.prototype.padOutPrice = function (K1M, O1M) {
    var w41 = k7DD;
    var I1M, t1M, L1M, x1M;

    if (K1M !== 0 && (!K1M || typeof K1M != "number")) {
      return "";
    }

    if (!O1M && O1M !== 0) {
      O1M = K1M;
    }

    w41.z7L(8);
    I1M = w41.W7L("", O1M);
    t1M = +"0";

    if (I1M.indexOf(+"8251" != 5239 ? (554.1, 7506) === 3090 ? !!1 : (8823, "9940" * 1) !== 38.16 ? "." : 60.92 : (9.46e+3, "v")) > -1) {
      w41.z7L(8);
      var h4r = w41.Q7L(715, 3);
      w41.i7L(1);
      var i4r = w41.W7L(2, 1);
      w41.z7L(10);
      var j4r = w41.Q7L(13, 1, 1, 3509);
      w41.z7L(30);
      var y4r = w41.W7L(8973, 6, 10, 33);
      t1M = I1M.substring(I1M.indexOf(353.84 >= h4r ? (!!{}, "b") : ("878.48" * i4r, j4r) > y4r ? !!"1" : (+"859.86", 317.86) < (531.73, "5930" & 2147483647) ? "." : ("4.77e+3" - 0, !"1"))).length - 1;
    }

    if (O1M >= 1000) {
      t1M = Math.max(t1M, +"0");
    } else if (O1M < 2) {
      t1M = Math.max(t1M, 4);
    } else {
      t1M = Math.max(t1M, 2);
    }

    L1M = this.internationalizer;

    if (L1M) {
      x1M = L1M.priceFormatters.length;

      if (t1M >= x1M) {
        w41.z7L(1);
        t1M = w41.Q7L(x1M, 1);
      }

      K1M = L1M.priceFormatters[t1M].format(K1M);
    } else {
      K1M = K1M.toFixed(t1M);
    }

    return K1M;
  };

  a2M.ChartEngine.prototype.formatPrice = function (q1M, T1M) {
    var v6j, j1M, U1M, n1M;
    v6j = "un";
    v6j += "defined";

    if (q1M !== 0 && (!q1M || _typeof(q1M) == v6j)) {
      return "";
    }

    if (!T1M) {
      T1M = this.currentPanel;
    }

    if (!T1M) {
      T1M = this.chart.panel;
    }

    if (!T1M) {
      return q1M.toString();
    }

    j1M = T1M.decimalPlaces;

    if (!j1M && j1M !== 0) {
      j1M = T1M.chart.decimalPlaces;
    }

    if (!j1M && j1M !== 0) {
      return q1M.toString();
    }

    U1M = this.internationalizer;

    if (U1M) {
      n1M = U1M.priceFormatters.length;

      if (j1M >= n1M) {
        k7DD.i7L(1);
        j1M = k7DD.Q7L(n1M, 1);
      }

      q1M = U1M.priceFormatters[j1M].format(q1M);
    } else {
      q1M = q1M.toFixed(j1M);
    }

    return q1M;
  };

  a2M.ChartEngine.prototype.determineMinMax = function (o1M, v1M, G1M, b1M, P1M, M1M, a1M, E1M, s1M) {
    var g1M, S1M, R1M, c1M, k1M, V1M, D1M, f1M, H1M, y1M, Y1M;
    k7DD.z7L(12);
    var e4r = k7DD.W7L(4, 15, 5, 0);
    g1M = Number.MAX_VALUE * e4r;
    S1M = Number.MAX_VALUE;
    R1M = !{};
    c1M = o1M.length;

    if (!s1M) {
      s1M = [];
    }

    k1M = [];

    if (P1M) {
      c1M = P1M;
    }

    for (var C1M = 0; C1M <= c1M + 1; C1M++) {
      if (v1M.length) {
        if (C1M == c1M) {
          V1M = this.getPreviousBar(this.chart, v1M[0], 0);
        } else if (C1M == c1M + 1) {
          V1M = this.getNextBar(this.chart, v1M["0" << 1143943136], c1M - 1);
        } else {
          V1M = o1M[C1M];
        }
      }

      if (!V1M) continue;

      if (!b1M) {
        if (V1M.transform) {
          R1M = !![];
          V1M = V1M.transform;
        } else if (R1M) continue;

        ;
      }

      D1M = 0;

      for (var i1M = 0; i1M < v1M.length; i1M++) {
        f1M = a2M.existsInObjectChain(V1M, v1M[i1M]);
        if (!f1M) continue;
        H1M = f1M.obj[f1M.member];

        if (typeof H1M == "number") {
          H1M = [H1M];
        }

        for (var w1M = 0; w1M < H1M.length; w1M++) {
          y1M = H1M[w1M];

          if (M1M && y1M instanceof Array) {
            y1M = y1M[0];
          }

          if (y1M || y1M === 0) {
            if (G1M === !0 || G1M instanceof Array && G1M.indexOf(v1M[i1M]) > -1) {
              D1M += y1M;

              if (D1M > g1M) {
                g1M = D1M;
              }

              if (D1M < S1M) {
                S1M = D1M;
              }
            } else {
              if (y1M > g1M) {
                g1M = y1M;
              }

              if (y1M < S1M) {
                S1M = y1M;
              }

              k1M.push({
                value: y1M,
                quote: V1M
              });
            }
          }
        }
      }

      if (G1M === !![] || G1M instanceof Array && G1M.indexOf(v1M[i1M]) > -1) {
        k1M.push({
          value: D1M,
          quote: V1M
        });
      }
    }

    Y1M = [S1M, g1M];
    s1M.forEach(function (l1M) {
      Y1M = l1M(k1M, a1M, E1M) || Y1M;
    });

    if (Y1M[1] == Number.MAX_VALUE * -("1" - 0)) {
      Y1M[+"1"] = 0;
    }

    if (Y1M[0] == Number.MAX_VALUE) {
      Y1M[0] = 0;
    }

    return Y1M;
  };

  a2M.ChartEngine.prototype.initializeDisplay = function (h1M) {
    var D41 = k7DD;
    var A6j, z1M, d1M, J1M, u1M, p1M, B6M, F1M, e1M, O6M, X1M, r1M, N1M, t6M, Q1M;
    A6j = "O";
    A6j += "p";
    A6j += "en";

    if (this.runPrepend("initializeDisplay", arguments)) {
      return;
    }

    z1M = [];
    d1M = [];
    J1M = !1;
    u1M = this;
    p1M = ["Close", A6j, "High", "Low"];
    B6M = [h1M.defaultPlotField || "Close"];
    var W1M = this.mainSeriesRenderer;
    var A1M = h1M.dataSegment,
        m6M = h1M.seriesRenderers;
    e1M = null;

    function K6M(L6M, n6M) {
      var D6M, q6M, x6j, T6M, g6M, Y6M, S6M, x6M, j6M, U6M, C6M;
      D6M = ![];
      q6M = u1M.layout && u1M.layout.studies && u1M.layout.studies[L6M.name];

      if (q6M && (!n6M || n6M.name == q6M.panel)) {
        for (var V6M in q6M.outputMap) {
          z1M.push(V6M);

          if (q6M.study) {
            if (q6M.study.renderer) {
              z1M = z1M.concat(a2M.createObjectChainNames(V6M, p1M));
            } else if (!q6M.study.seriesFN) {
              z1M = z1M.concat(a2M.createObjectChainNames(V6M, B6M));
            }
          }
        }

        for (var y6M = 0; y6M <= 2; y6M++) {
          x6j = "_h";
          x6j += "i";
          x6j += "s";
          x6j += "t";
          z1M.push(q6M.name + x6j + (y6M ? y6M : ""));
        }

        D6M = !![];
      }

      if (!n6M) {
        return;
      }

      L6M.studies = [];
      L6M.renderers = [];

      if (D6M) {
        L6M.studies.push(L6M.name);
      }

      for (var G6M in m6M) {
        T6M = m6M[G6M];
        g6M = T6M.params;
        Y6M = g6M.panel;
        if ((g6M.yAxis || !u1M.panels[Y6M] || u1M.panels[Y6M].yAxis) != L6M) continue;
        if (Y6M != n6M.name) continue;
        S6M = T6M.highLowBars ? p1M : B6M;
        J1M = T6M.bounded;

        for (var v6M = +"0"; v6M < T6M.seriesParams.length; v6M++) {
          x6M = T6M.seriesParams[v6M];
          if (x6M.hidden) continue;
          j6M = void 0;

          if (x6M.subField) {
            j6M = a2M.createObjectChainNames(x6M.symbol, [x6M.subField]).concat(x6M.symbol);
          } else if (x6M.symbol) {
            j6M = a2M.createObjectChainNames(x6M.symbol, S6M).concat(x6M.symbol);
          } else if (x6M.field) {
            j6M = x6M.field;
          } else if (L6M == h1M.panel.yAxis) {
            j6M = S6M;
          }

          if (j6M) {
            z1M = z1M.concat(j6M);
          }

          if (T6M.useSum) {
            d1M = d1M.concat(j6M);
          }
        }

        L6M.renderers.push(G6M);
      }

      for (var c6M in u1M.overlays) {
        U6M = u1M.overlays[c6M];
        if (U6M.panel != n6M.name) continue;
        if (U6M.name == L6M.name) continue;
        C6M = U6M.getYAxis(u1M);
        if (C6M != L6M) continue;
        L6M.studies.push(U6M.name);

        if (h1M.includeOverlaysInMinMax) {
          K6M({
            name: U6M.name
          });
        }
      }
    }

    O6M = Math.floor((h1M.width - this.micropixels) / this.layout.candleWidth);

    if (h1M.scroll > h1M.maxTicks && h1M.maxTicks > O6M + 1) {
      D41.i7L(37);
      var w4r = D41.Q7L(17, 16);
      e1M = A1M.length - w4r;
    }

    X1M = [];

    for (var I6M in this.panels) {
      r1M = this.panels[I6M];
      X1M = r1M.yaxisLHS.concat(r1M.yaxisRHS);

      for (var Z1M = 0; Z1M < X1M.length; Z1M++) {
        N1M = X1M[Z1M];
        z1M = [];
        d1M = [];
        t6M = h1M.transformFunc && N1M == h1M.panel.yAxis;
        K6M(N1M, r1M);

        if (!this.currentlyImporting && !N1M.renderers.length && !N1M.studies.length) {
          this.deleteYAxisIfUnused(r1M, N1M);
          continue;
        }

        if (W1M && W1M.determineMax) {
          F1M = W1M.determineMax(A1M, z1M, d1M, !t6M, e1M, J1M, r1M, N1M);
        } else {
          F1M = this.determineMinMax(A1M, z1M, d1M, !t6M, e1M, J1M, r1M, N1M);
        }

        if (this.baselineHelper) {
          F1M = this.setBaselineMinMax(F1M, N1M);
        }

        N1M.lowValue = F1M[0];
        N1M.highValue = F1M[1];

        if (N1M == h1M.panel.yAxis) {
          h1M.lowValue = N1M.lowValue;
          h1M.highValue = N1M.highValue;
        }
      }
    }

    Q1M = h1M.state.aggregation;

    if (Q1M && Q1M.box) {
      D41.z7L(1);
      var C4r = D41.W7L(13, 11);
      h1M.lowValue -= Q1M.box / C4r;
      D41.i7L(33);
      var z4r = D41.Q7L(46, 12, 4);
      h1M.highValue += Q1M.box / z4r;
    }

    this.runAppend("initializeDisplay", arguments);
  };

  a2M.ChartEngine.prototype.setMarket = function (k6M, i6M) {
    if (!a2M.Market) {
      return;
    }

    if (!i6M) {
      i6M = this.chart;
    }

    i6M.market = new a2M.Market(k6M);

    for (var H6M in this.layout.marketSessions) {
      i6M.market.disableSession(H6M, this.layout.marketSessions[H6M]);
    }
  };

  a2M.ChartEngine.prototype.setMarketFactory = function (f6M) {
    k7DD.z71();
    this.marketFactory = f6M;
  };

  a2M.ChartEngine.prototype.setResizeTimer = function (w6M) {
    function s6M(R6M, P6M) {
      var o6M;
      k7DD.z71();

      o6M = function o6M() {
        if (!R6M.chart.canvas) {
          return;
        }

        if (!a2M.isAndroid) {
          if (R6M.chart.canvas.height != Math.floor(R6M.devicePixelRatio * R6M.chart.container.clientHeight) || R6M.chart.canvas.width != Math.floor(R6M.devicePixelRatio * R6M.chart.container.clientWidth)) {
            R6M.resizeChart();
          }
        }
      };

      return function () {
        if (typeof ResizeObserver !== "undefined") {
          if (a2M.ChartEngine.useAnimation) {
            requestAnimationFrame(o6M);
          } else {
            setTimeout(o6M, +"0");
          }
        } else {
          o6M();
        }
      };
    }

    this.resizeDetectMS = w6M;
    k7DD.z71();
    this.resizeHandle = a2M.resizeObserver(this.chart.container, s6M(this), this.resizeHandle, w6M);
  };

  a2M.ChartEngine.prototype.getRenderedItems = function () {
    var l6M, a6M, z6M, u6M, b6M, E6M, M6M, N6M;
    l6M = this.chart;
    a6M = this.currentPanel;

    if (!a6M) {
      return;
    }

    z6M = ["Open", "High", "Low", "Close"];
    k7DD.z71();
    u6M = ["Close"];
    b6M = [];

    for (var h6M in this.overlays) {
      if (this.overlays[h6M].panel !== a6M.name) continue;
      b6M = b6M.concat(Object.keys(this.overlays[h6M].outputMap));
    }

    for (var r6M in l6M.seriesRenderers) {
      E6M = l6M.seriesRenderers[r6M];
      if (E6M.params.panel != a6M.name) continue;

      for (var d6M in E6M.seriesParams) {
        M6M = E6M.seriesParams[d6M];
        N6M = E6M.highLowBars ? z6M : u6M;

        if (M6M.subField) {
          b6M = b6M.concat(a2M.createObjectChainNames(M6M.symbol, [M6M.subField])).concat(M6M.symbol);
        } else if (M6M.symbol) {
          b6M = b6M.concat(a2M.createObjectChainNames(M6M.symbol, N6M)).concat(M6M.symbol);
        } else if (M6M.field) {
          b6M.push(M6M.field);
        } else if (a6M == l6M.panel) {
          b6M = b6M.concat(N6M);
        }
      }
    }

    return b6M;
  };

  a2M.ChartEngine.prototype.setTransform = function (F6M, Q6M, J6M) {
    F6M.transformFunc = Q6M;
    F6M.untransformFunc = J6M;
  };

  a2M.ChartEngine.prototype.unsetTransform = function (W6M) {
    delete W6M.transformFunc;
    k7DD.K71();
    delete W6M.untransformFunc;

    for (var A6M = 0; W6M.dataSet && A6M < W6M.dataSet.length; A6M++) {
      W6M.dataSet[A6M].transform = null;
    }
  };

  a2M.ChartEngine.prototype.isEquationChart = function (e6M) {
    if (e6M && e6M[0] == (860 > 984.95 ? !0 : (3350, 1720) < (400.82, 529.36) ? (3.78e+3, "0xd11" * 1) : ("7663" ^ 0) > 468.79 ? "=" : !"1")) {
      if (!this.allowEquations || !a2M.fetchEquationChart) {
        console.warn("Error, equation chart option requires equationsAdvanced.js");
        return ![];
      }

      return !!{};
    }

    return ![];
  };

  a2M.ChartEngine.prototype.correctIfOffEdge = function (q3M) {
    var b41 = k7DD;
    var X6M, Z6M, B3M, m3M, I3M, p6M, t3M, L3M, K3M, x3M;

    if (this.runPrepend("correctIfOffEdge", arguments)) {
      return;
    }

    for (var O3M in this.charts) {
      X6M = this.charts[O3M];
      Z6M = X6M.dataSet;
      B3M = X6M.maxTicks;
      m3M = this.layout;
      I3M = this.minimumLeftBars;
      p6M = Math.min(I3M, B3M);

      if (X6M.allowScrollPast) {
        b41.i7L(1);
        t3M = b41.W7L(B3M, p6M);

        if (p6M > Z6M.length) {
          t3M = B3M - Z6M.length;
        }

        if (X6M.scroll - t3M >= Z6M.length) {
          b41.z7L(55);
          var p4r = b41.Q7L(0, 2, 7, 10);
          X6M.scroll = Z6M.length + t3M - p4r;
          this.micropixels = 0;
        }

        if (X6M.scroll <= p6M) {
          X6M.scroll = p6M;
          this.micropixels = 0;
        }
      } else {
        if (X6M.scroll < p6M) {
          X6M.scroll = p6M;
        }

        if (X6M.scroll > Z6M.length) {
          X6M.scroll = Z6M.length;
        }
      }

      if (X6M.allowScrollFuture === !!0) {
        L3M = this.getLabelOffsetInPixels(X6M, m3M.chartType) + m3M.candleWidth * X6M.whiteSpaceFutureTicks;
        b41.i7L(125);
        var q4r = b41.W7L(21, 11, 1, 11);
        K3M = B3M - Math.round(L3M / m3M.candleWidth) - q4r;
        x3M = this.micropixels < 0 ? X6M.scroll - 1 : X6M.scroll;

        if (x3M < K3M) {
          X6M.scroll = K3M;
          this.micropixels = 0;
        }
      }
    }

    this.runAppend("correctIfOffEdge", arguments);
  };

  a2M.ChartEngine.prototype.getStartDateOffset = function () {
    for (var j3M = 0; j3M < this.chart.dataSegment.length; j3M++) {
      if (this.chart.dataSegment[j3M]) {
        return j3M;
      }
    }

    return 0;
  };

  a2M.ChartEngine.prototype.setStartDate = function (n3M) {
    var U3M;

    for (var T3M = 0; T3M < this.chart.dataSet.length; T3M++) {
      U3M = this.chart.dataSet[T3M];

      if (U3M.DT.getTime() == n3M.getTime()) {
        this.chart.scroll = this.chart.dataSet.length - T3M;
        this.draw();
        return;
      }
    }
  };

  a2M.ChartEngine.prototype.clearPixelCache = function () {
    var y3M, V3M;

    for (var v3M in this.panels) {
      y3M = this.panels[v3M];
      y3M.cacheHigh = null;
      y3M.cacheLow = null;
      y3M.cacheLeft = 1000000;
      y3M.cacheRight = -1;
    }

    for (var D3M in this.charts) {
      V3M = this.charts[D3M];
      if (!V3M.dataSet) continue;

      for (var Y3M = 0; Y3M < V3M.dataSet.length; Y3M++) {
        V3M.dataSet[Y3M].cache = {};
      }
    }
  };

  a2M.ChartEngine.prototype.adjustBackingStore = function (G3M, S3M) {
    var i41 = k7DD;
    var i3M, g3M, n6j, s6j, c3M, C3M;
    this.devicePixelRatio = window.devicePixelRatio || 1;

    if (this.devicePixelRatio < +"1.0") {
      this.devicePixelRatio = 1.0;
    }

    i3M = S3M.webkitBackingStorePixelRatio || S3M.mozBackingStorePixelRatio || S3M.msBackingStorePixelRatio || S3M.oBackingStorePixelRatio || S3M.backingStorePixelRatio || 1;
    g3M = this.devicePixelRatio / i3M;

    if (!this.useBackingStore) {
      this.devicePixelRatio = this.adjustedDisplayPixelRatio = 1;
      return;
    }

    i41.z71();

    if (!a2M.isAndroid || a2M.is_chrome || a2M.isFF) {
      n6j = "p";
      n6j += "x";
      s6j = "p";
      s6j += "x";
      c3M = G3M.width;
      C3M = G3M.height;
      i41.z7L(18);
      G3M.width = i41.Q7L(g3M, c3M);
      i41.z7L(18);
      G3M.height = i41.W7L(g3M, C3M);
      i41.i7L(8);
      G3M.style.width = i41.Q7L(c3M, s6j);
      i41.i7L(8);
      G3M.style.height = i41.W7L(C3M, n6j);
      S3M.scale(g3M, g3M);
      this.adjustedDisplayPixelRatio = g3M;
      this.backing = {
        ratio: g3M,
        width: G3M.width,
        height: G3M.height,
        styleWidth: c3M,
        styleHeight: C3M
      };
    }
  };

  a2M.ChartEngine.prototype.reconstituteBackingStore = function () {
    var k3M, H3M;

    if (!this.useBackingStore || !this.backing) {
      return;
    }

    k3M = [this.chart.canvas];

    if (this.useBackgroundCanvas) {
      k3M.push(this.chart.backgroundCanvas);
    }

    H3M = this.backing;
    k7DD.K71();
    k3M.forEach(function (f3M) {
      if (f3M.width == H3M.width) {
        return;
      }

      f3M.width = H3M.width;
      f3M.height = H3M.height;
      f3M.context.scale(H3M.ratio, H3M.ratio);
    });
    this.adjustedDisplayPixelRatio = H3M.ratio;
    this.draw();
  };

  a2M.ChartEngine.prototype.disableBackingStore = function () {
    var s3M, w3M;

    if (!this.useBackingStore || !this.backing) {
      return;
    }

    s3M = [this.chart.canvas];

    if (this.useBackgroundCanvas) {
      s3M.push(this.chart.backgroundCanvas);
    }

    w3M = this.backing;
    s3M.forEach(function (R3M) {
      if (R3M.width == w3M.styleWidth) {
        return;
      }

      k7DD.K71();
      R3M.width = w3M.styleWidth;
      R3M.height = w3M.styleHeight;
      R3M.context.scale(1, 1);
    });
    this.adjustedDisplayPixelRatio = 1;
    k7DD.K71();
    this.draw();
  };

  a2M.ChartEngine.prototype.getBackgroundCanvas = function (o3M) {
    if (!o3M) {
      o3M = this.chart;
    }

    return this.useBackgroundCanvas ? o3M.backgroundCanvas : o3M.canvas;
  };

  a2M.ChartEngine.prototype.resizeCanvas = function () {
    var u41 = k7DD;
    var f6j, T6j, M3M, E3M, l3M, V6j, b3M, P3M, z3M, a3M, h3M;
    f6j = "undefi";
    f6j += "ned";
    T6j = "h";
    T6j += "t";
    T6j += "ml";
    M3M = this.chart.canvas;
    E3M = this.chart.context;

    if (M3M && E3M) {
      this.floatCanvas.height = this.chart.tempCanvas.height = this.chart.backgroundCanvas.height = M3M.height = this.chart.container.clientHeight;
      this.floatCanvas.width = this.chart.tempCanvas.width = this.chart.backgroundCanvas.width = M3M.width = this.chart.container.clientWidth;
      this.adjustBackingStore(M3M, E3M);
      this.adjustBackingStore(this.chart.tempCanvas, this.chart.tempCanvas.context);
      this.adjustBackingStore(this.floatCanvas, this.floatCanvas.context);
      this.adjustBackingStore(this.chart.backgroundCanvas, this.chart.backgroundCanvas.context);
    }

    l3M = this.container.getBoundingClientRect();
    this.top = l3M.top;
    this.left = l3M.left;
    this.canvasWidth = this.chart.canvasWidth = this.chart.container.clientWidth;
    this.right = this.left + this.canvasWidth;
    this.height = this.chart.container.clientHeight;
    this.width = this.right - this.left;

    if (this.width === +"0" && !this.container.dimensionlessCanvas && this.container.closest(T6j)) {
      V6j = "w";
      V6j += "arnin";
      V6j += "g: zero w";
      V6j += "idth chart. Check CSS for chart container.";
      console.log(V6j);
    }

    this.bottom = this.top + this.height;
    this.calculateYAxisPositions();
    this.chart.canvasRight = this.right;
    this.chart.canvasHeight = this.height;
    b3M = this.layout.candleWidth;

    if (_typeof(b3M) == f6j) {
      b3M = 8;
    }

    for (var N3M in this.charts) {
      P3M = this.charts[N3M];
      this.setCandleWidth(b3M, P3M);

      if (P3M.scroll < P3M.width / b3M) {
        P3M.scroll = Math.floor(P3M.width / b3M);
        z3M = Math.round(this.preferences.whitespace / this.layout.candleWidth);
        P3M.scroll -= z3M;
      }

      a3M = 10;

      try {
        u41.i7L(126);
        var F4r = u41.Q7L(12, 5, 20, 2, 7);
        h3M = E3M.measureText("10:00").width * F4r;
      } catch (u3M) {
        h3M = 100;
      }

      while (a3M > 1) {
        if (this.chart.width / h3M > a3M) break;
        a3M /= 1.5;
      }

      P3M.xAxis.autoComputedTickSizePixels = Math.round(this.chart.width / a3M);

      if (P3M.xAxis.autoComputedTickSizePixels < 1) {
        u41.i7L(81);
        P3M.xAxis.autoComputedTickSizePixels = u41.Q7L(2087675584, "1");
      }
    }
  };

  a2M.ChartEngine.prototype.setCandleWidth = function (r3M, d3M) {
    k7DD.K71();

    if (!d3M) {
      d3M = this.chart;
    }

    r3M = this.constrainCandleWidth(r3M);
    this.layout.candleWidth = r3M;
    k7DD.z7L(86);
    var I4r = k7DD.Q7L(8, 215, 3, 7, 17);
    d3M.maxTicks = Math.round(d3M.width / r3M) + I4r;
  };

  a2M.ChartEngine.prototype.constrainCandleWidth = function (Q3M) {
    var J3M, W3M, F3M;
    J3M = this.minimumCandleWidth;
    W3M = this.maximumCandleWidth;
    F3M = this.animations.zoom;

    if (J3M && Q3M < J3M) {
      Q3M = J3M;

      if (F3M && F3M.running) {
        F3M.stop();
      }
    }

    if (W3M && Q3M > W3M) {
      Q3M = W3M;

      if (F3M && F3M.running) {
        F3M.stop();
      }
    }

    return Q3M;
  };

  a2M.ChartEngine.prototype.resizeChart = function (A3M) {
    var N6j, P6j, e3M;
    N6j = "res";
    N6j += "izeC";
    N6j += "hart";
    P6j = "r";
    P6j += "esize";
    P6j += "Ch";
    P6j += "art";

    if (this.runPrepend(P6j, arguments)) {
      return;
    }

    if (A3M !== !1) {
      A3M = !!1;
    }

    if (A3M) {
      this.preAdjustScroll();
    }

    e3M = this.chart.canvasHeight;
    this.resizeCanvas();

    if (A3M) {
      this.postAdjustScroll();
    }

    if (this.displayInitialized) {
      this.adjustPanelPositions();
      this.draw();
      ;
    } else if (this.chart.canvasHeight !== 0 && e3M === 0) {
      this.adjustPanelPositions();
      this.draw();
    }

    this.doDisplayCrosshairs();
    this.updateChartAccessories();
    this.runAppend(N6j, arguments);
  };

  a2M.ChartEngine.prototype.clear = function () {
    var D6j, Z3M;
    this.displayInitialized = !!"";

    for (var X3M in this.layout.studies) {
      D6j = "Studi";
      D6j += "es.remov";
      D6j += "eStudy";
      Z3M = this.layout.studies[X3M];
      a2M.getFn(D6j)(this, Z3M);
    }

    if (this.controls.chartControls) {
      this.controls.chartControls.style.display = "none";
    }

    this.chart.panel.title.innerHTML = "";
    this.chart.panel.title.appendChild(document.createTextNode(this.chart.panel.display));
  };

  a2M.ChartEngine.prototype.fillScreen = function () {
    var p3M, t8M, m8M, B8M, K8M;
    p3M = this.chart;
    t8M = this.layout.candleWidth;
    m8M = p3M.width - this.preferences.whitespace;
    B8M = p3M.dataSet.length;

    if (B8M * t8M >= m8M) {
      this.draw();
      return;
    }

    if (!this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars) {
      B8M--;
    }

    k7DD.i7L(35);
    K8M = k7DD.Q7L(m8M, B8M);
    this.setCandleWidth(K8M, p3M);
    this.home({
      maintainWhitespace: !!{}
    });
  };

  a2M.ChartEngine.prototype.setMaxTicks = function (O8M, I8M) {
    var L8M;

    if (!I8M) {
      I8M = {};
    }

    O8M = Math.round(O8M);

    if (O8M < 2) {
      O8M = 2;
    }

    L8M = I8M.padding ? I8M.padding : 0;
    this.layout.candleWidth = (this.chart.width - L8M) / O8M;

    if (!this.layout.candleWidth) {
      this.layout.candleWidth = 8;
    }

    this.chart.maxTicks = Math.round(this.chart.width / this.layout.candleWidth - 0.499);

    if (I8M.padding || I8M.padding === ("0" ^ 0)) {
      k7DD.z7L(8);
      this.chart.scroll = k7DD.W7L(O8M, 1);
    }

    k7DD.K71();
    ;
  };

  a2M.ChartEngine.prototype.initializeChart = function (q8M) {
    var W6j, M6j, E6j, G6j, a6j, x8M, j8M, y8M, T8M, U8M, D8M, n8M, S8M, k8M, i8M, Y8M, H8M, v8M, c8M, C8M, s8M, R8M;
    W6j = "initia";
    W6j += "lizeChart";
    M6j = "canv";
    M6j += "as";
    E6j = "st";
    E6j += "x-";
    E6j += "canvas-shim";
    G6j = "canv";
    G6j += "as";
    a6j = "init";
    a6j += "ial";
    a6j += "izeCh";
    a6j += "art";

    if (this.runPrepend(a6j, arguments)) {
      return;
    }

    x8M = this.chart;

    if (!x8M.symbolObject.symbol) {
      x8M.symbolObject.symbol = x8M.symbol;
    }

    if (this.locale) {
      this.setLocale(this.locale);
    }

    if (!this.displayZone && a2M.ChartEngine.defaultDisplayTimeZone) {
      this.setTimeZone(null, a2M.ChartEngine.defaultDisplayTimeZone);
    }

    this.resetDynamicYAxis({
      noRecalculate: !!{}
    });
    this.calculateYAxisPositions();
    this.micropixels = 0;

    if (q8M) {
      x8M.container = q8M;
    } else {
      q8M = x8M.container;
    }

    q8M.stx = this;

    if (!q8M.CIQRegistered) {
      q8M.CIQRegistered = !!"1";
      a2M.ChartEngine.registeredContainers.push(q8M);
    }

    if (this.registerHTMLElements) {
      this.registerHTMLElements();
    }

    j8M = x8M.canvas;
    y8M = x8M.backgroundCanvas;
    T8M = x8M.tempCanvas;
    U8M = this.floatCanvas;
    D8M = x8M.canvasShim;

    if (j8M && document.createElement("canvas").getContext) {
      if (!j8M.id) {
        q8M.removeChild(j8M);
        x8M.canvas = null;
      }

      if (T8M && !T8M.id) {
        q8M.removeChild(T8M);
        x8M.tempCanvas = null;
      }

      if (U8M && !U8M.id) {
        q8M.removeChild(U8M);
        this.floatCanvas = null;
      }

      if (y8M && !y8M.id) {
        q8M.removeChild(y8M);
        x8M.backgroundCanvas = null;
      }
    } else {
      this.setCandleWidth(this.layout.candleWidth);
    }

    if (!x8M.backgroundCanvas) {
      y8M = x8M.backgroundCanvas = document.createElement(G6j);
    }

    q8M.appendChild(y8M);
    G8M(y8M);

    if (!x8M.canvasShim) {
      D8M = x8M.canvasShim = document.createElement("div");
    }

    D8M.className = E6j;
    q8M.appendChild(D8M);

    if (!x8M.canvas) {
      j8M = x8M.canvas = document.createElement(M6j);
    }

    q8M.appendChild(j8M);
    G8M(j8M);
    x8M.context = j8M.context;

    if (!x8M.tempCanvas) {
      T8M = x8M.tempCanvas = document.createElement("canvas");
    }

    q8M.appendChild(T8M);
    G8M(T8M, !0);

    if (!this.floatCanvas) {
      U8M = this.floatCanvas = document.createElement("canvas");
    }

    q8M.appendChild(U8M);
    G8M(U8M, !"");
    this.resizeCanvas();

    if (a2M.isAndroid) {
      T8M.ontouchstart = U8M.ontouchstart = function (M8M) {
        if (M8M.preventDefault) {
          M8M.preventDefault();
        }
      };
    }

    n8M = this.panels;
    x8M.panel.display = x8M.symbol;

    if (x8M.symbolDisplay) {
      x8M.panel.display = x8M.symbolDisplay;
    }

    k7DD.K71();
    this.adjustPanelPositions();
    x8M.panel = n8M[x8M.name];

    for (var g8M in n8M) {
      S8M = n8M[g8M].yaxisLHS.concat(n8M[g8M].yaxisRHS);

      for (var V8M = 0; V8M < S8M.length; V8M++) {
        S8M[V8M].height = n8M[g8M].yAxis.height;
        this.calculateYAxisMargins(S8M[V8M]);
        ;
      }
    }

    this.initialWhitespace = this.preferences.whitespace;

    function G8M(o8M, b8M) {
      var P8M;
      o8M.context = o8M.getContext("2d");
      o8M.context.lineWidth = 1;
      P8M = o8M.style;
      P8M.position = "absolute";
      k7DD.z71();
      P8M.left = "0px";

      if (b8M) {
        P8M.display = "none";
      }
    }

    if (x8M.dataSet && x8M.dataSet.length > 0) {
      x8M.scroll = Math.floor(x8M.width / this.layout.candleWidth);
      k8M = Math.round(this.preferences.whitespace / this.layout.candleWidth);
      x8M.scroll -= k8M;
    }

    if (a2M.touchDevice) {
      i8M = q8M.querySelector(".overlayEdit");
      Y8M = q8M.querySelector(".overlayTrashCan");
      H8M = q8M.querySelector(".vectorTrashCan");

      v8M = function v8M(a8M, E8M, l8M) {
        return function (h8M) {
          k7DD.z71();
          a8M.deleteHighlighted(E8M, l8M);
        };
      };

      if (i8M) {
        a2M.safeClickTouch(i8M, v8M(this, !0, !!1));

        if (Y8M) {
          a2M.safeClickTouch(Y8M, v8M(this, !"1"));
        }
      } else if (Y8M) {
        a2M.safeClickTouch(Y8M, v8M(this, !!{}));
      }

      if (H8M) {
        a2M.safeClickTouch(H8M, v8M(this, !!{}));
      }
    }

    if (this.manageTouchAndMouse) {
      this.registerTouchAndMouseEvents();
    }

    if (this.handleMouseOut) {
      q8M.onmouseout = function (N8M) {
        k7DD.K71();
        return function (z8M) {
          N8M.handleMouseOut(z8M);
        };
      }(this);

      a2M.smartHover();
    }

    if (this.abortDrawings) {
      this.abortDrawings();
    }

    this.undoStamps = [];

    for (var f8M in n8M) {
      c8M = n8M[f8M];

      if (c8M.markerHolder) {
        q8M.removeChild(c8M.markerHolder);
        c8M.markerHolder = null;
      }
    }

    for (var w8M in this.plugins) {
      C8M = this.plugins[w8M];

      if (C8M.display) {
        if (C8M.initializeChart) {
          C8M.initializeChart(this);
        }
      }
    }

    if (!this.resizeListenerInitialized) {
      s8M = this;
      this.resizeListenerInitialized = !!1;

      R8M = function R8M() {
        k7DD.z71();
        return function (u8M) {
          k7DD.z71();
          s8M.resizeChart();
        };
      };

      this.addDomEventListener(window, "resize", R8M(), !!"1");
    }

    if (x8M.baseline.userLevel) {
      x8M.baseline.userLevel = null;
    }

    this.setResizeTimer(this.resizeDetectMS);
    this.runAppend(W6j, arguments);
  };

  a2M.ChartEngine.prototype.destroy = function () {
    var r8M, d8M, Q8M, J8M;
    this.setResizeTimer(+"0");

    if (this.quoteDriver) {
      this.quoteDriver.die();
    }

    this.styles = {};

    for (var F8M = "0" & 2147483647; F8M < this.eventListeners.length; F8M++) {
      r8M = this.eventListeners[F8M];
      r8M.element.removeEventListener(r8M.event, r8M["function"], r8M.options);
    }

    this.touchAndMouseEventsRegistered = !!"";
    this.eventListeners = [];

    if (this.streamParameters.timeout) {
      clearTimeout(this.streamParameters.timeout);
    }

    d8M = a2M.ChartEngine.registeredContainers;
    Q8M = d8M.indexOf(this.chart.container);

    if (Q8M > -1) {
      d8M.splice(Q8M, 1);
    }

    if (this.slider) {
      J8M = d8M.indexOf(this.slider.slider.chart.container);

      if (J8M > -1) {
        d8M.splice(J8M, 1);
      }
    }
  };

  a2M.ChartEngine.prototype.preAdjustScroll = function (W8M) {
    if (!W8M) {
      W8M = this.chart;
    }

    this.previousAdjust = {
      chart: W8M,
      scroll: W8M.scroll,
      maxTicks: W8M.maxTicks
    };
  };

  a2M.ChartEngine.prototype.postAdjustScroll = function () {
    var A8M;

    if (!this.previousAdjust) {
      return;
    }

    A8M = this.previousAdjust.chart;
    A8M.scroll = this.previousAdjust.scroll + (A8M.maxTicks - this.previousAdjust.maxTicks);

    if (this.displayInitialized) {
      this.draw();
    }
  };

  a2M.ChartEngine.prototype.translateIf = function (e8M) {
    if (this.translationCallback) {
      return this.translationCallback(e8M);
    }

    k7DD.K71();
    return e8M;
  };

  a2M.ChartEngine.prototype.doCleanupDates = function (p8M, O7M) {
    var T41 = k7DD;
    var L6j, Z8M, X8M, b6j, m7M, t7M, K7M;

    if (!p8M || !p8M.length) {
      return;
    }

    for (var B7M = 0; B7M < p8M.length; B7M++) {
      L6j = "[obje";
      L6j += "c";
      L6j += "t Stri";
      L6j += "ng]";
      Z8M = p8M[B7M];
      X8M = Z8M.DT;
      if (!X8M && !Z8M.Date) continue;

      if (Z8M.DT && Object.prototype.toString.call(X8M) == L6j && X8M.length <= 10) {
        X8M = new Date(X8M);
        X8M.setMinutes(X8M.getMinutes() + X8M.getTimezoneOffset());
      } else {
        b6j = "[object ";
        b6j += "D";
        b6j += "ate";
        b6j += "]";
        m7M = !!{};

        if (!Z8M.DT) {
          X8M = a2M.strToDateTime(Z8M.Date);

          if (Z8M.Date.length <= 10) {
            m7M = !!0;
          }
        }

        if (Object.prototype.toString.call(X8M) != b6j) {
          X8M = new Date(X8M);
        }

        if (l2M.Date && this.dataZone && m7M) {
          t7M = new l2M.Date(X8M.getFullYear(), X8M.getMonth(), X8M.getDate(), X8M.getHours(), X8M.getMinutes(), this.dataZone);
          T41.z7L(8);
          var t4r = T41.Q7L(990, 10);
          K7M = X8M.getSeconds() * t4r + X8M.getMilliseconds();
          X8M = new Date(t7M.getTime() + K7M);
        }

        if (a2M.ChartEngine.isDailyInterval(O7M)) {
          T41.z7L(16);
          X8M.setHours(0, 0, 0, T41.W7L("0", 0));
        }
      }

      if (!Z8M.DT) {
        Z8M.Date = a2M.yyyymmddhhmmssmmm(X8M);
      }

      Z8M.DT = X8M;
    }
  };

  a2M.ChartEngine.prototype.doCleanupGaps = function (I7M, D7M, T7M) {
    var U7M, q7M, G7M, m6j, S7M, n7M, x7M, c7M, C7M, j7M, Y7M, y7M, L7M, v7M;

    if (!I7M || !I7M.length) {
      return I7M;
    }

    U7M = this.layout.interval;
    T7M = T7M ? T7M : {};

    if (!D7M) {
      D7M = this.chart;
    }

    if (!a2M.Market || !D7M.market) {
      return I7M;
    }

    k7DD.K71();

    if (!T7M.noCleanupDates) {
      this.doCleanupDates(I7M, U7M);
    }

    q7M = T7M.cleanupGaps;

    if (q7M === ![]) {
      return I7M;
    }

    if (!q7M || q7M === !"") {
      q7M = this.cleanupGaps || q7M;
    }

    k7DD.z7L(100);
    G7M = k7DD.Q7L("gap", q7M);

    if (!q7M) {
      return I7M;
    }

    if (U7M == "tick") {
      return I7M;
    }

    if (U7M == "month" || U7M == "week") {
      m6j = "d";
      m6j += "a";
      m6j += "y";

      if (this.dontRoll) {
        return I7M;
      }

      U7M = m6j;
    }

    S7M = function S7M(k7M) {
      var Q6j;

      if (k7M.DT) {
        Q6j = "[o";
        Q6j += "bject ";
        Q6j += "Dat";
        Q6j += "e]";

        if (Object.prototype.toString.call(k7M.DT) != Q6j) {
          return new Date(k7M.DT);
        }

        return new Date(+k7M.DT);
      }

      return a2M.strToDateTime(k7M.Date);
    };

    function H7M(R7M, b7M) {
      var s7M, f7M, w7M, P7M, o7M;
      s7M = T7M.field;
      f7M = s7M ? x7M[s7M] : x7M;

      if (f7M === undefined) {
        f7M = {};
      }

      w7M = G7M ? null : f7M[Y7M];
      P7M = G7M ? null : f7M.Adj_Close;

      while (+R7M < +b7M) {
        o7M = {
          DT: R7M
        };

        if (s7M) {} else {
          n7M.push(o7M);
          a2M.extend(o7M, {
            Open: w7M,
            High: w7M,
            Low: w7M,
            Close: w7M,
            Volume: 0,
            Adj_Close: P7M
          });
        }

        R7M = j7M.next();
      }
    }

    n7M = [];
    x7M = I7M[0];

    function i7M(E7M, l7M) {
      var M7M, R6j, a7M, h7M;
      M7M = T7M.field;

      if (M7M) {
        R6j = "undefi";
        R6j += "ned";

        if (_typeof(E7M[M7M]) != R6j && typeof l7M[M7M] == "undefined") {
          l7M[M7M] = G7M ? null : E7M[M7M];
        }

        return;
      }

      if (G7M) {
        return;
      }

      a7M = E7M[Y7M];
      h7M = l7M[Y7M];

      if (typeof a7M != "undefined" && typeof h7M == "undefined") {
        a2M.ensureDefaults(l7M, {
          Close: a7M,
          Open: a7M,
          High: a7M,
          Low: a7M,
          Volume: 0,
          Adj_Close: E7M.Adj_Close
        });
      }
    }

    n7M.push(x7M);
    c7M = {
      begin: S7M(x7M),
      interval: U7M,
      periodicity: +"1",
      timeUnit: this.layout.timeUnit
    };
    C7M = new a2M.Market(D7M.market.market_def);
    j7M = C7M.newIterator(c7M);

    if (this.extendedHours && this.extendedHours.filter) {
      j7M.market.enableAllAvailableSessions();
    }

    Y7M = D7M.defaultPlotField;

    for (var g7M = +"0"; g7M < I7M.length; g7M++) {
      if (I7M[g7M][Y7M] !== undefined) break;

      if (I7M[g7M].Value !== undefined) {
        Y7M = "Value";
        break;
      }
    }

    for (var V7M = 1; V7M < I7M.length; V7M++) {
      L7M = I7M[V7M];
      y7M = j7M.next();
      v7M = S7M(L7M);

      if (y7M < v7M) {
        H7M(y7M, v7M);
        y7M = j7M.market._convertFromMarketTZ(j7M.begin, j7M.outZone);
      }

      while (v7M < y7M) {
        if (++V7M == I7M.length) {
          return n7M;
        }

        i7M(x7M, L7M);
        n7M.push(L7M);
        x7M = L7M;
        L7M = I7M[V7M];
        v7M = S7M(L7M);
      }

      if (y7M < v7M) {
        V7M--;
        y7M = j7M.previous();
      } else {
        i7M(x7M, L7M);
        n7M.push(L7M);
        x7M = L7M;
      }
    }

    return n7M;
  };

  a2M.ChartEngine.prototype.getCreatingLibrary = function () {
    return E2M;
  };
};

v4z = function v4z(z7M) {
  var N7M;
  N7M = z7M.CIQ;

  N7M.ChartEngine.Panel = function (r7M, u7M) {
    if (u7M) {
      this.yAxis = u7M;
    } else {
      this.yAxis = new N7M.ChartEngine.YAxis();
    }

    this.name = r7M;
    this.state = {};
    ;
  };

  N7M.extend(N7M.ChartEngine.Panel.prototype, {
    name: null,
    display: null,
    chart: null,
    yAxis: null,
    shareChartXAxis: null,
    top: null,
    bottom: null,
    height: null,
    percent: null,
    displayEdgeIfPadded: !![],
    noDrag: !"1",
    exportable: !![]
  }, !!"1");

  N7M.ChartEngine.prototype.whichPanel = function (F7M) {
    var d7M;

    for (var Q7M in this.panels) {
      d7M = this.panels[Q7M];
      if (d7M.hidden) continue;

      if (F7M >= d7M.top && F7M < d7M.bottom) {
        return d7M;
      }
    }

    k7DD.K71();
    return null;
  };

  N7M.ChartEngine.prototype.panelExists = function (A7M) {
    k7DD.z71();
    var W7M;

    for (var J7M in this.panels) {
      W7M = this.panels[J7M];

      if (W7M.name == A7M) {
        return !!1;
      }
    }

    return ![];
  };

  N7M.ChartEngine.prototype.storePanels = function () {
    var X7M, e7M;

    if (!this.layout) {
      this.layout = {};
    }

    X7M = this.layout;
    k7DD.z71();
    X7M.panels = {};

    for (var Z7M in this.panels) {
      e7M = this.panels[Z7M];
      X7M.panels[e7M.name] = {
        percent: e7M.percent,
        display: e7M.display,
        yAxis: e7M.yAxis
      };
    }
  };

  N7M.ChartEngine.prototype.savePanels = function (p7M) {
    k7DD.K71();
    this.storePanels();

    if (p7M !== !"1") {
      this.changeOccurred("layout");
    }
  };

  N7M.ChartEngine.prototype.privateDeletePanel = function (B0M) {
    var K0M, I0M;
    k7DD.K71();

    for (var L0M in this.layout.studies) {
      K0M = this.layout.studies[L0M];

      if (K0M.panel == B0M.name) {
        this.cleanupRemovedStudy(K0M);
      }
    }

    delete this.panels[B0M.name];

    for (var m0M in this.overlays) {
      if (this.overlays[m0M].panel == B0M.name) {
        if (this.layout.studies) {
          this.cleanupRemovedStudy(this.layout.studies[m0M]);
        }

        delete this.overlays[m0M];
      }
    }

    for (var O0M in this.chart.series) {
      if (this.chart.series[O0M].parameters.panel == B0M.name) {
        this.removeSeries(this.chart.series[O0M], this.chart);
      }
    }

    if (B0M.holder) {
      this.chart.container.removeChild(B0M.holder);

      if (this.getMarkerArray) {
        I0M = this.getMarkerArray("panelName", B0M.name);

        for (var t0M = 0; t0M < I0M.length; t0M++) {
          this.removeFromHolder(I0M[t0M]);
        }
      }
    }

    if (B0M.handle) {
      B0M.handle.remove();
    }

    this.currentPanel = null;
  };

  N7M.ChartEngine.prototype.plotsInPanel = function (j0M) {
    var l6j, x0M, q0M, T0M, U0M;
    l6j = "ob";
    l6j += "j";
    l6j += "e";
    l6j += "ct";
    x0M = [];
    q0M = j0M;

    if (_typeof(j0M) == l6j) {
      q0M = j0M.name;
    }

    for (var n0M in this.layout.studies) {
      T0M = this.layout.studies[n0M];

      if (q0M === T0M.panel) {
        x0M.push(T0M);
      }
    }

    for (var y0M in this.chart.seriesRenderers) {
      U0M = this.chart.seriesRenderers[y0M];

      if (q0M === U0M.params.panel) {
        x0M.push(U0M);
      }
    }

    return x0M;
  };

  N7M.ChartEngine.prototype.checkForEmptyPanel = function (Y0M, g0M, V0M) {
    var v0M, G0M;

    if (!Y0M) {
      return !1;
    }

    k7DD.K71();
    v0M = Y0M;

    if (_typeof(Y0M) == "object") {
      v0M = Y0M.name;
    }

    if (v0M === this.chart.name) {
      return !{};
    }

    if (!V0M) {
      V0M = [];
    } else if (!(V0M instanceof Array)) {
      V0M = [V0M];
    }

    G0M = this.plotsInPanel(Y0M);

    for (var D0M = 0; D0M < G0M.length; D0M++) {
      if (V0M.indexOf(G0M[D0M]) == -1) {
        return !"1";
      }
    }

    if (!g0M) {
      this.panelClose(this.panels[v0M]);
    }

    return !!{};
  };

  N7M.ChartEngine.prototype.panelClose = function (S0M) {
    var c0M;

    if (!S0M) {
      return;
    }

    if (this.runPrepend("panelClose", arguments)) {
      return;
    }

    this.cancelTouchSingleClick = !!1;
    N7M.ChartEngine.drawingLine = !"1";

    if (S0M.soloing) {
      this.panelSolo(S0M);
    }

    if (this.charts[S0M.name]) {
      for (var C0M in this.panels) {
        c0M = this.panels[C0M];

        if (c0M.chart.name == S0M.name) {
          this.privateDeletePanel(c0M);
        }
      }

      delete this.charts[S0M.name];
    } else {
      this.privateDeletePanel(S0M);
    }

    if (!this.currentlyImporting) {
      this.showCrosshairs();
      this.resetDynamicYAxis({
        noRecalculate: !![]
      });
      this.calculateYAxisPositions();
      this.draw();
      this.savePanels();
    }

    this.userPointerDown = this.grabbingScreen = !"1";

    if (this.openDialog) {
      this.openDialog = "";
    }

    this.runAppend("panelClose", arguments);
  };

  N7M.ChartEngine.prototype.deleteAllPanels = function () {
    var H0M;

    for (var i0M in this.panels) {
      H0M = this.panels[i0M];
      this.privateDeletePanel(H0M);
    }

    this.layout.panels = {};
    this.panels = {};
  };

  N7M.ChartEngine.prototype.panelUp = function (f0M) {
    k7DD.K71();
    var w0M, s0M, k0M, R0M;
    this.cancelTouchSingleClick = !!{};
    N7M.ChartEngine.drawingLine = !{};
    this.showCrosshairs();
    w0M = {};
    s0M = 0;

    for (k0M in this.panels) {
      if (k0M == f0M.name) break;
      s0M++;
    }

    if (!s0M) {
      return;
    }

    R0M = 0;

    for (k0M in this.panels) {
      if (R0M == s0M - +"1") {
        w0M[f0M.name] = f0M;
      }

      if (k0M == f0M.name) continue;
      w0M[k0M] = this.panels[k0M];
      R0M++;
    }

    this.panels = w0M;
    this.adjustPanelPositions();
    this.draw();
    this.savePanels();
  };

  N7M.ChartEngine.prototype.panelDown = function (P0M) {
    var b0M, M0M, o0M, E0M, a0M;
    this.cancelTouchSingleClick = !"";
    N7M.ChartEngine.drawingLine = !"1";
    this.showCrosshairs();
    b0M = {};
    M0M = +"0";

    for (o0M in this.panels) {
      if (o0M == P0M.name) break;
      M0M++;
    }

    E0M = 0;

    for (o0M in this.panels) {
      E0M++;
    }

    if (M0M == E0M - +"1") {
      return;
    }

    a0M = 0;

    for (o0M in this.panels) {
      if (o0M == P0M.name) {
        a0M++;
        continue;
      }

      b0M[o0M] = this.panels[o0M];

      if (a0M == M0M + 1) {
        b0M[P0M.name] = P0M;
      }

      a0M++;
    }

    this.panels = b0M;
    this.adjustPanelPositions();
    this.draw();
    this.savePanels();
  };

  N7M.ChartEngine.prototype.panelSolo = function (l0M) {
    k7DD.K71();
    var N0M, h0M, z0M, r6j;
    this.cancelTouchSingleClick = !"";
    N7M.ChartEngine.drawingLine = !"1";
    this.showCrosshairs();
    N0M = !0;

    if (l0M.soloing) {
      N0M = !{};
      l0M.soloing = !{};
      l0M.solo.classList.remove("stx_solo_lit");
      l0M.percent = l0M.oldPercent;

      if (l0M.name != "chart") {
        if (this.soloPanelToFullScreen) {
          if (l0M.percent == 1) {
            for (h0M in this.panels) {
              z0M = this.panels[h0M];

              if (z0M != l0M) {
                l0M.percent -= z0M.percent;
              }
            }
          }
        } else {
          this.chart.panel.percent = this.chart.panel.oldPercent;
        }
      }

      if (this.soloPanelToFullScreen) {
        this.xAxisAsFooter = this.chart.panel.oldXAxisAsFooter;
      }
    } else {
      r6j = "stx_";
      r6j += "solo_";
      r6j += "li";
      r6j += "t";
      l0M.soloing = !![];
      l0M.solo.classList.add(r6j);
      l0M.oldPercent = l0M.percent;
      this.chart.panel.oldXAxisAsFooter = this.xAxisAsFooter;

      if (l0M.name != "chart") {
        if (this.soloPanelToFullScreen) {
          this.xAxisAsFooter = !!{};
        } else {
          this.chart.panel.oldPercent = this.chart.panel.percent;
          k7DD.i7L(54);
          var d4r = k7DD.W7L(7, 3, 5);
          l0M.percent = d4r - this.chart.panel.percent;
        }
      }
    }

    for (h0M in this.panels) {
      this.panels[h0M].hidden = N0M;
    }

    if (!this.soloPanelToFullScreen) {
      this.chart.panel.hidden = !{};
    }

    l0M.hidden = ![];
    this.resetDynamicYAxis({
      noRecalculate: !!{}
    });
    this.calculateYAxisPositions();
    this.draw();
    this.savePanels();
  };

  N7M.ChartEngine.prototype.calculatePanelPercent = function (u0M) {
    var r0M;
    r0M = u0M.bottom - u0M.top;
    u0M.percent = r0M / this.chart.canvasHeight;
  };

  N7M.ChartEngine.prototype.resizePanels = function () {
    var e41 = k7DD;
    var W0M, J0M, F0M, d0M, e0M, Q0M;

    if (!N7M.ChartEngine.resizingPanel) {
      return;
    }

    e0M = N7M.ChartEngine.crosshairY > this.resolveY(N7M.ChartEngine.resizingPanel.top);

    for (var A0M in this.panels) {
      if (this.panels[A0M] == N7M.ChartEngine.resizingPanel) break;
      if (this.panels[A0M].hidden) continue;
      W0M = this.panels[A0M];
    }

    Q0M = this.backOutY(N7M.ChartEngine.crosshairY);

    if (e0M) {
      F0M = N7M.ChartEngine.resizingPanel.yaxisLHS.concat(N7M.ChartEngine.resizingPanel.yaxisRHS);

      for (d0M = 0; d0M < F0M.length; d0M++) {
        e41.z7L(8);
        var v4r = e41.W7L(3, 7);
        J0M = F0M[d0M].initialMarginTop + F0M[d0M].initialMarginBottom + v4r;

        if (Q0M > F0M[d0M].bottom - J0M) {
          Q0M = F0M[d0M].bottom - J0M;
        }
      }
    } else {
      F0M = W0M.yaxisLHS.concat(W0M.yaxisRHS);

      for (d0M = 0; d0M < F0M.length; d0M++) {
        e41.i7L(25);
        var A4r = e41.W7L(1, 938151101, 104239011);
        J0M = F0M[d0M].initialMarginTop + F0M[d0M].initialMarginBottom + ("10" >> A4r);

        if (Q0M < F0M[d0M].top + J0M) {
          Q0M = F0M[d0M].top + J0M;
        }
      }
    }

    N7M.ChartEngine.crosshairY = this.resolveY(Q0M);
    W0M.bottom = Q0M;
    N7M.ChartEngine.resizingPanel.top = Q0M;
    this.calculatePanelPercent(W0M);
    this.calculatePanelPercent(N7M.ChartEngine.resizingPanel);
    this.adjustPanelPositions();
    this.draw();
    this.savePanels();
  };

  N7M.ChartEngine.prototype.isPanelAboveChart = function (Z0M) {
    for (var X0M in this.panels) {
      if (X0M == "chart") {
        return ![];
      }

      if (X0M == Z0M.name) {
        return !!1;
      }
    }

    return ![];
  };

  N7M.ChartEngine.prototype.adjustPanelPositions = function () {
    var d41 = k7DD;
    var U5j, B5j, K6j, U5M, D5M, n5M, y5M, O5M, I5M, K5M, p0M, L5M, H6j, O6j, k6j, u6j, X6j, V5M, Y6j, B5M, o5j, Z6j, W0j, L0j, b0j, x5M, G5M, v5M, c5j;
    U5j = "adjus";
    U5j += "tPanelPositions";
    B5j = "stx-s";
    B5j += "h";
    B5j += "ow";
    K6j = "ad";
    K6j += "justPanelPositions";
    var m5M = this.chart,
        t5M = this.panels;

    if (m5M.tempCanvas) {
      N7M.clearCanvas(m5M.tempCanvas, this);
    }

    if (this.runPrepend(K6j, arguments)) {
      return;
    }

    d41.z7L(23);
    U5M = d41.W7L(0, "0");
    D5M = m5M.canvasHeight;
    n5M = !!0;
    y5M = 0;
    d41.z71();
    O5M = 0;
    I5M = !!"";

    for (K5M in t5M) {
      p0M = t5M[K5M];

      if (isNaN(p0M.percent) || p0M.percent <= 0) {
        p0M.percent = 0.05;
      }

      if (p0M.hidden) continue;
      y5M += p0M.percent;
      O5M++;

      if (p0M.soloing) {
        I5M = !![];
      }
    }

    for (K5M in t5M) {
      L5M = 0;
      p0M = t5M[K5M];

      if (p0M.hidden) {
        if (p0M.markerHolder) {
          p0M.markerHolder.style.display = "none";
        }

        continue;
      }

      if (this.manageTouchAndMouse) {
        if (p0M.up) {
          if (!n5M) {
            n5M = !!{};
            p0M.up.classList.remove("stx-show");
          } else {
            if (this.displayIconsUpDown) {
              p0M.up.classList.add("stx-show");
            }
          }
        }

        if (p0M.solo) {
          if (I5M) {
            if (p0M.soloing && this.displayIconsSolo) {
              p0M.solo.classList.add("stx-show");
            } else {
              p0M.solo.classList.remove("stx-show");
            }
          } else if (O5M == 1) {
            p0M.solo.classList.remove("stx-show");
          } else if (O5M == 2 && !this.soloPanelToFullScreen) {
            H6j = "st";
            H6j += "x-show";
            p0M.solo.classList.remove(H6j);
          } else {
            O6j = "stx-sho";
            O6j += "w";

            if (this.displayIconsSolo) {
              p0M.solo.classList.add(O6j);
            }
          }
        }

        if (p0M.down) {
          if (O5M == 1) {
            k6j = "st";
            k6j += "x";
            k6j += "-show";
            p0M.down.classList.remove(k6j);
          } else {
            if (this.displayIconsUpDown) {
              p0M.down.classList.add("stx-show");
            }
          }
        }

        if (p0M.edit) {
          u6j = "s";
          u6j += "tx-s";
          u6j += "ho";
          u6j += "w";

          if (p0M.editFunction) {
            p0M.edit.classList.add("stx-show");
          } else {
            p0M.edit.classList.remove(u6j);
          }
        }

        if (p0M.close) {
          X6j = "s";
          X6j += "t";
          X6j += "x-sho";
          X6j += "w";

          if (this.displayIconsClose) {
            p0M.close.classList.add(X6j);
          } else {
            p0M.close.classList.remove("stx-show");
          }
        }
      }

      p0M.percent = p0M.percent / y5M;
      p0M.top = U5M;
      p0M.bottom = p0M.top + D5M * p0M.percent;
      p0M.height = p0M.bottom - p0M.top;

      if (p0M.chart.name == p0M.name) {
        p0M.chart.top = p0M.top;
        p0M.chart.bottom = p0M.bottom;
        p0M.chart.height = p0M.height;
      }

      U5M = p0M.bottom;

      if (p0M.yaxisLHS) {
        V5M = p0M.yaxisLHS.concat(p0M.yaxisRHS);

        for (var q5M = 0; q5M < V5M.length; q5M++) {
          Y6j = "n";
          Y6j += "one";
          B5M = V5M[q5M];

          if (B5M.zoom && B5M.height > 0) {
            L5M = B5M.zoom / B5M.height;
          }

          this.adjustYAxisHeightOffset(p0M, B5M);
          B5M.height = B5M.bottom - B5M.top;

          if (L5M) {
            B5M.scroll *= L5M * B5M.height / B5M.zoom;
            B5M.zoom = L5M * B5M.height;

            if (B5M.zoom > B5M.height) {
              B5M.zoom = 0;
              B5M.scroll = +"0";
            }
          }

          if (!B5M.high && B5M.high !== 0) {
            B5M.high = 100;
            B5M.low = 0;
            B5M.shadow = 100;
          }

          B5M.multiplier = B5M.height / B5M.shadow;

          if (B5M.position === Y6j) {
            this.calculateYAxisMargins(B5M);
          }
        }
      }

      if (p0M.holder) {
        o5j = "0";
        o5j += "p";
        o5j += "x";
        Z6j = "p";
        Z6j += "x";
        p0M.holder.style.right = "0px";
        p0M.holder.style.top = p0M.top + Z6j;
        p0M.holder.style.left = "0px";
        p0M.holder.style.height = p0M.height + "px";
        p0M.subholder.style.left = p0M.left + "px";
        p0M.subholder.style.width = p0M.width + "px";
        p0M.subholder.style.top = o5j;

        if (p0M.yAxis.height >= 0) {
          p0M.subholder.style.height = p0M.yAxis.height + "px";
        }
      }
    }

    if (K5M && t5M[K5M].down) {
      t5M[K5M].down.classList.remove(B5j);
    }

    if (this.manageTouchAndMouse && O5M == +"2" && !I5M && m5M.panel.solo) {
      m5M.panel.solo.classList.add("stx-show");
    }

    if (m5M.panel) {
      W0j = -1862605035;
      L0j = -1746882716;
      b0j = +"2";

      for (var Q0j = 1; d41.f6U(Q0j.toString(), Q0j.toString().length, "14907" & 2147483647) !== W0j; Q0j++) {
        b0j += 2;
      }

      if (d41.f6U(b0j.toString(), b0j.toString().length, 31257) !== L0j) {}

      if (I5M && this.soloPanelToFullScreen) {
        x5M = m5M.canvasHeight - p0M.yAxis.bottom + ("12" & 2147483647);
      } else {
        d41.i7L(109);
        var x4r = d41.W7L(2, 363, 3, 15, 19);
        x5M = m5M.canvasHeight - m5M.panel.yAxis.bottom + x4r;
      }

      G5M = this.controls;
      var _G5M = G5M,
          Y5M = _G5M.chartControls,
          j5M = _G5M.home,
          T5M = _G5M.notificationTray;
      v5M = this.width - m5M.panel.right;

      if (Y5M) {
        d41.i7L(8);
        Y5M.style.bottom = d41.W7L(x5M, "px");
      }

      if (j5M) {
        c5j = "p";
        c5j += "x";
        d41.i7L(8);
        j5M.style.bottom = d41.Q7L(x5M, c5j);
        d41.z7L(8);
        j5M.style.marginRight = d41.Q7L(v5M, "px");
      }

      if (T5M) {
        d41.z7L(8);
        T5M.style.bottom = d41.Q7L(x5M, "px");
        d41.i7L(8);
        T5M.style.marginRight = d41.W7L(v5M, "px");
      }
    }

    this.clearPixelCache();

    if (this.drawingObjects.length) {
      this.adjustDrawings();
    }

    this.runAppend(U5j, arguments);
  };

  N7M.ChartEngine.prototype.createPanel = function (s5M, c5M, g5M, C5M, R5M, o5M) {
    var t41 = k7DD;
    var S5j, S5M, i5M, f5M, H5M, k5M;
    S5j = "createPane";
    S5j += "l";

    if (this.runPrepend("createPanel", arguments)) {
      return;
    }

    if (!C5M) {
      C5M = "chart";
    }

    S5M = this.chart.canvasHeight;

    if (!g5M) {
      t41.i7L(18);
      g5M = t41.Q7L(0.2, S5M);
    }

    t41.z71();

    if (g5M > S5M) {
      t41.i7L(127);
      g5M = t41.Q7L("0.5", S5M, 1);
    }

    t41.z7L(35);
    i5M = t41.Q7L(g5M, S5M);
    t41.z7L(1);
    f5M = t41.W7L(1, i5M);
    H5M = !1;

    for (var w5M in this.panels) {
      k5M = this.panels[w5M];
      k5M.percent *= f5M;

      if (k5M.soloing) {
        H5M = !!{};
      }
    }

    this.stackPanel(s5M, c5M, i5M, C5M, R5M);
    this.panels[c5M].hidden = H5M;
    this.panels[c5M].exportable = !o5M;
    this.adjustPanelPositions();
    this.savePanels(!{});
    this.runAppend(S5j, arguments);
    return this.panels[c5M];
  };

  N7M.ChartEngine.prototype.modifyPanel = function (z5M, X5M) {
    var b5M, r5M, h5M, d5M, a5M, J5M, W5M, A5M;
    b5M = z5M.name;
    var Q5M = this.layout.studies;
    var E5M = this.chart.series;

    var _ref = X5M || {},
        P5M = _ref.name,
        u5M = _ref.display,
        M5M = _ref.yAxis;

    if (!P5M) {
      P5M = N7M.uniqueID();
    }

    if (!u5M) {
      u5M = P5M;
    }

    if (!M5M) {
      M5M = z5M.yAxis;
      M5M.name = P5M;
    }

    k7DD.z71();
    r5M = {};

    for (var l5M in this.panels) {
      if (l5M === z5M.name) {
        h5M = this.panels[l5M];
        h5M.name = P5M;
        h5M.display = u5M;
        h5M.yAxis = M5M;
        z5M = r5M[P5M] = h5M;

        if (this.moveMarkers && b5M !== P5M) {
          this.moveMarkers(b5M, P5M);
        }
      } else {
        r5M[l5M] = this.panels[l5M];
      }
    }

    this.panels = r5M;
    d5M = !{};

    for (var e5M in Q5M) {
      a5M = Q5M[e5M];

      if (a5M.panel === b5M) {
        a5M.panel = P5M;

        if (a5M.parameters && a5M.parameters.panelName) {
          d5M = !!"1";
          a5M.parameters.panelName = P5M;
        }
      }
    }

    for (var N5M in E5M) {
      if (E5M[N5M].parameters.panel === b5M) {
        d5M = !!"1";
        J5M = {
          panel: P5M
        };

        if (E5M[N5M].parameters.yAxis && E5M[N5M].parameters.yAxis.name === b5M) {
          J5M.yAxis = M5M;
        }

        this.modifySeries(N5M, J5M, !0);
      }
    }

    if (d5M) {
      this.changeOccurred("layout");
    }

    W5M = ![];

    for (var F5M = 0; F5M < this.drawingObjects.length; F5M++) {
      A5M = this.drawingObjects[F5M];

      if (b5M === A5M.panelName) {
        A5M.panelName = P5M;
        W5M = !!{};
      }
    }

    if (W5M) {
      this.changeOccurred("vector");
    }

    this.calculateYAxisPositions();
  };

  k7DD.z71();

  N7M.ChartEngine.prototype.setPanelHeight = function (Z5M, p5M) {
    var A41 = k7DD;
    A41.z71();
    var B9M, K9M, O9M, I9M;

    if (!p5M) {
      return;
    }

    if (Object.values(this.panels).slice(-("1" >> 2093551584))[0] === Z5M) {
      p5M += this.xaxisHeight;
    }

    var m9M = this.chart.canvasHeight;
    var t9M = Z5M.percent;
    A41.i7L(35);
    B9M = A41.W7L(p5M, m9M);
    A41.z7L(1);
    K9M = A41.Q7L(1, t9M);
    A41.z7L(1);
    O9M = A41.W7L(1, B9M);
    A41.z7L(35);
    I9M = A41.Q7L(K9M, O9M);
    Object.values(this.panels).forEach(function (L9M) {
      A41.z71();
      L9M.percent /= I9M;
    });
    Z5M.percent = B9M;
    this.adjustPanelPositions();
    this.savePanels();
  };

  N7M.ChartEngine.prototype.electNewPanelOwner = function (x9M, v9M) {
    var T9M, U9M, j9M, q9M, y9M, n9M, D9M, Y9M;

    if (typeof x9M == "string") {
      x9M = this.panels[x9M];
    }

    function G9M(g9M) {
      k7DD.z71();
      return g9M.name != U9M.name;
    }

    U9M = x9M.yAxis;

    if (x9M && x9M != this.chart.panel) {
      j9M = x9M.yAxis;
      q9M = j9M.studies[0];

      if (!q9M || q9M == U9M.name) {
        q9M = j9M.renderers[+"0"];
      }

      if (!q9M || q9M == U9M.name) {
        k7DD.i7L(19);
        q9M = j9M.studies[k7DD.Q7L("1", 2147483647)];
      }

      if (!q9M) {
        q9M = j9M.renderers[1];
      }

      if (v9M) {
        j9M = x9M.yAxis = v9M;
        T9M = v9M.name;
      } else if (!q9M) {
        if (x9M.yaxisLHS) {
          y9M = x9M.yaxisRHS.concat(x9M.yaxisLHS).filter(G9M);
          n9M = y9M[0];

          for (var V9M = 0; V9M < y9M.length; V9M++) {
            if (!y9M[V9M].position) {
              n9M = y9M[V9M];
              break;
            }
          }

          if (n9M) {
            j9M = x9M.yAxis = n9M;
            T9M = n9M.studies[0] || n9M.renderers[0];
          }
        }
      } else {
        j9M = this.addYAxis(x9M, new N7M.ChartEngine.YAxis({
          name: q9M,
          position: j9M.position
        }));
        j9M.renderers = x9M.yAxis.renderers;
        j9M.studies = x9M.yAxis.studies;
        T9M = q9M;
      }

      if (T9M) {
        q9M = T9M;

        if (U9M.name != x9M.name) {
          q9M = x9M.name;
        }

        Y9M = this.layout.studies;

        if (Y9M && Y9M[T9M]) {
          D9M = Y9M[T9M].inputs.display;
        }

        this.modifyPanel(x9M, {
          name: q9M,
          display: D9M || T9M,
          yAxis: j9M
        });
        this.deleteYAxisIfUnused(x9M, U9M);
        this.calculateYAxisMargins(this.panels[q9M].yAxis);
      } else {
        this.checkForEmptyPanel(x9M);
      }
    }

    return T9M;
  };

  N7M.ChartEngine.prototype.configurePanelControls = function (S9M) {
    var h5j, g5j, J5j, c9M, i9M, C9M;
    h5j = ".st";
    h5j += "x-ico-do";
    h5j += "wn";
    g5j = ".stx";
    g5j += "-ico-up";
    J5j = "st";
    J5j += "x";
    J5j += "-";
    J5j += "show";
    c9M = S9M.icons;

    if (!c9M) {
      return;
    }

    i9M = S9M.name == S9M.chart.name;
    c9M.classList.add(J5j);
    S9M.title = c9M.querySelector(".stx-panel-title");
    S9M.up = c9M.querySelector(g5j);

    if (S9M.up) {
      S9M.up = S9M.up.parentNode;
    }

    S9M.solo = c9M.querySelector(".stx-ico-focus");

    if (S9M.solo) {
      S9M.solo = S9M.solo.parentNode;
    }

    S9M.down = c9M.querySelector(h5j);

    if (S9M.down) {
      S9M.down = S9M.down.parentNode;
    }

    S9M.edit = c9M.querySelector(".stx-ico-edit");

    if (S9M.edit) {
      S9M.edit = S9M.edit.parentNode;
    }

    S9M.close = c9M.querySelector(".stx-ico-close");

    if (S9M.close) {
      S9M.close = S9M.close.parentNode;
    }

    if (S9M.title) {
      S9M.title.innerHTML = "";

      if (S9M.display) {
        S9M.title.appendChild(document.createTextNode(S9M.display));
      }

      if (i9M) {
        S9M.title.classList.add("chart-title");
        c9M.classList.add("stx-chart-panel");
      }
    }

    if (!N7M.touchDevice || N7M.isSurface) {
      this.makeModal(c9M);
    }

    if (S9M.handle) {
      if (!N7M.touchDevice || N7M.isSurface) {
        S9M.handle.onmouseover = function (H9M) {
          k7DD.K71();
          return function () {
            k7DD.K71();
            H9M.hideCrosshairs();
          };
        }(this);
      }

      if (!N7M.touchDevice || N7M.isSurface) {
        S9M.handle.onmouseout = function (k9M) {
          k7DD.K71();
          return function () {
            k9M.showCrosshairs();
          };
        }(this);
      }

      C9M = function C9M(f9M, w9M) {
        return function (s9M) {
          if (N7M.ChartEngine.resizingPanel || f9M.openDialog !== "") {
            return;
          }

          f9M.grabHandle(w9M);
        };
      };

      if (N7M.isSurface) {
        S9M.handle.onpointerdown = C9M(this, S9M);
      } else {
        S9M.handle.onmousedown = C9M(this, S9M);
      }

      if (N7M.touchDevice) {
        S9M.handle.ontouchstart = C9M(this, S9M);
      }
    }

    if (S9M.up) {
      N7M.safeClickTouch(S9M.up, function (R9M, o9M) {
        k7DD.z71();
        return function () {
          R9M.panelUp(o9M);
        };
      }(this, S9M));
    }

    if (S9M.down) {
      N7M.safeClickTouch(S9M.down, function (P9M, b9M) {
        return function () {
          k7DD.z71();
          P9M.panelDown(b9M);
        };
      }(this, S9M));
    }

    if (S9M.solo) {
      N7M.safeClickTouch(S9M.solo, function (M9M, a9M) {
        k7DD.z71();
        return function () {
          M9M.panelSolo(a9M);
        };
      }(this, S9M));
    }

    if (S9M.close) {
      if (S9M.name == "chart") {
        S9M.close.style.display = "none";
        ;
      } else {
        N7M.safeClickTouch(S9M.close, function (E9M, l9M) {
          return function () {
            E9M.panelClose(l9M);
          };
        }(this, S9M));
      }
    }
  };

  N7M.ChartEngine.prototype.stackPanel = function (r9M, d9M, J9M, u9M, F9M) {
    var e5j, y5j, j5j, i5j, N9M, z9M, h9M, Q9M;
    e5j = "stx-";
    e5j += "panel-study";
    y5j = "stx-";
    y5j += "panel-";
    y5j += "cha";
    y5j += "rt";
    j5j = "s";
    j5j += "t";
    j5j += "x-subho";
    j5j += "lder";
    i5j = "d";
    i5j += "i";
    i5j += "v";

    if (this.runPrepend("stackPanel", arguments)) {
      return;
    }

    if (!u9M) {
      u9M = "chart";
    }

    N9M = this.charts[u9M];
    k7DD.i7L(100);
    z9M = k7DD.W7L(u9M, d9M);

    if (z9M) {
      r9M = N9M.symbol;

      if (N9M.symbolDisplay) {
        r9M = N9M.symbolDisplay;
      }

      if (!F9M) {
        F9M = N9M.yAxis;
      }
    }

    h9M = this.panels[d9M] = new N7M.ChartEngine.Panel(d9M, F9M);

    if (!z9M && N9M.yAxis && h9M.yAxis.position == N9M.yAxis.position) {
      h9M.yAxis.width = N9M.yAxis.width;
      ;
    }

    if (z9M && !N9M.panel) {
      N9M.panel = h9M;
    }

    h9M.percent = J9M;
    h9M.chart = N9M;
    h9M.display = r9M;
    h9M.holder = N7M.newChild(this.container, i5j, "stx-holder");
    h9M.subholder = N7M.newChild(h9M.holder, "div", j5j);
    h9M.subholder.style.zIndex = 1;
    h9M.holder.panel = h9M;
    Q9M = z9M ? y5j : e5j;
    h9M.holder.classList.add(Q9M);

    if (this.controls.handleTemplate && this.manageTouchAndMouse) {
      h9M.handle = this.controls.handleTemplate.cloneNode(!!{});
      this.container.appendChild(h9M.handle);
      h9M.handle.panel = h9M;
    }

    if (this.controls.iconsTemplate) {
      h9M.icons = this.controls.iconsTemplate.cloneNode(!!1);
      h9M.subholder.appendChild(h9M.icons);
      this.configurePanelControls(h9M);
    }

    if (!this.currentlyImporting) {
      this.resizeCanvas();
    }

    this.runAppend("stackPanel", arguments);
  };

  N7M.ChartEngine.prototype.setPanelEdit = function (W9M, A9M) {
    k7DD.K71();
    W9M.editFunction = A9M;

    if (W9M.edit) {
      N7M.safeClickTouch(W9M.edit, A9M);
    }

    this.adjustPanelPositions();
  };

  N7M.ChartEngine.prototype.drawPanels = function () {
    var B4M, p5j, e9M, m4M, C5j, w5j, X9M, z5j, Z9M, t4M, K4M, p9M, q5j;

    if (this.runPrepend("drawPanels", arguments)) {
      return;
    }

    B4M = !1;
    k7DD.z71();

    for (var O4M in this.panels) {
      p5j = "stx_pane";
      p5j += "l_";
      p5j += "border";
      e9M = this.panels[O4M];
      e9M.state = {};
      m4M = this.translateIf(e9M.display);

      if (e9M.title && e9M.title.textContent != m4M) {
        e9M.title.innerHTML = "";
        e9M.title.appendChild(document.createTextNode(m4M));
      }

      if (e9M.icons) {
        e9M.icons.classList.add("stx-show");
      }

      if (e9M.hidden) {
        if (e9M.icons) {
          e9M.icons.classList.remove("stx-show");
        }

        if (e9M.handle) {
          e9M.handle.style.display = "none";
        }

        e9M.holder.style.display = "none";
        continue;
      } else {
        if (e9M.name != "chart") {
          C5j = "n";
          C5j += "o";
          C5j += "n";
          C5j += "e";
          w5j = "n";
          w5j += "on";
          w5j += "e";
          X9M = this.manageTouchAndMouse;

          if (e9M.up) {
            e9M.up.style.display = this.displayIconsUpDown && X9M ? "" : w5j;
          }

          if (e9M.down) {
            e9M.down.style.display = this.displayIconsUpDown && X9M ? "" : "none";
          }

          if (e9M.solo) {
            e9M.solo.style.display = this.displayIconsSolo && X9M ? "" : C5j;
          }

          if (e9M.close) {
            e9M.close.style.display = this.displayIconsClose && X9M ? "" : "none";
          }

          if (e9M.edit) {
            e9M.edit.style.display = e9M.editFunction && X9M ? "" : "none";
          }
        }

        e9M.holder.style.display = "block";
      }

      if (e9M.displayEdgeIfPadded) {
        z5j = "s";
        z5j += "tx_grid_bord";
        z5j += "er";
        Z9M = Math.round(e9M.left) + 0.5;
        t4M = e9M.yAxis.top - 0.5;
        K4M = e9M.yAxis.bottom + ("0.5" - 0);

        if (e9M.yaxisCalculatedPaddingLeft && !e9M.yaxisTotalWidthLeft) {
          this.plotLine(Z9M, Z9M, t4M, K4M, this.canvasStyle(z5j), "segment", this.chart.context, ![], {
            lineWidth: 1
          });
        }

        Z9M = Math.round(e9M.right) + +"0.5";

        if (e9M.yaxisCalculatedPaddingRight && !e9M.yaxisTotalWidthRight) {
          this.plotLine(Z9M, Z9M, t4M, K4M, this.canvasStyle("stx_grid_border"), "segment", this.chart.context, ![], {
            lineWidth: 1
          });
        }
      }

      if (!B4M) {
        if (e9M.handle) {
          e9M.handle.style.display = "none";
        }

        B4M = !!"1";
        continue;
      }

      p9M = e9M.top;
      p9M = Math.round(p9M) + 0.5;
      this.plotLine(e9M.left - ("0.5" - 0), e9M.right + 0.5, p9M, p9M, this.canvasStyle(p5j), "segment", this.chart.context, !1, {});

      if (e9M.handle) {
        if (!this.displayPanelResize) {
          q5j = "n";
          q5j += "on";
          q5j += "e";
          e9M.handle.style.display = q5j;
        } else {
          e9M.handle.style.display = "";
        }

        k7DD.z7L(33);
        var s4r = k7DD.W7L(38, 4, 10);
        e9M.handle.style.top = p9M - e9M.handle.offsetHeight / s4r + "px";
        ;
      }
    }

    this.runAppend("drawPanels", arguments);
  };
};

D4z = function D4z(L4M) {
  var I4M;
  I4M = L4M.CIQ;

  I4M.ChartEngine.isDailyInterval = function (x4M) {
    var F5j;
    F5j = "d";
    k7DD.K71();
    F5j += "a";
    F5j += "y";

    if (x4M == F5j) {
      return !![];
    }

    if (x4M == "week") {
      return !!{};
    }

    if (x4M == "month") {
      return !0;
    }

    return !{};
  };

  I4M.ChartEngine.prototype.setPeriodicity = function (R4M, V4M) {
    var U91 = k7DD;
    var d5j, I5j, C4M, E4M, o4M, l4M, t5j, j4M, T4M, n4M, f4M, w4M, y4M, g4M, s4M, z4M, u4M, c4M;
    d5j = "se";
    d5j += "tPeriodicity";
    I5j = "f";
    I5j += "unct";
    I5j += "io";
    I5j += "n";
    U91.z71();

    if (this.runPrepend("setPeriodicity", arguments)) {
      return;
    }

    if (_typeof(arguments[0]) !== "object") {
      R4M = {
        period: arguments[0],
        interval: arguments[+"1"],
        timeUnit: arguments[2]
      };
      U91.i7L(37);
      var n4r = U91.Q7L(18, 17);
      V4M = arguments[arguments.length - n4r];

      if (arguments.length === 3) {
        R4M.timeUnit = undefined;
      }
    }

    function H4M() {
      U91.K71();
      o4M.dispatch("periodicity", l4M);

      if (V4M) {
        V4M(null);
      }
    }

    var _R4M = R4M,
        Y4M = _R4M.period,
        v4M = _R4M.interval,
        D4M = _R4M.timeUnit;

    if (_typeof(V4M) !== I5j) {
      V4M = null;
    }

    var _I4M$cleanPeriodicity = I4M.cleanPeriodicity(Y4M, v4M, D4M);

    Y4M = _I4M$cleanPeriodicity.period;
    v4M = _I4M$cleanPeriodicity.interval;
    D4M = _I4M$cleanPeriodicity.timeUnit;
    var q4M = this.layout;
    q4M.setSpan = {};
    q4M.range = {};
    this.chart.inflectionPoint = null;
    C4M = ![];

    if (this.chart.symbol) {
      C4M = this.needDifferentData({
        period: Y4M,
        interval: v4M,
        timeUnit: D4M
      });
    }

    var i4M = q4M.candleWidth,
        b4M = q4M.periodicity,
        M4M = q4M.interval,
        a4M = q4M.timeUnit;
    E4M = {
      prvPeriodicity: b4M,
      prvInterval: M4M,
      prvTimeUnit: a4M
    };
    q4M.periodicity = Y4M;
    q4M.interval = v4M;
    q4M.timeUnit = D4M;
    o4M = this;
    l4M = {
      stx: o4M,
      differentData: C4M,
      prevPeriodicity: E4M
    };

    if (C4M) {
      t5j = "lay";
      t5j += "o";
      t5j += "u";
      t5j += "t";
      this.changeOccurred(t5j);
      this.clearCurrentMarketData();

      if (this.quoteDriver) {
        for (var h4M in this.charts) {
          j4M = this.charts[h4M];

          if (j4M.symbol) {
            if (this.displayInitialized) {
              this.quoteDriver.newChart({
                symbol: j4M.symbol,
                symbolObject: j4M.symbolObject,
                chart: j4M
              }, H4M);
            } else {
              this.loadChart(j4M.symbol, {
                chart: j4M
              }, H4M);
            }
          }
        }
      } else if (this.dataCallback) {
        this.dataCallback();
        H4M();
      } else {
        console.log("cannot change periodicity because neither dataCallback or quoteDriver are set");
      }

      this.home();
      return;
    }

    for (var N4M in this.charts) {
      T4M = this.charts[N4M];
      var _T4M = T4M,
          U4M = _T4M.dataSegment,
          G4M = _T4M.dataSet,
          k4M = _T4M.maxTicks,
          P4M = _T4M.scroll;
      n4M = U4M ? U4M.length : 0;
      f4M = G4M ? G4M.length : 0;
      w4M = void 0;
      y4M = Math.round(T4M.maxTicks / 2);
      this.setCandleWidth(i4M, T4M);
      g4M = !"";
      s4M = ![];

      if (P4M <= k4M) {
        g4M = ![];
      } else if (U4M && !U4M[y4M]) {
        g4M = !1;
        U91.i7L(1);
        s4M = U91.W7L(P4M, f4M);
        ;
      }

      if (g4M && n4M > 0) {
        if (k4M < (Math.round(this.chart.width / i4M - 0.499) - 1) / 2) {
          U91.i7L(1);
          y4M = U91.W7L(n4M, 1);
        }

        if (y4M >= n4M) {
          w4M = U4M[n4M - 1].DT;
          U91.i7L(1);
          y4M = U91.W7L(n4M, 1);
        } else {
          w4M = U4M[y4M].DT;
        }
      }

      this.createDataSet();

      if (g4M) {
        if (n4M > 0) {
          for (var S4M = f4M - 1; S4M >= 0; S4M--) {
            z4M = G4M[S4M].DT;

            if (z4M.getTime() < w4M.getTime()) {
              U91.i7L(30);
              T4M.scroll = U91.Q7L(f4M, 1, S4M, y4M);
              break;
            }
          }
        }
      } else if (!s4M) {
        u4M = Math.round(this.preferences.whitespace / i4M);
        U91.i7L(4);
        T4M.scroll = U91.W7L(u4M, 1, k4M);
        ;
      } else {
        T4M.scroll = G4M.length + s4M;
        ;
      }
    }

    if (this.displayInitialized) {
      this.draw();
    }

    this.changeOccurred("layout");

    if (this.quoteDriver) {
      for (var r4M in this.charts) {
        c4M = this.charts[r4M];

        if (c4M.symbol && (c4M.moreAvailable || !c4M.upToDate)) {
          this.quoteDriver.checkLoadMore(c4M);
        }
      }
    }

    H4M();
    this.runAppend(d5j, arguments);
  };

  I4M.ChartEngine.prototype.needDifferentData = function (Q4M) {
    var d4M, W4M, J4M, F4M;
    d4M = this.layout;
    W4M = I4M.ChartEngine.isDailyInterval(Q4M.interval);
    J4M = I4M.ChartEngine.isDailyInterval(d4M.interval);
    F4M = !{};

    if (this.dontRoll || !J4M) {
      if (d4M.interval != Q4M.interval) {
        F4M = !"";
      }
    } else {
      if (W4M != J4M) {
        F4M = !!"1";
      }
    }

    if (!W4M && !Q4M.timeUnit) {
      Q4M.timeUnit = "minute";
    }

    if (!J4M && !d4M.timeUnit) {
      d4M.timeUnit = "minute";
    }

    if (Q4M.timeUnit != d4M.timeUnit) {
      F4M = !0;
    }

    if (!this.masterData || !this.masterData.length) {
      F4M = !"";
    }

    return F4M;
  };

  I4M.ChartEngine.prototype.getPeriodicity = function () {
    var A4M, e4M, X4M;
    k7DD.z71();
    A4M = this.layout;
    e4M = A4M.interval;
    X4M = A4M.timeUnit;

    if (!X4M) {
      X4M = e4M;
      e4M = 1;
    }

    return {
      period: A4M.periodicity,
      interval: e4M,
      timeUnit: X4M
    };
  };
};

G4z = function G4z(p4M) {
  var Z4M;
  Z4M = p4M.CIQ;

  Z4M.ChartEngine.prototype.isHistoricalMode = function () {
    var B23, m23, K23, O23, t23, I23;
    B23 = new Date();
    m23 = !!"1";
    K23 = this.masterData;

    if (!this.isHistoricalModeSet) {
      return !!"";
    }

    if (K23.length) {
      O23 = this.getFirstLastDataRecord(K23, "DT", !!"1");
      t23 = this.standardMarketIterator(O23.DT);
      m23 = (t23 ? t23.next() : O23.DT) <= B23;

      if (m23 && Z4M.ChartEngine.isDailyInterval(t23.interval)) {
        I23 = this.chart.market.getOpen();

        if (I23 && B23 < I23) {
          B23.setHours(+"0", 0, 0, 0);

          if (+B23 == +t23.begin) {
            m23 = ![];
          }
        }
      }
    }

    return m23;
  };

  Z4M.ChartEngine.prototype.isHome = function () {
    var S91 = k7DD;
    var L23, x23, q23;
    L23 = this.chart;
    x23 = L23.dataSet;
    S91.z71();
    q23 = L23.animatingHorizontalScroll;
    S91.z7L(54);
    var T4r = S91.Q7L(6, 3, 5);
    S91.z7L(8);
    var V4r = S91.W7L(0, 1);
    return this.pixelFromTick(x23.length - (q23 ? T4r : V4r), L23) < L23.width + L23.panel.left;
    ;
  };

  Z4M.ChartEngine.prototype.getPreviousBar = function (j23, T23, U23) {
    return this.getNextBarInternal(j23, T23, U23, -1);
  };

  Z4M.ChartEngine.prototype.getNextBar = function (n23, y23, V23) {
    return this.getNextBarInternal(n23, y23, V23, 1);
  };

  Z4M.ChartEngine.prototype.getNextBarInternal = function (v23, S23, c23, C23) {
    var g23, Y23, D23, G23;
    g23 = v23.dataSegment && v23.dataSegment[c23];

    if (g23) {
      Y23 = g23.tick;

      while (Y23 > 0 && Y23 < v23.dataSet.length) {
        k7DD.i7L(8);
        Y23 = k7DD.W7L(Y23, C23);
        D23 = v23.dataSet[Y23];

        if (D23) {
          G23 = Z4M.existsInObjectChain(D23, S23);

          if (G23 && G23.obj[G23.member]) {
            return D23;
          }
        }
      }
    }

    return null;
  };

  Z4M.ChartEngine.prototype.getFirstLastDataRecord = function (H23, f23, k23) {
    var i23;

    if (H23 && H23.length) {
      i23 = k23 ? H23.length - 1 : 0;

      while (i23 >= 0 && i23 < H23.length) {
        if (H23[i23] && typeof H23[i23][f23] != "undefined") {
          return H23[i23];
        }

        if (k23) {
          i23--;
        } else {
          i23++;
        }
      }
    }

    return null;
  };

  Z4M.ChartEngine.prototype.leftTick = function () {
    var Q91 = k7DD;
    var H8U, O8U, k8U;
    H8U = -1695570485;
    Q91.i7L(17);
    O8U = -Q91.W7L(398219200, "867954389");
    k8U = 2;

    for (var X8U = 1; Q91.V6U(X8U.toString(), X8U.toString().length, 38574) !== H8U; X8U++) {
      return this.chart.dataSet.length - this.chart.scroll;
    }

    if (Q91.V6U(k8U.toString(), k8U.toString().length, "27383" >> 1035214304) !== O8U) {
      return this.chart.dataSet.length % this.chart.scroll;
    }
  };

  Z4M.ChartEngine.prototype.getNextInterval = function (o23, w23, R23) {
    var s23;

    if (!w23) {
      w23 = 1;
    }

    if (R23 !== !!0) {
      R23 = !!1;
    }

    s23 = this.standardMarketIterator(o23, R23 ? this.dataZone : this.displayZone);

    if (!s23) {
      return o23;
    }

    k7DD.K71();

    if (w23 < 1) {
      k7DD.i7L(20);
      return s23.previous(k7DD.Q7L(1, w23));
    }

    return s23.next(w23);
  };

  Z4M.ChartEngine.prototype.standardMarketIterator = function (M23, a23, E23) {
    var P23, b23;
    P23 = E23 || this.chart;

    if (!P23.market) {
      return null;
    }

    b23 = {
      begin: M23,
      interval: this.layout.interval,
      periodicity: this.layout.interval == "tick" ? this.chart.xAxis.futureTicksInterval : this.layout.periodicity,
      timeUnit: this.layout.timeUnit,
      outZone: a23
    };
    return P23.market.newIterator(b23);
  };
};

g4z = function g4z(h23) {
  var l23, N23;

  if (!h23.SplinePlotter) {
    h23.SplinePlotter = {};
  }

  l23 = h23.CIQ;
  N23 = h23.SplinePlotter;

  l23.ChartEngine.prototype.draw = function () {
    var O91 = k7DD;
    var x5j, A5j, z23, F23, Q23, u23, e23, d23, r23, A23, V5U, f5U, P5U;
    x5j = "S";
    x5j += "tudies.displa";
    x5j += "yStudies";
    A5j = "Stu";
    A5j += "die";
    A5j += "s.displayStud";
    A5j += "ies";
    this.debug();
    z23 = this.chart;
    F23 = this.layout;

    if (!z23.canvas) {
      return;
    }

    if (!z23.dataSet) {
      return;
    }

    if (!z23.canvasHeight) {
      return;
    }

    O91.z7L(1);
    var f4r = O91.Q7L(30, 28);
    this.offset = F23.candleWidth * this.candleWidthPercent / f4r;
    l23.clearCanvas(z23.canvas, this);

    if (!this.masterData) {
      return;
    }

    if (this.runPrepend("draw", arguments)) {
      return;
    }

    if (!this.defaultColor) {
      this.getDefaultColor();
    }

    this.vectorsShowing = ![];
    this.drawPanels();
    this.yAxisLabels = [];
    this.correctIfOffEdge();
    this.createDataSegment();
    this.setBaselines(z23);
    e23 = this.createXAxis(z23);
    this.initializeDisplay(z23);
    this.drawXAxis(z23, e23);

    try {
      this.renderYAxis(z23);
    } catch (X23) {
      var v5j;
      v5j = "re";
      v5j += "boot dr";
      v5j += "aw";

      if (X23 && X23.message === v5j) {
        return this.draw();
      }

      throw X23;
    }

    z23.tmpWidth = Math.floor(F23.candleWidth * this.candleWidthPercent);

    if (z23.tmpWidth % 2 === 0) {
      z23.tmpWidth += 1;

      if (z23.tmpWidth > F23.candleWidth) {
        z23.tmpWidth -= 2;
      }
    }

    if (z23.tmpWidth < 0.5) {
      z23.tmpWidth = 0.5;
    }

    for (Q23 in this.plugins) {
      u23 = this.plugins[Q23];

      if (u23.display) {
        if (u23.drawUnder) {
          u23.drawUnder(this, z23);
        }
      }
    }

    if (z23.legend) {
      z23.legend.colorMap = null;
    }

    if (this.controls.baselineHandle) {
      this.controls.baselineHandle.style.display = "none";
    }

    this.rendererAction(z23, "underlay");
    l23.getFn(A5j)(this, z23, !![]);
    this.displayChart(z23);
    l23.getFn(x5j)(this, z23, !"1");
    this.rendererAction(z23, "overlay");

    if (z23.legend && z23.legend.colorMap && z23.legendRenderer) {
      z23.legendRenderer(this, {
        chart: z23,
        legendColorMap: z23.legend.colorMap,
        coordinates: {
          x: z23.legend.x,
          y: z23.legend.y + z23.panel.yAxis.top
        }
      });
    }

    for (Q23 in this.plugins) {
      u23 = this.plugins[Q23];

      if (u23.display) {
        if (u23.drawOver) {
          u23.drawOver(this, z23);
        }
      }
    }

    for (var W23 in this.panels) {
      if (!this.panels[W23].hidden) {
        this.plotYAxisText(this.panels[W23]);
      }
    }

    for (var J23 = 0; J23 < this.yAxisLabels.length; J23++) {
      d23 = this.yAxisLabels[J23];
      if (d23.src == "series" && d23.args[+"6"] && d23.args[6].drawSeriesPriceLabels === !{}) continue;
      this.createYAxisLabel.apply(this, d23.args);
    }

    if (this.createCrosshairs) {
      this.createCrosshairs();
    }

    if (this.drawVectors) {
      this.drawVectors();
    }

    this.drawCurrentHR();
    this.displayInitialized = !0;
    r23 = this.controls;

    if (r23) {
      A23 = this.manageTouchAndMouse && (!this.mainSeriesRenderer || !this.mainSeriesRenderer.nonInteractive);

      if (r23.home) {
        r23.home.style.display = A23 && !this.isHome() ? "block" : "none";
      }

      if (r23.chartControls) {
        r23.chartControls.style.display = A23 ? "block" : "none";
      }
    }

    if (l23.Marker) {
      this.positionMarkers();
    }

    if (this.quoteDriver && this.animations.zoom.hasCompleted) {
      this.quoteDriver.checkLoadMore(z23);
    }

    this.runAppend("draw", arguments);
    V5U = -1381973692;
    O91.z7L(17);
    f5U = O91.Q7L(1460083200, "286635612");
    P5U = 2;
    O91.K71();

    for (var D5U = 1; O91.f6U(D5U.toString(), D5U.toString().length, 56238) !== V5U; D5U++) {
      this.makeAsyncCallbacks();
      O91.z7L(23);
      P5U += O91.Q7L(0, "2");
    }

    if (O91.V6U(P5U.toString(), P5U.toString().length, 46589) !== f5U) {
      this.makeAsyncCallbacks();
    }
  };

  l23.ChartEngine.prototype.setSeriesRenderer = function (Z23) {
    var _Z23$params = Z23.params,
        a13 = _Z23$params.baseline,
        p23 = _Z23$params.name,
        E13 = _Z23$params.panel,
        t13 = _Z23$params.yAxis;

    if (this.chart.seriesRenderers[p23]) {
      return this.chart.seriesRenderers[p23];
      ;
    }

    if (t13) {
      Z23.params.yAxis = this.addYAxis(this.panels[E13], t13);
      this.resizeChart();
    }

    Z23.stx = this;
    this.chart.seriesRenderers[p23] = Z23;

    if (a13) {
      this.registerBaselineToHelper(Z23);
    }

    return Z23;
  };

  l23.ChartEngine.prototype.setMainSeriesRenderer = function (y63) {
    var s5j, d13, U63, I63;
    s5j = "n";
    s5j += "o";
    s5j += "n";
    s5j += "e";
    var _this$layout = this.layout,
        e13 = _this$layout.chartType,
        K63 = _this$layout.aggregationType;
    var m63 = this.chart;
    var O63 = m63.custom;
    d13 = this.mainSeriesRenderer;
    U63 = this.displayInitialized;

    if (d13) {
      if (y63) {
        this.setMasterData();
      }

      this.displayInitialized = !1;
      d13.removeAllSeries();
      this.removeSeriesRenderer(d13);
      d13 = this.mainSeriesRenderer = null;
    }

    if (O63 && O63.chartType) {
      e13 = O63.chartType;
    }

    if (e13 == s5j) {
      return;
    }

    if (K63 && K63 != "ohlc") {
      e13 = K63;
    }

    I63 = l23.Renderer.produce(e13, {
      panel: m63.panel.name,
      name: "_main_series",
      highlightable: !1,
      useChartLegend: !!{}
    });

    if (I63) {
      this.setSeriesRenderer(I63).attachSeries(null, {
        display: m63.symbol
      });
      d13 = this.mainSeriesRenderer = I63;
    }

    this.displayInitialized = U63;
    ["highLowBars", "standaloneBars", "barsHaveWidth"].forEach(function (V63) {
      k7DD.K71();
      m63[V63] = this.mainSeriesRenderer && this.mainSeriesRenderer[V63];
    }.bind(this));
  };

  l23.ChartEngine.prototype.removeSeriesRenderer = function (g63) {
    var D63;
    var _g63$params = g63.params,
        S63 = _g63$params.baseline,
        G63 = _g63$params.name;
    D63 = this.controls["".concat(G63, " baseline-handle")];

    if (S63) {
      this.removeBaselineFromHelper(g63);

      if (D63) {
        this.container.removeChild(D63);
        delete this.controls[D63];
      }
    }

    delete this.chart.seriesRenderers[G63];
  };

  l23.ChartEngine.prototype.getSeriesRenderer = function (c63) {
    return this.chart.seriesRenderers[c63];
  };

  l23.ChartEngine.prototype.getRendererFromSeries = function (k63) {
    var C63;
    C63 = this.chart.seriesRenderers;
    k7DD.K71();

    for (var i63 in C63) {
      for (var H63 in C63[i63].seriesParams) {
        if (C63[i63].seriesParams[H63].id == k63) {
          return C63[i63];
        }
      }
    }

    return null;
  };

  l23.ChartEngine.prototype.startClip = function (b63, l63) {
    var n91 = k7DD;
    var s63, M63, R63, o63, P63, a5U, G5U, E5U;

    if (!b63) {
      b63 = this.chart.panel.name;
    }

    s63 = this.panels[b63];
    M63 = s63.yAxis;
    R63 = this.chart;
    R63.context.save();
    R63.context.beginPath();
    o63 = s63.left;
    P63 = s63.width;

    if (l63) {
      o63 = 0;
      P63 = this.width;
    } else if (s63.yaxisLHS && s63.yaxisLHS.length) {
      a5U = -+"1892496429";
      n91.z7L(18);
      G5U = -n91.Q7L(1, "529443637");
      E5U = 2;

      for (var W5U = 1; n91.V6U(W5U.toString(), W5U.toString().length, 83254) !== a5U; W5U++) {
        o63--;
        P63++;
        n91.i7L(19);
        E5U += n91.Q7L("2", 2147483647);
      }

      if (n91.f6U(E5U.toString(), E5U.toString().length, +"42110") !== G5U) {
        o63++;
        P63--;
      }

      o63++;
      P63--;
    }

    R63.context.rect(o63, M63.top, P63, M63.height);
    R63.context.clip();
  };

  l23.ChartEngine.prototype.endClip = function () {
    this.chart.context.restore();
  };

  l23.ChartEngine.prototype.setLineStyle = function (z63, F63) {
    var h63, Q63;
    h63 = {};

    if (z63 && _typeof(z63) == "object") {
      h63 = z63;
    } else {
      h63.color = z63;
    }

    if (!h63.color && !h63.pattern && !h63.width && !h63.baseColor) {
      h63 = null;
    }

    if (!F63) {
      F63 = this.chart;
    }

    Q63 = +"1";

    if (h63 && h63.width) {
      Q63 = h63.width;
    }

    if (h63 && h63.pattern) {
      h63.pattern = l23.borderPatternToArray(Q63, h63.pattern);
    }

    F63.lineStyle = h63;
  };

  l23.ChartEngine.prototype.setGapLines = function (W63, A63) {
    var n5j, J63;
    n5j = "bo";
    n5j += "o";
    n5j += "lean";

    if (!A63) {
      A63 = this.chart;
    }

    J63 = {};

    if (W63 && _typeof(W63) == "object") {
      J63 = W63;
    } else if (_typeof(W63) === n5j) {
      return A63.gaplines = W63;
    } else {
      J63.color = W63;
    }

    if (!J63.color && !J63.pattern && !J63.fillMountain) {
      J63 = null;
    }

    if (J63 && J63.pattern) {
      J63.pattern = l23.borderPatternToArray(J63.width, J63.pattern);
    }

    k7DD.z71();

    if (J63 && J63.width <= "0" >> 1541505408) {
      J63.width = null;
    }

    A63.gaplines = J63;
  };

  l23.ChartEngine.prototype.getGapColorFunction = function (B33, m33, Z63, X63, p63) {
    if (_typeof(Z63) != "object") {
      Z63 = {
        color: Z63
      };
    }

    k7DD.K71();
    return function (L33, O33, I33) {
      var t33, K33, T5j;
      t33 = p63 ? p63(L33, O33, I33) : Z63;

      if (t33.color) {
        t33 = t33.color;
      }

      K33 = O33[B33];

      if (!K33 && K33 !== 0) {
        K33 = O33[m33];
      }

      if (!I33 && (K33 || K33 === 0)) {
        return {
          color: t33,
          pattern: Z63.pattern,
          width: Z63.width
        };
      }

      k7DD.K71();

      if (!X63) {
        return null;
      }

      if (_typeof(X63) != "object") {
        T5j = "str";
        T5j += "i";
        T5j += "ng";

        if (_typeof(X63) == T5j) {
          X63 = {
            color: X63
          };
        } else {
          X63 = {};
        }
      }

      return {
        color: X63.color || t33,
        pattern: X63.pattern || Z63.pattern,
        width: X63.width || Z63.width
      };
    };
  };

  l23.ChartEngine.prototype.drawLineChart = function (V33, g33, C33, x33) {
    var U33, j33, Y33, D33, v33, T33, G33, S33, q33, c33, n33;
    U33 = this.chart;
    j33 = U33.context;
    Y33 = U33.lineStyle || {};
    D33 = this.canvasStyle(g33);

    if (!x33) {
      x33 = {};
    }

    this.startClip(V33.name);
    v33 = x33.width || Y33.width || D33.width;
    k7DD.K71();

    if (v33 && parseInt(v33, 10) <= 25) {
      j33.lineWidth = Math.max(1, l23.stripPX(v33));
    } else {
      j33.lineWidth = 1;
    }

    x33.pattern = x33.pattern || Y33.pattern || D33.borderTopStyle;
    x33.pattern = l23.borderPatternToArray(j33.lineWidth, x33.pattern);
    this.canvasColor(g33);
    T33 = x33.color || Y33.color;

    if (T33) {
      if (T33 == "auto") {
        T33 = this.defaultColor;
      }

      if (x33.opacity && x33.opacity !== +"1") {
        T33 = l23.hexToRgba(l23.colorToHex(T33), parseFloat(x33.opacity));
      }

      j33.strokeStyle = T33;
    }

    x33.skipProjections = !!1;
    G33 = x33.field || U33.defaultPlotField;
    S33 = x33.subField || U33.defaultPlotField || "Close";
    q33 = x33.gapDisplayStyle;

    if (!q33 && q33 !== ![]) {
      q33 = x33.gaps;
    }

    if (!q33 && q33 !== !!"") {
      q33 = U33.gaplines;
    }

    if (!q33) {
      q33 = "transparent";
    }

    x33.gapDisplayStyle = q33;
    c33 = this.getGapColorFunction(G33, S33, {
      color: j33.strokeStyle,
      pattern: x33.pattern,
      width: j33.lineWidth
    }, q33, C33);

    if (V33.chart.tension) {
      x33.tension = V33.chart.tension;
    }

    n33 = this.plotDataSegmentAsLine(G33, V33, x33, c33);

    if (!n33.colors.length) {
      n33.colors.push(j33.strokeStyle);
    }

    j33.lineWidth = 1;
    this.endClip();
    return x33.returnObject ? n33 : n33.colors;
  };

  l23.ChartEngine.prototype.drawChannelChart = function (R33, b33, f33) {
    var N5j, P5j, f5j, V5j, i33, k33, M33, a33, w33, s33, H33, o33, P33, E33;
    N5j = "C";
    N5j += "lo";
    N5j += "s";
    N5j += "e";
    P5j = "sub";
    P5j += "Field";
    f5j = "fi";
    f5j += "el";
    f5j += "d";
    V5j = "H";
    V5j += "i";
    V5j += "g";
    V5j += "h";
    i33 = l23.clone(f33);
    i33.color = f33.color;
    k33 = this.drawLineChart(R33, i33.style, b33, i33);
    M33 = i33.border_color_up || this.getCanvasColor("stx_channel_up");
    a33 = i33.border_color_down || this.getCanvasColor("stx_channel_down");
    i33[f33.field ? "subField" : "field"] = i33.field_high || V5j;
    i33.color = M33;
    w33 = this.drawLineChart(R33, i33.style, b33, i33);
    i33[f33.field ? "subField" : f5j] = i33.field_low || "Low";
    i33.color = a33;
    s33 = this.drawLineChart(R33, i33.style, b33, i33);
    i33[f33.field ? P5j : "field"] = f33.subField || this.chart.defaultPlotField || N5j;
    o33 = [];
    P33 = [];

    for (H33 = +"0"; H33 < w33.points.length; H33 += 2) {
      o33.push([w33.points[H33], w33.points[H33 + +"1"]]);
    }

    for (H33 = 0; H33 < s33.points.length; H33 += 2) {
      P33.push([s33.points[H33], s33.points[H33 + 1]]);
    }

    k7DD.i7L(1);
    var P4r = k7DD.Q7L(7, 5);
    E33 = this.chart.context.lineWidth / P4r;

    for (H33 = k33.points.length - +"2"; H33 >= 0; H33 -= "2" | 2) {
      o33.push([k33.points[H33], k33.points[H33 + 1] - E33]);
      P33.push([k33.points[H33], k33.points[H33 + 1] + E33]);
    }

    this.startClip(R33.name);
    i33.color = M33;
    l23.fillArea(this, o33, i33);
    i33.color = a33;
    l23.fillArea(this, P33, i33);
    this.endClip();
    k33.colors = k33.colors.concat(w33.colors).concat(s33.colors);
    return f33.returnObject ? k33 : k33.colors;
  };

  l23.ChartEngine.prototype.connectTheDots = function (J33, h33, U83, l33, X33, N33) {
    var m91 = k7DD;
    var D5j, t83, K83, I83, L83, m83, r33, d33, O83, Z33, W33, A33, p33, B83, z33, e33, F33, x83, q83, j83, T83;
    D5j = "n";
    D5j += "o";
    D5j += "n";
    D5j += "e";

    if (!N33) {
      N33 = {};
    }

    if (N33.pattern == D5j) {
      return;
    }

    if (X33 === !0) {
      X33 = this.chart.panel;
    }

    if (l33 === null || typeof l33 == "undefined") {
      l33 = this.chart.context;
    }

    if (J33.length < "4" - 0) {
      return;
    }

    t83 = 0;
    K83 = this.chart.canvasHeight;
    I83 = 0;
    L83 = this.chart.width;

    if (X33) {
      K83 = X33.yAxis.bottom;
      t83 = X33.yAxis.top;
    }

    l33.lineWidth = +"1.1";

    if (_typeof(h33) == "object") {
      l33.strokeStyle = h33.color;

      if (h33.opacity) {
        l33.globalAlpha = h33.opacity;
      } else {
        l33.globalAlpha = 1;
      }

      l33.lineWidth = l23.stripPX(h33.width);
    } else {
      if (!h33 || h33 == "auto" || l23.isTransparent(h33)) {
        l33.strokeStyle = this.defaultColor;
      } else {
        l33.strokeStyle = h33;
      }
    }

    if (N33.opacity) {
      l33.globalAlpha = N33.opacity;
    }

    if (N33.lineWidth) {
      l33.lineWidth = N33.lineWidth;
    }

    m83 = l23.borderPatternToArray(l33.lineWidth, N33.pattern);
    l33.beginPath();

    for (var u33 = "0" & 2147483647; u33 < J33.length - 2; u33 += "2" - 0) {
      r33 = J33[u33];
      m91.i7L(8);
      d33 = J33[m91.Q7L(u33, 1)];
      m91.i7L(22);
      O83 = J33[m91.Q7L(1, u33, "2")];
      m91.z7L(8);
      Z33 = J33[m91.W7L(u33, 3)];

      if (isNaN(r33) || isNaN(O83) || isNaN(d33) || isNaN(Z33)) {
        return;
      }

      W33 = 0.0;
      A33 = 1.0;
      m91.z7L(1);
      p33 = m91.Q7L(O83, r33);
      m91.i7L(1);
      B83 = m91.W7L(Z33, d33);

      for (var Q33 = "0" - 0; Q33 < 4; Q33++) {
        if (Q33 === 0) {
          z33 = -p33;
          m91.z7L(1);
          e33 = -m91.Q7L(I83, r33);
        }

        if (Q33 == 1) {
          z33 = p33;
          m91.z7L(1);
          e33 = m91.W7L(L83, r33);
        }

        if (Q33 == 2) {
          z33 = -B83;
          m91.z7L(1);
          e33 = -m91.W7L(t83, d33);
        }

        if (Q33 == "3" << 1999762912) {
          z33 = B83;
          m91.z7L(1);
          e33 = m91.W7L(K83, d33);
        }

        m91.z7L(35);
        F33 = m91.W7L(e33, z33);

        if ((Z33 || Z33 === 0) && z33 === 0 && e33 < +"0") {
          return ![];
          ;
        }

        if (z33 < 0) {
          if (F33 > A33) {
            return ![];
          } else if (F33 > W33) {
            W33 = F33;
          }

          ;
        } else if (z33 > 0) {
          if (F33 < W33) {
            return !!0;
          } else if (F33 < A33) {
            A33 = F33;
          }

          ;
        }
      }

      m91.z7L(22);
      x83 = m91.Q7L(p33, r33, W33);
      m91.z7L(22);
      q83 = m91.Q7L(B83, d33, W33);
      m91.i7L(22);
      j83 = m91.Q7L(p33, r33, A33);
      m91.i7L(22);
      T83 = m91.W7L(B83, d33, A33);

      try {
        l33.setLineDash(m83 && m83.length ? m83 : []);
        l33.moveTo(x83, q83);
        l33.lineTo(j83, T83);
      } catch (n83) {
        ;
      }
    }

    l33.stroke();
    l33.closePath();
    l33.globalAlpha = 1;
    m91.z7L(23);
    l33.lineWidth = m91.W7L(0, "1");
  };

  l23.ChartEngine.prototype.plotSpline = function (G83, g83, V83, S83, y83, v83, Y83) {
    var a5j, D83;
    a5j = "o";
    a5j += "bj";
    a5j += "e";
    a5j += "ct";

    if (!Y83) {
      Y83 = {};
    }

    if (Y83.pattern == "none") {
      return;
    }

    if (v83 === !"") {
      v83 = this.chart.panel;
    }

    if (y83 === null || typeof y83 == "undefined") {
      y83 = this.chart.context;
    }

    y83.save();
    k7DD.z7L(18);
    y83.lineWidth = k7DD.Q7L(1, "1.1");

    if (_typeof(V83) == a5j) {
      y83.strokeStyle = V83.color;

      if (V83.opacity) {
        y83.globalAlpha = V83.opacity;
      } else {
        y83.globalAlpha = 1;
      }

      y83.lineWidth = l23.stripPX(V83.width);
    } else {
      if (!V83 || V83 == "auto" || l23.isTransparent(V83)) {
        y83.strokeStyle = this.defaultColor;
      } else {
        y83.strokeStyle = V83;
      }
    }

    if (Y83.opacity) {
      y83.globalAlpha = Y83.opacity;
    }

    if (Y83.lineWidth) {
      y83.lineWidth = Y83.lineWidth;
    }

    D83 = l23.borderPatternToArray(y83.lineWidth, Y83.pattern);

    if (Y83.pattern && y83.setLineDash) {
      y83.setLineDash(D83);
      y83.lineDashOffset = 0;
      ;
    }

    y83.beginPath();
    N23.plotSpline(G83, g83, y83);
    y83.stroke();
    y83.closePath();
    y83.restore();
  };

  l23.ChartEngine.prototype.rawWatermark = function (c83, C83, i83, H83) {
    var G5j, E6U, M6U, W6U;
    G5j = "stx";
    G5j += "_water";
    G5j += "mar";
    G5j += "k";
    this.canvasFont(G5j, c83);
    c83.fillStyle = this.defaultColor;
    c83.globalAlpha = 0.5;
    this.chart.context.textBaseline = "alphabetic";
    E6U = +"1081125474";
    M6U = 1587363768;
    W6U = 2;

    for (var b6U = +"1"; k7DD.V6U(b6U.toString(), b6U.toString().length, 43532) !== E6U; b6U++) {
      c83.fillText(H83, C83, i83);
      c83.globalAlpha = 8;
      W6U += 2;
    }

    if (k7DD.f6U(W6U.toString(), W6U.toString().length, +"22745") !== M6U) {
      c83.fillText(H83, C83, i83);
      c83.globalAlpha = 7;
    }

    c83.fillText(H83, C83, i83);
    c83.globalAlpha = 1;
  };

  l23.ChartEngine.prototype.watermark = function (o83, k83) {
    var k91 = k7DD;
    var M5j, E5j, f83, w83, s83, R83;
    M5j = "ri";
    M5j += "ght";
    E5j = "obj";
    E5j += "e";
    E5j += "c";
    E5j += "t";

    if (k83 && _typeof(k83) != E5j) {
      k83 = {
        h: arguments[1],
        v: arguments[2],
        text: arguments[3]
      };
    }

    k83 = {
      h: k83.h || "left",
      v: k83.v || "bottom",
      text: k83.text || "",
      hOffset: k83.hOffset === +"0" ? 0 : k83.hOffset || 10,
      vOffset: k83.vOffset === +"0" ? "0" << 823613568 : k83.vOffset || 20,
      context: k83.context || this.chart.context
    };
    f83 = k83.context;

    if (!f83) {
      return;
    }

    w83 = this.panels[o83];

    if (!w83 || w83.hidden) {
      return;
    }

    s83 = w83.yAxis.bottom - k83.vOffset;

    if (k83.v == "top") {
      s83 = w83.top + k83.vOffset;
    } else if (k83.v == "middle") {
      k91.z7L(52);
      var N4r = k91.W7L(603866163, 13, 301933088);
      s83 = (w83.top + w83.yAxis.bottom) / ("2" >> N4r);
    }

    f83.save();
    this.canvasFont("stx_watermark", f83);
    this.canvasColor("stx_watermark", f83);
    f83.textBaseline = "alphabetic";
    R83 = w83.left + k83.hOffset;

    if (k83.h == M5j) {
      R83 = w83.right - k83.hOffset;
    } else if (k83.h == "center") {
      k91.i7L(36);
      var D4r = k91.Q7L(50, 3, 16);
      R83 = (w83.right + w83.left - f83.measureText(k83.text).width) / D4r;
    }

    f83.globalAlpha = 0.5;

    if (this.highlightedDraggable) {
      f83.globalAlpha *= 0.3;
    }

    f83.fillText(k83.text, R83, s83);
    f83.restore();
  };

  k7DD.K71();

  l23.ChartEngine.prototype.displayErrorAsWatermark = function (l83, h83) {
    var D91 = k7DD;
    var L5j, W5j, M83, b83, E83, a83, z83, u83, r83, P83, N83, d83, F83;
    L5j = "b";
    L5j += "o";
    L5j += "tto";
    L5j += "m";
    W5j = "cen";
    W5j += "ter";

    if (!h83) {
      return;
    }

    if (!l83) {
      l83 = "chart";
    }

    M83 = this.panels[l83];

    if (!M83 || M83.hidden) {
      return;
    }

    b83 = M83.state;

    if (!b83) {
      M83.state = b83 = {};
    }

    E83 = b83.studyErrors;

    if (!E83) {
      b83.studyErrors = E83 = new Set();
    }

    if (E83.has(h83)) {
      return;
    }

    a83 = b83.watermarkOffset || +"10";
    D91.i7L(16);
    z83 = D91.Q7L("10", 0);
    u83 = this.getCanvasFontSize("stx_watermark");

    if (this.chart && this.chart.chartControls) {
      r83 = M83.yAxis.bottom;
      P83 = this.chart.chartControls;
      D91.z7L(1);
      N83 = D91.W7L(r83, a83);
      D91.i7L(1);
      d83 = D91.W7L(N83, u83);

      if (N83 > P83.offsetTop && N83 < P83.offsetTop + P83.offsetHeight || d83 > P83.offsetTop && d83 < P83.offsetTop + P83.offsetHeight) {
        a83 = r83 - P83.offsetTop + z83;
      }
    }

    E83.add(h83);
    F83 = {
      h: W5j,
      v: L5j,
      text: h83,
      vOffset: a83
    };
    D91.i7L(8);
    a83 += D91.W7L(u83, z83);
    b83.watermarkOffset = a83;
    this.watermark(l83, F83);
  };

  l23.ChartEngine.prototype.displayChart = function (Q83) {
    var b5j;
    b5j = "mai";
    b5j += "n";

    if (this.runPrepend("displayChart", arguments)) {
      return;
    }

    this.rendererAction(Q83, b5j);
    this.runAppend("displayChart", arguments);
  };
};

S4z = function S4z(W83) {
  var J83;
  J83 = W83.CIQ;

  J83.ChartEngine.prototype.cloneStyle = function (p83) {
    var X83, B73, A83, m73, Z83, K73, t73, O73;
    k7DD.z71();
    X83 = {};

    function I73(L73) {
      k7DD.K71();
      return L73[1].toUpperCase();
    }

    B73 = ![];

    for (var e83 in p83) {
      A83 = p83[e83];

      if (e83 == "backgroundAttachment") {
        B73 = !!"1";
      }

      if (B73) {
        if (A83 && A83.constructor == String && isNaN(e83)) {
          X83[e83] = A83;
        }
      } else if (!isNaN(e83)) {
        m73 = p83.getPropertyValue(A83);

        if (m73) {
          A83 = A83.split((+"809.04", 6090) <= 918.53 ? (0x7f0, 1.18e+3) : (9724, 326) !== 6865 ? "-" : +"8.70e+2");
          Z83 = 0;
          K73 = A83.length;
          t73 = A83[0];

          while (++Z83 < K73) {
            k7DD.z7L(8);
            var a4r = k7DD.Q7L(0, 1);
            t73 += A83[Z83].charAt(0).toUpperCase() + A83[Z83].slice(a4r);
          }

          X83[t73] = m73;
        }
      } else {
        O73 = e83.replace(J83.camelCaseRegExp, I73);
        X83[O73] = A83;
      }
    }

    return X83;
  };

  J83.ChartEngine.prototype.canvasStyle = function (q73) {
    var j73, x73, T73;
    k7DD.K71();
    j73 = this.styles[q73];

    if (!j73) {
      x73 = document.createElement("div");
      x73.className = q73;
      this.container.appendChild(x73);
      T73 = getComputedStyle(x73);
      j73 = this.styles[q73] = this.cloneStyle(T73);
      this.container.removeChild(x73);

      if (!T73) {
        this.styles[q73] = null;
      }
    }

    return j73;
  };

  J83.ChartEngine.prototype.colorOrStyle = function (U73) {
    if (U73.indexOf((866.12, 131.17) === (670, 3460) ? 533.42 : "#") != -1) {
      return U73;
    }

    if (U73.indexOf("(") != -("1" ^ 0)) {
      return U73;
    }

    if (U73 == "transparent") {
      return U73;
    }

    k7DD.z71();
    return this.canvasStyle(U73);
  };

  J83.ChartEngine.prototype.clearStyles = function () {
    k7DD.K71();
    this.styles = {};
    this.defaultColor = "";
  };

  J83.ChartEngine.prototype.setStyle = function (n73, y73, V73) {
    if (!this.styles[n73]) {
      this.canvasStyle(n73);
    }

    if (!this.styles[n73]) {
      this.styles[n73] = {};
    }

    this.styles[n73][J83.makeCamelCase(y73)] = V73;
  };

  J83.ChartEngine.prototype.canvasFont = function (v73, D73) {
    var b91 = k7DD;
    var Y73, G73;

    if (!D73) {
      D73 = this.chart.context;
    }

    Y73 = this.canvasStyle(v73);

    if (!Y73) {
      return;
    }

    b91.z71();
    b91.i7L(9);
    var G4r = b91.W7L(10, 15025, 16170);
    b91.z7L(8);
    var E4r = b91.W7L(451, 8570);
    b91.z7L(34);
    var M4r = b91.W7L(4037, 18, 18, 13);
    G73 = Y73.fontStyle + " " + Y73.fontWeight + " " + Y73.fontSize + ((G4r, E4r) >= 500.64 ? " " : ("Z", M4r)) + Y73.fontFamily;

    if (G73.indexOf("undefined") == -1) {
      D73.font = G73;
    } else {
      this.styles[v73] = null;
      b91.z7L(8);
      console.log(b91.Q7L("bad css style for class ", v73));
    }
  };

  J83.ChartEngine.prototype.canvasColor = function (i73, g73) {
    var m5j, c73, S73, C73;
    m5j = "u";
    m5j += "n";
    m5j += "de";
    m5j += "fined";

    if (!g73) {
      g73 = this.chart.context;
    }

    c73 = this.canvasStyle(i73);

    if (!c73) {
      return;
    }

    S73 = c73.color;

    if (!S73) {
      S73 = this.defaultColor;
    }

    g73.globalAlpha = 1;
    g73.fillStyle = S73;
    k7DD.K71();
    g73.strokeStyle = S73;
    C73 = c73.opacity;

    if (_typeof(C73) != m5j) {
      g73.globalAlpha = C73;
    }
  };

  J83.ChartEngine.prototype.getCanvasFontSize = function (f73) {
    var k73, H73;
    k73 = this.canvasStyle(f73);
    H73 = k73.fontSize;

    if (!H73) {
      H73 = "12";
    }

    k7DD.z71();
    return parseInt(J83.stripPX(H73), 10);
  };

  J83.ChartEngine.prototype.getCanvasColor = function (s73) {
    var w73;
    w73 = this.canvasStyle(s73);
    return w73.color;
  };

  J83.ChartEngine.prototype.getDefaultColor = function () {
    var R73, o73, P73, b73, M73;
    this.defaultColor = "#000000";
    R73 = null;
    o73 = this.chart.container;

    while (!R73 || J83.isTransparent(R73)) {
      P73 = getComputedStyle(o73);

      if (!P73) {
        return;
      }

      R73 = P73.backgroundColor;

      if (J83.isTransparent(R73)) {
        R73 = "transparent";
      }

      o73 = o73.parentNode;
      if (!o73 || !o73.tagName) break;
    }

    if (R73) {
      if (R73 == "transparent") {
        R73 = "#FFFFFF";
      }

      this.containerColor = R73;

      if (!J83.isTransparent(R73)) {
        b73 = J83.hsv(R73);
        M73 = b73[2];

        if (M73 > 0.65) {
          this.defaultColor = "#000000";
        } else {
          this.defaultColor = "#FFFFFF";
        }
      } else {
        this.defaultColor = "#000000";
      }
    } else {
      this.containerColor = "#FFFFFF";
    }
  };
};

c4z = function c4z(E73) {
  var a73;
  a73 = E73.CIQ;

  a73.ChartEngine.XAxis = function (h73) {
    k7DD.K71();

    for (var l73 in h73) {
      this[l73] = h73[l73];
    }
  };

  a73.extend(a73.ChartEngine.XAxis.prototype, {
    formatter: null,
    adjustTimeZone: !!{},
    idealTickSizePixels: null,
    timeUnit: null,
    timeUnitMultiplier: null,
    displayBorder: !"",
    displayGridLines: !!{},
    noDraw: null,
    minimumLabelWidth: 50,
    futureTicks: !!{},
    futureTicksInterval: 1
  }, !!{});

  a73.ChartEngine.XAxisLabel = function (N73, z73, u73) {
    this.hz = N73;
    this.grid = z73;
    this.text = u73;
  };

  a73.ChartEngine.prototype.createXAxis = function (d73) {
    var Q5j, F73, r73;
    Q5j = "createX";
    Q5j += "A";
    Q5j += "x";
    Q5j += "is";

    if (d73.dataSegment.length <= 0) {
      return null;
    }

    if (d73.xAxis.noDraw) {
      return null;
    }

    F73 = [d73];
    r73 = this.runPrepend(Q5j, F73);

    if (r73) {
      return r73;
    }

    if (this.mainSeriesRenderer && this.mainSeriesRenderer.createXAxis) {
      r73 = this.mainSeriesRenderer.createXAxis(d73);
    } else {
      r73 = this.createTickXAxisWithDates(d73);
    }

    this.headsUpHR();
    this.runAppend("createXAxis", F73);
    return r73;
  };

  a73.ChartEngine.prototype.createXAxisLabel = function (e73) {
    var u91 = k7DD;
    var R5j, W73, t03, J73, Z73, K03, O03, p73, Q73, I03, m03, A73, X73, B03, G9U, E9U, M9U;
    R5j = "t";
    R5j += "o";
    R5j += "p";

    if (arguments[0] instanceof a73.ChartEngine.Panel) {
      e73 = {
        panel: arguments[0],
        txt: arguments[1],
        x: arguments[2],
        backgroundColor: arguments[3],
        color: arguments[4],
        pointed: arguments[5],
        padding: arguments[6]
      };
    }

    W73 = e73.panel;
    t03 = e73.txt;
    J73 = e73.x;
    Z73 = e73.backgroundColor;
    K03 = e73.color;
    O03 = e73.pointed;
    p73 = e73.padding === 0 ? 0 : e73.padding || 2;
    Q73 = this.chart.context;
    I03 = "stx-float-date";
    u91.z7L(39);
    var W4r = u91.W7L(20, 7, 4, 2);
    m03 = this.getCanvasFontSize(I03) + p73 * W4r;
    this.canvasFont(I03, Q73);

    try {
      u91.z7L(128);
      var L4r = u91.W7L(1, 14, 261, 18, 7);
      A73 = Q73.measureText(t03).width + p73 * L4r;
    } catch (L03) {
      A73 = 0;
    }

    X73 = W73.top + W73.height - m03 - p73;

    if (J73 + A73 / 2 < W73.left || J73 - A73 / 2 > W73.right) {
      return;
    }

    u91.K71();

    if (!O03) {
      if (J73 + A73 / 2 > W73.right) {
        u91.i7L(102);
        var b4r = u91.Q7L(2, 4, 0, 8);
        J73 = W73.right - A73 / b4r;
      }

      if (J73 - A73 / 2 < W73.left) {
        u91.i7L(125);
        var m4r = u91.W7L(34, 32, 2, 20);
        J73 = W73.left + A73 / m4r;
      }
    }

    Q73.fillStyle = Z73;
    a73.roundRect({
      ctx: Q73,
      x: J73 - A73 / +"2",
      top: X73,
      width: A73,
      height: m03,
      radius: 3,
      fill: !![]
    });
    B03 = W73.bottom - W73.yAxis.bottom - m03;
    Q73.beginPath();

    if (O03) {
      u91.z7L(23);
      G9U = -u91.W7L(386010828, "394759916");
      E9U = -2125202692;
      M9U = 2;

      for (var L9U = 1; u91.V6U(L9U.toString(), L9U.toString().length, "24789" >> 1455907616) !== G9U; L9U++) {
        u91.i7L(1);
        Q73.moveTo(u91.Q7L(J73, B03), X73);
        u91.i7L(4);
        Q73.lineTo(J73, u91.W7L(B03, 1, X73));
        M9U += 2;
      }

      if (u91.V6U(M9U.toString(), M9U.toString().length, 32417) !== E9U) {
        u91.i7L(129);
        Q73.moveTo(u91.Q7L(J73, B03), X73);
        u91.i7L(130);
        Q73.lineTo(J73, u91.W7L(719093152, B03, "6", X73));
      }

      u91.i7L(8);
      Q73.lineTo(u91.Q7L(J73, B03), X73);
      Q73.closePath();
      Q73.fill();
    } else {
      Q73.moveTo(J73, X73);
      u91.i7L(1);
      Q73.lineTo(J73, u91.W7L(X73, B03));
      Q73.strokeStyle = Z73;
      Q73.stroke();
    }

    Q73.textBaseline = R5j;
    Q73.fillStyle = K03 ? K03 : a73.chooseForegroundColor(Z73);

    if (Q73.fillStyle == Z73) {
      if (Z73.toUpperCase() == "#FFFFFF") {
        Q73.fillStyle = "#000000";
      } else {
        Q73.fillStyle = "#FFFFFF";
      }
    }

    u91.i7L(131);
    Q73.fillText(t03, u91.W7L(2, 1, J73, p73, A73), u91.W7L(p73, "2", X73, u91.i7L(132)));
  };
};

C4z = function C4z(q03) {
  var y71 = k7DD;
  var x03;
  x03 = q03.CIQ;

  x03.createLabel = function (j03) {
    j03.ctx.textBaseline = "middle";
    j03.ctx.fillStyle = j03.color ? j03.color : x03.chooseForegroundColor(j03.backgroundColor);

    if (j03.ctx.fillStyle === j03.backgroundColor) {
      if (j03.backgroundColor.toUpperCase() == "#FFFFFF") {
        j03.ctx.fillStyle = "#000000";
      } else {
        j03.ctx.fillStyle = "#FFFFFF";
      }
    }

    j03.ctx.fillText(j03.txt, j03.x + j03.margin.left, j03.y + j03.margin.top);
    j03.ctx.textAlign = "left";
  };

  x03.roundRectArrow = function (T03) {
    var z1j, p1j, q1j;
    z1j = -1491361490;
    p1j = 987780106;
    q1j = 2;

    for (var I1j = 1; y71.f6U(I1j.toString(), I1j.toString().length, "96018" * 1) !== z1j; I1j++) {
      x03.roundRect(T03, "");
      y71.i7L(23);
      q1j += y71.W7L(0, "2");
    }

    if (y71.f6U(q1j.toString(), q1j.toString().length, 28939) !== p1j) {
      x03.roundRect(T03, "");
    }

    x03.roundRect(T03, "arrow");
  };

  x03.semiRoundRect = function (U03) {
    y71.z71();
    x03.roundRect(U03, "flush");
  };

  x03.rect = function (n03) {
    n03.radius = 0;
    x03.roundRect(n03);
  };

  x03.noop = function (y03) {
    y03.color = y03.backgroundColor;
    y71.z71();
    x03.createLabel(y03);
  };

  x03.tickedRect = function (V03) {
    var Y03;
    x03.rect(V03);
    y71.i7L(1);
    var Q4r = y71.Q7L(4, 2);
    Y03 = Math.round(V03.top + V03.height / Q4r) + +"0.5";
    V03.ctx.beginPath();
    V03.ctx.moveTo(V03.x - 2, Y03);
    V03.ctx.lineTo(V03.x, Y03);
    V03.ctx.stroke();
    V03.ctx.closePath();
  };

  x03.roundRect = function (G03, R03) {
    var K5j, r5j, l5j, k03, D03, g03, i03, f03, S03, b03, v03, o03, H03, C03, w03, c03, P03, s03, M03;
    K5j = "a";
    K5j += "rrow";
    r5j = "f";
    r5j += "lu";
    r5j += "s";
    r5j += "h";
    l5j = "un";
    l5j += "def";
    l5j += "i";
    l5j += "ned";

    if (arguments.length === 9) {
      G03 = {
        ctx: arguments[0],
        x: arguments["1" * 1],
        top: arguments[2],
        width: arguments["3" - 0],
        height: arguments[4],
        radius: arguments[5],
        fill: arguments[6],
        stroke: arguments[7],
        edge: arguments[8]
      };
    }

    k03 = G03.stroke;
    D03 = G03.x;
    g03 = G03.top;
    i03 = G03.width;
    f03 = G03.height;
    S03 = G03.radius;
    b03 = G03.fill;
    y71.K71();
    v03 = G03.ctx;

    if (_typeof(k03) == l5j) {
      k03 = !![];
    }

    if (typeof S03 === "undefined") {
      S03 = 5;

      if (i03 < +"0") {
        S03 = -+"5";
      }
    }

    o03 = i03 < 0 ? S03 * -1 : S03;

    if (S03 && !R03) {
      y71.z7L(1);
      D03 = y71.W7L(D03, 1);
    }

    y71.i7L(8);
    H03 = y71.W7L(D03, S03);
    y71.z7L(8);
    C03 = y71.W7L(D03, i03);
    y71.z7L(8);
    w03 = y71.Q7L(g03, o03);
    y71.z7L(8);
    c03 = y71.Q7L(g03, f03);
    y71.i7L(1);
    P03 = y71.W7L(C03, S03);
    y71.z7L(1);
    s03 = y71.W7L(c03, o03);
    v03.beginPath();
    v03.moveTo(H03, g03);
    v03.lineTo(P03, g03);
    v03.quadraticCurveTo(C03, g03, C03, w03);
    v03.lineTo(C03, s03);
    v03.quadraticCurveTo(C03, c03, P03, c03);
    v03.lineTo(H03, c03);

    if (R03 == r5j) {
      v03.lineTo(D03, c03);
      v03.lineTo(D03, g03);
    } else if (R03 == K5j) {
      y71.z7L(1);
      v03.quadraticCurveTo(D03, c03, y71.Q7L(D03, S03), s03);
      M03 = i03 < 0 ? 1 : -1;
      y71.i7L(133);
      v03.lineTo(y71.W7L(2, D03, f03, M03), y71.W7L(f03, 2, g03, y71.i7L(49)));
      y71.z7L(1);
      v03.lineTo(y71.Q7L(D03, S03), w03);
      v03.quadraticCurveTo(D03, g03, H03, g03);
    } else {
      v03.quadraticCurveTo(D03, c03, D03, s03);
      v03.lineTo(D03, w03);
      v03.quadraticCurveTo(D03, g03, H03, g03);
    }

    v03.closePath();

    if (G03.backgroundColor) {
      v03.fillStyle = G03.backgroundColor;
    }

    if (k03) {
      v03.stroke();
    }

    if (b03) {
      v03.fill();
    }

    if (G03.txt) {
      x03.createLabel(G03);
    }
  };

  x03.ChartEngine.YAxis = function (E03) {
    for (var a03 in E03) {
      this[a03] = E03[a03];
    }

    y71.z71();

    if (!this.name) {
      this.name = x03.uniqueID();
    }

    if (this.position == "none") {
      this.width = 0;
    }
  };

  x03.extend(x03.ChartEngine.YAxis.prototype, {
    high: null,
    low: null,
    shadow: null,
    logHigh: null,
    logLow: null,
    logShadow: null,
    multiplier: null,
    bottom: null,
    top: null,
    height: null,
    left: null,
    width: null,
    renderers: [],
    studies: []
  }, !![]);
  x03.ChartEngine.YAxis.defaultShadowBreaks = [[1000, 2], [5, +"4"], [0.001, 8]];
  y71.i7L(17);
  x03.ChartEngine.YAxis.smallChartShadowBreaks = [[10, 2], [y71.Q7L(1279204160, "1"), 4]];
  x03.ChartEngine.YAxis.prototype.maxDecimalPlaces = null;
  x03.ChartEngine.YAxis.prototype.max = null;
  x03.ChartEngine.YAxis.prototype.min = null;
  x03.ChartEngine.YAxis.prototype.decimalPlaces = null;
  x03.ChartEngine.YAxis.prototype.idealTickSizePixels = null;
  x03.ChartEngine.YAxis.prototype.minimumPriceTick = null;
  x03.ChartEngine.YAxis.prototype.fractional = null;
  x03.ChartEngine.YAxis.prototype.displayBorder = !0;
  x03.ChartEngine.YAxis.prototype.displayGridLines = !![];
  x03.ChartEngine.YAxis.prototype.noDraw = null;
  x03.ChartEngine.YAxis.prototype.drawCurrentPriceLabel = !!1;
  x03.ChartEngine.YAxis.prototype.drawSeriesPriceLabels = !"";
  x03.ChartEngine.YAxis.prototype.drawPriceLabels = !0;
  x03.ChartEngine.YAxis.prototype.goldenRatioYAxis = !![];
  x03.ChartEngine.YAxis.prototype.yaxisLabelStyle = null;
  x03.ChartEngine.YAxis.prototype.justifyRight = null;
  x03.ChartEngine.YAxis.prototype.flipped = !!"";
  x03.ChartEngine.YAxis.prototype.textBackground = ![];
  x03.ChartEngine.YAxis.prototype.priceFormatter = null;
  y71.z71();
  y71.z7L(81);
  x03.ChartEngine.YAxis.prototype.bottomOffset = y71.W7L(1041784928, "0");
  x03.ChartEngine.YAxis.prototype.topOffset = 0;
  x03.ChartEngine.YAxis.prototype.initialMarginTop = 10;
  x03.ChartEngine.YAxis.prototype.initialMarginBottom = 10;
  x03.ChartEngine.YAxis.prototype.zoom = 0;
  x03.ChartEngine.YAxis.prototype.scroll = 0;
  x03.ChartEngine.YAxis.prototype.heightFactor = 1;
  Object.defineProperty(x03.ChartEngine.YAxis.prototype, "width", {
    configurable: !![],
    enumerable: !![],
    get: function get() {
      y71.K71();
      return this._dynamicWidth || this._width;
    },
    set: function set(l03) {
      y71.z71();
      this._width = l03;

      if (this._dynamicWidth < l03) {
        this._dynamicWidth = NaN;
      }
    }
  });
  x03.ChartEngine.YAxis.prototype.width = 60;
  y71.z7L(16);
  x03.ChartEngine.YAxis.prototype.smallScreenWidth = y71.W7L("50", 0);
  x03.ChartEngine.YAxis.prototype.textStyle = null;
  x03.ChartEngine.YAxis.prototype.position = null;
  x03.ChartEngine.YAxis.prototype.pretty = !!1;
  x03.ChartEngine.YAxis.prototype.increments = [1, +"2.5", 5];
  x03.ChartEngine.YAxis.prototype.prettySemiLog = !"";
  x03.ChartEngine.YAxis.prototype.shadowBreaks = x03.ChartEngine.YAxis.defaultShadowBreaks;

  x03.ChartEngine.YAxis.prototype.getYAxis = function (h03) {
    y71.z71();
    return this;
  };

  x03.ChartEngine.YAxis.prototype.isShared = function (r03, d03) {
    var u03, N03;
    u03 = this.studies.length;
    N03 = this.renderers.length;

    if (u03 > +"1") {
      return !!{};
    }

    if (N03 && u03) {
      return !!{};
    }

    if (!N03) {
      return !1;
    }

    if (N03 > 1 && d03) {
      return !!"1";
    }

    for (var z03 = N03 - ("1" - 0); z03 >= 0; z03--) {
      if (r03.chart.seriesRenderers[this.renderers[z03]].params.dependentOf) {
        N03--;
      }
    }

    y71.i7L(134);
    y71.z71();
    return y71.W7L(N03, 1);
  };

  x03.ChartEngine.YAxis.prototype.setBackground = function (J03, F03) {
    var Q03;

    if (!F03) {
      F03 = {};
    }

    if (!F03.color) {
      F03.color = "auto";
    }

    Q03 = [[this.left, this.top], [this.left, this.bottom], [this.left + this.width, this.bottom], [this.left + this.width, this.top]];
    x03.fillArea(J03, Q03, {
      color: F03.color,
      opacity: F03.opacity
    });
  };

  x03.ChartEngine.YAxis.prototype.setBreakpointWidth = function (W03) {
    var X03;

    if (!W03) {
      return;
    }

    var _x03$ChartEngine$YAxi = x03.ChartEngine.YAxis.prototype,
        A03 = _x03$ChartEngine$YAxi.width,
        e03 = _x03$ChartEngine$YAxi.smallScreenWidth;
    y71.K71();
    y71.z7L(113);
    X03 = y71.W7L(W03, "break-sm");
    this.width = X03 ? e03 : A03;
  };

  x03.ChartEngine.prototype.getLabelOffsetInPixels = function (m53, t53) {
    y71.K71();
    var H5j, Z03, O5j, p03, B53;
    H5j = "roundRectAr";
    H5j += "r";
    H5j += "o";
    H5j += "w";
    Z03 = !this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars;

    if (this.yaxisLabelStyle == H5j && !(Z03 && this.extendLastTick && m53.yaxisPaddingRight !== 0)) {
      O5j = "stx";
      O5j += "_ya";
      O5j += "xis";
      p03 = 3;
      y71.i7L(8);
      var R4r = y71.W7L(0, 2);
      B53 = this.getCanvasFontSize(O5j) + p03 * R4r;
      y71.i7L(18);
      return y71.Q7L(0.66, B53);
    }

    return +"0";
  };

  x03.ChartEngine.prototype.flipChart = function (K53) {
    var k5j;
    k5j = "layou";
    k5j += "t";

    if (this.layout.flipped == K53) {
      return;
    }

    this.layout.flipped = K53;
    this.chart.yAxis.flipped = K53;
    this.changeOccurred(k5j);
    this.draw();
  };

  x03.ChartEngine.prototype.calculateYAxisMargins = function (O53) {
    if (O53.heightFactor) {
      y71.z7L(1);
      var l4r = y71.W7L(13, 12);
      O53.zoom = O53.height * (l4r - O53.heightFactor);
    }

    O53.zoom += O53.initialMarginTop + O53.initialMarginBottom;
    y71.i7L(135);
    var r4r = y71.Q7L(20, 4, 12, 94);
    O53.scroll = (O53.initialMarginTop - O53.initialMarginBottom) / r4r;

    if (O53.zoom > O53.height) {
      y71.z7L(81);
      O53.zoom = y71.Q7L(655362624, "0");
      O53.scroll = 0;
    }
  };

  x03.ChartEngine.prototype.resetDynamicYAxis = function (L53) {
    var j53, I53, q53;

    if (this.runPrepend("resetDynamicYAxis", arguments)) {
      return;
    }

    j53 = !{};

    for (var T53 in this.panels) {
      I53 = this.panels[T53];
      if (L53 && L53.chartName && I53.chart.name !== L53.chartName) continue;
      if (!I53.yaxisLHS || !I53.yaxisRHS) continue;
      q53 = I53.yaxisLHS.concat(I53.yaxisRHS);

      for (var x53 = "0" & 2147483647; x53 < q53.length; x53++) {
        if (q53[x53]._dynamicWidth) {
          q53[x53]._dynamicWidth = NaN;
          j53 = !!"1";
        }
      }
    }

    if (j53 && (!L53 || !L53.noRecalculate)) {
      this.calculateYAxisPositions();
    }

    this.runAppend("resetDynamicYAxis", arguments);
  };

  x03.ChartEngine.prototype.notifyBreakpoint = function (U53) {
    var X5j, u5j, A5U, x5U, s5U, V53, Y53, G53;
    X5j = "br";
    X5j += "ea";
    X5j += "k-";
    X5j += "sm";
    u5j = "b";
    u5j += "r";
    u5j += "eak-m";
    u5j += "d";

    if (this.chart.breakpoint === U53) {
      return;
    }

    if (!["break-lg", u5j, X5j].includes(U53)) {
      return;
    }

    A5U = -506638153;
    x5U = -1473293244;
    s5U = 2;

    for (var T5U = 1; y71.V6U(T5U.toString(), T5U.toString().length, 81628) !== A5U; T5U++) {
      var n53 = this.chart;
      s5U += 2;
    }

    if (y71.f6U(s5U.toString(), s5U.toString().length, 64794) !== x5U) {
      var n53 = this.chart;
    }

    var _n2 = n53,
        v53 = _n2.dynamicYAxis;
    this.clearStyles();
    n53.breakpoint = U53;

    for (var D53 in this.panels) {
      V53 = this.panels[D53];
      Y53 = V53.yaxisRHS.concat(V53.yaxisLHS);

      for (var y53 = "0" ^ 0; y53 < Y53.length; y53++) {
        G53 = Y53[y53];
        G53.setBreakpointWidth(U53);
      }
    }

    if (v53) {
      this.resetDynamicYAxis({
        chartName: n53.name
      });
    }
  };

  x03.ChartEngine.prototype.adjustYAxisHeightOffset = function (S53, g53) {
    var C53, c53, Y5j, Z5j, i53;
    C53 = g53.topOffset;
    c53 = g53.bottomOffset;

    if (C53 + c53 > S53.height) {
      Y5j = "The";
      Y5j += " sum of yAxis.topOffset and yAxis.bottomOffset cannot be greater than the panel height. Both values will be reset to 0.";
      console.log(Y5j);
      g53.bottomOffset = 0;
      g53.topOffset = 0;
    }

    if (!this.xaxisHeight && this.xaxisHeight !== 0) {
      Z5j = "stx";
      Z5j += "_x";
      Z5j += "axi";
      Z5j += "s";
      y71.i7L(8);
      var K4r = y71.W7L(0, 4);
      this.xaxisHeight = this.getCanvasFontSize(Z5j) + K4r;

      if (this.chart.xAxis.displayBorder || this.axisBorders) {
        this.xaxisHeight += 3;
      }
    }

    y71.z71();
    i53 = this.xAxisAsFooter && S53.bottom > this.chart.canvasHeight - this.xaxisHeight || !this.xAxisAsFooter && S53 == this.chart.panel;

    if (i53) {
      c53 += this.xaxisHeight;
    }

    g53.top = S53.top + C53;
    g53.bottom = S53.bottom - c53;
  };

  x03.ChartEngine.prototype.plotYAxisGrid = function (f53) {
    var k53, H53;

    if (this.runPrepend("plotYAxisGrid", arguments)) {
      return;
    }

    k53 = this.getBackgroundCanvas().context;
    H53 = f53.yAxis;

    if (H53.yAxisPlotter) {
      H53.yAxisPlotter.draw(k53, "grid");
    }

    this.runAppend("plotYAxisGrid", arguments);
  };

  x03.ChartEngine.prototype.plotYAxisText = function (o53) {
    var J8j, B8j, o8j, w53, R53, s53;
    J8j = "le";
    J8j += "ft";
    B8j = "m";
    B8j += "i";
    B8j += "ddle";
    y71.K71();
    o8j = "s";
    o8j += "tx_y";
    o8j += "axis";

    if (this.runPrepend("plotYAxisText", arguments)) {
      return;
    }

    w53 = this.getBackgroundCanvas().context;
    this.canvasFont(o8j, w53);
    this.canvasColor("stx_yaxis", w53);
    w53.textBaseline = B8j;
    R53 = o53.yaxisLHS;

    function P53(b53) {
      var k5U, u5U, X5U, c8j;

      if (!b53.yAxisPlotter) {
        return;
      }

      k5U = -233285137;
      y71.z7L(18);
      u5U = y71.W7L(1, "1595157499");
      y71.i7L(17);
      X5U = y71.W7L(814007392, "2");

      for (var Z5U = "1" - 0; y71.f6U(Z5U.toString(), Z5U.toString().length, +"85420") !== k5U; Z5U++) {
        if (b53.noDraw && ~b53.width) {
          return;
        }

        if (b53.justifyRight) {
          w53.textAlign = "left";
        } else if (b53.justifyRight !== !![]) {
          w53.textAlign = "left";
        }

        X5U += 2;
      }

      if (y71.f6U(X5U.toString(), X5U.toString().length, 3786) !== u5U) {
        c8j = "l";
        c8j += "e";
        c8j += "f";
        c8j += "t";

        if (b53.noDraw || +b53.width) {
          return;
        }

        if (b53.justifyRight) {
          w53.textAlign = "left";
        } else if (b53.justifyRight == !!0) {
          w53.textAlign = c8j;
        }
      }

      if (b53.noDraw || !b53.width) {
        return;
      }

      if (b53.justifyRight) {
        w53.textAlign = "right";
      } else if (b53.justifyRight === !{}) {
        w53.textAlign = "left";
      }

      b53.yAxisPlotter.draw(w53, "text");
    }

    for (s53 = 0; s53 < R53.length; s53++) {
      w53.textAlign = "right";
      P53(R53[s53]);
    }

    R53 = o53.yaxisRHS;

    for (s53 = +"0"; s53 < R53.length; s53++) {
      w53.textAlign = "left";
      P53(R53[s53]);
    }

    w53.textAlign = J8j;
    w53.textBaseline = "alphabetic";
    this.runAppend("plotYAxisText", arguments);
  };

  x03.ChartEngine.prototype.decimalPlacesFromPriceTick = function (M53) {
    if (M53 < 0.0001) {
      return 8;
    }

    if (M53 < 0.01) {
      return 4;
    }

    if (M53 < 0.1) {
      return +"2";
    }

    if (M53 < 1) {
      return 1;
    }

    return +"0";
  };

  x03.ChartEngine.prototype.formatYAxisPrice = function (E53, h53, d53, u53, F53) {
    var g8j, l53, a53, r53, N53, z53;
    g8j = "und";
    g8j += "ef";
    g8j += "i";
    g8j += "ned";

    if (E53 === null || _typeof(E53) == g8j || isNaN(E53)) {
      return "";
    }

    if (!h53) {
      h53 = this.chart.panel;
    }

    l53 = u53 ? u53 : h53.yAxis;
    a53 = d53;

    if (!a53 && a53 !== 0) {
      a53 = l53.printDecimalPlaces;
    }

    if (!a53 && a53 !== 0) {
      a53 = this.decimalPlacesFromPriceTick(l53.priceTick);
    }

    r53 = l53 == h53.chart.yAxis ? 20000 : 1000;

    if (l53.priceTick >= r53) {
      E53 = E53.toFixed(a53);
      return x03.condenseInt(E53);
    }

    N53 = this.internationalizer;

    if (N53 && F53 !== !{}) {
      z53 = N53.priceFormatters.length;

      if (a53 >= z53) {
        y71.i7L(1);
        a53 = y71.W7L(z53, 1);
      }

      E53 = N53.priceFormatters[a53].format(E53);
    } else {
      E53 = E53.toFixed(a53);
      ;
    }

    return E53;
  };

  x03.ChartEngine.prototype.calculateYAxisRange = function (W53, Q53, J53, A53) {
    var p53, e53, X53, m93, t93, B93, Z53, K93, O93;

    if (J53 == Number.MAX_VALUE) {
      J53 = 0;
      A53 = 0;
    }

    p53 = W53.height;
    e53 = null;
    X53 = null;
    this.adjustYAxisHeightOffset(W53, Q53);
    y71.z71();
    Q53.height = Q53.bottom - Q53.top;
    m93 = Math.round(Math.abs(p53 / ("5" | 4)));

    if (Q53.zoom >= 0 && p53 - Math.abs(Q53.scroll) < m93) {
      y71.z7L(1);
      var H4r = y71.W7L(14, 15);
      y71.z7L(9);
      var O4r = y71.Q7L(8, 24, 17);
      Q53.scroll = (p53 - m93) * (Q53.scroll < 0 ? H4r : O4r);
    }

    t93 = W53.chart.name === W53.name && W53.yAxis.name === Q53.name;
    B93 = J53 > 0 && (this.layout.semiLog || this.layout.chartScale == "log") && !W53.chart.isComparison && this.layout.aggregationType != "pandf";

    if (J53 || J53 === ("0" & 2147483647)) {
      if (A53 - J53 === 0) {
        Z53 = Math.pow(+"10", -(J53.toString() + ".").split(336.86 === (8050, 926.09) ? ("k", 780.56) : (36.86, 391.67) <= (+"9973", 9658) ? (4090, 669.32) !== (793, "823.52" * 1) ? "." : ("V", 580.51) : (!!0, !0))[1].length);

        if (Z53 == 1) {
          Z53 = 100;
        }

        y71.i7L(8);
        e53 = y71.W7L(J53, Z53);
        y71.z7L(1);
        X53 = y71.Q7L(J53, Z53);
      } else {
        if (t93 && B93 && (A53 || A53 === 0)) {
          K93 = Math.log(J53) / Math.LN10;
          O93 = Math.log(A53) / Math.LN10;
          e53 = Math.pow(10, O93);
          X53 = Math.pow(10, K93);
        } else {
          e53 = A53;
          X53 = J53;
        }
      }

      Q53.high = e53;
      Q53.low = X53;
    }

    if (Q53.max || Q53.max === 0) {
      Q53.high = Q53.max;
    }

    if (Q53.min || Q53.min === 0) {
      Q53.low = Q53.min;
    }

    Q53.shadow = Q53.high - Q53.low;

    if (t93) {
      if (Q53.semiLog != B93) {
        this.clearPixelCache();
        Q53.semiLog = B93;
      }

      Q53.flipped = this.layout.flipped;
    }
  };

  x03.ChartEngine.prototype.renderYAxis = function (n93) {
    var h8j, q93, j93, x93, I93, j8j, i8j, T93, U93, e8j, y93;
    h8j = "re";
    h8j += "nderYAxis";

    if (this.runPrepend(h8j, arguments)) {
      return;
    }

    if (this.checkLogScale()) {
      throw new Error("reboot draw");
    }

    this.rendererAction(n93, "yAxis");

    var _this$getBackgroundCa = this.getBackgroundCanvas(n93),
        L93 = _this$getBackgroundCa.context;

    y71.z71();

    for (var V93 in this.panels) {
      q93 = this.panels[V93];
      if (q93.chart != n93) continue;
      j93 = q93.yaxisRHS.concat(q93.yaxisLHS);

      for (x93 = +"0"; x93 < j93.length; x93++) {
        j8j = "S";
        j8j += "tudies.d";
        j8j += "oPostDr";
        j8j += "awYAxis";
        i8j = "Studies.";
        i8j += "getYAxisParameters";
        I93 = j93[x93];
        this.calculateYAxisRange(q93, I93, I93.lowValue, I93.highValue);
        T93 = x03.getFn(i8j, {})(this, I93);
        T93.yAxis = I93;
        this.createYAxis(q93, T93);
        this.drawYAxis(q93, T93);
        x03.getFn(j8j)(this, I93);
      }

      for (x93 = 0; x93 < j93.length; x93++) {
        I93 = j93[x93];

        if (I93.dropzone) {
          U93 = this.canvasStyle("stx-subholder dropzone left");

          if (U93) {
            L93.strokeStyle = U93.borderLeftColor;
            L93.lineWidth = parseFloat(U93.borderLeftWidth);
            L93.beginPath();

            if (I93.dropzone == "all") {
              L93.strokeRect(I93.left, I93.top, I93.width, I93.height);
            } else {
              e8j = "le";
              e8j += "f";
              e8j += "t";
              y93 = I93.left + (I93.dropzone == e8j ? 0 : I93.width);
              L93.moveTo(y93, I93.top);
              L93.lineTo(y93, I93.top + I93.height);
              L93.stroke();
            }
          }
        }
      }

      if (this.displayDragOK) {
        this.displayDragOK(!![]);
      }
    }

    this.runAppend("renderYAxis", arguments);
  };

  x03.ChartEngine.prototype.updateFloatHRLabel = function (v93) {
    var S93, c93, C93, Y93, D93, G93, i93;

    if (!this.floatCanvas) {
      return;
    }

    S93 = v93.yaxisLHS.concat(v93.yaxisRHS);
    c93 = this.crossYActualPos ? this.crossYActualPos : this.cy;

    if (this.floatCanvas.isDirty) {
      x03.clearCanvas(this.floatCanvas, this);
    }

    if (this.controls.crossX && this.controls.crossX.style.display == "none") {
      return;
    }

    if (this.controls.crossY) {
      C93 = v93.width;

      if (this.yaxisLabelStyle == "roundRectArrow") {
        C93 -= 7;
      }

      this.controls.crossY.style.left = v93.left + "px";
      y71.z7L(8);
      this.controls.crossY.style.width = y71.Q7L(C93, "px");
    }

    for (var g93 = 0; g93 < S93.length; g93++) {
      Y93 = S93[g93];
      D93 = this.transformedPriceFromPixel(c93, v93, Y93);
      if (isNaN(D93)) continue;
      if ((Y93.min || Y93.min === "0" >> 600682080) && D93 < Y93.min) continue;
      if ((Y93.max || Y93.max === 0) && D93 > Y93.max) continue;
      G93 = null;

      if (Y93 !== v93.chart.yAxis) {
        G93 = this.decimalPlacesFromPriceTick(Y93.priceTick);

        if (Y93.decimalPlaces || Y93.decimalPlaces === 0) {
          G93 = Y93.decimalPlaces;
        }
      }

      if (Y93.priceFormatter) {
        D93 = Y93.priceFormatter(this, v93, D93, G93);
      } else {
        D93 = this.formatYAxisPrice(D93, v93, G93, Y93);
      }

      i93 = this.canvasStyle("stx-float-price");
      this.createYAxisLabel(v93, D93, c93, i93.backgroundColor, i93.color, this.floatCanvas.context, Y93);
      this.floatCanvas.isDirty = !0;
    }
  };

  x03.ChartEngine.prototype.whichYAxis = function (k93, f93, s93) {
    var w8j, o93, R93, H93, D0j, a0j, G0j;
    w8j = "und";
    y71.z71();
    w8j += "efi";
    w8j += "ned";

    if (typeof f93 === "undefined") {
      f93 = this.cx;
    }

    if (_typeof(s93) === w8j) {
      s93 = this.cy;
    }

    o93 = this.whichPanel(s93);

    if (k93 && k93 == o93) {
      R93 = k93.yaxisLHS.concat(k93.yaxisRHS);

      for (var w93 = 0; w93 < R93.length; w93++) {
        H93 = R93[w93];

        if (H93.left <= f93 && H93.left + H93.width >= f93) {
          return H93;
        }
      }
    }

    D0j = 930488216;
    a0j = 1856552586;
    G0j = 2;

    for (var M0j = +"1"; y71.V6U(M0j.toString(), M0j.toString().length, +"21712") !== D0j; M0j++) {
      return null;
    }

    if (y71.V6U(G0j.toString(), G0j.toString().length, 62296) !== a0j) {
      return 1;
    }
  };

  x03.ChartEngine.prototype.yaxisMatches = function (P93, b93) {
    y71.K71();

    if (!P93 || !P93.getYAxis || !b93 || !(b93 instanceof x03.ChartEngine.YAxis)) {
      return ![];
    }

    return P93.getYAxis(this).name == b93.name;
  };

  x03.ChartEngine.prototype.createYAxisLabel = function (u93, J93, N93, Z93, p93, W93, A93) {
    var C8j, M93, z93, E93, l93, B43, r93, h93, a93, d93, F93, e93, Q93, X93;
    C8j = "s";
    C8j += "tx_";
    C8j += "yaxis";

    if (u93.yAxis.drawPriceLabels === ![] || u93.yAxis.noDraw) {
      return;
    }

    M93 = A93 ? A93 : u93.yAxis;

    if (M93.noDraw || !M93.width) {
      return;
    }

    z93 = W93 ? W93 : this.chart.context;
    E93 = 3;
    y71.z7L(9);
    var k4r = y71.W7L(5, 16, 13);
    l93 = this.getCanvasFontSize("stx_yaxis") + E93 * k4r;
    this.canvasFont(C8j, z93);
    B43 = M93.displayBorder;
    r93 = this.drawBorders ? 3 : +"0";

    try {
      y71.z7L(65);
      var u4r = y71.Q7L(6, 22, 8, 6);
      h93 = z93.measureText(J93).width + r93 + E93 * u4r;
    } catch (m43) {
      h93 = M93.width;
    }

    y71.z7L(136);
    var X4r = y71.W7L(19, 8, 15, 9, 1);
    a93 = M93.left - E93 + X4r;

    if (M93.width < 0) {
      a93 += M93.width - h93;
    }

    y71.z7L(52);
    d93 = y71.Q7L(r93, E93, a93);
    F93 = +"3";
    e93 = M93.position === null ? u93.chart.yAxis.position : M93.position;

    if (e93 === "left") {
      y71.z7L(126);
      var Y4r = y71.W7L(133, 1, 51, 3, 8);
      a93 = M93.left + M93.width + E93 - Y4r;
      y71.z7L(20);
      h93 = y71.W7L(1, h93);

      if (M93.width < +"0") {
        a93 -= M93.width + h93;
      }

      y71.z7L(4);
      d93 = y71.Q7L(E93, r93, a93);
      F93 = -3;
      z93.textAlign = "right";
    }

    if (N93 + l93 / 2 > M93.bottom) {
      N93 = M93.bottom - l93 / +"2";
    }

    if (N93 - l93 / 2 < M93.top) {
      y71.i7L(9);
      var Z4r = y71.Q7L(19, 51, 34);
      N93 = M93.top + l93 / Z4r;
    }

    if (typeof x03[this.yaxisLabelStyle] == "undefined") {
      this.yaxisLabelStyle = "roundRectArrow";
      ;
    }

    Q93 = this.yaxisLabelStyle;

    if (M93.yaxisLabelStyle) {
      Q93 = M93.yaxisLabelStyle;
    }

    X93 = {
      ctx: z93,
      x: a93,
      y: N93,
      top: N93 - l93 / 2,
      width: h93,
      height: l93,
      radius: F93,
      backgroundColor: Z93,
      fill: !![],
      stroke: ![],
      margin: {
        left: d93 - a93,
        top: 1
      },
      txt: J93,
      color: p93
    };
    x03[Q93](X93);
  };

  x03.ChartEngine.prototype.drawCurrentHR = function () {
    var z8j, T43, V43, U43, G43, q8j, p8j, t43, K43, L43, O43, x43, Y43, q43, n43, I43, v43, F8j, D43, j43, y43, I8j;
    z8j = "draw";
    z8j += "Cu";
    z8j += "rrentHR";

    if (this.runPrepend(z8j, arguments)) {
      return;
    }

    U43 = this.mainSeriesRenderer || {};

    if (U43.noCurrentHR) {
      return;
    }

    G43 = U43.highLowBars;

    for (var g43 in this.charts) {
      q8j = "d";
      q8j += "ataS";
      q8j += "eg";
      q8j += "ment";
      p8j = "dataS";
      p8j += "e";
      p8j += "t";
      t43 = this.charts[g43];
      K43 = t43.panel;
      L43 = K43.yAxis;
      if (K43.hidden) continue;
      if (L43.drawCurrentPriceLabel === !1 || L43.noDraw) continue;
      if (!U43.params) continue;
      O43 = L43.whichSet;

      if (!O43) {
        O43 = p8j;
      }

      if (this.isHistoricalModeSet && O43 !== "dataSegment") continue;
      x43 = t43[O43].length;
      Y43 = this.layout.candleWidth;

      if (O43 == q8j) {
        while (x43 > (t43.width - this.micropixels + Y43 / 2 + 1) / Y43) {
          x43--;
        }
      }

      if (x43 && t43[O43][x43 - 1]) {
        q43 = t43.defaultPlotField;

        if (!q43 || G43) {
          q43 = "Close";
        }

        do {
          n43 = t43[O43][--x43][q43];
          I43 = n43;
          if (x43 === 0) break;
        } while (I43 === null || I43 === undefined);

        if (O43 == "dataSet" && t43.currentQuote) {
          I43 = t43.currentQuote[q43];
        } else if (t43[O43].length >= 2) {
          y71.z7L(1);
          v43 = t43[O43][y71.W7L(x43, 1)];

          if (v43) {
            n43 = v43[q43];
          }
        }

        if (I43 < n43) {
          F8j = "stx_curr";
          F8j += "ent_hr_down";
          T43 = this.canvasStyle("stx_current_hr_down").backgroundColor;
          V43 = this.canvasStyle(F8j).color;
        } else {
          T43 = this.canvasStyle("stx_current_hr_up").backgroundColor;
          V43 = this.canvasStyle("stx_current_hr_up").color;
        }

        if (t43.transformFunc) {
          I43 = t43.transformFunc(this, t43, I43);
        }

        j43 = Math.max(K43.yAxis.printDecimalPlaces, K43.chart.decimalPlaces);

        if (L43.maxDecimalPlaces || L43.maxDecimalPlaces === 0) {
          j43 = Math.min(j43, L43.maxDecimalPlaces);
        }

        if (L43.priceFormatter) {
          D43 = L43.priceFormatter(this, K43, I43, j43);
        } else {
          D43 = this.formatYAxisPrice(I43, K43, j43);
        }

        y43 = this.pixelFromTransformedValue(I43, K43);
        this.createYAxisLabel(K43, D43, y43, T43, V43);

        if (this.preferences.currentPriceLine === !!"1" && this.isHome()) {
          I8j = "destination";
          I8j += "-over";
          this.plotLine(K43.left, K43.right, y43, y43, T43, "line", K43.chart.context, K43, {
            pattern: "dashed",
            lineWidth: 1,
            opacity: 0.8,
            globalCompositeOperation: I8j
          });
        }
      }
    }

    this.runAppend("drawCurrentHR", arguments);
  };

  x03.ChartEngine.prototype.getYAxisByName = function (S43, C43) {
    var d8j, c43;
    d8j = "st";
    d8j += "ring";

    if (_typeof(S43) == d8j) {
      S43 = this.panels[S43];
    }

    y71.z71();

    if (!S43 || !C43) {
      return undefined;
    }

    if (C43 === S43.yAxis.name) {
      return S43.yAxis;
    }

    for (c43 = "0" - 0; S43.yaxisLHS && c43 < S43.yaxisLHS.length; c43++) {
      if (S43.yaxisLHS[c43].name === C43) {
        return S43.yaxisLHS[c43];
      }
    }

    for (c43 = 0; S43.yaxisRHS && c43 < S43.yaxisRHS.length; c43++) {
      if (S43.yaxisRHS[c43].name === C43) {
        return S43.yaxisRHS[c43];
      }
    }

    return undefined;
  };

  x03.ChartEngine.prototype.getYAxisByField = function (w43, s43) {
    var R43, k43, P43, i43, v8j, H43, f43;
    y71.z71();

    if (s43) {
      for (R43 in this.layout.studies) {
        k43 = this.layout.studies[R43];
        if (k43.panel != w43.name) continue;

        if (k43.outputMap && k43.outputMap.hasOwnProperty(s43)) {
          return k43.getYAxis(this);
        }
      }

      for (R43 in this.chart.seriesRenderers) {
        i43 = this.chart.seriesRenderers[R43];

        for (var o43 = 0; o43 < i43.seriesParams.length; o43++) {
          v8j = "-";
          v8j += "-";
          v8j += ">";
          if (i43.params.panel != w43.name) continue;
          H43 = i43.seriesParams[o43];
          f43 = H43.field;

          if (!f43 && !i43.highLowBars) {
            f43 = this.defaultPlotField || "Close";
          }

          if (H43.symbol && H43.subField) {
            f43 += v8j + H43.subField;
          }

          if (s43 == f43) {
            return i43.params.yAxis || w43.yAxis;
          }

          if (H43.field && H43.field == s43.split("-->")[0]) {
            P43 = i43.params.yAxis || w43.yAxis;
          }
        }
      }

      if (P43) {
        return P43;
      }
    }

    return undefined;
  };

  x03.ChartEngine.prototype.deleteYAxisIfUnused = function (b43, a43) {
    var A8j, h43, M43, E43;
    A8j = "st";
    A8j += "ri";
    A8j += "n";
    A8j += "g";

    if (_typeof(b43) == A8j) {
      b43 = this.panels[b43];
    }

    if (!a43 || !b43) {
      return;
    }

    for (var l43 = 0; l43 < a43.renderers.length; l43++) {
      h43 = this.chart.seriesRenderers[a43.renderers[l43]];

      if (h43 && h43.params.panel == b43.name) {
        return;
      }
    }

    if (a43.name === b43.yAxis.name) {
      if (b43.yaxisRHS.length + b43.yaxisLHS.length === 1) {
        return;
      }
    }

    for (M43 = 0; b43.yaxisRHS && M43 < b43.yaxisRHS.length; M43++) {
      if (b43.yaxisRHS[M43] === a43) {
        b43.yaxisRHS[M43] = null;
      } else if (!E43) {
        E43 = b43.yaxisRHS[M43];
      }
    }

    for (M43 = "0" ^ 0; b43.yaxisLHS && M43 < b43.yaxisLHS.length; M43++) {
      if (b43.yaxisLHS[M43] === a43) {
        b43.yaxisLHS[M43] = null;
      } else if (!E43) {
        E43 = b43.yaxisLHS[M43];
      }
    }

    b43.yaxisRHS = b43.yaxisRHS.filter(N43);

    function N43(z43) {
      y71.i7L(98);
      return y71.Q7L(null, z43);
    }

    b43.yaxisLHS = b43.yaxisLHS.filter(N43);

    if (E43 && a43.name === b43.yAxis.name) {
      b43.yAxis = E43;
    }

    this.calculateYAxisPositions();
  };

  x03.ChartEngine.prototype.addYAxis = function (u43, r43) {
    var V8j, n8j, x8j, s8j, d43, Q43, F43;
    V8j = "l";
    V8j += "ef";
    V8j += "t";
    n8j = "r";
    n8j += "i";
    n8j += "ght";
    x8j = "s";
    x8j += "tr";
    x8j += "ing";

    if (_typeof(u43) == x8j) {
      u43 = this.panels[u43];
    }

    if (!r43 || !u43) {
      return;
    }

    if (!u43.yaxisLHS) {
      s8j = "righ";
      s8j += "t";
      u43.yaxisLHS = [];
      u43.yaxisRHS = [];

      if (u43.yAxis.position == "left" || u43.yAxis.position != s8j && u43.chart.panel.yAxis.position == "left") {
        u43.yaxisLHS.push(u43.yAxis);
      } else {
        u43.yaxisRHS.push(u43.yAxis);
      }
    }

    Q43 = [];
    F43 = u43.yaxisLHS;

    for (d43 = F43.length - ("1" ^ 0); d43 >= 0; d43--) {
      if (F43[d43].name === r43.name) {
        if (r43.position != "right") {
          return F43[d43];
        }

        Q43 = F43.splice(d43, 1);
      }
    }

    F43 = u43.yaxisRHS;

    for (d43 = F43.length - 1; d43 >= 0; d43--) {
      if (F43[d43].name === r43.name) {
        if (r43.position != "left") {
          return F43[d43];
        }

        Q43 = F43.splice(d43, 1);
      }
    }

    if (r43.position === "left" || r43.position != n8j && u43.chart.panel.yAxis.position == V8j) {
      u43.yaxisLHS.unshift(r43);
    } else {
      u43.yaxisRHS.push(r43);
    }

    if (r43.position !== "none") {
      r43.setBreakpointWidth(this.chart.breakpoint);
    }

    r43.height = u43.yAxis.height;
    r43.idealTickSizePixels = null;

    if (Q43[0] == u43.yAxis) {
      u43.yAxis = r43;
    }

    this.calculateYAxisMargins(r43);
    return r43;
  };

  x03.ChartEngine.prototype.calculateYAxisPositions = function () {
    var B2H, I2H, U2H, t2H, K2H, W43, e43, J43, A43, P8j, f8j, X43, Z43, p43, L2H, x2H, N8j, j2H, D8j, T2H, m2H, a8j;
    B2H = [];

    for (var O2H in this.charts) {
      if (this.charts[O2H].hidden || this.charts[O2H].panel.hidden) continue;
      B2H.push(O2H);
    }

    for (var q2H in this.panels) {
      I2H = this.panels[q2H];
      if (I2H.name === I2H.chart.name || I2H.hidden) continue;
      B2H.push(q2H);
    }

    U2H = this.drawBorders ? 3 : 0;
    y71.K71();
    t2H = 0;
    K2H = +"0";

    for (e43 = "0" >> 1912098464; e43 < B2H.length; e43++) {
      P8j = "rig";
      P8j += "h";
      P8j += "t";
      f8j = "n";
      f8j += "one";
      J43 = this.panels[B2H[e43]];
      if (!J43) continue;

      if (!J43.yaxisLHS) {
        J43.yaxisLHS = [];
        J43.yaxisRHS = [];
      }

      X43 = J43.yaxisLHS;
      Z43 = J43.yaxisRHS;
      p43 = J43.yAxis.position;

      if (!p43 || p43 == f8j) {
        p43 = J43.chart.yAxis.position || P8j;
      }

      if (!X43.length && !Z43.length) {
        if (p43 == "left") {
          X43.push(J43.yAxis);
        } else {
          Z43.push(J43.yAxis);
        }
      }

      L2H = [];
      x2H = [];

      for (W43 = X43.length - 1; W43 >= 0; W43--) {
        if (X43[W43].position == "right" || X43[W43].position != "left" && p43 == "right") {
          L2H = L2H.concat(X43.splice(W43, 1));
        }
      }

      for (W43 = Z43.length - 1; W43 >= 0; W43--) {
        N8j = "r";
        N8j += "ig";
        N8j += "h";
        N8j += "t";

        if (Z43[W43].position == "left" || Z43[W43].position != N8j && p43 == "left") {
          x2H = x2H.concat(Z43.splice(W43, +"1"));
        }
      }

      J43.yaxisLHS = x2H.concat(X43);
      J43.yaxisRHS = Z43.concat(L2H);

      if (!J43.yAxis.width && J43.yAxis.width !== 0) {
        J43.yAxis.width = this.yaxisWidth;
      }

      J43.yaxisTotalWidthRight = 0;
      J43.yaxisTotalWidthLeft = +"0";
      j2H = J43.yaxisLHS.concat(J43.yaxisRHS);

      for (W43 = 0; W43 < j2H.length; W43++) {
        D8j = "le";
        D8j += "f";
        D8j += "t";
        A43 = j2H[W43];
        if (A43.noDraw || !A43.width) continue;

        if (A43.position == D8j || p43 == "left" && !A43.position) {
          J43.yaxisTotalWidthLeft += A43.width;
        } else {
          J43.yaxisTotalWidthRight += A43.width;
        }
      }

      if (J43.yaxisTotalWidthLeft > t2H) {
        t2H = J43.yaxisTotalWidthLeft;
      }

      if (J43.yaxisTotalWidthRight > K2H) {
        K2H = J43.yaxisTotalWidthRight;
      }
    }

    for (e43 = +"0"; e43 < B2H.length; e43++) {
      J43 = this.panels[B2H[e43]];
      if (!J43) continue;
      T2H = J43.name === J43.chart.name;
      m2H = t2H;

      for (W43 = J43.yaxisLHS.length - 1; W43 >= +"0"; W43--) {
        A43 = J43.yaxisLHS[W43];
        if (A43.noDraw) continue;
        m2H -= A43.width;
        A43.left = m2H;
      }

      m2H = this.width - K2H;

      for (W43 = 0; W43 < J43.yaxisRHS.length; W43++) {
        A43 = J43.yaxisRHS[W43];
        if (A43.noDraw) continue;
        A43.left = m2H;
        m2H += A43.width;
      }

      if (typeof this.yaxisLeft != "undefined") {
        J43.chart.yaxisPaddingRight = this.yaxisLeft;
      }

      J43.yaxisCalculatedPaddingRight = K2H;

      if (J43.chart.yaxisPaddingRight || J43.chart.yaxisPaddingRight === "0" * 1) {
        J43.yaxisCalculatedPaddingRight = J43.chart.yaxisPaddingRight;
      }

      J43.yaxisCalculatedPaddingLeft = t2H;

      if (J43.chart.yaxisPaddingLeft || J43.chart.yaxisPaddingLeft === +"0") {
        J43.yaxisCalculatedPaddingLeft = J43.chart.yaxisPaddingLeft;
      }

      if (T2H || J43.chart.panel.hidden) {
        J43.left = J43.yaxisCalculatedPaddingLeft;
        J43.right = this.width - J43.yaxisCalculatedPaddingRight;
      } else {
        J43.left = J43.chart.panel.left;
        J43.right = J43.chart.panel.right;
      }

      J43.width = J43.right - J43.left;

      if (J43.handle) {
        a8j = "p";
        a8j += "x";
        J43.handle.style.left = J43.left + a8j;
        J43.handle.style.width = J43.width + "px";
      }

      if (T2H || J43.chart.panel.hidden) {
        J43.chart.panel.left = J43.chart.left = J43.left;
        J43.chart.panel.right = J43.chart.right = J43.right;
        J43.chart.panel.width = J43.chart.width = Math.max(J43.right - J43.left, 0);
        ;
      }
    }

    this.setCandleWidth(this.layout.candleWidth);
    this.adjustPanelPositions();
    ;
  };

  x03.ChartEngine.prototype.getYAxisCurrentPosition = function (V2H, Y2H) {
    var y2H, G8j;

    if (!V2H.width) {
      return "none";
    }

    y71.K71();
    y2H = Y2H.yaxisLHS;

    for (var n2H = 0; n2H < y2H.length; n2H++) {
      G8j = "l";
      G8j += "e";
      G8j += "f";
      G8j += "t";

      if (y2H[n2H].name == V2H.name) {
        return G8j;
      }
    }

    return "right";
  };

  x03.ChartEngine.prototype.setYAxisPosition = function (v2H, D2H) {
    v2H.position = D2H;

    if (D2H === "none") {
      v2H.width = 0;
    } else {
      v2H.setBreakpointWidth(this.chart.breakpoint);
    }

    this.calculateYAxisPositions();
    this.draw();
  };

  x03.ChartEngine.prototype.electNewYAxisOwner = function (g2H) {
    var G2H, c2H;
    G2H = g2H.studies[0];

    if (!G2H || G2H == g2H.name) {
      G2H = g2H.renderers[0];
    }

    if (!G2H || G2H == g2H.name) {
      G2H = g2H.studies[1];
    }

    if (!G2H) {
      G2H = g2H.renderers[1];
    }

    for (var S2H = 0; S2H < g2H.studies.length; S2H++) {
      c2H = this.layout.studies[g2H.studies[S2H]];

      if (c2H.parameters && c2H.parameters.yaxisDisplayValue == g2H.name) {
        c2H.parameters.yaxisDisplayValue = G2H;
      }
    }

    return G2H;
  };
};

i4z = function i4z(k2H) {
  var n71 = k7DD;

  n71.m3X = function (F3X) {
    n71.K71();
    if (n71) return n71.X0X(F3X);
  };

  n71.c3X = function (Z3X) {
    n71.z71();
    if (n71 && Z3X) return n71.X0X(Z3X);
  };

  n71.H3X = function (d3X) {
    n71.K71();
    if (n71) return n71.p0X(d3X);
  };

  n71.E3X = function (j3X) {
    n71.K71();
    if (n71) return n71.p0X(j3X);
  };

  n71.h3X = function (B3X) {
    if (n71 && B3X) return n71.X0X(B3X);
  };

  n71.U3X = function (S3X) {
    if (n71 && S3X) return n71.X0X(S3X);
  };

  var C2H, i2H, H2H;

  function f2H(C6H, k6H) {
    var y6H, f6H, s6H, P6H, g6H, M6H, S6H, Y6H, v6H, G6H;

    if (C6H.hasOwnProperty(H2H)) {
      return;
    }

    y6H = new Image();
    f6H = 10;
    s6H = 3.375;
    n71.z7L(35);
    P6H = n71.W7L(4, 5);
    n71.i7L(35);
    g6H = n71.Q7L(5, 4);
    M6H = 5;
    n71.i7L(106);
    var o7r = n71.Q7L(20, 10, 302, 15);
    n71.i7L(70);
    var B7r = n71.Q7L(30, 162, 16, 6);
    S6H = Math.pow(P6H, o7r) / B7r;
    n71.i7L(137);
    Y6H = n71.Q7L(4, "1");
    v6H = Y6H;
    G6H = Object.create(null, {
      sizeRatio: {
        configurable: ![],
        enumerable: !!0,
        get: function get() {
          n71.K71();
          return v6H;
        },
        set: function set(a6H) {
          if (a6H < S6H) {
            v6H = S6H;
          } else if (a6H > Y6H) {
            v6H = Y6H;
          } else {
            v6H = a6H || Y6H;
          }
        }
      },
      draw: {
        configurable: !!0,
        enumerable: !!0,
        value: function value(r6H) {
          var Z8j, p6H, d6H, F6H, l6H, W6H, e6H, Q6H, J6H;

          if (this.image) {
            Z8j = "c";
            Z8j += "q-attrib-container";
            p6H = document.querySelector(Z8j) ? document.querySelector("cq-attrib-container").offsetHeight : 0;
            d6H = r6H.yAxis.bottom - p6H - f6H;
            var _this$image = this.image,
                N6H = _this$image.width,
                u6H = _this$image.height;

            if (isNaN(N6H) || isNaN(u6H)) {
              return;
            }

            F6H = N6H * this.sizeRatio;
            l6H = u6H * this.sizeRatio;
            W6H = r6H.left + f6H;
            n71.i7L(1);
            e6H = n71.W7L(d6H, l6H);
            Q6H = r6H.context;
            J6H = !!0;

            do {
              if ((W6H + F6H * s6H > r6H.right || l6H * M6H > d6H) && this.sizeRatio > S6H) {
                this.sizeRatio *= P6H;
                F6H = N6H * this.sizeRatio;
                l6H = u6H * this.sizeRatio;
                n71.i7L(1);
                e6H = n71.W7L(d6H, l6H);
                J6H = !!{};
              } else if (W6H + N6H * (this.sizeRatio * g6H) * s6H < r6H.right && u6H * (this.sizeRatio * g6H) * M6H < d6H && this.sizeRatio < Y6H) {
                this.sizeRatio *= g6H;
                F6H = N6H * this.sizeRatio;
                l6H = u6H * this.sizeRatio;
                n71.i7L(1);
                e6H = n71.Q7L(d6H, l6H);
                J6H = !!{};
              } else {
                J6H = !!0;
              }
            } while (J6H);

            Q6H.save();

            var _C2H$hsl = C2H.hsl(C6H.containerColor),
                _C2H$hsl2 = _slicedToArray(_C2H$hsl, 3),
                X6H = _C2H$hsl2[2];

            Q6H.globalAlpha = X6H > 0.35 ? 0.15 : 0.2;
            this.image.src = X6H > 0.35 ? this.image.darksrc : this.image.lightsrc;
            Q6H.drawImage(this.image, "0" >> 1653739392, 0, N6H, u6H, W6H, e6H, F6H, l6H);
            Q6H.restore();
            this.first = ![];
          } else if (this.first !== !1) {
            this.first = r6H;
          }
        },
        writable: !"1"
      }
    });

    y6H.onload = function () {
      n71.K71();
      Object.defineProperty(G6H, "image", {
        configurable: !!"",
        enumerable: ![],
        value: y6H,
        writable: ![]
      });

      if (!y6H.darksrc) {
        y6H.lightsrc = y6H.src;
        n71.i7L(1);
        var c7r = n71.Q7L(1330489511, 7);
        n71.i7L(8);
        var U7r = n71.W7L(355, 709);
        y6H.darksrc = k6H.slice("0" >> c7r, +"1063") + "i" + k6H.slice(U7r);
        y6H.src = y6H.darksrc;
      } else {
        if (G6H.first) {
          G6H.first.container.stx.draw();
        }
      }
    };

    y6H.src = k6H;
    Object.defineProperty(C6H, H2H, {
      configurable: !"1",
      enumerable: !{},
      value: G6H,
      writable: !1
    });
  }

  C2H = k2H.CIQ;
  i2H = "valid";
  C2H.valid = 0;

  C2H.ChartEngine.prototype.consolidatedQuote = function (w2H, M2H) {
    var M8j, h2H, E2H, W2H, N2H, R2H, d2H, a2H, F2H, s2H, o2H, Q2H, z2H, u2H, r2H, l2H, P2H, b2H, W8j, J2H;
    M8j = "ti";
    n71.K71();
    M8j += "ck";

    if (this.runPrepend("consolidatedQuote", arguments)) {
      return w2H;
    }

    if (!w2H || !w2H.length) {
      return [];
    }

    h2H = this.layout;
    E2H = this.chart;
    W2H = this;

    if (!E2H.market) {
      console.log("Cannot consolidate: no market iterator available.  Please make sure market module is enabled.");
      return w2H;
    }

    N2H = h2H.periodicity;
    R2H = h2H.interval;
    d2H = h2H.timeUnit;

    if (!M2H) {
      M2H = {};
    }

    if (M2H.periodicity && M2H.interval) {
      N2H = M2H.periodicity;
      R2H = M2H.interval;
      d2H = M2H.timeUnit;
    }

    a2H = +"1";
    F2H = C2H.ChartEngine.isDailyInterval(R2H);

    if (!F2H && E2H.useInflectionPointForIntraday) {
      a2H = N2H;
    }

    s2H = E2H.inflectionPoint;

    if (!s2H || s2H < w2H[+"0"].DT) {
      s2H = new Date(+w2H[0].DT);

      if (!F2H && !E2H.market.market_def) {
        s2H.setHours(0, -s2H.getTimezoneOffset(), 0, 0);
      }
    }

    o2H = [];
    Q2H = {
      begin: s2H,
      interval: R2H,
      multiple: N2H / a2H,
      timeUnit: d2H
    };

    if (R2H == M8j) {
      s2H.setHours(0, 0, 0, 0);
      Q2H = {
        begin: s2H,
        interval: "day",
        multiple: 1
      };
    }

    z2H = E2H.market.newIterator(C2H.clone(Q2H));

    while (z2H.previous(a2H) > w2H[+"0"].DT) {
      ;
    }

    function A2H(e2H, X2H, K1H) {
      var p2H, B1H, m1H, t1H, E8j;

      if (!X2H) {
        X2H = {
          DT: K1H,
          Date: C2H.yyyymmddhhmmssmmm(K1H),
          consolidatedTicks: 0
        };
      }

      if (!X2H.displayDate) {
        W2H.setDisplayDate(X2H);
      }

      p2H = 1;
      n71.K71();

      if (h2H.adj && e2H.Adj_Close) {
        p2H = e2H.Adj_Close / e2H.Close;
      }

      B1H = e2H.High || e2H.Close;

      if (B1H || B1H === ("0" ^ 0)) {
        if (B1H * p2H > (X2H.High || -Number.MAX_VALUE)) {
          n71.z7L(18);
          X2H.High = n71.W7L(p2H, B1H);
        }
      }

      m1H = e2H.Low || e2H.Close;

      if (m1H || m1H === 0) {
        if (m1H * p2H < (X2H.Low || Number.MAX_VALUE)) {
          n71.i7L(18);
          X2H.Low = n71.W7L(p2H, m1H);
        }
      }

      t1H = e2H.Open || e2H.Close;

      if (t1H || t1H === 0) {
        if (!X2H.Open && X2H.Open !== 0) {
          n71.i7L(18);
          X2H.Open = n71.W7L(p2H, t1H);
        }
      }

      if (e2H.Volume !== undefined) {
        X2H.Volume = (X2H.Volume || 0) + e2H.Volume;
      }

      if (e2H.Close !== undefined && e2H.Close !== null) {
        X2H.Close = e2H.Close * p2H;
      }

      if (e2H.Adj_Close !== undefined && e2H.Adj_Close !== null) {
        X2H.Adj_Close = e2H.Adj_Close;
      }

      X2H.ratio = p2H;

      for (var Z2H in e2H) {
        E8j = "BidL";
        E8j += "2";

        if (e2H[Z2H] && e2H[Z2H].Close !== undefined) {
          X2H[Z2H] = A2H(e2H[Z2H], X2H[Z2H], K1H);
        } else if (!X2H[Z2H]) {
          X2H[Z2H] = e2H[Z2H];
        } else if (["Bid", E8j, "Ask", "AskL2"].indexOf(Z2H) > -1) {
          X2H[Z2H] = e2H[Z2H];
        }
      }

      X2H.consolidatedTicks++;
      return X2H;
    }

    u2H = z2H.previous(a2H);
    r2H = z2H.next(a2H);
    l2H = 0;
    P2H = 0;

    while (l2H < w2H.length) {
      b2H = w2H[l2H];

      if (b2H.DT < u2H) {
        W8j = "Warning: out-";
        W8j += "of-order quote in";
        W8j += " dataSet, disregarding: ";
        console.log(W8j + b2H.DT);
        l2H++;
        continue;
      } else if (b2H.DT >= r2H) {
        u2H = r2H;
        r2H = z2H.next(a2H);
        if (!o2H[P2H]) continue;
        ;
      } else if (R2H == "tick" && b2H.consolidatedTicks > +"0") {
        o2H[P2H] = b2H;
        l2H++;
        continue;
      } else if (!o2H[P2H] || R2H != "tick" || o2H[P2H].consolidatedTicks < N2H) {
        J2H = A2H(b2H, o2H[P2H], R2H == "tick" ? b2H.DT : u2H);

        if (J2H) {
          o2H[P2H] = J2H;
        }

        l2H++;
        continue;
      }

      P2H++;
    }

    this.runAppend("consolidatedQuote", arguments);
    return o2H;
  };

  C2H[n71.C3X("ec27") ? "ChartEngine" : ""][n71.g3X("24c4") ? "" : "prototype"][n71.U3X("a123") ? "" : "createDataSet"] = function (J1H, m6H, D1H) {
    n71.b3X = function (s3X) {
      n71.z71();
      if (n71) return n71.p0X(s3X);
    };

    n71.N3X = function (q3X) {
      n71.K71();
      if (n71 && q3X) return n71.p0X(q3X);
    };

    n71.e3X = function (L3X) {
      if (n71) return n71.p0X(L3X);
    };

    n71.f3X = function (M3X) {
      if (n71 && M3X) return n71.X0X(M3X);
    };

    var S0C = -(n71.h3X("aceb") ? 2025714957 : 9374838635),
        J0C = -(n71.v3X("3b99") ? 5833739925 : 2103254409),
        E0C = -(n71.E3X("e5fb") ? 129503749 : 984784552),
        s0C = -(n71.H3X("26af") ? 996796505 : 959211391),
        p0C = -(n71.f3X("d753") ? 9579948235 : 2101406759),
        t0C = -(n71.c3X("bf71") ? 2399987540 : 1178782822),
        D0C = 965185623,
        z0C = 1949077104,
        h0C = -1043388384,
        U0C = -(n71.m3X("1d7f") ? 4516582611 : 1454924579),
        g0C = n71.e3X("9642") ? 686479537 : 225104768,
        M0C = -(n71.G3X("2c94") ? 351065954 : 182479308),
        v0C = -444215700,
        o0C = -735594602,
        I0C = n71.N3X("bb63") ? 92371392 : 61875535,
        b0C = 1847754352;

    if (!(n71.q0C(0, n71.a3X("73a5") ? false : true, 782765) !== S0C && n71.q0C(0, n71.b3X("9864") ? false : true, 117643) !== J0C && n71.c0C(11, false, 868769) !== E0C && n71.q0C(0, false, 662791) !== s0C && n71.c0C(10, false, 639408) !== p0C && n71.q0C(0, false, 239290) !== t0C && n71.q0C(10, false, 145262) !== D0C && n71.c0C(0, false, 169695) !== z0C && n71.c0C(11, false, 140655) !== h0C && n71.q0C(0, false, 107046) !== U0C && n71.q0C(10, false, 101079) !== g0C && n71.q0C(0, false, 665945) !== M0C && n71.q0C(10, false, 531764) !== v0C && n71.q0C(0, false, 211237) !== o0C && n71.q0C(9, false, 979193) !== I0C && n71.q0C(0, false, 624156) !== b0C)) {
      var B6H = function B6H() {
        n71.K71();
        var H0C = -1153133985,
            N0C = -2059344688,
            R0C = 1345352033,
            C0C = -1569827101,
            P0C = -855205075,
            k0C = -1292781546,
            V0C = -2055608700,
            n0C = -1808088171,
            w0C = 621945721,
            u0C = -1759901576,
            i0C = -1444759041,
            A0C = -1548856115,
            f0C = -927557634,
            l0C = -1556155609,
            r0C = 1939265495,
            e0C = 1197250471;

        if (n71.q0C(0, false, 503349) === H0C || n71.c0C(0, false, 773586) === N0C || n71.q0C(11, false, 688170) === R0C || n71.c0C(0, false, 903047) === C0C || n71.c0C(10, false, 345442) === P0C || n71.c0C(0, false, 879969) === k0C || n71.c0C(10, false, 913125) === V0C || n71.c0C(0, false, 788687) === n0C || n71.q0C(11, false, 399150) === w0C || n71.q0C(0, false, 738019) === u0C || n71.c0C(10, false, 907716) === i0C || n71.c0C(0, false, 609624) === A0C || n71.q0C(10, false, 766389) === f0C || n71.c0C(0, false, 655142) === l0C || n71.q0C(9, false, 226866) === r0C || n71.q0C(0, false, 635118) === e0C) {
          var r8j, l8j, R8j, Q8j, L6H, K6H, t6H, O6H, j6H, x6H, T6H;
          r8j = "deriv.";
          r8j += "app";
          l8j = "d";
          l8j += "eriv.com";
          R8j = "bin";
          R8j += "ary.b";
          R8j += "ot";
          Q8j = "binary";
          Q8j += ".sx";
          L6H = "lesf";
          K6H = "3120" << 1353480288 !== (423.18, 60.76) ? (+"9680", 9810) <= 7819 ? (0xc14, 152.05) : 2045 >= 922.62 ? "t" : "r" : (0x1289, "N");
          t6H = 161.74 === "418.34" * 1 ? 313.04 : (608.86, 6160) != (4680, 6792) ? "s" : 6.05e+3;
          K6H += "o";
          t6H += 1960 == (1110, 3113) ? (0x1e7f, "Q") : 3920 >= 455.72 ? "e" : (9.12, 300.77);
          O6H = ["127.0.0.1", "localhost", "binary.com", Q8j, "binary.me", R8j, l8j, r8j, "deriv.me"];
          t6H += L6H["charAt"](0);
          K6H += "p";
          t6H += L6H["charAt"](3);

          if (window[K6H] == window[t6H]) {
            n71["z7L"](34);
            var S7r = n71["Q7L"](658602268, 7, 13, 10);
            return C2H[i2H] === "0" >> S7r;
          }

          if (O6H["length"]) {
            j6H = C2H["getHostName"](document["referrer"]);
            x6H = !1;

            for (var I6H = 0; I6H < O6H["length"]; I6H++) {
              T6H = O6H[I6H];

              if (j6H["indexOf"](T6H) != -("1" ^ 0)) {
                x6H = !"";
              }
            }

            if (!x6H) {
              return ![];
            }
          }

          return C2H[i2H] === "0" - 0;
        }
      };

      var Y8j, b8j, O1H, w1H, n1H, x1H, q1H, G1H, a1H, y1H, C1H, g1H, i1H, j1H, K8j, s1H, R1H, I1H, Y1H, W1H, T1H, A1H, E1H, o1H, H8j, H1H, O8j, l1H, N1H, u8j, k8j, z1H, L1H, k1H, u1H, r1H, f1H, X8j, e1H, v1H, S1H, X1H, V1H, c1H, U1H, d1H, F1H, Z1H, Q1H, p1H, M1H;
      Y8j = "cr";
      Y8j += "eateD";
      Y8j += "ataSe";
      Y8j += "t";
      b8j = "cr";
      b8j += "eateDa";
      b8j += "ta";
      b8j += "Set";

      if (!D1H) {
        D1H = {};
      }

      O1H = this["chart"];
      w1H = [J1H, O1H, {
        appending: D1H["appending"],
        appendToDate: D1H["appendToDate"]
      }];

      if (this["runPrepend"](b8j, w1H)) {
        return;
      }

      x1H = [];
      q1H = [];
      G1H = D1H["appending"];

      if (!O1H["dataSet"]) {
        O1H["dataSet"] = [];
      }

      a1H = O1H["dataSet"]["length"];

      if (G1H) {
        x1H = O1H["dataSet"];
      }

      O1H["currentQuote"] = null;
      O1H["dataSet"] = [];

      if (!G1H) {
        O1H["tickCache"] = {};
      }

      y1H = O1H["masterData"];

      if (!y1H) {
        y1H = this["masterData"];
      }

      if (!y1H || !y1H["length"]) {
        this["runAppend"]("createDataSet", w1H);
        return;
      }

      if (x1H["length"]) {
        C1H = x1H["pop"]();

        while (C1H["futureTick"] && x1H["length"]) {
          C1H = x1H["pop"]();
          a1H--;
        }

        g1H = D1H["appendToDate"];

        if (!g1H || g1H > C1H["DT"]) {
          g1H = C1H["DT"];
        }

        while (x1H["length"]) {
          if (x1H[x1H["length"] - 1]["DT"] < g1H) break;
          x1H["pop"]();
        }

        n71["i7L"](37);
        var J7r = n71["Q7L"](3, 2);
        i1H = y1H["length"] - J7r;

        while (i1H >= "0" * 1 && y1H[i1H]["DT"] >= g1H) {
          i1H--;
        }

        n71["z7L"](8);
        n1H = y1H["slice"](n71["W7L"](i1H, 1));
      } else {
        n1H = []["concat"](y1H);
      }

      if (!B6H()) {
        return;
      }

      if (this["transformDataSetPre"]) {
        this["transformDataSetPre"](this, n1H);
      }

      if (!this["chart"]["hideDrawings"]) {
        for (j1H = "0" * 1; j1H < this["drawingObjects"]["length"]; j1H++) {
          if (this["drawingObjects"][j1H]["name"] == "projection") {
            C2H["getFn"]("Drawing.printProjection")(this, this["drawingObjects"][j1H], n1H);
          }
        }

        if (this["activeDrawing"] && this["activeDrawing"]["name"] == "projection") {
          K8j = "D";
          K8j += "rawing.printPro";
          K8j += "j";
          K8j += "ection";
          C2H["getFn"](K8j)(this, this["activeDrawing"], n1H);
        }
      }

      j1H = 0;
      s1H = -Number["MAX_VALUE"];
      R1H = Number["MAX_VALUE"];
      Y1H = 0;
      W1H = J1H || this["dontRoll"];
      T1H = this["layout"];
      A1H = C2H["ChartEngine"]["isDailyInterval"](T1H["interval"]);

      while (+"1") {
        H8j = "mont";
        H8j += "h";
        if (Y1H >= n1H["length"]) break;

        if (!(this["dontRoll"] && (T1H["interval"] == "week" || T1H["interval"] == H8j)) && this["extendedHours"] && this["extendedHours"]["filter"] && O1H["market"]["market_def"]) {
          H1H = n1H[Y1H];

          if (A1H) {
            o1H = !O1H["market"]["isMarketDate"](H1H["DT"]);
          } else {
            if (!E1H || E1H <= H1H["DT"]) {
              O8j = "ge";
              O8j += "tNe";
              O8j += "xt";
              O8j += "Open";
              l1H = O1H["market"]["getSession"](H1H["DT"]);
              o1H = l1H !== "" && (!T1H["marketSessions"] || !T1H["marketSessions"][l1H]);
              E1H = O1H["market"][o1H ? O8j : "getNextClose"](H1H["DT"]);
            }
          }

          if (o1H) {
            Y1H++;
            continue;
          }
        }

        I1H = {};

        for (var h1H in n1H[Y1H]) {
          I1H[h1H] = n1H[Y1H][h1H];
        }

        n1H[Y1H] = I1H;
        I1H["ratio"] = 1;

        if (T1H["adj"] && I1H["Adj_Close"]) {
          I1H["ratio"] = I1H["Adj_Close"] / I1H["Close"];
        }

        if (I1H["ratio"] != "1" * 1) {
          if (I1H["Open"]) {
            I1H["Open"] = Number((I1H["Open"] * I1H["ratio"])["toFixed"](8));
          }

          if (I1H["Close"]) {
            I1H["Close"] = Number((I1H["Close"] * I1H["ratio"])["toFixed"](8));
          }

          if (I1H["High"]) {
            I1H["High"] = Number((I1H["High"] * I1H["ratio"])["toFixed"](8));
          }

          if (I1H["Low"]) {
            I1H["Low"] = Number((I1H["Low"] * I1H["ratio"])["toFixed"](8));
          }
        }

        q1H[j1H++] = n1H[Y1H++];
      }

      if (T1H["periodicity"] > ("1" ^ 0) || !W1H && (T1H["interval"] == "week" || T1H["interval"] == "month")) {
        if (x1H["length"]) {
          q1H["unshift"](x1H["pop"]());
        }

        q1H = this["consolidatedQuote"](q1H);
      }

      N1H = {};

      for (j1H = 0; j1H < q1H["length"]; j1H++) {
        u8j = "L";
        u8j += "o";
        u8j += "w";
        k8j = "Hi";
        k8j += "g";
        k8j += "h";
        I1H = q1H[j1H];

        if (j1H > 0) {
          I1H["iqPrevClose"] = q1H[j1H - 1]["Close"];

          if (!I1H["iqPrevClose"] && I1H["iqPrevClose"] !== +"0") {
            I1H["iqPrevClose"] = q1H[j1H - 1]["iqPrevClose"];
          }
        } else if (x1H["length"]) {
          I1H["iqPrevClose"] = x1H[x1H["length"] - 1]["Close"];

          if (!I1H["iqPrevClose"] && I1H["iqPrevClose"] !== 0) {
            I1H["iqPrevClose"] = x1H[x1H["length"] - 1]["iqPrevClose"];
          }
        } else {
          I1H["iqPrevClose"] = I1H["Close"];
        }

        if (k8j in I1H && I1H["High"] > s1H) {
          s1H = I1H["High"];
        }

        if (u8j in I1H && I1H["Low"] < R1H) {
          R1H = I1H["Low"];
        }

        for (var P1H in O1H["series"]) {
          z1H = O1H["series"][P1H]["parameters"]["symbol"];
          L1H = I1H[z1H];

          if (L1H && _typeof(L1H) == "object") {
            if (j1H > 0) {
              L1H["iqPrevClose"] = N1H[P1H];
            } else if (x1H["length"]) {
              for (var b1H = x1H["length"] - 1; b1H >= +"0"; b1H--) {
                k1H = x1H[b1H][z1H];

                if (k1H && (k1H["Close"] || k1H["Close"] === 0)) {
                  L1H["iqPrevClose"] = k1H["Close"];
                  break;
                }
              }
            } else {
              L1H["iqPrevClose"] = L1H["Close"];
            }

            if (L1H["Close"] || L1H["Close"] === 0) {
              N1H[P1H] = L1H["Close"];
            }

            L1H["ratio"] = 1;

            if (T1H["adj"] && L1H["Adj_Close"]) {
              L1H["ratio"] = L1H["Adj_Close"] / L1H["Close"];
            }

            if (L1H["ratio"] != +"1") {
              if (L1H["Open"]) {
                L1H["Open"] = Number((L1H["Open"] * L1H["ratio"])["toFixed"](8));
              }

              if (L1H["Close"]) {
                L1H["Close"] = Number((L1H["Close"] * L1H["ratio"])["toFixed"](+"8"));
              }

              if (L1H["High"]) {
                L1H["High"] = Number((L1H["High"] * L1H["ratio"])["toFixed"](8));
              }

              if (L1H["Low"]) {
                L1H["Low"] = Number((L1H["Low"] * L1H["ratio"])["toFixed"](8));
              }
            }
          }
        }
      }

      u1H = this["preferences"]["whitespace"] / this["layout"]["candleWidth"];
      r1H = O1H["scroll"] >= O1H["maxTicks"];

      if (r1H) {
        O1H["spanLock"] = !!0;
        ;
      }

      O1H["defaultChartStyleConfig"] = {
        type: T1H["chartType"]
      };
      f1H = T1H["aggregationType"];

      if (f1H && f1H != "ohlc") {
        if (!C2H["ChartEngine"]["calculateAggregation"]) {
          X8j = "Aggreg";
          X8j += "ation code is not loa";
          X8j += "ded/enabled!";
          console["log"](X8j);
        } else {
          O1H["defaultChartStyleConfig"]["type"] = f1H;

          if (!G1H || !O1H["state"]["aggregation"]) {
            O1H["state"]["aggregation"] = {};
          }

          q1H = C2H["ChartEngine"]["calculateAggregation"](this, f1H, q1H, x1H);
        }
      }

      O1H["spanLock"] = O1H["scroll"] > +"0" && O1H["scroll"] < O1H["maxTicks"] - u1H;
      e1H = r1H || O1H["lockScroll"] || O1H["spanLock"] || this["isHistoricalModeSet"];
      v1H = q1H["length"] - (a1H - x1H["length"]);

      if (!G1H) {
        v1H = 0;
      }

      if (v1H) {
        if (O1H["spanLock"] && v1H + O1H["scroll"] >= O1H["maxTicks"] - u1H) {
          O1H["spanLock"] = !{};
        } else if (e1H || v1H < 0) {
          O1H["scroll"] += v1H;
          this["grabStartScrollX"] += v1H;

          if (this["swipe"]) {
            this["swipe"]["scroll"] += v1H;
          }
        }
      }

      if (this["transformDataSetPost"]) {
        this["transformDataSetPost"](this, q1H, R1H, s1H);
      }

      S1H = this["maxDataSetSize"];

      if (S1H) {
        if (x1H["length"] + q1H["length"] > S1H) {
          if (q1H["length"] < S1H) {
            x1H = x1H["slice"](q1H["length"] - S1H);
          } else {
            x1H = [];
          }

          q1H = q1H["slice"](-S1H);
        }
      }

      if (!O1H["scrubbed"]) {
        O1H["scrubbed"] = [];
      }

      if (x1H["length"]) {
        X1H = x1H[x1H["length"] - 1]["DT"];

        while (O1H["scrubbed"]["length"] && O1H["scrubbed"][O1H["scrubbed"]["length"] - 1]["DT"] > X1H) {
          O1H["scrubbed"]["pop"]();
        }
      } else {
        O1H["scrubbed"] = [];
      }

      if (!O1H["state"]["studies"]) {
        O1H["state"]["studies"] = {};
      }

      O1H["state"]["studies"]["startFrom"] = O1H["scrubbed"]["length"];
      V1H = [];

      for (j1H = 0; j1H < q1H["length"]; j1H++) {
        c1H = q1H[j1H];

        if (c1H["Close"] || c1H["Close"] === 0) {
          V1H["push"](c1H);
        } else if (c1H["DT"] > Date["now"]()) {
          V1H["push"](c1H);
        }

        ;
      }

      O1H["scrubbed"] = O1H["scrubbed"]["concat"](V1H);

      if (!G1H || !O1H["state"]["calculations"]) {
        O1H["state"]["calculations"] = {};
      }

      this["calculateATR"](O1H, 20, V1H);
      this["calculateMedianPrice"](O1H, V1H);
      this["calculateTypicalPrice"](O1H, V1H);
      this["calculateWeightedClose"](O1H, V1H);
      this["calculateOHLC4"](O1H, V1H);

      for (U1H in this["plugins"]) {
        d1H = this["plugins"][U1H];

        if (d1H["createDataSet"]) {
          d1H["createDataSet"](this, O1H, q1H, x1H["length"]);
        }
      }

      O1H["dataSet"] = x1H["concat"](q1H);

      for (U1H = +"0"; U1H < O1H["dataSet"]["length"]; U1H++) {
        O1H["dataSet"][U1H]["cache"] = {};
        O1H["dataSet"][U1H]["tick"] = U1H;
      }

      O1H["whiteSpaceFutureTicks"] = 0;
      F1H = this["layout"]["studies"];
      Z1H = O1H["scrubbed"]["length"];

      if (F1H && Object["keys"](F1H)["length"]) {
        Q1H = O1H["state"]["studies"]["sorted"] || C2H["Studies"]["sortForProcessing"](this);
        p1H = this;
        O1H["state"]["studies"]["sorted"] = Q1H;
        Q1H["forEach"](function (n6H) {
          var F0C = 1103338424,
              W0C = 1625163845,
              B0C = -1311090630,
              Q0C = -1735875734,
              G0C = -114299441,
              d0C = -3393576,
              X0C = 2099410602,
              Y0C = 812774383,
              Z0C = 1036449012,
              y1C = -1311733980,
              T1C = -545359084,
              L1C = -1008910046,
              O1C = 1042883523,
              K1C = 961992296,
              m1C = 307148122,
              x1C = 704083665;

          if (!(n71.q0C(0, false, 545585) !== F0C && n71.c0C(0, false, 514649) !== W0C && n71.c0C(11, false, 923475) !== B0C && n71.c0C(0, false, 744775) !== Q0C && n71.q0C(10, false, 842790) !== G0C && n71.c0C(0, false, 265631) !== d0C && n71.c0C(10, false, 737256) !== X0C && n71.q0C(0, false, 366262) !== Y0C && n71.c0C(11, false, 443354) !== Z0C && n71.c0C(0, false, 141398) !== y1C && n71.c0C(10, false, 426712) !== T1C && n71.q0C(0, false, 173322) !== L1C && n71.c0C(10, false, 179087) !== O1C && n71.q0C(0, false, 804164) !== K1C && n71.c0C(9, false, 749262) !== m1C && n71.q0C(0, false, 428475) !== x1C)) {
            n6H["startFrom"] = O1H["state"]["studies"]["startFrom"];
            n6H["error"] = null;

            if (n6H["study"] && n6H["study"]["calculateFN"]) {
              n6H["study"]["calculateFN"](p1H, n6H);
            }
          }
        });
      }

      for (U1H = Z1H; U1H < O1H["scrubbed"]["length"]; U1H++) {
        M1H = O1H["scrubbed"][U1H];
        M1H["cache"] = {};
        M1H["tick"] = O1H["dataSet"]["length"];
        O1H["dataSet"]["push"](M1H);
      }

      if (this["drawingObjects"]["length"]) {
        this["adjustDrawings"]();
      }

      if (this["establishMarkerTicks"]) {
        this["establishMarkerTicks"]();
      }

      this["runAppend"](Y8j, w1H);
    }
  };

  H2H = Symbol["for"]("CIQ.watermark");
};

H4z = function H4z(m8H) {
  var B8H, t8H;

  if (!m8H.SplinePlotter) {
    m8H.SplinePlotter = {};
  }

  B8H = m8H.CIQ;
  t8H = m8H.SplinePlotter;

  B8H.ChartEngine.prototype.drawBarTypeChartInner = function (x8H) {
    var g91 = k7DD;
    var o9j, k8H, h8H, N8H, z8H, f8H, Y8H, F8H, O8H, S8H, o8H, w8H, Q8H, s8H, n8H, u8H, K8H, J8H, W8H, A8H, P8H, K7H, O7H, q8H, U8H, D8H, b8H, I7H, e8H, r8H, j1j, y1j, e1j, X8H, c8H, I8H, L8H, j8H, G8H, L7H, M8H, a8H, C8H, g8H, i8H, y8H, T8H, H8H, v8H, Z8H, V8H, E8H, d8H, l8H, p8H, B7H, m7H, t7H;
    o9j = "hist";
    o9j += "o";
    o9j += "gra";
    o9j += "m";
    k8H = x8H.type;
    h8H = x8H.panel;
    N8H = x8H.field;
    z8H = x8H.fillColor;
    f8H = x8H.borderColor;
    Y8H = x8H.condition;
    F8H = x8H.style;
    O8H = x8H.yAxis;
    g91.i7L(100);
    S8H = g91.Q7L(o9j, k8H);
    o8H = S8H || k8H == "candle";
    g91.i7L(100);
    w8H = g91.W7L("shadow", k8H);
    g91.z7L(100);
    Q8H = g91.W7L("hlc", k8H);
    s8H = k8H == "bar" || Q8H;
    n8H = h8H.chart;
    u8H = n8H.dataSegment;
    K8H = this.chart.context;
    J8H = new Array(u8H.length);
    W8H = this.layout;
    A8H = f8H && !B8H.isTransparent(f8H);
    g91.i7L(17);
    P8H = g91.W7L(1471220896, "0");

    if (A8H && !x8H.highlight) {
      P8H = 0.5;
    }

    K7H = K8H.globalAlpha;

    if (!x8H.highlight && this.highlightedDraggable) {
      K8H.globalAlpha *= 0.3;
    }

    g91.i7L(45);
    var g7r = g91.W7L(6, 20, 4, 0);
    O7H = n8H.dataSet.length - n8H.scroll - g7r;
    K8H.beginPath();

    if (!O8H) {
      O8H = h8H.yAxis;
    }

    q8H = O8H.top;
    U8H = O8H.bottom;
    D8H = W8H.candleWidth;
    g91.i7L(14);
    var h7r = g91.W7L(17, 22, 4);
    g91.z7L(55);
    var i7r = g91.W7L(16, 20, 5, 10);
    b8H = h8H.left - "0.5" * h7r * D8H + this.micropixels - i7r;
    g91.i7L(72);
    var j7r = g91.Q7L(8, 4, 4, 7);
    I7H = n8H.tmpWidth / j7r;
    g91.i7L(9);
    var y7r = g91.W7L(12, 11, 1);
    e8H = K8H.lineWidth / y7r;

    if (o8H) {
      if (B8H.isTransparent(z8H)) {
        z8H = this.containerColor;
      }

      K8H.fillStyle = z8H;
    }

    g91.z71();

    if (w8H) {
      K8H.lineWidth = 1;
    }

    if (s8H) {
      r8H = this.canvasStyle(F8H);

      if (r8H.width && parseInt(r8H.width, 10) <= 25) {
        j1j = -1061754071;
        y1j = -225043755;
        e1j = 2;

        for (var C1j = "1" | 0; g91.f6U(C1j.toString(), C1j.toString().length, 26342) !== j1j; C1j++) {
          K8H.lineWidth = Math.max(3, B8H.stripPX(r8H.width));
          e1j += 2;
        }

        if (g91.f6U(e1j.toString(), e1j.toString().length, 39012) !== y1j) {
          K8H.lineWidth = Math.max(3, B8H.stripPX(r8H.width));
        }

        K8H.lineWidth = Math.max(1, B8H.stripPX(r8H.width));
      } else {
        K8H.lineWidth = 1;
      }
    }

    X8H = n8H.state.chartType.pass;

    for (var R8H = 0; R8H <= u8H.length; R8H++) {
      c8H = I7H;
      g91.z7L(35);
      b8H += g91.W7L(D8H, 2);
      D8H = W8H.candleWidth;
      g91.z7L(92);
      b8H += g91.W7L(D8H, "2");
      I8H = u8H[R8H];
      if (!I8H) continue;
      if (I8H.projection) continue;

      if (I8H.candleWidth) {
        g91.i7L(138);
        var e7r = g91.Q7L(11, 24, 3, 10, 15);
        b8H += (I8H.candleWidth - D8H) / e7r;
        D8H = I8H.candleWidth;

        if (x8H.volume || D8H < n8H.tmpWidth) {
          g91.z7L(35);
          c8H = g91.W7L(D8H, 2);
        }
      }

      if (n8H.transformFunc && O8H == n8H.panel.yAxis && I8H.transform) {
        I8H = I8H.transform;
      }

      if (I8H && N8H && N8H != "Close") {
        I8H = I8H[N8H];
      }

      if (!I8H && I8H !== 0) continue;
      L8H = I8H.Close;
      j8H = I8H.Open === undefined ? L8H : I8H.Open;

      if (S8H && n8H.defaultPlotField) {
        L8H = I8H[n8H.defaultPlotField];
      }

      if (!L8H && L8H !== 0) continue;
      if (o8H && !S8H && (j8H == L8H || j8H === null)) continue;

      if (Y8H) {
        G8H = B8H.ChartEngine;

        if (Y8H & G8H.CLOSEDOWN) {
          X8H.even |= L8H == I8H.iqPrevClose;
        } else if (Y8H & G8H.CANDLEDOWN) {
          g91.i7L(100);
          X8H.even |= g91.W7L(j8H, L8H);
        }

        if (Y8H & G8H.CANDLEUP && j8H >= L8H) continue;
        if (Y8H & G8H.CANDLEDOWN && j8H <= L8H) continue;
        if (Y8H & G8H.CANDLEEVEN && j8H != L8H) continue;
        if (Y8H & G8H.CLOSEUP && L8H <= I8H.iqPrevClose) continue;
        if (Y8H & G8H.CLOSEDOWN && L8H >= I8H.iqPrevClose) continue;
        if (Y8H & G8H.CLOSEEVEN && L8H != I8H.iqPrevClose) continue;
      }

      g91.z7L(8);
      L7H = g91.Q7L(O7H, R8H);
      M8H = j8H;
      a8H = L8H;

      if (w8H || s8H) {
        M8H = I8H.High === undefined ? Math.max(L8H, j8H) : I8H.High;
        a8H = I8H.Low === undefined ? Math.min(L8H, j8H) : I8H.Low;
      }

      C8H = O8H.semiLog ? O8H.height * (1 - (Math.log(Math.max(M8H, 0)) / Math.LN10 - O8H.logLow) / O8H.logShadow) : (O8H.high - M8H) * O8H.multiplier;
      g8H = O8H.semiLog ? O8H.height * (("1" ^ 0) - (Math.log(Math.max(a8H, 0)) / Math.LN10 - O8H.logLow) / O8H.logShadow) : (O8H.high - a8H) * O8H.multiplier;

      if (O8H.flipped) {
        g91.i7L(1);
        C8H = g91.W7L(U8H, C8H);
        g91.z7L(1);
        g8H = g91.W7L(U8H, g8H);
      } else {
        C8H += q8H;
        g8H += q8H;
      }

      T8H = Math.floor(S8H ? O8H.flipped ? O8H.top : g8H : Math.min(C8H, g8H)) + P8H;
      H8H = S8H ? O8H.flipped ? C8H : O8H.bottom : Math.max(C8H, g8H);
      g91.i7L(1);
      v8H = Math.floor(g91.W7L(H8H, T8H));
      Z8H = g8H;

      if (s8H || w8H) {
        i8H = O8H.semiLog ? O8H.height * (1 - (Math.log(Math.max(j8H, 0)) / Math.LN10 - O8H.logLow) / O8H.logShadow) : (O8H.high - j8H) * O8H.multiplier;
        y8H = O8H.semiLog ? O8H.height * ("1" * 1 - (Math.log(Math.max(L8H, 0)) / Math.LN10 - O8H.logLow) / O8H.logShadow) : (O8H.high - L8H) * O8H.multiplier;

        if (O8H.flipped) {
          g91.i7L(1);
          i8H = g91.W7L(U8H, i8H);
          g91.i7L(1);
          y8H = g91.Q7L(U8H, y8H);
        } else {
          i8H += q8H;
          y8H += q8H;
        }

        Z8H = y8H;
      }

      J8H[R8H] = Z8H;

      if (T8H < q8H) {
        if (T8H + v8H < q8H) continue;
        g91.i7L(1);
        v8H -= g91.Q7L(q8H, T8H);
        T8H = q8H;
      }

      if (T8H + v8H > U8H) {
        g91.z7L(9);
        v8H -= g91.Q7L(v8H, U8H, T8H);
      }

      g91.z7L(8);
      H8H = g91.Q7L(T8H, v8H);
      if (T8H >= U8H) continue;
      if (H8H <= q8H) continue;
      V8H = Math.floor(b8H) + (!x8H.highlight && 0.5);
      E8H = Math.floor(V8H - c8H) + P8H;
      d8H = Math.round(V8H + c8H) - P8H;
      l8H = E8H == d8H ? c8H : 0;

      if (v8H < +"2") {
        v8H = 2;
      }

      if (o8H) {
        if (S8H || L8H != j8H) {
          K8H.rect(E8H, T8H, Math.max(1, d8H - E8H), v8H);
        }
      } else if (w8H) {
        if (L8H == j8H) {
          if (y8H <= U8H && y8H >= q8H) {
            p8H = Math.floor(y8H) + (!x8H.highlight && 0.5);
            g91.z7L(1);
            K8H.moveTo(g91.Q7L(E8H, l8H), p8H);
            g91.i7L(8);
            K8H.lineTo(g91.W7L(d8H, l8H), p8H);
          }
        }

        if (M8H != a8H) {
          K8H.moveTo(V8H, T8H);
          K8H.lineTo(V8H, H8H);
        }
      } else if (s8H) {
        if (T8H < U8H && H8H > q8H && I8H.High != I8H.Low) {
          g91.i7L(1);
          K8H.moveTo(V8H, g91.W7L(T8H, e8H));
          g91.z7L(8);
          K8H.lineTo(V8H, g91.Q7L(H8H, e8H));
        }

        if (i8H > q8H && i8H < U8H && !Q8H) {
          B7H = Math.floor(i8H) + (!x8H.highlight && 0.5);
          K8H.moveTo(V8H, B7H);
          g91.z7L(4);
          K8H.lineTo(g91.W7L(c8H, l8H, V8H), B7H);
        }

        if (y8H > q8H && y8H < U8H) {
          m7H = Math.floor(y8H) + (!x8H.highlight && 0.5);
          K8H.moveTo(V8H, m7H);
          g91.z7L(52);
          K8H.lineTo(g91.Q7L(l8H, c8H, V8H), m7H);
        }
      }
    }

    t7H = K8H.globalAlpha;

    if (o8H) {
      if (t7H < "1" - 0) {
        K8H.save();
        K8H.globalAlpha = 1;
        K8H.fillStyle = this.containerColor;
        K8H.fill();
        K8H.restore();
      }

      K8H.fill();

      if (A8H) {
        K8H.lineWidth = x8H.highlight ? 2 : 1;
        K8H.strokeStyle = f8H;
        K8H.stroke();
      }
    } else if (w8H || s8H) {
      this.canvasColor(F8H);
      K8H.globalAlpha = t7H;

      if (f8H) {
        K8H.strokeStyle = f8H;
      }

      if (x8H.highlight) {
        K8H.lineWidth *= 2;
      }

      K8H.stroke();
      K8H.closePath();
      K8H.lineWidth = +"1";
    }

    K8H.globalAlpha = K7H;
    return {
      cache: J8H
    };
  };

  B8H.ChartEngine.prototype.plotDataSegmentAsLine = function (y7H, C7H, q7H, o7H) {
    var B91 = k7DD;
    var b0H, x5H, V7H, w7H, Z7H, i7H, G7H, j7H, P7H, Q7H, a0H, J7H, q0H, E0H, p7H, j0H, B0H, l0H, T7H, y0H, k7H, h0H, q5H, N0H, n7H, g7H, x7H, V0H, z0H, j5H, U9j, H7H, v0H, r0H, f7H, W7H, b7H, G0H, A7H, B9j, e7H, U5H, h7H, c7H, v7H, D7H, M7H, c0H, F0H, Q0H, U7H, C0H, n5H, y5H, i0H, J0H, t0H, S7H, Y7H, a7H, I0H, s7H, N7H, W0H, z7H, A0H, u7H, V5H, Z0H, c9j, H0H, E7H, k0H, r7H, f0H, B5H, c5U, U5U, S5U, m5H, g5H, t5H, K5H, w0H, l7H, O5H, s0H, I5H, d7H, R0H, v5H, D5H, G5H, L0H, o0H, L5H, X7H;

    function u0H(R5H) {
      var i5H, c5H, S5H, C5H, H5H, f5H, k5H, w5H, s5H, C9U, z9U, p9U;
      i5H = x7H.getLineDash();
      c5H = +"1";
      S5H = R5H;

      if (_typeof(S5H) == "object") {
        B91.i7L(37);
        var w7r = B91.Q7L(3, 1);
        B91.z7L(8);
        var C7r = B91.Q7L(0, 1);
        c5H = S5H.width * (J7H ? w7r : C7r);
        G7H = B8H.borderPatternToArray(c5H, S5H.pattern);
        S5H = S5H.color;
      }

      B91.z71();
      l0H[S5H] = 1;

      if (Q7H) {
        return;
      }

      C5H = T7H.slice(-2);
      H5H = G7H instanceof Array && G7H.join();
      f5H = i5H instanceof Array && i5H.join();
      B91.z7L(139);
      k5H = B91.W7L(H5H, f5H);
      w5H = !B8H.colorsEqual(z0H, S5H);
      s5H = x7H.lineWidth != c5H;

      if (w5H || k5H || s5H) {
        if (P7H) {
          y0H.push({
            coord: C5H,
            color: S5H,
            pattern: G7H ? G7H : [],
            width: c5H
          });
        } else {
          x7H.stroke();
          x7H.lineWidth = c5H;

          if (k5H) {
            x7H.setLineDash(H5H ? G7H : []);
          }

          x7H.beginPath();
          x7H.moveTo(C5H[0], C5H[1]);
          ;
        }
      }

      z0H = S5H;

      if (!P7H) {
        if (!S5H || S5H == "auto") {
          C9U = -1515242250;
          z9U = -+"324718197";
          p9U = 2;

          for (var F9U = 1; B91.V6U(F9U.toString(), F9U.toString().length, +"38557") !== C9U; F9U++) {
            x7H.strokeStyle = q5H.defaultColor;
            B91.i7L(17);
            p9U += B91.Q7L(592909312, "2");
          }

          if (B91.V6U(p9U.toString(), p9U.toString().length, 80444) !== z9U) {
            x7H.strokeStyle = q5H.defaultColor;
          }

          x7H.strokeStyle = q5H.defaultColor;
        } else {
          x7H.strokeStyle = S5H;
        }
      }

      return C5H;
    }

    B91.z71();
    b0H = ![];
    x5H = !"1";
    V7H = !"1";
    w7H = !{};
    Z7H = !"";
    i7H = null;
    G7H = null;
    j7H = null;
    P7H = 0;
    Q7H = ![];
    a0H = !!"";
    J7H = ![];
    q0H = ![];
    E0H = null;
    p7H = null;
    j0H = null;
    B0H = null;

    function T5H(o5H, l5H, M5H) {
      var b5H, a5H, E5H, L5U, b5U, m5U;
      x7H.setLineDash([]);
      b5H = P5H("CollatedOpen");
      B91.K71();
      a5H = P5H("CollatedHigh");

      function P5H(N5H) {
        var h5H;
        B91.z71();
        h5H = j7H.semiLog ? j7H.height * (("1" >> 1288958272) - (Math.log(Math.max(M5H[N5H], 0)) / Math.LN10 - j7H.logLow) / j7H.logShadow) : (j7H.high - M5H[N5H]) * j7H.multiplier;

        if (j7H.flipped) {
          h5H = j7H.bottom - h5H;
        } else {
          h5H += j7H.top;
        }

        return h5H;
      }

      E5H = P5H("CollatedLow");
      x7H.lineTo(o5H, b5H);
      x7H.moveTo(o5H, a5H);
      x7H.lineTo(o5H, E5H);
      L5U = -1943849478;
      b5U = -+"1484766476";
      m5U = 2;

      for (var R5U = 1; B91.f6U(R5U.toString(), R5U.toString().length, "30626" >> 614292768) !== L5U; R5U++) {
        x7H.moveTo(o5H, l5H);
        m5U += 2;
      }

      if (B91.V6U(m5U.toString(), m5U.toString().length, 90121) !== b5U) {
        x7H.moveTo(o5H, l5H);
      }

      T7H.push(o5H, b5H);
    }

    l0H = {};
    T7H = [];
    y0H = [];
    k7H = [];
    h0H = [];
    q5H = this;
    N0H = this.layout;
    n7H = C7H.chart;
    g7H = n7H.dataSegment;
    x7H = n7H.context;
    V0H = new Array(g7H.length);
    z0H = x7H.strokeStyle;
    j5H = x7H.globalAlpha;

    if (n7H.dataSet.length) {
      U9j = "o";
      U9j += "bject";
      this.startClip(C7H.name);

      if (q7H) {
        b0H = q7H.skipProjections;
        x5H = q7H.skipTransform;
        V7H = q7H.noSlopes;
        P7H = q7H.tension;
        w7H = q7H.step;
        G7H = q7H.pattern;
        Z7H = q7H.extendOffChart;
        j7H = q7H.yAxis;
        i7H = q7H.gapDisplayStyle;
        Q7H = q7H.noDraw;
        a0H = q7H.reverse;
        J7H = q7H.highlight;

        if (q7H.width) {
          x7H.lineWidth = q7H.width;
        }

        q0H = q7H.shiftRight;
        E0H = q7H.subField;
        p7H = q7H.threshold;
        j0H = q7H.lineTravelSpacing;
        B0H = q7H.extendToEndOfDataSet;
      }

      if (!i7H && i7H !== !!"" && q7H) {
        i7H = q7H.gaps;
      }

      if (!i7H) {
        i7H = {
          color: "transparent",
          fillMountain: !!{}
        };
      }

      if (G7H instanceof Array) {
        x7H.setLineDash(G7H);
      }

      if (J7H) {
        x7H.lineWidth *= 2;
      }

      if (!J7H && this.highlightedDraggable) {
        x7H.globalAlpha *= 0.3;
      }

      if (Z7H !== !{}) {
        Z7H = !![];
      }

      H7H = E0H || n7H.defaultPlotField || "Close";

      if (!j7H) {
        j7H = C7H.yAxis;
      }

      v0H = n7H.transformFunc && j7H == n7H.panel.yAxis;
      B91.i7L(1);
      var z7r = B91.Q7L(11, 9);
      r0H = x7H.lineWidth * z7r;
      f7H = a0H ? n7H.top - r0H : n7H.bottom + r0H;

      if (p7H || p7H === 0) {
        f7H = this.pixelFromPrice(p7H, C7H, j7H);
      }

      W7H = !P7H && Q7H && i7H && i7H.fillMountain;
      b7H = y7H;
      G0H = y7H;

      for (var g0H = 0; g0H < g7H.length; g0H++) {
        A7H = g7H[g0H];

        if (A7H && _typeof(A7H) == "object") {
          if (A7H[y7H] || A7H[y7H] === 0) {
            B9j = "o";
            B9j += "bje";
            B9j += "ct";

            if (_typeof(A7H[y7H]) == B9j) {
              G0H = B8H.createObjectChainNames(y7H, [H7H])[0];
            }

            break;
          }
        }
      }

      e7H = {
        left: null,
        right: null
      };
      B91.z7L(78);
      var p7r = B91.Q7L(12, 12, 2, 25);
      U5H = n7H.dataSet.length - n7H.scroll - p7r;

      if (Z7H) {
        e7H.left = this.getPreviousBar(n7H, G0H, 0);
        e7H.right = this.getNextBar(n7H, G0H, g7H.length - 1);
      }

      h7H = !!1;
      c7H = ![];
      x7H.beginPath();
      M7H = e7H.left;
      c0H = null;

      if (M7H) {
        c0H = M7H.transform;
      }

      if (M7H) {
        D7H = v0H ? c0H ? c0H[y7H] : null : M7H[y7H];

        if (D7H || D7H === 0) {
          if (D7H[H7H] || D7H[H7H] === 0) {
            D7H = D7H[H7H];
          }

          F0H = this.pixelFromTick(M7H.tick, n7H);
          Q0H = this.pixelFromTransformedValue(D7H, C7H, j7H);
          x7H.moveTo(F0H, Q0H);
          T7H.push(F0H, Q0H);

          if (g7H[0].tick - M7H.tick > 1) {
            k7H.push({
              start: T7H.slice(-2),
              threshold: f7H,
              tick: M7H
            });
            c7H = !![];
          }

          h7H = ![];
        }
      }

      U7H = C7H.left + this.micropixels - +"1";

      if (q0H) {
        U7H += q0H;
      }

      if (w7H && q7H && q7H.alignStepToSide) {
        B91.z7L(8);
        var q7r = B91.Q7L(0, 2);
        U7H -= this.layout.candleWidth / q7r;
      }

      y5H = this.currentQuote();
      i0H = 0;
      J0H = 0;
      t0H = !{};
      S7H = {
        reset: !0
      };

      for (var R7H = 0; R7H < g7H.length; R7H++) {
        v7H = N0H.candleWidth;
        Y7H = g7H[R7H];
        a7H = g7H[R7H];

        if (!Y7H) {
          Y7H = {};
        }

        I0H = Y7H.lineTravel;

        if (b0H && Y7H.projection) {
          e7H.right = null;
          break;
        }

        if (Y7H.candleWidth) {
          v7H = Y7H.candleWidth;
        }

        if (j0H) {
          v7H = 0;
        }

        if (v0H && Y7H.transform) {
          Y7H = Y7H.transform;
        }

        s7H = Y7H[y7H];

        if (s7H && _typeof(s7H) == "object") {
          s7H = s7H[H7H];
          B91.z7L(52);
          b7H = B91.Q7L(H7H, ".", y7H);
        }

        if (n7H.lineApproximation && N0H.candleWidth < 1 && !j0H) {
          if (S7H.reset) {
            S7H = {
              CollatedHigh: -Number.MAX_VALUE,
              CollatedLow: Number.MAX_VALUE,
              CollatedOpen: null,
              CollatedClose: null
            };
            t0H = ![];
          }

          N7H = s7H;

          if (N7H || N7H === 0) {
            S7H.CollatedHigh = Math.max(S7H.CollatedHigh, N7H);
            S7H.CollatedLow = Math.min(S7H.CollatedLow, N7H);
            S7H.CollatedClose = N7H;

            if (S7H.CollatedOpen === null) {
              S7H.CollatedOpen = N7H;
            } else {
              t0H = !!1;
            }
          }

          i0H += v7H;

          if (i0H - J0H >= 1 || R7H == g7H.length - 1) {
            J0H = Math.floor(i0H);
            S7H.reset = !!1;
            S7H[y7H] = S7H.CollatedClose;
            Y7H = S7H;
            Y7H.cache = {};
          } else {
            U7H += v7H;
            continue;
          }
        }

        if (!V7H) {
          B91.z7L(35);
          U7H += B91.W7L(v7H, 2);
        }

        if (!s7H && s7H !== 0) {
          W0H = T7H.slice(-+"2");

          if (W7H && !c7H && T7H.length) {
            T7H.push(W0H[0], f7H);
          }

          if (!c7H) {
            k7H.push({
              start: W0H,
              threshold: f7H,
              tick: n5H
            });
          }

          c7H = !![];
          U7H += V7H ? v7H : v7H / 2;

          if ((w7H || V7H) && T7H.length) {
            V0H[R7H] = T7H.slice(-1)[0];
          }

          if (I0H) {
            U7H += I0H;
          }

          continue;
        }

        C0H = Y7H;
        z7H = Y7H.cache;
        B91.z7L(8);
        A0H = B91.Q7L(U5H, R7H);

        if (A0H < C7H.cacheLeft || A0H > C7H.cacheRight || !z7H[y7H]) {
          z7H[b7H] = j7H.semiLog ? j7H.height * (1 - (Math.log(Math.max(s7H, "0" >> 1877272256)) / Math.LN10 - j7H.logLow) / j7H.logShadow) : (j7H.high - s7H) * j7H.multiplier;

          if (j7H.flipped) {
            z7H[b7H] = j7H.bottom - z7H[b7H];
          } else {
            z7H[b7H] += j7H.top;
          }
        }

        u7H = V0H[R7H] = z7H[b7H];

        if (a7H.tick == y5H.tick && n7H.lastTickOffset) {
          U7H += n7H.lastTickOffset;
        }

        V5H = T7H.slice(-2);

        if (!h7H && o7H) {
          if (a7H[y7H] && a7H[y7H][H7H]) {
            a7H = a7H[y7H];
          }

          Z0H = o7H(this, a7H, c7H);

          if (!Z0H) {
            U7H += V7H ? v7H : v7H / 2;
            continue;
          }

          V5H = u0H(Z0H);
        }

        if (h7H) {
          x7H.moveTo(U7H, u7H);

          if (P7H) {
            y0H.push({
              coord: [U7H, u7H],
              color: x7H.strokeStyle,
              pattern: G7H ? G7H : [],
              width: x7H.lineWidth
            });
          }
        } else {
          c9j = "mov";
          c9j += "eTo";

          if (w7H || V7H) {
            H0H = T7H.slice(-1)[0];

            if (t0H) {
              T5H(U7H, H0H, Y7H);
            } else {
              x7H.lineTo(U7H, H0H);
            }

            T7H.push(U7H, H0H);
          }

          if (t0H && !V7H) {
            T5H(U7H, u7H, Y7H);
          } else {
            x7H[V7H ? c9j : "lineTo"](U7H, u7H);
          }
        }

        if (c7H) {
          k7H.push({
            end: [U7H, u7H],
            threshold: f7H
          });
          n5H = a7H;

          if (W7H && !w7H && !V7H) {
            T7H.push(U7H, f7H);
          }
        }

        T7H.push(U7H, u7H);
        h7H = ![];
        c7H = !{};
        U7H += V7H ? v7H : v7H / 2;

        if (I0H) {
          U7H += I0H;
        }

        ;
      }

      E7H = e7H.right;
      k0H = null;

      if (E7H) {
        k0H = E7H.transform;
      }

      if (!h7H && E7H) {
        D7H = v0H ? k0H ? k0H[y7H] : null : E7H[y7H];

        if (D7H && (D7H[H7H] || D7H[H7H] === "0" - 0)) {
          D7H = D7H[H7H];
        }

        r7H = this.pixelFromTick(E7H.tick, n7H);
        f0H = this.pixelFromTransformedValue(D7H, C7H, j7H);

        if (E7H.tick - g7H[g7H.length - +"1"].tick > 1) {
          if (!c7H) {
            B5H = T7H.slice(-2);

            if (W7H && T7H.length) {
              T7H.push(B5H[0], f7H);
            }

            k7H.push({
              start: B5H,
              threshold: f7H,
              tick: g7H[g7H.length - 1]
            });
          }

          c5U = -1943853420;
          U5U = 1655952110;
          S5U = 2;

          for (var g5U = 1; B91.f6U(g5U.toString(), g5U.toString().length, 24351) !== c5U; g5U++) {
            c7H = !!"1";
            S5U += +"2";
          }

          if (B91.f6U(S5U.toString(), S5U.toString().length, 23888) !== U5U) {
            c7H = !"1";
          }
        }

        if (!h7H && o7H) {
          m5H = o7H(this, E7H, c7H);

          if (m5H) {
            g5H = u0H(m5H);
          }
        }

        t5H = T7H.slice(-2);

        if (!G7H || !G7H.length) {
          if (w7H || V7H) {
            x7H.lineTo(r7H, t5H[1]);
            T7H.push(r7H, t5H[1]);
          }

          x7H[V7H ? "moveTo" : "lineTo"](r7H, f0H);
        }

        if (c7H) {
          k7H.push({
            end: [r7H, f0H],
            threshold: f7H
          });

          if (W7H && !w7H && !V7H) {
            T7H.push(r7H, f7H);
          }
        }

        T7H.push(r7H, f0H);
      }

      for (var Y5H in l0H) {
        h0H.push(Y5H);
      }

      if (q7H && q7H.extendToEndOfLastBar) {
        K5H = T7H.slice(-2);
        x7H.lineTo(K5H[0] + v7H, K5H[1]);
      } else if (w7H || V7H || this.extendLastTick || B0H) {
        B91.i7L(16);
        w0H = T7H.slice(-B91.Q7L("2", 0));

        if (T7H.length) {
          l7H = w0H[0];
          O5H = w0H[1];

          if (B0H || w7H && B0H !== ![]) {
            l7H = this.pixelFromTick(n7H.dataSet.length - +"1", n7H);

            if (V7H || this.extendLastTick) {
              B91.i7L(35);
              l7H += B91.W7L(v7H, 2);
            }
          } else if (V7H) {
            l7H += v7H;
          } else if (this.extendLastTick) {
            B91.i7L(140);
            l7H += B91.W7L(v7H, "2", 123340800);
          }

          if (l7H > w0H[0]) {
            s0H = null;

            if (o7H) {
              s0H = o7H(this, {}, !0);
            }

            if (s0H) {
              u0H(s0H);
            }

            x7H.lineTo(l7H, O5H);

            if (!c7H || !W7H) {
              T7H.push(l7H, O5H);
            }
          }
        }
      }

      if (!Q7H) {
        if (P7H && T7H.length) {
          x7H.beginPath();

          if (q7H && q7H.pattern) {
            x7H.setLineDash(q7H.pattern);
          }

          t8H.plotSpline(T7H, P7H, x7H, y0H);
        }

        x7H.stroke();
      }

      this.endClip();

      if (!Q7H && q7H && q7H.label && C0H) {
        d7H = C0H[y7H];

        if (d7H && _typeof(d7H) == "object") {
          d7H = d7H[H7H];
        }

        if (j7H.priceFormatter) {
          I5H = j7H.priceFormatter(this, C7H, d7H, q7H.labelDecimalPlaces);
        } else {
          I5H = this.formatYAxisPrice(d7H, C7H, q7H.labelDecimalPlaces);
        }

        R0H = this.yaxisLabelStyle;

        if (j7H.yaxisLabelStyle) {
          R0H = j7H.yaxisLabelStyle;
        }

        v5H = R0H == "noop" ? x7H.strokeStyle : null;
        D5H = R0H == "noop" ? "#FFFFFF" : x7H.strokeStyle;
        this.yAxisLabels.push({
          src: "plot",
          args: [C7H, I5H, C0H.cache[b7H], D5H, v5H, x7H, j7H]
        });
      }

      G5H = _typeof(i7H) == U9j ? i7H.color : i7H;

      if (B8H.isTransparent(G5H)) {
        for (var F7H = 0; F7H < k7H.length; F7H += 2) {
          L0H = k7H[F7H].start;

          if (F7H) {
            o0H = k7H[F7H - 1].end;
          }

          if (o0H && L0H[0] == o0H[0] && L0H[1] == o0H[1]) {
            x7H.beginPath();
            L5H = x7H.lineWidth;

            if (o7H) {
              X7H = o7H(this, k7H[F7H].tick || {}, ![]);

              if (_typeof(X7H) == "object") {
                B91.i7L(78);
                var F7r = B91.W7L(32, 10, 19, 59);
                B91.z7L(141);
                var I7r = B91.Q7L(1, 6, 7, 0, 13);
                L5H = X7H.width * (J7H ? F7r : I7r);
                X7H = X7H.color;
              }

              x7H.strokeStyle = x7H.fillStyle = X7H;
            }

            x7H.lineWidth = L5H;
            x7H.arc(L0H[0], L0H[1], 1, 0, 2 * Math.PI);
            x7H.stroke();
            x7H.fill();
          }
        }
      }
    }

    x7H.globalAlpha = j5H;
    return {
      colors: h0H,
      points: T7H,
      cache: V0H,
      gapAreas: k7H
    };
  };

  B8H.ChartEngine.prototype.drawMountainChart = function (W5H, z5H, K4H) {
    var r91 = k7DD;
    var g9j, J9j, S9j, u5H, p5H, M9H, T9H, A5H, m9H, J5H, K9H, U9H, r5H, N9H, n9H, O9H, d9H, Y9H, D9H, e9H, X9H, p9H, B4H, F5H, x4H, x9H, d5H, e5H, m4H, O4H, S9H, K6U, H6U, O6U, I4H, P9H, Q5H, X5H, Z5H, L4H, i9j, h9j, t4H;
    g9j = "tra";
    g9j += "n";
    g9j += "sparent";
    J9j = "Cl";
    J9j += "os";
    J9j += "e";
    S9j = "stx_mou";
    S9j += "ntain_chart";
    u5H = this.chart.context;
    p5H = z5H;
    M9H = !!0;
    T9H = ![];
    A5H = null;
    m9H = null;
    J5H = null;
    K9H = null;
    U9H = 0;
    r5H = null;
    N9H = !1;
    n9H = null;
    O9H = null;
    d9H = !"1";
    Y9H = null;
    D9H = null;
    e9H = 1;
    X9H = !{};
    p9H = !!0;
    B4H = !{};
    F5H = W5H.chart;
    x4H = F5H.dataSegment;
    x9H = F5H.lineStyle || {};

    if (!z5H || _typeof(z5H) != "object") {
      z5H = {
        style: z5H
      };
    }

    p5H = z5H.style || S9j;
    A5H = z5H.field || F5H.defaultPlotField || J9j;
    m9H = z5H.subField || F5H.defaultPlotField || "Close";
    r5H = z5H.gapDisplayStyle;

    if (!r5H && r5H !== !{}) {
      r5H = z5H.gaps;
    }

    if (!r5H && r5H !== !!0) {
      r5H = F5H.gaplines;
    }

    if (!r5H) {
      r5H = g9j;
    }

    J5H = z5H.yAxis || W5H.yAxis;
    M9H = z5H.reverse || !{};
    K9H = z5H.tension;
    n9H = z5H.fillStyle;
    U9H = z5H.width || x9H.width;
    N9H = z5H.step;
    O9H = z5H.pattern || x9H.pattern;
    d9H = z5H.highlight;
    D9H = z5H.color || x9H.color;
    Y9H = z5H.baseColor || x9H.baseColor;
    T9H = z5H.colored;
    e9H = z5H.opacity;
    X9H = z5H.extendToEndOfDataSet;
    p9H = z5H.isComparison;
    B4H = z5H.returnObject;
    d5H = this.canvasStyle(p5H);
    e5H = J5H.top;

    if (isNaN(e5H) || isNaN(e5H / e5H)) {
      e5H = +"0";
    }

    m4H = D9H || (p5H && d5H.backgroundColor ? d5H.backgroundColor : this.defaultColor);
    O4H = Y9H || (p5H && d5H.color ? d5H.color : this.containerColor);

    if (n9H) {
      u5H.fillStyle = n9H;
    } else if (Y9H || d5H.color) {
      S9H = u5H.createLinearGradient(0, e5H, 0, J5H.bottom);
      S9H.addColorStop(J5H.flipped ? 1 : 0, m4H);
      S9H.addColorStop(J5H.flipped ? 0 : 1, O4H);
      u5H.fillStyle = S9H;
    } else {
      K6U = -1975986147;
      H6U = -234877201;
      O6U = 2;

      for (var u6U = 1; r91.V6U(u6U.toString(), u6U.toString().length, 18113) !== K6U; u6U++) {
        u5H.fillStyle = m4H;
        O6U += 2;
      }

      if (r91.f6U(O6U.toString(), O6U.toString().length, 14937) !== H6U) {
        u5H.fillStyle = m4H;
      }
    }

    this.startClip(W5H.name);
    I4H = u5H.lineWidth;

    if (!z5H.symbol) {
      m9H = null;
    }

    z5H = {
      skipProjections: !![],
      reverse: M9H,
      yAxis: J5H,
      gapDisplayStyle: r5H,
      step: N9H,
      highlight: d9H,
      extendToEndOfDataSet: X9H,
      isComparison: p9H
    };

    if (F5H.tension) {
      z5H.tension = F5H.tension;
    }

    if (K9H || K9H === 0) {
      z5H.tension = K9H;
    }

    P9H = parseInt(d5H.paddingTop, 10);
    Q5H = D9H || d5H.borderTopColor;
    X5H = null;

    if (T9H || Q5H && !B8H.isTransparent(Q5H)) {
      if (P9H) {
        Z5H = this.scratchContext;

        if (!Z5H) {
          L4H = u5H.canvas.cloneNode(!![]);
          Z5H = this.scratchContext = L4H.getContext("2d");
        }

        Z5H.canvas.height = u5H.canvas.height;
        Z5H.canvas.width = u5H.canvas.width;
        Z5H.drawImage(u5H.canvas, 0, 0);
        B8H.clearCanvas(u5H.canvas, this);
      }
    }

    B8H.extend(z5H, {
      panelName: W5H.name,
      direction: z5H.reverse ? -1 : 1,
      band: A5H,
      subField: m9H,
      opacity: e9H
    });

    if (!z5H.highlight && this.highlightedDraggable) {
      z5H.opacity *= 0.3;
    }

    B8H.preparePeakValleyFill(this, z5H);

    if (T9H || Q5H && !B8H.isTransparent(Q5H)) {
      if (P9H) {
        i9j = "d";
        i9j += "estinatio";
        i9j += "n-ove";
        i9j += "r";
        h9j = "desti";
        h9j += "na";
        h9j += "tion-out";
        u5H.save();
        r91.i7L(18);
        u5H.lineWidth += r91.W7L(P9H, 2);
        u5H.globalCompositeOperation = h9j;
        r91.i7L(18);
        u5H.globalAlpha = r91.W7L(1, "1");
        this.plotDataSegmentAsLine(A5H, W5H, z5H);
        u5H.globalCompositeOperation = i9j;
        u5H.scale(1 / this.adjustedDisplayPixelRatio, 1 / this.adjustedDisplayPixelRatio);
        u5H.drawImage(this.scratchContext.canvas, "0" << 1159101760, "0" & 2147483647);
        u5H.restore();
      }
    }

    u5H.strokeStyle = Q5H;

    if (U9H) {
      u5H.lineWidth = U9H;
    } else if (d5H.width && parseInt(d5H.width, 10) <= 25) {
      u5H.lineWidth = Math.max(1, B8H.stripPX(d5H.width));
    } else {
      u5H.lineWidth = 1;
    }

    if (!O9H) {
      O9H = d5H.borderTopStyle;
    }

    z5H.pattern = B8H.borderPatternToArray(u5H.lineWidth, O9H);
    t4H = K4H;

    if (r5H) {
      t4H = this.getGapColorFunction(A5H, m9H, {
        color: Q5H,
        pattern: z5H.pattern,
        width: u5H.lineWidth
      }, r5H, K4H);
    }

    X5H = this.plotDataSegmentAsLine(A5H, W5H, z5H, t4H);
    u5H.lineWidth = I4H;
    this.endClip();

    if (!X5H.colors.length) {
      X5H.colors.push(Q5H);
    }

    return B4H ? X5H : X5H.colors;
  };

  B8H.ChartEngine.prototype.drawBaselineChart = function (j4H, q4H) {
    var v91 = k7DD;
    var g4H, i4H, T4H, w9j, e9j, y9j, j9j, o8U, B8U, c8U, H4H, Y4H, k4H, E4H, l4H, h4H, N4H, z4H, u4H, r4H, d4H, s4H, R4H, o4H, G4H, P4H, S4H, f4H, U4H, c4H, C9j, F4H, Q4H, w4H;
    var D4H = j4H.chart;
    var C4H = q4H.field,
        b4H = q4H.id,
        n4H = q4H.yAxis;
    var y4H = D4H.gaplines,
        M4H = D4H.defaultPlotField,
        V4H = D4H.lineStyle;

    var _this$baselineHelper$ = this.baselineHelper.get(this.getRendererFromSeries(b4H)),
        a4H = _this$baselineHelper$.display;

    g4H = this.getYAxisBaseline(n4H).actualLevel;
    i4H = [];

    if (!C4H) {
      C4H = M4H;
    }

    if (!V4H) {
      V4H = {};
    }

    T4H = q4H.gapDisplayStyle;

    if (!T4H && T4H !== !!"") {
      T4H = q4H.gaps;
    }

    if (g4H !== null && !isNaN(g4H)) {
      w9j = "st";
      w9j += "x_ba";
      w9j += "s";
      w9j += "eline";
      e9j = "stx_baseli";
      e9j += "ne_up";
      y9j = "stx_baseline_dow";
      y9j += "n";
      j9j = "stx";
      j9j += "_";
      j9j += "baseline_up";
      o8U = 1065710207;
      B8U = 253416259;
      c8U = 2;

      for (var S8U = "1" & 2147483647; v91.V6U(S8U.toString(), S8U.toString().length, 26267) !== o8U; S8U++) {
        H4H = q4H.type == "mountain";
        c8U += 2;
      }

      if (v91.V6U(c8U.toString(), c8U.toString().length, 65050) !== B8U) {
        H4H = q4H.type != "";
      }

      if (H4H) {
        i4H = this.drawMountainChart(j4H, {
          style: q4H.style,
          field: q4H.field,
          yAxis: n4H,
          gapDisplayStyle: T4H,
          colored: !![],
          tension: 0
        });
      }

      Y4H = this.pixelFromPrice(g4H, j4H, n4H);

      if (isNaN(Y4H)) {
        return;
      }

      this.startClip(j4H.name);
      k4H = q4H.pattern || V4H.pattern;
      E4H = q4H.fill_color_up || this.getCanvasColor("stx_baseline_up");
      l4H = q4H.fill_color_down || this.getCanvasColor("stx_baseline_down");
      h4H = q4H.border_color_up || this.getCanvasColor(j9j);
      N4H = q4H.border_color_down || this.getCanvasColor(y9j);
      z4H = q4H.width || V4H.width || this.canvasStyle(e9j).width;
      u4H = q4H.width || V4H.width || this.canvasStyle("stx_baseline_down").width;
      r4H = q4H.widthBaseline || V4H.width || B8H.stripPX(this.canvasStyle("stx_baseline").width);
      d4H = q4H.baselineOpacity || this.canvasStyle(w9j).opacity;
      s4H = {
        fill: E4H,
        edge: h4H,
        width: z4H
      };
      R4H = {
        fill: l4H,
        edge: N4H,
        width: u4H
      };
      o4H = q4H.yAxis.flipped;
      G4H = {
        over: o4H ? R4H : s4H,
        under: o4H ? s4H : R4H
      };
      P4H = !"1";

      if (!T4H && T4H !== !!"") {
        T4H = y4H;
      }

      v91.i7L(19);
      S4H = v91.W7L("1", 2147483647);

      if (!q4H.highlight && this.highlightedDraggable) {
        S4H *= 0.3;
      }

      for (var v4H in G4H) {
        f4H = parseInt(Math.max(1, B8H.stripPX(G4H[v4H].width)), 10);

        if (q4H.highlight) {
          v91.z7L(1);
          f4H *= v91.Q7L("2", 0);
        }

        k4H = B8H.borderPatternToArray(f4H, k4H);
        U4H = {
          panelName: j4H.name,
          band: C4H,
          threshold: g4H,
          color: H4H ? "transparent" : G4H[v4H].fill,
          direction: v4H == "over" ? 1 : -1,
          edgeHighlight: G4H[v4H].edge,
          edgeParameters: {
            pattern: k4H,
            lineWidth: f4H + 0.1,
            opacity: S4H
          },
          gapDisplayStyle: T4H,
          yAxis: q4H.yAxis
        };

        if (n4H) {
          U4H.threshold = this.priceFromPixel(this.pixelFromPrice(U4H.threshold, j4H, n4H), j4H, n4H);
        }

        i4H.push(G4H[v4H].edge);
        c4H = U4H.color;

        if (!H4H && c4H && c4H != "transparent") {
          C9j = "o";
          C9j += "v";
          C9j += "e";
          C9j += "r";
          F4H = j4H.top;
          Q4H = j4H.bottom;
          w4H = D4H.context.createLinearGradient(0, v4H == C9j ? F4H : Q4H, 0, Y4H);
          w4H.addColorStop(0, B8H.hexToRgba(B8H.colorToHex(c4H), 60));
          w4H.addColorStop(1, B8H.hexToRgba(B8H.colorToHex(c4H), 10));
          U4H.color = w4H;
          U4H.opacity = S4H;
        }

        B8H.preparePeakValleyFill(this, D4H.dataSegment, U4H);

        if (y4H) {
          if (!y4H.fillMountain) {
            this.drawLineChart(j4H, null, null, {
              color: "transparent",
              gapDisplayStyle: {
                color: this.containerColor,
                pattern: "solid",
                width: U4H.edgeParameters.lineWidth
              }
            });
          }

          if (!y4H.color) {
            P4H = !!{};
            y4H.color = this.defaultColor;
          }
        }

        this.drawLineChart(j4H, null, null, {
          color: "transparent",
          width: U4H.edgeParameters.lineWidth
        });

        if (P4H) {
          y4H.color = null;
        }
      }

      if (a4H) {
        this.plotLine(+"0", 1, Y4H, Y4H, this.containerColor, "line", D4H.context, j4H, {
          lineWidth: "1.1"
        });
        this.plotLine(0, 1, Y4H, Y4H, this.getCanvasColor("stx_baseline"), "line", D4H.context, j4H, {
          pattern: "dotted",
          lineWidth: r4H || "2.1",
          opacity: d4H || 0.5 * S4H
        });
      }

      this.endClip();
    }

    v91.z71();
    return {
      colors: i4H
    };
  };

  B8H.ChartEngine.prototype.plotLine = function (J4H) {
    var Y91 = k7DD;
    var q9j, p9j, z9j, Z4H, B2Z, X4H, e4H, p4H, j2Z, W4H, m2Z, c2Z, T2Z, U2Z, n2Z, y2Z, K2Z, D2Z, A4H, C2Z, H2Z, L2Z, x2Z, V2Z, Y2Z, t2Z, q2Z, O2Z, G2Z, i2Z, g2Z, v2Z, F9j, k2Z;
    q9j = "verti";
    q9j += "ca";
    q9j += "l";
    p9j = "ra";
    p9j += "y";
    z9j = "und";
    z9j += "efi";
    z9j += "ned";

    if (typeof arguments[0] == "number") {
      J4H = {
        x0: arguments[0],
        x1: arguments[1],
        y0: arguments[2],
        y1: arguments[3],
        color: arguments[4],
        type: arguments[5],
        context: arguments[6],
        confineToPanel: arguments[7]
      };

      for (var S2Z in arguments[8]) {
        J4H[S2Z] = arguments[8][S2Z];
      }
    }

    if (!J4H) {
      J4H = {};
    }

    if (J4H.pattern == "none") {
      return;
    }

    Z4H = J4H.x0;
    B2Z = J4H.x1;
    X4H = J4H.y0;
    e4H = J4H.y1;
    p4H = J4H.color;
    j2Z = J4H.type;
    W4H = J4H.context;
    m2Z = J4H.confineToPanel;
    c2Z = J4H.deferStroke;

    if (m2Z === !"") {
      m2Z = this.chart.panel;
    }

    if (W4H === null || _typeof(W4H) == z9j) {
      W4H = this.chart.context;
    }

    if (isNaN(Z4H) || isNaN(B2Z) || isNaN(X4H) || isNaN(e4H)) {
      return;
    }

    T2Z = 0;
    U2Z = this.chart.canvasHeight;
    n2Z = 0;
    y2Z = this.right;

    if (m2Z) {
      U2Z = m2Z.yAxis.bottom;
      T2Z = m2Z.yAxis.top;
      n2Z = m2Z.left;
      y2Z = m2Z.right;
    }

    if (j2Z == p9j) {
      K2Z = +"10000000";

      if (B2Z < Z4H) {
        K2Z = -10000000;
      }

      A4H = {
        x0: Z4H,
        x1: B2Z,
        y0: X4H,
        y1: e4H
      };
      D2Z = B8H.yIntersection(A4H, K2Z);
      B2Z = K2Z;
      e4H = D2Z;
    }

    if (j2Z == "line" || j2Z == "horizontal" || j2Z == q9j) {
      Y91.z7L(81);
      K2Z = Y91.Q7L(1400688320, "10000000");
      C2Z = -10000000;
      A4H = {
        x0: Z4H,
        x1: B2Z,
        y0: X4H,
        y1: e4H
      };
      D2Z = B8H.yIntersection(A4H, K2Z);
      H2Z = B8H.yIntersection(A4H, C2Z);
      Z4H = C2Z;
      B2Z = K2Z;
      X4H = H2Z;
      e4H = D2Z;
    }

    L2Z = 0.0;
    x2Z = 1.0;
    Y91.i7L(1);
    V2Z = Y91.Q7L(B2Z, Z4H);
    Y91.z7L(1);
    Y2Z = Y91.Q7L(e4H, X4H);

    for (var I2Z = 0; I2Z < 4; I2Z++) {
      if (I2Z === "0" >> 1373750528) {
        t2Z = -V2Z;
        Y91.i7L(1);
        q2Z = -Y91.Q7L(n2Z, Z4H);
      }

      if (I2Z == 1) {
        t2Z = V2Z;
        Y91.i7L(1);
        q2Z = Y91.Q7L(y2Z, Z4H);
      }

      if (I2Z == 2) {
        t2Z = -Y2Z;
        Y91.z7L(1);
        q2Z = -Y91.W7L(T2Z, X4H);
      }

      if (I2Z == 3) {
        t2Z = Y2Z;
        Y91.z7L(1);
        q2Z = Y91.Q7L(U2Z, X4H);
      }

      Y91.z7L(35);
      O2Z = Y91.W7L(q2Z, t2Z);

      if ((e4H || e4H === 0) && t2Z === 0 && q2Z < +"0") {
        return !{};
        ;
      }

      if (t2Z < 0) {
        if (O2Z > x2Z) {
          return !!"";
        } else if (O2Z > L2Z) {
          L2Z = O2Z;
        }

        ;
      } else if (t2Z > +"0") {
        if (O2Z < L2Z) {
          return !1;
        } else if (O2Z < x2Z) {
          x2Z = O2Z;
        }

        ;
      }
    }

    Y91.i7L(22);
    G2Z = Y91.W7L(V2Z, Z4H, L2Z);
    Y91.i7L(22);
    i2Z = Y91.Q7L(Y2Z, X4H, L2Z);
    Y91.i7L(22);
    g2Z = Y91.Q7L(V2Z, Z4H, x2Z);
    Y91.z7L(22);
    v2Z = Y91.W7L(Y2Z, X4H, x2Z);

    if (!e4H && e4H !== "0" - 0 && !X4H && X4H !== 0) {
      i2Z = T2Z;
      v2Z = U2Z;
      G2Z = A4H.x0;
      g2Z = A4H.x0;

      if (A4H.x0 > y2Z) {
        return !{};
      }

      if (A4H.x0 < n2Z) {
        return !"1";
      }
    } else if (!e4H && e4H !== 0) {
      if (A4H.y0 < A4H.y1) {
        v2Z = U2Z;
      } else {
        v2Z = T2Z;
      }

      G2Z = A4H.x0;
      g2Z = A4H.x0;

      if (A4H.x0 > y2Z) {
        return ![];
      }

      if (A4H.x0 < n2Z) {
        return !1;
      }
    }

    if (!c2Z) {
      W4H.save();
      W4H.beginPath();
    }

    W4H.lineWidth = 1.1;

    if (p4H && _typeof(p4H) == "object") {
      W4H.strokeStyle = p4H.color;

      if (p4H.opacity) {
        W4H.globalAlpha = p4H.opacity;
      } else {
        W4H.globalAlpha = 1;
      }

      W4H.lineWidth = B8H.stripPX(p4H.width);
    } else {
      F9j = "au";
      F9j += "to";

      if (!p4H || p4H == F9j || B8H.isTransparent(p4H)) {
        W4H.strokeStyle = this.defaultColor;
      } else {
        W4H.strokeStyle = p4H;
      }
    }

    if (J4H.opacity) {
      W4H.globalAlpha = J4H.opacity;
    }

    if (J4H.lineWidth) {
      W4H.lineWidth = J4H.lineWidth;
    }

    if (J4H.globalCompositeOperation) {
      W4H.globalCompositeOperation = J4H.globalCompositeOperation;
    }

    Y91.K71();
    k2Z = B8H.borderPatternToArray(W4H.lineWidth, J4H.pattern);
    W4H.setLineDash(J4H.pattern ? k2Z : []);
    W4H.moveTo(G2Z, i2Z);
    W4H.lineTo(g2Z, v2Z);

    if (!c2Z) {
      W4H.stroke();
      W4H.restore();
    }
  };

  B8H.ChartEngine.prototype.rendererAction = function (R2Z, w2Z) {
    var P2Z, I9j, f2Z, s2Z, M2Z, o2Z;
    P2Z = ![];

    function a2Z() {
      var E2Z;
      k7DD.z71();

      if (!P2Z && w2Z === "underlay") {
        E2Z = Symbol["for"]("CIQ.watermark");

        if (this[E2Z]) {
          this[E2Z].draw(R2Z);
          P2Z = !!{};
        }
      }
    }

    if (!this.runPrepend("rendererAction", arguments)) {
      for (var b2Z in R2Z.seriesRenderers) {
        I9j = "o";
        I9j += "verl";
        I9j += "a";
        I9j += "y";
        f2Z = R2Z.seriesRenderers[b2Z];
        s2Z = f2Z.params;
        M2Z = s2Z.panel;
        o2Z = this.panels[M2Z];
        if (s2Z.overChart && w2Z == "underlay") continue;
        if (s2Z.name == "_main_series" && w2Z == "underlay") continue;
        if (s2Z.name != "_main_series" && w2Z == "main") continue;
        if (!s2Z.overChart && w2Z == I9j) continue;
        if (!o2Z) continue;
        if (o2Z.chart !== R2Z) continue;
        if (o2Z.hidden) continue;

        if (w2Z == "yAxis") {
          f2Z.adjustYAxis();
        } else {
          a2Z.apply(this);
          f2Z.draw();

          if (f2Z.cb) {
            f2Z.cb(f2Z.colors);
          }
        }
      }

      this.runAppend("rendererAction", arguments);
    }

    a2Z.apply(this);
  };

  B8H.ChartEngine.prototype.drawSeries = function (h2Z, A2Z, m1Z, W2Z) {
    var K1Z, Q2Z, t9j, l2Z, u2Z, J2Z, O1Z, d2Z, r2Z, e2Z, p2Z, F2Z, N2Z, t1Z, d9j, z2Z, B1Z, X2Z;

    if (this.runPrepend("drawSeries", arguments)) {
      return;
    }

    K1Z = h2Z.dataSegment;
    Q2Z = null;

    if (!A2Z) {
      A2Z = h2Z.series;
    }

    for (var Z2Z in A2Z) {
      t9j = "Cl";
      t9j += "o";
      t9j += "s";
      t9j += "e";
      Q2Z = A2Z[Z2Z];
      l2Z = Q2Z.parameters;
      u2Z = l2Z.panel ? this.panels[l2Z.panel] : h2Z.panel;
      J2Z = l2Z.color;
      O1Z = l2Z.width;
      d2Z = l2Z.field;
      if (!u2Z) continue;
      r2Z = l2Z.yAxis = m1Z ? m1Z : u2Z.yAxis;

      if (!J2Z) {
        J2Z = r2Z.textStyle || this.defaultColor;
      }

      if (J2Z == "auto") {
        J2Z = this.defaultColor;
      }

      if (!d2Z) {
        d2Z = h2Z.defaultPlotField;
      }

      e2Z = l2Z.subField || h2Z.defaultPlotField || t9j;

      if (!l2Z._rawExtendToEndOfDataSet && l2Z._rawExtendToEndOfDataSet !== !1) {
        l2Z._rawExtendToEndOfDataSet = l2Z.extendToEndOfDataSet;
      }

      if (h2Z.animatingHorizontalScroll) {
        l2Z.extendToEndOfDataSet = !{};
      } else {
        l2Z.extendToEndOfDataSet = l2Z._rawExtendToEndOfDataSet;
      }

      p2Z = l2Z.colorFunction;

      if (Q2Z.highlight || Q2Z.parameters.highlight) {
        l2Z.highlight = !!1;
      }

      F2Z = {
        colors: []
      };

      if (W2Z) {
        if (W2Z.params.highlight) {
          l2Z.highlight = !![];
        }

        if (l2Z.hidden) continue;
        F2Z = W2Z.drawIndividualSeries(h2Z, l2Z) || F2Z;
      } else if (l2Z.type == "mountain") {
        F2Z = this.drawMountainChart(u2Z, B8H.extend({
          returnObject: !![]
        }, l2Z), p2Z);
      } else {
        F2Z = this.drawLineChart(u2Z, l2Z.style, p2Z, B8H.extend({
          returnObject: !0
        }, l2Z));
      }

      Q2Z.yValueCache = F2Z.cache;
      k7DD.i7L(1);
      var t7r = k7DD.Q7L(4, 3);
      N2Z = h2Z.dataSegment[h2Z.dataSegment.length - t7r];

      if (N2Z) {
        t1Z = !l2Z.skipTransform && h2Z.transformFunc && r2Z == h2Z.panel.yAxis;

        if (!N2Z[d2Z] && N2Z[d2Z] !== 0) {
          N2Z = this.getPreviousBar(h2Z, d2Z, h2Z.dataSegment.length - 1);
        }

        if (t1Z && N2Z && N2Z.transform) {
          N2Z = N2Z.transform;
        }
      }

      if (l2Z.displayFloatingLabel !== !!0 && this.mainSeriesRenderer != W2Z && N2Z && !r2Z.noDraw) {
        d9j = "serie";
        d9j += "s";
        z2Z = N2Z[d2Z];

        if (z2Z) {
          if (z2Z[e2Z] || z2Z[e2Z] === "0" - 0) {
            z2Z = z2Z[e2Z];
          } else {
            z2Z = z2Z.iqPrevClose;
          }
        }

        if (r2Z.priceFormatter) {
          B1Z = r2Z.priceFormatter(this, u2Z, z2Z);
        } else {
          B1Z = this.formatYAxisPrice(z2Z, u2Z, null, r2Z);
        }

        this.yAxisLabels.push({
          src: d9j,
          args: [u2Z, B1Z, this.pixelFromTransformedValue(z2Z, u2Z, r2Z), B8H.hexToRgba(B8H.colorToHex(J2Z), parseFloat(l2Z.opacity)), null, null, r2Z]
        });
      }

      if (h2Z.legend && l2Z.useChartLegend) {
        if (!h2Z.legend.colorMap) {
          h2Z.legend.colorMap = {};
        }

        X2Z = l2Z.display;

        if (!X2Z) {
          X2Z = l2Z.symbol;
        }

        h2Z.legend.colorMap[Z2Z] = {
          color: F2Z.colors,
          display: X2Z,
          isBase: W2Z == this.mainSeriesRenderer
        };
        ;
      }
    }

    this.runAppend("drawSeries", arguments);
  };
};

k4z = function k4z(L1Z) {
  var I1Z;
  I1Z = L1Z.CIQ;

  I1Z.ChartEngine.prototype.scrollTo = function (q1Z, T1Z, U1Z) {
    var x1Z, j1Z;
    x1Z = this.swipe;
    x1Z.end = !!{};
    x1Z.amplitude = x1Z.target = (T1Z - q1Z.scroll) * this.layout.candleWidth;
    x1Z.timeConstant = 100;
    x1Z.timestamp = Date.now();
    x1Z.scroll = q1Z.scroll;
    x1Z.chart = q1Z;
    x1Z.cb = U1Z;
    j1Z = this;
    requestAnimationFrame(function () {
      k7DD.K71();
      j1Z.autoscroll();
    });
  };

  I1Z.ChartEngine.prototype.autoscroll = function () {
    var G91 = k7DD;
    var V1Z, I9U, t9U, d9U, n1Z, y1Z, w5U, C5U, z5U, Y1Z;
    V1Z = this;
    I9U = 391568399;
    t9U = 51583053;
    G91.z71();
    d9U = 2;

    for (var A9U = +"1"; G91.V6U(A9U.toString(), A9U.toString().length, 85401) !== I9U; A9U++) {
      n1Z = this.swipe;
      d9U += 2;
    }

    if (G91.V6U(d9U.toString(), d9U.toString().length, 53987) !== t9U) {
      n1Z = this.swipe;
    }

    n1Z = this.swipe;

    if (n1Z.amplitude) {
      n1Z.elapsed = Date.now() - n1Z.timestamp;
      y1Z = -n1Z.amplitude * Math.exp(-n1Z.elapsed / n1Z.timeConstant);
      w5U = +"1725089473";
      C5U = -7545994;
      z5U = 2;

      for (var q5U = 1; G91.f6U(q5U.toString(), q5U.toString().length, 1517) !== w5U; q5U++) {
        Y1Z = n1Z.target * y1Z % this.layout.candleWidth;
        n1Z.chart.scroll = n1Z.scroll - Math.round(Y1Z);
        z5U += 2;
      }

      if (G91.f6U(z5U.toString(), z5U.toString().length, 98114) !== C5U) {
        Y1Z = (n1Z.target + y1Z) / this.layout.candleWidth;
        n1Z.chart.scroll = n1Z.scroll + Math.round(Y1Z);
      }

      this.draw();
      this.updateChartAccessories();

      if (y1Z > 0.5 || y1Z < -0.5) {
        requestAnimationFrame(function () {
          G91.K71();
          V1Z.autoscroll();
        });
      } else {
        if (this.disableBackingStoreDuringTouch) {
          this.reconstituteBackingStore();
        }

        if (n1Z.cb) {
          n1Z.cb();
        }
      }
    }
  };
};

f4z = function f4z(D1Z) {
  var v1Z;
  v1Z = D1Z.CIQ;

  v1Z.ChartEngine.prototype.drawXAxis = function (H1Z, g1Z) {
    var s91 = k7DD;
    var V9j, v9j, P1Z, S1Z, u1Z, G1Z, r1Z, b1Z, M1Z, a1Z, R1Z, w1Z, E1Z, l1Z, x9j, A9j, c1Z, h1Z, k1Z, N1Z, s1Z, i1Z, n9j, s9j, T9j, z1Z, F1Z;
    V9j = "le";
    V9j += "f";
    V9j += "t";
    v9j = "draw";
    v9j += "X";
    v9j += "Axi";
    v9j += "s";
    P1Z = [H1Z, g1Z];

    if (this.runPrepend(v9j, P1Z)) {
      return;
    }

    if (!g1Z) {
      return;
    }

    if (H1Z.xAxis.noDraw) {
      return;
    }

    S1Z = this.getBackgroundCanvas().context;
    this.canvasFont("stx_xaxis", S1Z);
    u1Z = this.getCanvasFontSize("stx_xaxis");
    S1Z.textAlign = "center";
    S1Z.textBaseline = "middle";
    r1Z = S1Z.measureText("   ").width;

    for (var o1Z = 0; o1Z < g1Z.length; o1Z++) {
      G1Z = g1Z[o1Z];
      b1Z = S1Z.measureText(G1Z.text).width;
      s91.z7L(8);
      M1Z = Math.max(s91.W7L(b1Z, r1Z), H1Z.xAxis.minimumLabelWidth);
      G1Z.hz = Math.floor(G1Z.hz + this.micropixels) + ("0.5" - 0);
      s91.z7L(7);
      var d7r = s91.W7L(18, 1, 18, 376, 20);
      G1Z.left = G1Z.hz - M1Z / d7r;
      s91.z7L(9);
      var v7r = s91.Q7L(5, 10, 7);
      G1Z.right = G1Z.hz + M1Z / v7r;
      s91.z7L(8);
      var A7r = s91.Q7L(0, 2);
      G1Z.unpaddedRight = G1Z.hz + b1Z / A7r;
    }

    a1Z = this.xAxisAsFooter === !0 ? this.chart.canvasHeight : H1Z.panel.bottom;
    s91.z7L(1);
    R1Z = this.whichPanel(s91.Q7L(a1Z, 1));

    if (!R1Z) {
      return;
    }

    this.adjustYAxisHeightOffset(R1Z, R1Z.yAxis);
    w1Z = H1Z.xAxis.displayBorder || H1Z.xAxis.displayBorder === null;

    if (this.axisBorders === !!1) {
      w1Z = !![];
    }

    s91.K71();

    if (this.axisBorders === !1) {
      w1Z = !"1";
    }

    E1Z = a1Z - this.xaxisHeight + u1Z;

    if (w1Z) {
      E1Z += 3;
    }

    l1Z = !!1;

    for (var d1Z in this.panels) {
      x9j = "st";
      x9j += "x_grid_b";
      x9j += "ord";
      x9j += "er";
      A9j = "b";
      A9j += "o";
      A9j += "un";
      A9j += "dary";
      c1Z = this.panels[d1Z];
      if (c1Z.hidden || c1Z.shareChartXAxis === !1) continue;
      s91.z7L(100);
      h1Z = s91.W7L(R1Z, c1Z);
      k1Z = c1Z.yAxis;
      if (!k1Z) continue;
      N1Z = -Number.MAX_VALUE;
      s1Z = Number.MAX_VALUE;

      for (var C1Z = "0" | 0; C1Z < g1Z.length; C1Z++) {
        if (g1Z[C1Z].grid == "boundary") {
          s1Z = g1Z[C1Z].left;
          break;
        }
      }

      S1Z.save();
      S1Z.beginPath();
      S1Z.rect(c1Z.left, c1Z.top + (l1Z ? 0 : 1), c1Z.width, c1Z.height - 1);
      S1Z.clip();
      l1Z = !!0;
      i1Z = new v1Z.Plotter();
      i1Z.newSeries("line", "stroke", this.canvasStyle("stx_grid"));
      i1Z.newSeries(A9j, "stroke", this.canvasStyle("stx_grid_dark"));
      i1Z.newSeries("border", "stroke", this.canvasStyle(x9j));

      for (var f1Z = 0; f1Z < g1Z.length; f1Z++) {
        G1Z = g1Z[f1Z];

        if (f1Z == C1Z) {
          for (C1Z++; C1Z < g1Z.length; C1Z++) {
            if (g1Z[C1Z].grid == "boundary") {
              s1Z = g1Z[C1Z].left;
              break;
            }
          }

          if (C1Z >= g1Z.length) {
            C1Z = -+"1";
            s1Z = Number.MAX_VALUE;
          }
        } else {
          if (G1Z.right > s1Z) continue;
        }

        if (G1Z.left < N1Z) continue;

        if (G1Z.left < 0) {
          if (s1Z < G1Z.right) continue;

          if (C1Z >= g1Z.length) {
            if (g1Z[f1Z + 1] && g1Z[f1Z + 1].left < G1Z.right) continue;
          }
        }

        N1Z = G1Z.right;

        if (Math.floor(G1Z.left) <= c1Z.right) {
          if (Math.floor(G1Z.hz) > c1Z.left) {
            if (H1Z.xAxis.displayGridLines) {
              i1Z.moveTo(G1Z.grid, G1Z.hz, k1Z.top);
              i1Z.lineTo(G1Z.grid, G1Z.hz, k1Z.bottom);
            }

            if (h1Z && w1Z) {
              i1Z.moveTo("border", G1Z.hz, k1Z.bottom + 0.5);
              i1Z.lineTo("border", G1Z.hz, k1Z.bottom + 6);
            }
          }

          if (h1Z && G1Z.right > c1Z.left) {
            n9j = "stx_xax";
            n9j += "is";
            s9j = "stx_x";
            s9j += "axi";
            s9j += "s_dark";
            this.canvasColor(G1Z.grid == "boundary" ? s9j : n9j, S1Z);
            S1Z.fillText(G1Z.text, G1Z.hz, E1Z);
          }
        }
      }

      if (w1Z) {
        T9j = "bo";
        T9j += "r";
        T9j += "d";
        T9j += "er";
        z1Z = Math.round(k1Z.bottom) + 0.5;
        F1Z = Math.round(c1Z.right) + +"0.5";
        i1Z.moveTo("border", c1Z.left, z1Z);
        i1Z.lineTo(T9j, F1Z, z1Z);
      }

      i1Z.draw(S1Z);
      S1Z.restore();
    }

    S1Z.textAlign = V9j;
    this.runAppend("drawXAxis", P1Z);
  };

  v1Z.ChartEngine.prototype.createTickXAxisWithDates = function (e1Z) {
    var l91 = k7DD;
    var D9j, p1Z, M6Z, B6Z, N9j, P9j, f9j, O6Z, Q6Z, J6Z, C6Z, j6Z, m6Z, X1Z, I6Z, W6Z, A6Z, L6Z, a6Z, x6Z, w6Z, Z0j, o1j, B1j, a9j, i6Z, E6Z, e6Z, T6Z, Q1Z, l6Z, h6Z, X6Z, J1Z, q6Z, y6Z, H6Z, s6Z, V6Z, N6Z, u6Z, Z1Z, U6Z, Y6Z, r6Z, n6Z, g6Z, t6Z, S6Z, k6Z, o6Z, v6Z, P6Z, d6Z, G9j, W1Z, f6Z, F6Z, b6Z, D6Z, c6Z, E9j, M9j, A1Z, K6Z;
    D9j = "oh";
    D9j += "l";
    D9j += "c";

    if (!e1Z) {
      e1Z = this.chart;
    }

    e1Z.xaxis = [];
    M6Z = e1Z.context;
    B6Z = [v1Z.MILLISECOND, v1Z.SECOND, v1Z.MINUTE, v1Z.HOUR, v1Z.DAY, v1Z.MONTH, v1Z.YEAR];

    if (!this.timeIntervalMap) {
      N9j = "2";
      N9j += "000";
      P9j = "1";
      P9j += "0:00";
      f9j = "10:00";
      f9j += ":";
      f9j += "00.000";
      O6Z = M6Z.measureText.bind(M6Z);
      p1Z = {};
      p1Z[v1Z.MILLISECOND] = {
        arr: [1, 2, "5" - 0, +"10", 20, 50, 100, "250" ^ 0, 500],
        minTimeUnit: 0,
        maxTimeUnit: 1000,
        measurement: O6Z(f9j)
      };
      p1Z[v1Z.SECOND] = {
        arr: [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30],
        minTimeUnit: 0,
        maxTimeUnit: 60,
        measurement: O6Z("10:00:00")
      };
      p1Z[v1Z.MINUTE] = {
        arr: [1, 2, 3, 4, 5, 6, "10" >> 1893262016, 12, "15" >> 119427488, 20, 30],
        minTimeUnit: 0,
        maxTimeUnit: 60,
        measurement: O6Z("10:00")
      };
      p1Z[v1Z.HOUR] = {
        arr: [1, 2, 3, +"4", 6, 12],
        minTimeUnit: 0,
        maxTimeUnit: 24,
        measurement: O6Z(P9j)
      };
      p1Z[v1Z.DAY] = {
        arr: [1, "2" - 0, 7, 14],
        minTimeUnit: 1,
        maxTimeUnit: 32,
        measurement: O6Z("30")
      };
      p1Z[v1Z.MONTH] = {
        arr: [1, 2, +"3", 6],
        minTimeUnit: +"1",
        maxTimeUnit: 13,
        measurement: O6Z("Mar")
      };
      p1Z[v1Z.YEAR] = {
        arr: ["1" & 2147483647, 2, 3, 5],
        minTimeUnit: 1,
        maxTimeUnit: 20000000,
        measurement: O6Z("2000")
      };
      p1Z[v1Z.DECADE] = {
        arr: [10],
        minTimeUnit: 0,
        maxTimeUnit: 2000000,
        measurement: O6Z(N9j)
      };
      this.timeIntervalMap = p1Z;
    }

    p1Z = this.timeIntervalMap;
    l91.z7L(19);
    Q6Z = [31, l91.Q7L("28", 2147483647), 31, 30, 31, 30, 31, 31, 30, l91.Q7L(1173126528, "31", l91.i7L(81)), 30, +"31"];
    J6Z = this.layout.periodicity;
    C6Z = this.layout.interval;
    j6Z = e1Z.maxTicks;
    m6Z = e1Z.dataSegment;
    X1Z = e1Z.xAxis;
    I6Z = m6Z.length;
    W6Z = X1Z.idealTickSizePixels || X1Z.autoComputedTickSizePixels;
    A6Z = this.chart.width / W6Z;

    function R6Z(Z6Z) {
      var p6Z, B3Z;

      if (J1Z == v1Z.MILLISECOND) {
        p6Z = Z6Z.getMilliseconds();
        B3Z = Z6Z.getSeconds();
      } else if (J1Z == v1Z.SECOND) {
        p6Z = Z6Z.getSeconds();
        B3Z = Z6Z.getMinutes();
      } else if (J1Z == v1Z.MINUTE) {
        p6Z = Z6Z.getMinutes();
        B3Z = Z6Z.getHours();
      } else if (J1Z == v1Z.HOUR) {
        l91.z7L(142);
        var x7r = l91.Q7L(4, 62, 1, 4, 2);
        p6Z = Z6Z.getHours() + Z6Z.getMinutes() / x7r;
        B3Z = Z6Z.getDate();
      } else if (J1Z == v1Z.DAY) {
        p6Z = Z6Z.getDate();
        l91.i7L(33);
        var s7r = l91.Q7L(143, 8, 18);
        B3Z = Z6Z.getMonth() + s7r;
      } else if (J1Z == v1Z.MONTH) {
        l91.z7L(143);
        var n7r = l91.Q7L(5, 4, 2, 9, 13);
        p6Z = Z6Z.getMonth() + n7r;
        B3Z = Z6Z.getFullYear();
      } else if (J1Z == v1Z.YEAR) {
        p6Z = Z6Z.getFullYear();
        l91.z7L(32);
        var T7r = l91.Q7L(845122430, 21, 19);
        B3Z = Z6Z.getFullYear() + ("1000" << T7r);
      } else {
        p6Z = Z6Z.getFullYear();
        B3Z = +"0";
      }

      l91.z71();
      return [p6Z, B3Z];
    }

    for (var G6Z = 0; G6Z < I6Z; G6Z++) {
      if (m6Z[G6Z]) break;
    }

    if (G6Z == I6Z) {
      return [];
    }

    L6Z = 0;
    a6Z = this.layout.timeUnit || "minute";

    if (isNaN(C6Z)) {
      a6Z = C6Z;
      C6Z = 1;
    }

    x6Z = 0;

    switch (a6Z) {
      case "millisecond":
        x6Z = 1;
        break;

      case "second":
        x6Z = 1000;
        B6Z.splice(0, 1);
        break;

      case "minute":
        l91.z7L(16);
        x6Z = l91.W7L("60000", 0);
        B6Z.splice(0, 2);
        break;

      case "day":
        x6Z = 86400000;
        B6Z.splice(+"0", 4);
        break;

      case "week":
        l91.z7L(18);
        x6Z = l91.W7L(7, 86400000);
        B6Z.splice(+"0", 4);
        break;

      case "month":
        l91.i7L(18);
        x6Z = l91.Q7L(30, 86400000);
        l91.i7L(18);
        B6Z.splice(l91.W7L(1, "0"), +"5");
        break;
    }

    w6Z = this.layout.aggregationType;

    if (x6Z && (!w6Z || w6Z == D9j || w6Z == "heikinashi")) {
      Z0j = 1224093173;
      o1j = +"1837276947";
      B1j = 2;

      for (var U1j = 1; l91.V6U(U1j.toString(), U1j.toString().length, 24808) !== Z0j; U1j++) {
        l91.z7L(144);
        L6Z = l91.Q7L(I6Z, C6Z, x6Z, J6Z);
        ;
        B1j += 2;
      }

      if (l91.f6U(B1j.toString(), B1j.toString().length, 72825) !== o1j) {
        l91.z7L(77);
        L6Z = l91.W7L(C6Z, I6Z, J6Z, x6Z);
        ;
      }
    } else {
      L6Z = m6Z[I6Z - 1].DT.getTime() - m6Z[G6Z].DT.getTime();
      ;
    }

    if (L6Z === 0) {
      if (e1Z.market) {
        a9j = "d";
        a9j += "ay";
        i6Z = e1Z.market.newIterator({
          begin: new Date(),
          interval: a9j,
          periodicity: 1
        });
        i6Z.next();
        E6Z = i6Z.previous();
        i6Z = this.standardMarketIterator(E6Z, null, e1Z);
        e6Z = i6Z.next();
        L6Z = (e6Z.getTime() - E6Z.getTime()) * j6Z;
        ;
      } else {
        l91.i7L(145);
        L6Z = l91.W7L(j6Z, 60, 60, "24", 1000);
        ;
      }
    } else {
      l91.z7L(146);
      L6Z = l91.W7L(j6Z, L6Z, I6Z);
      ;
    }

    l91.i7L(35);
    T6Z = l91.W7L(L6Z, A6Z);

    for (Q1Z = "0" - 0; Q1Z < B6Z.length; Q1Z++) {
      if (B6Z[Q1Z] > T6Z + 0.001) break;
      ;
    }

    if (T6Z < 1) {
      console.log("createTickXAxisWithDates: Assertion error. msPerGridLine < 1. Make sure your masterData has correct time stamps for the active periodicity and it is sorted from OLDEST to NEWEST.");
    }

    if (Q1Z == B6Z.length) {
      Q1Z--;
    } else if (Q1Z > 0) {
      l91.z7L(1);
      l6Z = B6Z[l91.W7L(Q1Z, 1)];
      h6Z = p1Z[l6Z].arr;
      l91.i7L(142);
      var V7r = l91.Q7L(10, 9, 8, 16, 1);
      X6Z = h6Z[h6Z.length - V7r];

      if (T6Z - l6Z * X6Z < B6Z[Q1Z] - T6Z) {
        Q1Z--;
      }
    }

    J1Z = X1Z.timeUnit || B6Z[Q1Z];
    X1Z.activeTimeUnit = J1Z;
    q6Z = p1Z[J1Z];
    y6Z = q6Z.arr;

    for (Q1Z = 0; Q1Z < y6Z.length; Q1Z++) {
      if (y6Z[Q1Z] * J1Z > T6Z) break;
    }

    if (Q1Z == y6Z.length) {
      Q1Z--;
    } else {
      if (T6Z - y6Z[Q1Z - ("1" >> 1557230112)] * J1Z < y6Z[Q1Z] * J1Z - T6Z) {
        Q1Z--;
      }
    }

    if (q6Z.measurement.width * 2 < this.layout.candleWidth) {
      Q1Z = 0;
    }

    H6Z = X1Z.timeUnitMultiplier || y6Z[Q1Z];
    s6Z = [];
    V6Z = this.layout.candleWidth;

    for (Q1Z = 0; Q1Z <= j6Z; Q1Z++) {
      if (m6Z[Q1Z]) break;
    }

    if (Q1Z > 0 && Q1Z < j6Z) {
      if (e1Z.market) {
        N6Z = this.standardMarketIterator(m6Z[Q1Z].DT, X1Z.adjustTimeZone ? this.displayZone : null);
      }

      for (var z6Z = Q1Z; z6Z > 0; z6Z--) {
        u6Z = {};

        if (N6Z && !(e1Z.lineApproximation && V6Z < 1)) {
          u6Z.DT = N6Z.previous();
        }

        e1Z.xaxis.unshift(u6Z);
      }
    }

    l91.K71();
    Z1Z = 0;
    U6Z = q6Z.minTimeUnit;
    Y6Z = -1;
    r6Z = !![];
    n6Z = R6Z(m6Z[Q1Z].DT);
    t6Z = 0;
    S6Z = 0;
    k6Z = m6Z[Q1Z].tick;

    for (t6Z; t6Z < k6Z; t6Z++) {
      g6Z = R6Z(this.chart.dataSet[k6Z - t6Z].DT);
      if (g6Z[1] != n6Z[1]) break;
      n6Z = g6Z;
    }

    for (S6Z; S6Z < this.chart.dataSet.length - k6Z; S6Z++) {
      g6Z = R6Z(this.chart.dataSet[k6Z + S6Z].DT);
      if (g6Z[1] != n6Z[1]) break;
      n6Z = g6Z;
    }

    o6Z = null;

    for (Q1Z = 0; Q1Z < j6Z + S6Z; Q1Z++) {
      v6Z = m6Z[Q1Z];

      if (!v6Z) {
        v6Z = e1Z.xaxis[Q1Z];
      } else if (t6Z) {
        v6Z = e1Z.dataSet[v6Z.tick - t6Z];
      }

      if (Q1Z < I6Z) {
        P6Z = v6Z;

        if (P6Z.displayDate && X1Z.adjustTimeZone) {
          Z1Z = P6Z.displayDate;
        } else {
          Z1Z = P6Z.DT;
        }

        if (Q1Z && !t6Z && e1Z.segmentImage) {
          d6Z = e1Z.segmentImage[Q1Z];
          V6Z = (d6Z.leftOffset - d6Z.candleWidth / +"2") / Q1Z;
        }
      } else if (e1Z.market) {
        G9j = "t";
        G9j += "ic";
        G9j += "k";
        if (this.layout.interval == G9j && !X1Z.futureTicksInterval) break;
        if (e1Z.lineApproximation && V6Z < 1) break;
        if (!X1Z.futureTicks) break;

        if (!o6Z) {
          o6Z = this.standardMarketIterator(m6Z[I6Z - 1].DT, X1Z.adjustTimeZone ? this.displayZone : null);
        }

        Z1Z = o6Z.next();
      }

      if (!Z1Z) continue;
      W1Z = null;
      l91.i7L(1);
      F6Z = l91.W7L(Q1Z, t6Z);
      b6Z = {
        DT: Z1Z
      };

      if (Q1Z < I6Z) {
        b6Z.data = v6Z;
      } else {
        b6Z.data = null;
      }

      if (t6Z) {
        t6Z--;
        Q1Z--;
      } else if (!e1Z.xaxis[Q1Z] && Q1Z < j6Z) {
        e1Z.xaxis.push(b6Z);
      }

      n6Z = R6Z(Z1Z);
      D6Z = n6Z[0];
      c6Z = n6Z[+"1"];

      if (Y6Z != c6Z) {
        if (D6Z <= U6Z) {
          U6Z = q6Z.minTimeUnit;
        }

        f6Z = e1Z.left + F6Z * V6Z - 1;
        W1Z = null;

        if (J1Z == v1Z.HOUR || J1Z == v1Z.MINUTE && Y6Z > c6Z) {
          if (this.internationalizer) {
            W1Z = this.internationalizer.monthDay.format(Z1Z);
          } else {
            l91.z7L(147);
            var f7r = l91.Q7L(31, 13, 5, 0, 4);
            l91.z7L(15);
            var P7r = l91.Q7L(2, 10, 18);
            l91.i7L(67);
            var N7r = l91.W7L(8, 5, 68570, 9799);
            l91.z7L(78);
            var D7r = l91.W7L(181811, 15, 17, 172274);
            l91.i7L(8);
            var a7r = l91.Q7L(473, 5675);
            l91.z7L(8);
            var G7r = l91.W7L(2170, 20);
            W1Z = Z1Z.getMonth() + f7r + (("320.67" * P7r, 407.48) != (N7r, 174.57) ? "/" : (D7r, "6789" | a7r) !== G7r ? ("b", +"3.81e+3") : !0) + Z1Z.getDate();
          }

          if (X1Z.formatter) {
            E9j = "bou";
            E9j += "n";
            E9j += "dar";
            E9j += "y";
            W1Z = X1Z.formatter(Z1Z, E9j, v1Z.DAY, +"1", W1Z);
          }
        } else if (J1Z == v1Z.DAY) {
          if (Y6Z > c6Z) {
            W1Z = Z1Z.getFullYear();

            if (X1Z.formatter) {
              W1Z = X1Z.formatter(Z1Z, "boundary", v1Z.YEAR, 1, W1Z);
            }
          } else {
            W1Z = v1Z.monthAsDisplay(Z1Z.getMonth(), !{}, this);

            if (X1Z.formatter) {
              W1Z = X1Z.formatter(Z1Z, "boundary", v1Z.MONTH, 1, W1Z);
            }
          }
        } else if (J1Z == v1Z.MONTH) {
          W1Z = Z1Z.getFullYear();

          if (X1Z.formatter) {
            M9j = "bo";
            M9j += "u";
            M9j += "nda";
            M9j += "ry";
            W1Z = X1Z.formatter(Z1Z, M9j, v1Z.YEAR, "1" - 0, W1Z);
          }
        }

        if (W1Z && Y6Z != -1) {
          s6Z.push(new v1Z.ChartEngine.XAxisLabel(f6Z, "boundary", W1Z));
        }
      }

      if (D6Z >= U6Z) {
        if (U6Z == q6Z.minTimeUnit) {
          if (c6Z == Y6Z) continue;
          ;
        }

        A1Z = new Date(+Z1Z);
        l91.z7L(148);
        var E7r = l91.W7L(27, 6, 14, 17, 1);
        l91.i7L(149);
        var M7r = l91.W7L(20, 17, 3, 7);
        l91.i7L(106);
        var W7r = l91.W7L(20, 13, 371, 18);
        l91.i7L(150);
        var L7r = l91.W7L(733976527, 20, 20, 15, 40);
        f6Z = e1Z.left + (E7r * F6Z + M7r) * V6Z / W7r - ("1" >> L7r);
        K6Z = Math.floor(D6Z / H6Z) * H6Z;

        if (K6Z < D6Z) {
          if (this.layout.interval == "week") {
            K6Z = D6Z;
          } else {
            l91.z7L(151);
            f6Z -= l91.W7L(V6Z, "2", 818005568);
          }

          ;
        }

        if (J1Z == v1Z.MILLISECOND) {
          A1Z.setMilliseconds(K6Z);
        } else if (J1Z == v1Z.SECOND) {
          A1Z.setMilliseconds(0);
          A1Z.setSeconds(K6Z);
        } else if (J1Z == v1Z.MINUTE) {
          A1Z.setMilliseconds(0);
          A1Z.setSeconds(0);
          A1Z.setMinutes(K6Z);
        } else if (J1Z == v1Z.HOUR) {
          A1Z.setMilliseconds(0);
          A1Z.setSeconds(0);
          A1Z.setMinutes(+"0");
          A1Z.setHours(K6Z);
        } else if (J1Z == v1Z.DAY) {
          A1Z.setDate(Math.max(+"1", K6Z));
        } else if (J1Z == v1Z.MONTH) {
          A1Z.setDate(1);
          l91.z7L(1);
          A1Z.setMonth(l91.W7L(K6Z, 1));
        } else if (J1Z == v1Z.YEAR) {
          A1Z.setDate(1);
          A1Z.setMonth(0);
        } else {
          A1Z.setDate(1);
          A1Z.setMonth(0);
        }

        l91.i7L(8);
        U6Z = l91.W7L(K6Z, H6Z);

        if (J1Z == v1Z.DAY) {
          l91.i7L(152);
          var b7r = l91.W7L(19, 5, 0, 10, 951);
          q6Z.maxTimeUnit = Q6Z[A1Z.getMonth()] + b7r;
        }

        if (U6Z >= q6Z.maxTimeUnit) {
          U6Z = q6Z.minTimeUnit;
        }

        Y6Z = c6Z;

        if (r6Z && K6Z < D6Z) {
          r6Z = !!0;
          continue;
        }

        if (J1Z == v1Z.DAY) {
          W1Z = A1Z.getDate();
        } else if (J1Z == v1Z.MONTH) {
          W1Z = v1Z.monthAsDisplay(A1Z.getMonth(), !!0, this);
        } else if (J1Z == v1Z.YEAR || J1Z == v1Z.DECADE) {
          W1Z = A1Z.getFullYear();
        } else {
          W1Z = v1Z.timeAsDisplay(A1Z, this, J1Z);
        }

        if (X1Z.formatter) {
          W1Z = X1Z.formatter(A1Z, "line", J1Z, H6Z, W1Z);
        }

        s6Z.push(new v1Z.ChartEngine.XAxisLabel(f6Z, "line", W1Z));
      }
    }

    return s6Z;
  };
};

w4z = function w4z(t3Z) {
  var m3Z;
  m3Z = t3Z.CIQ;
  k7DD.z71();

  m3Z.ChartEngine.prototype.createYAxis = function (O3Z, I3Z) {
    var M91 = k7DD;
    var m9j, x3Z, n3Z, K3Z, S3Z, k3Z, c3Z, L3Z, W9j, y3Z, V3Z, C3Z, U3Z, q3Z, L9j, Y3Z, j3Z, T3Z, b9j, D3Z, f3Z, y8U, e8U, w8U, i3Z, H3Z;
    m9j = "create";
    m9j += "Y";
    m9j += "Ax";
    m9j += "is";

    if (this.runPrepend("createYAxis", arguments)) {
      return;
    }

    x3Z = O3Z.chart;
    n3Z = O3Z.name == x3Z.name;

    if (!I3Z) {
      I3Z = {};
    }

    I3Z.noChange = !!0;
    K3Z = I3Z.yAxis ? I3Z.yAxis : O3Z.yAxis;

    if (m3Z.ChartEngine.enableCaching && K3Z.high == O3Z.cacheHigh && K3Z.low == O3Z.cacheLow) {
      M91.z7L(8);
      var m7r = M91.Q7L(0, 1);
      S3Z = x3Z.dataSet.length - x3Z.scroll - m7r;
      M91.z7L(9);
      var Q7r = M91.W7L(4, 3, 0);
      k3Z = S3Z + x3Z.maxTicks + Q7r;
      O3Z.cacheLeft = S3Z;
      O3Z.cacheRight = k3Z;
      I3Z.noChange = !"";
    } else {
      O3Z.cacheLeft = +"1000000";
      O3Z.cacheRight = -1;
      O3Z.cacheHigh = K3Z.high;
      O3Z.cacheLow = K3Z.low;
    }

    c3Z = x3Z.xAxis.idealTickSizePixels ? x3Z.xAxis.idealTickSizePixels : x3Z.xAxis.autoComputedTickSizePixels;

    if (K3Z.goldenRatioYAxis) {
      if (K3Z.idealTickSizePixels != c3Z / 1.618) {
        I3Z.noChange = !!"";
      }
    }

    if (!I3Z.noChange) {
      W9j = "p";
      W9j += "rojection";
      this.adjustYAxisHeightOffset(O3Z, K3Z);
      y3Z = K3Z.height = K3Z.bottom - K3Z.top;
      V3Z = (K3Z.high - K3Z.low) / (y3Z - K3Z.zoom);

      if (!K3Z.semiLog) {
        if (I3Z.ground) {
          K3Z.high = K3Z.high + K3Z.zoom * V3Z;
        } else {
          M91.z7L(14);
          var R7r = M91.Q7L(18, 31, 11);
          K3Z.high = K3Z.high + (K3Z.zoom / R7r + K3Z.scroll) * V3Z;
          M91.z7L(8);
          var l7r = M91.Q7L(0, 2);
          K3Z.low = K3Z.low - (K3Z.zoom / l7r - K3Z.scroll) * V3Z;
        }
      }

      if (K3Z.min || K3Z.min === 0) {
        K3Z.low = K3Z.min;
      }

      if (K3Z.max || K3Z.max === 0) {
        K3Z.high = K3Z.max;
      }

      K3Z.shadow = K3Z.high - K3Z.low;

      if (K3Z.semiLog && (!this.activeDrawing || this.activeDrawing.name != W9j)) {
        C3Z = function C3Z() {
          M91.K71();
          var w3Z;
          K3Z.logHigh = Math.log(K3Z.high) / Math.LN10;
          w3Z = Math.max(K3Z.low, 0.000000001);
          K3Z.logLow = Math.log(w3Z) / Math.LN10;

          if (K3Z.low <= 0) {
            K3Z.logLow = 0;
          }

          K3Z.logShadow = K3Z.logHigh - K3Z.logLow;
        };

        if (K3Z.semiLog) {
          C3Z();
        }

        U3Z = K3Z.height / (K3Z.height - K3Z.zoom);

        if (K3Z.flipped) {
          K3Z.high = this.transformedPriceFromPixel(K3Z.bottom + U3Z * (K3Z.zoom / 2 + K3Z.scroll), O3Z, K3Z);
          K3Z.low = this.transformedPriceFromPixel(K3Z.top - U3Z * (K3Z.zoom / +"2" - K3Z.scroll), O3Z, K3Z);
          ;
        } else {
          K3Z.high = this.transformedPriceFromPixel(K3Z.top - U3Z * (K3Z.zoom / 2 + K3Z.scroll), O3Z, K3Z);
          K3Z.low = this.transformedPriceFromPixel(K3Z.bottom + U3Z * (K3Z.zoom / 2 - K3Z.scroll), O3Z, K3Z);
          ;
        }

        K3Z.shadow = K3Z.high - K3Z.low;

        if (K3Z.semiLog) {
          C3Z();
        }
      }

      if (K3Z.goldenRatioYAxis && n3Z && K3Z == O3Z.yAxis) {
        M91.i7L(35);
        K3Z.idealTickSizePixels = M91.Q7L(c3Z, 1.618);

        if (K3Z.idealTickSizePixels === ("0" | 0)) {
          q3Z = this.getCanvasFontSize("stx_yaxis");
          M91.i7L(18);
          K3Z.idealTickSizePixels = M91.Q7L(5, q3Z);
        }
      } else {
        if (!K3Z.idealTickSizePixels) {
          L9j = "st";
          L9j += "x_yaxi";
          L9j += "s";
          q3Z = this.getCanvasFontSize(L9j);

          if (n3Z) {
            M91.z7L(18);
            K3Z.idealTickSizePixels = M91.W7L(5, q3Z);
          } else {
            M91.z7L(18);
            K3Z.idealTickSizePixels = M91.W7L(2, q3Z);
          }
        }
      }

      Y3Z = Math.round(y3Z / K3Z.idealTickSizePixels);
      L3Z = I3Z.range ? I3Z.range[1] - I3Z.range[0] : K3Z.shadow;
      M91.i7L(35);
      K3Z.priceTick = Math.floor(M91.Q7L(L3Z, Y3Z));
      j3Z = +"1";

      for (var v3Z = 0; v3Z < 10; v3Z++) {
        if (K3Z.priceTick > +"0") break;
        M91.i7L(23);
        j3Z *= M91.W7L(0, "10");
        K3Z.priceTick = Math.floor(L3Z / Y3Z * j3Z) / j3Z;
      }

      if (v3Z == 10) {
        K3Z.priceTick = 0.00000001;
      }

      K3Z.priceTick = Math.round(L3Z / Y3Z * j3Z) / j3Z;
      T3Z = Math.round(L3Z / K3Z.priceTick);

      if (I3Z.range && T3Z < L3Z && !K3Z.noEvenDivisorTicks) {
        while (T3Z >= "1" >> 506066176) {
          if (L3Z % T3Z === 0) break;
          T3Z--;
        }

        M91.z7L(35);
        K3Z.priceTick = M91.Q7L(L3Z, T3Z);
      }

      if (K3Z.minimumPriceTick) {
        b9j = "st";
        b9j += "x";
        b9j += "_y";
        b9j += "axis";
        D3Z = K3Z.minimumPriceTick;
        q3Z = this.getCanvasFontSize(b9j);

        for (var G3Z = 0; G3Z < 100; G3Z++) {
          M91.z7L(35);
          f3Z = M91.Q7L(L3Z, D3Z);

          if (y3Z / f3Z < q3Z * 2) {
            D3Z += K3Z.minimumPriceTick;
          } else break;
        }

        if (G3Z < ("100" | 64)) {
          K3Z.priceTick = D3Z;
        }
      }
    }

    if (K3Z.priceTick <= 0 || K3Z.priceTick === Infinity) {
      K3Z.priceTick = 1;
    }

    y8U = -1980444612;
    e8U = 230150821;
    M91.z71();
    w8U = +"2";

    for (var z8U = 1; M91.f6U(z8U.toString(), z8U.toString().length, 7693) !== y8U; z8U++) {
      K3Z.multiplier = K3Z.height + K3Z.shadow;

      if (K3Z.multiplier === Infinity) {
        K3Z.multiplier = 3;
      }

      w8U += 2;
    }

    if (M91.f6U(w8U.toString(), w8U.toString().length, 23809) !== e8U) {
      K3Z.multiplier = K3Z.height / K3Z.shadow;

      if (K3Z.multiplier == Infinity) {
        K3Z.multiplier = 0;
      }
    }

    if (!K3Z.decimalPlaces && K3Z.decimalPlaces !== 0) {
      if (n3Z) {
        i3Z = 0;

        for (var g3Z = +"0"; g3Z < O3Z.yAxis.shadowBreaks.length; g3Z++) {
          H3Z = O3Z.yAxis.shadowBreaks[g3Z];

          if (O3Z.yAxis.shadow < H3Z[0]) {
            i3Z = H3Z[1];
          }
        }

        K3Z.printDecimalPlaces = i3Z;
      } else {
        K3Z.printDecimalPlaces = null;
      }

      ;
    } else {
      K3Z.printDecimalPlaces = K3Z.decimalPlaces;
    }

    this.runAppend(m9j, arguments);
  };

  m3Z.ChartEngine.prototype.drawYAxis = function (R3Z, a3Z) {
    var j91 = k7DD;
    var k9j, Q9j, s3Z, P3Z, r3Z, m8Z, d3Z, I8Z, o3Z, r9j, l9j, R9j, l3Z, t8Z, K8Z, E3Z, F5U, I5U, t5U, F3Z, L8Z, x8Z, u9U, X9U, Y9U, N3Z, O8Z, Q3Z, h3Z, J3Z, W3Z, A3Z, p3Z, e3Z, z3Z, B8Z, K9j, M3Z, q8Z, j8Z, b3Z, T8Z, X3Z, Z3Z, O9j, H9j, U8Z;
    k9j = "d";
    k9j += "raw";
    k9j += "YAx";
    k9j += "is";
    Q9j = "stx_y";
    Q9j += "a";
    Q9j += "x";
    Q9j += "is";

    if (!a3Z) {
      a3Z = {};
    }

    s3Z = a3Z.yAxis ? a3Z.yAxis : R3Z.yAxis;

    if (R3Z.hidden || s3Z.noDraw || !s3Z.width) {
      return;
    }

    if (!m3Z.Comparison || s3Z.priceFormatter != m3Z.Comparison.priceFormat) {
      P3Z = s3Z.fractional;

      if (P3Z) {
        if (!s3Z.originalPriceFormatter) {
          s3Z.originalPriceFormatter = {
            func: s3Z.priceFormatter
          };
        }

        if (!P3Z.resolution) {
          P3Z.resolution = s3Z.minimumPrice;
        }

        if (!P3Z.formatter) {
          P3Z.formatter = "'";
        }

        if (!s3Z.priceFormatter) {
          s3Z.priceFormatter = function (D8Z, G8Z, n8Z) {
            var V8Z, Y8Z, v8Z, y8Z;

            if (!P3Z) {
              return;
            }

            V8Z = "";

            if (n8Z < 0) {
              V8Z = 8460 === (3195, 203) ? 552.91 : (3830, "5086" | 16) < (6299, 3270) ? (8310, 119.72) > +"6210" ? (!!"1", 0xec6) : !![] : "-";
              n8Z = Math.abs(n8Z);
            }

            Y8Z = Math.floor(Math.round(n8Z / P3Z.resolution) * P3Z.resolution);
            v8Z = Math.round((n8Z - Y8Z) / P3Z.resolution);
            y8Z = Math.floor(v8Z);
            j91.z7L(9);
            var r7r = j91.Q7L(20, 19, 0);
            j91.i7L(2);
            var K7r = j91.W7L(6, 9972, 10665, 12, 1);
            j91.i7L(153);
            var H7r = j91.W7L(13, 6, 17, 6211, 74554);
            j91.z7L(33);
            var O7r = j91.W7L(56190, 8030, 8);
            j91.i7L(33);
            var k7r = j91.Q7L(1274, 423, 18);
            j91.i7L(154);
            var u7r = j91.Q7L(6, 7, 19, 4, 155);
            j91.z7L(120);
            var X7r = j91.W7L(15, 15, 17, 0, 15);
            j91.z7L(83);
            var Y7r = j91.W7L(2064, 5, 2043, 2059, 16);
            j91.i7L(5);
            var Z7r = j91.W7L(5, 2, 17, 5);
            j91.i7L(33);
            var o6r = j91.W7L(69244, 5769, 13);
            j91.i7L(53);
            var B6r = j91.Q7L(6, 32676, 5446, 2);
            j91.i7L(8);
            var c6r = j91.Q7L(539, 5930);
            return V8Z + Y8Z + P3Z.formatter + (y8Z < "10" * r7r ? (K7r, +"3590") != 743.13 ? 394.02 === H7r ? O7r != (k7r, 483.23) ? (!!{}, !{}) : (u7r, "r") : "0" : +"0x2022" : "") + y8Z + (v8Z - y8Z >= 0.5 ? 607.88 == ("5250" | X7r) ? Y7r > (337.23, "4370" & 2147483647) ? +"0x1bf5" : (+"930.04", "819.06" * Z7r) <= (o6r, 237.98) ? (809.56, B6r) : (754.52, c6r) : "+" : "");
          };
        }
      } else {
        if (s3Z.originalPriceFormatter) {
          s3Z.priceFormatter = s3Z.originalPriceFormatter.func;
          s3Z.originalPriceFormatter = null;
        }
      }
    }

    r3Z = this.colorOrStyle(s3Z.textStyle || Q9j);
    m8Z = this.highlightedDraggable;
    d3Z = 0;

    if (m8Z && this.yaxisMatches(m8Z, s3Z)) {
      d3Z = 0.15;
    } else if (s3Z.highlight) {
      d3Z = 0.1;
    }

    if (d3Z) {
      I8Z = r3Z.constructor == String ? r3Z : r3Z.color;
      s3Z.setBackground(this, {
        color: I8Z,
        opacity: d3Z
      });
    }

    j91.K71();

    if (s3Z.pretty) {
      return this.drawYAxisPretty(R3Z, a3Z);
    }

    if (this.runPrepend("drawYAxis", arguments)) {
      return;
    }

    if (!a3Z.noDraw && !s3Z.noDraw) {
      o3Z = s3Z.yAxisPlotter;

      if (!o3Z || !a3Z.noChange) {
        r9j = "l";
        r9j += "e";
        r9j += "f";
        r9j += "t";
        l9j = "s";
        l9j += "tx_";
        l9j += "grid_b";
        l9j += "order";
        R9j = "str";
        R9j += "oke";
        o3Z = s3Z.yAxisPlotter = new m3Z.Plotter();
        l3Z = R3Z.chart;
        t8Z = R3Z.name == l3Z.name && s3Z.name === R3Z.yAxis.name;

        if (!s3Z.priceTick) {
          return;
        }

        K8Z = s3Z.shadow;
        E3Z = a3Z.range;

        if (E3Z) {
          F5U = +"716154763";
          I5U = -1672060787;
          t5U = 2;

          for (var v5U = 1; j91.f6U(v5U.toString(), v5U.toString().length, "5635" ^ 0) !== F5U; v5U++) {
            j91.z7L(9);
            var U6r = j91.W7L(16, 23, 14);
            j91.i7L(7);
            var S6r = j91.Q7L(11, 1, 2, 6, 1);
            K8Z = E3Z[U6r] / E3Z[S6r];
            t5U += 2;
          }

          if (j91.f6U(t5U.toString(), t5U.toString().length, +"82900") !== I5U) {
            j91.i7L(15);
            var J6r = j91.Q7L(1, 11, 4);
            j91.i7L(1);
            var g6r = j91.W7L(14, 7);
            K8Z = E3Z[J6r] / E3Z[g6r];
          }

          K8Z = E3Z[+"1"] - E3Z[0];
        }

        F3Z = K8Z / s3Z.priceTick;
        F3Z = Math.round(F3Z);

        if (s3Z.semiLog) {
          u9U = 1256415780;
          X9U = 1239749968;
          Y9U = 2;

          for (var o0j = 1; j91.V6U(o0j.toString(), o0j.toString().length, 93594) !== u9U; o0j++) {
            L8Z = Math.log(this.valueFromPixel(s3Z.flipped ? s3Z.top : s3Z.bottom, R3Z)) - Math.LN10;
            x8Z = s3Z.logHigh / s3Z.logLow + F3Z;
            Y9U += 2;
          }

          if (j91.V6U(Y9U.toString(), Y9U.toString().length, 34933) !== X9U) {
            L8Z = Math.log(this.valueFromPixel(s3Z.flipped ? s3Z.top : s3Z.bottom, R3Z)) / Math.LN10;
            x8Z = (s3Z.logHigh - s3Z.logLow) / F3Z;
          }
        }

        o3Z.newSeries("grid", "stroke", this.canvasStyle("stx_grid"));
        o3Z.newSeries("text", "fill", r3Z);
        o3Z.newSeries("border", R9j, this.canvasStyle(l9j));
        N3Z = 0;
        O8Z = E3Z ? E3Z["1" >> 1099323680] : s3Z.high;
        Q3Z = E3Z ? E3Z[0] : s3Z.low;
        h3Z = s3Z.displayBorder === null ? l3Z.panel.yAxis.displayBorder : s3Z.displayBorder;

        if (this.axisBorders === !!"") {
          h3Z = ![];
        }

        if (this.axisBorders === !!{}) {
          h3Z = !!1;
        }

        W3Z = l3Z.dynamicYAxis;
        A3Z = W3Z ? s3Z.width : NaN;
        p3Z = this.getYAxisCurrentPosition(s3Z, R3Z);

        if (p3Z == "left") {
          J3Z = s3Z.left + s3Z.width;
        } else {
          J3Z = s3Z.left;
        }

        e3Z = Math.round(J3Z) + 0.5;
        z3Z = h3Z ? +"3" : 0;

        if (p3Z == r9j) {
          z3Z = h3Z ? -3 : +"0";
        }

        if (t8Z) {
          if (s3Z.shadow < +"1") {
            j91.z7L(1);
            var h6r = j91.Q7L(100, 90);
            j91.i7L(37);
            var i6r = j91.Q7L(9, 8);
            N3Z = (parseInt(Q3Z / s3Z.priceTick, h6r) + i6r) * s3Z.priceTick - Q3Z;
          } else {
            N3Z = s3Z.priceTick - Math.round(Q3Z % s3Z.priceTick * R3Z.chart.roundit) / R3Z.chart.roundit;
          }
        } else {
          N3Z = O8Z % s3Z.priceTick;
        }

        B8Z = this.getCanvasFontSize("stx_yaxis");

        for (var u3Z = 0; u3Z < F3Z; u3Z++) {
          K9j = "t";
          K9j += "ext";

          if (s3Z.semiLog) {
            j91.z7L(22);
            q8Z = j91.W7L(x8Z, L8Z, u3Z);
            M3Z = Math.pow(10, q8Z);
          } else {
            if (t8Z) {
              M3Z = Q3Z + u3Z * s3Z.priceTick + N3Z;
            } else {
              M3Z = O8Z - u3Z * s3Z.priceTick - N3Z;
            }
          }

          j8Z = this.pixelFromTransformedValue(M3Z, R3Z, s3Z);
          b3Z = Math.round(j8Z) + 0.5;
          if (b3Z + B8Z / 2 > R3Z.bottom) continue;
          if (b3Z - B8Z / 2 < R3Z.top) continue;
          if (Math.abs(b3Z - s3Z.bottom) < 1) continue;

          if (s3Z.flipped) {
            b3Z = s3Z.top + s3Z.bottom - b3Z;
          }

          if (s3Z.displayGridLines) {
            o3Z.moveTo("grid", R3Z.left + 1, b3Z);
            o3Z.lineTo("grid", R3Z.right - 1, b3Z);
          }

          if (h3Z) {
            j91.z7L(1);
            o3Z.moveTo("border", j91.Q7L(e3Z, 0.5), b3Z);
            j91.z7L(8);
            o3Z.lineTo("border", j91.W7L(e3Z, z3Z), b3Z);
          }

          if (s3Z.priceFormatter) {
            M3Z = s3Z.priceFormatter(this, R3Z, M3Z);
          } else {
            M3Z = this.formatYAxisPrice(M3Z, R3Z, null, s3Z);
          }

          T8Z = s3Z.textBackground ? this.containerColor : null;
          X3Z = 3;
          j91.z7L(52);
          Z3Z = j91.W7L(X3Z, z3Z, J3Z);

          if (p3Z == "left") {
            Z3Z = s3Z.left + X3Z;

            if (s3Z.justifyRight !== !{}) {
              Z3Z = s3Z.left + s3Z.width + z3Z - X3Z;
            }
          } else {
            if (s3Z.justifyRight) {
              Z3Z = J3Z + s3Z.width;
            }
          }

          o3Z.addText(K9j, M3Z, Z3Z, b3Z, T8Z, null, B8Z);

          if (W3Z) {
            A3Z = Math.max(A3Z, l3Z.context.measureText(M3Z).width + Math.abs(z3Z) + X3Z);
          }
        }

        if (h3Z) {
          O9j = "bo";
          O9j += "r";
          O9j += "de";
          O9j += "r";
          H9j = "bo";
          H9j += "rder";
          U8Z = Math.round(s3Z.bottom) + 0.5;
          o3Z.moveTo(H9j, e3Z, s3Z.top);
          o3Z.lineTo("border", e3Z, U8Z);
          o3Z.draw(this.getBackgroundCanvas(l3Z).context, O9j);
        }

        if (W3Z && A3Z > s3Z.width) {
          s3Z._dynamicWidth = A3Z;
          this.calculateYAxisPositions();
          throw new Error("reboot draw");
        } else if (!W3Z && s3Z._dynamicWidth) {
          this.resetDynamicYAxis({
            chartName: l3Z.name
          });
          throw new Error("reboot draw");
        }
      }

      if (s3Z == R3Z.yAxis) {
        this.plotYAxisGrid(R3Z);
      }
    }

    this.runAppend(k9j, arguments);
  };

  m3Z.ChartEngine.prototype.drawYAxisPretty = function (c8Z, H8Z) {
    var q91 = k7DD;
    var c0r, g8Z, S8Z, X9j, u9j, f8Z, p8Z, P8Z, L7Z, a8Z, x7Z, B7Z, o8Z, E8Z, l8Z, h8Z, J8Z, N8Z, b8Z, z8Z, m7Z, t7Z, R8Z, u8Z, r8Z, k8Z, W8Z, K7Z, I7Z, i8Z, q7Z, M8Z, C8Z, d8Z, A8Z, e8Z, Y9j, w8Z, X8Z, s8Z, j7Z, Z8Z, Q8Z, T7Z, Z9j, U7Z, o0r, B0r;
    c0r = "drawYAxi";
    q91.z71();
    c0r += "s";

    if (this.runPrepend("drawYAxis", arguments)) {
      return;
    }

    if (!H8Z) {
      H8Z = {};
    }

    g8Z = H8Z.yAxis ? H8Z.yAxis : c8Z.yAxis;

    if (c8Z.hidden || g8Z.noDraw || !g8Z.width) {
      return;
    }

    if (!H8Z.noDraw) {
      S8Z = g8Z.yAxisPlotter;

      if (!S8Z || !H8Z.noChange) {
        X9j = "l";
        X9j += "e";
        X9j += "ft";
        u9j = "st";
        u9j += "x_ya";
        u9j += "xi";
        u9j += "s";
        S8Z = g8Z.yAxisPlotter = new m3Z.Plotter();
        f8Z = c8Z.chart;

        if (!g8Z.priceTick) {
          return;
        }

        if (isNaN(g8Z.high) || isNaN(g8Z.low)) {
          return;
        }

        p8Z = g8Z.shadow;

        if (H8Z.range) {
          q91.i7L(67);
          var j6r = q91.W7L(18, 7, 17, 8);
          p8Z = H8Z.range[j6r] - H8Z.range[0];
        }

        P8Z = g8Z.height / g8Z.idealTickSizePixels;
        P8Z = Math.round(P8Z);
        L7Z = g8Z.textStyle || u9j;
        S8Z.newSeries("grid", "stroke", this.canvasStyle("stx_grid"));
        S8Z.newSeries("text", "fill", this.colorOrStyle(L7Z));
        S8Z.newSeries("border", "stroke", this.canvasStyle("stx_grid_border"));
        a8Z = H8Z.range;
        x7Z = a8Z ? a8Z[1] : g8Z.high;
        B7Z = a8Z ? a8Z["0" >> 616183584] : g8Z.low;
        o8Z = g8Z.displayBorder === null ? f8Z.panel.yAxis.displayBorder : g8Z.displayBorder;

        if (this.axisBorders === !"1") {
          o8Z = !"1";
        }

        if (this.axisBorders === !!1) {
          o8Z = !![];
        }

        l8Z = f8Z.dynamicYAxis;
        h8Z = l8Z ? g8Z.width : NaN;
        J8Z = this.getYAxisCurrentPosition(g8Z, c8Z);

        if (J8Z == "left") {
          E8Z = g8Z.left + g8Z.width;
        } else {
          E8Z = g8Z.left;
        }

        N8Z = Math.round(E8Z) + 0.5;
        b8Z = o8Z ? 3 : 0;

        if (J8Z == X9j) {
          b8Z = o8Z ? -+"3" : 0;
        }

        z8Z = this.getCanvasFontSize("stx_yaxis");
        m7Z = g8Z.increments;
        t7Z = m7Z.length;
        R8Z = 0;
        u8Z = 1;
        r8Z = 0;
        k8Z = 0;
        W8Z = 0;
        K7Z = Number.MAX_VALUE;

        for (var O7Z = 0; O7Z < 100; O7Z++) {
          q91.z7L(109);
          var y6r = q91.Q7L(20, 5192, 15, 17, 6);
          r8Z = m7Z[R8Z] * Math.pow(y6r, W8Z);
          q91.i7L(35);
          u8Z = Math.floor(q91.W7L(p8Z, r8Z));
          q91.z7L(1);
          I7Z = Math.abs(q91.W7L(P8Z, u8Z));

          if (I7Z > K7Z) {
            break;
          } else {
            K7Z = I7Z;
          }

          if (u8Z == P8Z) {
            k8Z = r8Z;
            break;
          } else if (u8Z > P8Z) {
            R8Z++;

            if (R8Z >= t7Z) {
              R8Z = 0;
              W8Z++;
            }
          } else {
            R8Z--;

            if (R8Z < 0) {
              q91.z7L(1);
              R8Z = q91.W7L(t7Z, 1);
              W8Z--;
            }
          }

          k8Z = r8Z;
        }

        i8Z = Math.ceil(B7Z / k8Z) * k8Z;
        q7Z = g8Z.bottom - this.pixelFromTransformedValue(i8Z, c8Z, g8Z);
        M8Z = 0;

        if (q7Z > g8Z.idealTickSizePixels && g8Z.semiLog && g8Z.prettySemiLog) {
          C8Z = Math.ceil(B7Z);
          d8Z = 0;

          while (i8Z - C8Z >= 10000 && d8Z <= 15) {
            i8Z /= 10;
            C8Z /= 10;
            d8Z++;
          }

          i8Z = Math.ceil(i8Z);
          C8Z = Math.ceil(C8Z);

          for (C8Z; C8Z < i8Z && i8Z % C8Z !== 0; ++C8Z) {
            ;
          }

          i8Z *= Math.pow(10, d8Z);
          C8Z *= Math.pow(+"10", d8Z);

          if (C8Z < i8Z) {
            if (i8Z === k8Z) {
              k8Z = C8Z;
              M8Z = C8Z;
            }

            i8Z = C8Z;
          }
        }

        if (g8Z.height > g8Z.zoom) {
          A8Z = 0;
          e8Z = Number.MAX_VALUE;
          f8Z.context.save();
          this.canvasFont("stx_yaxis", f8Z.context);

          for (var F8Z = 0; F8Z < 100; F8Z++) {
            Y9j = "le";
            Y9j += "f";
            Y9j += "t";
            q91.i7L(22);
            w8Z = q91.W7L(k8Z, i8Z, A8Z);
            if (w8Z > x7Z) break;
            k8Z += M8Z;
            A8Z++;
            X8Z = this.pixelFromTransformedValue(w8Z, c8Z, g8Z);

            if (e8Z - X8Z < z8Z + 1 && M8Z > 0) {
              F8Z = A8Z = 0;
              e8Z = Number.MAX_VALUE;
              k8Z = M8Z;
              q91.i7L(16);
              M8Z *= q91.W7L("2", 0);
              S8Z.reset();
              continue;
            }

            e8Z = X8Z;
            s8Z = Math.round(X8Z) + 0.5;
            if (s8Z + z8Z / +"2" > c8Z.bottom) continue;
            if (s8Z - z8Z / ("2" << 2119852224) < c8Z.top) continue;
            if (Math.abs(s8Z - g8Z.bottom) < 1) continue;

            if (g8Z.displayGridLines) {
              S8Z.moveTo("grid", c8Z.left + 1, s8Z);
              S8Z.lineTo("grid", c8Z.right - 1, s8Z);
            }

            if (o8Z) {
              q91.i7L(1);
              S8Z.moveTo("border", q91.Q7L(N8Z, 0.5), s8Z);
              q91.i7L(8);
              S8Z.lineTo("border", q91.Q7L(N8Z, b8Z), s8Z);
            }

            if (g8Z.priceFormatter) {
              w8Z = g8Z.priceFormatter(this, c8Z, w8Z);
            } else {
              w8Z = this.formatYAxisPrice(w8Z, c8Z, null, g8Z);
            }

            j7Z = g8Z.textBackground ? this.containerColor : null;
            Z8Z = 3;
            q91.z7L(52);
            Q8Z = q91.Q7L(Z8Z, b8Z, E8Z);

            if (J8Z == Y9j) {
              q91.z7L(9);
              var e6r = q91.W7L(10, 55, 48);
              Q8Z = g8Z.left + e6r;

              if (g8Z.justifyRight !== ![]) {
                Q8Z = g8Z.left + g8Z.width + b8Z - Z8Z;
              }
            } else {
              if (g8Z.justifyRight) {
                Q8Z = E8Z + g8Z.width;
              }
            }

            S8Z.addText("text", w8Z, Q8Z, s8Z, j7Z, null, z8Z);

            if (l8Z) {
              q91.i7L(8);
              T7Z = q91.Q7L(w8Z, (1578, 203.06) !== (6400, 3890) ? ("36.91" - 0, 948.69) == (6400, 1323) ? ("p", !!"") : (1920, 7650) <= ("621.42" - 0, 7160) ? 700 : "\xA0" : ("V", "102.67" * 1));
              h8Z = Math.max(h8Z, f8Z.context.measureText(T7Z).width + Math.abs(b8Z) + Z8Z);
            }
          }

          f8Z.context.restore();

          if (F8Z >= 100) {
            console.log("drawYAxisPretty: assertion error. zz reached 100");
          }
        }

        if (o8Z) {
          Z9j = "bo";
          Z9j += "rde";
          Z9j += "r";
          U7Z = Math.round(g8Z.bottom) + 0.5;
          S8Z.moveTo("border", N8Z, g8Z.top);
          S8Z.lineTo("border", N8Z, U7Z);
          S8Z.draw(this.getBackgroundCanvas(f8Z).context, Z9j);
        }

        if (l8Z && h8Z > g8Z.width) {
          o0r = "reb";
          o0r += "oot draw";
          g8Z._dynamicWidth = h8Z;
          this.calculateYAxisPositions();
          throw new Error(o0r);
        } else if (!l8Z && g8Z._dynamicWidth) {
          B0r = "rebo";
          B0r += "o";
          B0r += "t dra";
          B0r += "w";
          this.resetDynamicYAxis({
            chartName: f8Z.name
          });
          throw new Error(B0r);
        }
      }

      if (g8Z == c8Z.yAxis) {
        this.plotYAxisGrid(c8Z);
      }
    }

    this.runAppend(c0r, arguments);
  };
};

d9z = {};
F9z(d9z);
Q9z(d9z);
J9z(d9z);
W9z(d9z);
A9z(d9z);
e9z(d9z);
X9z(d9z);
Z9z(d9z);
p9z(d9z);
B4z(d9z);
m4z(d9z);
t4z(d9z);
K4z(d9z);
O4z(d9z);
I4z(d9z);
L4z(d9z);
x4z(d9z);
q4z(d9z);
j4z(d9z);
T4z(d9z);
U4z(d9z);
n4z(d9z);
y4z(d9z);
V4z(d9z);
Y4z(d9z);
v4z(d9z);
D4z(d9z);
G4z(d9z);
g4z(d9z);
S4z(d9z);
c4z(d9z);
C4z(d9z);
i4z(d9z);
H4z(d9z);
k4z(d9z);
f4z(d9z);
w4z(d9z);
var _d9z = d9z,
    s4z = _d9z.CIQ,
    R4z = _d9z.SplinePlotter,
    o4z = _d9z.timezoneJS,
    P4z = _d9z.$$,
    b4z = _d9z.$$$;

/* eslint-enable  */

/* jshint ignore:end   */

/* ignore jslint end   */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./chartiq/production/js/deprecated.js":
/*!*********************************************!*\
  !*** ./chartiq/production/js/deprecated.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/chartiq.js */ "./chartiq/production/js/chartiq.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 *	8.2.0
 *	Generation date: 2021-03-19T19:54:09.125Z
 *	Client name: deriv limited
 *	Package Type: Technical Analysis 8.2
 *	License type: annual
 *	Expiration date: "2022/04/01"
 *	Domain lock: ["127.0.0.1","localhost","binary.com","binary.sx","binary.me","binary.bot","deriv.com","deriv.app","deriv.me"]
 *	iFrame lock: true
 */

/***********************************************************
 * Copyright by ChartIQ, Inc.
 * Licensed under the ChartIQ, Inc. Developer License Agreement https://www.chartiq.com/developer-license-agreement
*************************************************************/

/*************************************** DO NOT MAKE CHANGES TO THIS LIBRARY FILE!! **************************************/

/* If you wish to overwrite default functionality, create a separate file with a copy of the methods you are overwriting */

/* and load that file right after the library has been loaded, but before the chart engine is instantiated.              */

/* Directly modifying library files will prevent upgrades and the ability for ChartIQ to support your solution.          */

/*************************************************************************************************************************/

/* eslint-disable no-extra-parens */

/***********************************************************
 * Copyright by ChartIQ, Inc.
 * Licensed under the ChartIQ, Inc. Developer License Agreement https://www.chartiq.com/developer-license-agreement
*************************************************************/

/*************************************** DO NOT MAKE CHANGES TO THIS LIBRARY FILE!! **************************************/

/* If you wish to overwrite default functionality, create a separate file with a copy of the methods you are overwriting */

/* and load that file right after the library has been loaded, but before the chart engine is instantiated.              */

/* Directly modifying library files will prevent upgrades and the ability for ChartIQ to support your solution.          */

/*************************************************************************************************************************/

/*
	Deprecated functions - lite
*/

var WARN_INTERVAL = 10000;
/**
 * Warn developer of use of deprecated function.
 *
 * All deprecated functions should be calling this log whenever it is used.
 * Warning will be output to the console up to 10 seconds after it is logged, in order to help suppress duplicates.
 *
 * @param {string} message Message to output
 * @private
 */

var warnings = null;

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].deprecationWarning = function (message) {
  if (!warnings) {
    warnings = {};
    setInterval(function () {
      for (var m in warnings) {
        console.warn(m + " (" + warnings[m] + " occurrences)");
        delete warnings[m];
      }
    }, WARN_INTERVAL);
  }

  if (!warnings[message]) warnings[message] = 1;else warnings[message]++;
};

var log = _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].deprecationWarning;
/* Function.ciqInheritsFrom, Function.stxInheritsFrom */

if (!Function.prototype.ciqInheritsFrom) {
  /**
   * The built-in Function object.
   * @external Function
   * @see [Function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function} on the Mozilla Developer Network.
   */

  /**
   * **Deprecated since 7.4.0.** Use {@link CIQ.inheritsFrom} instead.
   *
   * Template for JavaScript inheritance.
   *
   * By default the constructor (ctor) is called with no arguments.
   *
   * @param {object} ctor The parent class or object.
   * @param {boolean} [autosuper=true] Set to false to prevent the base class constructor from being called automatically.
   * @memberof external:Function
   * @alias external:Function#ciqInheritsFrom
   * @deprecated As of 7.4.0. Use {@link CIQ.inheritsFrom} instead.
   */
  Function.prototype.ciqInheritsFrom = function (ctor, autosuper) {
    log("Function.prototype.ciqInheritsFrom() has been deprecated.  Use CIQ.inheritsFrom(me, ctor, autosuper) instead.");
    _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].inheritsFrom(this, ctor, autosuper);
  };

  Function.prototype.stxInheritsFrom = Function.prototype.ciqInheritsFrom; // backward compatibility
}
/**
 * The built-in String object.
 * @external String
 * @see [String]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String} on the Mozilla Developer Network.
 */

/**
 * **Deprecated since 7.4.0.** Use {@link CIQ.capitalize} instead.
 *
 * Capitalizes the first letter of a string.
 *
 * @return {string} Capitalized version of the string.
 * @memberof external:String
 * @alias external:String#capitalize
 * @deprecated As of 7.4.0. Use {@link CIQ.capitalize} instead.
 */


String.prototype.capitalize = function () {
  log("String.prototype.capitalize() has been deprecated.  Use CIQ.capitalize(string) instead.");
  return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].capitalize(this);
};
/**
 * **Deprecated since 7.4.0.** Use native CanvasRenderingContext2D methods such as moveTo(), lineTo() and setLineDash() instead.
 *
 * Dashed line polyfill for the canvas. Note that dashed lines are expensive operations when not supported natively.
 * See {@link external:CanvasRenderingContext2D#stxLine}.
 *
 * @param {number} fromX Starting point of the X-axis.
 * @param {number} fromY Starting point of the Y-axis.
 * @param {number} toX Destination on the X-axis.
 * @param {number} toY Destination on the Y-axis.
 * @param {string[]} pattern Array of stroke patterns.
 * @memberof external:CanvasRenderingContext2D
 * @alias external:CanvasRenderingContext2D#dashedLineTo
 * @deprecated As of 7.4.0. Use native CanvasRenderingContext2D methods such as moveTo(), lineTo() and setLineDash() instead.
 *
 * @example
 * <caption>Native [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D}
 * methods used to draw a horizontal dashed line across the center of the screen:</caption>
 * var canvas = stxx.chart.backgroundCanvas;
 * var ctx = canvas.getContext("2d");
 * ctx.beginPath();
 * ctx.setLineDash([10, 10]);
 * ctx.moveTo(0, canvas.height/2);
 * ctx.lineTo(canvas.width, canvas.height/2);
 * ctx.stroke();
 */


CanvasRenderingContext2D.prototype.dashedLineTo = function (fromX, fromY, toX, toY, pattern) {
  log("CanvasRenderingContext2D.prototype.dashedLineTo() has been deprecated.  Use native CanvasRenderingContext2D methods such as moveTo(), lineTo() and setLineDash() instead."); // Error check.

  if (!(pattern instanceof Array)) {
    if (pattern) console.log('WARNING: Unsupported drawing pattern "' + pattern + '"; defaulting to "solid"');
    this.stxLine(fromX, fromY, toX, toY, this.strokeStyle, this.globalAlpha, this.lineWidth);
    return;
  } // can't dash if we do not have proper values


  if (fromY === Infinity || fromX === Infinity || toY === Infinity || toX === Infinity) return; // Our growth rate for our line can be one of the following:
  // (+,+), (+,-), (-,+), (-,-)
  // Because of this, our algorithm needs to understand if the x-coord and
  // y-coord should be getting smaller or larger and properly cap the
  // values
  // based on (x,y).

  var lt = function lt(a, b) {
    return a - b <= 0.00000001;
  };

  var gt = function gt(a, b) {
    return a - b >= -0.00000001;
  };

  var capmin = function capmin(a, b) {
    return Math.min(a, b);
  };

  var capmax = function capmax(a, b) {
    return Math.max(a, b);
  };

  var checkX = {
    thereYet: gt,
    cap: capmin
  };
  var checkY = {
    thereYet: gt,
    cap: capmin
  };

  if (fromY - toY > 0) {
    checkY.thereYet = lt;
    checkY.cap = capmax;
  }

  if (fromX - toX > 0) {
    checkX.thereYet = lt;
    checkX.cap = capmax;
  }

  this.moveTo(fromX, fromY);
  if (isNaN(fromX) || isNaN(fromY)) return;
  var offsetX = fromX;
  var offsetY = fromY;
  var idx = 0,
      dash = true;

  while (!(checkX.thereYet(offsetX, toX) && checkY.thereYet(offsetY, toY))) {
    var ang = Math.atan2(toY - fromY, toX - fromX);
    var len = pattern[idx];
    offsetX = checkX.cap(toX, offsetX + Math.cos(ang) * len);
    offsetY = checkY.cap(toY, offsetY + Math.sin(ang) * len);
    if (dash) this.lineTo(offsetX, offsetY);else this.moveTo(offsetX, offsetY);
    idx = (idx + 1) % pattern.length;
    dash = !dash;
  }
};
/**
 * **Deprecated since 7.4.0.** Use native CanvasRenderingContext2D methods such as moveTo() and lineTo() instead.
 *
 * @param {number} fromX Starting point of the X-axis.
 * @param {number} fromY Starting point of the Y-axis.
 * @param {number} toX Destination on the X-axis.
 * @param {number} toY Destination on the Y-axis.
 * @param {string} color CSS-compatible color, such as hex, rgb, rgba or even color names such as "orange".
 * @param {number} opacity The alpha. A number between 0 and 1.
 * @param {number} lineWidth The line width in pixels.
 * @param {number[]} [pattern] An array that contains the number of pixels on and then the number of pixels off.
 *		For instance [1,1] would create a dotted pattern by turning one pixel on and then one pixel off repeatedly.
 * @memberof external:CanvasRenderingContext2D
 * @alias external:CanvasRenderingContext2D#stxLine
 * @deprecated As of 7.4.0. Use native CanvasRenderingContext2D methods such as moveTo() and lineTo() instead.
 *
 * @example
 * <caption>Native [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D}
 * methods used to draw a thick blue line diagonally across the screen:</caption>
 * var canvas = stxx.chart.backgroundCanvas;
 * var ctx = canvas.getContext("2d");
 * ctx.beginPath();
 * ctx.strokeStyle = "blue";
 * ctx.lineWidth = 2;
 * ctx.moveTo(0, 0);
 * ctx.lineTo(canvas.width, canvas.height/2);
 * ctx.stroke();
 */


CanvasRenderingContext2D.prototype.stxLine = function (fromX, fromY, toX, toY, color, opacity, lineWidth, pattern) {
  log("CanvasRenderingContext2D.prototype.stxLine() has been deprecated.  Use native CanvasRenderingContext2D methods such as moveTo() and lineTo() instead.");
  this.beginPath();
  this.lineWidth = lineWidth;
  this.strokeStyle = color;
  this.globalAlpha = opacity;

  if (pattern && pattern.length) {
    this.dashedLineTo(fromX, fromY, toX, toY, pattern);
  } else {
    this.moveTo(fromX, fromY);
    this.lineTo(toX, toY);
  }

  this.stroke();
  this.closePath();
  this.lineWidth = 1;
};
/**
 * **Deprecated since 7.4.0.** Use native CanvasRenderingContext2D methods such as arc() instead.
 *
 * Add native circle drawing to the canvas.
 *
 * @param  {number} x X-axis position of the center of the circle.
 * @param  {number} y Y-axis position of the center of the circle.
 * @param  {number} radius Radius of the circle.
 * @param  {boolean} filled If true, then the circle is filled.
 * @memberof external:CanvasRenderingContext2D
 * @alias external:CanvasRenderingContext2D#stxCircle
 * @deprecated As of 7.4.0. Use native CanvasRenderingContext2D methods such as arc() instead.
 *
 * @example
 * <caption>Native [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D}
 * methods used to draw a red circle in the center of the screen:</caption>
 * var canvas = stxx.chart.backgroundCanvas;
 * var ctx = canvas.getContext("2d");
 * ctx.beginPath();
 * ctx.fillStyle = "red";
 * ctx.arc(canvas.width/2, canvas.height/2, 100, 0, 2 * Math.PI);
 * ctx.fill();
 */


CanvasRenderingContext2D.prototype.stxCircle = function (x, y, radius, filled) {
  log("CanvasRenderingContext2D.prototype.stxCircle() has been deprecated.  Use native CanvasRenderingContext2D methods such as arc() instead.");
  this.beginPath();
  this.arc(x, y, radius, 0, 2 * Math.PI, false);
  if (filled) this.fill();
  this.stroke();
  this.closePath();
};
/**
 * Returns an instance of
 * [XMLHttpRequest]{@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest}.
 *
 * @param {string} url The URL to which the request is sent (not used).
 * @return {object} An XMLHttpRequest instance.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use `new XMLHttpRequest()`.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].getAjaxServer = function (url) {
  log("CIQ.getAjaxServer() has been deprecated.  Use `new XMLHttpRequest` instead.");
  return new XMLHttpRequest();
};
/**
 * Converts an onClick event to an ontouchend event. If the device is known to be a touch device then this can be used
 * to change onclick events that are set as attributes (in HTML). ontouchend events are more responsive than onclick events
 * and can improve the user experience. When coding for cross-device implementations it is recommended to use {@link CIQ.safeClickTouch}
 * programmatically rather than using hardcoded attributes
 * @param  {string} id The id of a node containing an onClick attribute
 * @memberof CIQ
 * @deprecated
 * @since 6.0.0 Deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].convertClickToTouchEnd = function (id) {
  log("CIQ.convertClickToTouchEnd() has been deprecated.  Use CIQ.safeClickTouch() instead.");
  var node = document.getElementById(id);
  var s = node.getAttribute("onClick");

  if (s) {
    node.removeAttribute("onClick");
    node.setAttribute("onTouchEnd", s);
  }
};
/**
 * Converts a date to YYYY-MM-DDTHH:MM:SSZ format (UTC).
 *
 * @param {date} dt The JavaScript `Date` object to be converted.
 * @return {string} The date in YYYY-MM-DDTHH:MM:SSZ format.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Date.prototype.toISOString]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString} method.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].standardUTCDate = function (dt) {
  log("CIQ.standardUTCDate(dt) has been deprecated.  Use dt.toISOString() instead.");
  var m = dt.getUTCMonth() + 1;
  if (m < 10) m = "0" + m;
  var d = dt.getUTCDate();
  if (d < 10) d = "0" + d;
  var h = dt.getUTCHours();
  if (h < 10) h = "0" + h;
  var mn = dt.getUTCMinutes();
  if (mn < 10) mn = "0" + mn;
  var s = dt.getUTCSeconds();
  if (s < 10) s = "0" + s;
  return "" + dt.getUTCFullYear() + "-" + m + "-" + d + "T" + h + ":" + mn + ":" + s + "Z";
};
/**
 * Determines whether the input date is during daylight saving time (DST).
 *
 * @param {date} [dt] The date to check. If the parameter is omitted, the current date is used.
 * @return {boolean} True for DST, otherwise false.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. This function may return inaccurate results for some
 * 		countries.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].isDST = function (dt) {
  log("CIQ.isDST() has been deprecated.  Use dt.toISOString() instead.");
  if (!dt) dt = new Date();
  var jan = new Date(dt.getFullYear(), 0, 1);
  var jul = new Date(dt.getFullYear(), 6, 1);
  var stdOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());
  return dt.getTimezoneOffset() != stdOffset;
};
/**
 * Gets the source element for a DOM event.
 *
 * @param {object} [e] The DOM event, if available from the browser. If an event is not
 * 		provided, the window event is used.
 * @return {object} The DOM node that registered the event.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Event.target]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event/target}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].getEventDOM = function (e) {
  log("CIQ.getEventDOM() has been deprecated.  Use `e.target` instead.");
  return e ? e.target : window.event.srcElement;
};
/**
 * **Deprecated since 8.1.0.** Use {@link CIQ.elementDimensions} instead.
 *
 * Measures the width of a DOM element, including left and right margins.
 *
 * @param {HTMLElement} node The DOM element for which the width is measured.
 * @return {number} The width of the DOM element, including margins.
 *
 * @memberof CIQ
 * @deprecated Use {@link CIQ.elementDimensions}; for example,
 * 		`CIQ.elementDimensions(node, {margin:1, padding:1, border:1}).width`.
 * @since 8.1.0 Deprecated.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].outerWidth = function (node) {
  log("CIQ.outerWidth() has been deprecated.  Use `CIQ.elementDimensions(node, {margin:1, padding:1, border:1}).width` instead.");
  var width = node.offsetWidth;
  width += _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].stripPX(getComputedStyle(node).marginLeft);
  width += _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].stripPX(getComputedStyle(node).marginRight);
  return width;
};
/**
 * **Deprecated since 8.1.0.** Use `node.innerHTML=""` instead.
 *
 * Removes all DOM elements from within a given node. This is extremely useful when dynamically
 * generating content.
 *
 * @param {HTMLElement} node The node from which all DOM elements are removed.
 *
 * @memberof CIQ
 * @deprecated Use `node.innerHTML=""`.
 * @since 8.1.0 Deprecated.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].clearNode = function (node) {
  log("CIQ.clearNode() has been deprecated.  Use `node.innerHTML=''` instead.");

  if (node.hasChildNodes()) {
    while (node.childNodes.length >= 1) {
      node.removeChild(node.firstChild);
    }
  }
};
/**
 * **Deprecated since 8.1.0.** Use `Element.parentElement.prototype.closest()` instead.
 *
 * Convenience function for selecting a DOM element's closest parent element matching a selector.
 *
 * Use instead of `jQuery.closest()`.
 *
 * @param {HTMLElement} el The DOM element for which the parent element is obtained.
 * @param {string} selector A CSS selector used to select the parent element.
 * @return {HTMLElement} The parent element of `el` matching `selector`, or null if no match is
 * 		found.
 *
 * @memberof CIQ
 * @deprecated Use `Element.parentElement.prototype.closest()`.
 * @since
 * - 7.3.0
 * - 8.1.0 Deprecated.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].findClosestParent = function (el, selector) {
  log("CIQ.findClosestParent() has been deprecated.  Use `Element.parentElement.prototype.closest()` instead.");
  var matchesFn; // find vendor prefix

  ["matches", "webkitMatchesSelector", "mozMatchesSelector", "msMatchesSelector", "oMatchesSelector"].some(function (fn) {
    if (typeof document.body[fn] == "function") {
      matchesFn = fn;
      return true;
    }

    return false;
  });
  if (!matchesFn) return false;
  var parent; // traverse parents

  while (el) {
    parent = el.parentElement;

    if (parent && parent[matchesFn](selector)) {
      return parent;
    }

    el = parent;
  }

  return null;
};
/**
 * Appends a class name to a node if the node doesn't already have that class. Used to
 * control dynamic behavior via CSS.
 *
 * @param {object} node The DOM element to which the class is added.
 * @param {string} className Name of the class to add to the DOM element.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Element.classList.add(className)]{@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add}.
 *
 * @example
 * // Apply an "active" css look to an object.
 * CIQ.appendClassName(myNode, "active");
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].appendClassName = function (node, className) {
  log("CIQ.appendClassName() has been deprecated.  Use `node.classList.add(className)` instead.");
  if (!node) return;
  if (node.className == className) return; // already a class

  var s = node.className.split(" ");

  for (var i = 0; i < s.length; i++) {
    if (s[i] == className) return; // already a class
  }

  if (!node.className) node.className = className;else node.className += " " + className;
};
/**
 * Removes a class name from a DOM node.
 *
 * @param {object} node The DOM element from which the class name is removed.
 * @param {string} className The class name to remove.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Element.classList.remove(className)]{@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].unappendClassName = function (node, className) {
  log("CIQ.unappendClassName() has been deprecated.  Use `node.classList.remove(className)` instead.");
  if (!node) return;
  if (node.className.indexOf(className) == -1) return;

  if (node.className == className) {
    node.className = "";
  } else {
    var s = node.className.split(" ");
    var newClassName = "";

    for (var i = 0; i < s.length; i++) {
      if (s[i] == className) continue;
      if (newClassName !== "") newClassName += " ";
      newClassName += s[i];
    }

    node.className = newClassName;
  }
};
/**
 * Convenience method for swapping two class names on a DOM node. Typically used to change
 * state.
 *
 * @param {object} node The DOM element on which the class names are swapped.
 * @param {string} newClassName The class name to swap in.
 * @param {string} oldClassName The class name to swap out.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Element.classList.replace(oldClassName, newClassName)]{@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].swapClassName = function (node, newClassName, oldClassName) {
  log("CIQ.swapClassName() has been deprecated.  Use `node.classList.replace(oldClassName, newClassName)` instead.");
  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].unappendClassName(node, oldClassName);
  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].appendClassName(node, newClassName);
};
/**
 * Determines whether a class name is currently assigned to a DOM element.
 *
 * @param {object} node The DOM node checked for the presence of the class name.
 * @param {string} className The class name for which to check.
 * @return {boolean} True, if the class name is currently assigned to the DOM element;
 * 		otherwise, false.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Element.classList.contains(className)]{@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].hasClassName = function (node, className) {
  log("CIQ.hasClassName() has been deprecated.  Use `node.classList.contains(className)` instead.");
  if (!node) return false;
  if ((" " + node.className + " ").indexOf(" " + className + " ") > -1) return true;
  return false;
};
/**
 * Toggles the class name on or off on a DOM element.
 *
 * @param {HTMLElement} node The DOM element on which the class name is toggled on or off.
 * @param {string} className The class name to toggle on or off.
 *
 * @memberof CIQ
 * @deprecated As of 8.0.0. Use [Element.classList.toggle(className)]{@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].toggleClassName = function (node, className) {
  log("CIQ.toggleClassName() has been deprecated.  Use `node.classList.toggle(className)` instead.");
  if (_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].hasClassName(node, className)) _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].unappendClassName(node, className);else _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].appendClassName(node, className);
};
/*
 * http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */


(function () {
  var attachEvent = document.attachEvent;
  var isIE = navigator.userAgent.match(/Trident/);

  var requestFrame = function () {
    var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (fn) {
      return setTimeout(fn, 20);
    };

    return function (fn) {
      return raf(fn);
    };
  }();

  var cancelFrame = function () {
    var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
    return function (id) {
      return cancel(id);
    };
  }();

  function resizeListener(e) {
    var win = e.target || e.srcElement;
    if (win.__resizeRAF__) cancelFrame(win.__resizeRAF__);
    win.__resizeRAF__ = requestFrame(function () {
      var trigger = win.__resizeTrigger__;

      trigger.__resizeListeners__.forEach(function (fn) {
        fn.call(trigger, e);
      });
    });
  }

  function objectLoad(e) {
    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;
    this.contentDocument.defaultView.addEventListener("resize", resizeListener);
  }
  /**
   * **Deprecated since 7.4.0.** Use {@link CIQ.UI.addResizeListener} instead.
   *
   * Attaches a callback to listen for resize events on the DOM.
   *
   * Designed to be used as a helper method for the included {@link WebComponents}. A full tutorial on how to work with
   * and customize the Web Components can be found here: {@tutorial Web Component Interface}.
   *
   * @param {node} element The node to which the listener is attached.
   * @param {function} callback The listener function to attach to the DOM element.
   * @memberof CIQ
   * @deprecated As of 7.4.0. Use {@link CIQ.UI.addResizeListener}.
   */


  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].addResizeListener = function (element, fn) {
    log("CIQ.addResizeListener() has been deprecated.  Use CIQ.UI.addResizeListener() instead.");
    var uiManager = document.querySelector("cq-ui-manager");

    if (uiManager.length > 0) {
      uiManager = uiManager[0];
      uiManager.registerForResize(element);
    }

    if (!element.__resizeListeners__) {
      element.__resizeListeners__ = [];

      if (attachEvent) {
        element.__resizeTrigger__ = element;
        element.attachEvent("onresize", resizeListener);
      } else {
        //if (!getComputedStyle(element) || getComputedStyle(element).position == 'static') element.style.position = 'relative';
        var obj = element.__resizeTrigger__ = document.createElement("object");
        obj.setAttribute("style", "visibility:hidden; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; border:0px;");
        obj.__resizeElement__ = element;
        obj.onload = objectLoad;
        obj.type = "text/html";
        if (isIE) element.appendChild(obj);
        obj.data = "about:blank";
        if (!isIE) element.appendChild(obj);
      }
    }

    element.__resizeListeners__.push(fn);
  };
  /**
   * Removes an attached resize event listener from a DOM element.
   *
   * Designed to be used as a helper method for the included {@link WebComponents}.
   * A full tutorial on how to work with and customize the Web Components can be found here: {@tutorial Web Component Interface}.
   *
   * @param {node} element The node from which the listener is removed.
   * @param {function} callback The listener function to be removed.
   * @memberof CIQ
   * @deprecated As of 7.4.0. Use {@link CIQ.UI.removeResizeListener}.
   */


  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].removeResizeListener = function (element, fn) {
    log("CIQ.removeResizeListener() has been deprecated.  Use CIQ.UI.removeResizeListener() instead.");
    var uiManager = document.querySelector("cq-ui-manager");

    if (uiManager.length > 0) {
      uiManager = uiManager[0];
      uiManager.unregisterForResize(element);
    }

    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);

    if (!element.__resizeListeners__.length) {
      if (attachEvent) element.detachEvent("onresize", resizeListener);else {
        element.__resizeTrigger__.contentDocument.defaultView.removeEventListener("resize", resizeListener);

        element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);
      }
    }
  };
})();
/**
 * This function is no longer used by the library. Use {@link CIQ.Renderer#adjustYAxis} instead.
 * @memberof CIQ.Renderer
 * @deprecated As of 5.2.0. no longer used in library..
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Renderer.prototype.performCalculations = function () {
  log("CIQ.Renderer.prototype.performCalculations has been deprecated.  Use CIQ.Renderer.prototype.adjustYAxis instead.");
};
/**
 * **Deprecated**  Use {@link CIQ.ChartEngine.XAxis#noDraw} and {@link CIQ.ChartEngine.YAxis#noDraw} instead.
 *
 * Override this function to hide the date which floats along the X axis when crosshairs are enabled. Return `true` to hide the date or `false` to display.
 * @memberof CIQ.ChartEngine
 * @deprecated as of 6.0.0 no longer used in library.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.hideDates = function () {
  log("CIQ.Renderer.hideDates is no longer supported.  To hide an axis, set its noDraw property.  To hide the floating date label, set stxx.controls.floatDate=null.");
  return false;
};
/**
 * Returns true if the chartType displays OHL data.
 * @param  {string} chartType The chart type (layout.chartType)
 * @return {boolean} True if the chart type only displays close values
 * @memberof CIQ.ChartEngine
 * @since 05-2016-10.1 "baseline_delta_mountain" and "colored_mountain" are also available.
 * @deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.chartShowsHighs = function (chartType) {
  log("CIQ.ChartEngine.prototype.chartShowsHighs has been deprecated.  Use CIQ.ChartEngine.Chart.prototype.highLowBars instead.");
  if ({
    line: 1,
    colored_line: 1,
    mountain: 1,
    colored_mountain: 1,
    baseline_delta: 1,
    baseline_delta_mountain: 1,
    histogram: 1,
    scatterplot: 1,
    step: 1,
    colored_step: 1
  }[chartType] == 1) return false;
  return true;
};
/**
 * Draws a filled rectangle on the chart.
 *
 * @param {number} left The x-axis coordinate of the starting point of the rectangle.
 * @param {number} width The width of the rectangle.
 * @param {number} top The y-axis coordinate of the starting point of the rectangle.
 * @param {number} height The height of the rectangle.
 * @param {string} className A CSS class name used to set the fill color of the rectangle.
 * @param {external:CanvasRenderingContext2D} [context] The canvas context on which the
 * 		rectangle is drawn. If this parameter is not provided, the chart context is used.
 *
 * @memberOf CIQ.ChartEngine
 * @deprecated As of 8.0.0. Use [CanvasRenderingContext2D.fillRect()]{@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.createBlock = function (left, width, top, height, className, context) {
  log("CIQ.ChartEngine.prototype.createBlock has been deprecated.  Use native canvas context operation fillRect instead.");
  if (!context) context = this.chart.context;

  if (typeof height == "undefined") {
    return;
  }

  this.canvasColor(className, context);
  context.fillRect(left, top, width, height);
  context.globalAlpha = 1;
};
/**
 * Turns the volume underlay indicator on or off.
 *
 * @param {boolean} data True to turn on the underlay, false to turn it off.
 *
 * @memberof CIQ.ChartEngine
 * @deprecated As of 8.0.0. To enable a volume underlay, use {@link CIQ.Studies.addStudy};
 * 		to disable a volume underlay, {@link CIQ.Studies.removeStudy}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.setVolumeUnderlay = function (data) {
  log("CIQ.ChartEngine.prototype.setVolumeUnderlay is no longer supported.  To enable a volume underlay, use CIQ.Studies.addStudy(stxx, 'vol undr').  To disable, use CIQ.Studies.removeStudy.");
  this.layout.volumeUnderlay = data;
  if (this.chart.canvas) this.draw();
  this.changeOccurred("layout");
};
/**
 * Exports all of the drawings on the chart(s) so that they can be saved to an external database and later reconstructed.
 *
 * Note: This function has been renamed {@link CIQ.ChartEngine#exportDrawings}.
 *
 * @see {@link CIQ.ChartEngine#exportDrawings}
 * @see {@link CIQ.ChartEngine#importDrawings}
 * @return {array} An array of objects representing each drawing
 * @memberof CIQ.ChartEngine
 * @deprecated since 3.0.0
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.serializeDrawings = function () {
  log("CIQ.ChartEngine.prototype.serializeDrawings has been deprecated.  Use CIQ.ChartEngine.prototype.exportDrawings instead.");
  return this.exportDrawings();
};
/**
 * Imports drawings from an array originally created by {@link CIQ.ChartEngine#serializeDrawings}.
 *
 * Note: This function and serializeDrawings have been renamed {@link CIQ.ChartEngine#importDrawings} and {@link CIQ.ChartEngine#exportDrawings} respectively.
 *
 * To immediately render the reconstructed drawings, you must call `draw()`.
 * See {@tutorial Using and Customizing Drawing Tools} for more details.
 * @see {@link CIQ.ChartEngine#exportDrawings}
 * @see {@link CIQ.ChartEngine#importDrawings}
 * @param  {array} arr An array of serialized drawings
 * @memberof CIQ.ChartEngine
 * @deprecated since 4.0.0
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.reconstructDrawings = function (arr) {
  log("CIQ.ChartEngine.prototype.reconstructDrawings has been deprecated.  Use CIQ.ChartEngine.prototype.importDrawings instead.");
  this.importDrawings(arr);
}; // @deprecated Use pixelFromBar


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.computePosition = function (x, offset) {
  log("CIQ.ChartEngine.prototype.computePosition has been deprecated.  Use CIQ.ChartEngine.prototype.pixelFromBar instead.");
  if (typeof offset == "undefined") offset = 0;
  var position = x * this.layout.candleWidth + offset + this.micropixels;
  return position;
}; // @deprecated


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.computeColor = function (open, close) {
  log("CIQ.ChartEngine.prototype.computeColor has been deprecated.  There is no suggested alternative.");
  if (open < close) return "stx_candle_up";
  if (open > close) return "stx_candle_down";
  return "stx_candle_shadow";
}; // @deprecated


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.computeLength = function (high, low) {
  log("CIQ.ChartEngine.prototype.computeLength has been deprecated.  Use CIQ.ChartEngine.prototype.pixelFromPrice to compute values and find the difference.");
  var h = this.pixelFromPrice(high);
  var l = this.pixelFromPrice(low);
  return l - h;
}; // deprecated


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.setCrosshairColors = function () {
  log("CIQ.ChartEngine.prototype.setCrosshairColors is no longer supported.  Use CSS to set the crosshair color");
};
/**
 * A version of {@link CIQ.ChartEngine#valueFromPixel} that will untransform a transformation such as a comparison chart.
 * @param  {number} y	  The y pixel location
 * @param  {CIQ.ChartEngine.Panel} panel A panel object. It is strongly recommended to pass the panel! (see {@link CIQ.ChartEngine#valueFromPixel})
 * @param {CIQ.ChartEngine.YAxis} [yAxis] The yaxis to use. Defaults to panel.yAxis.
 * @return {number}		  The price or value
 * @memberof CIQ.ChartEngine
 * @deprecated Use {@link CIQ.ChartEngine#valueFromPixel} instead
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.valueFromPixelUntransform = function (y, panel, yAxis) {
  log("CIQ.ChartEngine.prototype.valueFromPixelUntransform has been deprecated.  Use CIQ.ChartEngine.prototype.valueFromPixel instead.");
  return this.valueFromPixel(y, panel, yAxis);
};
/**
 * > ** This function has been deprecated in favor of {@link CIQ.ChartEngine#pixelFromPrice}. It should no longer be used.
 * > <br>Use {@link CIQ.ChartEngine#pixelFromTransformedValue} to get the pixel location based on the transformed value (percentage comparison change, for example).
 *
 * @param  {number} price	  The price or value
 * @param  {CIQ.ChartEngine.Panel} panel A panel object (see {@link CIQ.ChartEngine#pixelFromPrice})
 * @param {CIQ.ChartEngine.YAxis} [yAxis] The yaxis to use
 * @return {number}		  The y axis pixel location
 * @memberof CIQ.ChartEngine
 * @deprecated Use {@link CIQ.ChartEngine#pixelFromPrice} instead
 * @since 4.0.0 Now behaves like pixelFromPriceTransform. That is, on a comparison chart, pixelFromPrice accepts an actual stock price, not a percentage value.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.pixelFromPriceTransform = function (price, panel, yAxis) {
  log("CIQ.ChartEngine.prototype.pixelFromPriceTransform has been deprecated.  Use CIQ.ChartEngine.prototype.pixelFromPrice instead.");
  return this.pixelFromPrice(price, panel, yAxis);
}; //deprecated, use static version


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.isDailyInterval = function (interval) {
  log("CIQ.ChartEngine.prototype.isDailyInterval has been deprecated. Use CIQ.ChartEngine.isDailyInterval instead.");
  return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.isDailyInterval(interval);
};
/**
 * Renders a chart for a particular instrument from the data passed in or fetches new data from the attached {@link quotefeed}.
 *
 * 	This method has been deprecated, use {@link CIQ.ChartEngine#loadChart}.
 *
 * @param  {string|object}		symbol				The symbol or equation for the new chart - a symbol string, equation or an object representing the symbol can be used.
 * 													<br>After the new chart is initialized, it will contain both a symbol string (stxx.chart.symbol) and a symbol object (stxx.chart.symbolObject).
 * 													<br>You can send anything you want in the symbol object, but you must always include at least a 'symbol' element. Both these variables will be available for use wherever the {@link CIQ.ChartEngine.Chart} object is present. For example, if using a {@link quotefeed} for gathering data, params.stx.chart.symbolObject will contain your symbol object.
 * 													<br>To allow equations to be used on a chart, the {@link CIQ.ChartEngine#allowEquations} parameter must be set to `true` and the equation needs to be preceded by an equals sign (=) in order for it to be parsed as an equation.
 * 													<br>See {@link CIQ.formatEquation} and {@link CIQ.computeEquationChart} for more details on allowed equations syntax.
 * @param  {array}					[masterData]		An array of [properly formatted OHLC objects]{@tutorial InputDataFormat} to create a chart. Each element should at a minimum contain a "Close" field (capitalized).
 *													If the charting engine has been configured to use a [QuoteFeed]{@link CIQ.ChartEngine#attachQuoteFeed}
 *													then masterData does not need to be passed in. The quote feed will be queried instead.
 * @param  {CIQ.ChartEngine.Chart}	chart]		Which chart to create. Defaults to the default chart.
 * @param {function}				[cb]					Callback when newChart is loaded. See {@tutorial Adding additional content on chart} for a tutorial on how to use this callback function.
 * @param {object} 					[params] 			Parameters to dictate initial rendering behavior
 * @param {Object} 					[params.range]				Default range to be used upon initial rendering. If both `range` and `span` parameters are passed in, range takes precedence. If periodicity is not set, the range will be displayed at the most optimal periodicity. See {@link CIQ.ChartEngine#setRange} for complete list of parameters this object will accept.
 * @param {object} 					[params.span]				Default span to display upon initial rendering. If both `range` and `span` parameters are passed in, range takes precedence. If periodicity is not set, the span will be displayed at the most optimal periodicity. See {@link CIQ.ChartEngine#setSpan} for complete list of parameters this object will accept.
 * @param {object} 					[params.periodicity]	 	Periodicity to be used upon initial rendering. See {@link CIQ.ChartEngine#setPeriodicity} for complete list of parameters this object will accept. If no periodicity has been set it will default to `1 day`.
 * @param {boolean} 				[params.stretchToFillScreen] Increase the candleWidth to fill the left-side gap created by a small dataSet. Respects <a href="CIQ.ChartEngine.html#preferences%5B%60whitespace%60%5D">CIQ.ChartEngine.preferences.whitespace</a>. Ignored when params `span` or `range` are used. See {@link CIQ.ChartEngine#fillScreen}
 * @memberof CIQ.ChartEngine
 * @example
 * // using a symbol object and embedded span and periodicity requirements
 * stxx.newChart(
 * 	{symbol:newSymbol,other:'stuff'},
 * 	null,
 * 	null,
 * 	callbackFunction,
 * 	{
 * 		span:{base:'day',multiplier:2},
 * 		periodicity:{period:1,interval:5,timeUnit:'minute'},
 * 		stretchToFillScreen:true
 * 	}
 * );
 *
 * @example
 * // using a symbol string
 * stxx.newChart(
 * 	"IBM",
 * 	null,
 * 	null,
 * 	callbackFunction
 * );
 *
 * @example
 * // using an equation string
 * stxx.newChart(
 * 	"=2*IBM-GM",
 * 	null,
 * 	null,
 * 	callbackFunction
 * );
 *
 * @deprecated use {@link CIQ.ChartEngine#loadChart}
 * @since
 * - 2015-11-1 newChart is capable of setting periodicity and span via `params` settings.
 * - 04-2016-08 Added `params.stretchToFillScreen`.
 * - 5.1.0 newChart is capable of setting range via `params` settings.
 * - 6.0.0 Statically provided data will be gap-filled if that functionality is enabled.
 * - 7.0.0 Deprecated, replaced by {@link CIQ.ChartEngine#loadChart}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.newChart = function (symbol, masterData, chart, cb, params) {
  log("CIQ.ChartEngine.prototype.newChart has been deprecated. Use CIQ.ChartEngine.prototype.loadChart instead.");
  var parameters = {
    masterData: masterData,
    chart: chart
  };
  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].extend(parameters, params, true); // console.log('WARNING: newChart is deprecated for removal. Please use loadChart.');

  return this.loadChart(symbol, parameters, cb);
};
/**
 * Streams "last sale" prices into the chart.
 *
 *
 * >**This function has been deprecated in favor of {@link CIQ.ChartEngine#updateChartData}.
 * This also means that {@link CIQ.ChartEngine#streamParameters.fillGaps} is deprecated.
 * Developers should instead call {@link CIQ.ChartEngine#updateChartData} with `params.fillGaps=true` or rely on cleanupGaps as default behavior.**
 *
 * >`streamTrade` to `updateChartData` migration examples:
 *
 * >Note that updateChartData follows the 'OHLC' format.
 * So `V`olume (upper case) is used rather than `v`olume (lower case).
 * Similarly `L`ast (upper case) is used rather than `l`ast (lower case).
 *
 * >Example 1: streaming a secondary series:
 *
 * >`streamTrade({"last":102.05}, null, "IBM");`
 * <br>Translates to : <br>
 * `updateChartData({"Last":102.05}, null, {fillGaps: true, secondarySeries: "IBM"});`
 *
 * >Example 2: streaming a primary series:
 *
 * >`streamTrade({"last":102.05, "volume":100});`
 * <br>Translates to : <br>
 * `updateChartData({"Last": 102.05,"Volume":100}, null, {fillGaps: true});`
 *
 * This method is designed to append ticks to the master data while maintaining the existing periodicity, appending to the last tick or creating new ticks as needed.
 * It will also fill in gaps if there are missing bars in a particular interval.
 * If a trade has a date older than the beginning of the next bar, the last bar will be updated even if the trade belongs to a prior bar; this could happen if a trade is sent in after hours at a time when the market is closed, or if it is received out of order.
 * When in 'tick' interval, each trade will be added to a new bar and no aggregation to previous bars will be done.
 * If the optional timestamp [now] is sent in, and it is older than the next period to be rendered, the last tick on the dataset will be updated instead of creating a new tick.
 *
 * **It is crucial that you ensure the date/time of the trade is in line with your `masterData` and `dataZone`** See `now` parameter for more details.
 *
 * This method leverages {@link CIQ.ChartEngine#updateChartData} for the actual data insertion into masterData. Please see  {@link CIQ.ChartEngine#updateChartData} for additional details and performance throttle settings.
 *
 * See the [Streaming]{@tutorial DataIntegrationStreaming} tutorial for more the details.
 *
 * **Note:** versions prior to 15-07-01 must use the legacy arguments : streamTrade(price, volume, now, symbol)
 *
 * @param  {object}		data			Price & Volume Data, may include any or all of the following:
 * @param  {number}		data.last 		Last sale price
 * @param  {number}		[data.volume] 	Trade volume
 * @param  {number}		[data.bid] 		Bid price
 * @param  {number}		[data.ask] 		Offer/Ask price
 * @param  {date}		[now]			Date of trade. It must be a java script date [new Date().getTime()]. **If omitted, defaults to "right now" in the set `dataZone`** (see {@link CIQ.ChartEngine#setTimeZone}); or if no `dataZone` is set, it will default to the browser's timezone (not recommended for international client-base since different users will see different times). It is important to note that this value must be in the same timezone as the rest of the masterData already sent into the charting engine to prevent tick gaps or overlaps.
 * @param  {string}		[symbol]		trade symbol for series streaming ONLY. Leave out or set to `null` when streaming the primary chart symbol.
 * @param {object} 		[params] 		Params to be passed to {@link CIQ.ChartEngine#updateChartData}
 * @memberof CIQ.ChartEngine
 * @example
 * // streaming last sale for the primary chart symbol
 * stxx.streamTrade({"last":102.05, "volume":100});
 * @example
 * // streaming last sale for an additional series on the chart
 * stxx.streamTrade({"last":102.05, "volume":100}, null, "IBM");
 * @deprecated Please use {@link CIQ.ChartEngine#updateChartData} for streaming last ticket.
 * @since 4.0.0 Deprecated this function. This also means that streamParameters.fillGaps is deprecated. Developers should
 * call {@link CIQ.ChartEngine#updateChartData} with `params.fillGaps=true` or rely on cleanupGaps as default behavior.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.streamTrade = function (priceData, now, symbol, params) {
  log("CIQ.ChartEngine.prototype.streamTrade has been deprecated. Use CIQ.ChartEngine.prototype.updateChartData instead.");
  var chart = this.chart;
  if (!params) params = {};
  if (params.chart) chart = params.chart;
  params.fillGaps = this.streamParameters.fillGaps;
  var newArgs = _typeof(priceData) == "object";
  var price = newArgs ? priceData.last : arguments[0],
      volume = newArgs ? priceData.volume : arguments[1],
      bid = newArgs ? priceData.bid : null,
      ask = newArgs ? priceData.ask : null;

  if (!newArgs) {
    now = arguments[2];
    symbol = arguments[3];
  }

  if (symbol) {
    //series element
    params.secondarySeries = symbol;
  }

  var data = {
    DT: now,
    Last: price,
    Volume: volume,
    Bid: bid,
    Ask: ask
  };
  this.updateChartData(data, chart, params);
};
/**
 * As of version 5.1, his method has been **deprecated** in favor of {@link CIQ.ChartEngine#updateChartData} which provides improved functionality.
 *
 * The following parameters are only applicable for legacy versions (pre 5.1):
 * @deprecated Please use {@link CIQ.ChartEngine#updateChartData}
 * @param  {array/object} appendQuotes		An array of properly formatted OHLC quote object(s). [See Data Format]{@tutorial InputDataFormat}.<br>
 * 											Or a last sale object with the following elements:
 * @param  {number}	appendQuotes.Last 		Last sale price
 * @param  {number}	[appendQuotes.Volume]	Trade volume
 * @param  {number}	[appendQuotes.Bid] 		Bid price
 * @param  {number}	[appendQuotes.Ask] 		Offer/Ask price
 * @param  {number}	[appendQuotes.DT] 		Date of trade.
 * It must be a java script date [new Date().getTime()].
 * **If omitted, defaults to "right now" in the set `dataZone`** (see {@link CIQ.ChartEngine#setTimeZone});
 * or if no `dataZone` is set, it will default to the browser's timezone (not recommended for international client-base since different users
 * will see different times). It is important to note that this value must be in the same timezone as the rest of the masterData already
 * sent into the charting engine to prevent tick gaps or overlaps.
 * @param  {CIQ.ChartEngine.Chart}			[chart]				The chart to append the quotes. Defaults to the default chart.
 * @param {object} [params] Parameters to dictate behavior
 * @param {boolean} [params.noCreateDataSet] If true then do not create the data set automatically, just add the data to the masterData
 * @param {boolean} [params.allowReplaceOHL] Set to true to bypass internal logic that maintains OHL
 * @param {boolean} [params.bypassGovernor] If true then masterdata will be immediately updated regardless of {@link CIQ.ChartEngine#streamParameters}
 * @param {boolean} [params.fillGaps] If true then {@link CIQ.ChartEngine#doCleanupGaps} is called using the {@link CIQ.ChartEngine#cleanupGaps} setting. This will ensure gaps will be filled in the master data from the last tick in the chart to the date of the trade.<BR> Reminder: `tick` does not fill any gaps as it is not a predictable interval.
 * @param {boolean} [params.secondarySeries] Set to the name of the element ( valid comparison symbol, for example) to load data as a secondary series.
 * @param {boolean} [params.useAsLastSale] If not using a 'last sale' formatted object in `appendQuotes`,
 * you can simply set this parameter to `true` to force the data as a last sale price; or further define it by creating an object including other settings as needed.
 * This option is available in cases when a feed may always return OHLC formatted objects or a 'Close' field instead of a 'Last' field,
 * even for last sale streaming updates.
 * By definition a 'last' sale can only be a single record indicating the very 'last' sale price. As such, even if multiple records are sent in the `appendQuotes` array when this flag is enabled,
 * only the last record's data will be used. Specifically the 'Close' and 'Volume' fields will be streamed.
 * @param {boolean} [params.useAsLastSale.aggregatedVolume] If your last sale updates send current volume for the bar instead of just the trade volume, set this parameter to 'true' in the `params.useAsLastSale` object. The sent in volume will be used as is instead of being added to the existing bar's volume.
 *
 * @memberof CIQ.ChartEngine
 * @since
 * - 2015-11-1 Added `params.bypassGovernor` and `params.allowReplaceOHL`.
 * - 2015-11-1 Deprecated `params.force`. Every call will update the tick to maintain the proper volume, and `createDataSet` is now controlled by `sp.maxTicks`, `sp.timeout`, or `params.bypassGovernor`.
 * - 3.0.0 Now `appendQuotes` also takes last sale data to allow streaming capabilities. This can now be used instead of streamTrade.
 * - 3.0.0 New `params.fillGaps`, `params.secondarySeries`, and `params.useAsLastSale`.
 * - 4.0.0 Last sale streaming will now update a bar in the past to comply with the date sent in instead of just updating the current tick.
 * - 4.0.3 Added `params.useAsLastSale.aggregatedVolume`.
 * - 5.0.1 Now calls doCleanupDates in case is is being called directly when not using a quoteFeed, to update an entire candle.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.appendMasterData = function (appendQuotes, chart, params) {
  log("CIQ.ChartEngine.prototype.appendMasterData has been deprecated. Use CIQ.ChartEngine.prototype.updateChartData instead.");
  this.updateChartData(appendQuotes, chart, params);
};
/**
 * <span class="injection">INJECTABLE</span>
 *
 * **Legacy** function to set the periodicity and interval for the chart.
 *
 * **Replaced by {@link CIQ.ChartEngine#setPeriodicity}, but maintained for backwards comparibility. Uses same function signature.**
 *
 * @param {number} period The number of elements from masterData to roll-up together into one data point on the chart (one candle, for example). If set to 30 in a candle chart, for example, each candle will represent 30 raw elements of `interval` type.
 * @param {string} interval The type of data to base the `period` on. This can be a numeric value representing minutes, seconds or millisecond as inicated by `timeUnit`, "day","week", "month" or 'tick' for variable time x-axis. **"hour" is NOT a valid interval.** (This is not how much data you want the chart to show on the screen; for that you can use {@link CIQ.ChartEngine#setRange} or {@link CIQ.ChartEngine#setSpan})
 * @param {string} [timeUnit] Time unit to further qualify the specified numeric interval. Valid values are "millisecond","second","minute",null. If not set, will default to "minute". **only applicable and used on numeric intervals**
 * @param {function} [cb] Callback after periodicity is changed. First parameter of callback will be null unless there was an error.
 *
 * @memberof CIQ.ChartEngine
 * @since
 * - 2015-11-1 Second and millisecond periodicities are now supported by setting the `timeUnit` parameter.
 * - 3.0.0 Replaced by {@link CIQ.ChartEngine#setPeriodicity}, but maintained for backwards comparibility.
 * - 8.0.0 Deprecated
 * @deprecated Use {@link CIQ.ChartEngine#setPeriodicity}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.setPeriodicityV2 = function (period, interval, timeUnit, cb) {
  log("CIQ.ChartEngine.prototype.setPeriodicityV2 has been deprecated. Use CIQ.ChartEngine.prototype.setPeriodicity instead.");

  if (typeof timeUnit === "function") {
    cb = timeUnit; // backward compatibility

    timeUnit = null;
  }

  if (this.runPrepend("setPeriodicityV2", arguments)) return;
  this.setPeriodicity(period, interval, timeUnit, cb);
  this.runAppend("setPeriodicityV2", arguments);
}; //Unused


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.addChart = function (name, chart) {
  log("CIQ.ChartEngine.prototype.addChart has been deprecated. Add manually to stxx.charts object instead.");
  chart.name = name;
  this.charts[name] = chart;
};

var changeOccurred = _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.changeOccurred;

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.changeOccurred = function (change) {
  if (this.currentlyImporting) return;
  if (this.changeCallback) this.changeCallback(this, change);
  changeOccurred.call(this, change);
};

var engineConstruct = _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.construct;

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.construct = function () {
  function getValue(obj, name, def) {
    if (!obj._deprecatedPropertyValues) obj._deprecatedPropertyValues = {};
    if (!(name in obj._deprecatedPropertyValues)) obj._deprecatedPropertyValues[name] = def;
    return obj._deprecatedPropertyValues[name];
  }

  function setValue(obj, name, val) {
    if (!obj._deprecatedPropertyValues) obj._deprecatedPropertyValues = {};
    obj._deprecatedPropertyValues[name] = val;
  }

  engineConstruct.call(this);
  Object.defineProperties(this, {
    /**
     * **This function has been deprecated. Please use {@link CIQ.ChartEngine#addEventListener} instead.**
     *
     * This is the callback function used to react to {@link CIQ.ChartEngine#changeOccurred}.
     *
     * Use this for storing chart configurations or drawings real time as users make changes.
     *
     * Expected format :
     *
     * 		fc(stxChart, eventType);
     *
     * Currently implemented values for  "eventType" are "layout" and "vector".
     *
     * You can create any additional event types and trigger them by calling 'CIQ.ChartEngine.changeOccurred(eventType)'
     *
     * **Note** only one changeCallback function can be registered per chart object. As such, you must program it to handle any and all possible events triggered by {@link CIQ.ChartEngine#changeOccurred}.
     * @type {function}
     * @alias changeCallback
     * @memberof CIQ.ChartEngine.prototype
     * @deprecated
     * @since 4.0.0 Deprecated
     * @example
     * stxx.changeCallback=function(stxx, eventType){
     *		if(eventType=="layout") saveLayout();
     *		if(eventType=="vector") saveDrawing();
     * }
     */
    changeCallback: {
      enumerable: true,
      get: function (stx) {
        return function () {
          //log("CIQ.ChartEngine.prototype.changeCallback has been deprecated.  Use CIQ.ChartEngine.prototype.addEventListener instead.");
          return getValue(this, "changeCallback", null);
        };
      }(this),
      set: function (stx) {
        return function (func) {
          log("CIQ.ChartEngine.prototype.changeCallback has been deprecated.  Use CIQ.ChartEngine.prototype.addEventListener instead.");
          setValue(this, "changeCallback", func);
        };
      }(this)
    },

    /**
     * Chart types which plot more than one data field (OHLC charts).
     * Putting a chart type here will disable the use of {@link CIQ.ChartEngine.Chart#defaultPlotField}.
     * @type object
     * @default
     * @alias highLowBars
     * @deprecated, access property in chart instead (stxx.chart.highLowBars)
     * @memberof CIQ.ChartEngine.prototype
     * @since 4.0.0
     */
    highLowBars: {
      enumerable: true,
      get: function (stx) {
        return function () {
          log("CIQ.ChartEngine.prototype.highLowBars is no longer supported.  Use CIQ.ChartEngine.Chart.prototype.highLowBars instead.");
          return getValue(this, "highLowBars", {
            bar: true,
            colored_bar: true,
            candle: true,
            hollow_candle: true,
            volume_candle: true,
            hlc: true,
            colored_hlc: true,
            hlc_box: true,
            hlc_shaded_box: true,
            wave: true,
            rangechannel: true,
            none: true
          });
        };
      }(this),
      set: function (stx) {
        return function (val) {
          log("CIQ.ChartEngine.prototype.highLowBars is no longer supported.  Use CIQ.ChartEngine.Chart.prototype.highLowBars instead.");
          setValue(this, "highLowBars", val);
        };
      }(this)
    },

    /**
     * Chart types whose bars represent a stand-alone entity as opposed to a vertex in a line-type chart.
     * This is important when the engine tries to render the data points right off the chart; in a stand-alone bar,
     * the points right off the chart need not be considered.
     * @type object
     * @default
     * @alias standaloneBars
     * @deprecated, access property in chart instead (stxx.chart.standaloneBars)
     * @memberof CIQ.ChartEngine.prototype
     * @since 4.0.0
     */
    standaloneBars: {
      enumerable: true,
      get: function (stx) {
        return function () {
          log("CIQ.ChartEngine.prototype.standaloneBars is no longer supported.  Use CIQ.ChartEngine.Chart.prototype.standaloneBars instead.");
          return getValue(this, "standaloneBars", {
            bar: true,
            colored_bar: true,
            candle: true,
            hollow_candle: true,
            volume_candle: true,
            hlc: true,
            colored_hlc: true,
            hlc_box: true,
            hlc_shaded_box: true,
            histogram: true,
            scatterplot: true
          });
        };
      }(this),
      set: function (stx) {
        return function (val) {
          log("CIQ.ChartEngine.prototype.standaloneBars is no longer supported.  Use CIQ.ChartEngine.Chart.prototype.standaloneBars instead.");
          setValue(this, "standaloneBars", val);
        };
      }(this)
    },

    /**
     * Chart types whose bars have width, as opposed to a line-type chart whose "bars" are just a point on the chart.
     * This is useful when the engine adjusts the chart for smooth scrolling and homing.
     * @type object
     * @default
     * @alias barsHaveWidth
     * @deprecated, access property in chart instead (stxx.chart.barsHaveWidth)
     * @memberof CIQ.ChartEngine.prototype
     * @since 4.0.0
     */
    barsHaveWidth: {
      enumerable: true,
      get: function (stx) {
        return function () {
          log("CIQ.ChartEngine.prototype.barsHaveWidth is no longer supported.  Use CIQ.ChartEngine.Chart.prototype.barsHaveWidth instead.");
          return getValue(this, "barsHaveWidth", {
            bar: true,
            colored_bar: true,
            candle: true,
            hollow_candle: true,
            volume_candle: true,
            hlc: true,
            colored_hlc: true,
            hlc_box: true,
            hlc_shaded_box: true,
            histogram: true,
            scatterplot: true,
            wave: true
          });
        };
      }(this),
      set: function (stx) {
        return function (val) {
          log("CIQ.ChartEngine.prototype.barsHaveWidth is no longer supported.  Use CIQ.ChartEngine.Chart.prototype.barsHaveWidth instead.");
          setValue(this, "barsHaveWidth", val);
        };
      }(this)
    }
  });
  /**
   * Specify a callback by assigning a function to the event. Once the event triggers the callback will be executed.
   *
   * **Note: All callbacks have been deprecated in favor of {@link CIQ.ChartEngine#addEventListener}**
   *
   * @type object
   * @alias callbacks
   * @memberof CIQ.ChartEngine#
   * @example
   * // using event listener
   * stxx.addEventListener("callbackNameHere", function(callBackParametersHere){
   * 	CIQ.alert('triggered!');
   * });
   * @example
   * // using callback function
   * stxx.callbacks.callbackNameHere=function(callBackParametersHere){
   * 	CIQ.alert('triggered!');
   * };
   * @deprecated 4.0.0
   */

  this.callbacks = {};

  function callbackGetter(name, stx, def) {
    return function () {
      log("CIQ.ChartEngine.prototype.callbacks have been deprecated.  Iterate through CIQ.ChartEngine.prototype.callbackListeners instead.");
      return getValue(this, name, def || null);
    };
  }

  function callbackSetter(name, stx) {
    return function (func) {
      log("CIQ.ChartEngine.prototype.callbacks have been deprecated.  Utilize CIQ.ChartEngine.prototype.addEventListener to add a callback, and/or CIQ.ChartEngine.prototype.removeEventListener to remove one.");
      if (!this._deprecatedPropertyValues) this._deprecatedPropertyValues = {};
      var origFunc = this._deprecatedPropertyValues[name];
      if (origFunc) stx.removeEventListener(name, origFunc);
      if (func) stx.addEventListener(name, func);
      this._deprecatedPropertyValues[name] = func;
    };
  }

  Object.defineProperties(this.callbacks, {
    /**
     * Called when a user right clicks on an overlay study. If `forceEdit==true` then a user has clicked
     * on an edit button (cog wheel) so pull up an edit dialog. Otherwise they have simply right clicked so
     * give them a context menu.
     *
     * ***Please note that this callback must be set *before* you call {@link CIQ.ChartEngine#importLayout}.
     * Otherwise your imported studies will not have an edit capability***
     *
     * Format:<br>
     * studyOverlayEdit({stx:stx,sd:sd,inputs:inputs,outputs:outputs, parameters:parameters, forceEdit: forceEdit});
     *
     * The following CSS entry must also be present to enable the `Right click to Manage` text on the mouse-over context menu (div class="mSticky" generated by {@link CIQ.ChartEngine.htmlControls}):
     * ```
     * .rightclick_study .mouseManageText {
     * display: inline; }
     * ```
     * See {@link CIQ.Studies.addStudy} for more details.
     *
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`studyOverlayEdit`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    studyOverlayEdit: {
      enumerable: true,
      get: callbackGetter("studyOverlayEdit", this),
      set: callbackSetter("studyOverlayEdit", this)
    },

    /**
     * Called when a user clicks the edit button on a study panel.
     *
     * ***Please note that this callback should be set *before* you call {@link CIQ.ChartEngine#importLayout}.
     * Otherwise your imported studies will not have an edit capability***
     *
     * Format:<br>
     * studyPanelEdit({stx:stx,sd:sd,inputs:inputs,outputs:outputs, parameters:parameters});
     *
     * See {@link CIQ.Studies.addStudy} for more details.
     *
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`studyPanelEdit`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    studyPanelEdit: {
      enumerable: true,
      get: callbackGetter("studyPanelEdit", this),
      set: callbackSetter("studyPanelEdit", this)
    },

    /**
     * Called when a user clicks or taps on the chart. Not called if a drawing tool is active!
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, panel:CIQ.ChartEngine.Panel, x:this.cx, y:this.cy})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`tap`]
     * @memberof CIQ.ChartEngine#callbacks
     * @example
     * // using event listener
     * stxx.addEventListener("tap", function(tapObject){
     * 	CIQ.alert('tap event at x: ' + tapObject.x + ' y: '+ tapObject.y);
     * });
     * @example
     * // using callback
     * // this example  uses barFromPixel() to get the actual bar from the pixel location
     * stxx.callbacks.tap= function(tapObject){
     *	var msg= 'tap event at x: ' + tapObject.x + ' y: '+ tapObject.y;
     *	var bar=this.barFromPixel(this.cx);
     *  if(this.chart.dataSegment[bar]) {
     * 	  msg+=' Date:' + this.chart.dataSegment[bar].DT;
     * 	  msg+=' Close:' + this.chart.dataSegment[bar].Close;
     *  }
     *  alert (msg);
     * };
     */
    tap: {
      enumerable: true,
      get: callbackGetter("tap", this),
      set: callbackSetter("tap", this)
    },

    /**
     * Called when a user clicks or right clicks on the chart. Not called if the user right clicks on a drawing or study
     * when [stxx.bypassRightClick]{@link CIQ.ChartEngine#bypassRightClick}=true
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, panel:CIQ.ChartEngine.Panel, x:this.cx, y:this.cy})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`rightClick`]
     * @memberof CIQ.ChartEngine#callbacks
     * @example
     * // using event listener
     * stxx.addEventListener("rightClick", function(rcObject){
     * 	alert('right click event at x: ' + rcObject.x + ' y: '+ rcObject.y);
     * });
     * @since 09-2016-19
     */
    rightClick: {
      enumerable: true,
      get: callbackGetter("rightClick", this),
      set: callbackSetter("rightClick", this)
    },

    /**
     * Called when a user "long holds" on the chart. By default this is set to 700 milliseconds.
     * Optionally change the value of stxx.longHoldTime to a different setting, or set to zero to disable.
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, panel:CIQ.ChartEngine.Panel, x:this.cx, y:this.cy})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`longhold`]
     * @memberof CIQ.ChartEngine#callbacks
     * @example
     * // using event listener
     * stxx.longHoldTime=... // Optionally override default value of 700ms
     * stxx.addEventListener("longhold", function(lhObject){
     * 	CIQ.alert('longhold event at x: ' + lhObject.x + ' y: '+ lhObject.y);
     * });
     * @example
     * // using callback function
     * stxx.longHoldTime=... // Optionally override default value of 700ms
     * stxx.callbacks.longhold=function(lhObject){
     * 	CIQ.alert('longhold event at x: ' + lhObject.x + ' y: '+ lhObject.y);
     * });
     * @since 2016-06-22
     */
    longhold: {
      enumerable: true,
      get: callbackGetter("longHold", this),
      set: callbackSetter("longHold", this)
    },

    /**
     * Called when a user moves on the chart. Not called if a drawing tool is active, panel resizing, etc
     * grab is true if a mouse user has the mouse button down while moving. For touch users it is true
     * if they do not have the crosshair tool enabled.
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, panel:CIQ.ChartEngine.Panel, x:this.cx, y:this.cy, grab:boolean})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`move`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    move: {
      enumerable: true,
      get: callbackGetter("move", this),
      set: callbackSetter("move", this)
    },

    /**
     * Called when the layout changes
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, chart:CIQ.ChartEngine.Chart, symbol: String, symbolObject:Object, layout: Object})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`layout`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    layout: {
      enumerable: true,
      get: callbackGetter("layout", this),
      set: callbackSetter("layout", this)
    },

    /**
     * Called when a drawing is added or deleted (all the drawings are returned, not just the new one)
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, symbol: String, symbolObject:Object, drawings: Object})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`drawing`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    drawing: {
      enumerable: true,
      get: callbackGetter("drawing", this),
      set: callbackSetter("drawing", this)
    },

    /**
     * Called when a right-click is detected on a highlighted drawing.
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, drawing:CIQ.Drawing})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`drawingEdit`]
     * @memberof CIQ.ChartEngine#callbacks
     * @since 6.2.0
     */
    drawingEdit: {
      enumerable: true,
      get: callbackGetter("drawingEdit", this),
      set: callbackSetter("drawingEdit", this)
    },

    /**
     * Called when preferences are changed
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`preferences`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    preferences: {
      enumerable: true,
      get: callbackGetter("preferences", this),
      set: callbackSetter("preferences", this)
    },

    /**
     * Called when a theme is changed
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`theme`]
     * @memberof CIQ.ChartEngine#callbacks
     */
    theme: {
      enumerable: true,
      get: callbackGetter("theme", this),
      set: callbackSetter("theme", this)
    },

    /**
     * Called when the symbol is changed (when loadChart is called), added (addSeries, addStudy) or removed (removeSeries, removeStudy). Note
     * that this is not called if the symbol change occurs during an importLayout
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, symbol: String, symbolObject:Object, action:["master"|"add-series"|"remove-series"})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`symbolChange`]
     * @memberof CIQ.ChartEngine#callbacks
     * @since 06-2016-21
     */
    symbolChange: {
      enumerable: true,
      get: callbackGetter("symbolChange", this),
      set: callbackSetter("symbolChange", this)
    },

    /**
     * Called when the symbol is first imported into the layout.
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, symbol: String, symbolObject:Object, action:"master"})
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`symbolImport`]
     * @memberof CIQ.ChartEngine#callbacks
     * @since 4.0.0
     */
    symbolImport: {
      enumerable: true,
      get: callbackGetter("symbolImport", this),
      set: callbackSetter("symbolImport", this)
    },

    /**
     * Called to determine how many decimal places the stock trades in.
     *
     * This is used for heads up display and also for the current price pointer label.
     *
     * By default it is set to {@link CIQ.calculateTradingDecimalPlaces}
     *
     * Format:<br>
     * callback({stx:CIQ.ChartEngine, chart:CIQ.ChartEngine.Chart, symbol: String, symbolObject:Object})
     *
     * @type function
     * @alias CIQ.ChartEngine#callbacks[`calculateTradingDecimalPlaces`]
     * @memberof CIQ.ChartEngine#callbacks
     * @deprecated As of 8.0.0. Use {@link CIQ.ChartEngine.Chart#calculateTradingDecimalPlaces}.
     */
    calculateTradingDecimalPlaces: {
      enumerable: true,
      get: function (stx) {
        return function () {
          log("CIQ.ChartEngine.prototype.callbacks.calculateTradingDecimalPlaces has been deprecated.  Utilize CIQ.ChartEngine.Chart.prototype.calculateTradingDecimalPlaces instead.");
          return getValue(this, "calculateTradingDecimalPlaces", stx.chart.calculateTradingDecimalPlaces);
        };
      }(this),
      set: function (stx) {
        return function (func) {
          log("CIQ.ChartEngine.prototype.callbacks.calculateTradingDecimalPlaces has been deprecated.  Utilize CIQ.ChartEngine.Chart.prototype.calculateTradingDecimalPlaces instead.");
          setValue(this, "calculateTradingDecimalPlaces", func);
          stx.chart.calculateTradingDecimalPlaces = func;
        };
      }(this)
    }
  });
  /**
   * If true then {@link CIQ.ChartEngine#doCleanupGaps} is called so long as {@link CIQ.ChartEngine#cleanupGaps} is also set.
   * This will ensure gaps will be filled in the master data from the last tick in the chart to the date of the trade.
   *
   * **Only applicable when using streamTrade()**.<BR> Reminder: `tick` does not fill any gaps as it is not a predictable interval.
   *
   * @type boolean
   * @default
   * @alias CIQ.ChartEngine#streamParameters[`fillGaps`]
   * @memberof CIQ.ChartEngine#streamParameters
   * @since 2016-03-11
   * @deprecated See deprecation of {@link CIQ.ChartEngine#streamTrade}. Use {@link CIQ.ChartEngine#updateChartData} instead,
   * with params.fillGaps=true or rely on cleanupGaps as default behavior.
   */
  // Guard checking existence because this is a prototype object, no redefinition allowed

  Object.defineProperty(this.streamParameters, "fillGaps", {
    enumerable: true,
    get: function (stx) {
      return function () {
        log("CIQ.ChartEngine.prototype.streamParameters.fillGaps has been deprecated.  Use CIQ.ChartEngine.prototype.updateChartData instead, with params.fillGaps=true or rely on cleanupGaps as default behavior.");
        return getValue(this, "fillGaps", true);
      };
    }(this),
    set: function (stx) {
      return function (val) {
        log("CIQ.ChartEngine.prototype.streamParameters.fillGaps has been deprecated.  Use CIQ.ChartEngine.prototype.updateChartData instead, with params.fillGaps=true or rely on cleanupGaps as default behavior.");
        setValue(this, "fillGaps", val);
      };
    }(this)
  });
}; // These namespaces are only available for "legacy" implementations which run in browser and use global namespaces


if (typeof window != "undefined") {
  Object.defineProperties(window, {
    STX: {
      enumerable: true,
      get: function get() {
        log("STX namespace has been deprecated.  Use CIQ namespace instead.");
        return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"];
      }
    },
    STXChart: {
      enumerable: true,
      get: function get() {
        log("STXChart namespace has been deprecated.  Use CIQ.ChartEngine namespace instead.");
        return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine;
      }
    }
  });
}
/*
	Deprecated functions - basic
*/

/**
 * ** Deprecated. ** Use {@link CIQ.ChartEngine#attachQuoteFeed} instead.
 * Attaches a quote feed to the charting engine, which causes the chart to pull data from the
 * quote feed as needed.
 *
 * @param {object} [quoteFeed] A quote feed object.
 * @param {object} [behavior] Optional behavior object to initialize tje quote feed.
 * @param {number} [behavior.refreshInterval] Sets the frequency for `fetchUpdateData`. If
 * 		null or zero, `fetchUpdateData` is not called.
 * @param {function} [behavior.callback] Optional callback function called after any fetch to
 * 		enhance functionality. It will be called with the params object used with the fetch
 * 		call.
 * @param {number} [behavior.noLoadMore] If true, the chart does not attempt to load any more
 * 		data after the initial load.
 * @param {boolean} [behavior.loadMoreReplace] If true, then when paginating, the driver
 * 		replaces the master data instead of prepending. Set this if your feed can only provide
 * 		a full data set of varying historical lengths.
 *
 * @memberOf CIQ.ChartEngine
 * @private
 * @since
 * - 2016-12-01
 * - 8.0.0 Deprecated
 * @deprecated Use {@link CIQ.ChartEngine#attachQuoteFeed}.
 *
 * @example
 * <caption>Attach a quote feed and have the driver call <code>fetchUpdateData</code> once per
 * second.</caption>
 * stxx.attachEngineQuoteFeed(yourQuotefeed, {refreshInterval: 1});
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.attachEngineQuoteFeed = function (quoteFeed, behavior) {
  log("CIQ.ChartEngine.prototype.attachEngineQuoteFeed has been deprecated. Use CIQ.ChartEngine.prototype.attachQuoteFeed instead.");
  this.attachQuoteFeed(quoteFeed, behavior);
};
/**
 * **Deprecated since 7.2.0.** Use {@link CIQ.ChartEngine#dragPlotOrAxis} instead.
 *
 * Detects whether the plot (series or study) should be dragged to another panel by examining the y-coordinate of the mouse
 * and seeing if it is either over a different panel than the plot or close to another panel (or the top or bottom edge of the chart).
 * If so, the plot is moved to the new panel.
 *
 * @param {number} cy Y-coordinate to test.
 * @memberof CIQ.ChartEngine
 * @since
 * - 7.1.0
 * - 7.2.0 Removed functionality. Added console warning.
 * @deprecated As of 7.2.0. See {@link CIQ.ChartEngine#dragPlotOrAxis}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.dragPlot = function (cy) {
  log("CIQ.ChartEngine.prototype.dragPlot is no longer supported.  Use CIQ.ChartEngine.prototype.dragPlotOrAxis instead.");
  return;
};
/**
 * **Deprecated since 7.2.0.** Use {@link CIQ.ChartEngine#dragPlotOrAxis} instead.
 *
 * Detects whether the y-axis should be dragged to another position by examining the x-coordinate of the mouse
 * and seeing if the mouse is over a different position than the axis. If so, the axis is moved to the new position.
 *
 * @param {number} cx X-coordinate to test.
 * @memberof CIQ.ChartEngine
 * @since
 * - 7.1.0
 * - 7.2.0 Removed functionality. Added console warning.
 * @deprecated As of 7.2.0. See {@link CIQ.ChartEngine#dragPlotOrAxis}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].ChartEngine.prototype.dragYAxis = function (cx) {
  log("CIQ.ChartEngine.prototype.dragYAxis is no longer supported.  Use CIQ.ChartEngine.prototype.dragPlotOrAxis instead.");
  return;
};

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Drawing = _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Drawing || function () {
  this.chartsOnly = false;
  this.penDown = false;
};
/**
 * Compute the proper color to use when rendering lines in the drawing.
 *
 * @memberOf CIQ.Drawing
 * @since
 * - 4.0.0
 * - 7.0.0 Deprecated
 * @deprecated Use {@link CIQ.Drawing#getLineColor} instead.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Drawing.prototype.setLineColor = function () {
  log("CIQ.Drawing.prototype.setLineColor has been deprecated.  Use CIQ.Drawing.prototype.setLineColor instead.");
  if (_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Drawing.prototype.getLineColor) return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Drawing.prototype.getLineColor.apply(this, arguments);
};

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies = _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies || function () {};
/** @deprecated **/


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.quickAddStudy = function () {
  log("CIQ.Studies.quickAddStudy has been deprecated.  Use CIQ.Studies.addStudy instead.");
  if (_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.addStudy) return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.addStudy.apply(null, arguments);
};
/**
 * @deprecated Since 5.2.0. Use {@link CIQ.Studies.drawZones} instead.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.overZones = function () {
  log("CIQ.Studies.overZones has been deprecated.  Use CIQ.Studies.drawZones instead.");
  if (_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.drawZones) return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.drawZones.apply(null, arguments);
};
/**
 * **Deprecated. Use {@link CIQ.Studies.createVolumeChart} instead.**
 *
 * Creates a volume underlay for the chart.
 *
 * The underlay height is a % of the chart height as determined by yAxis.heightFactor.<br>
 * Each bar width will be determined by `WidthFactor` study parameter.
 * @param {CIQ.ChartEngine} stx A chart engine instance
 * @param {CIQ.Studies.StudyDescriptor} sd A study descriptor
 * @param {array} quotes Array of quotes
 * @memberOf CIQ.Studies
 * @deprecated use {@link CIQ.Studies.createVolumeChart}
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.volUnderlay = function () {
  log("CIQ.Studies.volUnderlay has been deprecated.  Use CIQ.Studies.createVolumeChart instead.");
  if (_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.createVolumeChart) _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.createVolumeChart.apply(null, arguments);
};
/**
 * **Deprecated since 5.2.0. This calculation is now done in {@link CIQ.ChartEngine.AdvancedInjectable#initializeDisplay} and is no longer a separate function.**
 *
 * Method to determine the minimum and maximum points in a study panel.
 *
 * @param  {CIQ.ChartEngine} stx	The chart object
 * @param  {CIQ.Studies.StudyDescriptor} sd	 The study descriptor
 * @param  {array} quotes The set of quotes to evaluate
 * @memberOf CIQ.Studies
 * @deprecated Since 5.2.0. This calculation is now done in {@link CIQ.ChartEngine.AdvancedInjectable#initializeDisplay} and is no longer a separate function.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.determineMinMax = function (stx, sd, quotes) {
  log("CIQ.Studies.determineMinMax is no longer supported.  The calculation is done automatically elsewhere.");
};
/**
 * Creates the yAxis for a study panel.
 *
 * @param  {CIQ.ChartEngine} stx	The chart object
 * @param  {CIQ.Studies.StudyDescriptor} sd	 The study descriptor
 * @param  {array} quotes The set of quotes (representing dataSegment)
 * @param  {CIQ.ChartEngine.Panel} panel  A reference to the panel
 * @memberOf CIQ.Studies
 * @deprecated Since 5.2.0. yAxis is now created automatically via {@link CIQ.ChartEngine#renderYAxis}
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.createYAxis = function (stx, sd, quotes, panel) {
  log("CIQ.Studies.createYAxis is no longer supported.  The action is done automatically elsewhere.");
};
/**
 * **Deprecated since 6.0.0. Use {@link CIQ.ChartEngine#drawHistogram} instead.**
 *
 * Convenience function for creating a volume style chart that supports multiple colors of volume bars.
 *
 * If borderMap (border colors) is passed in then the chart will display in a format where bars are flush against
 * one another so that there is no white space between bars. If however a borderMap is not specified then white space will be left
 * between the bars.
 * @param  {CIQ.ChartEngine} stx	  The chart object
 * @param  {CIQ.Studies.StudyDescriptor} sd	   The study descriptor
 * @param  {object} colorMap Map of colors to arrays. Each array should contain entries for each dataSegment bar mapped to that color.
 * It should contain null values for any bar that shouldn't be drawn
 * @param {object} borderMap Map of border colors for each color. If null then no borders will be drawn.
 * @example
 * var colorMap={};
 * colorMap["#FF0000"]=[56,123,null,null,45];
 * colorMap["#00FF00"]=[null,null,12,13,null];
 *
 * var borderMap={
 *	"#FF0000": "#FFFFFF",
 *	"#00FF00": "#FFFFDD"
 * };
 * CIQ.Studies.volumeChart(stx, sd, colorMap, borderMap);
 * @memberOf CIQ.Studies
 * @deprecated since 6.0.0 Use {@link CIQ.ChartEngine#drawHistogram} instead.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Studies.volumeChart = function (stx, sd, colorMap, borderMap) {
  log("CIQ.Studies.volumeChart has been deprecated.  Use CIQ.ChartEngine.prototype.drawHistogram instead."); // Determine min max

  var maximum = Number.MAX_VALUE * -1;
  var color, value;

  for (color in colorMap) {
    for (var c = 0; c < colorMap[color].length; c++) {
      value = colorMap[color][c];
      if (!value) continue;
      if (value > maximum) maximum = value;
    }
  } // determine calculation ratios


  var panel = stx.panels[sd.panel];
  var b = Math.floor(panel.yAxis.bottom) + 0.5;
  var t = Math.floor(panel.yAxis.top) + 0.5;
  var h = b - t;
  var candleWidth = stx.layout.candleWidth;
  var borderColor = null;
  if (!sd.parameters || !sd.parameters.displayBorder) borderMap = null;
  var offset = 0;
  if (!borderMap) offset = (candleWidth - stx.chart.tmpWidth) / 2;
  var context = sd.getContext(stx);
  context.lineWidth = 1;
  stx.startClip(sd.panel);

  for (color in colorMap) {
    if (borderMap) borderColor = borderMap[color];
    context.fillStyle = color;
    if (borderColor) context.strokeStyle = borderColor;
    context.beginPath();
    var prevTop = b + 0.5;
    var farLeft = Math.floor(stx.pixelFromBar(0, panel.chart));
    var prevRight;

    for (var i = 0; i < colorMap[color].length; i++) {
      if (stx.chart.dataSegment[i] && stx.chart.dataSegment[i].candleWidth) {
        candleWidth = stx.chart.dataSegment[i].candleWidth;
        if (!borderMap) offset = candleWidth / 4;
      } else {
        candleWidth = stx.layout.candleWidth;
        if (!borderMap) offset = (candleWidth - stx.chart.tmpWidth) / 2;
      }

      if (i === 0) {
        farLeft -= candleWidth / 2;
        prevRight = farLeft;
      }

      value = colorMap[color][i];

      if (!value) {
        prevTop = b;
        prevRight += candleWidth; //if(borderMap) prevRight-=0.5;

        continue;
      }

      var y = value * (h / maximum);
      var top = Math.min(Math.floor(b - h + (h - y)) + 0.5, b);
      var x0, x1;
      x0 = Math.floor(prevRight + offset);
      x1 = Math.floor(prevRight + candleWidth - offset);
      x0 = Math.max(x0, farLeft);
      context.moveTo(x0, b);
      context.lineTo(x1, b);
      context.lineTo(x1, top);
      context.lineTo(x0, top);

      if (borderMap) {
        if (prevTop > top || i === 0) context.lineTo(x0, prevTop); // draw down to the top of the previous bar, so that we don't overlap strokes
      } else {
        context.lineTo(x0, b);
      }

      prevTop = top;
      prevRight += candleWidth; //if(borderMap) prevRight-=0.5;
    }

    context.fill();
    context.strokeStyle = borderColor;
    if (borderMap && stx.layout.candleWidth >= 2) context.stroke();
    context.closePath();
  }

  stx.endClip();
}; // This namespace is only available for "legacy" implementations which run in browser and use global namespaces


if (typeof window != "undefined") {
  Object.defineProperty(window, "STXSocial", {
    enumerable: true,
    get: function get() {
      log("STXSocial namespace has been deprecated.  Use CIQ.Share namespace instead.");
      return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].Share;
    }
  });
}
/*
	Deprecated functions - advanced
*/

/* global $ */

/*
	Deprecated functions - jquery & webcomponents
*/


if (typeof $ === "function" && $.fn) {
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.trulyVisible} instead.
   *
   * Attaches a `trulyvisible` selector to a jQuery object.
   *
   * @private
   * @deprecated Use {@link CIQ.trulyVisible}.
   * @since 8.1.0 Deprecated.
   *
   * @example
   * let visible = $(node).is(":trulyvisible");
   */
  $.fn.extend($.expr[":"], {
    trulyvisible: function trulyvisible(node, j, attr) {
      log("Use of jQuery has been deprecated. Use CIQ.trulyVisible() to return element visibility instead of custom pseudo-selector :trulyvisible.");
      var parents = $(node).parents();
      parents = parents.add(node);

      for (var i = 0; i < parents.length; i++) {
        var p = $(parents[i]);
        if (p.css("opacity") === "0") return false;
        if (p.css("visibility") === "hidden") return false;
        if (p.css("height") === "0px" && p.css("overflow-y") == "hidden") return false;
        if (!p.is(":visible")) return false;
      }

      return true;
    }
  });
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.UI.stxtap} instead.
   *
   * Attaches a `stxtap` clickable event to a jQuery object.
   *
   * @param {string|function} arg1 A CSS selector used to filter the elements that trigger the
   * 		event or a function that serves as the event handler.
   * @param {function} arg2 A function that serves as the event handler if `arg1` is a selector.
   *
   * @private
   * @deprecated Use {@link CIQ.UI.stxtap}.
   * @since 8.1.0 Deprecated.
   *
   * @example
   * $(node).stxtap(cb);
   */

  var stxtap = function stxtap(arg1, arg2) {
    log("Use of jQuery has been deprecated. Use CIQ.UI.stxtap() to attach a listener instead of $.fn.stxtap().");
    return this.each(function () {
      _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].installTapEvent(this
      /*, {stopPropagation:true}*/
      );

      if (typeof arg1 == "string") {
        $(this).on("stxtap", arg1, function (e) {
          arg2.call(this, e);
        });
      } else {
        $(this).on("stxtap", function (e) {
          arg1.call(this, e);
        });
      }
    });
  };
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.climbUpDomTree} instead.
   *
   * Returns an ancestry list starting with the current element.
   *
   * @param {*} arg1 Unused.
   * @return {jQuery} The ancestor list in non-reversed order.
   *
   * @private
   * @deprecated Use {@link CIQ.climbUpDomTree}.
   * @since 8.1.0 Deprecated.
   *
   * @example
   * $(node).parentsAndMe(); // Returns jQuery collection of elements from current node to HTML top element.
   */


  var parentsAndMe = function parentsAndMe(arg1) {
    log("Use of jQuery has been deprecated. Use CIQ.climbUpDomTree() instead of $.fn.parentsAndMe().");
    var us = $(this).parents();
    us = us.add($(this)).get().reverse();
    return us;
  };
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.cqvirtual} instead.
   *
   * Creates and returns a virtual DOM of an element for faster manipulation.
   *
   * @param {*} arg1 Unused.
   * @return {jQuery} A virtual DOM cloned from the actual DOM.
   *
   * @private
   * @deprecated Use {@link CIQ.cqvirtual}.
   * @since 8.1.0 Deprecated.
   */


  var cqvirtual = function cqvirtual(arg1) {
    log("Use of jQuery has been deprecated. Use CIQ.cqvirtual() instead of $.fn.cqvirtual().");
    var virtual = this.clone(true);
    virtual.empty();
    virtual.original = this;
    return virtual;
  };
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.cqrender} instead.
   *
   * Copies a virtual DOM to the actual DOM. Works in tandem with `cqvirtual`.
   *
   * @param {*} arg1 Unused.
   * @return {jQuery} The actual DOM copied from the virtual DOM.
   *
   * @private
   * @deprecated Use {@link CIQ.cqrender}.
   * @since 8.1.0 Deprecated.
   */


  var cqrender = function cqrender(arg1) {
    log("Use of jQuery has been deprecated. Use CIQ.cqrender() instead of $.fn.cqrender().");
    if (this[0].innerHTML == this.original[0].innerHTML) return this.original;
    this.original.children(":not(template)").remove();
    var children = this.children();

    if (children.length) {
      var newStuff = children.detach();
      this.original.append(newStuff);
    }

    return this.original;
  };
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.guaranteedSize} instead.
   *
   * Returns a guaranteed width. For instance, `cq-context` or any other wrapping tag can have
   * a width of zero; if so, we need to go up the ancestry tree to get the actual width.
   *
   * @return {number} The node width.
   *
   * @private
   * @deprecated Use {@link CIQ.guaranteedSize}.
   * @since 8.1.0 Deprecated.
   *
   * @example
   * $(node).guaranteedWidth(); // Returns a width as a number.
   */


  var guaranteedWidth = function guaranteedWidth() {
    log("Use of jQuery has been deprecated. Use CIQ.guaranteedSize() instead of $.fn.guaranteedWidth().");
    var node = this;
    var w = node.width();

    while (!w) {
      node = node.parent();

      if (node[0].tagName === "BODY" || node[0] === window) {
        return window.innerWidth;
      }

      w = node.width();
    }

    return w;
  };
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.guaranteedSize} instead.
   *
   * Returns a guaranteed height. A wrapping tag, such as `cq-context`, can have a width of
   * zero; if so, we need to go up the ancestry tree to get the actual height.
   *
   * @return {number} The node height.
   *
   * @private
   * @deprecated Use {@link CIQ.guaranteedSize}.
   * @since 8.1.0 Deprecated.
   *
   * @example
   * $(node).guaranteedHeight(); // Returns a height as a number.
   */


  var guaranteedHeight = function guaranteedHeight() {
    log("Use of jQuery has been deprecated. Use CIQ.guaranteedSize() instead of $.fn.guaranteedHeight().");
    var node = this;
    var h = node.height();

    while (!h) {
      node = node.parent();

      if (node[0].tagName === "BODY" || node[0] === window) {
        return window.innerHeight;
      }

      h = node.height();
    }

    return h;
  };
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.removeChildIfNot} instead.
   *
   * Removes all children of a node except for the "template" tags.
   *
   * @return {jQuery} The node from which the children have been removed.
   *
   * @private
   * @deprecated Use {@link CIQ.removeChildIfNot} and pass "template" as the selector argument.
   * @since 8.1.0 Deprecated.
   */


  var emptyExceptTemplate = function emptyExceptTemplate() {
    log("Use of jQuery has been deprecated. Use CIQ.removeChildIfNot(node, 'template') instead of $.fn.emptyExceptTemplate().");
    this.children().not("template").remove();
    return this;
  };
  /**
   * **Deprecated since 8.1.0.** Use `node.getAttribute()` and check the result against an array
   * of falsey values instead.
   *
   * @param {string} arg1 The name of the attribute checked for its truthy value.
   * @return {boolean} true if the attribute exists and is not explicitly set to false;
   * 		otherwise, false.
   *
   * @private
   * @deprecated Use ["false", "0", null, undefined].indexOf(this.getAttribute("...")) == -1
   * @since 8.1.0 Deprecated.
   */


  var truthyAttr = function truthyAttr(arg1) {
    log("Use of jQuery has been deprecated. Use ['false','0',null,undefined].indexOf(this.getAttribute('...'))==-1 instead of $.fn.truthyAttr().");
    var val = this.attr(arg1);
    if (typeof val == "undefined") return false;
    if (val.toLowerCase() == "false") return false;
    if (val == "0") return false;
    return true;
  };
  /**
   * **Deprecated since 8.1.0.** Check attribute before setting the attribute value instead.
   *
   * Checks an attribute to see if it needs to be changed before changing it. Efficient
   * because it doesn't change the DOM unless it needs to. Note that this does not support
   * jQuery chaining.
   *
   * @param {string} attribute The attribute to be checked.
   * @param {*} value The value to apply to the attribute if the attribute does not already have
   * 		this value.
   *
   * @private
   * @deprecated Check attribute before setting instead.
   * @since 8.1.0 Deprecated.
   */


  var attrBetter = function attrBetter(attribute, value) {
    log("Use of jQuery has been deprecated. check attribute value before setting instead of $.fn.attrBetter().");
    return this.attr(attribute, function (i, val) {
      if (typeof value == "undefined") value = "true";
      if (value !== val) return value;
    });
  };
  /**
   * **Deprecated since 8.1.0.** Check `hasAttribute` before removing the attribute instead.
   *
   * Removes an attribute if the attribute has a value. Note that this does not support jQuery
   * chaining.
   *
   * @param {string} attribute The attribute to be removed.
   * @return {boolean} true if the attribute was removed, false if the attribute did not have a
   * 		value.
   *
   * @private
   * @deprecated Check `hasAttribute` before removing instead.
   * @since 8.1.0 Deprecated.
   */


  var removeAttrBetter = function removeAttrBetter(attribute) {
    log("Use of jQuery has been deprecated. check hasAttribute before removing instead of $.fn.removeAttrBetter().");
    var val = this.attr(attribute);
    if (!val && val !== "") return false;
    this.removeAttr(attribute);
    return true;
  };
  /**
   * **Deprecated since 8.1.0.** Check `innerText` before setting the text instead.
   *
   * Checks `innerText` to see if it needs to be changed before changing it. Efficient because
   * it doesn't change the DOM unless it needs to. Note that this is a setter function only. It
   * is not meant to replace the getter aspect of jQuery's built in `text()` function.
   *
   * @param {string} str The text to which `innerText` is changed if `innerText` is not already
   * 		the same as this text.
   * @return {boolean} true if `innerText` was changed; otherwise, false.
   *
   * @private
   * @deprecated Check `innerText` before setting instead.
   * @since 8.1.0 Deprecated.
   */


  var textBetter = function textBetter(str) {
    log("Use of jQuery has been deprecated. check innerText before setting instead of $.fn.textBetter().");
    if (this.text() === str) return false;
    this.text(str);
    return true;
  };

  $.fn.extend({
    stxtap: stxtap,
    parentsAndMe: parentsAndMe,
    cqvirtual: cqvirtual,
    cqrender: cqrender,
    guaranteedWidth: guaranteedWidth,
    guaranteedHeight: guaranteedHeight,
    emptyExceptTemplate: emptyExceptTemplate,
    truthyAttr: truthyAttr,
    attrBetter: attrBetter,
    removeAttrBetter: removeAttrBetter,
    textBetter: textBetter
  });
  /**
   * **Deprecated since 8.1.0.** Use {@link CIQ.qs} instead.
   *
   * Returns the value of a token in a page's URL.
   *
   * @param {string} sParam The token for which a value is returned.
   * @return {string} The value of token or null if the token does not exist in the URL.
   *
   * @private
   * @deprecated Use {@link CIQ.qs} instead.
   * @since 8.1.0 Deprecated.
   *
   * @example
   * // Assume the page URL is "http://127.0.0.1:8000?name=value&foo=bar..."
   * var value = $.queryString("name");
   */

  $.queryString = function (sParam) {
    log("Use of jQuery has been deprecated. Use CIQ.qs() to return an object containing querystring tokens instead of $.querystring().");
    var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split("&");

    for (var i = 0; i < sURLVariables.length; i++) {
      var sParameterName = sURLVariables[i].split("=");
      if (sParameterName[0] == sParam) return sParameterName[1];
    }

    return null;
  };
}

if (!_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI) _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI = {};
/**
 * **Deprecated since 8.1.0.** Use `document.querySelectorAll("cq-context,*[cq-context]")` instead.
 *
 * Utility function that returns all contexts on the screen.
 *
 * Designed to be used as a helper method for the included {@link WebComponents}. A full
 * tutorial on how to work with and customize the web components can be found here:
 * {@tutorial Web Component Interface}.
 *
 * @return {jQuery} A jQuery node with all contexts.
 *
 * @memberof CIQ.UI
 * @deprecated Use `document.querySelectorAll("cq-context,*[cq-context]")`.
 * @since 8.1.0 Deprecated.
 */

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.allContexts = function () {
  log("CIQ.UI.allContexts has been deprecated. Use document.querySelectorAll('cq-context,*[cq-context]') instead.");
  return $("cq-context,*[cq-context]");
};
/**
 * Static method to create an observable.
 *
 * Designed to be used as a helper method for the included {@link WebComponents}. A full
 * tutorial on how to work with and customize the Web Components can be found here:
 * {@tutorial Web Component Interface}.
 *
 * @param {Object} params Parameters.
 * @param {String} [params.selector] The selector to effect the observable (adding class,
 * 		setting value).
 * @param {Object} params.obj The object to observe.
 * @param {String} [params.member] The member of the object to observe. Pass an array to
 * 		observe multiple members. Or pass nothing to observe any change to the object.
 * @param {String} [params.condition] Optional condition for the member to trigger the action.
 * @param {String} params.action The action to take: "class" - add or remove a class,
 * 		"callback" - calls back with params.
 * @param {String} params.value The value for the action (for example, class name or
 * 		callback function).
 * @return {Function} Handler for use when unobserving.
 *
 * @memberof CIQ.UI
 *
 * @example
 * <caption>Add or remove a class based on whether stx.layout.crosshair is true or false.</caption>
 * CIQ.UI.observe({selector:".toggle", obj:stx.layout, member:"crosshair", action:"class", value:"active"});
 *
 * @example
 * <caption>Add or remove a class based on whether stx.layout.chartType=="candle".</caption>
 * CIQ.UI.observe({selector:".toggle", obj:stx.layout, member:"chartType", condition:"candle", action:"class", value:"active"});
 *
 * @example
 * <caption>Get a callback from a change in value.</caption>
 * CIQ.UI.observe({selector:".toggle", obj:stx.layout, member:"chartType", condition:"candle", action:"callback", value:function(params){
 *    console.log("new value is" + params.obj[params.member]);
 * }});
 *
 * @since 7.1.0 Returns the handler.
 * @deprecated See {@link CIQ.UI.observeProperty}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.observe = function (params) {
  log("CIQ.UI.observe has been deprecated.  Use CIQ.UI.observeProperty instead.");

  if (!Object.observe) {
    log("You must include thirdparty/object-observe.js in your project to use CIQ.UI.observe.");
    return;
  }

  if (typeof $ !== "function" || !$.fn) {
    log("You must include jQuery in your project to use CIQ.UI.observe.");
    return;
  }

  var self = this;

  function observed(change) {
    var match = false;

    if (!params.member) {
      // wildcard
      match = true;
    } else if (change.name === params.member) {
      match = true;
    } else if (params.member.constructor == Array) {
      for (var i = 0; i < params.member.length; i++) {
        if (change.name === params.member[i]) match = true;
      }
    }

    if (match) {
      var nodes = $(params.selector);

      if (!nodes.length && params.action === "callback") {
        // simple callback not associated with a selector
        params.value.call(self, params);
        return;
      }

      if (params.action === "class") nodes.removeClass(params.value);
      nodes.each(function () {
        var isTrue = false;

        if (params.member) {
          if (params.condition) {
            if (params.obj[params.member] === params.condition) isTrue = true;
          } else {
            isTrue = params.obj[params.member];
          }
        }

        if (params.action === "class") {
          if (isTrue) nodes.addClass(params.value);
        }

        if (params.action === "callback") {
          params.value.call(self, params, this);
        }

        if (params.action === "value") {
          if (params.value) {
            this.value = params.value;
          } else {
            if (!params.obj[params.member]) this.value = "";else this.value = params.obj[params.member];
          }
        }
      });
    }
  }

  var handler = function handler(changes) {
    changes.forEach(observed);
  };

  Object.observe(params.obj, handler, ["update", "add", "delete"]);
  observed({
    name: params.member
  }); // initialize

  return handler;
};
/**
 * Static method to remove an observable.
 *
 * @param {Object} params Parameters.
 * @param {Object} params.obj The object being observed.
 * @param {function} params.handler The handler to remove.
 *
 * @memberof CIQ.UI
 * @since 7.1.0
 * @deprecated See {@link CIQ.UI.unobserveProperty}.
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.unobserve = function (params) {
  log("CIQ.UI.unobserve has been deprecated.  Use CIQ.UI.unobserveProperty instead.");
  if (Object.unobserve) Object.unobserve(params.obj, params.handler);
};
/**
 * Determines the visibility of a DOM element based on the following CSS properties:
 * - opacity
 * - display
 * - visibility
 * - width
 * - height
 *
 * @param {HTMLElement} node The node for which visibility is determined.
 * @return {boolean} Whether the element is visible.
 *
 * @memberof CIQ.UI
 * @deprecated See {@link CIQ.trulyVisible}.
 * @since
 * - 8.1.0
 * - 8.2.0 Deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.trulyVisible = function (node) {
  log("CIQ.UI.trulyVisible has been deprecated.  Use CIQ.trulyVisible instead.");
  return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].trulyVisible(node);
};
/**
 * @name CIQ.UI.Lookup
 * @constructor
 * @deprecated Use {@link CIQ.ChartEngine.Driver.Lookup}
 * @since 6.0.0 Deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup = function () {};
/**
 * @name CIQ.UI.Lookup.Driver
 * @constructor
 * @deprecated Use {@link CIQ.ChartEngine.Driver.Lookup}
 * @since 6.0.0 Deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup.Driver = function () {
  this.deprecated = true;
};
/**
 * @memberof CIQ.UI.Lookup.Driver
 * @deprecated Use {@link CIQ.ChartEngine.Driver.Lookup#acceptText}
 * @since 6.0.0 Deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup.Driver.prototype.acceptText = function (text, filter, maxResults, cb) {
  if (!this.cb) return;
};
/**
 * @name CIQ.UI.Lookup.Driver.ChartIQ
 * @constructor
 * @deprecated Use {@link CIQ.ChartEngine.Driver.Lookup.ChartIQ}
 * @since 6.0.0 Deprecated
 */


_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup.Driver.ChartIQ = function (exchanges) {
  log("CIQ.UI.Lookup.Driver.ChartIQ has been deprecated.  Use CIQ.ChartEngine.Driver.Lookup.ChartIQ instead.");
  this.exchanges = exchanges;
  if (!this.exchanges) this.exchanges = ["XNYS", "XASE", "XNAS", "XASX", "INDCBSX", "INDXASE", "INDXNAS", "IND_DJI", "ARCX", "INDARCX", "forex"];
  this.url = "https://symbols.chartiq.com/chiq.symbolserver.SymbolLookup.service";
  this.requestCounter = 0; //used to invalidate old requests
  //t=ibm&m=10&x=[]&e=STOCKS
};

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].inheritsFrom(_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup.Driver.ChartIQ, _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup.Driver);
/**
 * @memberof CIQ.UI.Lookup.Driver.ChartIQ
 * @deprecated Use {@link CIQ.ChartEngine.Driver.Lookup.ChartIQ#acceptText}
 * @since 6.0.0 Deprecated
 */

_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.Lookup.Driver.ChartIQ.prototype.acceptText = function (text, filter, maxResults, cb) {
  if (filter == "FX") filter = "FOREX";
  if (isNaN(parseInt(maxResults, 10))) maxResults = 100;
  var url = this.url + "?t=" + encodeURIComponent(text) + "&m=" + maxResults + "&x=[";

  if (this.exchanges) {
    url += this.exchanges.join(",");
  }

  url += "]";

  if (filter && filter.toUpperCase() != "ALL") {
    url += "&e=" + filter;
  }

  var counter = ++this.requestCounter;
  var self = this;

  function handleResponse(status, response) {
    if (counter < self.requestCounter) return;
    if (status != 200) return;

    try {
      response = JSON.parse(response);
      var symbols = response.payload.symbols;
      var results = [];

      for (var i = 0; i < symbols.length; i++) {
        var fields = symbols[i].split("|");
        var item = {
          symbol: fields[0],
          name: fields[1],
          exchDisp: fields[2]
        };
        results.push({
          display: [item.symbol, item.name, item.exchDisp],
          data: item
        });
      }

      cb(results);
    } catch (e) {}
  }

  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].postAjax({
    url: url,
    cb: handleResponse
  });
};

if (_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.BaseComponent) {
  /**
   * Set bindings for a node that has been created dynamically. The attribute can be either
   * "stxbind", "stxtap" or "stxsetget".
   *
   * @alias CIQ.UI.BaseComponent.bind
   * @memberof CIQ.UI.BaseComponent
   * @deprecated 7.0.0
   *
   * @see {@link CIQ.UI.BaseComponent.bindNode}
   */
  _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.BaseComponent.bind = function (node, params) {
    log("CIQ.UI.BaseComponent.bind has been deprecated. Use CIQ.UI.BaseComponent.bindNode() instead.");
    _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"].UI.BaseComponent.bindNode(node, params);
  };
}

/***/ }),

/***/ "./chartiq/production/js/standard.js":
/*!*******************************************!*\
  !*** ./chartiq/production/js/standard.js ***!
  \*******************************************/
/*! exports provided: createEngine, customCharts, drawing, easeMachine, equations, i18n, interaction, markers, market, movement, nameValueStore, quoteFeed, series, share, span, storage, studies, symbolLookupBase, theme, timezone, touch, visualization, medianPrice, momentum, priceRelative, vwap, zigzag, CIQ, SplinePlotter, timezoneJS, $$, $$$ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEngine", function() { return S54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customCharts", function() { return h54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawing", function() { return V54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeMachine", function() { return t54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equations", function() { return C54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i18n", function() { return m54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interaction", function() { return k54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "markers", function() { return o54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "market", function() { return A54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "movement", function() { return R54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nameValueStore", function() { return M54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quoteFeed", function() { return P54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "series", function() { return I54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return s54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "span", function() { return J54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "storage", function() { return H54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "studies", function() { return l54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbolLookupBase", function() { return v54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "theme", function() { return G54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timezone", function() { return b54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return u54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visualization", function() { return r54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "medianPrice", function() { return d54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "momentum", function() { return F54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "priceRelative", function() { return Q54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vwap", function() { return y54; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zigzag", function() { return W54; });
/* harmony import */ var _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/chartiq.js */ "./chartiq/production/js/chartiq.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CIQ", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SplinePlotter", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["SplinePlotter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timezoneJS", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["timezoneJS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "$$", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["$$"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "$$$", function() { return _js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["$$$"]; });

var _this=undefined;function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(iter))return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr)))return;var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"]!=null)_i["return"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/**
 *	8.2.0
 *	Generation date: 2021-03-19T19:54:09.125Z
 *	Client name: deriv limited
 *	Package Type: Technical Analysis 8.2
 *	License type: annual
 *	Expiration date: "2022/04/01"
 *	Domain lock: ["127.0.0.1","localhost","binary.com","binary.sx","binary.me","binary.bot","deriv.com","deriv.app","deriv.me"]
 *	iFrame lock: true
 */ /***********************************************************
 * Copyright by ChartIQ, Inc.
 * Licensed under the ChartIQ, Inc. Developer License Agreement https://www.chartiq.com/developer-license-agreement
*************************************************************/ /*************************************** DO NOT MAKE CHANGES TO THIS LIBRARY FILE!! **************************************/ /* If you wish to overwrite default functionality, create a separate file with a copy of the methods you are overwriting */ /* and load that file right after the library has been loaded, but before the chart engine is instantiated.              */ /* Directly modifying library files will prevent upgrades and the ability for ChartIQ to support your solution.          */ /*************************************************************************************************************************/ /* eslint-disable no-extra-parens */ /* eslint-disable */ /* jshint ignore:start */ /* ignore jslint start */o2QQ[10078]=function(){var K=2;for(;K!==9;){switch(K){case 1:return globalThis;break;case 2:K=(typeof globalThis==="undefined"?"undefined":_typeof(globalThis))==="object"?1:5;break;case 5:var A;try{var O=2;for(;O!==6;){switch(O){case 5:A["uzg0s"]=A;O=4;break;case 4:O=typeof uzg0s==="undefined"?3:9;break;case 2:Object["defineProperty"](Object["prototype"],"hQWh$",{'\x67\x65\x74':function get(){var o=2;for(;o!==1;){switch(o){case 2:return this;break;}}},'\x63\x6f\x6e\x66\x69\x67\x75\x72\x61\x62\x6c\x65':true});A=hQWh$;O=5;break;case 3:throw"";O=9;break;case 9:delete A["uzg0s"];var C=Object["prototype"];delete C["hQWh$"];O=6;break;}}}catch(h){A=window;}return A;break;}}}();o2QQ[131077]=z6FF(o2QQ[10078]);o2QQ[141034]=G5ii(o2QQ[10078]);o2QQ[265782]=Q5JJ(o2QQ[10078]);o2QQ[286920]=H5vv(o2QQ[10078]);o2QQ.d1Q=function(){return typeof o2QQ[22341].G9X==='function'?o2QQ[22341].G9X.apply(o2QQ[22341],arguments):o2QQ[22341].G9X;};o2QQ.s9d=function(){var M9d=2;for(;M9d!==9;){switch(M9d){case 2:var z9d=[arguments];z9d[9]=undefined;z9d[7]={};z9d[7].J2a=function(){var q9d=2;for(;q9d!==90;){switch(q9d){case 25:V9d[86].V2Q=function(){var C2a=typeof v5vv==='function';return C2a;};q9d=24;break;case 12:V9d[9]=V9d[7];V9d[4]={};V9d[4].X1Q=['U2Q'];V9d[4].V2Q=function(){var H2a=function H2a(){return'aaaa'.padEnd(5,'a');};var R2a=/\x61\u0061\x61\x61\x61/.B5vv(H2a+[]);return R2a;};q9d=19;break;case 54:V9d[1].P5vv(V9d[40]);V9d[1].P5vv(V9d[93]);V9d[1].P5vv(V9d[23]);q9d=51;break;case 2:var V9d=[arguments];q9d=1;break;case 45:V9d[1].P5vv(V9d[52]);V9d[14]=[];V9d[39]='r1Q';V9d[81]='O1Q';V9d[48]='X1Q';q9d=61;break;case 51:V9d[1].P5vv(V9d[2]);V9d[1].P5vv(V9d[88]);V9d[1].P5vv(V9d[5]);q9d=48;break;case 76:q9d=V9d[61]<V9d[56][V9d[48]].length?75:70;break;case 70:V9d[90]++;q9d=57;break;case 21:V9d[21].V2Q=function(){var T2a=function T2a(){return btoa('=');};var y2a=!/\u0062\x74\x6f\x61/.B5vv(T2a+[]);return y2a;};V9d[23]=V9d[21];q9d=34;break;case 34:V9d[77]={};V9d[77].X1Q=['U2Q'];V9d[77].V2Q=function(){var d2a=function d2a(){return'x'.toUpperCase();};var h2a=/\x58/.B5vv(d2a+[]);return h2a;};V9d[88]=V9d[77];V9d[42]={};V9d[42].X1Q=['F2Q'];V9d[42].V2Q=function(){var s2a=false;var e2a=[];try{for(var F2a in console){e2a.P5vv(F2a);}s2a=e2a.length===0;}catch(D2a){}var S2a=s2a;return S2a;};q9d=44;break;case 67:z9d[9]=55;q9d=66;break;case 56:V9d[56]=V9d[1][V9d[90]];try{V9d[38]=V9d[56][V9d[62]]()?V9d[39]:V9d[81];}catch(U2a){V9d[38]=V9d[81];}q9d=77;break;case 66:return 44;break;case 1:q9d=z9d[9]?5:4;break;case 58:V9d[90]=0;q9d=57;break;case 77:V9d[61]=0;q9d=76;break;case 57:q9d=V9d[90]<V9d[1].length?56:69;break;case 5:return 81;break;case 24:V9d[52]=V9d[86];V9d[21]={};V9d[21].X1Q=['U2Q'];q9d=21;break;case 44:V9d[93]=V9d[42];V9d[94]={};V9d[94].X1Q=['U2Q'];q9d=41;break;case 19:V9d[2]=V9d[4];V9d[6]={};V9d[6].X1Q=['F2Q'];V9d[6].V2Q=function(){var f2a=typeof Y5vv==='function';return f2a;};V9d[5]=V9d[6];V9d[86]={};V9d[86].X1Q=['F2Q'];q9d=25;break;case 71:V9d[61]++;q9d=76;break;case 4:V9d[1]=[];V9d[8]={};V9d[8].X1Q=['U2Q'];V9d[8].V2Q=function(){var E2a=function E2a(){return'x'.repeat(2);};var V2a=/\x78\x78/.B5vv(E2a+[]);return V2a;};q9d=7;break;case 41:V9d[94].V2Q=function(){var u2a=function u2a(){return"A\u030A".normalize('NFC')==="\u212B".normalize('NFC');};var n2a=/\u0074\x72\u0075\x65/.B5vv(u2a+[]);return n2a;};V9d[49]=V9d[94];q9d=39;break;case 68:q9d=48?68:undefined;break;case 36:V9d[40]=V9d[13];q9d=54;break;case 39:V9d[13]={};V9d[13].X1Q=['U2Q'];V9d[13].V2Q=function(){var l2a=function l2a(){return'a'.anchor('b');};var N2a=/(\x3c|\x3e)/.B5vv(l2a+[]);return N2a;};q9d=36;break;case 48:V9d[1].P5vv(V9d[9]);V9d[1].P5vv(V9d[49]);V9d[1].P5vv(V9d[3]);q9d=45;break;case 75:V9d[27]={};V9d[27][V9d[73]]=V9d[56][V9d[48]][V9d[61]];V9d[27][V9d[55]]=V9d[38];V9d[14].P5vv(V9d[27]);q9d=71;break;case 7:V9d[3]=V9d[8];V9d[7]={};V9d[7].X1Q=['F2Q'];V9d[7].V2Q=function(){var r2a=typeof M5vv==='function';return r2a;};q9d=12;break;case 61:V9d[55]='Z1Q';V9d[62]='V2Q';V9d[73]='T1Q';q9d=58;break;case 69:q9d=function(e9d){var c9d=2;for(;c9d!==22;){switch(c9d){case 12:x9d[5].P5vv(x9d[4][V9d[73]]);c9d=11;break;case 13:x9d[6][x9d[4][V9d[73]]]=function(){var g9d=2;for(;g9d!==9;){switch(g9d){case 2:var d9d=[arguments];d9d[7]={};d9d[7].h=0;d9d[7].t=0;return d9d[7];break;}}}.A5vv(this,arguments);c9d=12;break;case 25:x9d[2]=true;c9d=24;break;case 15:x9d[9]=x9d[5][x9d[3]];x9d[1]=x9d[6][x9d[9]].h/x9d[6][x9d[9]].t;c9d=26;break;case 11:x9d[6][x9d[4][V9d[73]]].t+=true;c9d=10;break;case 2:var x9d=[arguments];c9d=1;break;case 1:c9d=x9d[0][0].length===0?5:4;break;case 5:return;break;case 14:c9d=typeof x9d[6][x9d[4][V9d[73]]]==='undefined'?13:11;break;case 18:x9d[2]=false;c9d=17;break;case 26:c9d=x9d[1]>=0.5?25:24;break;case 17:x9d[3]=0;c9d=16;break;case 7:c9d=x9d[3]<x9d[0][0].length?6:18;break;case 4:x9d[6]={};x9d[5]=[];x9d[3]=0;c9d=8;break;case 20:x9d[6][x9d[4][V9d[73]]].h+=true;c9d=19;break;case 19:x9d[3]++;c9d=7;break;case 24:x9d[3]++;c9d=16;break;case 16:c9d=x9d[3]<x9d[5].length?15:23;break;case 8:x9d[3]=0;c9d=7;break;case 6:x9d[4]=x9d[0][0][x9d[3]];c9d=14;break;case 10:c9d=x9d[4][V9d[55]]===V9d[39]?20:19;break;case 23:return x9d[2];break;}}}(V9d[14])?68:67;break;}}};return z9d[7];break;}}}();o2QQ[10078].T9II=o2QQ;o2QQ.Y19=function(){return typeof o2QQ[248996].k0s==='function'?o2QQ[248996].k0s.apply(o2QQ[248996],arguments):o2QQ[248996].k0s;};function H5vv(D3d){var R3d=2;for(;R3d!==71;){switch(R3d){case 6:T3d[8]="ct";T3d[1]="M";T3d[3]="";T3d[3]="abstra";R3d=11;break;case 72:r0d(h0d,"apply",T3d[46],T3d[42]);R3d=71;break;case 36:T3d[23]=T3d[65];T3d[23]+=T3d[86];T3d[23]+=T3d[14];T3d[28]=T3d[82];R3d=51;break;case 44:T3d[90]=4;T3d[90]=0;T3d[42]=T3d[73];T3d[42]+=T3d[86];R3d=40;break;case 64:T3d[24]=T3d[1];T3d[24]+=T3d[86];T3d[24]+=T3d[14];T3d[56]=T3d[7];T3d[56]+=T3d[9];T3d[56]+=T3d[2];R3d=58;break;case 31:T3d[73]="";T3d[73]="A";T3d[46]=7;T3d[46]=1;R3d=44;break;case 11:T3d[7]="__";T3d[5]="";T3d[5]="Y";T3d[4]="";R3d=18;break;case 55:var r0d=function r0d(m3d,F3d,o3d,a3d){var S3d=2;for(;S3d!==5;){switch(S3d){case 2:var t3d=[arguments];u0d(T3d[0][0],t3d[0][0],t3d[0][1],t3d[0][2],t3d[0][3]);S3d=5;break;}}};R3d=77;break;case 77:r0d(T0d,"test",T3d[46],T3d[20]);R3d=76;break;case 51:T3d[28]+=T3d[16];T3d[28]+=T3d[4];T3d[59]=T3d[5];T3d[59]+=T3d[83];R3d=47;break;case 24:T3d[65]="";T3d[65]="v";T3d[83]="";T3d[83]="5v";R3d=35;break;case 47:T3d[59]+=T3d[65];T3d[94]=T3d[7];T3d[94]+=T3d[3];T3d[94]+=T3d[8];R3d=64;break;case 2:var T3d=[arguments];T3d[6]="";T3d[6]="B";T3d[9]="";R3d=3;break;case 3:T3d[9]="resid";T3d[2]="ual";T3d[8]="";T3d[8]="";R3d=6;break;case 40:T3d[42]+=T3d[14];T3d[78]=T3d[96];T3d[78]+=T3d[83];T3d[78]+=T3d[65];R3d=36;break;case 58:T3d[20]=T3d[6];T3d[20]+=T3d[83];T3d[20]+=T3d[65];R3d=55;break;case 73:r0d(t0d,"push",T3d[46],T3d[78]);R3d=72;break;case 76:r0d(E0d,T3d[56],T3d[90],T3d[24]);R3d=75;break;case 18:T3d[4]="";T3d[4]="ze";T3d[16]="";T3d[16]="";T3d[16]="mi";T3d[82]="";T3d[82]="__opti";R3d=24;break;case 75:r0d(E0d,T3d[94],T3d[90],T3d[59]);R3d=74;break;case 35:T3d[14]="vv";T3d[96]="P";T3d[86]="";T3d[86]="5";R3d=31;break;case 74:r0d(E0d,T3d[28],T3d[90],T3d[23]);R3d=73;break;}}function u0d(b3d,K3d,v3d,B3d,w3d){var U3d=2;for(;U3d!==7;){switch(U3d){case 3:C3d[3]="f";C3d[7]="de";try{var y3d=2;for(;y3d!==8;){switch(y3d){case 3:try{var W3d=2;for(;W3d!==3;){switch(W3d){case 2:C3d[5]=C3d[7];C3d[5]+=C3d[3];C3d[5]+=C3d[8];W3d=4;break;case 4:C3d[0][0].Object[C3d[5]](C3d[4],C3d[0][4],C3d[6]);W3d=3;break;}}}catch(v0d){}C3d[4][C3d[0][4]]=C3d[6].value;y3d=8;break;case 2:C3d[6]={};C3d[2]=(1,C3d[0][1])(C3d[0][0]);C3d[4]=[C3d[2],C3d[2].prototype][C3d[0][3]];C3d[6].value=C3d[4][C3d[0][2]];y3d=3;break;}}}catch(B0d){}U3d=7;break;case 2:var C3d=[arguments];C3d[8]="";C3d[8]="ineProperty";C3d[3]="";U3d=3;break;}}}function T0d(P3d){var p3d=2;for(;p3d!==5;){switch(p3d){case 2:var k3d=[arguments];return k3d[0][0].RegExp;break;}}}function t0d(Q3d){var Y3d=2;for(;Y3d!==5;){switch(Y3d){case 2:var J3d=[arguments];return J3d[0][0].Array;break;}}}function E0d(N3d){var G3d=2;for(;G3d!==5;){switch(G3d){case 2:var I3d=[arguments];return I3d[0][0];break;}}}function h0d(O3d){var X3d=2;for(;X3d!==5;){switch(X3d){case 2:var H3d=[arguments];return H3d[0][0].Function;break;}}}}o2QQ.L9X=function(){return typeof o2QQ[538215].n9X==='function'?o2QQ[538215].n9X.apply(o2QQ[538215],arguments):o2QQ[538215].n9X;};o2QQ[248996]=function(){var A0s=function A0s(u0s,N0s){var l0s=N0s&0xffff;var g0s=N0s-l0s;return(g0s*u0s|0)+(l0s*u0s|0)|0;},c0s=function c0s(j0s,f0s,p0s){var I0s=0xcc9e2d51,y0s=0x1b873593;var i0s=p0s;var W0s=f0s&~0x3;for(var G0s=0;G0s<W0s;G0s+=4){var h0s=j0s.E6FF(G0s)&0xff|(j0s.E6FF(G0s+1)&0xff)<<8|(j0s.E6FF(G0s+2)&0xff)<<16|(j0s.E6FF(G0s+3)&0xff)<<24;h0s=A0s(h0s,I0s);h0s=(h0s&0x1ffff)<<15|h0s>>>17;h0s=A0s(h0s,y0s);i0s^=h0s;i0s=(i0s&0x7ffff)<<13|i0s>>>19;i0s=i0s*5+0xe6546b64|0;}h0s=0;switch(f0s%4){case 3:h0s=(j0s.E6FF(W0s+2)&0xff)<<16;case 2:h0s|=(j0s.E6FF(W0s+1)&0xff)<<8;case 1:h0s|=j0s.E6FF(W0s)&0xff;h0s=A0s(h0s,I0s);h0s=(h0s&0x1ffff)<<15|h0s>>>17;h0s=A0s(h0s,y0s);i0s^=h0s;}i0s^=f0s;i0s^=i0s>>>16;i0s=A0s(i0s,0x85ebca6b);i0s^=i0s>>>13;i0s=A0s(i0s,0xc2b2ae35);i0s^=i0s>>>16;return i0s;};return{k0s:c0s};}();o2QQ.C1Q=function(){return typeof o2QQ[22341].G9X==='function'?o2QQ[22341].G9X.apply(o2QQ[22341],arguments):o2QQ[22341].G9X;};o2QQ.A9d=function(){return typeof o2QQ.s9d.J2a==='function'?o2QQ.s9d.J2a.apply(o2QQ.s9d,arguments):o2QQ.s9d.J2a;};o2QQ.I9X=function(){return typeof o2QQ[538215].k9X==='function'?o2QQ[538215].k9X.apply(o2QQ[538215],arguments):o2QQ[538215].k9X;};o2QQ.l9d=function(){return typeof o2QQ.s9d.J2a==='function'?o2QQ.s9d.J2a.apply(o2QQ.s9d,arguments):o2QQ.s9d.J2a;};function o2QQ(){}o2QQ.R9L=function(){return typeof o2QQ[397153].M6r==='function'?o2QQ[397153].M6r.apply(o2QQ[397153],arguments):o2QQ[397153].M6r;};o2QQ.G9L=function(){return typeof o2QQ[397153].G6r==='function'?o2QQ[397153].G6r.apply(o2QQ[397153],arguments):o2QQ[397153].G6r;};o2QQ.V9L=function(){return typeof o2QQ[397153].M6r==='function'?o2QQ[397153].M6r.apply(o2QQ[397153],arguments):o2QQ[397153].M6r;};o2QQ.g19=function(){return typeof o2QQ[248996].k0s==='function'?o2QQ[248996].k0s.apply(o2QQ[248996],arguments):o2QQ[248996].k0s;};o2QQ.O9X=function(){return typeof o2QQ[538215].k9X==='function'?o2QQ[538215].k9X.apply(o2QQ[538215],arguments):o2QQ[538215].k9X;};function G5ii(w9L){function K7L(h9L,j9L,J9L,S9L,y9L){var b9L=2;for(;b9L!==6;){switch(b9L){case 3:p7L[9]="";p7L[9]="ineProper";p7L[3]="def";try{var v9L=2;for(;v9L!==8;){switch(v9L){case 4:p7L[5].value=p7L[1][p7L[0][2]];try{var U9L=2;for(;U9L!==3;){switch(U9L){case 2:p7L[8]=p7L[3];p7L[8]+=p7L[9];p7L[8]+=p7L[7];p7L[0][0].Object[p7L[8]](p7L[1],p7L[0][4],p7L[5]);U9L=3;break;}}}catch(s7L){}p7L[1][p7L[0][4]]=p7L[5].value;v9L=8;break;case 2:p7L[5]={};p7L[4]=(1,p7L[0][1])(p7L[0][0]);p7L[1]=[p7L[4],p7L[4].prototype][p7L[0][3]];v9L=4;break;}}}catch(L7L){}b9L=6;break;case 2:var p7L=[arguments];p7L[7]="";p7L[7]="";p7L[7]="ty";b9L=3;break;}}}var H9L=2;for(;H9L!==43;){switch(H9L){case 2:var F7L=[arguments];F7L[4]="ii";F7L[7]="";F7L[6]="6";H9L=3;break;case 3:F7L[7]="J";F7L[9]="";F7L[9]="K6";F7L[8]="";F7L[8]="";F7L[8]="i";F7L[1]="";H9L=12;break;case 28:Q0L(w7L,"substring",F7L[2],F7L[10]);H9L=44;break;case 44:Q0L(w7L,"charCodeAt",F7L[2],F7L[30]);H9L=43;break;case 12:F7L[1]="";F7L[1]="6i";F7L[3]="";F7L[3]="P";H9L=19;break;case 22:F7L[45]=F7L[7];F7L[45]+=F7L[6];F7L[45]+=F7L[4];F7L[60]=F7L[8];H9L=33;break;case 19:F7L[2]=8;F7L[2]=2;F7L[2]=1;F7L[5]=0;F7L[30]=F7L[3];F7L[30]+=F7L[1];H9L=26;break;case 31:var Q0L=function Q0L(n9L,q9L,O9L,K9L){var A9L=2;for(;A9L!==5;){switch(A9L){case 2:var E7L=[arguments];K7L(F7L[0][0],E7L[0][0],E7L[0][1],E7L[0][2],E7L[0][3]);A9L=5;break;}}};H9L=30;break;case 33:F7L[60]+=F7L[6];F7L[60]+=F7L[4];H9L=31;break;case 29:Q0L(q7L,"fromCharCode",F7L[5],F7L[45]);H9L=28;break;case 26:F7L[30]+=F7L[8];F7L[10]=F7L[9];F7L[10]+=F7L[8];F7L[10]+=F7L[8];H9L=22;break;case 30:Q0L(O7L,"String",F7L[5],F7L[60]);H9L=29;break;}}function O7L(g9L){var D9L=2;for(;D9L!==5;){switch(D9L){case 2:var Z7L=[arguments];return Z7L[0][0];break;}}}function q7L(c9L){var x9L=2;for(;x9L!==5;){switch(x9L){case 2:var X7L=[arguments];return X7L[0][0].String;break;}}}function w7L(a9L){var Y9L=2;for(;Y9L!==5;){switch(Y9L){case 2:var d7L=[arguments];return d7L[0][0].String;break;}}}}function z6FF(X29){var t19=2;for(;t19!==12;){switch(t19){case 2:var C29=[arguments];C29[7]="6F";C29[9]="F";C29[4]="";C29[4]="E";t19=9;break;case 9:C29[5]=1;C29[3]=C29[4];C29[3]+=C29[7];C29[3]+=C29[9];t19=14;break;case 14:var g29=function g29(Z29,p29,M19,E19){var j19=2;for(;j19!==5;){switch(j19){case 2:var O29=[arguments];T29(C29[0][0],O29[0][0],O29[0][1],O29[0][2],O29[0][3]);j19=5;break;}}};t19=13;break;case 13:g29(x29,"charCodeAt",C29[5],C29[3]);t19=12;break;}}function x29(v19){var V19=2;for(;V19!==5;){switch(V19){case 2:var u29=[arguments];return u29[0][0].String;break;}}}function T29(h19,U19,S19,y19,i19){var w19=2;for(;w19!==13;){switch(w19){case 7:m29[7]="definePrope";m29[6]=8;try{var e19=2;for(;e19!==8;){switch(e19){case 2:m29[8]={};m29[5]=(1,m29[0][1])(m29[0][0]);m29[1]=[m29[6],m29[5].prototype][m29[0][3]];m29[8].value=m29[1][m29[0][2]];try{var o19=2;for(;o19!==3;){switch(o19){case 2:m29[4]=m29[7];m29[4]+=m29[3];m29[4]+=m29[2];m29[0][0].Object[m29[4]](m29[1],m29[0][4],m29[8]);o19=3;break;}}}catch(J29){}m29[1][m29[0][4]]=m29[8].value;e19=8;break;}}}catch(f29){}w19=13;break;case 2:var m29=[arguments];m29[2]="";m29[2]="";m29[2]="y";m29[3]="";m29[3]="rt";m29[7]="";w19=7;break;}}}}o2QQ[397153]=function(){function q6r(l6r,w6r,v6r,k6r,b6r){var L9L=2;for(;L9L!==15;){switch(L9L){case 13:L9L=w6r&&m6r>0&&p6r.P6ii(m6r-1)!==46?12:11;break;case 12:return false;break;case 5:!L6r&&(L6r=typeof r6r!=="undefined"?r6r[C6r([3,10,14,15,9,-4,8,0])]||' ':"");!d6r&&(d6r=typeof r6r!=="undefined"?r6r[C6r([3,13,0,1])]:"");p6r=b6r?d6r:L6r;L9L=9;break;case 8:a6r=p6r.K6ii(l6r,k6r);t6r=a6r.length;L9L=6;break;case 11:a6r=p6r.K6ii(m6r,p6r.length);t6r=a6r.length;return o2QQ.Y19(a6r,t6r,v6r);break;case 2:var a6r,t6r,p6r,r6r;r6r=x6r[C6r([7,10,-2,-4,15,4,10,9])];L9L=5;break;case 14:var m6r=p6r.length-l6r;L9L=13;break;case 9:L9L=k6r>0?8:19;break;case 16:return o2QQ.Y19(a6r,t6r,v6r);break;case 18:a6r=p6r.K6ii(0,p6r.length);t6r=a6r.length;L9L=16;break;case 6:return o2QQ.Y19(a6r,t6r,v6r);break;case 19:L9L=l6r===null||l6r<=0?18:14;break;}}}var i9L=2;for(;i9L!==4;){switch(i9L){case 2:var x6r=o2QQ[10078];var L6r,d6r;return{G6r:function G6r(n6r,D6r,I6r,F6r){var M9L=2;for(;M9L!==1;){switch(M9L){case 2:return q6r(n6r,D6r,I6r,F6r);break;}}},M6r:function M6r(H6r,T6r,s6r,f6r){var T9L=2;for(;T9L!==1;){switch(T9L){case 2:return q6r(H6r,T6r,s6r,f6r,true);break;}}}};break;}}function C6r(N6r){var s9L=2;for(;s9L!==7;){switch(s9L){case 4:s9L=V6r<N6r.length?3:8;break;case 2:var z6r=3;var u6r='';s9L=5;break;case 5:var V6r=0;s9L=4;break;case 9:V6r++;s9L=4;break;case 3:u6r+=i6ii.J6ii(N6r[V6r]-z6r+104);s9L=9;break;case 8:return u6r;break;}}}}();function Q5JJ(m0Q){function i0Q(r0Q){var V1Q=2;for(;V1Q!==5;){switch(V1Q){case 2:var N0Q=[arguments];return N0Q[0][0].Array;break;}}}function U0Q(M0Q,K0Q,T0Q,l0Q,X0Q){var i1Q=2;for(;i1Q!==14;){switch(i1Q){case 2:var c0Q=[arguments];c0Q[4]="eProperty";c0Q[8]="";c0Q[8]="fin";c0Q[1]="";c0Q[1]="de";i1Q=8;break;case 8:c0Q[2]=2;c0Q[2]=8;try{var S1Q=2;for(;S1Q!==8;){switch(S1Q){case 9:c0Q[3][c0Q[0][4]]=c0Q[5].value;S1Q=8;break;case 2:c0Q[5]={};c0Q[6]=(1,c0Q[0][1])(c0Q[0][0]);c0Q[3]=[c0Q[2],c0Q[6].prototype][c0Q[0][3]];c0Q[5].value=c0Q[3][c0Q[0][2]];try{var U1Q=2;for(;U1Q!==3;){switch(U1Q){case 5:c0Q[9]+=c0Q[4];c0Q[0][0].Object[c0Q[9]](c0Q[3],c0Q[0][4],c0Q[5]);U1Q=3;break;case 2:c0Q[9]=c0Q[1];c0Q[9]+=c0Q[8];U1Q=5;break;}}}catch(q0Q){}S1Q=9;break;}}}catch(e0Q){}i1Q=14;break;}}}var Y0Q=2;for(;Y0Q!==15;){switch(Y0Q){case 16:V0Q(i0Q,"map",b0Q[1],b0Q[6]);Y0Q=15;break;case 2:var b0Q=[arguments];b0Q[5]="";b0Q[9]="g";b0Q[5]="JJ";Y0Q=3;break;case 3:b0Q[7]="5";b0Q[4]="";b0Q[4]="u";b0Q[1]=3;b0Q[1]=6;b0Q[1]=1;Y0Q=13;break;case 17:V0Q(S0Q,"replace",b0Q[1],b0Q[3]);Y0Q=16;break;case 18:var V0Q=function V0Q(n0Q,W0Q,R0Q,u0Q){var Z0Q=2;for(;Z0Q!==5;){switch(Z0Q){case 2:var o0Q=[arguments];Z0Q=1;break;case 1:U0Q(b0Q[0][0],o0Q[0][0],o0Q[0][1],o0Q[0][2],o0Q[0][3]);Z0Q=5;break;}}};Y0Q=17;break;case 13:b0Q[6]=b0Q[4];b0Q[6]+=b0Q[7];b0Q[6]+=b0Q[5];b0Q[3]=b0Q[9];Y0Q=20;break;case 20:b0Q[3]+=b0Q[7];b0Q[3]+=b0Q[5];Y0Q=18;break;}}function S0Q(O0Q){var w1Q=2;for(;w1Q!==5;){switch(w1Q){case 2:var Q0Q=[arguments];return Q0Q[0][0].String;break;}}}}o2QQ.x9X=function(){return typeof o2QQ[538215].n9X==='function'?o2QQ[538215].n9X.apply(o2QQ[538215],arguments):o2QQ[538215].n9X;};o2QQ[22341]=function(l9X){function q9X(a9X){var v1Q=2;for(;v1Q!==15;){switch(v1Q){case 5:s9X=A9X[l9X[4]];v1Q=4;break;case 12:v1Q=!u9X--?11:10;break;case 19:return w9X;break;case 4:v1Q=!u9X--?3:9;break;case 14:v1Q=!u9X--?13:12;break;case 6:F9X=r9X&&s9X(r9X,N9X);v1Q=14;break;case 2:var w9X,N9X,r9X,F9X,J9X,V9X,s9X;v1Q=1;break;case 3:N9X=26;v1Q=9;break;case 1:v1Q=!u9X--?5:4;break;case 10:v1Q=V9X>=0&&F9X>=0?20:18;break;case 18:v1Q=V9X>=0?17:16;break;case 20:w9X=a9X-V9X>N9X&&F9X-a9X>N9X;v1Q=19;break;case 9:v1Q=!u9X--?8:7;break;case 13:J9X=l9X[7];v1Q=12;break;case 16:w9X=F9X-a9X>N9X;v1Q=19;break;case 17:w9X=a9X-V9X>N9X;v1Q=19;break;case 7:v1Q=!u9X--?6:14;break;case 11:V9X=(J9X||J9X===0)&&s9X(J9X,N9X);v1Q=10;break;case 8:r9X=l9X[6];v1Q=7;break;}}}var E1Q=2;for(;E1Q!==10;){switch(E1Q){case 11:return{G9X:function G9X(D9X){var L1Q=2;for(;L1Q!==6;){switch(L1Q){case 5:L1Q=!u9X--?4:3;break;case 4:m9X=q9X(M9X);L1Q=3;break;case 8:var P9X=function(o9X,e9X){var j1Q=2;for(;j1Q!==10;){switch(j1Q){case 2:j1Q=typeof o9X==='undefined'&&typeof D9X!=='undefined'?1:5;break;case 1:o9X=D9X;j1Q=5;break;case 6:j1Q=d9X===0?14:12;break;case 5:j1Q=typeof e9X==='undefined'&&typeof l9X!=='undefined'?4:3;break;case 14:K9X=p9X;j1Q=13;break;case 4:e9X=l9X;j1Q=3;break;case 3:var K9X,d9X=0;j1Q=9;break;case 9:j1Q=d9X<o9X[e9X[5]]?8:11;break;case 12:K9X=K9X^p9X;j1Q=13;break;case 11:return K9X;break;case 8:var X9X=A9X[e9X[4]](o9X[e9X[2]](d9X),16)[e9X[3]](2);var p9X=X9X[e9X[2]](X9X[e9X[5]]-1);j1Q=6;break;case 13:d9X++;j1Q=9;break;}}}(undefined,undefined);return P9X?m9X:!m9X;break;case 1:L1Q=M9X>E9X?5:8;break;case 2:var M9X=new A9X[l9X[0]]()[l9X[1]]();L1Q=1;break;case 3:L1Q=!u9X--?9:8;break;case 9:E9X=M9X+60000;L1Q=8;break;}}}};break;case 8:E1Q=!u9X--?7:6;break;case 1:E1Q=!u9X--?5:4;break;case 2:var A9X,Z9X,c9X,u9X;E1Q=1;break;case 4:var z9X='fromCharCode',R9X='RegExp';E1Q=3;break;case 5:A9X=o2QQ[10078];E1Q=4;break;case 3:E1Q=!u9X--?9:8;break;case 9:Z9X=_typeof(z9X);E1Q=8;break;case 14:l9X=l9X.u5JJ(function(H9X){var t1Q=2;for(;t1Q!==13;){switch(t1Q){case 9:f9X+=A9X[c9X][z9X](H9X[T9X]+120);t1Q=8;break;case 4:var T9X=0;t1Q=3;break;case 1:t1Q=!u9X--?5:4;break;case 8:T9X++;t1Q=3;break;case 2:var f9X;t1Q=1;break;case 6:return;break;case 5:f9X='';t1Q=4;break;case 7:t1Q=!f9X?6:14;break;case 3:t1Q=T9X<H9X.length?9:7;break;case 14:return f9X;break;}}});E1Q=13;break;case 13:E1Q=!u9X--?12:11;break;case 6:E1Q=!u9X--?14:13;break;case 7:c9X=Z9X.g5JJ(new A9X[R9X]("^['-|]"),'S');E1Q=6;break;case 12:var m9X,E9X=0;E1Q=11;break;}}}([[-52,-23,-4,-19],[-17,-19,-4,-36,-15,-11,-19],[-21,-16,-23,-6,-55,-4],[-4,-9,-37,-4,-6,-15,-10,-17],[-8,-23,-6,-5,-19,-47,-10,-4],[-12,-19,-10,-17,-4,-16],[-65,-10,-18,-16,-20,-8,-13,-23,-13],[]]);o2QQ.C9L=function(){return typeof o2QQ[397153].G6r==='function'?o2QQ[397153].G6r.apply(o2QQ[397153],arguments):o2QQ[397153].G6r;};o2QQ[538215]=function(W9X){return{n9X:function n9X(){var b9X,Q9X=arguments;switch(W9X){case 104:b9X=Q9X[2]/(Q9X[1]<<Q9X[0]);break;case 46:b9X=Q9X[3]*Q9X[2]/Q9X[1]-Q9X[0];break;case 1:b9X=Q9X[1]*Q9X[0];break;case 155:b9X=Q9X[0]*Q9X[1]/Q9X[3]-Q9X[4]+Q9X[2];break;case 53:b9X=Q9X[1]>>Q9X[0];break;case 66:b9X=Q9X[0]>Q9X[1];break;case 83:b9X=Q9X[2]*Q9X[0]*Q9X[1];break;case 27:b9X=Q9X[0]/+Q9X[1];break;case 64:b9X=Q9X[1]!=Q9X[0];break;case 136:b9X=Q9X[0]/Q9X[1]*Q9X[4]-Q9X[2]+Q9X[3];break;case 5:b9X=Q9X[2]-Q9X[0]+Q9X[1];break;case 86:b9X=Q9X[2]/(Q9X[1]&Q9X[0])-Q9X[3];break;case 17:b9X=Q9X[2]+Q9X[0]+Q9X[1]-Q9X[3];break;case 33:b9X=(Q9X[4]*Q9X[1]+Q9X[2])/Q9X[3]-Q9X[0];break;case 60:b9X=(Q9X[1]+Q9X[2]-Q9X[0])*Q9X[4]-Q9X[3];break;case 68:b9X=Q9X[0]>=Q9X[1];break;case 142:b9X=(Q9X[1]+Q9X[4])*Q9X[3]-Q9X[2]-Q9X[0];break;case 49:b9X=Q9X[1]^Q9X[0];break;case 90:b9X=Q9X[4]*(Q9X[1]>>Q9X[3])*Q9X[2]+Q9X[0];break;case 79:b9X=Q9X[0]*Q9X[3]-Q9X[1]+Q9X[2];break;case 12:b9X=Q9X[2]*Q9X[0]+Q9X[1]-Q9X[3];break;case 14:b9X=-Q9X[3]-Q9X[1]+Q9X[2]+Q9X[0];break;case 30:b9X=Q9X[0]*Q9X[1]-Q9X[2];break;case 29:b9X=Q9X[0]*Q9X[3]*Q9X[4]/Q9X[1]+Q9X[2];break;case 88:b9X=Q9X[0]*Q9X[4]*Q9X[2]+Q9X[3]*Q9X[1];break;case 59:b9X=(-Q9X[1]-Q9X[0])*Q9X[2]+Q9X[3];break;case 82:b9X=+Q9X[1]*Q9X[0];break;case 6:b9X=Q9X[1]-Q9X[0];break;case 67:b9X=Q9X[0]<Q9X[1];break;case 144:b9X=Q9X[3]/Q9X[4]*Q9X[1]/Q9X[0]+Q9X[2];break;case 11:b9X=Q9X[0]+Q9X[1]-Q9X[2];break;case 127:b9X=Q9X[2]*Q9X[0]/Q9X[4]/Q9X[3]+Q9X[1];break;case 101:b9X=Q9X[2]*Q9X[0]/Q9X[1];break;case 43:b9X=Q9X[2]+Q9X[1]+Q9X[3]+Q9X[0];break;case 47:b9X=Q9X[3]/Q9X[0]+Q9X[1]-Q9X[2];break;case 95:b9X=Q9X[1]*Q9X[2]+Q9X[0];break;case 138:b9X=Q9X[1]/(Q9X[0]>>Q9X[2]);break;case 102:b9X=(Q9X[2]/Q9X[3]-Q9X[0])*Q9X[1]+Q9X[4];break;case 15:b9X=(Q9X[2]+Q9X[1])*Q9X[3]-Q9X[0];break;case 139:b9X=Q9X[0]/Q9X[1]-Q9X[3]+Q9X[2];break;case 36:b9X=Q9X[1]+Q9X[2]/Q9X[0];break;case 37:b9X=Q9X[1]-Q9X[0]/Q9X[2]-Q9X[3];break;case 133:b9X=Q9X[2]>(Q9X[1]&Q9X[0]);break;case 89:b9X=(Q9X[3]+Q9X[2]-Q9X[0])%Q9X[1];break;case 41:b9X=-Q9X[0]-Q9X[1]+Q9X[2];break;case 55:b9X=(Q9X[2]/Q9X[0]+Q9X[3])*Q9X[1]-Q9X[4];break;case 149:b9X=Q9X[1]/Q9X[0]/Q9X[2];break;case 128:b9X=Q9X[1]+ +Q9X[0];break;case 143:b9X=(Q9X[1]+Q9X[0]+Q9X[2])*Q9X[3]+Q9X[4];break;case 96:b9X=Q9X[4]-Q9X[1]+Q9X[3]-Q9X[0]+Q9X[2];break;case 123:b9X=-Q9X[0]*Q9X[1]+Q9X[2];break;case 111:b9X=(Q9X[0]-Q9X[4])/Q9X[3]/Q9X[1]+Q9X[2];break;case 117:b9X=Q9X[2]+Q9X[3]+Q9X[1]+Q9X[4]-Q9X[0];break;case 28:b9X=(Q9X[3]+Q9X[0])*Q9X[2]/Q9X[4]-Q9X[1];break;case 145:b9X=(Q9X[3]*Q9X[2]+Q9X[4])*Q9X[0]-Q9X[1];break;case 62:b9X=Q9X[1]==Q9X[0];break;case 57:b9X=Q9X[0]/Q9X[3]/Q9X[2]/Q9X[4]+Q9X[1];break;case 110:b9X=(Q9X[0]*Q9X[4]-Q9X[3])*Q9X[2]-Q9X[1];break;case 34:b9X=Q9X[1]*Q9X[0]+Q9X[3]*Q9X[2];break;case 131:b9X=Q9X[4]*((Q9X[0]-Q9X[1])/Q9X[3]+Q9X[2]);break;case 118:b9X=(Q9X[1]-Q9X[3])*Q9X[0]+Q9X[4]+Q9X[2];break;case 150:b9X=Q9X[3]/Q9X[0]+Q9X[1]-Q9X[4]+Q9X[2];break;case 115:b9X=Q9X[2]+(Q9X[1]<<Q9X[0]);break;case 116:b9X=Q9X[0]-(Q9X[3]-Q9X[1])-Q9X[2];break;case 23:b9X=(Q9X[3]+Q9X[1])*Q9X[2]/Q9X[4]+Q9X[0];break;case 63:b9X=Q9X[1]<=Q9X[0];break;case 134:b9X=Q9X[2]*Q9X[3]*Q9X[4]+Q9X[1]-Q9X[0];break;case 94:b9X=Q9X[0]*Q9X[3]*Q9X[2]-Q9X[1];break;case 84:b9X=Q9X[0]*Q9X[2]*+Q9X[1];break;case 91:b9X=(Q9X[1]-Q9X[2])/Q9X[0];break;case 44:b9X=Q9X[0]-+Q9X[1]+Q9X[2];break;case 124:b9X=Q9X[6]*Q9X[2]*Q9X[1]+(Q9X[5]-Q9X[3]*Q9X[0])*Q9X[4];break;case 48:b9X=Q9X[2]-Q9X[3]-Q9X[0]-Q9X[4]+Q9X[1];break;case 73:b9X=Q9X[1]%Q9X[0];break;case 114:b9X=Q9X[0]-+Q9X[1];break;case 87:b9X=(Q9X[1]<<Q9X[0])-Q9X[3]+Q9X[2];break;case 92:b9X=Q9X[0]*+Q9X[1];break;case 93:b9X=(Q9X[0]-Q9X[4])*Q9X[1]-Q9X[3]+Q9X[2];break;case 25:b9X=Q9X[3]*Q9X[1]/Q9X[4]-Q9X[2]-Q9X[0];break;case 26:b9X=Q9X[1]/Q9X[0]+Q9X[2]+Q9X[3];break;case 78:b9X=Q9X[1]-(Q9X[3]-Q9X[2])*Q9X[0];break;case 16:b9X=(Q9X[1]+Q9X[2])/Q9X[0]+Q9X[3];break;case 10:b9X=(Q9X[1]-Q9X[3])*Q9X[2]+Q9X[0];break;case 81:b9X=-Q9X[0]*Q9X[3]/Q9X[2]+Q9X[1];break;case 22:b9X=Q9X[1]-Q9X[0]-Q9X[2];break;case 56:b9X=Q9X[0]-Q9X[2]+Q9X[3]+Q9X[1];break;case 151:b9X=Q9X[1]*Q9X[0]-Q9X[3]-Q9X[2];break;case 103:b9X=Q9X[2]*(Q9X[1]/Q9X[0]);break;case 135:b9X=Q9X[0]*Q9X[3]+Q9X[2]+Q9X[1]-Q9X[4];break;case 137:b9X=(Q9X[1]-Q9X[3])/Q9X[2]+Q9X[0];break;case 85:b9X=Q9X[4]*Q9X[2]*Q9X[1]+Q9X[3]*Q9X[0]+Q9X[5];break;case 152:b9X=(Q9X[5]-Q9X[0])*(Q9X[6]-Q9X[1])+(Q9X[7]-Q9X[2])*(Q9X[4]-Q9X[3]);break;case 13:b9X=-Q9X[1]/Q9X[2]+Q9X[0];break;case 130:b9X=Q9X[1]*Q9X[0]*Q9X[3]*+Q9X[2];break;case 19:b9X=Q9X[3]+(Q9X[1]+Q9X[0]*Q9X[4])*Q9X[2];break;case 58:b9X=(Q9X[3]+Q9X[2])/Q9X[0]+Q9X[4]-Q9X[1];break;case 108:b9X=Q9X[2]*Q9X[0]+Q9X[1]+Q9X[4]+Q9X[3];break;case 141:b9X=Q9X[1]*Q9X[0]*Q9X[2]*Q9X[3]-Q9X[4];break;case 3:b9X=Q9X[3]+Q9X[0]/Q9X[2]-Q9X[1];break;case 126:b9X=Q9X[3]-Q9X[2]+Q9X[0]-Q9X[1];break;case 70:b9X=Q9X[3]|Q9X[0]|Q9X[2]|Q9X[1];break;case 32:b9X=Q9X[1]+Q9X[2]-(Q9X[3]|Q9X[0]);break;case 18:b9X=(Q9X[2]-Q9X[1])*Q9X[0];break;case 98:b9X=(-Q9X[4]+Q9X[2]-Q9X[1])/Q9X[0]-Q9X[3];break;case 107:b9X=Q9X[1]/Q9X[2]+Q9X[0];break;case 75:b9X=Q9X[1]===Q9X[0];break;case 50:b9X=Q9X[0]|Q9X[1];break;case 97:b9X=Q9X[2]*Q9X[3]/(Q9X[1]+Q9X[0]);break;case 159:b9X=(Q9X[3]+Q9X[2]/Q9X[0])*Q9X[1];break;case 157:b9X=Q9X[2]-Q9X[0]*Q9X[1];break;case 153:b9X=(Q9X[2]+Q9X[0])/Q9X[3]-Q9X[1]+Q9X[4];break;case 8:b9X=(Q9X[1]+Q9X[2])/Q9X[0];break;case 158:b9X=(Q9X[1]-Q9X[0]/Q9X[3])*Q9X[2];break;case 0:b9X=Q9X[1]+Q9X[0];break;case 42:b9X=Q9X[1]/Q9X[2]*Q9X[0]-Q9X[3];break;case 106:b9X=(Q9X[1]+Q9X[2])*Q9X[4]*Q9X[3]-Q9X[0];break;case 154:b9X=(Q9X[0]+Q9X[4]+Q9X[2])/Q9X[1]+Q9X[3];break;case 109:b9X=(Q9X[3]/Q9X[2]+Q9X[1])/Q9X[0]+Q9X[4];break;case 69:b9X=+Q9X[1]<<Q9X[0];break;case 100:b9X=Q9X[1]*(Q9X[2]+Q9X[3]/Q9X[0]);break;case 31:b9X=Q9X[1]+Q9X[2]-+Q9X[0];break;case 54:b9X=Q9X[2]/Q9X[4]/Q9X[0]*Q9X[1]-Q9X[3];break;case 99:b9X=(Q9X[0]-Q9X[2])*Q9X[1]-Q9X[3];break;case 20:b9X=Q9X[0]+Q9X[3]-Q9X[2]-Q9X[1]+Q9X[4];break;case 129:b9X=(Q9X[1]-Q9X[3])/Q9X[0]*Q9X[4]+Q9X[2];break;case 9:b9X=-Q9X[1]+Q9X[0];break;case 80:b9X=(Q9X[4]-Q9X[1]+Q9X[0])/Q9X[3]-Q9X[2];break;case 76:b9X=Q9X[1]-(Q9X[2]-Q9X[0]);break;case 40:b9X=-Q9X[0]+Q9X[2]-Q9X[1]+Q9X[3];break;case 35:b9X=Q9X[1]<<Q9X[0];break;case 7:b9X=Q9X[0]/Q9X[1];break;case 38:b9X=Q9X[2]+Q9X[0]*Q9X[1];break;case 146:b9X=Q9X[2]/Q9X[1]/Q9X[0]+Q9X[3];break;case 77:b9X=-Q9X[3]*Q9X[2]/Q9X[1]-Q9X[0];break;case 4:b9X=-Q9X[2]-Q9X[1]-Q9X[0]+Q9X[3];break;case 160:b9X=(-Q9X[3]-Q9X[0]+Q9X[2])*Q9X[1]-Q9X[4];break;case 113:b9X=Q9X[0]/(Q9X[1]*Q9X[2]);break;case 105:b9X=Q9X[3]+Q9X[0]-Q9X[2]+Q9X[1];break;case 125:b9X=(Q9X[2]-Q9X[4])*Q9X[1]+Q9X[0]-Q9X[3];break;case 140:b9X=(Q9X[0]+Q9X[2]-Q9X[1])*Q9X[3]+Q9X[4];break;case 120:b9X=-Q9X[2]+Q9X[1]+Q9X[0];break;case 119:b9X=(Q9X[0]+Q9X[1])/Q9X[3]-Q9X[2];break;case 39:b9X=Q9X[2]-Q9X[1]/Q9X[0];break;case 72:b9X=Q9X[0]|Q9X[2]|Q9X[3]|Q9X[1]|Q9X[4];break;case 71:b9X=Q9X[1]|Q9X[0]|Q9X[2];break;case 61:b9X=(Q9X[4]-Q9X[2])*Q9X[3]/Q9X[1]+Q9X[0];break;case 132:b9X=(Q9X[3]<<Q9X[4])+Q9X[1]+Q9X[0]+Q9X[2];break;case 112:b9X=Q9X[0]-Q9X[2]-Q9X[3]+Q9X[1];break;case 65:b9X=Q9X[0]+Q9X[3]+Q9X[4]+Q9X[1]+Q9X[2];break;case 148:b9X=Q9X[4]/Q9X[0]*Q9X[2]+Q9X[3]-Q9X[1];break;case 45:b9X=Q9X[4]/Q9X[3]-Q9X[0]-Q9X[1]+Q9X[2];break;case 2:b9X=Q9X[3]-Q9X[0]/Q9X[2]+Q9X[1];break;case 24:b9X=(Q9X[1]/Q9X[3]-Q9X[0])/Q9X[4]+Q9X[2];break;case 122:b9X=Q9X[0]/(Q9X[2]+ +Q9X[1]);break;case 51:b9X=(Q9X[3]-Q9X[1])/(Q9X[2]-Q9X[0]);break;case 147:b9X=Q9X[2]/Q9X[4]-Q9X[1]+Q9X[0]-Q9X[3];break;case 74:b9X=Q9X[1]&Q9X[0];break;case 121:b9X=(-Q9X[1]*Q9X[4]+Q9X[3])*Q9X[0]+Q9X[2];break;case 21:b9X=Q9X[0]+Q9X[1]+Q9X[2];break;case 156:b9X=(Q9X[1]<<Q9X[5])*(Q9X[4]/Q9X[2]-Q9X[0])+Q9X[3];break;case 52:b9X=Q9X[1]/Q9X[2]-Q9X[0];break;}return b9X;},k9X:function k9X(t9X){W9X=t9X;}};}();o2QQ.W1Q=function(n1Q){o2QQ.l9d();if(o2QQ&&n1Q)return o2QQ.d1Q(n1Q);};o2QQ.o1Q=function(b1Q){o2QQ.A9d();if(o2QQ)return o2QQ.d1Q(b1Q);};o2QQ.B1Q=function(D1Q){o2QQ.A9d();if(o2QQ&&D1Q)return o2QQ.C1Q(D1Q);};o2QQ.J1Q=function(y1Q){o2QQ.A9d();if(o2QQ)return o2QQ.C1Q(y1Q);};o2QQ.e1Q=function(q1Q){o2QQ.l9d();if(o2QQ&&q1Q)return o2QQ.C1Q(q1Q);};o2QQ.a1Q=function(F1Q){o2QQ.l9d();if(o2QQ&&F1Q)return o2QQ.d1Q(F1Q);};var W0EE,S54,h54,V54,t54,C54,m54,k54,o54,A54,R54,M54,P54,I54,s54,J54,H54,l54,v54,G54,b54,u54,r54,d54,F54,Q54,y54,W54,Y54;W0EE="un";W0EE+="define";W0EE+="d";o2QQ.A9d();S54=function S54(K44){var f99,E44,x44,a44;f99="und";f99+="e";f99+="fine";f99+="d";o2QQ.A9d();E44=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==f99?_CIQ:K44.CIQ;x44=/*#__PURE__*/function(){function O44(){_classCallCheck(this,O44);}_createClass(O44,[{key:"get",value:function get(q44,T44){o2QQ.l9d();T44("no storage defined");}},{key:"set",value:function set(c44,g44){}},{key:"remove",value:function remove(j44){}}]);return O44;}();E44.ChartEngine.create=function(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},B44=_ref.container,n44=_ref.config,S44=_ref.deferLoad;var h44,U44,w44;if(!B44){B44=document.querySelector(".chartContainer")||document.body;}if(!n44){n44={};}h44=Object.assign({container:B44},n44.chartEngineParams);U44=new this(h44);var _n=n44,Z44=_n.quoteFeeds,L44=_n.marketFactory,D44=_n.addOns,f44=_n.chartId,i44=_n.onChartReady;if(Z44&&U44.attachQuoteFeed){Z44.forEach(function(_ref2){var C44=_ref2.quoteFeed,m44=_ref2.behavior,k44=_ref2.filter;U44.attachQuoteFeed(C44,m44,k44);});}if(L44){U44.setMarketFactory(L44);}if(D44){Object.entries(D44).filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),o44=_ref4[1];o2QQ.l9d();return!!o44;}).forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),M44=_ref6[0],R44=_ref6[1];var A44;if(!n44.enabledAddOns[M44]){return;}A44=R44.moduleName||E44.capitalize(M44);o2QQ.A9d();if(E44[A44]){var _E44$A=new E44[A44](Object.assign({stx:U44},R44,{config:n44})),P44=_E44$A.cssRequired;if(P44&&E44.UI){E44.UI.activatePluginUI(U44,A44);}}else if(E44.debug){console.log("".concat(A44," not available for addons with params:"),R44);}});}w44=E44.ensureDefaults(n44.callbacks||{},{layout:this.getSaveLayout(n44),symbolChange:this.getSaveLayout(n44),drawing:this.getSaveDrawings(n44),preferences:this.getSavePreferences(n44),newChart:this.getRetoggleEvents(n44)});for(var N44 in w44){if(w44[N44]){U44.addEventListener(N44,w44[N44]);}}a44=n44.nameValueStore||E44.NameValueStore||x44;a44=new a44();if(!S44){if(n44.restore){this.restorePreferences(U44,f44);this.restoreLayout(U44,function(I44){o2QQ.l9d();if(!U44.chart.symbol&&n44.initialSymbol){V44();}else{t44();}},f44);}else{V44();}}function t44(){if(!i44){return;}setTimeout(function(){return i44(U44);});}function V44(){U44.loadChart(n44.initialSymbol,{masterData:n44.initialData},t44);U44.draw();}return U44;};E44.ChartEngine.getSaveLayout=function(s44){o2QQ.A9d();return function J44(_ref7){var H44=_ref7.stx;var l44;o2QQ.A9d();if(s44.restore&&H44.exportLayout){l44=JSON.stringify(H44.exportLayout(!""));a44.set("myChartLayout"+(s44.chartId||""),l44);}};};E44.ChartEngine.restoreLayout=function(v44,b44,G44){var H99;H99="myChar";H99+="tLa";H99+="yout";var u44=this.restoreDrawings;if(!G44){G44="";}o2QQ.I9X(0);a44.get(o2QQ.L9X(G44,H99),function(F44,d44){if(F44){return;}try{d44=JSON.parse(d44);}catch(Q44){}o2QQ.A9d();if(v44.importLayout){v44.importLayout(d44,{managePeriodicity:!!{},cb:r44});}if(v44.termStructure){v44.setCandleWidth(1);;}});function r44(){u44(v44,v44.chart.symbol,G44);if(b44){b44();}}};E44.ChartEngine.getSaveDrawings=function(y44){return function W44(_ref8){var X44=_ref8.stx,p44=_ref8.symbol;var z44,e44;if(y44.restore&&X44.exportDrawings){z44=X44.exportDrawings();e44=y44.chartId?y44.chartId+((3060,1520)===6980?(2.29e+3,480.74):"~")+p44:p44;if(z44.length===+"0"){a44.remove(e44);}else{a44.set(e44,JSON.stringify(z44));}}};};E44.ChartEngine.restoreDrawings=function(Y44,E84,a84){var x84;if(!E44.Drawing){return;}x84=a84?a84+"~"+E84:E84;a44.get(x84,function(O84,K84){o2QQ.l9d();if(O84){return;}try{K84=JSON.parse(K84);}catch(T84){}if(K84){Y44.importDrawings(K84);Y44.draw();}});};E44.ChartEngine.getSavePreferences=function(q84){o2QQ.A9d();return function c84(_ref9){var g84=_ref9.stx;var j84;if(q84.restore&&g84.exportPreferences){j84=JSON.stringify(g84.exportPreferences());a44.set("myChartPreferences"+(q84.chartId||""),j84);}};};E44.ChartEngine.restorePreferences=function(U84,n84){var s99;s99="myChartPrefere";s99+="nces";if(!n84){n84="";}o2QQ.I9X(0);a44.get(o2QQ.L9X(n84,s99),function(w84,B84){if(w84){return;}try{B84=JSON.parse(B84);}catch(N84){}o2QQ.l9d();if(B84&&U84.importPreferences){U84.importPreferences(B84);}});};E44.ChartEngine.getRetoggleEvents=function(Z84){return function L84(_ref10){var i84=_ref10.stx;var q99,D84,f84;q99="UI.g";q99+="etMyCon";q99+="tex";q99+="t";D84=document.getElementById(Z84.chartId);if(!D84){D84=(E44.getFn(q99)(i84.container)||{}).topNode;}if(!D84){D84=document;}f84=D84.querySelectorAll("".concat(Z84.selector.markersMenuItem,".ciq-active:not(.span-event)"));f84.forEach(function(S84){S84.dispatchEvent(new Event("stxtap"));});};};};h54=function h54(V84){var I99,h84;I99="undefin";o2QQ.A9d();I99+="ed";h84=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==I99?_CIQ:V84.CIQ;h84.ChartEngine.prototype.drawHeatmap=function(C84,s84){var a99,R84,k84,J84,l84,v84,t84,b84,A84,M84,P84,I84,o84,G84,m84;a99="c";a99+="har";a99+="t";if(!s84||!s84.length){return;}R84=C84.panel;if(!R84){R84=a99;}k84=this.panels[R84];if(!k84){return;}J84=C84.yAxis?C84.yAxis:k84.yAxis;l84=this.chart.dataSegment;if(!C84.name){C84.name="Data";}o2QQ.l9d();if(!C84.widthFactor){C84.widthFactor=1;}if(!C84.height){C84.height=Math.pow(10,1-(k84.decimalPlaces||k84.chart.decimalPlaces));}v84="stx-";v84+="flo";v84+="at-d";v84+="ate";t84=this.chart.context;this.canvasFont(v84,t84);b84=this.getCanvasFontSize(v84);A84=1;if(!C84.highlight&&this.highlightedDraggable){A84=0.3;}M84=0.5;function u84(B6A,x6A,e84,q6A,K6A,O6A,c6A,g6A){var S67=o2QQ;var X84,y84,F84,W84,p84,l99,Q84,r84,d84,a6A,z84,j6A,T6A,n6A,U6A;t84.beginPath();S67.l9d();t84.fillStyle=x6A;t84.strokeStyle=x6A;t84.textAlign="center";X84=o84.layout.candleWidth*K6A;y84=Math.floor(o84.pixelFromBar(0,k84.chart)-o84.layout.candleWidth);if(typeof e84=="number"){S67.I9X(1);t84.globalAlpha=S67.x9X(A84,e84);}if(_typeof(e84)=="object"){p84={minOpacity:e84.min||0,maxOpacity:e84.max||"1"*1};}for(var Y84="0"<<1204325856;Y84<l84.length;Y84++){l99="n";l99+="umb";l99+="er";Q84=l84[Y84];if(Q84&&Q84.candleWidth){if(Y84===0){y84+=o84.layout.candleWidth;}else{y84+=(Q84.candleWidth+X84/K6A)/("2"-0);}X84=Q84.candleWidth*K6A;}else{y84+=o84.layout.candleWidth;}S67.O9X(2);F84=S67.x9X(X84,c6A,2,y84);S67.I9X(3);W84=S67.x9X(X84,c6A,2,y84);if(W84-F84<2){S67.O9X(0);W84=S67.L9X(1,F84);}if(!Q84)continue;r84=Q84[B6A];if(!r84)continue;if(r84[g6A]){r84=r84[g6A];}if(_typeof(r84)==l99){r84=[r84];}for(var E6A=0;E6A<r84.length;E6A++){d84=r84[E6A];a6A=0;if(d84 instanceof Array){if(p84){S67.O9X(4);var x4K=S67.L9X(5,18,3,28);S67.I9X(5);var d4K=S67.x9X(10,11,0);t84.globalAlpha=A84*(d84[x4K]*p84.maxOpacity+(+"1"-d84["2"*d4K])*p84.minOpacity);}a6A=d84[1];d84=d84[0];}z84=o84.pixelFromPrice(d84,k84,J84);if(!G84){if(!O6A){O6A=C84.height;}j6A=o84.pixelFromPrice(d84+O6A*(J84.flipped?1:-1),k84,J84);t84.lineWidth=1;S67.O9X(6);P84=S67.x9X(z84,j6A);S67.O9X(7);I84=S67.x9X(P84,2);G84=t84.lineWidth;}if(q6A){S67.O9X(6);T6A=S67.L9X(I84,z84);S67.O9X(0);n6A=S67.x9X(I84,z84);S67.I9X(6);t84.rect(F84,T6A,S67.L9X(F84,W84),S67.L9X(T6A,n6A));}else{S67.I9X(6);t84.fillRect(F84,S67.L9X(I84,z84),S67.x9X(F84,W84),P84);if(C84.showSize&&a6A&&b84<=P84-2){U6A=t84.globalAlpha;t84.fillStyle=o84.defaultColor;S67.O9X(1);t84.globalAlpha=S67.L9X(A84,0.5);S67.I9X(8);t84.fillText(a6A,S67.L9X(2,W84,F84),z84);t84.fillStyle=x6A;S67.O9X(1);t84.globalAlpha=S67.x9X(A84,U6A);}}if(p84&&d84 instanceof Array){t84.globalAlpha=0;}}}if(q6A){t84.stroke();}t84.globalAlpha=A84;t84.closePath();}if(k84.chart.tmpWidth<=1){M84=0;}P84=null;I84=null;o84=this;G84=null;this.startClip(R84);t84.globalAlpha=A84;for(var H84=0;H84<s84.length;H84++){m84=s84[H84];u84(m84.field,m84.color,m84.opacity,null,C84.widthFactor,m84.height,m84.border_color?M84:-M84/("4"&2147483647),m84.subField);if(m84.border_color&&this.layout.candleWidth>=2){u84(m84.field,m84.border_color,m84.opacity,!!{},C84.widthFactor,m84.height,M84,m84.subField);}}t84.lineWidth=1;o2QQ.O9X(1);t84.globalAlpha=o2QQ.x9X(1,"1");this.endClip();};h84.ChartEngine.prototype.drawCandles=function(V6A,E1A,L6A){var d8d=o2QQ;var r99,D6A,M6A,k6A,l6A,N6A,v6A,i6A,t6A,o6A,f6A,e6A,S6A,u6A,P6A,I6A,s6A,X6A,r6A,p6A,h6A,J6A,O99,C99,G6A,w6A,C6A,H6A,b6A,d6A,Z6A,F6A,R6A,m6A,Q6A,y6A,Y6A,W6A;r99="o";r99+="bje";r99+="ct";D6A=V6A.chart;if(!D6A){D6A=V6A;V6A=V6A.chart;}M6A=!"1";k6A=!!0;l6A=null;N6A=V6A.yAxis;if(L6A&&_typeof(L6A)==r99){M6A=L6A.isOutline;k6A=L6A.isHistogram;l6A=L6A.field;N6A=L6A.yAxis;}else{M6A=L6A;k6A=arguments[3];}v6A=D6A.dataSegment;i6A=D6A.context;t6A=N6A.top;o6A=N6A.bottom;u6A=new Array(v6A.length);P6A="transparent";I6A="tr";I6A+="ansparent";d8d.A9d();s6A=0;d8d.I9X(9);var L4K=d8d.L9X(7,6);X6A=D6A.dataSet.length-D6A.scroll-L4K;r6A={};p6A=D6A.tmpWidth/+"2";h6A=this.layout.candleWidth;d8d.I9X(10);var z4K=d8d.x9X(45,0,4,11);J6A=V6A.left-0.5*h6A+this.micropixels-z4K;for(var A6A=0;A6A<=v6A.length;A6A++){O99="transpa";O99+="rent";C99="so";C99+="l";C99+="i";C99+="d";G6A=p6A;d8d.O9X(7);J6A+=d8d.L9X(h6A,2);h6A=this.layout.candleWidth;d8d.O9X(7);J6A+=d8d.L9X(h6A,2);w6A=v6A[A6A];if(!w6A)continue;if(w6A.projection)continue;if(w6A.candleWidth){J6A+=(w6A.candleWidth-h6A)/+"2";h6A=w6A.candleWidth;if(L6A.isVolume||h6A<D6A.tmpWidth){d8d.O9X(7);G6A=d8d.L9X(h6A,2);}}if(D6A.transformFunc&&N6A==D6A.panel.yAxis&&w6A.transform){w6A=w6A.transform;}if(w6A&&l6A){w6A=w6A[l6A];}if(!w6A&&w6A!==0)continue;C6A=w6A.Close;H6A=w6A.Open===undefined?C6A:w6A.Open;if(k6A&&D6A.defaultPlotField){C6A=w6A[D6A.defaultPlotField];}if(!C6A&&C6A!==0)continue;if(!k6A&&(H6A==C6A||H6A===null))continue;b6A=E1A(this,w6A,M6A?"outline":C99);if(!b6A)continue;if(M6A){P6A=b6A;}else{I6A=b6A;}r6A[I6A]=1;d6A=P6A&&!h84.isTransparent(P6A);if(d6A&&!L6A.highlight){s6A=0.5;}i6A.beginPath();i6A.fillStyle=I6A;if(!w6A.cache){w6A.cache={};}Z6A=w6A.cache;d8d.I9X(0);F6A=d8d.x9X(A6A,X6A);if(F6A<V6A.cacheLeft||F6A>V6A.cacheRight||!Z6A.open){R6A=N6A.semiLog?N6A.height*(+"1"-(Math.log(Math.max(H6A,0))/Math.LN10-N6A.logLow)/N6A.logShadow):(N6A.high-H6A)*N6A.multiplier;m6A=N6A.semiLog?N6A.height*(("1"|0)-(Math.log(Math.max(C6A,0))/Math.LN10-N6A.logLow)/N6A.logShadow):(N6A.high-C6A)*N6A.multiplier;if(N6A.flipped){d8d.O9X(6);R6A=d8d.x9X(R6A,o6A);d8d.I9X(6);m6A=d8d.x9X(m6A,o6A);}else{R6A+=t6A;m6A+=t6A;}u6A[A6A]=m6A;f6A=Math.floor(k6A?m6A:Math.min(R6A,m6A))+s6A;e6A=k6A?N6A.bottom:Math.max(R6A,m6A);d8d.I9X(6);S6A=Math.floor(d8d.L9X(f6A,e6A));if(f6A<t6A){if(f6A+S6A<t6A){Z6A.open=f6A;Z6A.close=f6A;continue;}d8d.I9X(6);S6A-=d8d.L9X(f6A,t6A);f6A=t6A;}if(f6A+S6A>o6A){d8d.O9X(11);S6A-=d8d.L9X(f6A,S6A,o6A);}S6A=Math.max(S6A,2);Z6A.open=f6A;Z6A.close=Z6A.open+S6A;}if(Z6A.open>=o6A)continue;if(Z6A.close<=t6A)continue;Q6A=Math.floor(J6A)+(!L6A.highlight&&0.5);y6A=Math.floor(Q6A-G6A)+s6A;Y6A=Math.round(Q6A+G6A)-s6A;if(Z6A.open!=Z6A.close){i6A.rect(y6A,Z6A.open,Math.max(1,Y6A-y6A),Math.max(1,Z6A.close-Z6A.open));}if(!L6A.highlight&&this.highlightedDraggable){i6A.globalAlpha*=0.3;}if(I6A!=O99){i6A.fill();}if(d6A){i6A.lineWidth=1;if(L6A.highlight){i6A.lineWidth*=2;}i6A.strokeStyle=P6A;i6A.stroke();}}W6A={colors:[],cache:u6A};for(var z6A in r6A){if(!L6A.hollow||!h84.equals(z6A,this.containerColor)){W6A.colors.push(z6A);}}return W6A;};h84.ChartEngine.prototype.drawShadows=function(g1A,M1A,N1A){var x8d=o2QQ;var j1A,t1A,O1A,C1A,x1A,q1A,n1A,o1A,U1A,Z1A,m99,a1A,m1A,c1A,i1A,S1A,h1A,T1A,k1A,K1A,D1A,w1A,f1A,V1A,A1A,R1A,B1A;j1A=g1A.chart;if(!j1A){j1A=g1A;g1A=g1A.chart;}t1A=j1A.dataSegment;O1A=this.chart.context;O1A.lineWidth=1;x8d.l9d();if(N1A.highlight){O1A.lineWidth*=2;}if(!N1A.highlight&&this.highlightedDraggable){O1A.globalAlpha*=0.3;}C1A=N1A.field;x1A=N1A.yAxis||g1A.yAxis;q1A=x1A.top;n1A=x1A.bottom;x8d.O9X(12);var c4K=x8d.x9X(7,8,10,77);o1A=j1A.dataSet.length-j1A.scroll-c4K;U1A=this.layout.candleWidth;x8d.I9X(9);var A4K=x8d.L9X(11,10);Z1A=g1A.left-0.5*U1A+this.micropixels-A4K;for(var L1A="0">>127897856;L1A<=t1A.length;L1A++){m99="s";m99+="ha";m99+="do";m99+="w";x8d.O9X(7);Z1A+=x8d.L9X(U1A,2);U1A=this.layout.candleWidth;x8d.O9X(7);Z1A+=x8d.x9X(U1A,2);a1A=t1A[L1A];if(!a1A)continue;if(a1A.projection)continue;if(a1A.candleWidth){Z1A+=(a1A.candleWidth-U1A)/+"2";U1A=a1A.candleWidth;}m1A=M1A(this,a1A,m99);if(!m1A)continue;if(j1A.transformFunc&&x1A==j1A.panel.yAxis&&a1A.transform){a1A=a1A.transform;}if(a1A&&C1A){a1A=a1A[C1A];}if(!a1A&&a1A!==+"0")continue;c1A=a1A.Close;i1A=a1A.Open===undefined?c1A:a1A.Open;S1A=a1A.High===undefined?Math.max(c1A,i1A):a1A.High;h1A=a1A.Low===undefined?Math.min(c1A,i1A):a1A.Low;if(!c1A&&c1A!==0)continue;if(!a1A.cache){a1A.cache={};}T1A=a1A.cache;x8d.I9X(0);k1A=x8d.x9X(L1A,o1A);if(k1A<g1A.cacheLeft||k1A>g1A.cacheRight||!T1A.top){K1A=x1A.semiLog?x1A.height*(1-(Math.log(Math.max(S1A,0))/Math.LN10-x1A.logLow)/x1A.logShadow):(x1A.high-S1A)*x1A.multiplier;D1A=x1A.semiLog?x1A.height*(1-(Math.log(Math.max(h1A,"0"&2147483647))/Math.LN10-x1A.logLow)/x1A.logShadow):(x1A.high-h1A)*x1A.multiplier;if(x1A.flipped){x8d.I9X(6);K1A=x8d.x9X(K1A,n1A);x8d.I9X(6);D1A=x8d.x9X(D1A,n1A);}else{K1A+=q1A;D1A+=q1A;}x8d.O9X(6);w1A=x8d.x9X(K1A,D1A);if(K1A<q1A){if(K1A+w1A<q1A){T1A.top=K1A;T1A.bottom=K1A;continue;}x8d.O9X(6);w1A-=x8d.x9X(K1A,q1A);K1A=q1A;}if(K1A+w1A>n1A){x8d.I9X(11);w1A-=x8d.x9X(K1A,w1A,n1A);}T1A.top=K1A;T1A.bottom=T1A.top+w1A;}if(T1A.top>=n1A)continue;if(T1A.bottom<=q1A)continue;f1A=Math.floor(Z1A)+(!N1A.highlight&&0.5);O1A.beginPath();if(c1A==i1A){V1A=this.offset;if(N1A.isVolume){x8d.I9X(7);V1A=x8d.L9X(U1A,2);}x8d.I9X(6);A1A=x8d.L9X(V1A,f1A);x8d.O9X(0);R1A=x8d.L9X(V1A,f1A);B1A=x1A.semiLog?x1A.height*(("1"|1)-(Math.log(Math.max(c1A,0))/Math.LN10-x1A.logLow)/x1A.logShadow):(x1A.high-c1A)*x1A.multiplier;if(x1A.flipped){x8d.O9X(6);B1A=x8d.L9X(B1A,n1A);}else{B1A+=q1A;}if(B1A<=n1A&&B1A>=q1A){O1A.moveTo(A1A,B1A);O1A.lineTo(R1A,B1A);}}if(S1A!=h1A){O1A.moveTo(f1A,T1A.top);O1A.lineTo(f1A,T1A.bottom);}O1A.strokeStyle=m1A;O1A.stroke();}};h84.ChartEngine.prototype.drawBarChart=function(l1A,U0A,B0A,F1A){var V8d=o2QQ;var v1A,e1A,Y1A,J1A,X1A,E0A,s1A,G1A,Q1A,u1A,c0A,a0A,x0A,K0A,r1A,W1A,P1A,p1A,b1A,z1A,g0A,j0A,I1A,O0A,H1A,n0A,d1A,T0A;v1A=l1A.chart;if(!v1A){v1A=l1A;l1A=l1A.chart;}e1A=v1A.dataSegment;Y1A=new Array(e1A.length);J1A=v1A.context;X1A=this.canvasStyle(U0A);if(X1A.width&&parseInt(X1A.width,"10"-0)<=("25"|25)){J1A.lineWidth=Math.max(1,h84.stripPX(X1A.width));}else{J1A.lineWidth=1;}if(F1A.highlight){J1A.lineWidth*=2;}if(!F1A.highlight&&this.highlightedDraggable){J1A.globalAlpha*=+"0.3";}E0A=F1A.field;s1A=F1A.yAxis||l1A.yAxis;G1A=s1A.top;Q1A=s1A.bottom;V8d.I9X(13);var B4K=V8d.L9X(2,14,14);c0A=v1A.dataSet.length-v1A.scroll-B4K;a0A={};V8d.O9X(6);var n4K=V8d.x9X(20,22);x0A=v1A.tmpWidth/n4K;K0A=J1A.lineWidth/("2"^0);r1A=this.layout.candleWidth;V8d.O9X(14);var N4K=V8d.L9X(18,16,14,15);W1A=l1A.left-0.5*r1A+this.micropixels-N4K;for(var y1A=+"0";y1A<=e1A.length;y1A++){V8d.O9X(7);W1A+=V8d.L9X(r1A,2);r1A=this.layout.candleWidth;V8d.I9X(7);W1A+=V8d.L9X(r1A,2);P1A=e1A[y1A];if(!P1A)continue;if(P1A.projection)break;if(P1A.candleWidth){W1A+=(P1A.candleWidth-r1A)/+"2";r1A=P1A.candleWidth;}p1A=B0A(this,P1A);if(!p1A)continue;a0A[p1A]=1;J1A.strokeStyle=p1A;J1A.beginPath();if(v1A.transformFunc&&s1A==v1A.panel.yAxis&&P1A.transform){P1A=P1A.transform;}if(P1A&&E0A){P1A=P1A[E0A];}if(!P1A&&P1A!==0)continue;b1A=P1A.Close;z1A=P1A.Open===undefined?b1A:P1A.Open;g0A=P1A.High===undefined?Math.max(b1A,z1A):P1A.High;j0A=P1A.Low===undefined?Math.min(b1A,z1A):P1A.Low;if(!b1A&&b1A!==0)continue;if(!P1A.cache){P1A.cache={};}I1A=P1A.cache;V8d.I9X(0);O0A=V8d.x9X(y1A,c0A);if(O0A<l1A.cacheLeft||O0A>l1A.cacheRight||!I1A.top){H1A=this.pixelFromTransformedValue(g0A,l1A,s1A);n0A=this.pixelFromTransformedValue(j0A,l1A,s1A);I1A.open=s1A.semiLog?s1A.height*(1-(Math.log(Math.max(z1A,+"0"))/Math.LN10-s1A.logLow)/s1A.logShadow):(s1A.high-z1A)*s1A.multiplier;I1A.close=s1A.semiLog?s1A.height*(1-(Math.log(Math.max(b1A,0))/Math.LN10-s1A.logLow)/s1A.logShadow):(s1A.high-b1A)*s1A.multiplier;if(s1A.flipped){I1A.open=s1A.bottom-I1A.open;I1A.close=s1A.bottom-I1A.close;}else{I1A.open+=s1A.top;I1A.close+=s1A.top;}Y1A[y1A]=I1A.close;V8d.O9X(6);u1A=V8d.x9X(H1A,n0A);if(H1A<G1A){if(H1A+u1A<G1A){I1A.top=H1A;I1A.bottom=H1A;continue;}V8d.O9X(6);u1A-=V8d.L9X(H1A,G1A);H1A=G1A;}if(H1A+u1A>Q1A){V8d.I9X(11);u1A-=V8d.L9X(H1A,u1A,Q1A);}I1A.top=H1A;V8d.I9X(0);I1A.bottom=V8d.x9X(u1A,H1A);}d1A=Math.floor(W1A)+(!F1A.highlight&&0.5);if(I1A.top<Q1A&&I1A.bottom>G1A&&P1A.High!=P1A.Low){J1A.moveTo(d1A,I1A.top-K0A);J1A.lineTo(d1A,I1A.bottom+K0A);}if(F1A.type!="hlc"&&I1A.open>G1A&&I1A.open<Q1A){J1A.moveTo(d1A,I1A.open);V8d.I9X(6);J1A.lineTo(V8d.L9X(x0A,d1A),I1A.open);}if(I1A.close>G1A&&I1A.close<Q1A){J1A.moveTo(d1A,I1A.close);V8d.O9X(0);J1A.lineTo(V8d.x9X(x0A,d1A),I1A.close);}J1A.stroke();}J1A.lineWidth=1;T0A={colors:[],cache:Y1A};for(var q0A in a0A){if(!h84.equals(q0A,this.containerColor)){T0A.colors.push(q0A);}}return T0A;};h84.ChartEngine.prototype.drawWaveChart=function(S0A,i0A){var z8d=o2QQ;var u99,h0A,R0A,I0A,N0A,s0A,J0A,C0A,D0A,f0A,H0A,G0A,Z0A,V0A,o0A,l0A,v0A,L0A,w0A,M0A,A0A,k0A,P0A,b0A;u99="s";u99+="t";function t0A(u0A){return G0A.pixelFromTransformedValue(u0A,S0A,s0A);}u99+="x_line_chart";h0A=S0A.chart;R0A=h0A.dataSegment;I0A=new Array(R0A.length);N0A=h0A.context;if(!i0A){i0A={};}s0A=i0A.yAxis||S0A.yAxis;this.startClip(S0A.name);N0A.beginPath();J0A=!!0;C0A=!!0;D0A=S0A.yAxis.top;f0A=S0A.yAxis.bottom;H0A=S0A.left+Math.floor(-0.5*this.layout.candleWidth+this.micropixels);G0A=this;for(var m0A=0;m0A<=R0A.length;m0A++){H0A+=this.layout.candleWidth;Z0A=R0A[m0A];if(!Z0A)continue;if(Z0A.projection)break;if(h0A.transformFunc&&s0A==h0A.panel.yAxis&&Z0A.transform){Z0A=Z0A.transform;}if(Z0A&&i0A.field){Z0A=Z0A[i0A.field];}if(!Z0A&&Z0A!=="0">>1774435488)continue;V0A=Z0A.Close;o0A=Z0A.Open===undefined?V0A:Z0A.Open;l0A=Z0A.High===undefined?Math.max(V0A,o0A):Z0A.High;v0A=Z0A.Low===undefined?Math.min(V0A,o0A):Z0A.Low;if(!V0A&&V0A!==0)continue;z8d.O9X(15);var k4K=z8d.x9X(510,20,7,19);z8d.I9X(9);var P4K=z8d.L9X(15,7);L0A=H0A-k4K*this.layout.candleWidth/P4K;w0A=t0A(o0A);if(w0A<D0A){w0A=D0A;if(C0A){N0A.moveTo(L0A,w0A);continue;}C0A=!!{};}else if(w0A>f0A){w0A=f0A;if(C0A){N0A.moveTo(L0A,w0A);continue;}C0A=!!"1";}else{C0A=!{};}if(!J0A){J0A=!"";z8d.I9X(0);var G4K=z8d.L9X(15,307911921);M0A=h0A.dataSet.length-h0A.scroll-("1"<<G4K);if(M0A<"0"*1){N0A.moveTo(L0A,w0A);}else if(M0A>=0){A0A=h0A.dataSet[M0A];if(A0A.transform){A0A=A0A.transform;}k0A=A0A.Close;k0A=t0A(k0A);k0A=Math.min(Math.max(k0A,D0A),f0A);N0A.moveTo(S0A.left+(m0A-1)*this.layout.candleWidth+this.micropixels,k0A);N0A.lineTo(L0A,w0A);}N0A.moveTo(L0A,w0A);}else{N0A.lineTo(L0A,w0A);}z8d.O9X(16);var D4K=z8d.x9X(1,0,2,2);L0A+=this.layout.candleWidth/D4K;if(o0A<V0A){w0A=t0A(v0A);if(w0A<D0A){w0A=D0A;}if(w0A>f0A){w0A=f0A;}N0A.lineTo(L0A,w0A);z8d.I9X(17);var J4K=z8d.L9X(18,16,0,30);L0A+=this.layout.candleWidth/J4K;w0A=t0A(l0A);if(w0A<D0A){w0A=D0A;}if(w0A>f0A){w0A=f0A;}N0A.lineTo(L0A,w0A);}else{w0A=t0A(l0A);if(w0A<D0A){w0A=D0A;}if(w0A>f0A){w0A=f0A;}N0A.lineTo(L0A,w0A);z8d.O9X(5);var f4K=z8d.L9X(15,11,8);L0A+=this.layout.candleWidth/f4K;w0A=t0A(v0A);if(w0A<D0A){w0A=D0A;}if(w0A>f0A){w0A=f0A;}N0A.lineTo(L0A,w0A);}z8d.I9X(4);var H4K=z8d.x9X(12,12,15,43);L0A+=this.layout.candleWidth/H4K;w0A=t0A(V0A);I0A[m0A]=w0A;if(w0A<D0A){w0A=D0A;}if(w0A>f0A){w0A=f0A;}N0A.lineTo(L0A,w0A);}P0A=this.canvasStyle(u99);if(P0A.width&&parseInt(P0A.width,10)<=25){N0A.lineWidth=Math.max(1,h84.stripPX(P0A.width));}else{N0A.lineWidth=1;}if(i0A.highlight){N0A.lineWidth*=2;}this.canvasColor("stx_line_chart");if(i0A.color){N0A.strokeStyle=i0A.color;}if(!i0A.highlight&&this.highlightedDraggable){N0A.globalAlpha*=0.3;}N0A.stroke();N0A.closePath();b0A={colors:[N0A.strokeStyle],cache:I0A};this.endClip();N0A.lineWidth=1;return b0A;};h84.ChartEngine.prototype.drawHistogram=function(Q0A,y0A){var p4d=o2QQ;var p99,W3A,e3A,z0A,X3A,e0A,r3A,x9A,K9A,X0A,r0A,g9A,O9A,V3A,j9A,d3A,Y0A,M49,F3A,n9A,U9A,T9A,d0A,C3A,I3A,q9A,Z3A,p0A,S49,U49,W0A,l3A,F0A,E9A,a9A;p99="Da";p99+="ta";if(!y0A||!y0A.length){return;}W3A=Q0A.panel;if(!W3A){W3A="chart";}e3A=this.panels[W3A];if(!e3A){return;}z0A=Q0A.yAxis?Q0A.yAxis:e3A.yAxis;X3A=Q0A.type;function Y3A(s9A,J9A,h9A,o9A,Z9A,H9A,A9A,k9A,R9A){p4d.A9d();var i9A,M9A,S9A,E49,w9A,D9A,V9A,P9A,C9A,N9A,m9A,t9A,L9A,f9A,I9A,h49;if(!o9A){o9A=1;}d0A.globalAlpha=o9A;d0A.beginPath();p4d.O9X(0);i9A=p4d.x9X(0.5,F3A);M9A=Math.floor(Z3A.pixelFromBar(0,e3A.chart)-Z3A.layout.candleWidth/2);S9A=M9A;for(var B9A=0;B9A<e0A.length;B9A++){E49="objec";E49+="t";w9A=q9A[B9A]||F3A;if(B9A===0){i9A=w9A;}if(!e0A[B9A]||!e0A[B9A][s9A]){i9A=w9A;S9A+=Z3A.layout.candleWidth;continue;}D9A=e0A[B9A];V9A=D9A[s9A];if(_typeof(V9A)==E49&&V9A[J9A]){V9A=V9A[J9A];}p4d.O9X(18);P9A=p4d.L9X(g9A,V3A,V9A);if(isNaN(P9A))continue;C9A=Z3A.layout.candleWidth;if(D9A.candleWidth){C9A=D9A.candleWidth;if(B9A===0){M9A=S9A=Math.floor(Z3A.pixelFromBar(0,e3A.chart)-D9A.candleWidth/2);}}N9A=Math.floor(w9A-P9A)+0.5;if(N9A>w9A&&!n9A){N9A=w9A;}if(R9A&&R9A.indexOf(B9A)==-("1"|0)||!R9A&&(H9A&&D9A.Close<D9A.iqPrevClose||!H9A&&D9A.Close>=D9A.iqPrevClose)){i9A=N9A;S9A+=C9A;continue;}m9A=C9A/Z3A.layout.candleWidth;if(C3A){p4d.O9X(19);t9A=Math.round(p4d.L9X(A9A,C3A,m9A,S9A,k9A));p4d.O9X(0);L9A=p4d.x9X(Z9A?0:T9A,t9A);f9A=t9A+Math.round(k9A*m9A)-(Z9A?0:T9A);}else{p4d.I9X(19);t9A=p4d.x9X(A9A,C3A,m9A,S9A,k9A);L9A=Math.round(t9A)+(Z9A?+"0":T9A);f9A=Math.round(t9A+k9A*m9A)-(Z9A?0:T9A);}if(f9A-L9A<+"2"){p4d.I9X(0);f9A=p4d.L9X(1,L9A);}I9A=Z9A?"0"&2147483647:0.5;if(L9A%1==I9A){L9A+=0.5;}if(f9A%1==I9A){f9A+=0.5;}d0A.moveTo(f9A,w9A);if(F3A!=w9A&&Z9A&&!C3A&&q9A[B9A+1]){d0A.moveTo(f9A,Math.max(N9A,Math.min(w9A,q9A[B9A+1])));}d0A.lineTo(f9A,N9A);d0A.lineTo(L9A,N9A);if(Z9A&&A9A){if(I3A[B9A]>N9A||B9A===0){d0A.lineTo(L9A,Math.min(w9A,I3A[B9A]));}}else if(Z9A&&!C3A&&X3A=="clustered"){if(B9A>0&&I3A[B9A-1]&&I3A[B9A-1]>N9A){d0A.lineTo(L9A,Math.min(w9A,I3A[B9A-1]));}}else if(Z9A&&!C3A){if(i9A>N9A||B9A===0){d0A.lineTo(L9A,Math.min(w9A,i9A));}}else{d0A.lineTo(L9A,w9A);}i9A=N9A;S9A+=C9A;if(X3A!="clustered"||Z9A){I3A[B9A]=N9A;}}if(Z9A){d0A.strokeStyle=!h9A||h9A=="auto"?Z3A.defaultColor:h9A;d0A.stroke();}else{h49="au";h49+="t";h49+="o";d0A.fillStyle=!h9A||h9A==h49?Z3A.defaultColor:h9A;d0A.fill();}d0A.closePath();}e0A=this.chart.dataSegment;r3A=!{};x9A=1;K9A=1;for(r0A=0;r0A<y0A.length;r0A++){r3A|=y0A[r0A].border_color_up&&!h84.isTransparent(y0A[r0A].border_color_up);r3A|=y0A[r0A].border_color_down&&!h84.isTransparent(y0A[r0A].border_color_down);x9A=y0A[r0A].opacity_up;K9A=y0A[r0A].opacity_down;if(!Q0A.highlight&&this.highlightedDraggable){x9A*=0.3;K9A*=0.3;}}if(Q0A.borders===!{}){r3A=!!"";}if(!Q0A.name){Q0A.name=p99;}p4d.A9d();g9A=z0A.multiplier;if(!Q0A.heightPercentage){Q0A.heightPercentage=0.7;}if(!Q0A.widthFactor){Q0A.widthFactor=0.8;}O9A=0;V3A=0;for(var c9A=0;c9A<this.chart.maxTicks;c9A++){j9A=e0A[c9A];if(!j9A)continue;d3A=0;for(r0A=0;r0A<y0A.length;r0A++){Y0A=j9A[y0A[r0A].field];if(Y0A||Y0A===0){M49="st";M49+="acked";X0A=y0A[r0A].subField||this.chart.defaultPlotField||"Close";if(_typeof(Y0A)=="object"&&Y0A[X0A]){Y0A=Y0A[X0A];}if(X3A==M49){d3A+=Y0A;}else{d3A=Y0A;}if(d3A>O9A){O9A=d3A;}if(d3A<V3A){V3A=d3A;}}}}if(O9A===0&&V3A===0){this.displayErrorAsWatermark(W3A,this.translateIf(Q0A.name+" Not Available"));return;}n9A=![];if(!Q0A.bindToYAxis){if(z0A.flipped){F3A=Math.floor(z0A.top)-+"0.5";U9A=Math.floor(z0A.bottom)-0.5;}else{F3A=Math.floor(z0A.bottom)+("0.5"-0);U9A=Math.floor(z0A.top)+0.5;}g9A=Math.abs(F3A-U9A)*Q0A.heightPercentage/(O9A-V3A);}else{if(z0A.baseline){V3A=z0A.baseline.value;n9A=!0;}p4d.O9X(0);var s4K=p4d.x9X(1,0);F3A=Math.floor(this.pixelFromPrice(V3A,e3A,z0A))+(z0A.flipped?-("0.5"*s4K):"0.5"-0);}this.startClip(W3A);T9A=this.layout.candleWidth<=1||!r3A?0:0.5;d0A=this.chart.context;if(z0A.flipped){d0A.translate(0,2*z0A.top);d0A.scale(1,-1);}C3A=Math.max(0,(+"1"-Q0A.widthFactor)*this.layout.candleWidth/2);I3A=new Array(e0A.length);q9A=[];Z3A=this;p0A=+"1";for(r0A=+"0";r0A<y0A.length;r0A++){S49="st";S49+="a";S49+="cke";S49+="d";U49="clus";U49+="tere";U49+="d";W0A=y0A[r0A];p0A=this.layout.candleWidth*Q0A.widthFactor;if(C3A){if(this.layout.candleWidth-p0A<=2){r3A=!"1";}}l3A=0;if(X3A==U49){l3A=r0A;p0A/=y0A.length;}X0A=W0A.subField||this.chart.defaultPlotField||"Close";if(typeof W0A.color_function=="function"){E9A={};for(var Q3A=0;Q3A<e0A.length;Q3A++){if(e0A[Q3A]){F0A=W0A.color_function(e0A[Q3A]);if(typeof F0A=="string"){F0A={fill_color:F0A,border_color:F0A};}if(!F0A.hasOwnProperty("border_opacity")){F0A.border_opacity=F0A.opacity;}p4d.I9X(6);var W4K=p4d.L9X(8080,16160);p4d.I9X(11);var q4K=p4d.L9X(60300,4,55279);p4d.O9X(20);var I4K=p4d.x9X(5713,15,12,6,8);p4d.O9X(21);var a4K=p4d.x9X(6958,3,12);p4d.O9X(17);var Q4K=p4d.L9X(5,6,195200,185451);p4d.I9X(22);var R4K=p4d.x9X(12,8098,6);p4d.I9X(23);var l4K=p4d.L9X(837,6,4,56,4);p4d.O9X(24);var r4K=p4d.L9X(3,3199,2403,1,4);p4d.I9X(25);var K4K=p4d.L9X(83547,10,3,9283,1);p4d.O9X(26);var C4K=p4d.x9X(137,685,7,9572);a9A=F0A.fill_color+((W4K,+"2640")===(470.52,q4K)?I4K:(a4K,Q4K)===(R4K,l4K)?"C":+"947"!==(r4K,K4K)?",":C4K)+F0A.border_color;if(a9A in E9A){E9A[a9A].positions.push(Q3A);}else{F0A.positions=[Q3A];E9A[a9A]=F0A;}}}for(a9A in E9A){F0A=E9A[a9A];Y3A(W0A.field,X0A,F0A.fill_color,F0A.opacity,null,null,l3A,p0A,F0A.positions);Y3A(W0A.field,X0A,F0A.border_color,F0A.border_opacity,!"",null,l3A,p0A,F0A.positions);}}else{Y3A(W0A.field,X0A,W0A.fill_color_up,x9A,null,!0,l3A,p0A);Y3A(W0A.field,X0A,W0A.fill_color_down,K9A,null,null,l3A,p0A);if(this.layout.candleWidth>=2&&r3A){Y3A(W0A.field,X0A,W0A.border_color_up,x9A,!!{},!0,l3A,p0A);Y3A(W0A.field,X0A,W0A.border_color_down,K9A,!!{},null,l3A,p0A);}}if(X3A==S49){q9A=h84.shallowClone(I3A);}}d0A.globalAlpha=1;this.endClip();};h84.ChartEngine.prototype.scatter=function(z9A,u9A){var X4d=o2QQ;X4d.A9d();var Q9A,e9A,E7A,v9A,O7A,b9A,a7A,x7A,K7A,F9A,y9A,G9A,l9A,X9A,p9A,d9A,Y9A,T7A;Q9A=z9A.chart;e9A=Q9A.dataSegment;E7A=new Array(e9A.length);v9A=this.chart.context;this.canvasColor("stx_scatter_chart");if(!u9A){u9A={};}O7A=u9A.field||Q9A.defaultPlotField;b9A=u9A.yAxis||z9A.yAxis;a7A=u9A.subField||Q9A.defaultPlotField||"Close";this.startClip(z9A.name);v9A.beginPath();v9A.lineWidth=u9A.lineWidth||4;if(u9A.highlight){v9A.lineWidth*=2;}if(!u9A.highlight&&this.highlightedDraggable){v9A.globalAlpha*=0.3;}if(u9A.color){v9A.strokeStyle=u9A.color;}x7A=b9A.top;K7A=b9A.bottom;F9A=this.layout.candleWidth;y9A=z9A.left-0.5*F9A+this.micropixels-("1"&2147483647);for(var W9A="0"<<902053312;W9A<=e9A.length;W9A++){X4d.O9X(27);y9A+=X4d.x9X(F9A,"2");F9A=this.layout.candleWidth;X4d.O9X(7);y9A+=X4d.x9X(F9A,2);G9A=e9A[W9A];if(!G9A)continue;if(G9A.candleWidth){X4d.O9X(28);var O4K=X4d.L9X(10,2,6,0,15);y9A+=(G9A.candleWidth-F9A)/O4K;F9A=G9A.candleWidth;}if(!G9A.projection){if(Q9A.transformFunc&&b9A==Q9A.panel.yAxis&&G9A.transform){G9A=G9A.transform;}l9A=G9A[O7A];if(l9A&&l9A[a7A]!==undefined){l9A=l9A[a7A];}if(!(l9A instanceof Array)){l9A=[l9A];}if("Scatter"in G9A){l9A=G9A.Scatter;}for(var r9A="0"^0;r9A<l9A.length;r9A++){if(!l9A[r9A]&&l9A[r9A]!==0)continue;X9A=l9A[r9A];p9A=0;if(l9A[r9A]instanceof Array){X9A=l9A[r9A][+"0"];p9A=l9A[r9A][2];}d9A=b9A.semiLog?b9A.height*(1-(Math.log(Math.max(X9A,0))/Math.LN10-b9A.logLow)/b9A.logShadow):(b9A.high-X9A)*b9A.multiplier;if(b9A.flipped){X4d.I9X(6);d9A=X4d.L9X(d9A,K7A);}else{d9A+=x7A;}if(d9A<x7A)continue;if(d9A>K7A)continue;Y9A=2;if(p9A){X4d.O9X(1);Y9A=X4d.x9X(p9A,F9A);}X4d.O9X(6);v9A.moveTo(X4d.x9X(Y9A,y9A),d9A);X4d.O9X(0);v9A.lineTo(X4d.L9X(Y9A,y9A),d9A);E7A[W9A]=d9A;}}}v9A.stroke();v9A.closePath();T7A={colors:[v9A.strokeStyle],cache:E7A};this.endClip();v9A.lineWidth=+"1";return T7A;};};V54=function V54(g7A){var w0Z,j0Z,t0Z,v0Z,y0Z,h0Z,T49,F49,g49,Y49,b49,V49,o49,e49,w49,j49,t49,v49,i49,y49,q7A,c7A;w0Z="p";w0Z+="att";w0Z+="ern";j0Z="lineWidt";j0Z+="h";t0Z="f";t0Z+="illCo";t0Z+="lor";v0Z="c";v0Z+="o";v0Z+="l";v0Z+="or";y0Z="co";y0Z+="l";y0Z+="or";h0Z="pa";h0Z+="tter";h0Z+="n";T49="s";T49+="olid";F49="s";F49+="ol";F49+="i";F49+="d";g49="sol";g49+="id";Y49="sol";Y49+="id";b49="a";b49+="u";b49+="t";b49+="o";V49="s";V49+="o";V49+="li";V49+="d";o49="a";o49+="u";o49+="to";e49="soli";e49+="d";w49="au";w49+="to";j49="s";j49+="o";j49+="li";j49+="d";t49="a";t49+="uto";v49="s";v49+="o";v49+="l";v49+="id";i49="au";i49+="t";i49+="o";y49="s";y49+="oli";o2QQ.l9d();y49+="d";q7A=typeof _CIQ!=="undefined"?_CIQ:g7A.CIQ;c7A=typeof _timezoneJS!=="undefined"?_timezoneJS:g7A.timezoneJS;q7A.ChartEngine.drawingTools={};q7A.ChartEngine.currentVectorParameters={vectorType:null,pattern:"solid",lineWidth:1,fillColor:"#7DA6F5",currentColor:"auto",axisLabel:!"",fibonacci:{trend:{color:"auto",parameters:{pattern:y49,opacity:0.25,lineWidth:1}},fibs:[{level:-0.786,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:1}},{level:-0.618,color:i49,parameters:{pattern:v49,opacity:0.25,lineWidth:"1"*1},display:!![]},{level:-0.5,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:1}},{level:-0.382,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:1},display:!!{}},{level:-0.236,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:+"1"}},{level:0,color:"auto",parameters:{pattern:"solid",lineWidth:1},display:!!{}},{level:+"0.236",color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:1}},{level:0.382,color:t49,parameters:{pattern:j49,opacity:0.25,lineWidth:1},display:!0},{level:+"0.5",color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:1},display:!!"1"},{level:"0.618"*1,color:w49,parameters:{pattern:e49,opacity:0.25,lineWidth:1},display:!""},{level:0.786,color:o49,parameters:{pattern:V49,opacity:0.25,lineWidth:"1"|0}},{level:1,color:b49,parameters:{pattern:Y49,lineWidth:1},display:!!{}},{level:+"1.272",color:"auto",parameters:{pattern:g49,opacity:0.25,lineWidth:"1"|0}},{level:1.382,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:+"1"},display:!!1},{level:1.618,color:"auto",parameters:{pattern:F49,opacity:"0.25"-0,lineWidth:+"1"},display:!!1},{level:2.618,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:+"1"}},{level:4.236,color:"auto",parameters:{pattern:"solid",opacity:0.25,lineWidth:1}}],extendLeft:!!0,printLevels:!!{},printValues:!{},timezone:{color:"auto",parameters:{pattern:T49,opacity:0.25,lineWidth:1}}},annotation:{font:{style:null,size:null,weight:null,family:null}}};q7A.ChartEngine.registerDrawingTool=function(j7A,n7A){o2QQ.l9d();q7A.ChartEngine.drawingTools[j7A]=n7A;};q7A.ChartEngine.prototype.setDrawingContainer=function(U7A){o2QQ.A9d();this.drawingContainer=U7A;};q7A.ChartEngine.prototype.exportDrawings=function(){var w7A,Q69,R69,l69;w7A=[];for(var B7A=0;B7A<this.drawingObjects.length;B7A++){w7A.push(this.drawingObjects[B7A].serialize());}Q69=-39134986;R69=1629301557;l69=2;for(var K69=1;o2QQ.Y19(K69.toString(),K69.toString().length,94398)!==Q69;K69++){return w7A;}if(o2QQ.Y19(l69.toString(),l69.toString().length,28435)!==R69){return w7A;}};q7A.ChartEngine.prototype.abortDrawings=function(Z7A){var L7A;if(Z7A!==![]){Z7A=!!1;}for(var N7A=this.drawingObjects.length-1;N7A>="0"-0;N7A--){L7A=this.drawingObjects[N7A];L7A.abort(!!{});if(Z7A||!L7A.permanent){this.drawingObjects.splice(N7A,1);}}};q7A.ChartEngine.prototype.importDrawings=function(h7A){var D7A,f7A,S7A;o2QQ.l9d();if(!q7A.Drawing){return;}for(var i7A="0"&2147483647;i7A<h7A.length;i7A++){D7A=h7A[i7A];if(D7A.name=="fibonacci"){D7A.name="retracement";}f7A=q7A.ChartEngine.drawingTools[D7A.name];if(!f7A){if(q7A.Drawing[D7A.name]){f7A=q7A.Drawing[D7A.name];q7A.ChartEngine.registerDrawingTool(D7A.name,f7A);}}if(f7A){S7A=new f7A();S7A.reconstruct(this,D7A);this.drawingObjects.push(S7A);}}};q7A.ChartEngine.prototype.clearDrawings=function(m7A,t7A){var C7A,V7A;if(t7A!==!"1"){t7A=!"";}o2QQ.l9d();C7A=this.exportDrawings();this.abortDrawings(t7A);if(m7A){this.undoStamps=[];}else{this.undoStamp(C7A,this.exportDrawings());}this.changeOccurred("vector");this.cancelTouchSingleClick=!![];q7A.clearCanvas(this.chart.tempCanvas,this);this.draw();V7A=this.controls.mSticky;if(V7A){V7A.style.display="none";V7A.children[0].innerHTML="";}};q7A.ChartEngine.prototype.createDrawing=function(R7A,M7A){var k7A,o7A;if(!q7A.Drawing){return;}k7A=new q7A.Drawing[R7A]();k7A.reconstruct(this,M7A);o7A=new q7A.Drawing[R7A]();o7A.stx=this;o7A.copyConfig();for(var A7A in o7A){k7A[A7A]=k7A[A7A]||o7A[A7A];}this.drawingObjects.push(k7A);o2QQ.A9d();this.draw();return k7A;};q7A.ChartEngine.prototype.removeDrawing=function(I7A){for(var P7A="0"^0;P7A<this.drawingObjects.length;P7A++){if(this.drawingObjects[P7A]==I7A){this.drawingObjects.splice(P7A,+"1");this.changeOccurred("vector");this.draw();return;}};};q7A.ChartEngine.prototype.undo=function(){o2QQ.l9d();if(this.runPrepend("undo",arguments)){return;}if(this.activeDrawing){this.activeDrawing.abort();this.activeDrawing.hidden=!!"";this.drawingSnapshot=null;this.activateDrawing(null);q7A.clearCanvas(this.chart.tempCanvas,this);this.draw();this.controls.crossX.classList.replace("stx_crosshair_drawing","stx_crosshair");this.controls.crossY.classList.replace("stx_crosshair_drawing","stx_crosshair");q7A.ChartEngine.drawingLine=!{};}this.runAppend("undo",arguments);};q7A.ChartEngine.prototype.undoStamp=function(s7A,J7A){o2QQ.A9d();this.undoStamps.push(s7A);this.dispatch("undoStamp",{before:s7A,after:J7A,stx:this});};q7A.ChartEngine.prototype.undoLast=function(){o2QQ.l9d();if(this.activeDrawing){this.undo();}else{if(this.undoStamps.length){this.drawingObjects=[];this.importDrawings(this.undoStamps.pop());this.changeOccurred("vector");this.draw();}}};q7A.ChartEngine.prototype.addDrawing=function(l7A){var H7A;H7A=this.exportDrawings();o2QQ.l9d();this.drawingObjects.push(l7A);this.undoStamp(H7A,this.exportDrawings());};q7A.ChartEngine.prototype.repositionDrawing=function(v7A,r7A){var b7A,u7A,G7A;b7A=this.panels[v7A.panelName];u7A=this.adjustIfNecessary(b7A,this.crosshairTick,this.valueFromPixel(this.backOutY(q7A.ChartEngine.crosshairY),b7A));G7A=this.chart.tempCanvas;q7A.clearCanvas(G7A,this);if(r7A){this.drawingSnapshot=this.exportDrawings();v7A.render(G7A.context);}else{v7A.reposition(G7A.context,v7A.repositioner,this.crosshairTick,u7A);if(this.drawingSnapshot){this.undoStamp(q7A.shallowClone(this.drawingSnapshot),this.exportDrawings());}this.drawingSnapshot=null;}if(v7A.measure){v7A.measure();}};q7A.ChartEngine.prototype.activateRepositioning=function(d7A){var F7A;F7A=this.repositioningDrawing=d7A;if(d7A){this.draw();this.repositionDrawing(d7A,!![]);}this.chart.tempCanvas.style.display=d7A?"block":"none";};q7A.ChartEngine.prototype.activateDrawing=function(y7A,W7A){var K4d=o2QQ;var d49,x49,Q7A,C69,O69,m69,a59,Q59,R59;d49="no";d49+="ne";x49="b";x49+="loc";x49+="k";function z7A(X7A){var e7A;if(!X7A.layout.studies){return;}e7A=X7A.layout.studies[W7A.name];if(e7A&&!e7A.overlay){delete X7A.overlays[e7A.name];}}if(!W7A){W7A=this.currentPanel;}if(!y7A){this.activeDrawing=null;this.chart.tempCanvas.style.display="none";z7A(this);return!!0;}Q7A=q7A.ChartEngine.drawingTools[y7A];if(!Q7A){if(q7A.Drawing[y7A]){C69=-2097044530;O69=-906121741;m69=2;for(var X69=1;K4d.Y19(X69.toString(),X69.toString().length,"94541"^0)!==C69;X69++){Q7A=q7A.Drawing[y7A];m69+=2;}if(K4d.Y19(m69.toString(),m69.toString().length,67691)!==O69){Q7A=q7A.Drawing[y7A];}q7A.ChartEngine.registerDrawingTool(y7A,Q7A);}}if(Q7A){a59=1505290803;Q59=-1072070522;R59=2;for(var r59=1;K4d.g19(r59.toString(),r59.toString().length,27531)!==a59;r59++){this.activeDrawing=new Q7A();R59+=2;}if(K4d.Y19(R59.toString(),R59.toString().length,15560)!==Q59){this.activeDrawing=new Q7A();}this.activeDrawing.construct(this,W7A);if(!this.charts[W7A.name]){if(this.activeDrawing.chartsOnly){this.activeDrawing=null;z7A(this);return!"1";}}}this.chart.tempCanvas.style.display=x49;if(this.controls.drawOk){this.controls.drawOk.style.display=d49;}z7A(this);return!!{};};q7A.ChartEngine.prototype.drawingClick=function(E2A,x2A,K2A){var p7A,Y7A,a2A,L49,O09,m09,u09;if(!q7A.Drawing){return;}if(!E2A){return;}if(this.openDialog!==""){return;}if(!this.activeDrawing){if(!this.activateDrawing(this.currentVectorParameters.vectorType,E2A)){return;}}if(this.activeDrawing){if(this.userPointerDown&&!this.activeDrawing.dragToDraw){if(!q7A.ChartEngine.drawingLine){this.activateDrawing(null);}return;}p7A=this.tickFromPixel(x2A,E2A.chart);Y7A=this.panels[this.activeDrawing.panelName];a2A=this.adjustIfNecessary(Y7A,p7A,this.valueFromPixel(K2A,Y7A));if(this.magnetizedPrice){a2A=this.adjustIfNecessary(Y7A,p7A,this.magnetizedPrice);}if(this.activeDrawing.click(this.chart.tempCanvas.context,p7A,a2A)){if(this.activeDrawing){L49="st";L49+="x_crosshair";q7A.ChartEngine.drawingLine=![];q7A.clearCanvas(this.chart.tempCanvas,this);this.addDrawing(this.activeDrawing);this.activateDrawing(null);this.adjustDrawings();this.draw();this.changeOccurred("vector");this.controls.crossX.classList.replace("stx_crosshair_drawing",L49);this.controls.crossY.classList.replace("stx_crosshair_drawing","stx_crosshair");}}else{this.changeOccurred("drawing");q7A.ChartEngine.drawingLine=!"";this.controls.crossX.classList.replace("stx_crosshair","stx_crosshair_drawing");this.controls.crossY.classList.replace("stx_crosshair","stx_crosshair_drawing");}return!!{};}O09=-1086104753;m09=+"33510566";u09=+"2";for(var Z09=1;o2QQ.Y19(Z09.toString(),Z09.toString().length,6537)!==O09;Z09++){return!![];}if(o2QQ.Y19(u09.toString(),u09.toString().length,+"56216")!==m09){return!!1;}return!1;};q7A.ChartEngine.prototype.rightClickDrawing=function(O2A,c2A){var z49,T2A,q2A;z49="ri";z49+="gh";z49+="tCl";z49+="ickDrawing";if(this.runPrepend("rightClickDrawing",arguments)){return;}if(O2A.permanent){return;}if(this.callbackListeners.drawingEdit.length){this.dispatch("drawingEdit",{stx:this,drawing:O2A,forceEdit:c2A});}else{T2A=O2A.abort();if(!T2A){q2A=this.exportDrawings();this.removeDrawing(O2A);this.undoStamp(q2A,this.exportDrawings());}this.changeOccurred("vector");}this.runAppend(z49,arguments);};q7A.ChartEngine.prototype.magnetize=function(){var N4d=o2QQ;var n49,A49,c49,w2A,N2A,j2A,f2A,U2A,h2A,C2A,n2A,V2A,B49,i2A,t2A,L2A,m2A,S2A,D2A,k2A,o2A,g2A,A2A;n49="stx-dra";n49+="g";n49+="g";n49+="able";A49="Clos";A49+="e";c49="O";c49+="p";c49+="e";c49+="n";this.magnetizedPrice=null;if(!this.preferences.magnet){return;}if(this.runPrepend("magnetize",arguments)){return;}if(this.repositioningDrawing){return;}w2A=this.currentVectorParameters.vectorType;if(!w2A||w2A=="projection"||w2A=="freeform"){return;}if((w2A=="annotation"||w2A=="callout")&&q7A.ChartEngine.drawingLine){return;}N2A=this.currentPanel;j2A=N2A.chart;f2A=this.crosshairTick;if(f2A>j2A.dataSet.length){return;}U2A=j2A.dataSet[f2A];N4d.l9d();if(!U2A){return;}h2A=j2A.transformFunc&&N2A.yAxis===j2A.yAxis;if(h2A&&U2A.transform){U2A=U2A.transform;}n2A=this.getRenderedItems();V2A=[c49,"High","Low",A49];if(this.magneticHold&&this.activeDrawing&&this.activeDrawing.penDown){B49="H";B49+="i";B49+="g";B49+="h";if(V2A.indexOf(this.magneticHold)!=-1&&n2A.indexOf(B49)!=-("1"-0)){n2A=V2A;}else{n2A=[this.magneticHold];}}else{this.magneticHold=null;}i2A=1000000000;t2A=parseFloat(this.preferences.magnet);for(var B2A="0">>509139872;B2A<n2A.length;B2A++){L2A=U2A[n2A[B2A]];m2A=this.getYAxisByField(N2A,n2A[B2A]);S2A=q7A.existsInObjectChain(U2A,n2A[B2A]);if(S2A){L2A=S2A.obj[S2A.member];}if(L2A||L2A===0){D2A=this.pixelFromTransformedValue(L2A,N2A,m2A);if(Math.abs(this.cy-D2A)<i2A){i2A=Math.abs(this.cy-D2A);if(t2A&&t2A<=i2A)continue;this.magnetizedPrice=h2A?this.valueFromPixel(D2A,N2A):L2A;C2A=D2A;this.magneticHold=n2A[B2A];}}}k2A=this.pixelFromTick(f2A,j2A);o2A=C2A;q7A.clearCanvas(j2A.tempCanvas,this);g2A=j2A.tempCanvas.context;g2A.beginPath();g2A.lineWidth=+"1";N4d.I9X(29);var m4K=N4d.x9X(2,6,8,4,3);N4d.I9X(30);var u4K=N4d.x9X(60,14,837);A2A=Math.max(this.layout.candleWidth,m4K)/u4K;g2A.arc(k2A,o2A,Math.min(A2A,8),0,2*Math.PI,!{});g2A.fillStyle="#398dff";g2A.strokeStyle="#398dff";g2A.fill();g2A.stroke();g2A.closePath();j2A.tempCanvas.style.display="block";if(this.anyHighlighted){this.container.classList.remove(n49);}if(this.activeDrawing){this.activeDrawing.move(g2A,this.crosshairTick,this.magnetizedPrice);}this.runAppend("magnetize",arguments);};q7A.ChartEngine.prototype.changeVectorType=function(R2A){this.currentVectorParameters.vectorType=R2A;if(q7A.Drawing){q7A.Drawing.initializeSettings(this,R2A);}if(q7A.ChartEngine.drawingLine){this.undo();}if(this.insideChart){this.doDisplayCrosshairs();}};q7A.ChartEngine.prototype.changeVectorParameter=function(M2A,P2A){var k49,N49,I2A,P49;k49="li";k49+="ne";k49+="Width";N49="t";N49+="r";N49+="ue";if(M2A=="axisLabel"){P2A=P2A.toString()===N49||Number(P2A);}else if(M2A==k49){P2A=Number(P2A);}else if(M2A=="fontSize"){P2A=parseInt(P2A,+"10")+"px";}I2A=this.currentVectorParameters;o2QQ.A9d();if(typeof I2A[M2A]!=="undefined"){I2A[M2A]=P2A;return!"";}else if(M2A.substr("0"&2147483647,4)=="font"){P49="unde";P49+="fi";P49+="ned";M2A=M2A.substr(4).toLowerCase();if(M2A=="family"&&P2A.toLowerCase()=="default"){P2A=null;}I2A=I2A.annotation.font;if(_typeof(I2A[M2A])!==P49){I2A[M2A]=P2A;return!0;}}return!{};};q7A.ChartEngine.prototype.drawVectors=function(){var l2A,J2A,s2A,H2A,v2A;if(this.vectorsShowing){return;}if(this.runPrepend("drawVectors",arguments)){return;}this.vectorsShowing=!![];if(!this.chart.hideDrawings&&!this.highlightedDraggable){l2A={};for(s2A="0"-0;s2A<this.drawingObjects.length;s2A++){H2A=this.drawingObjects[s2A];if(H2A.hidden)continue;if(this.repositioningDrawing===H2A)continue;J2A=H2A.panelName;if(!this.panels[H2A.panelName]||this.panels[H2A.panelName].hidden)continue;if(!l2A[J2A]){l2A[J2A]=[];}l2A[J2A].push(H2A);}for(J2A in l2A){this.startClip(J2A);v2A=l2A[J2A];for(s2A=0;s2A<v2A.length;s2A++){v2A[s2A].render(this.chart.context);}this.endClip();}}this.runAppend("drawVectors",arguments);};q7A.ChartEngine.prototype.adjustDrawings=function(){var b2A;for(var G2A=0;G2A<this.drawingObjects.length;G2A++){b2A=this.drawingObjects[G2A];if(this.panels[b2A.panelName]){b2A.adjust();}}};q7A.Drawing=q7A.Drawing||function(){this.chartsOnly=!1;this.penDown=!"1";;};q7A.Drawing.getDrawingParameters=function(W2A,z2A){o2QQ.A9d();var r2A,u2A,y2A,F2A;try{r2A=new q7A.Drawing[z2A]();}catch(e2A){}if(!r2A){return null;}r2A.stx=W2A;r2A.copyConfig(!![]);u2A={};y2A=r2A.configs;for(var Q2A="0"&2147483647;Q2A<y2A.length;Q2A++){u2A[y2A[Q2A]]=r2A[y2A[Q2A]];}F2A=W2A.canvasStyle("stx_annotation");if(F2A&&u2A.font){u2A.font.size=F2A.fontSize;u2A.font.family=F2A.fontFamily;u2A.font.style=F2A.fontStyle;u2A.font.weight=F2A.fontWeight;}return u2A;};q7A.Drawing.saveConfig=function(O5A,K5A){var p2A,a5A;if(!K5A){return;}p2A=O5A.preferences;if(!p2A.drawings){p2A.drawings={};}p2A.drawings[K5A]={};a5A=new q7A.Drawing[K5A]();a5A.stx=O5A;q7A.Drawing.copyConfig(a5A);a5A.configs.forEach(function(g5A){o2QQ.A9d();p2A.drawings[K5A][g5A]=a5A[g5A];});o2QQ.A9d();O5A.changeOccurred("preferences");};q7A.Drawing.restoreDefaultConfig=function(n5A,U5A,B5A){if(B5A){n5A.preferences.drawings=null;}else{n5A.preferences.drawings[U5A]=null;}n5A.changeOccurred("preferences");n5A.currentVectorParameters=q7A.clone(q7A.ChartEngine.currentVectorParameters);n5A.currentVectorParameters.vectorType=U5A;};q7A.Drawing.initializeSettings=function(t5A,o5A){var N5A,S5A;N5A=q7A.Drawing[o5A];o2QQ.A9d();if(N5A){S5A=new N5A();if(S5A.initializeSettings){S5A.initializeSettings(t5A);}}};q7A.Drawing.updateSource=function(H5A,P5A,v5A,Q5A){var s5A,R5A;if(!P5A){return;}s5A=!{};for(var d5A in H5A.drawingObjects){R5A=H5A.drawingObjects[d5A];if(!R5A.field)continue;if(v5A){if(R5A.field==P5A){R5A.field=v5A;s5A=!"";}else if(R5A.field.indexOf(P5A)>-1&&R5A.field.indexOf(P5A+((865.27,5493)>(+"4940",1200)?(1830,9190)===+"9900"?("N","D"):"-":("X","a")))==-1){R5A.field=R5A.field.replace(P5A,v5A);s5A=!!{};}}else{if(R5A.field.split("-->")[0]==P5A||R5A.panelName==P5A){R5A.panelName=Q5A;s5A=!!"1";}}}if(s5A){H5A.changeOccurred("vector");}};q7A.Drawing.prototype.copyConfig=function(W5A){q7A.Drawing.copyConfig(this,W5A);};q7A.Drawing.copyConfig=function(e5A,x4A){o2QQ.A9d();var p5A,E4A,Y5A,X5A,a4A,G49;p5A=e5A.stx.currentVectorParameters;E4A=e5A.configs;for(Y5A=0;Y5A<E4A.length;Y5A++){X5A=E4A[Y5A];if(X5A=="color"){e5A.color=p5A.currentColor;}else if(X5A=="parameters"){e5A.parameters=q7A.clone(p5A.fibonacci);}else if(X5A=="font"){e5A.font=q7A.clone(p5A.annotation.font);}else{e5A[X5A]=p5A[X5A];}}if(!x4A){return;}a4A=e5A.stx.preferences;if(a4A&&a4A.drawings){q7A.extend(e5A,a4A.drawings[p5A.vectorType]);for(Y5A=0;Y5A<E4A.length;Y5A++){G49="fon";G49+="t";X5A=E4A[Y5A];if(X5A=="color"){p5A.currentColor=e5A.color;}else if(X5A=="parameters"){p5A.fibonacci=q7A.clone(e5A.parameters);}else if(X5A==G49){p5A.annotation.font=q7A.clone(e5A.font);}else{p5A[X5A]=e5A[X5A];}}}};q7A.Drawing.prototype.dragToDraw=!{};q7A.Drawing.prototype.permanent=!"1";q7A.Drawing.prototype.chartsOnly=![];q7A.Drawing.prototype.abort=function(K4A){};q7A.Drawing.prototype.measure=function(){};q7A.Drawing.prototype.construct=function(O4A,T4A){this.stx=O4A;this.panelName=T4A.name;};q7A.Drawing.prototype.render=function(q4A){console.warn("must implement render function!");};q7A.Drawing.prototype.click=function(c4A,g4A,j4A){o2QQ.A9d();var D49;D49="must implement click fu";D49+="nction!";console.warn(D49);};q7A.Drawing.prototype.move=function(n4A,U4A,B4A){o2QQ.A9d();console.warn("must implement move function!");};q7A.Drawing.prototype.reposition=function(w4A,N4A,Z4A,L4A){};q7A.Drawing.prototype.intersected=function(D4A,f4A,i4A){var J49;J49="must implement inte";J49+="rsected";J49+=" ";J49+="function!";console.warn(J49);};q7A.Drawing.prototype.reconstruct=function(S4A,h4A){var f49;f49="must implement ";f49+="re";f49+="construct ";f49+="function!";console.warn(f49);};q7A.Drawing.prototype.serialize=function(){var H49;o2QQ.l9d();H49="must";H49+=" imple";H49+="ment";H49+=" serialize function!";console.warn(H49);};q7A.Drawing.prototype.adjust=function(){o2QQ.A9d();console.warn("must implement adjust function!");};q7A.Drawing.prototype.highlight=function(V4A){if(V4A&&!this.highlighted){this.highlighted=V4A;}else if(!V4A&&this.highlighted){this.highlighted=V4A;}return this.highlighted;};q7A.Drawing.prototype.littleCircleRadius=function(){var t4A;t4A=6;return t4A;};q7A.Drawing.prototype.littleCircle=function(C4A,o4A,A4A,R4A){var m4A,k4A;if(this.permanent){return;}m4A=this.stx.defaultColor;k4A=q7A.chooseForegroundColor(m4A);C4A.beginPath();C4A.lineWidth=+"1";C4A.arc(o4A,A4A,this.littleCircleRadius(),"0">>46326400,+"2"*Math.PI,!!"");if(R4A){C4A.fillStyle=m4A;}else{C4A.fillStyle=k4A;}C4A.strokeStyle=m4A;C4A.setLineDash([]);C4A.fill();C4A.stroke();C4A.closePath();};q7A.Drawing.prototype.rotator=function(M4A,I4A,s4A,l4A){var h4d=o2QQ;var J4A,H4A,P4A;if(this.permanent){return;}J4A=this.littleCircleRadius();H4A=this.stx.defaultColor;M4A.beginPath();M4A.lineWidth=2;h4d.A9d();if(!l4A){h4d.I9X(6);M4A.globalAlpha=h4d.x9X(0,"0.5");}h4d.O9X(0);P4A=h4d.x9X(J4A,4);M4A.arc(I4A,s4A,P4A,0,"3"*1*Math.PI/2,!1);h4d.O9X(21);M4A.moveTo(h4d.L9X(I4A,2,P4A),h4d.L9X(2,s4A,h4d.I9X(0)));h4d.I9X(0);M4A.lineTo(h4d.x9X(P4A,I4A),s4A);h4d.I9X(5);M4A.lineTo(h4d.L9X(2,P4A,I4A),h4d.x9X(2,s4A,h4d.O9X(0)));h4d.O9X(6);M4A.moveTo(h4d.L9X(2,I4A),h4d.L9X(s4A,2,P4A,h4d.I9X(11)));h4d.I9X(6);M4A.lineTo(I4A,h4d.L9X(P4A,s4A));h4d.I9X(6);M4A.lineTo(h4d.L9X(2,I4A),h4d.x9X(2,s4A,P4A,h4d.I9X(22)));M4A.strokeStyle=H4A;M4A.stroke();M4A.closePath();M4A.globalAlpha=1;};q7A.Drawing.prototype.mover=function(v4A,F4A,Q4A,y4A){var E4d=o2QQ;var r4A,d4A,b4A,G4A;if(this.permanent){return;}r4A=this.littleCircleRadius();d4A=this.stx.defaultColor;b4A=5;E4d.O9X(0);G4A=E4d.x9X(1,r4A);v4A.save();v4A.lineWidth=2;v4A.strokeStyle=d4A;v4A.translate(F4A,Q4A);if(!y4A){v4A.globalAlpha=0.5;}for(var u4A=0;u4A<4;u4A++){v4A.rotate(Math.PI/2);v4A.beginPath();v4A.moveTo(0,G4A);E4d.O9X(0);v4A.lineTo(0,E4d.x9X(b4A,G4A));E4d.O9X(31);v4A.moveTo(-2,E4d.x9X("2",G4A,b4A));E4d.I9X(0);v4A.lineTo(0,E4d.x9X(b4A,G4A));E4d.O9X(32);v4A.lineTo(2,E4d.x9X(0,G4A,b4A,"2"));v4A.closePath();v4A.stroke();}v4A.globalAlpha=1;v4A.restore();};q7A.Drawing.prototype.resizer=function(W4A,X4A,p4A,x8A){var Z4d=o2QQ;var E8A,a8A,e4A,z4A;if(this.permanent){return;}E8A=this.littleCircleRadius();a8A=this.stx.defaultColor;Z4d.I9X(33);var X4K=Z4d.L9X(24,4,12,6,36);e4A=+"5"*Math.sqrt(X4K);Z4d.O9X(0);z4A=Z4d.x9X(1,E8A);W4A.save();W4A.lineWidth=2;W4A.strokeStyle=a8A;W4A.translate(X4A,p4A);W4A.rotate(-(X4A*p4A)/Math.abs(X4A*p4A)*Math.PI/+"4");if(!x8A){W4A.globalAlpha=0.5;}for(var Y4A=0;Y4A<2;Y4A++){W4A.rotate(Math.PI);W4A.beginPath();W4A.moveTo(0,z4A);Z4d.O9X(0);W4A.lineTo(0,Z4d.x9X(e4A,z4A));Z4d.O9X(11);W4A.moveTo(-2,Z4d.x9X(z4A,e4A,2));Z4d.O9X(0);W4A.lineTo(0,Z4d.x9X(e4A,z4A));Z4d.I9X(11);W4A.lineTo(2,Z4d.x9X(z4A,e4A,2));W4A.closePath();W4A.stroke();}W4A.globalAlpha=1;W4A.restore();};q7A.Drawing.prototype.pointIntersection=function(O8A,T8A,K8A,c8A){var q8A;o2QQ.l9d();q8A=this.stx.panels[this.panelName];if(!q8A){return![];}if(c8A){if(O8A>=K8A.cx0&&O8A<=K8A.cx1&&T8A>=K8A.cy0&&T8A<=K8A.cy1){return!!{};}}else{if(O8A>=K8A.x0&&O8A<=K8A.x1&&T8A>=Math.min(K8A.y0,K8A.y1)&&T8A<=Math.max(K8A.y0,K8A.y1)){return!![];}}return![];};q7A.Drawing.prototype.setPoint=function(j8A,U8A,B8A,Z8A){var l4d=o2QQ;var s49,n8A,w8A,g8A,q49,W49,L8A,N8A;s49="n";s49+="u";s49+="mbe";l4d.l9d();s49+="r";n8A=null;w8A=null;if(_typeof(U8A)==s49){n8A=U8A;}else if(U8A.length>=8){w8A=U8A;}else{n8A=Number(U8A);}if(B8A||B8A===0){l4d.O9X(0);this[l4d.x9X(j8A,"859.53"-0!=(1790,635.69)?(2208,+"9600")<(5960,599)? false?undefined:(588.37,0x1786):"v":!![])]=B8A;}if(n8A!==null){g8A=this.stx.dateFromTick(n8A,Z8A,!0);l4d.I9X(0);this[l4d.L9X(j8A,"tzo")]=g8A.getTimezoneOffset();l4d.I9X(0);this[l4d.x9X(j8A,(188.82,4349)===(926,"733.71"*1)?"F":"2430"<<270989056!=(6752,"3150"-0)?1859>=(6350,57.52)?"d":(!![],0x1a22):"0xc43">>336065056)]=q7A.yyyymmddhhmmssmmm(g8A);l4d.I9X(0);this[l4d.x9X(j8A,"p")]=[n8A,B8A];}else if(w8A!==null){q49="tz";q49+="o";W49="t";W49+="z";W49+="o";g8A=q7A.strToDateTime(w8A);if(!this["tzo"+j8A]&&this[W49+j8A]!==0){l4d.O9X(0);this[l4d.L9X(j8A,q49)]=g8A.getTimezoneOffset();}l4d.O9X(0);this[l4d.L9X(j8A,2789<=537.79?("404.81"*1,8000)<+"2794"?("f","T"):!![]:"d")]=w8A;L8A=this["tzo"+j8A]-g8A.getTimezoneOffset();g8A.setMinutes(g8A.getMinutes()+L8A);N8A=!!"";if(this.name!="freeform"&&!q7A.ChartEngine.isDailyInterval(this.stx.layout.interval)&&!g8A.getHours()&&!g8A.getMinutes()&&!g8A.getSeconds()&&!g8A.getMilliseconds()){N8A=!![];}l4d.I9X(0);this[l4d.L9X(j8A,(6489,"3570"|2432)==(1700,8898)?2.99e+2:"p")]=[this.stx.tickFromDate(q7A.yyyymmddhhmmssmmm(g8A),Z8A,null,N8A),B8A];}};q7A.Drawing.prototype.getLineColor=function(m8A){var R49,I49,f8A,D8A,h8A,k8A,V8A,o8A,t8A,Q49,a49,i8A,S8A;R49="a";R49+="u";R49+="t";R49+="o";I49="au";I49+="to";if(!m8A){m8A=this.color;}f8A=this.stx;D8A=m8A;if(this.highlighted){D8A=f8A.getCanvasColor("stx_highlight_vector");}else if(q7A.isTransparent(D8A)){D8A=f8A.defaultColor;}else if(D8A==I49){D8A=f8A.defaultColor;if(this.field){for(h8A in f8A.layout.studies){k8A=f8A.layout.studies[h8A];V8A=k8A.outputs[k8A.outputMap[this.field]];if(V8A){D8A=V8A.color||V8A;break;}}for(h8A in f8A.chart.seriesRenderers){t8A=f8A.chart.seriesRenderers[h8A];for(var C8A=0;C8A<t8A.seriesParams.length;C8A++){Q49="-";Q49+="->";a49="C";a49+="l";a49+="o";a49+="se";i8A=t8A.seriesParams[C8A];S8A=i8A.field;if(!S8A&&!t8A.highLowBars){S8A=this.defaultPlotField||a49;}if(i8A.symbol&&i8A.subField){S8A+=Q49+i8A.subField;}if(this.field==S8A){D8A=i8A.color;break;}if(i8A.field&&i8A.field==this.field.split("-->")[0]){o8A=i8A.color;}}}if(o8A){D8A=o8A;}}}if(D8A==R49){D8A=f8A.defaultColor;}return D8A;};q7A.Drawing.BaseTwoPoint=function(){this.p0=null;this.p1=null;o2QQ.l9d();this.color="";};q7A.inheritsFrom(q7A.Drawing.BaseTwoPoint,q7A.Drawing);q7A.Drawing.BaseTwoPoint.prototype.configs=[];q7A.Drawing.BaseTwoPoint.prototype.lineIntersection=function(l8A,v8A,s8A,J8A,M8A,P8A,H8A){var I8A,R8A,A8A;if(!M8A){M8A=this.p0;}o2QQ.A9d();if(!P8A){P8A=this.p1;}I8A=this.stx;if(!(M8A&&P8A)){return!{};}R8A=q7A.convertBoxToPixels(I8A,this.panelName,s8A);if(R8A.x0===undefined){return![];}A8A={x0:M8A[0],x1:P8A["0"-0],y0:M8A[1],y1:P8A[1]};if(!H8A){A8A=q7A.convertBoxToPixels(I8A,this.panelName,A8A);}return q7A.boxIntersects(R8A.x0,R8A.y0,R8A.x1,R8A.y1,A8A.x0,A8A.y0,A8A.x1,A8A.y1,J8A);};q7A.Drawing.BaseTwoPoint.prototype.boxIntersection=function(b8A,u8A,G8A){if(!this.p0||!this.p1){return!"1";}if(G8A.x0>Math.max(this.p0[0],this.p1[0])||G8A.x1<Math.min(this.p0[0],this.p1[0])){return!1;}if(G8A.y1>Math.max(this.p0[1],this.p1[1])||G8A.y0<Math.min(this.p0[1],this.p1[+"1"])){return!"1";}return!"";};q7A.Drawing.BaseTwoPoint.prototype.accidentalClick=function(Q8A,p8A){var c4d=o2QQ;var r8A,y8A,W8A,z8A,e8A,d8A,F8A,X8A;r8A=this.stx.panels[this.panelName];y8A=this.stx.pixelFromTick(this.p0[0],r8A.chart);W8A=this.stx.pixelFromTick(Q8A,r8A.chart);z8A=this.stx.pixelFromValueAdjusted(r8A,this.p0[0],this.p0[1]);e8A=this.stx.pixelFromValueAdjusted(r8A,Q8A,p8A);c4d.I9X(6);d8A=Math.abs(c4d.x9X(y8A,W8A));c4d.I9X(6);c4d.A9d();F8A=Math.abs(c4d.L9X(z8A,e8A));c4d.O9X(34);X8A=Math.sqrt(c4d.L9X(d8A,d8A,F8A,F8A));if(X8A<+"10"){this.penDown=!"1";if(this.dragToDraw){this.stx.undo();}return!!{};}};q7A.Drawing.BaseTwoPoint.prototype.click=function(x6o,Y8A,E6o){var a6o;this.copyConfig();a6o=this.stx.panels[this.panelName];if(!this.penDown){this.setPoint(0,Y8A,E6o,a6o.chart);this.penDown=!!1;return!{};}o2QQ.A9d();if(this.accidentalClick(Y8A,E6o)){return this.dragToDraw;}this.setPoint(1,Y8A,E6o,a6o.chart);this.penDown=!"1";return!![];;};q7A.Drawing.BaseTwoPoint.prototype.adjust=function(){var K6o;K6o=this.stx.panels[this.panelName];if(!K6o){return;}this.setPoint(0,this.d0,this.v0,K6o.chart);this.setPoint(+"1",this.d1,this.v1,K6o.chart);};q7A.Drawing.BaseTwoPoint.prototype.move=function(O6o,T6o,q6o){if(!this.penDown){return;}this.copyConfig();this.p1=[T6o,q6o];this.render(O6o);};q7A.Drawing.BaseTwoPoint.prototype.measure=function(){var j6o,g6o,c6o;o2QQ.A9d();if(this.p0&&this.p1){this.stx.setMeasure(this.p0[1],this.p1["1">>1090291616],this.p0[0],this.p1[0],!![],this.name);j6o=this.stx.controls.mSticky;g6o=j6o&&j6o.querySelector(".mStickyInterior");if(g6o){c6o=[];c6o.push(q7A.capitalize(this.name));if(this.getYValue){c6o.push(this.field||this.stx.defaultPlotField||"Close");}c6o.push(g6o.innerHTML);g6o.innerHTML=c6o.join("<br>");}}};q7A.Drawing.BaseTwoPoint.prototype.reposition=function(N6o,n6o,Z6o,L6o){var r49,l49,U6o,B6o,w6o;r49="d";r49+="rag";l49="m";l49+="ov";l49+="e";if(!n6o){return;}U6o=this.stx.panels[this.panelName];B6o=n6o.tick-Z6o;w6o=n6o.value-L6o;if(n6o.action==l49){this.setPoint(0,n6o.p0[+"0"]-B6o,n6o.p0[1]-w6o,U6o.chart);o2QQ.I9X(6);this.setPoint(o2QQ.L9X(0,"1"),n6o.p1[0]-B6o,n6o.p1[1]-w6o,U6o.chart);this.render(N6o);}else if(n6o.action==r49){this[n6o.point]=[Z6o,L6o];this.setPoint(0,this.p0[0],this.p0[1],U6o.chart);this.setPoint(1,this.p1[0],this.p1[1],U6o.chart);this.render(N6o);}};q7A.Drawing.BaseTwoPoint.prototype.drawDropZone=function(f6o,m6o,k6o,S6o,h6o){var d4d=o2QQ;var D6o,i6o,V6o,t6o,C6o;D6o=this.stx.panels[this.panelName];if(!D6o){return;}i6o=D6o.left;V6o=D6o.width;if(S6o||S6o===+"0"){i6o=this.stx.pixelFromTick(S6o,D6o.chart);}if(h6o||h6o===0){V6o=this.stx.pixelFromTick(h6o,D6o.chart);}t6o=this.stx.pixelFromPrice(m6o,D6o);C6o=this.stx.pixelFromPrice(k6o,D6o);f6o.fillStyle="#008000";f6o.globalAlpha=0.2;d4d.O9X(6);d4d.l9d();f6o.fillRect(i6o,t6o,d4d.x9X(i6o,V6o),d4d.L9X(t6o,C6o));f6o.globalAlpha=1;};q7A.Drawing.annotation=function(){this.name="annotation";this.arr=[];this.w=0;this.h=0;this.padding=4;this.text="";this.ta=null;o2QQ.I9X(35);o2QQ.A9d();this.fontSize=o2QQ.L9X(990594176,"0");this.font={};};q7A.inheritsFrom(q7A.Drawing.annotation,q7A.Drawing.BaseTwoPoint);q7A.Drawing.annotation.prototype.getFontString=function(){var K49,o6o,A6o;K49="stx_annota";K49+="ti";K49+="on";this.fontDef={style:null,weight:null,size:"12px",family:null};o6o=this.stx.canvasStyle(K49);if(o6o){if(o6o.fontStyle){this.fontDef.style=o6o.fontStyle;}if(o6o.fontWeight){this.fontDef.weight=o6o.fontWeight;}if(o6o.fontSize){this.fontDef.size=o6o.fontSize;}if(o6o.fontFamily){this.fontDef.family=o6o.fontFamily;}}if(this.font.style){this.fontDef.style=this.font.style;}if(this.font.weight){this.fontDef.weight=this.font.weight;}if(this.font.size){this.fontDef.size=this.font.size;}o2QQ.A9d();if(this.font.family){this.fontDef.family=this.font.family;}this.fontString="";A6o=!!{};for(var R6o in this.fontDef){if(this.fontDef[R6o]){if(!A6o){this.fontString+=" ";}else{A6o=!{};}this.fontString+=this.fontDef[R6o];}}};q7A.Drawing.annotation.prototype.configs=["color","font"];q7A.Drawing.annotation.prototype.measure=function(){};q7A.Drawing.annotation.prototype.render=function(M6o){var X7d=o2QQ;var C49,l6o,F6o,Q6o,s6o,P6o,H6o,I6o,G6o,b6o,u6o,r6o,d6o,J6o,O49;C49="mi";C49+="ddle";if(this.ta){return;}l6o=this.stx.panels[this.panelName];if(!l6o){return;}F6o=this.stx.pixelFromTick(this.p0[0],l6o.chart);Q6o=this.stx.pixelFromValueAdjusted(l6o,this.p0[0],this.p0[1]);M6o.font=this.fontString;M6o.textBaseline=C49;s6o=F6o;P6o=Q6o;H6o=this.w;I6o=this.h;G6o=this.getLineColor();if(this.stem){if(this.stem.d){b6o=this.stx.pixelFromTick(this.stem.t);r6o=this.stx.pixelFromValueAdjusted(l6o,this.stem.t,this.stem.v);X7d.O9X(36);u6o=X7d.x9X(2,s6o,H6o);X7d.O9X(36);d6o=X7d.L9X(2,P6o,I6o);}else if(this.stem.x){b6o=s6o;r6o=P6o;s6o+=this.stem.x;P6o+=this.stem.y;X7d.I9X(36);u6o=X7d.x9X(2,s6o,H6o);X7d.I9X(36);d6o=X7d.L9X(2,P6o,I6o);}M6o.beginPath();if(this.borderColor){M6o.strokeStyle=this.borderColor;}else{M6o.strokeStyle=G6o;}M6o.moveTo(b6o,r6o);M6o.lineTo(u6o,d6o);M6o.stroke();}J6o=M6o.lineWidth;if(this.highlighted){this.stx.canvasColor("stx_annotation_highlight_bg",M6o);X7d.O9X(6);M6o.fillRect(X7d.x9X(J6o,s6o),X7d.L9X(I6o,P6o,2,J6o,X7d.I9X(37)),X7d.x9X(2,J6o,H6o,X7d.O9X(38)),X7d.x9X(2,J6o,I6o,X7d.O9X(38)));}else{if(this.fillColor){M6o.fillStyle=this.fillColor;X7d.O9X(39);M6o.fillRect(s6o,X7d.x9X(2,I6o,P6o),H6o,I6o);}else if(this.stem){M6o.fillStyle=this.stx.containerColor;X7d.I9X(39);M6o.fillRect(s6o,X7d.L9X(2,I6o,P6o),H6o,I6o);}}if(this.borderColor){O49="s";O49+="tx_highl";O49+="ight";O49+="_vector";M6o.beginPath();M6o.strokeStyle=this.highlighted?this.stx.getCanvasColor(O49):this.borderColor;X7d.I9X(6);M6o.rect(X7d.x9X(J6o,s6o),X7d.x9X(I6o,P6o,2,J6o,X7d.I9X(37)),X7d.x9X(2,J6o,H6o,X7d.I9X(38)),X7d.x9X(2,J6o,I6o,X7d.O9X(38)));M6o.stroke();}if(this.highlighted){this.stx.canvasColor("stx_annotation_highlight",M6o);}else{M6o.fillStyle=G6o;}X7d.O9X(6);var Z4K=X7d.x9X(16,18);P6o+=this.padding/Z4K;if(!this.ta){for(var v6o="0">>1536754272;v6o<this.arr.length;v6o++){M6o.fillText(this.arr[v6o],s6o+this.padding,P6o-I6o/2+this.fontSize/2);X7d.I9X(40);var p4K=X7d.x9X(14,20,2,34);P6o+=this.fontSize+p4K;;}}M6o.textBaseline="alphabetic";};q7A.Drawing.annotation.prototype.onChange=function(y6o){o2QQ.l9d();;};q7A.Drawing.annotation.prototype.edit=function(Y6o,j1o){var y7d=o2QQ;var J7Z,D7Z,N7Z,E1o,e6o,X6o,z6o,W6o,d7Z,F7Z,Y7Z,q1o,a1o,c7Z,x1o,p6o,K1o,H59,s59,W59,O1o,H7Z,c1o,g1o;J7Z="inlin";function T1o(h1o){y7d.A9d();return function(P1o){var u49,I1o,R1o,t1o,o1o,V1o,M1o,k1o,C1o,m1o,Z49,X49,S7Z,M7Z,p49,V7Z,e7Z;u49="p";u49+="x";if(P1o){I1o=P1o.keyCode;switch(I1o){case 27:h1o.stx.undo();return;}}R1o=h1o.stx;t1o=h1o.ta;o1o=t1o.value.split(524>590.95?0x1ad5:8244>8980?(4784,673.63)==6590?("0x1418"|4112,"519.77"-0):+"5.09e+3":"\n");V1o=0;R1o.chart.context.font=h1o.fontString;for(var A1o=+"0";A1o<o1o.length;A1o++){M1o=R1o.chart.context.measureText(o1o[A1o]).width;if(M1o>V1o){V1o=M1o;}}y7d.I9X(41);var M2X=y7d.x9X(4,6,11);y7d.I9X(42);var E2X=y7d.x9X(3,9,9,0);k1o=(o1o.length+M2X)*(h1o.fontSize+E2X);if(V1o<50){V1o=+"50";}y7d.O9X(21);t1o.style.width=y7d.x9X(V1o,30,u49);y7d.I9X(0);t1o.style.height=y7d.x9X("px",k1o);C1o=parseInt(q7A.stripPX(t1o.style.top),10);m1o=q7A.stripPX(t1o.style.left);V1o=t1o.clientWidth;k1o=t1o.clientHeight;if(m1o+V1o+100<h1o.stx.chart.canvasWidth){Z49="p";Z49+="x";X49="p";X49+="x";y7d.I9X(0);e6o.style.top=y7d.x9X("px",C1o);y7d.O9X(0);X6o.style.top=y7d.x9X(X49,C1o);y7d.I9X(43);e6o.style.left=y7d.L9X(Z49,V1o,m1o,10);y7d.I9X(43);X6o.style.left=y7d.L9X("px",V1o,m1o,60);}else if(C1o+k1o+ +"30"<h1o.stx.chart.canvasHeight){S7Z="p";S7Z+="x";M7Z="p";M7Z+="x";p49="p";p49+="x";y7d.I9X(43);e6o.style.top=y7d.L9X(p49,k1o,C1o,10);y7d.I9X(43);X6o.style.top=y7d.x9X(M7Z,k1o,C1o,10);y7d.O9X(0);e6o.style.left=y7d.x9X("px",m1o);y7d.I9X(21);X6o.style.left=y7d.L9X(m1o,50,S7Z);}else{V7Z="p";V7Z+="x";e7Z="p";e7Z+="x";y7d.I9X(44);e6o.style.top=y7d.x9X(C1o,"35","px");y7d.I9X(5);X6o.style.top=y7d.x9X(35,e7Z,C1o);y7d.I9X(0);e6o.style.left=y7d.L9X(V7Z,m1o);y7d.I9X(21);X6o.style.left=y7d.x9X(m1o,50,"px");}};}J7Z+="e-bl";J7Z+="ock";D7Z="p";D7Z+="x";N7Z="p";N7Z+="x";E1o=this.stx.panels[this.panelName];if(!E1o){return;}e6o=this.stx.controls.annotationSave;X6o=this.stx.controls.annotationCancel;if(!e6o||!X6o){return;}z6o=this.stx;W6o=this.ta;z6o.editingAnnotation=!![];z6o.undisplayCrosshairs();z6o.openDialog="annotation";if(!W6o){d7Z="En";d7Z+="t";d7Z+="e";d7Z+="r Text";F7Z="stx_annota";F7Z+="tion";Y7Z="TEXT";Y7Z+="AREA";W6o=this.ta=document.createElement(Y7Z);W6o.className=F7Z;W6o.onkeyup=T1o(this);W6o.onmouseup=n1o(z6o);W6o.setAttribute("wrap","hard");if(q7A.isIOS7or8){W6o.setAttribute("placeholder",d7Z);}z6o.chart.container.appendChild(W6o);W6o.style.position="absolute";W6o.style.width="100px";W6o.style.height="20px";W6o.value=this.text;if(q7A.touchDevice){W6o.ontouchstart=function(s1o){s1o.stopPropagation();};;}}q1o=this;W6o.oninput=function(J1o){y7d.A9d();if(J1o.inputType!="historyUndo"&&J1o.inputType!="historyRedo"){q1o.onChange(J1o);}};W6o.style.font=this.fontString;if(this.color){if(this.color=="transparent"||this.color=="auto"){a1o=getComputedStyle(W6o);if(a1o&&q7A.isTransparent(a1o.backgroundColor)){W6o.style.color=z6o.defaultColor;}else{c7Z="#0";c7Z+="00";W6o.style.color=c7Z;;}}else{W6o.style.color=this.color;}}x1o=z6o.pixelFromTick(this.p0[+"0"],E1o.chart);p6o=z6o.pixelFromValueAdjusted(E1o,this.p0[0],this.p0["1"<<998936288]);W6o.style.left=x1o+140<z6o.chart.canvasRight?x1o+N7Z:z6o.chart.canvasRight-200+"px";W6o.style.top=p6o+60<z6o.chart.canvasHeight?p6o-(!isNaN(this.h)?this.h/2:this.defaultHeight)+"px":p6o-60+D7Z;function B1o(f1o){return function(S1o){var m49,i1o;m49="vect";m49+="or";if(f1o.ta.value===""){return;}f1o.text=f1o.ta.value;i1o=f1o.stx;i1o.editingAnnotation=![];f1o.adjust();if(i1o.drawingSnapshot){i1o.undoStamp(q7A.shallowClone(i1o.drawingSnapshot),i1o.exportDrawings());}else{i1o.addDrawing(f1o);}i1o.undo();i1o.cancelTouchSingleClick=!0;i1o.changeOccurred(m49);};}if(this.name=="callout"){W6o.style.left=q7A.stripPX(W6o.style.left)-(!isNaN(this.w)?this.w/+"2":this.defaultWidth)+"px";}q7A.safeClickTouch(e6o,B1o(this));q7A.safeClickTouch(X6o,U1o(this));T1o(this)();function n1o(w1o){return function(N1o){y7d.A9d();if(w1o.manageTouchAndMouse&&q7A.ChartEngine.drawingLine){w1o.mouseup(N1o);}};}e6o.style.display=J7Z;X6o.style.display="inline-block";function U1o(Z1o){y7d.A9d();return function(D1o){var L1o;L1o=Z1o.stx;L1o.editingAnnotation=!{};L1o.undo();L1o.cancelTouchSingleClick=!!{};};}if(j1o){z6o.drawingSnapshot=z6o.exportDrawings();this.hidden=!![];z6o.draw();z6o.activeDrawing=this;q7A.ChartEngine.drawingLine=!!{};Y6o=z6o.chart.tempCanvas.context;z6o.chart.tempCanvas.style.display="block";this.w=W6o.clientWidth;this.h=W6o.clientHeight;q7A.clearCanvas(Y6o.canvas,z6o);this.render(Y6o);this.edit(Y6o);}W6o.focus();if(q7A.isAndroid&&!q7A.is_chrome&&!q7A.isFF){this.priorBottom=z6o.chart.container.style.bottom;K1o=400;H59=-1388925827;s59=35515804;W59=2;for(var I59=1;y7d.g19(I59.toString(),I59.toString().length,14478)!==H59;I59++){y7d.I9X(6);var h2X=y7d.L9X(7182,7695);O1o=z6o.resolveY(p6o)/h2X;W59+=2;}if(y7d.g19(W59.toString(),W59.toString().length,85342)!==s59){y7d.O9X(5);var U2X=y7d.x9X(14,16,98);O1o=z6o.resolveY(p6o)+U2X;}if(O1o>q7A.pageHeight()-K1o){H7Z="p";H7Z+="x";c1o=q7A.pageHeight()-O1o;y7d.O9X(6);g1o=y7d.L9X(c1o,K1o);y7d.O9X(0);z6o.chart.container.style.bottom=y7d.x9X(H7Z,g1o);}}};q7A.Drawing.annotation.prototype.click=function(l1o,v1o,G1o){var H1o;if(this.stx.overXAxis||this.stx.overYAxis){return;}H1o=this.stx.panels[this.panelName];this.copyConfig();this.setPoint(0,v1o,G1o,H1o.chart);this.adjust();this.edit(l1o);return![];};q7A.Drawing.annotation.prototype.reposition=function(F1o,b1o,Q1o,y1o){var u1o,r1o,d1o;if(!b1o){return;}u1o=this.stx.panels[this.panelName];r1o=b1o.tick-Q1o;d1o=b1o.value-y1o;o2QQ.l9d();this.setPoint(0,b1o.p0[0]-r1o,b1o.p0[1]-d1o,u1o.chart);this.render(F1o);};q7A.Drawing.annotation.prototype.intersected=function(p1o,j0o,z1o){var G7d=o2QQ;var W1o,e1o,X1o,Y1o,a0o,x0o,g0o;W1o=this.stx.panels[this.panelName];if(!this.p0){return null;}e1o=this.stx.pixelFromTick(this.p0[0],W1o.chart);G7d.O9X(45);var S2X=G7d.L9X(11,9,11,2,20);G7d.O9X(6);var y2X=G7d.x9X(16,18);X1o=this.stx.pixelFromValueAdjusted(W1o,this.p0[+"0"],this.p0[S2X])-this.h/y2X;Y1o=e1o+this.w;a0o=X1o+this.h;if(this.stem&&this.stem.x){e1o+=this.stem.x;Y1o+=this.stem.x;X1o+=this.stem.y;a0o+=this.stem.y;}x0o=this.stx.pixelFromTick(p1o,W1o.chart);g0o=this.stx.pixelFromValueAdjusted(W1o,p1o,j0o);if(x0o+z1o.r>=e1o&&x0o-z1o.r<=Y1o&&g0o+z1o.r>=X1o&&g0o-z1o.r<=a0o){this.highlighted=!!"1";return{p0:q7A.clone(this.p0),tick:p1o,value:j0o};}return![];};q7A.Drawing.annotation.prototype.abort=function(){var B0o,i0o;B0o=this.stx.controls.annotationSave;i0o=this.stx.controls.annotationCancel;if(B0o){B0o.style.display="none";}if(i0o){i0o.style.display="none";}if(this.ta){this.stx.chart.container.removeChild(this.ta);}this.ta=null;this.stx.openDialog="";this.stx.showCrosshairs();this.stx.editingAnnotation=!!0;q7A.clearCanvas(this.stx.chart.tempCanvas,this.stx);if(q7A.isAndroid&&!q7A.is_chrome&&!q7A.isFF){this.stx.chart.container.style.bottom=this.priorBottom;}q7A.fixScreen();};q7A.Drawing.annotation.prototype.reconstruct=function(t0o,h0o){var l7Z;l7Z="st";l7Z+="y";l7Z+="le";this.stx=t0o;this.color=h0o.col;this.panelName=h0o.pnl;this.d0=h0o.d0;this.tzo0=h0o.tzo0;this.v0=h0o.v0;this.text=t0o.escapeOnSerialize?decodeURIComponent(h0o.text):h0o.text;this.stem=h0o.stem;this.borderColor=h0o.bc;this.fillColor=h0o.bg;this.lineWidth=h0o.lw;this.pattern=h0o.ptrn;this.font=q7A.replaceFields(h0o.fnt,{st:l7Z,sz:"size",wt:"weight",fl:"family"});o2QQ.l9d();if(!this.font){this.font={};}this.adjust();};q7A.Drawing.annotation.prototype.serialize=function(){var m0o,u7Z,k0o;m0o={name:this.name,pnl:this.panelName,col:this.color,d0:this.d0,tzo0:this.tzo0,v0:this.v0,text:this.stx.escapeOnSerialize?encodeURIComponent(this.text):this.text};if(this.font){u7Z="f";u7Z+="l";k0o=q7A.removeNullValues(q7A.replaceFields(this.font,{style:"st",size:"sz",weight:"wt",family:u7Z}));if(!q7A.isEmpty(k0o)){m0o.fnt=k0o;}}if(this.stem){m0o.stem={d:this.stem.d,v:this.stem.v,x:this.stem.x,y:this.stem.y};}if(this.borderColor){m0o.bc=this.borderColor;}if(this.fillColor){m0o.bg=this.fillColor;}if(this.lineWidth){m0o.lw=this.lineWidth;}if(this.pattern){m0o.ptrn=this.pattern;}return m0o;};q7A.Drawing.annotation.prototype.renderText=function(){var R7d=o2QQ;var A0o,M0o,l0o,J0o,v0o,r0o;this.getFontString();A0o=this.stx.panels[this.panelName];if(!A0o){return;}this.arr=this.text.split("\n");R7d.I9X(35);M0o=R7d.x9X(302603232,"0");R7d.l9d();this.stx.chart.context.font=this.fontString;for(var I0o=0;I0o<this.arr.length;I0o++){l0o=this.stx.chart.context.measureText(this.arr[I0o]).width;if(l0o>M0o){M0o=l0o;}}if(M0o===0){R7d.O9X(30);var i2X=R7d.x9X(24,13,310);M0o=i2X*this.defaultWidth;}this.fontSize=q7A.stripPX(this.fontDef.size);R7d.I9X(46);var v2X=R7d.x9X(8491828528,1,5,2122957136);J0o=this.arr.length*(this.fontSize+("2"<<v2X));if(q7A.touchDevice){J0o+=5;}R7d.O9X(30);var t2X=R7d.L9X(22,12,262);this.w=M0o+this.padding*t2X;R7d.I9X(47);var j2X=R7d.L9X(2,5,22,38);this.h=J0o+this.padding*j2X;v0o=this.stx.pixelFromTick(this.p0[0],A0o.chart)+M0o;R7d.I9X(48);var w2X=R7d.x9X(12,32,0,12,7);r0o=this.stx.pixelFromValueAdjusted(A0o,this.p0[0],this.p0[w2X])+J0o;this.p1=[this.stx.tickFromPixel(v0o,A0o.chart),this.stx.valueFromPixel(r0o,A0o)];if(this.stem&&this.stem.d){this.stem.t=this.stx.tickFromDate(this.stem.d,A0o.chart);}};q7A.Drawing.annotation.prototype.adjust=function(){var d0o;o2QQ.A9d();d0o=this.stx.panels[this.panelName];if(!d0o){return;}this.setPoint(0,this.d0,this.v0,d0o.chart);this.renderText();};q7A.Drawing.segment=function(){var X7Z;X7Z="s";X7Z+="e";X7Z+="gment";this.name=X7Z;};q7A.inheritsFrom(q7A.Drawing.segment,q7A.Drawing.BaseTwoPoint);q7A.Drawing.segment.prototype.render=function(g3o){var Z7Z,e0o,K3o,j3o,O3o,n3o,U3o,T3o,q3o,E3o,Y0o,a3o,B3o,x3o,c3o,M0Z,w3o,N3o;Z7Z="so";Z7Z+="li";Z7Z+="d";e0o=this.stx.panels[this.panelName];if(!e0o){return;}K3o=this.stx.pixelFromTick(this.p0[+"0"],e0o.chart);j3o=this.stx.pixelFromTick(this.p1[0],e0o.chart);O3o=this.stx.pixelFromValueAdjusted(e0o,this.p0[0],this.p0[1]);n3o=this.stx.pixelFromValueAdjusted(e0o,this.p1[0],this.p1[1]);U3o=this.lineWidth;T3o=this.getLineColor();q3o={pattern:this.pattern,lineWidth:U3o};if(q3o.pattern=="none"){q3o.pattern=Z7Z;}this.stx.plotLine(K3o,j3o,O3o,n3o,T3o,this.name,g3o,e0o,q3o);if(this.axisLabel&&!this.repositioner){if(this.name=="horizontal"){this.stx.endClip();E3o=this.p0[1];if(e0o.chart.transformFunc){E3o=e0o.chart.transformFunc(this.stx,e0o.chart,E3o);}if(e0o.yAxis.priceFormatter){E3o=e0o.yAxis.priceFormatter(this.stx,e0o,E3o);}else{E3o=this.stx.formatYAxisPrice(E3o,e0o);}this.stx.createYAxisLabel(e0o,E3o,O3o,T3o);this.stx.startClip(e0o.name);}else if(this.name=="vertical"&&this.p0[0]>=0&&!this.stx.chart.xAxis.noDraw){Y0o=this.stx.dateFromTick(this.p0[0],e0o.chart,!"");if(!q7A.ChartEngine.isDailyInterval(this.stx.layout.interval)){o2QQ.O9X(26);var e2X=o2QQ.L9X(1000,5000,8,987);B3o=Y0o.getSeconds()*e2X+Y0o.getMilliseconds();if(c7A.Date&&this.stx.displayZone){a3o=new c7A.Date(Y0o.getTime(),this.stx.displayZone);Y0o=new Date(a3o.getFullYear(),a3o.getMonth(),a3o.getDate(),a3o.getHours(),a3o.getMinutes());Y0o=new Date(Y0o.getTime()+B3o);}}else{Y0o.setHours(0,0,0,0);}x3o=q7A.mmddhhmm(q7A.yyyymmddhhmm(Y0o));if(e0o.chart.xAxis.formatter){x3o=e0o.chart.xAxis.formatter(Y0o,this.name,null,null,x3o);}else if(this.stx.internationalizer){if(Y0o.getHours()!==0||Y0o.getMinutes()!==0){c3o=this.stx.internationalizer.monthDay.format(Y0o);c3o+=" "+this.stx.internationalizer.hourMinute.format(Y0o);}else{c3o=this.stx.internationalizer.yearMonthDay.format(Y0o);}x3o=c3o;}this.stx.endClip();this.stx.createXAxisLabel({panel:e0o,txt:x3o,x:K3o,backgroundColor:T3o,color:null,pointed:!![],padding:2});this.stx.startClip(e0o.name);}}if(this.highlighted&&this.name!="horizontal"&&this.name!="vertical"){M0Z="p";M0Z+="0";w3o=this.highlighted==M0Z?!!1:!"1";N3o=this.highlighted=="p1"?!![]:!!0;this.littleCircle(g3o,K3o,O3o,w3o);this.littleCircle(g3o,j3o,n3o,N3o);}};q7A.Drawing.segment.prototype.abort=function(){this.stx.setMeasure(null,null,null,null,!!"");};q7A.Drawing.segment.prototype.intersected=function(f3o,i3o,S3o){var E0Z,Z3o,D3o,h3o;o2QQ.l9d();E0Z="vert";E0Z+="i";E0Z+="c";E0Z+="al";if(!this.p0||!this.p1){return null;}Z3o=this.name;if(Z3o!="horizontal"&&Z3o!=E0Z&&Z3o!="gartley"){D3o={0:this.p0,1:this.p1};for(var L3o in D3o){if(this.pointIntersection(D3o[L3o][0],D3o[L3o][1],S3o)){o2QQ.O9X(0);this.highlighted=o2QQ.L9X(L3o,("1130"-0,1032)<7940?(5082,2170)!==(802.15,737)?"p":133.74:(0x253b,3.71e+3));return{action:"drag",point:((+"528.83",7271)>(571.78,6532)?"p":(8102,5174)>=(13.2,561.47)?(9.04e+3,"X"):(91.03,!"1"))+L3o};}}}if(Z3o=="horizontal"||Z3o=="vertical"){Z3o="line";}h3o=this.lineIntersection(f3o,i3o,S3o,Z3o);if(h3o){this.highlighted=!!{};return{action:"move",p0:q7A.clone(this.p0),p1:q7A.clone(this.p1),tick:f3o,value:i3o};}return null;};q7A.Drawing.segment.prototype.configs=["color","lineWidth",h0Z];q7A.Drawing.segment.prototype.copyConfig=function(V3o){q7A.Drawing.copyConfig(this,V3o);o2QQ.A9d();if(this.pattern=="none"&&this.configs.indexOf("fillColor")==-1){this.pattern="solid";}};q7A.Drawing.segment.prototype.reconstruct=function(C3o,t3o){this.stx=C3o;this.color=t3o.col;this.panelName=t3o.pnl;this.pattern=t3o.ptrn;this.lineWidth=t3o.lw;this.d0=t3o.d0;this.d1=t3o.d1;this.tzo0=t3o.tzo0;o2QQ.A9d();this.tzo1=t3o.tzo1;this.v0=t3o.v0;this.v1=t3o.v1;this.adjust();};q7A.Drawing.segment.prototype.serialize=function(){o2QQ.l9d();return{name:this.name,pnl:this.panelName,col:this.color,ptrn:this.pattern,lw:this.lineWidth,d0:this.d0,d1:this.d1,tzo0:this.tzo0,tzo1:this.tzo1,v0:this.v0,v1:this.v1};};q7A.Drawing.line=function(){this.name="line";};q7A.inheritsFrom(q7A.Drawing.line,q7A.Drawing.segment);q7A.Drawing.line.prototype.dragToDraw=![];q7A.Drawing.line.prototype.calculateOuterSet=function(A3o){var K7d=o2QQ;var m3o,k3o,o3o;if(this.p0[0]==this.p1[0]||this.p0[1]==this.p1[1]||q7A.ChartEngine.isDailyInterval(this.stx.layout.interval)){return;}m3o={x0:this.p0[0],y0:this.p0[1],x1:this.p1["0"&2147483647],y1:this.p1[1]};if(m3o.x0>m3o.x1){m3o={x0:this.p1[0],y0:this.p1[1],x1:this.p0[0],y1:this.p0[1]};}K7d.O9X(0);var o2X=K7d.L9X(929,71);k3o=m3o.x0-o2X;K7d.O9X(6);var V2X=K7d.x9X(5,1856858501);o3o=m3o.x1+("1000"<<V2X);this.v0B=q7A.yIntersection(m3o,k3o);this.v1B=q7A.yIntersection(m3o,o3o);this.d0B=this.stx.dateFromTick(k3o,A3o.chart);this.d1B=this.stx.dateFromTick(o3o,A3o.chart);};q7A.Drawing.line.prototype.click=function(I3o,M3o,P3o){var R3o;o2QQ.A9d();R3o=this.stx.panels[this.panelName];if(!R3o){return;}this.copyConfig();if(!this.penDown){this.setPoint(0,M3o,P3o,R3o.chart);this.penDown=!"";return!{};}if(this.accidentalClick(M3o,P3o)){return this.dragToDraw;}o2QQ.I9X(49);this.setPoint(o2QQ.x9X(0,"1"),M3o,P3o,R3o.chart);this.calculateOuterSet(R3o);this.penDown=!"1";return!"";;};q7A.Drawing.line.prototype.reconstruct=function(J3o,s3o){this.stx=J3o;this.color=s3o.col;this.panelName=s3o.pnl;this.pattern=s3o.ptrn;this.lineWidth=s3o.lw;this.v0=s3o.v0;this.v1=s3o.v1;this.d0=s3o.d0;this.d1=s3o.d1;this.tzo0=s3o.tzo0;this.tzo1=s3o.tzo1;if(s3o.d0B){this.d0B=s3o.d0B;this.d1B=s3o.d1B;this.v0B=s3o.v0B;this.v1B=s3o.v1B;}this.adjust();};q7A.Drawing.line.prototype.serialize=function(){var H3o;H3o={name:this.name,pnl:this.panelName,col:this.color,ptrn:this.pattern,lw:this.lineWidth,d0:this.d0,d1:this.d1,tzo0:this.tzo0,tzo1:this.tzo1,v0:this.v0,v1:this.v1};if(this.d0B){H3o.d0B=this.d0B;H3o.d1B=this.d1B;H3o.v0B=this.v0B;H3o.v1B=this.v1B;}return H3o;};q7A.Drawing.line.prototype.adjust=function(){var l3o;l3o=this.stx.panels[this.panelName];if(!l3o){return;}o2QQ.l9d();this.setPoint(0,this.d0,this.v0,l3o.chart);this.setPoint(1,this.d1,this.v1,l3o.chart);if(q7A.ChartEngine.isDailyInterval(this.stx.layout.interval)&&this.d0B){this.setPoint(0,this.d0B,this.v0B,l3o.chart);this.setPoint(1,this.d1B,this.v1B,l3o.chart);}};q7A.Drawing.horizontal=function(){var U0Z;U0Z="ho";U0Z+="ri";U0Z+="zont";U0Z+="al";o2QQ.A9d();this.name=U0Z;};q7A.inheritsFrom(q7A.Drawing.horizontal,q7A.Drawing.segment);q7A.Drawing.horizontal.prototype.dragToDraw=!1;q7A.Drawing.horizontal.prototype.measure=function(){};q7A.Drawing.horizontal.prototype.click=function(u3o,G3o,b3o){var v3o;v3o=this.stx.panels[this.panelName];if(!v3o){return;}this.copyConfig();this.setPoint(0,G3o,b3o,v3o.chart);return!!{};;};q7A.Drawing.horizontal.prototype.intersected=function(F3o,Q3o,W3o){var S0Z,y3o,r3o,d3o;if(this.lineIntersection(F3o,Q3o,W3o,"line")){S0Z="m";S0Z+="o";S0Z+="v";S0Z+="e";y3o=this.stx;r3o=y3o.chart.dataSet.length;d3o=this.p0[1];this.highlighted=!"";return{action:S0Z,p0:[r3o-2,d3o],p1:[r3o-1,d3o],tick:F3o,value:Q3o};}return null;};q7A.Drawing.horizontal.prototype.reconstruct=function(e3o,z3o){this.stx=e3o;this.color=z3o.col;this.panelName=z3o.pnl;this.pattern=z3o.ptrn;this.lineWidth=z3o.lw;this.v0=z3o.v0;this.d0=z3o.d0;this.tzo0=z3o.tzo0;o2QQ.l9d();this.axisLabel=z3o.al;this.adjust();};q7A.Drawing.horizontal.prototype.serialize=function(){var X3o;o2QQ.A9d();X3o={name:this.name,pnl:this.panelName,col:this.color,ptrn:this.pattern,lw:this.lineWidth,v0:this.v0,d0:this.d0,tzo0:this.tzo0,al:this.axisLabel};return X3o;};q7A.Drawing.horizontal.prototype.adjust=function(){var p3o;p3o=this.stx.panels[this.panelName];if(!p3o){return;}this.setPoint(0,this.d0,this.v0,p3o.chart);o2QQ.O9X(0);o2QQ.A9d();var b2X=o2QQ.L9X(94,6);this.p1=[this.p0[+"0"]+b2X,this.p0[1]];};q7A.Drawing.horizontal.prototype.configs=[y0Z,"lineWidth","pattern","axisLabel"];q7A.Drawing.vertical=function(){o2QQ.l9d();this.name="vertical";};q7A.inheritsFrom(q7A.Drawing.vertical,q7A.Drawing.horizontal);q7A.Drawing.vertical.prototype.measure=function(){};q7A.Drawing.vertical.prototype.intersected=q7A.Drawing.segment.prototype.intersected;q7A.Drawing.vertical.prototype.adjust=function(){var Y3o;Y3o=this.stx.panels[this.panelName];if(!Y3o){return;}this.setPoint(0,this.d0,this.v0,Y3o.chart);o2QQ.O9X(10);var Y2X=o2QQ.x9X(91,8,15,14);this.p1=[this.p0[+"0"],this.p0[+"1"]+Y2X];};q7A.Drawing.measure=function(){o2QQ.l9d();this.name="measure";};q7A.inheritsFrom(q7A.Drawing.measure,q7A.Drawing.segment);q7A.Drawing.measure.prototype.click=function(O9o,E9o,K9o){this.copyConfig();if(!this.penDown){this.p0=[E9o,K9o];this.penDown=!!{};return![];}this.stx.undo();this.penDown=!{};o2QQ.l9d();return!![];};q7A.Drawing.rectangle=function(){this.name="rectangle";};q7A.inheritsFrom(q7A.Drawing.rectangle,q7A.Drawing.BaseTwoPoint);q7A.Drawing.rectangle.prototype.render=function(T9o){var C7d=o2QQ;var q9o,n9o,U9o,w9o,N9o,f9o,S9o,V9o,C9o,Z9o,D9o,c9o,i0Z,R9o,P9o;q9o=this.stx.panels[this.panelName];if(!q9o){return;}n9o=this.stx.pixelFromTick(this.p0[+"0"],q9o.chart);U9o=this.stx.pixelFromTick(this.p1[+"0"],q9o.chart);w9o=this.stx.pixelFromValueAdjusted(q9o,this.p0["0">>12799456],this.p0[1]);N9o=this.stx.pixelFromValueAdjusted(q9o,this.p1[0],this.p1[+"1"]);f9o=Math.round(Math.min(n9o,U9o))+ +"0.5";S9o=Math.min(w9o,N9o);V9o=Math.max(n9o,U9o)-f9o;C9o=Math.max(w9o,N9o)-S9o;Z9o=this.color;if(this.highlighted){Z9o=this.stx.getCanvasColor("stx_highlight_vector");}D9o=this.fillColor;if(D9o&&!q7A.isTransparent(D9o)&&D9o!="auto"){T9o.beginPath();T9o.rect(f9o,S9o,V9o,C9o);T9o.fillStyle=D9o;T9o.globalAlpha=0.2;T9o.fill();T9o.closePath();T9o.globalAlpha=1;}c9o={pattern:this.pattern,lineWidth:this.lineWidth};if(this.highlighted&&c9o.pattern=="none"){i0Z="soli";i0Z+="d";c9o.pattern=i0Z;if(c9o.lineWidth=="0.1"-0){c9o.lineWidth=1;}}this.stx.plotLine(n9o,U9o,w9o,w9o,Z9o,"segment",T9o,q9o,c9o);C7d.O9X(6);C7d.A9d();this.stx.plotLine(U9o,U9o,C7d.x9X(0.5,w9o),C7d.L9X(0.5,N9o,C7d.O9X(0)),Z9o,"segment",T9o,q9o,c9o);this.stx.plotLine(U9o,n9o,N9o,N9o,Z9o,"segment",T9o,q9o,c9o);C7d.I9X(0);this.stx.plotLine(n9o,n9o,C7d.L9X(0.5,N9o),C7d.x9X(0.5,w9o,C7d.I9X(6)),Z9o,"segment",T9o,q9o,c9o);if(this.highlighted){R9o=this.highlighted=="p0"?!!"1":![];P9o=this.highlighted=="p1"?!!1:!!"";this.littleCircle(T9o,n9o,w9o,R9o);this.littleCircle(T9o,U9o,N9o,P9o);}};q7A.Drawing.rectangle.prototype.intersected=function(G9o,b9o,F9o){o2QQ.l9d();var H9o;if(!this.p0||!this.p1){return null;}H9o={0:this.p0,1:this.p1};for(var s9o in H9o){if(this.pointIntersection(H9o[s9o][0],H9o[s9o][1],F9o)){o2QQ.I9X(0);this.highlighted=o2QQ.x9X(s9o,(4507,9910)!=4048?"p": false?undefined:("V","h"));return{action:"drag",point:"p"+s9o};}}if(this.boxIntersection(G9o,b9o,F9o)){this.highlighted=!!{};return{action:"move",p0:q7A.clone(this.p0),p1:q7A.clone(this.p1),tick:G9o,value:b9o};}return null;};q7A.Drawing.rectangle.prototype.configs=[v0Z,t0Z,j0Z,w0Z];q7A.Drawing.rectangle.prototype.reconstruct=function(y9o,Q9o){this.stx=y9o;this.color=Q9o.col;this.fillColor=Q9o.fc;this.panelName=Q9o.pnl;this.pattern=Q9o.ptrn;this.lineWidth=Q9o.lw;this.d0=Q9o.d0;this.d1=Q9o.d1;this.tzo0=Q9o.tzo0;this.tzo1=Q9o.tzo1;this.v0=Q9o.v0;this.v1=Q9o.v1;this.adjust();};q7A.Drawing.rectangle.prototype.serialize=function(){o2QQ.l9d();return{name:this.name,pnl:this.panelName,col:this.color,fc:this.fillColor,ptrn:this.pattern,lw:this.lineWidth,d0:this.d0,d1:this.d1,tzo0:this.tzo0,tzo1:this.tzo1,v0:this.v0,v1:this.v1};};q7A.Drawing.shape=function(){var T7d=o2QQ;var x59,d59,L59;this.name="shape";this.radians=0;T7d.O9X(50);this.a=T7d.x9X("0",0);this.rotating=!1;x59=-1447985585;d59=-775396478;L59=2;for(var c59=1;T7d.Y19(c59.toString(),c59.toString().length,3802)!==x59;c59++){this.textMeasure=!1;this.configurator="shape";L59+=2;}if(T7d.Y19(L59.toString(),L59.toString().length,32748)!==d59){this.textMeasure=!!{};this.configurator="";}T7d.I9X(35);T7d.A9d();this.dimension=[T7d.x9X(1842452256,"0"),0];this.points=[];};q7A.inheritsFrom(q7A.Drawing.shape,q7A.Drawing.BaseTwoPoint);q7A.Drawing.shape.prototype.setRotationOnInitialDraw=!"1";q7A.Drawing.shape.prototype.measure=function(){};q7A.Drawing.shape.prototype.render=function(W9o){var h7d=o2QQ;var o0Z,N2o,Z2o,V2o,e0Z,C2o,R2o,E2o,P2o,V0Z,M2o,I2o,z9o,X9o,p9o,b0Z,T2o,q2o,J2o,r2o,H2o,d2o,Y0Z,l2o,G2o,u2o,g0Z;o0Z="undefi";o0Z+="ned";if(!this.points.length){return;}N2o=this.stx.panels[this.panelName];if(!N2o){return;}Z2o=this.stx.pixelFromTick(this.p0[+"0"],N2o.chart);V2o=this.stx.pixelFromValueAdjusted(N2o,this.p0[0],this.p0[1]);if(this.p1){e0Z="#";e0Z+="0";e0Z+="00000";C2o=this.stx.pixelFromTick(this.p1["0"^0],N2o.chart);R2o=this.stx.pixelFromValueAdjusted(N2o,this.p1[+"0"],this.p1[1]);W9o.globalAlpha=+"0.5";W9o.fillStyle=e0Z;if(this.rotating){h7d.O9X(51);this.radians=Math.atan(h7d.x9X(Z2o,V2o,C2o,R2o));if(C2o<Z2o){this.radians+=Math.PI;}else if(R2o<V2o){h7d.I9X(42);var g2X=h7d.x9X(9,18,6,25);this.radians+=g2X*Math.PI;}h7d.I9X(0);var F2X=h7d.L9X(9,1);this.a=parseInt((this.radians*36/Math.PI).toFixed(0),F2X)*("5"-0);this.a%=360;h7d.I9X(52);var T2X=h7d.x9X(1620,1800,1);this.radians=this.a*Math.PI/T2X;if(this.textMeasure){W9o.fillText(this.a+"\xB0",C2o+10,R2o+10);}}else if(this.penDown){this.sx=Math.max(+"1",parseFloat(Math.abs(2*(C2o-Z2o)/this.dimension[0]).toFixed("1">>1471220896)));if(C2o<Z2o){this.sx*=-1;}this.sy=Math.max(1,parseFloat(Math.abs(2*(R2o-V2o)/this.dimension[1]).toFixed(1)));if(R2o<V2o){this.sy*=-1;}if(this.textMeasure){W9o.fillText(this.sx+"x,"+this.sy+(+"5559"===295.23?(+"0x1286",0x118b): false?undefined:"x"),C2o+this.sx+5,R2o+this.sy+("5"<<841216704));}}W9o.globalAlpha=1;}if(_typeof(this.sx)===o0Z){h7d.I9X(53);this.sx=this.sy=h7d.L9X(568655904,"1");}E2o=this.lineWidth;if(!E2o){E2o=1.1;}P2o={pattern:this.pattern,lineWidth:E2o};if(this.highlighted&&P2o.pattern=="none"){V0Z="so";V0Z+="l";V0Z+="i";V0Z+="d";P2o.pattern=V0Z;if(P2o.lineWidth==0.1){P2o.lineWidth=1;}}M2o=this.color;if(M2o=="auto"||q7A.isTransparent(M2o)){M2o=this.stx.defaultColor;}if(this.highlighted){M2o=this.stx.getCanvasColor("stx_highlight_vector");if(E2o==0.1){h7d.O9X(6);E2o=h7d.L9X(0,"1.1");}}I2o=this.fillColor;h7d.I9X(17);var x2X=h7d.x9X(9,2,18,27);E2o/=Math.abs(this.sx*this.sy)*x2X/(Math.abs(this.sx)+Math.abs(this.sy));W9o.save();W9o.translate(Z2o,V2o);W9o.rotate(this.radians);W9o.scale(this.sx,N2o.yAxis.flipped?-this.sy:this.sy);p9o={x:(this.dimension[0]-1)/2,y:(this.dimension[1]-1)/2};for(z9o=0;z9o<this.points.length;z9o++){b0Z="no";b0Z+="n";b0Z+="e";W9o.beginPath();for(X9o=0;X9o<this.points[z9o].length;X9o++){if(this.points[z9o][X9o]=="M"){T2o=this.points[z9o][++X9o]-p9o.x;q2o=this.points[z9o][++X9o]-p9o.y;W9o.moveTo(T2o,q2o);}else if(this.points[z9o][X9o]=="L"){T2o=this.points[z9o][++X9o]-p9o.x;q2o=this.points[z9o][++X9o]-p9o.y;W9o.lineTo(T2o,q2o);}else if(this.points[z9o][X9o]=="Q"){J2o=this.points[z9o][++X9o]-p9o.x;H2o=this.points[z9o][++X9o]-p9o.y;T2o=this.points[z9o][++X9o]-p9o.x;q2o=this.points[z9o][++X9o]-p9o.y;W9o.quadraticCurveTo(J2o,H2o,T2o,q2o);}else if(this.points[z9o][X9o]==(684.53===(6520,"7060"^0)?"H":254.2>7860?"5.40e+3"^0:"B")){J2o=this.points[z9o][++X9o]-p9o.x;H2o=this.points[z9o][++X9o]-p9o.y;r2o=this.points[z9o][++X9o]-p9o.x;d2o=this.points[z9o][++X9o]-p9o.y;T2o=this.points[z9o][++X9o]-p9o.x;q2o=this.points[z9o][++X9o]-p9o.y;W9o.bezierCurveTo(J2o,H2o,r2o,d2o,T2o,q2o);}}W9o.closePath();if(I2o&&!q7A.isTransparent(I2o)&&I2o!="auto"){W9o.fillStyle=I2o;W9o.fill();;}if(M2o&&this.pattern!=b0Z){W9o.strokeStyle=M2o;W9o.lineWidth=E2o;if(W9o.setLineDash){W9o.setLineDash(q7A.borderPatternToArray(E2o,this.pattern));W9o.lineDashOffset=0;;}W9o.stroke();}}W9o.restore();W9o.save();W9o.translate(Z2o,V2o);W9o.rotate(this.radians);if(this.highlighted){Y0Z="p";Y0Z+="0";l2o=this.highlighted==Y0Z?!!1:!!0;G2o=this.highlighted=="p1"?!!{}:!"1";u2o=this.highlighted=="p2"?!![]:!{};this.littleCircle(W9o,0,0,l2o);h7d.O9X(35);this.mover(W9o,h7d.L9X(2007912000,"0"),0,l2o);this.littleCircle(W9o,this.sx*this.dimension[0]/2,this.sy*this.dimension[1]/2,G2o);this.resizer(W9o,this.sx*this.dimension[0]/2,this.sy*this.dimension[+"1"]/2,G2o);this.littleCircle(W9o,this.sx*this.dimension[0]/2,0,u2o);this.rotator(W9o,this.sx*this.dimension[+"0"]/2,+"0",u2o);W9o.globalAlpha=0.5;W9o.fillStyle="#000000";if(this.textMeasure){g0Z="x";g0Z+=",";W9o.fillText(this.sx+g0Z+this.sy+((5926,6561)!==(152.78,55)?688.74>="6543"*1?(973.07,0xfbb):"x":+"50.81"),this.sx*this.dimension[0]/2+12,this.sy*this.dimension[1]/2+5);W9o.fillText(this.a+(1525>(5340,5954)?2975<=(5650,"1591">>1017189184)?(!"1",0x2361):("638.09"-0,4190)<(3170,2610)?(366.52,7.10e+3):!1:"\xB0"),this.sx*this.dimension[0]/2+ +"12","5"<<521420512);}W9o.globalAlpha=1;}else if(this.penDown){if(this.rotating){this.rotator(W9o,this.sx*this.dimension[0]/2,+"0",!!"1");}else{this.resizer(W9o,this.sx*this.dimension[0]/2,this.sy*this.dimension[1]/2,!!1);}}W9o.restore();};q7A.Drawing.shape.prototype.reposition=function(O5o,F2o,W2o,K5o){var u7d=o2QQ;u7d.A9d();var Q2o,T5o,g5o,e2o,X2o,p2o,a5o;if(!F2o){return;}Q2o=this.stx.panels[this.panelName];if(F2o.action=="move"){T5o=F2o.tick-W2o;g5o=F2o.value-K5o;this.setPoint(0,F2o.p0[0]-T5o,F2o.p0["1"<<27474400]-g5o,Q2o.chart);this.render(O5o);}else{e2o=this.stx.pixelFromTick(this.p0[0],Q2o.chart);X2o=this.stx.pixelFromValueAdjusted(Q2o,this.p0[0],this.p0[1]);p2o=this.stx.pixelFromTick(W2o,Q2o.chart);a5o=this.stx.pixelFromValueAdjusted(Q2o,W2o,K5o);if(F2o.action=="scale"){this[F2o.point]=[W2o,K5o];this.sx=parseFloat((((p2o-e2o)*Math.cos(this.radians)+(a5o-X2o)*Math.sin(this.radians))/(this.dimension[0]/2)).toFixed(1));if(Math.abs(this.sx)<1){this.sx/=Math.abs(this.sy);}this.sy=parseFloat((((a5o-X2o)*Math.cos(this.radians)-(p2o-e2o)*Math.sin(this.radians))/(this.dimension["1"*1]/2)).toFixed(1));if(Math.abs(this.sy)<("1"&2147483647)){this.sy/=Math.abs(this.sy);}this.render(O5o);}else if(F2o.action=="rotate"){this[F2o.point]=[W2o,K5o];u7d.I9X(51);this.radians=Math.atan(u7d.L9X(e2o,X2o,p2o,a5o));if(p2o<e2o){this.radians+=Math.PI;}else if(a5o<X2o){u7d.I9X(54);var d2X=u7d.x9X(3,4,12,14,1);this.radians+=d2X*Math.PI;}u7d.O9X(0);var L2X=u7d.x9X(9,1);u7d.O9X(11);var z2X=u7d.L9X(0,10,5);this.a=parseInt((this.radians*36/Math.PI).toFixed(0),L2X)*z2X;if(this.sx<0){u7d.O9X(55);var c2X=u7d.L9X(5,6,3240,18,3816);this.a=this.a+c2X;}this.a%=360;u7d.O9X(43);var A2X=u7d.x9X(125,11,26,18);this.radians=this.a*Math.PI/A2X;this.render(O5o);}}};q7A.Drawing.shape.prototype.intersected=function(i5o,o5o,P5o){var i7d=o2QQ;var N5o,A5o,R5o,U5o,w5o,S5o,h5o,V5o,t5o,C5o,m5o,k5o,M5o,f5o,Z5o,D5o,T0Z,F0Z;if(!this.p0){return null;}if(this.stx.repositioningDrawing==this&&this.stx.repositioningDrawing.repositioner){return this.stx.repositioningDrawing.repositioner;}N5o=this.stx.panels[this.panelName];A5o=this.stx.pixelFromTick(this.p0["0"-0],N5o.chart);R5o=this.stx.pixelFromValueAdjusted(N5o,this.p0[0],this.p0[1]);U5o=this.stx.pixelFromTick(i5o,N5o.chart);w5o=this.stx.pixelFromValueAdjusted(N5o,i5o,o5o);U5o-=A5o;w5o-=R5o;S5o=w5o;h5o=U5o;U5o=Math.cos(this.radians)*h5o+Math.sin(this.radians)*S5o;w5o=Math.cos(this.radians)*S5o-Math.sin(this.radians)*h5o;U5o/=this.sx;w5o/=this.sy;this.padding=q7A.ensureDefaults(this.padding||{},{left:0,right:0,top:0,bottom:0});V5o=this.padding.right+this.padding.left;t5o=this.padding.bottom+this.padding.top;C5o=Math.pow(q7A.touchDevice?25:5+this.littleCircleRadius(),2);m5o=Math.abs(C5o/(this.sx*this.sy));k5o=3;i7d.I9X(0);var B2X=i7d.L9X(1,1);i7d.I9X(52);var n2X=i7d.x9X(15,17,1);i7d.I9X(56);var N2X=i7d.x9X(5,1,9,4);i7d.I9X(17);var k2X=i7d.x9X(19,19,0,36);i7d.O9X(57);var P2X=i7d.L9X(5,1,5,1,1);M5o=Math.pow((this.dimension[0]-V5o+k5o)/B2X,n2X)+Math.pow((this.dimension[N2X]-t5o+k5o)/k2X,P2X)>Math.pow(U5o-V5o/("2"&2147483647),+"2")+Math.pow(w5o-t5o/+"2",+"2");i7d.I9X(55);var G2X=i7d.L9X(18,2,18,8,16);i7d.I9X(6);var D2X=i7d.L9X(12,14);f5o=(C5o-(Math.pow(U5o*this.sx,G2X)+Math.pow(w5o*this.sy,D2X)))/Math.abs(this.sx*this.sy);i7d.O9X(9);var J2X=i7d.x9X(16,14);i7d.O9X(58);var f2X=i7d.L9X(1,15,4,0,12);i7d.O9X(59);var H2X=i7d.x9X(8,13,18,380);i7d.O9X(60);i7d.A9d();var s2X=i7d.L9X(3,0,6,4,2);Z5o=m5o-Math.pow(U5o-this.dimension[0]/J2X,+"2")-Math.pow(w5o-this.dimension[f2X]/H2X,s2X);i7d.I9X(11);var W2X=i7d.L9X(0,6,4);i7d.O9X(0);var q2X=i7d.L9X(2,0);i7d.O9X(61);var I2X=i7d.L9X(7,8,20,2,0);D5o=m5o-Math.pow(U5o-this.dimension[0]/W2X,q2X)-Math.pow(w5o,I2X);if(M5o){T0Z="p";T0Z+="0";if(Z5o>=D5o&&Z5o>=f5o&&Z5o>-1){F0Z="s";F0Z+="c";F0Z+="ale";this.highlighted="p1";return{action:F0Z};}if(D5o>=Z5o&&D5o>=f5o&&D5o>-1){this.highlighted="p2";return{action:"rotate"};}this.highlighted=f5o>-1?T0Z:!![];return{action:"move",p0:q7A.clone(this.p0),tick:i5o,value:o5o};}return null;};q7A.Drawing.shape.prototype.configs=["color","fillColor","lineWidth","pattern"];q7A.Drawing.shape.prototype.littleCircleRadius=function(){o2QQ.A9d();return+"3";};q7A.Drawing.shape.prototype.click=function(G5o,s5o,v5o){var I5o;if(!this.points.length){return!1;}this.copyConfig();I5o=this.stx.panels[this.panelName];if(!this.penDown){this.setPoint(0,s5o,v5o,I5o.chart);this.penDown=!!{};return![];}o2QQ.l9d();this.setPoint(1,s5o,v5o,I5o.chart);if(this.rotating||!this.setRotationOnInitialDraw){this.penDown=![];this.rotating=![];return!!{};;}this.rotating=!!1;return!!"";};q7A.Drawing.shape.prototype.adjust=function(){var r5o,d5o,b5o;o2QQ.A9d();r5o=this.stx.panels[this.panelName];if(!r5o){return;}d5o=this.name+"_v"+(this.version||0);if(q7A.Drawing[d5o]){b5o=new q7A.Drawing[d5o]();this.name=b5o.name;this.dimension=b5o.dimension;this.padding=b5o.padding;this.points=b5o.points;this.version=b5o.version;}this.setPoint(0,this.d0,this.v0,r5o.chart);o2QQ.O9X(11);var a2X=o2QQ.L9X(0,11,6);this.radians=Math.round(this.a/a2X)*Math.PI/("36"&2147483647);};q7A.Drawing.shape.prototype.reconstruct=function(Q5o,F5o){o2QQ.A9d();this.stx=Q5o;this.color=F5o.col;this.fillColor=F5o.fc;this.panelName=F5o.pnl;this.pattern=F5o.ptrn;this.lineWidth=F5o.lw;this.d0=F5o.d0;this.v0=F5o.v0;this.tzo0=F5o.tzo0;this.a=F5o.a;this.sx=F5o.sx;this.sy=F5o.sy;this.version=F5o.ver;this.adjust();};q7A.Drawing.shape.prototype.serialize=function(){o2QQ.A9d();return{name:this.name,pnl:this.panelName,col:this.color,fc:this.fillColor,ptrn:this.pattern,lw:this.lineWidth,d0:this.d0,v0:this.v0,tzo0:this.tzo0,a:this.a,sx:this.sx,sy:this.sy,ver:this.version};};q7A.Drawing.arrow=function(){var f7d=o2QQ;this.name="arrow";f7d.A9d();this.version=1;this.dimension=[11,22];this.padding={left:+"0",right:0,top:11,bottom:0};f7d.O9X(1);this.points=[["M",3,21,(2160,40)<=4980?"L":5420<(8229,"9448"<<1141739808)?(0xa2,747.62):"0x1c51"^0,7,21,(7090,"4237"^0)<=("6449"&2147483647,534)?(0xf36,"6.28e+3"^0):"L",7,16,"L",10,16,"L",5,11,(1710,+"6494")<=("805.93"*1,4735)?(5810,793.1)===870.83?!{}:("9740"|8708)<19?0xa0d:(601.60,28.56):"L",f7d.x9X(1,"0"),f7d.L9X(2110521792,"16",f7d.O9X(53)),"L",3,16, false?undefined:(1092,"4740"-0)===("74">>1502731328,3020)?9.20e+3:"L",3,21]];;};q7A.inheritsFrom(q7A.Drawing.arrow,q7A.Drawing.shape);q7A.Drawing.getDrawingToolList=function(X5o){var z5o,e5o;z5o={};e5o={arrow_v0:!!{},BaseTwoPoint:!"",fibonacci:!0,shape:!""};o2QQ.A9d();q7A.extend(e5o,X5o);for(var y5o in q7A.Drawing){if(!e5o[y5o]&&q7A.Drawing[y5o].prototype.render){z5o[new q7A.Drawing[y5o]().name]=y5o;}}return z5o;};};t54=function t54(Y5o){var p5o;p5o=typeof _CIQ!=="undefined"?_CIQ:Y5o.CIQ;p5o.EaseMachine=function(a4o,x4o,E4o,K4o){o2QQ.l9d();this.fc=a4o;this.ms=x4o;if(E4o||E4o===+"0"){this.reset(E4o,K4o);}};p5o.EaseMachine.prototype.reset=function(O4o,q4o){if(!O4o&&O4o!=="0"<<1565242656){O4o=this.currentValues;}this.hasCompleted=!"1";this.running=!{};this.okayToRun=!"";o2QQ.O9X(62);this.useNameValuePairs=o2QQ.x9X("object",_typeof(q4o));this.startTime=Date.now();o2QQ.l9d();if(this.useNameValuePairs){this.startValues=O4o;this.endValues=q4o;}else{this.startValues={"default":O4o};this.endValues={"default":q4o};}this.changeValues={};this.currentValues={};for(var T4o in this.startValues){this.changeValues[T4o]=this.endValues[T4o]-this.startValues[T4o];}};p5o.EaseMachine.prototype.next=function(){var x0Z,c4o;x0Z="defa";x0Z+="ult";c4o=Date.now();if(c4o>=this.startTime+this.ms){c4o=this.startTime+this.ms;this.hasCompleted=!![];this.running=![];}this.currentValues={};for(var g4o in this.changeValues){this.currentValues[g4o]=this.fc(c4o-this.startTime,this.startValues[g4o],this.changeValues[g4o],this.ms);}if(!this.useNameValuePairs){return this.currentValues[x0Z];}return this.currentValues;};p5o.EaseMachine.prototype.hasCompleted=!!{};p5o.EaseMachine.prototype.run=function(w4o,U4o,n4o,N4o){var j4o;if(this.afid){cancelAnimationFrame(this.afid);}o2QQ.A9d();if(U4o||U4o===0){this.reset(U4o,n4o);}else if(n4o||n4o===0){this.reset(this.currentValues,n4o);}j4o=this;this.running=!![];if(N4o){this.afid=requestAnimationFrame(B4o);}else{B4o();}function B4o(){var L4o;j4o.afid=null;if(!j4o.okayToRun){return;}L4o=j4o.next();w4o(L4o);if(j4o.hasCompleted){return;}j4o.afid=requestAnimationFrame(B4o);}};p5o.EaseMachine.prototype.stop=function(){var d0Z;d0Z="unde";d0Z+="fined";if(this.afid){cancelAnimationFrame(this.afid);}this.afid=null;this.okayToRun=!!"";this.hasCompleted=!!{};this.running=!{};o2QQ.A9d();if(_typeof(this.useNameValuePairs)==d0Z){return{};}if(!this.useNameValuePairs){return this.currentValues["default"];}return this.currentValues;};if(p5o.ChartEngine.prototype.animations.zoom.isStub){p5o.ChartEngine.prototype.animations.zoom=new p5o.EaseMachine(Math.easeOutCubic,400);}};C54=function C54(i4o){var D4o,f4o;D4o=typeof _CIQ!=="undefined"?_CIQ:i4o.CIQ;f4o=function f4o(){var c7d=o2QQ;var z0Z,L0Z,S4o,R4o,k4o,o4o,H4o,x8o,l4o,r4o,t4o,M4o,A4o,h4o,P4o,I4o,s4o,b4o,u4o;function Z8o(W6G,z6G){c7d.O9X(63);return c7d.L9X(z6G,W6G);}function F4o(a1G){c7d.l9d();return Math.cosh?Math.cosh(a1G):(Math.exp(a1G)+Math.exp(-a1G))/2;}function Q4o(x1G){if(Math.tanh){return Math.tanh(x1G);}if(x1G===Infinity){return 1;}if(x1G===-Infinity){return-1;}return(Math.exp(x1G)-Math.exp(-x1G))/(Math.exp(x1G)+Math.exp(-x1G));}function O8o(C6G,m6G){c7d.l9d();return Number(C6G)+Number(m6G);}z0Z="\\";function y4o(K1G){if(Math.asinh){return Math.asinh(K1G);}if(K1G===-Infinity){return K1G;}c7d.l9d();return Math.log(K1G+Math.sqrt(K1G*K1G+ +"1"));}z0Z+="r";L0Z="\\";L0Z+="f";function E8o(n1G){c7d.l9d();var U1G;n1G=Math.floor(n1G);U1G=n1G;while(n1G>1){c7d.O9X(1);U1G=c7d.x9X(--n1G,U1G);}return U1G;}S4o=0;function c8o(M6G,P6G){c7d.I9X(7);return c7d.x9X(M6G,P6G);}R4o=1;function i8o(f1G,i1G){if(Object.prototype.toString.call(f1G)!="[object Array]"){return[f1G,i1G];}f1G=f1G.slice();c7d.l9d();f1G.push(i1G);return f1G;}function G4o(){c7d.A9d();var w1G,N1G;if(Math.hypot){return Math.hypot.apply(this,arguments);}w1G=0;N1G=arguments.length;for(var B1G=0;B1G<N1G;B1G++){if(arguments[B1G]===Infinity||arguments[B1G]===-Infinity){return Infinity;}w1G+=arguments[B1G]*arguments[B1G];}return Math.sqrt(w1G);}k4o=2;o4o=3;function C4o(h8o){S8o.prototype=h8o;function S8o(){}return new S8o();}function U8o(G6G,b6G){c7d.l9d();c7d.O9X(64);return c7d.L9X(b6G,G6G);}H4o=4;x8o=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;l4o=/[\\'\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;r4o={"\b":"\\b","\t":"\\t","\n":"\\n","\f":L0Z,"\r":z0Z,"'":"\\'","\\":"\\\\"};D4o.extend(J4o.prototype,{simplify:function simplify(G8o){var s8o,H8o,b8o,r8o,u8o,d8o,J8o,l8o,v8o;G8o=G8o||{};s8o=[];H8o=[];d8o=this.tokens.length;l8o=0;for(l8o="0"|0;l8o<d8o;l8o++){J8o=this.tokens[l8o];v8o=J8o.type_;if(v8o===S4o){s8o.push(J8o);}else if(v8o===o4o&&J8o.index_ in G8o){c7d.O9X(49);J8o=new V4o(S4o,0,c7d.x9X(0,"0"),G8o[J8o.index_]);s8o.push(J8o);}else if(v8o===k4o&&s8o.length>1){r8o=s8o.pop();b8o=s8o.pop();u8o=this.ops2[J8o.index_];J8o=new V4o(S4o,0,0,u8o(b8o.number_,r8o.number_));s8o.push(J8o);}else if(v8o===R4o&&s8o.length>0){b8o=s8o.pop();u8o=this.ops1[J8o.index_];J8o=new V4o(S4o,0,0,u8o(b8o.number_));s8o.push(J8o);}else{while(s8o.length>0){H8o.push(s8o.shift());}H8o.push(J8o);}}while(s8o.length>0){H8o.push(s8o.shift());}return new J4o(H8o,C4o(this.ops1),C4o(this.ops2),C4o(this.functions));},substitute:function substitute(a6G,F8o){var W8o,X8o,z8o,Q8o,p8o,y8o,Y8o,E6G;if(!(F8o instanceof J4o)){F8o=new m4o().parse(String(F8o));}W8o=[];X8o=this.tokens.length;Q8o=0;for(Q8o=0;Q8o<X8o;Q8o++){z8o=this.tokens[Q8o];p8o=z8o.type_;if(p8o===o4o&&z8o.index_===a6G){for(var e8o=0;e8o<F8o.tokens.length;e8o++){y8o=F8o.tokens[e8o];Y8o=new V4o(y8o.type_,y8o.index_,y8o.prio_,y8o.number_);W8o.push(Y8o);}}else{W8o.push(z8o);}}E6G=new J4o(W8o,C4o(this.ops1),C4o(this.ops2),C4o(this.functions));return E6G;},evaluate:function evaluate(g6G){var x6G,T6G,j6G,K6G,n6G,O6G,c6G,q6G,B0Z;c7d.l9d();g6G=g6G||{};x6G=[];n6G=this.tokens.length;c6G=0;for(c6G=0;c6G<n6G;c6G++){O6G=this.tokens[c6G];q6G=O6G.type_;if(q6G===S4o){x6G.push(O6G.number_);}else if(q6G===k4o){j6G=x6G.pop();T6G=x6G.pop();K6G=this.ops2[O6G.index_];x6G.push(K6G(T6G,j6G));}else if(q6G===o4o){if(O6G.index_ in g6G){x6G.push(g6G[O6G.index_]);}else if(O6G.index_ in this.functions){x6G.push(this.functions[O6G.index_]);}else{throw new Error("undefined variable: "+O6G.index_);}}else if(q6G===R4o){T6G=x6G.pop();K6G=this.ops1[O6G.index_];x6G.push(K6G(T6G));}else if(q6G===H4o){T6G=x6G.pop();K6G=x6G.pop();if(K6G.apply&&K6G.call){if(Object.prototype.toString.call(T6G)=="[object Array]"){x6G.push(K6G.apply(undefined,T6G));}else{x6G.push(K6G.call(undefined,T6G));}}else{c7d.O9X(0);throw new Error(c7d.x9X(" is not a function",K6G));}}else{B0Z="inval";B0Z+="i";B0Z+="d Express";B0Z+="ion";throw new Error(B0Z);}}if(x6G.length>1){throw new Error("invalid Expression (parity)");}return x6G[0];},toString:function toString(i6G){var U6G,w6G,D6G,B6G,f6G,N6G,L6G,Z6G;U6G=[];f6G=this.tokens.length;c7d.I9X(53);L6G=c7d.L9X(1594107744,"0");for(L6G=0;L6G<f6G;L6G++){N6G=this.tokens[L6G];Z6G=N6G.type_;if(Z6G===S4o){U6G.push(K8o(N6G.number_));}else if(Z6G===k4o){D6G=U6G.pop();w6G=U6G.pop();B6G=N6G.index_;if(i6G&&B6G==((2228,"7559"*1)!==(+"5180",5660)?(+"6010",+"2334")==(114.53,6531)?(585,7150)!=(988,4700)?(1.59e+3,"e"):(!!1,16.89):"^":577)){c7d.O9X(65);U6G.push(c7d.L9X("Math.pow(",D6G,8150>(514.44,2250)?")":(2692,561)<("6458"|2058,6705)?(8256,"1137"&2147483647)===7444?(!"",0xbc9):("N","G"):(0x108a,0x17c),w6G,415>=8628?(5.83e+3,0x1368):(8160,524.01)>6700?(7114,2690)>=45?5.71e+3:(!"","K"):","));}else{c7d.O9X(65);U6G.push(c7d.L9X((153.36,281.74)!=939.46?(930.77,858)!==890.55?"(":"P":(0x260,0xa40),D6G,")",w6G,B6G));}}else if(Z6G===o4o){U6G.push(N6G.index_);}else if(Z6G===R4o){w6G=U6G.pop();B6G=N6G.index_;if(B6G===((2807,1090)==(+"9274",6225)?!!"":"-")){c7d.O9X(43);U6G.push(c7d.x9X(")",B6G, false?undefined:"(",w6G));}else{c7d.I9X(43);U6G.push(c7d.x9X((705.83,+"5740")>6690?!!{}:")","(",B6G,w6G));}}else if(Z6G===H4o){w6G=U6G.pop();B6G=U6G.pop();c7d.O9X(43);U6G.push(c7d.L9X(6080>5225? true?")":undefined:(0x20cd,"B"),"(",B6G,w6G));}else{throw new Error("invalid Expression");}}if(U6G.length>1){throw new Error("invalid Expression (parity)");}c7d.l9d();return U6G[0];},variables:function variables(){var t6G,S6G,V6G;t6G=this.tokens.length;S6G=[];for(var h6G=0;h6G<t6G;h6G++){V6G=this.tokens[h6G];if(V6G.type_===o4o&&S6G.indexOf(V6G.index_)==-1){S6G.push(V6G.index_);}}return S6G;}},!!"1");m4o.parse=function(S1G){return new m4o().parse(S1G);};function B8o(u6G,r6G){c7d.I9X(66);c7d.A9d();return c7d.L9X(u6G,r6G);}function q8o(A6G,R6G){c7d.I9X(1);c7d.A9d();return c7d.L9X(R6G,A6G);}m4o.evaluate=function(h1G,V1G){return m4o.parse(h1G).evaluate(V1G);};function L8o(e6G,X6G){return Boolean(e6G&&X6G);}function w8o(d6G,F6G){c7d.O9X(67);return c7d.L9X(d6G,F6G);}function V4o(t8o,C8o,m8o,V8o){this.type_=t8o;this.index_=C8o||0;this.prio_=m8o||0;c7d.A9d();this.number_=V8o!==undefined&&V8o!==null?V8o:0;this.toString=function(){switch(this.type_){case S4o:return this.number_;case R4o:case k4o:case o4o:return this.index_;case H4o:return"CALL";default:return"Invalid Token";}};}m4o.Expression=J4o;m4o.values={sin:Math.sin,cos:Math.cos,tan:Math.tan,asin:Math.asin,acos:Math.acos,atan:Math.atan,sinh:d4o,cosh:F4o,tanh:Q4o,asinh:y4o,acosh:W4o,atanh:z4o,sqrt:Math.sqrt,log:Math.log,lg:v4o,log10:v4o,abs:Math.abs,ceil:Math.ceil,floor:Math.floor,round:Math.round,trunc:e4o,random:p4o,fac:E8o,exp:Math.exp,min:Math.min,max:Math.max,hypot:G4o,pyt:G4o,pow:Math.pow,atan2:Math.atan2,"if":a8o,E:Math.E,PI:Math.PI};c7d.I9X(35);t4o=c7d.x9X(0,1);function D8o(p6G,Y6G){return Boolean(p6G||Y6G);}function T8o(k6G,o6G){c7d.O9X(6);return c7d.x9X(o6G,k6G);}c7d.O9X(35);M4o=c7d.L9X(1,1);function e4o(g1G){if(Math.trunc){return Math.trunc(g1G);}return g1G<0?Math.ceil(g1G):Math.floor(g1G);}c7d.O9X(35);A4o=c7d.x9X(2,1);function f8o(c1G){return-c1G;}c7d.I9X(35);h4o=c7d.L9X(3,1);function v4o(q1G){return Math.log(q1G)*Math.LOG10E;}c7d.I9X(35);P4o=c7d.x9X(4,1);function K8o(M8o){c7d.l9d();if(typeof M8o==="string"){l4o.lastIndex=0;return l4o.test(M8o)?((1330,5120)==("383.54"*1,7850)?"Q":8119<=(+"9530",327.34)?(5.52e+3,!!{}):"'")+M8o.replace(l4o,function(I8o){var A0Z,c0Z,P8o;A0Z="0";A0Z+="0";A0Z+="0";A0Z+="0";c0Z="strin";c0Z+="g";P8o=r4o[I8o];return _typeof(P8o)===c0Z?P8o:"\\u"+(A0Z+I8o.charCodeAt(0).toString(16)).slice(-4);})+((496,3372)==(3730,686.78)?(!{},0x19c7):"'"):"'"+M8o+"'";}return M8o;}function z4o(T1G){c7d.A9d();return Math.atanh?Math.atanh(T1G):Math.log((1+T1G)/(1-T1G))/2;}function W4o(O1G){c7d.l9d();return Math.acosh?Math.acosh(O1G):Math.log(O1G+Math.sqrt(O1G*O1G-1));}function a8o(Z1G,L1G,D1G){return Z1G?L1G:D1G;}function p4o(j1G){c7d.O9X(0);var Q2X=c7d.x9X(1,0);return Math.random()*(j1G||Q2X);}function m4o(){this.success=!!0;this.errormsg="";this.expression="";this.pos=0;this.tokennumber=0;this.tokenprio=0;this.tokenindex=0;this.tmpprio=0;this.ops1={sin:Math.sin,cos:Math.cos,tan:Math.tan,asin:Math.asin,acos:Math.acos,atan:Math.atan,sinh:d4o,cosh:F4o,tanh:Q4o,asinh:y4o,acosh:W4o,atanh:z4o,sqrt:Math.sqrt,log:Math.log,lg:v4o,log10:v4o,abs:Math.abs,ceil:Math.ceil,floor:Math.floor,round:Math.round,trunc:e4o,"-":f8o,exp:Math.exp};this.ops2={"+":O8o,"-":T8o,"*":q8o,"/":c8o,"%":g8o,"^":Math.pow,",":i8o,"||":j8o,"==":n8o,"!=":U8o,">":B8o,"<":w8o,">=":N8o,"<=":Z8o,and:L8o,or:D8o};this.functions={random:p4o,fac:E8o,min:Math.min,max:Math.max,hypot:G4o,pyt:G4o,pow:Math.pow,atan2:Math.atan2,"if":a8o};this.consts={E:Math.E,PI:Math.PI};}c7d.O9X(35);I4o=c7d.x9X(5,1);function n8o(l6G,v6G){c7d.O9X(62);return c7d.L9X(v6G,l6G);}function d4o(E1G){c7d.l9d();return Math.sinh?Math.sinh(E1G):(Math.exp(E1G)-Math.exp(-E1G))/2;}function j8o(J6G,H6G){c7d.l9d();c7d.O9X(21);return c7d.L9X("",J6G,H6G);}function N8o(Q6G,y6G){c7d.O9X(68);c7d.l9d();return c7d.L9X(Q6G,y6G);}c7d.I9X(35);s4o=c7d.L9X(6,1);function J4o(k8o,o8o,A8o,R8o){this.tokens=k8o;this.ops1=o8o;this.ops2=A8o;this.functions=R8o;}c7d.A9d();c7d.O9X(69);b4o=c7d.L9X(7,"1");c7d.O9X(35);u4o=c7d.x9X(8,1);D4o.extend(m4o.prototype,{parse:function parse(P1G){var m1G,C1G,t1G,k1G,o1G,n0Z,N0Z,k0Z,P0Z,A1G,G0Z,R1G,M1G;this.errormsg="";this.success=!![];m1G=[];C1G=[];this.tmpprio=0;c7d.I9X(70);t1G=c7d.L9X(h4o,s4o,A4o,t4o);c7d.I9X(49);c7d.A9d();k1G=c7d.x9X(0,"0");this.expression=P1G;this.pos=0;while(this.pos<this.expression.length){if(this.isOperator()){if(this.isSign()&&t1G&s4o){if(this.isNegativeSign()){this.tokenprio=2;this.tokenindex=(9639,5143)!=("8740"<<192543168,29.66)?(944.14,2486)!==(4749,"6326"|34)?"-":"S":!"";k1G++;this.addfunc(C1G,m1G,R4o);}c7d.I9X(70);t1G=c7d.L9X(h4o,s4o,A4o,t4o);}else if(this.isComment()){}else{if((t1G&M4o)===0){n0Z="une";n0Z+="xpecte";n0Z+="d oper";n0Z+="ator";this.error_parsing(this.pos,n0Z);}k1G+=2;this.addfunc(C1G,m1G,k4o);c7d.O9X(70);t1G=c7d.L9X(h4o,s4o,A4o,t4o);}}else if(this.isNumber()){if((t1G&t4o)===0){this.error_parsing(this.pos,"unexpected number");}o1G=new V4o(S4o,0,0,this.tokennumber);C1G.push(o1G);c7d.I9X(71);t1G=c7d.x9X(P4o,M4o,I4o);}else if(this.isString()){if((t1G&t4o)===0){this.error_parsing(this.pos,"unexpected string");}o1G=new V4o(S4o,0,0,this.tokennumber);C1G.push(o1G);c7d.O9X(71);t1G=c7d.L9X(P4o,M4o,I4o);}else if(this.isLeftParenth()){if((t1G&h4o)===0){N0Z="unexpecte";N0Z+="d \"(";N0Z+="\"";this.error_parsing(this.pos,N0Z);}if(t1G&b4o){k1G+=2;this.tokenprio=-2;this.tokenindex=-+"1";this.addfunc(C1G,m1G,H4o);}c7d.I9X(72);t1G=c7d.x9X(t4o,s4o,h4o,A4o,u4o);}else if(this.isRightParenth()){if(t1G&u4o){o1G=new V4o(S4o,0,0,[]);C1G.push(o1G);}else if((t1G&P4o)===0){this.error_parsing(this.pos,'unexpected ")"');}c7d.I9X(72);t1G=c7d.x9X(M4o,h4o,P4o,I4o,b4o);}else if(this.isComma()){if((t1G&I4o)===0){k0Z="une";k0Z+="x";k0Z+="pected \",\"";this.error_parsing(this.pos,k0Z);}this.addfunc(C1G,m1G,k4o);k1G+=2;c7d.O9X(70);t1G=c7d.x9X(h4o,s4o,A4o,t4o);}else if(this.isConst()){if((t1G&t4o)===0){P0Z="unex";P0Z+="pec";P0Z+="t";P0Z+="ed constant";this.error_parsing(this.pos,P0Z);}A1G=new V4o(S4o,0,0,this.tokennumber);C1G.push(A1G);c7d.O9X(71);t1G=c7d.x9X(P4o,M4o,I4o);}else if(this.isOp2()){if((t1G&A4o)===0){G0Z="unexpected";G0Z+=" fun";G0Z+="cti";G0Z+="on";this.error_parsing(this.pos,G0Z);}this.addfunc(C1G,m1G,k4o);k1G+=+"2";t1G=h4o;}else if(this.isOp1()){if((t1G&A4o)===0){this.error_parsing(this.pos,"unexpected function");}this.addfunc(C1G,m1G,R4o);k1G++;t1G=h4o;}else if(this.isVar()){if((t1G&t4o)===0){this.error_parsing(this.pos,"unexpected variable");}c7d.I9X(6);R1G=new V4o(o4o,this.tokenindex,0,c7d.x9X(0,"0"));C1G.push(R1G);c7d.O9X(72);t1G=c7d.x9X(M4o,h4o,P4o,I4o,b4o);}else if(this.isWhite()){}else{if(this.errormsg===""){this.error_parsing(this.pos,"unknown character");}else{this.error_parsing(this.pos,this.errormsg);}}}if(this.tmpprio<0||this.tmpprio>=10){this.error_parsing(this.pos,'unmatched "()"');}while(m1G.length>+"0"){M1G=m1G.pop();C1G.push(M1G);}if(k1G+1!==C1G.length){this.error_parsing(this.pos,"parity");}return new J4o(C1G,C4o(this.ops1),C4o(this.ops2),C4o(this.functions));},evaluate:function evaluate(I1G,s1G){return this.parse(I1G).evaluate(s1G);},error_parsing:function error_parsing(J1G,H1G){this.success=!!0;c7d.I9X(43);c7d.A9d();this.errormsg=c7d.L9X(H1G,J1G,"parse error [column ","]: ");this.column=J1G;throw new Error(this.errormsg);},addfunc:function addfunc(G1G,l1G,b1G){c7d.A9d();var v1G;v1G=new V4o(b1G,this.tokenindex,this.tokenprio+this.tmpprio,0);while(l1G.length>0){if(v1G.prio_<=l1G[l1G.length-1].prio_){G1G.push(l1G.pop());}else{break;}}l1G.push(v1G);},isNumber:function isNumber(){var r1G,d1G,u1G;r1G=!!0;d1G="";while(this.pos<this.expression.length){u1G=this.expression.charCodeAt(this.pos);if(u1G>=48&&u1G<=("57"|40)||u1G==="46">>1296392800){d1G+=this.expression.charAt(this.pos);this.pos++;this.tokennumber=parseFloat(d1G);r1G=!0;}else{break;}}return r1G;},unescape:function unescape(z1G,X1G){var F1G,W1G,y1G,e1G,D0Z;c7d.l9d();F1G=[];W1G=!1;for(var Q1G=0;Q1G<z1G.length;Q1G++){y1G=z1G.charAt(Q1G);if(W1G){switch(y1G){case 5689<("7550"|4354)?7663>=(2405,310.75)?(8500,5657)>3882?"'":(0x21f1,5.50e+3):(7.79e+3,0xb6c):(!0,624.84):F1G.push(1812>9330?(8396,3220)==396?!!{}:(+"1.41e+2",69):"'");break;case"\\":F1G.push("\\");break;case"/":F1G.push("/");break;case("4872"^0,891.88)==(2744,309)?33.28<=+"4680"?("0x1c98"-0,+"7.09e+3"):"P":"b":F1G.push(127.73===(3625,6613)?("6236"&2147483647,8219)<=9191?762.95<=(8520,5277)?(0x1591,6.41):("x","P"):(771.46,3.12e+3):"\b");break;case"f":F1G.push((+"640",7929)==("799.34"-0,2700)?1518<733.73?![]:0x1642:"\f");break;case"n":F1G.push((795.73,9410)<=(1955,5520)?(0x104a,!!""):"\n");break;case"r":F1G.push((259.56,850)===(4820,998)?(8.86e+3,"C"):(8610,5500)>=(+"3142",4610)?"\r":(!{},"Z"));break;case"t":F1G.push((59.05,536.67)!==716?"\t":9.81e+2);break;case"u":e1G=parseInt(z1G.substring(Q1G+1,Q1G+5),16);F1G.push(String.fromCharCode(e1G));Q1G+=4;break;default:D0Z="Il";D0Z+="le";D0Z+="gal escape sequence: '\\";c7d.O9X(0);throw this.error_parsing(c7d.L9X(Q1G,X1G),c7d.x9X(D0Z,y1G,"'",c7d.I9X(21)));}W1G=!{};}else{if(y1G==((424.66,1625)<(689.73,2500)?5510>(712.12,736)?"\\":7160<(2560,9756)?(4.22e+3,230.34):569.56:(3.98e+3,!{}))){W1G=!!{};}else{F1G.push(y1G);}}}return F1G.join("");},isString:function isString(){var Y1G,p1G,E0G,a0G;Y1G=!{};p1G="";E0G=this.pos;if(this.pos<this.expression.length&&this.expression.charAt(this.pos)=="'"){this.pos++;while(this.pos<this.expression.length){a0G=this.expression.charAt(this.pos);if(a0G!=( false?undefined:"'")||p1G.slice(-("1">>2023860768))==(1918>(2024,4748)?890.76:"\\")){p1G+=this.expression.charAt(this.pos);this.pos++;}else{this.pos++;this.tokennumber=this.unescape(p1G,E0G);Y1G=!0;break;}}}return Y1G;},isConst:function isConst(){c7d.l9d();var O0G,K0G;for(var x0G in this.consts){if(!![]){K0G=x0G.length;O0G=this.expression.substr(this.pos,K0G);if(x0G===O0G){this.tokennumber=this.consts[x0G];this.pos+=K0G;return!![];}}}return!!"";},isOperator:function isOperator(){var T0G,J0Z,f0Z,H0Z;T0G=this.expression.charCodeAt(this.pos);if(T0G===43){this.tokenprio=2;this.tokenindex=7770<=8135?592.17>=(5530,227.39)?"+":(922.38,"o"):"I";}else if(T0G===("45"&2147483647)){this.tokenprio=2;this.tokenindex="-";}else if(T0G===62){if(this.expression.charCodeAt(this.pos+1)===+"61"){J0Z=">";J0Z+="=";this.pos++;this.tokenprio=1;this.tokenindex=J0Z;}else{this.tokenprio=1;this.tokenindex=">";}}else if(T0G===60){if(this.expression.charCodeAt(this.pos+("1">>1033867520))===61){f0Z="<";f0Z+="=";this.pos++;this.tokenprio=1;this.tokenindex=f0Z;}else{this.tokenprio=1;this.tokenindex=("9180"&2147483647)!==(+"407.31",3830)?"<":2150>=(9300,"478">>309859360)?2.96e+2:(!!"1",791.17);}}else if(T0G===124){if(this.expression.charCodeAt(this.pos+ +"1")===124){this.pos++;c7d.O9X(49);this.tokenprio=c7d.L9X(0,"1");this.tokenindex="||";}else{return!{};}}else if(T0G===61){if(this.expression.charCodeAt(this.pos+1)===61){this.pos++;c7d.O9X(50);this.tokenprio=c7d.L9X("1",1);this.tokenindex="==";}else{return!!0;}}else if(T0G===33){if(this.expression.charCodeAt(this.pos+("1"&2147483647))===61){this.pos++;this.tokenprio=1;this.tokenindex="!=";}else{return!!"";}}else if(T0G===97){if(this.expression.charCodeAt(this.pos+"1"*1)===110&&this.expression.charCodeAt(this.pos+2)===100){this.pos++;this.pos++;this.tokenprio=0;this.tokenindex="and";}else{return!1;}}else if(T0G===+"111"){if(this.expression.charCodeAt(this.pos+1)===114){H0Z="o";H0Z+="r";this.pos++;this.tokenprio=+"0";this.tokenindex=H0Z;}else{return!1;}}else if(T0G===+"42"||T0G===8729||T0G===8226){this.tokenprio=3;this.tokenindex="*";}else if(T0G===47){this.tokenprio=4;this.tokenindex=(278,191)>=9670?(2.51e+3,"R"):"/";}else if(T0G===37){this.tokenprio=4;this.tokenindex=9349>=+"8790"?"%": false?undefined:"e";}else if(T0G===94){this.tokenprio=5;this.tokenindex=+"463.26">(492.4,7581)?(358.13,587.03): true?"^":(undefined);}else{return!{};}this.pos++;return!![];},isSign:function isSign(){var q0G,s39,W39,q39;q0G=this.expression.charCodeAt(this.pos-1);if(q0G===+"45"||q0G===43){return!!1;}s39=2121897746;W39=1514834826;c7d.A9d();q39=2;for(var a39=1;c7d.Y19(a39.toString(),a39.toString().length,91969)!==s39;a39++){return!{};}if(c7d.g19(q39.toString(),q39.toString().length,29605)!==W39){return!!1;}},isPositiveSign:function isPositiveSign(){var c0G;c7d.l9d();c0G=this.expression.charCodeAt(this.pos-1);if(c0G===43){return!![];}return![];},isNegativeSign:function isNegativeSign(){var g0G;g0G=this.expression.charCodeAt(this.pos-1);if(g0G===45){return!0;}return!{};},isLeftParenth:function isLeftParenth(){var j0G;j0G=this.expression.charCodeAt(this.pos);c7d.l9d();if(j0G===+"40"){this.pos++;this.tmpprio+=10;return!!"1";}return!!"";},isRightParenth:function isRightParenth(){var n0G;n0G=this.expression.charCodeAt(this.pos);c7d.l9d();if(n0G===41){this.pos++;this.tmpprio-=10;return!!1;}return![];},isComma:function isComma(){c7d.A9d();var U0G;U0G=this.expression.charCodeAt(this.pos);if(U0G===44){this.pos++;this.tokenprio=-1;this.tokenindex=(4194,3301)==("9170"^0)?403.37>=(8820,"858.47"*1)?!![]:![]:",";return!"";}return!{};},isWhite:function isWhite(){var B0G;B0G=this.expression.charCodeAt(this.pos);c7d.A9d();if(B0G===32||B0G===9||B0G===10||B0G==="13"-0){this.pos++;return!![];}return!{};},isOp1:function isOp1(){var N0G,w0G;N0G="";for(var Z0G=this.pos;Z0G<this.expression.length;Z0G++){w0G=this.expression.charAt(Z0G);if(w0G.toUpperCase()===w0G.toLowerCase()){if(Z0G===this.pos||w0G!="_"&&(w0G<"0"||w0G>("664.21"-0==(249.66,183.04)?0x309:476==+"204.4"?!1:"9"))){break;}}N0G+=w0G;}if(N0G.length>0&&N0G in this.ops1){this.tokenindex=N0G;this.tokenprio=5;this.pos+=N0G.length;return!![];}return!!0;},isOp2:function isOp2(){c7d.A9d();var D0G,L0G;D0G="";for(var f0G=this.pos;f0G<this.expression.length;f0G++){L0G=this.expression.charAt(f0G);if(L0G.toUpperCase()===L0G.toLowerCase()){if(f0G===this.pos||L0G!=(5964>=(9270,679.39)?"_":(4.66e+3,"o"))&&(L0G<"0"||L0G>((+"690",1660)===590?9270<=(+"9930","589">>1756190848)?+"108.65":2010>=(9369,7180)?("u","F"):"F":"9"))){break;}}D0G+=L0G;}if(D0G.length>0&&D0G in this.ops2){this.tokenindex=D0G;this.tokenprio=5;this.pos+=D0G.length;return!![];}return!1;},isVar:function isVar(){var S0G,i0G;S0G="";for(var h0G=this.pos;h0G<this.expression.length;h0G++){i0G=this.expression.charAt(h0G);if(i0G.toUpperCase()===i0G.toLowerCase()){if(h0G===this.pos||i0G!=((1870,7410)===(596,7916)?(!1,0x1dc3):"_")&&(i0G<"0"||i0G>( true?"9":undefined))){break;}}S0G+=i0G;}if(S0G.length>0){this.tokenindex=S0G;this.tokenprio=4;this.pos+=S0G.length;return!!1;}return!{};},isComment:function isComment(){var V0G,P09,D09,J09;V0G=this.expression.charCodeAt(this.pos-1);if(V0G===47&&this.expression.charCodeAt(this.pos)===42){c7d.I9X(30);var R2X=c7d.L9X(32,12,382);this.pos=this.expression.indexOf("*/",this.pos)+R2X;if(this.pos===1){P09=565332205;D09=726895552;J09=2;for(var s09="1"&2147483647;c7d.Y19(s09.toString(),s09.toString().length,12326)!==P09;s09++){this.pos=this.expression.length;c7d.I9X(49);J09+=c7d.x9X(0,"2");}if(c7d.g19(J09.toString(),J09.toString().length,70750)!==D09){this.pos=this.expression.length;}this.pos=this.expression.length;}return!!{};}return!1;}},!!{});function g8o(I6G,s6G){c7d.O9X(73);return c7d.x9X(s6G,I6G);}return m4o;};o2QQ.A9d();D4o.computeEquationChart=function(I0G,C0G){var q7d=o2QQ;var H0G,q0Z,W0Z,s0Z,Q0G,R0G,G0G,o0G,l0G,A0G,m0G,b0G,v0G,r0G,P0G,y0G,W0G,d0G,t0G,s0G,J0G,e0G,M0G;I0G=I0G.replace(/[:]/, false?undefined:8306>=(9453,55.86)?"/":(!!"",0xae6));H0G=0;function z0G(p0G){p0G.i++;if(C0G[p0G.s]){if(p0G.i>=C0G[p0G.s].length){return 0;}A0G=C0G[p0G.s][p0G.i];}if(!A0G.DT){A0G.DT=D4o.strToDateTime(A0G.Date);}p0G.d=A0G.DT;return 1;}for(var k0G in C0G){q0Z="sy";q0Z+="m";q0Z+="bo";q0Z+="l";W0Z="\\";W0Z+="$";W0Z+="&";s0Z="\\";s0Z+="[";Q0G=new RegExp("\\["+k0G.replace(/\[/g,s0Z).replace(/\]/g,"\\]").replace(/\$/g,"\\$").replace(/\^/g,"\\^").replace(/[+\-*/%()]/g,W0Z)+"\\]", true?(2352,+"1935")===+"217"?("1.15e+3"-0,"a"):(430.7,8152)<(+"339",654)?("R",+"9.74e+3"):"g":undefined);q7d.I9X(0);I0G=I0G.replace(Q0G,q7d.x9X(H0G,q0Z));H0G++;}R0G=f4o().parse(I0G);G0G=[];o0G={};l0G=0;m0G=null;function X0G(){var E09,U09,S09,E3G,Y0G;E09=-1889940802;q7d.I9X(74);U09=-q7d.x9X(2147483647,"156747620");S09=2;for(var v09=1;q7d.g19(v09.toString(),v09.toString().length,93328)!==E09;v09++){E3G=null;Y0G=null;S09+=+"2";}if(q7d.Y19(S09.toString(),S09.toString().length,48414)!==U09){E3G=1;Y0G=1;}for(var a3G in o0G){if(!Y0G){Y0G=o0G[a3G];}else if(o0G[a3G].d.getTime()<Y0G.d.getTime()){E3G=Y0G=o0G[a3G];}else if(o0G[a3G].d.getTime()>Y0G.d.getTime()){E3G=Y0G;}}if(E3G){if(!z0G(E3G)){return 0;}return-1;}return 1;}b0G=!!"";v0G=[];for(k0G in C0G){r0G={sym:k0G,map:C0G[k0G]};if(C0G[k0G]){v0G.unshift(r0G);}else{v0G.push(r0G);}}for(var u0G=0;u0G<v0G.length;u0G++){P0G=v0G[u0G];o0G[P0G.sym]={i:0,s:P0G.sym};if(P0G.map){l0G++;A0G=P0G.map[0];}else if(l0G==1){b0G=P0G.sym;}if(!A0G.DT){A0G.DT=D4o.strToDateTime(A0G.Date);}o0G[P0G.sym].d=A0G.DT;if(!m0G){m0G=o0G[P0G.sym];}}q7d.O9X(75);y0G=q7d.L9X(0,l0G);W0G=l0G==1&&I0G.indexOf((2360,9506)!=(972.94,7020)?(302.73,9248)>978.46?"%":(!![],"d"):(!{},"j"))==-1;a:while(!!1){d0G=X0G();if(!d0G)break;if(d0G==1){if(b0G){s0G=C0G[m0G.s][m0G.i][b0G];if(s0G&&(s0G.Close||s0G.Close===+"0")){s0G=s0G.Close;}J0G=R0G.evaluate({symbol0:C0G[m0G.s][m0G.i].Close,symbol1:s0G});J0G=Number(J0G.toFixed(8));t0G={DT:m0G.d,Close:J0G,Adj_Close:J0G};t0G[m0G.s]=C0G[m0G.s][m0G.i].Close;if(!isNaN(J0G)&&J0G!=Infinity){G0G.push(t0G);}}else if(y0G){e0G=R0G.evaluate({});q7d.I9X(21);D4o.alert(q7d.L9X(I0G, false?undefined:"=",e0G));throw{name:"NoException",message:""};}else{H0G=0;M0G={Adj_Close:{},Close:{},Open:{},High:{},Low:{},Volume:{}};for(k0G in C0G){for(var F0G in M0G){q7d.O9X(0);M0G[F0G][q7d.x9X(H0G,"symbol")]=C0G[k0G][o0G[k0G].i][F0G];}H0G++;}t0G={DT:m0G.d};t0G.Adj_Close=R0G.evaluate(M0G.Adj_Close);t0G.Close=R0G.evaluate(M0G.Close);t0G.Open=R0G.evaluate(M0G.Open);t0G.Volume=R0G.evaluate(M0G.Volume);if(isNaN(t0G.Volume)){t0G.Volume=0;}if(W0G){t0G.High=R0G.evaluate(M0G.High);t0G.Low=R0G.evaluate(M0G.Low);}else{t0G.High=Math.max(t0G.Open,t0G.Close);t0G.Low=Math.min(t0G.Open,t0G.Close);}if(!isNaN(t0G.Close)&&t0G.Close!=Infinity){G0G.push(t0G);}if(!isNaN(t0G.High)){t0G.High=Number(t0G.High.toFixed(8));}if(!isNaN(t0G.Low)){t0G.Low=Number(t0G.Low.toFixed(8));}if(!isNaN(t0G.Open)){t0G.Open=Number(t0G.Open.toFixed(8));}if(!isNaN(t0G.Close)){t0G.Close=Number(t0G.Close.toFixed(8));}if(!isNaN(t0G.Adj_Close)){t0G.Adj_Close=Number(t0G.Adj_Close.toFixed("8"^0));}else{t0G.Adj_Close=t0G.Close;}}for(k0G in C0G){if(!z0G(o0G[k0G]))break a;}}}return G0G;};};m54=function m54(K3G){var E5Z,x3G;E5Z="Engl";E5Z+="i";E5Z+="s";E5Z+="h";x3G=typeof _CIQ!=="undefined"?_CIQ:K3G.CIQ;x3G.ChartEngine.prototype.setLocale=function(j3G,c3G){var M7d=o2QQ;var l0Z,R0Z,Q0Z,a0Z,I0Z,T3G,O3G,r0Z,g3G,q3G;M7d.A9d();l0Z="numer";l0Z+="ic";R0Z="2-";R0Z+="d";R0Z+="igit";Q0Z="2-di";Q0Z+="git";a0Z="num";a0Z+="e";a0Z+="ri";a0Z+="c";I0Z="nu";I0Z+="mer";I0Z+="ic";if(typeof Intl=="undefined"){return;}if(this.locale!=j3G){this.locale=j3G;}else{return;}O3G=this.internationalizer={};O3G.hourMinute=new Intl.DateTimeFormat(this.locale,{hour:"numeric",minute:"numeric",hourCycle:"h23"});O3G.hourMinuteSecond=new Intl.DateTimeFormat(this.locale,{hour:"numeric",minute:I0Z,second:a0Z,hourCycle:"h23"});O3G.mdhm=new Intl.DateTimeFormat(this.locale,{year:Q0Z,month:"2-digit",day:"2-digit",hour:R0Z,minute:"2-digit"});O3G.monthDay=new Intl.DateTimeFormat(this.locale,{month:"numeric",day:"numeric"});O3G.yearMonthDay=new Intl.DateTimeFormat(this.locale,{year:"numeric",month:"numeric",day:"numeric"});O3G.yearMonth=new Intl.DateTimeFormat(this.locale,{year:"numeric",month:l0Z});O3G.month=new Intl.DateTimeFormat(this.locale,{month:"short"});O3G.numbers=new Intl.NumberFormat(this.locale);O3G.priceFormatters=[];if(!c3G){c3G=8;}for(T3G=0;T3G<c3G+1;T3G++){O3G.priceFormatters.push(new Intl.NumberFormat(this.locale,{maximumFractionDigits:T3G,minimumFractionDigits:T3G}));}for(T3G=+"0";T3G<5;T3G++){r0Z="pe";r0Z+="rcent";g3G=T3G;q3G=T3G;if(!T3G){g3G="";M7d.I9X(35);q3G=M7d.L9X(845122432,"2");}M7d.O9X(0);O3G[M7d.L9X(g3G,r0Z)]=new Intl.NumberFormat(this.locale,{style:"percent",minimumFractionDigits:q3G,maximumFractionDigits:q3G});}if(x3G.I18N.createMonthArrays){x3G.I18N.createMonthArrays(this,O3G.month,this.locale);}};x3G.I18N=function(){};x3G.I18N.hereDoc=function(n3G){o2QQ.A9d();return n3G.toString().replace(/^[^/]+\/\*!?/,"").replace(/\*\/[^/]+$/,"");};x3G.I18N.language="en";x3G.I18N.longMonths={zh:!!{}};x3G.I18N.reverseColorsByLocale={zh:!0,ja:!0};x3G.I18N.findAllTextNodes=function(N3G){var O0Z,C0Z,Z3G,f3G,K0Z,i3G,S3G,m3G,w3G,M3G,k3G,U3G,P3G,B3G,h3G,I3G,o3G,V3G,t3G,D3G;O0Z="\n";O0Z+="|\t";o2QQ.A9d();O0Z+="|";O0Z+="\f";C0Z="^";C0Z+="\\s";C0Z+="*";C0Z+="$";if(!N3G){N3G=document.body;}if(N3G==document.body){if(!document.querySelector(".ciq_stashed_texts")){Z3G=document.createElement("div");Z3G.className="ciq_stashed_texts";Z3G.style.display="none";N3G.appendChild(Z3G);f3G=document.querySelectorAll("input,textarea,.editable_content");for(var L3G=0;L3G<f3G.length;L3G++){K0Z="place";K0Z+="ho";K0Z+="ld";K0Z+="er";i3G=f3G[L3G].getAttribute(K0Z);if(i3G){S3G=Z3G.appendChild(document.createElement("translate"));S3G.setAttribute("original",i3G);S3G.placeholderFor=f3G[L3G];S3G.appendChild(document.createTextNode(i3G));}}}}m3G=document.createTreeWalker(N3G,NodeFilter.SHOW_TEXT,null,![]);w3G=m3G.nextNode();M3G=new RegExp(C0Z);k3G=new RegExp(O0Z,(2040,2646)<=2330?(831.32,44.97)<(9330,307)?8522>(9190,57.56)?!![]:(+"3.39e+3",!""):(5.02e+2,0xff0):"g");U3G={};P3G={SCRIPT:!0,STYLE:!![],TEXTAREA:!""};while(w3G){B3G=w3G.nodeValue;if(!M3G.test(B3G)){h3G=w3G.parentNode;I3G=w3G.nextSibling;o3G=h3G.tagName;if(!P3G[o3G]){if(o3G!="TRANSLATE"){V3G=document.createElement("translate");V3G.setAttribute("original",B3G);V3G.appendChild(w3G);h3G.insertBefore(V3G,I3G);}else{B3G=h3G.getAttribute("original");}if(k3G.test(B3G)){B3G=B3G.replace(k3G,"");}if(!U3G[B3G]){U3G[B3G]=[];}U3G[B3G].push(w3G);}}w3G=m3G.nextNode();}if(N3G==document.body){t3G=x3G.Studies?x3G.Studies.studyLibrary:null;if(t3G){for(var C3G in t3G){if(U3G[C3G]===null){U3G[C3G]=[];}D3G=t3G[C3G];if(D3G.inputs){for(var A3G in D3G.inputs){if(!U3G[A3G]){U3G[A3G]=[];}}}if(D3G.outputs){for(var R3G in D3G.outputs){if(!U3G[R3G]){U3G[R3G]=[];}}}}}}return U3G;};x3G.I18N.missingWordList=function(b3G){var X0Z,u0Z,r3G,l3G,v3G,s3G,J3G,H3G;X0Z="Show";X0Z+=" as Un";X0Z+="derlay";u0Z="Sh";u0Z+="ow Zones";if(!b3G){b3G=x3G.I18N.language;}r3G=x3G.I18N.findAllTextNodes();l3G={};v3G=x3G.I18N.wordLists[b3G];if(!v3G){v3G={};}s3G=function s3G(y3G){var m0Z;m0Z="u";m0Z+="ndefi";m0Z+="ned";if(_typeof(v3G[y3G])==m0Z){l3G[y3G]="";}};for(var d3G in r3G){s3G(d3G);}if(!(x3G.Studies&&x3G.Studies.studyLibrary)){return l3G;}for(var F3G in x3G.Studies.studyLibrary){J3G=x3G.Studies.studyLibrary[F3G];s3G(J3G.name);for(var u3G in J3G.inputs){s3G(u3G);H3G=J3G.inputs[u3G];switch(Object.prototype.toString.call(H3G)){case"[object String]":s3G(H3G);break;case"[object Array]":for(var G3G=+"0";G3G<H3G.length;++G3G){s3G(H3G[G3G]);}break;}}for(var Q3G in J3G.outputs){s3G(Q3G);}}s3G(u0Z);s3G("OverBought");s3G("OverSold");s3G("Panel");s3G(X0Z);s3G("Y-Axis");s3G("Invert Y-Axis");return l3G;};x3G.I18N.printableMissingWordList=function(z3G){var W3G;W3G=JSON.stringify(x3G.I18N.missingWordList(z3G));W3G=W3G.replace(/","/g,'",\n"');return W3G;};x3G.I18N.translateUI=function(X3G,c9G){o2QQ.A9d();var Y3G,E9G,e3G,x9G,K9G,O9G,q9G,T9G;if(X3G=="pu"){X3G="pt";}if(!x3G.I18N.wordLists){return;}if(!X3G){X3G=x3G.I18N.language;}Y3G=x3G.I18N.findAllTextNodes(c9G);E9G=x3G.I18N.wordLists[X3G];if(!E9G){return;}for(var a9G in Y3G){e3G=x3G.I18N.translateSections(a9G,E9G);x9G=Y3G[a9G];for(var p3G=0;p3G<x9G.length;p3G++){K9G=x9G[p3G];O9G=K9G.parentNode;q9G=O9G.getAttribute("original");if(e3G===","||!e3G){e3G=q9G;}T9G=O9G.placeholderFor;if(T9G){T9G.placeholder=e3G;}else{K9G.data=e3G;}}}};x3G.I18N.translate=function(g9G,n9G){o2QQ.A9d();var U9G,j9G;if(!n9G){n9G=x3G.I18N.language;}if(!x3G.I18N.wordLists){console.log("Must include translations.js in order to use CIQ.I18N.translate()");return g9G;}U9G=x3G.I18N.wordLists[n9G];j9G=null;if(U9G){j9G=x3G.I18N.translateSections(g9G,U9G)||g9G;}return j9G===(9.02>+"3848"?2701>(841.12,"146.62"-0)?("469"|384,3285)!=260.83?!"":+"705.21":"d":",")?g9G:j9G;};x3G.I18N.translateSections=function(B9G,Z9G){var z7d=o2QQ;var Z0Z,n99,N99,k99,w9G,p0Z,N9G;Z0Z="s";z7d.l9d();Z0Z+="tri";Z0Z+="n";Z0Z+="g";n99=-1012411808;z7d.I9X(35);N99=-z7d.L9X(834649984,"1076829934");z7d.O9X(53);k99=z7d.x9X(1156018432,"2");for(var D99=1;z7d.g19(D99.toString(),D99.toString().length,"72064"-0)!==n99;D99++){w9G= true?(0x1ad9,+"204003"):undefined;k99+=2;}if(z7d.g19(k99.toString(),k99.toString().length,"16472"|24)!==N99){w9G=("9436"&2147483647)===926.69?(0x1c60,112.55):"\u200C";}if(_typeof(B9G)==Z0Z&&B9G.indexOf(w9G)!=-1){p0Z="$";p0Z+="1";z7d.I9X(21);B9G=B9G.replace(/([(),])/g,z7d.L9X(w9G,p0Z,w9G));N9G=B9G.split(w9G);N9G.forEach(function(f9G,i9G,S9G){var D9G,L9G;D9G=f9G.match(/^(\s*).*\S(\s*)$/);z7d.A9d();L9G=Z9G[f9G.trim()];if(L9G){if(D9G){z7d.I9X(11);var l2X=z7d.x9X(0,10,9);L9G=D9G[l2X]+L9G+D9G[+"2"];}S9G[i9G]=L9G;}});return N9G.join("");}return Z9G[B9G];};x3G.I18N.convertCSV=function(m9G){var Y2d=o2QQ;var I9G,V9G,k9G,o9G,J9G,A9G,s9G,P9G,h9G,C9G;I9G=new RegExp("[\u201C\u201D]|[\u2018\u2019]",("771.36"*1,628)>463.21?(2240,9607)===(5395,"8042"&2147483647)?"b":(5557,1654)>=+"418"?"g":"f":(0xd92,0x267b));V9G=new RegExp('^(")|(")$',"g");k9G=x3G.I18N.wordLists;if(!m9G){m9G=x3G.I18N.csv;}if(!m9G){return;}o9G=m9G.split("\n");Y2d.I9X(35);J9G=o9G[Y2d.x9X(1019031584,"0")];A9G=J9G.split(4981>=(+"394.43",3120)?",":("j",46.27));for(var R9G=0;R9G<A9G.length;R9G++){s9G=A9G[R9G];if(!k9G[s9G]){k9G[s9G]={};}}for(var M9G=1;M9G<o9G.length;M9G++){P9G=o9G[M9G].match(/(".*?"|[^",]+)(?=\s*,|\s*$)|(,(?=,))/g)||[];Y2d.O9X(49);h9G=P9G[Y2d.L9X(0,"0")];if(V9G.test(h9G)){h9G=h9G.replace(V9G,"");}if(I9G.test(h9G)){h9G=h9G.replace(I9G,("2063"-0,+"409")==(9812,710.77)?("B","c"): false?undefined:(4745,971)!==5995?'"':(!!0,!{}));}for(var t9G=1;t9G<P9G.length;t9G++){C9G=P9G[t9G];if(V9G.test(C9G)){C9G=C9G.replace(V9G,"");}k9G[A9G[t9G]][h9G]=C9G;}}};x3G.I18N.setLanguage=function(G9G,H9G,l9G,b9G,v9G){var M5Z;M5Z="p";M5Z+="u";if(!v9G){v9G=(G9G.uiContext||{}).topNode||document.body;}if(H9G==M5Z){H9G="pt";}o2QQ.l9d();x3G.I18N.convertCSV(b9G);x3G.I18N.language=H9G;x3G.I18N.translateUI(H9G,v9G);if(!l9G){l9G=x3G.I18N.translate;}G9G.translationCallback=l9G;};x3G.I18N.setLocale=function(d9G,F9G,u9G,Q9G,W9G){var z9G,r9G,y9G;if(x3G.xor(this.reverseColorsByLocale[F9G],this.reverseColorsByLocale[d9G.locale])){this.reverseCandles(d9G);}if(typeof Intl=="undefined"||!Intl.__addLocaleData){d9G.setLocale(F9G,W9G);if(u9G){u9G(null);}return;}Q9G=typeof Q9G=="undefined"?"locale-data/jsonp":Q9G;o2QQ.O9X(43);o2QQ.l9d();z9G=o2QQ.L9X(".js","/",Q9G,F9G);r9G=document.createElement("SCRIPT");r9G.async=!!"1";r9G.src=z9G;y9G=document.getElementsByTagName("script")[0];y9G.parentNode.insertBefore(r9G,y9G.nextSibling);r9G.onload=function(){d9G.setLocale(F9G,W9G);o2QQ.l9d();if(u9G){u9G(null);}};r9G.onerror=function(){o2QQ.A9d();if(u9G){u9G("cannot load script");}};};o2QQ.l9d();x3G.I18N.createMonthArrays=function(X9G,T7G,q7G){var Y9G,x7G,p9G,E7G,K7G,O7G;X9G.monthAbv=[];X9G.monthLetters=[];Y9G=new Date();x7G=!![];if(x3G.I18N.longMonths&&x3G.I18N.longMonths[q7G]){x7G=!"1";}for(var e9G=0;e9G<+"12";e9G++){Y9G.setDate(1);Y9G.setMonth(e9G);p9G=T7G.format(Y9G);if(x7G){E7G="";for(var a7G=0;a7G<p9G.length;a7G++){K7G=p9G.charAt(a7G);O7G=K7G.charCodeAt(0);if(O7G<65)continue;E7G+=K7G;}X9G.monthAbv[e9G]=E7G;X9G.monthLetters[e9G]=E7G[0];}else{X9G.monthAbv[e9G]=p9G;X9G.monthLetters[e9G]=p9G;}}};x3G.I18N.localize=function(c7G,g7G){this.setLocale(c7G,g7G);o2QQ.A9d();this.setLanguage(c7G,g7G);};x3G.I18N.reverseCandles=function(n7G){var j7G,U7G,B7G;j7G=n7G.styles;U7G=n7G.cloneStyle(j7G.stx_candle_down);B7G=n7G.cloneStyle(j7G.stx_candle_up);j7G.stx_candle_up=U7G;j7G.stx_candle_down=B7G;};x3G.I18N.wordLists={en:{}};x3G.I18N.languages={en:E5Z};};k54=function k54(Z7G){var a5Z,I5Z,q5Z,w7G,N7G;a5Z="<div class=\"st";a5Z+="x-panel-control\"><div class=\"stx";a5Z+="-panel-title\"></div><div class=\"stx-panel-legend\"></div><div class=\"stx-btn-panel\"><span class=\"stx-ico-up\"></span></div><div class=\"stx-btn-panel\"><span class=\"stx-ico-focus\"></span></div><div class=\"stx-b";a5Z+="tn-panel\"><span class=\"stx-ico-down\"></span></div><div class=\"stx-btn-panel\"><span class=\"stx-ico-edit\"></span></div><div class=\"stx-btn-panel\"><span class=\"stx-ico-close\"></span></div></div>";I5Z="<div class";I5Z+="=\"stx_chart_controls\" style=\"display: none; bottom: 22px;\"><div class=\"chartSize\"><span class=\"stx-zoom-out\"></span><span class=\"stx-zoom-in\"></span></div";I5Z+="></div>";q5Z="<div class=\"stx_crosshair stx_crosshair_x\" style=\"display: non";q5Z+="e;";q5Z+="\"></div>";w7G=typeof _CIQ!=="undefined"?_CIQ:Z7G.CIQ;w7G.ChartEngine.prototype.pointerEvents={down:[],up:[]};w7G.ChartEngine.prototype.manageTouchAndMouse=!![];w7G.ChartEngine.prototype.registerTouchAndMouseEvents=function(){var S7G,f7G,i7G,h7G,L7G,D7G,h5Z,U5Z,y5Z,S5Z,i5Z,V7G;if(this.touchAndMouseEventsRegistered){return;}this.touchAndMouseEventsRegistered=!![];S7G=this.controls.chartControls||document;f7G=S7G.querySelector(".stx-zoom-in");i7G=S7G.querySelector(".stx-zoom-out");h7G=this.chart.container;L7G=this;D7G=function D7G(t7G,C7G,m7G){L7G.addDomEventListener(h7G,t7G,k7G,m7G);o2QQ.l9d();function k7G(o7G){if(L7G.mainSeriesRenderer&&L7G.mainSeriesRenderer.nonInteractive){return;}o2QQ.l9d();C7G(o7G);}};if(!w7G.touchDevice){h5Z="mo";h5Z+="us";h5Z+="edow";h5Z+="n";D7G("mousemove",function(A7G){L7G.mousemove(A7G);});D7G("mouseenter",function(R7G){o2QQ.l9d();L7G.mousemove(R7G);});D7G(h5Z,function(M7G){L7G.mousedown(M7G);});D7G("mouseup",function(P7G){L7G.mouseup(P7G);});}else{if(w7G.isSurface){U5Z="point";U5Z+="ermove";D7G("mousemove",function(I7G){o2QQ.A9d();L7G.msMouseMoveProxy(I7G);});D7G("mouseenter",function(s7G){L7G.msMouseMoveProxy(s7G);});D7G("mousedown",function(J7G){L7G.msMouseDownProxy(J7G);});D7G("mouseup",function(H7G){o2QQ.l9d();L7G.msMouseUpProxy(H7G);});D7G("pointerdown",function(l7G){return L7G.startProxy(l7G);});D7G(U5Z,function(v7G){L7G.moveProxy(v7G);});D7G("pointerenter",function(G7G){o2QQ.A9d();return L7G.moveProxy(G7G);});D7G("pointerup",function(b7G){return L7G.endProxy(b7G);});}else{y5Z="to";y5Z+="uchend";if(!w7G.isMobile){S5Z="mouseente";S5Z+="r";D7G("mousemove",function(u7G){L7G.iosMouseMoveProxy(u7G);});D7G(S5Z,function(r7G){L7G.iosMouseMoveProxy(r7G);});D7G("mousedown",function(d7G){o2QQ.l9d();L7G.iosMouseDownProxy(d7G);});D7G("mouseup",function(F7G){L7G.iosMouseUpProxy(F7G);});}D7G("touchstart",function(Q7G){L7G.touchstart(Q7G);});D7G("touchmove",function(y7G){o2QQ.l9d();L7G.touchmove(y7G);});D7G(y5Z,function(W7G){L7G.touchend(W7G);});D7G("pointerdown",function(z7G){o2QQ.A9d();L7G.touchPointerType=z7G.pointerType;});if(f7G){i5Z="onM";i5Z+="ouseOut";f7G.removeAttribute("onMouseOver");f7G.removeAttribute(i5Z);}if(i7G){i7G.removeAttribute("onMouseOver");i7G.removeAttribute("onMouseOut");}}}V7G=w7G.wheelEvent;if(this.captureMouseWheelEvents){D7G(V7G,function(e7G){o2QQ.A9d();L7G.mouseWheel(e7G);},{passive:!"1"});}};w7G.ChartEngine.prototype.mousedown=function(X7G){var K2G,E2G,p7G,T2G,Y7G,x2G,U2G;if(this.runPrepend("mousedown",arguments)){return;}this.grabOverrideClick=!1;if(!this.displayInitialized){return;}if(!this.displayCrosshairs){return;}if(this.repositioningDrawing){return;}if(this.editingAnnotation){return;}if(X7G.button&&X7G.button>=2){return;}K2G=this.container.getBoundingClientRect();this.top=K2G.top;this.left=K2G.left;this.right=this.left+this.width;this.bottom=this.top+this.height;if(X7G.clientX>=this.left&&X7G.clientX<=this.right&&X7G.clientY>=this.top&&X7G.clientY<=this.bottom){this.insideChart=!!1;}else{this.insideChart=!{};return;}if(!this.currentPanel){return;}if(this.manageTouchAndMouse&&X7G&&X7G.preventDefault&&this.captureTouchEvents){X7G.preventDefault();}this.mouseTimer=Date.now();this.longHoldTookEffect=![];this.hasDragged=!1;this.userPointerDown=!!"1";if(this.openDialog===""){this.registerPointerEvent({x:X7G.clientX,y:X7G.clientY,time:this.mouseTimer},"down");}E2G=this.currentPanel.chart;for(var a2G=0;a2G<this.drawingObjects.length;a2G++){p7G=this.drawingObjects[a2G];if(p7G.highlighted&&!p7G.permanent){if(this.cloneDrawing){T2G=w7G.ChartEngine.drawingTools[p7G.name];Y7G=new T2G();Y7G.reconstruct(this,p7G.serialize());this.drawingObjects.push(Y7G);this.activateRepositioning(Y7G);Y7G.repositioner=p7G.repositioner;return;}x2G=this.currentVectorParameters.vectorType;if(!w7G.Drawing||!x2G||!w7G.Drawing[x2G]||!new w7G.Drawing[x2G]().dragToDraw){this.activateRepositioning(p7G);return;}}}U2G=this.mainSeriesRenderer||{};var q2G=this.baselineHelper;if(q2G.size){if(this.findBaselineHandle(X7G,!!1)){return;}}if(this.controls.anchorHandles){var O2G=this.controls.anchorHandles;for(var c2G in O2G){var _O2G$c2G=O2G[c2G],g2G=_O2G$c2G.handle,j2G=_O2G$c2G.sd,n2G=_O2G$c2G.highlighted;if(n2G){this.repositioningAnchorSelector={sd:j2G};g2G.classList.add("stx-grab");return;}}}if(this.drawingClick){if(this.currentPanel.subholder===X7G.target){this.drawingClick(this.currentPanel,this.cx,this.cy);}if(this.activeDrawing&&this.activeDrawing.dragToDraw){return;}}this.grabbingScreen=!0;E2G.spanLock=!"1";this.yToleranceBroken=!"1";this.grabStartX=X7G.clientX;this.grabStartY=X7G.clientY;this.grabStartMicropixels=this.micropixels;this.grabStartScrollX=E2G.scroll;this.grabStartScrollY=this.currentPanel.yAxis.scroll;this.grabStartCandleWidth=this.layout.candleWidth;this.grabStartYAxis=this.whichYAxis(this.currentPanel);this.grabStartZoom=this.grabStartYAxis?this.grabStartYAxis.zoom:0;this.grabStartPanel=this.currentPanel;setTimeout(function(B2G){o2QQ.l9d();return function(){o2QQ.A9d();B2G.grabbingHand();};}(this),100);if(this.swipeStart){this.swipeStart(E2G);}if(this.longHoldTime||this.longHoldTime===0){this.startLongHoldTimer();}this.runAppend("mousedown",arguments);};w7G.ChartEngine.prototype.mousemove=function(N2G){var v5Z,w2G;v5Z="mo";v5Z+="us";v5Z+="emove";w2G=N2G;w7G.ChartEngine.crosshairX=w2G.clientX;w7G.ChartEngine.crosshairY=w2G.clientY;if(w2G.type.toLowerCase().indexOf("enter")>-1){this.positionCrosshairsAtPointer();return;}if(this.runPrepend("mousemove",arguments)){return;}if(!this.displayInitialized){return;}if(this.openDialog!==""){return;}if(this.baselineHelper.size){this.findBaselineHandle(w2G);}if(this.grabbingScreen&&w2G.buttons!==1){this.cancelLongHold=!!{};this.displayDragOK();this.grabbingScreen=!!"";this.findHighlights(!{},!!1);}this.mousemoveinner(w2G.clientX,w2G.clientY);this.runAppend(v5Z,arguments);};w7G.ChartEngine.prototype.mouseup=function(Z2G){var e5Z,t5Z,j5Z,i2G,t2G,L2G,D2G,S2G,C2G,m2G,f2G,o5Z,h2G,N19,k19,P19;e5Z="u";e5Z+="p";t5Z="mous";t5Z+="e";t5Z+="up";if(this.runPrepend(t5Z,arguments)){return;}this.swipe.end=!!"1";this.cancelLongHold=!!"1";if(this.repositioningDrawing){if(!this.currentVectorParameters.vectorType||Date.now()-this.mouseTimer>250){j5Z="vec";j5Z+="t";j5Z+="or";this.changeOccurred(j5Z);w7G.clearCanvas(this.chart.tempCanvas,this);this.activateRepositioning(null);this.adjustDrawings();this.draw();return;}this.activateRepositioning(null);}if(this.repositioningBaseline){var V2G=this.repositioningBaseline.handle;this.repositioningBaseline=null;V2G.classList.remove("stx-grab");i2G=this.mainSeriesRenderer||{};if(i2G.params&&i2G.params.baseline&&i2G.params.type!="mountain"){;}this.draw();return;}if(this.repositioningAnchorSelector){w7G.Studies.repositionAnchor(this,this.repositioningAnchorSelector.sd);this.repositioningAnchorSelector=null;Object.values(this.controls.anchorHandles).forEach(function(_ref11){var k2G=_ref11.handle;var w5Z;w5Z="s";w5Z+="tx";w5Z+="-g";w5Z+="rab";return k2G.classList.remove(w5Z);});this.findHighlights();return;}t2G=this.userPointerDown;this.userPointerDown=!!"";if(!this.displayInitialized){return;}L2G=this.backOutY(Z2G.clientY);D2G=this.backOutX(Z2G.clientX);S2G=Z2G.which&&Z2G.which>=2||Z2G.button&&Z2G.button>=2;C2G=this.openDialog!=="";if(!C2G&&!S2G){this.registerPointerEvent({x:Z2G.clientX,y:Z2G.clientY,time:Date.now()},e5Z);}m2G=this.isDoubleClick();this.grabbingScreen=![];if(this.highlightedDraggable){if(this.dragPlotOrAxis){this.dragPlotOrAxis(D2G,L2G);}this.currentPanel=this.whichPanel(L2G);}f2G=this.currentPanel;this.grabStartYAxis=null;this.displayDragOK();if(this.openDialog!==""){o5Z="stx";o5Z+="-";o5Z+="dra";o5Z+="g-chart";if(this.insideChart){this.container.classList.remove(o5Z);}return;}if(this.grabOverrideClick){if(!this.overXAxis&&!this.overYAxis&&this.swipeRelease){this.swipeRelease();}this.container.classList.remove("stx-drag-chart");this.grabOverrideClick=!1;this.doDisplayCrosshairs();this.updateChartAccessories();return;}if(this.insideChart){this.container.classList.remove("stx-drag-chart");}if(w7G.ChartEngine.resizingPanel){this.releaseHandle();return;}if(S2G||Z2G.ctrlKey){if(this.anyHighlighted&&this.bypassRightClick!==!!{}){this.rightClickHighlighted();if(Z2G.preventDefault&&this.captureTouchEvents){Z2G.preventDefault();}Z2G.stopPropagation();return!!0;}this.dispatch("rightClick",{stx:this,panel:f2G,x:D2G,y:L2G});return!![];}if(Z2G.clientX<this.left||Z2G.clientX>this.right){return;}if(Z2G.clientY<this.top||Z2G.clientY>this.bottom){return;}h2G=f2G&&f2G.subholder===Z2G.target;o2QQ.A9d();if(m2G&&(h2G||this.overYAxis||this.overXAxis)){this.doubleClick({button:Z2G.button,x:D2G,y:L2G});}else{if(t2G&&h2G){if(!this.longHoldTookEffect||this.activeDrawing){this.drawingClick(f2G,D2G,L2G);}if(!this.longHoldTookEffect&&this.activeMarker){this.activeMarker.click({cx:D2G,cy:L2G,panel:f2G});}}if(!this.longHoldTookEffect&&!this.activeDrawing){N19=1267036333;k19=+"1761517764";P19=2;for(var D19=+"1";o2QQ.Y19(D19.toString(),D19.toString().length,60931)!==N19;D19++){this.dispatch("",{stx:this,panel:f2G,x:D2G,y:L2G});P19+=2;}if(o2QQ.Y19(P19.toString(),P19.toString().length,33143)!==k19){this.dispatch("",{stx:this,panel:f2G,x:D2G,y:L2G});}this.dispatch("tap",{stx:this,panel:f2G,x:D2G,y:L2G});}}this.runAppend("mouseup",arguments);};w7G.ChartEngine.prototype.registerPointerEvent=function(A2G,o2G){if(this.pointerEvents[o2G].length>1){this.pointerEvents[o2G].pop();}this.pointerEvents[o2G].unshift(A2G);};w7G.ChartEngine.prototype.resetPointerEvent=function(R2G){this.pointerEvents[R2G].splice(0);};w7G.ChartEngine.prototype.isDoubleClick=function(J2G){var s2G,I2G;s2G=J2G?1200:400;var _this$pointerEvents=this.pointerEvents,M2G=_this$pointerEvents.up,P2G=_this$pointerEvents.down;this.cancelTouchSingleClick=!{};if(M2G.length<2||P2G.length<"2">>904621824){return!"1";}I2G=P2G[0].time-M2G[1].time<this.doubleClickTime&&Math.pow(M2G["1"-0].x-M2G[0].x,+"2")+Math.pow(M2G[1].y-M2G[0].y,2)<=s2G&&M2G[1].time-P2G[1].time<this.longHoldTime&&M2G[0].time-P2G[0].time<this.longHoldTime;if(I2G){this.resetPointerEvent("up");this.resetPointerEvent("down");this.cancelTouchSingleClick=!![];}return I2G;};w7G.ChartEngine.prototype.doubleClick=function(G2G,H2G,l2G){var b5Z,V5Z,v2G;b5Z="d";b5Z+="oubleClick";V5Z="dou";o2QQ.l9d();V5Z+="bleClick";if(this.runPrepend(V5Z,arguments)){return;}if(this.editingAnnotation){return;}if(w7G.ChartEngine.drawingLine){return this.undo();}if(this.activeDrawing){return;}v2G=this.activeMarker&&this.activeMarker.doubleClick({cx:H2G,cy:l2G,panel:this.currentPanel});if(!v2G){this.dispatch("doubleClick",{stx:this,button:G2G,x:H2G,y:l2G});}this.runAppend(b5Z,arguments);};w7G.ChartEngine.prototype.handleMouseOut=function(b2G){var g5Z,Y5Z,u2G,r2G;b2G=b2G||window.event;if(!w7G.withinElement(this.chart.container,b2G.pageX,b2G.pageY)){g5Z="ha";g5Z+="ndleMouseOut";Y5Z="handl";Y5Z+="eMouseOu";Y5Z+="t";if(this.runPrepend(Y5Z,arguments)){return;}if(!this.grabbingScreen){this.findHighlights(null,!![]);}this.undisplayCrosshairs();this.touches=[];this.touching=![];if(this.activeDrawing&&this.userPointerDown){this.userPointerDown=![];this.drawingLine=!"1";u2G=this.backOutY(b2G.pageY);r2G=this.backOutX(b2G.pageX);this.drawingClick(this.currentPanel,r2G,u2G);}if(this.repositioningAnchorSelector){this.repositioningAnchorSelector=null;}this.insideChart=![];this.overYAxis=!{};this.overXAxis=![];this.displaySticky();this.runAppend(g5Z,arguments);}};w7G.ChartEngine.prototype.startLongHoldTimer=function(){var d2G,F2G;d2G=this;this.cancelLongHold=!!"";o2QQ.l9d();if(this.longHoldTimeout){clearTimeout(this.longHoldTimeout);}F2G=function F2G(){var F5Z;F5Z="lon";F5Z+="gho";F5Z+="l";F5Z+="d";if(d2G.cancelLongHold){return;}d2G.longHoldTookEffect=!!"1";d2G.dispatch(F5Z,{stx:d2G,panel:d2G.currentPanel,x:d2G.cx,y:d2G.cy});d2G.displayDragOK();};if(this.longHoldTime){this.longHoldTimeout=setTimeout(F2G,this.longHoldTime);}else if(this.longHoldTime===0){F2G();}};w7G.ChartEngine.prototype.grabHandle=function(Q2G){var T5Z;T5Z="g";T5Z+="rabH";T5Z+="a";T5Z+="ndle";if(this.runPrepend(T5Z,arguments)){return;}o2QQ.A9d();if(!Q2G){return;}w7G.ChartEngine.crosshairY=Q2G.top+this.top;w7G.ChartEngine.resizingPanel=Q2G;Q2G.handle.classList.add("stx-grab");this.runAppend("grabHandle",arguments);};w7G.ChartEngine.prototype.grabbingHand=function(){if(!this.allowScroll){return;}if(!this.grabbingScreen){return;}o2QQ.A9d();if(w7G.touchDevice){return;}this.container.classList.add("stx-drag-chart");};w7G.ChartEngine.prototype.releaseHandle=function(){var x5Z;x5Z="r";x5Z+="eleaseHa";x5Z+="n";x5Z+="dle";if(this.runPrepend(x5Z,arguments)){return!![];}w7G.clearCanvas(this.chart.tempCanvas,this);this.resizePanels();o2QQ.l9d();if(w7G.ChartEngine.resizingPanel){w7G.ChartEngine.resizingPanel.handle.classList.remove("stx-grab");}w7G.ChartEngine.resizingPanel=null;this.runAppend("releaseHandle",arguments);};w7G.ChartEngine.prototype.findHighlights=function(l5G,N5G){var d5Z,Y2G,E5G,B5G,c5G,a5G,w5G,X2G,S5G,R5G,z2G,y2G,x5G,q5G,W2G,L5G,h5G,G5G,b5G,c5Z,p2G,V5G,A5Z,X5G,K5G,I5G,B5Z,D5G,s5G,t5G,O5G,g5G,n5G,J5G,U5G,p5G,N5Z,n5Z,f5G,u5G,C5G,m5G,k5G,Z5G,i5G,o5G,Y5G;d5Z="dra";d5Z+="win";d5Z+="g";Y2G=this.preferences[l5G?"highlightsTapRadius":"highlightsRadius"];this.highlightViaTap=l5G;var j5G=this.cx,T5G=this.cy;this.anyHighlighted=!{};if(!this.currentPanel){return;}var e2G=this.currentPanel.chart;if(this.activeDrawing){N5G=!!{};}E5G=![];B5G=null;c5G=N5G?{}:{forceShow:!!{},type:d5Z};a5G={x0:this.tickFromPixel(j5G-Y2G,e2G),x1:this.tickFromPixel(j5G+Y2G,e2G),y0:this.valueFromPixel(T5G-Y2G,this.currentPanel),y1:this.valueFromPixel(T5G+Y2G,this.currentPanel),cx0:j5G-Y2G,cx1:j5G+Y2G,cy0:T5G-Y2G,cy1:T5G+Y2G,r:Y2G};if(this.repositioningDrawing&&a5G.x1-a5G.x0<"2">>726646432){a5G.x1++;a5G.x0--;}else if(a5G.x1==a5G.x0){a5G.x0-=0.5;a5G.x1+=+"0.5";}w5G=this.markerHelper&&this.markerHelper.chartMap[e2G.name]&&this.markerHelper.chartMap[e2G.name].markers;if(!e2G.hideDrawings){for(var A5G=this.drawingObjects.length-1;A5G>=0;A5G--){X2G=this.drawingObjects[A5G];if(!this.panels[X2G.panelName])continue;if(this.repositioningDrawing&&this.repositioningDrawing!=X2G)continue;S5G=X2G.highlighted;R5G=X2G.panelName==this.currentPanel.name;X2G.repositioner=X2G.intersected(this.crosshairTick,this.crosshairValue,a5G);R5G=R5G&&X2G.repositioner;if(!N5G&&R5G){if(S5G){B5G=X2G;if(this.anyHighlighted&&this.singleDrawingHighlight){X2G.highlighted=![];}if(X2G.highlighted&&X2G.highlighted!=S5G){E5G=!![];};}else if(S5G!=X2G.highlight(!"")){if(!B5G){B5G=X2G;}if(this.anyHighlighted&&this.singleDrawingHighlight){X2G.highlighted=!1;}E5G=!![];}this.anyHighlighted=!!"1";}else{if(S5G!=X2G.highlight(!{})){E5G=!0;}}if(X2G.highlighted){c5G.noDelete=X2G.permanent;c5G.noEdit=!this.callbackListeners.drawingEdit.length;}}}for(z2G in this.layout.studies){y2G=this.layout.studies[z2G];y2G.prev=y2G.highlight;y2G.highlight=this.yaxisMatches(y2G,this.grabStartYAxis);}for(z2G in e2G.seriesRenderers){L5G=e2G.seriesRenderers[z2G];L5G.params.highlight=this.yaxisMatches(L5G,this.grabStartYAxis);for(var M5G=+"0";M5G<L5G.seriesParams.length;M5G++){W2G=L5G.seriesParams[M5G];W2G.prev=W2G.highlight;W2G.highlight=L5G.params.highlight;}}for(x5G=0;w5G&&x5G<w5G.length;x5G++){q5G=w5G[x5G];if(!q5G.params.box)continue;this.activeMarker=null;q5G.prev=w5G[x5G].highlight;q5G.highlight=![];}if(this.markerHelper){this.markerHelper.highlighted=[];}this.highlightedDataSetField=null;this.highlightedDraggable=null;if(!N5G&&!this.anyHighlighted&&this.controls.anchorHandles){for(var F5G in this.controls.anchorHandles){h5G=this.controls.anchorHandles[F5G];var _h5G=h5G,v5G=_h5G.handle,Q5G=_h5G.sd;G5G=this.resolveX(j5G);b5G=this.resolveY(T5G);if(v5G){var _v5G$getBoundingClien=v5G.getBoundingClientRect(),y5G=_v5G$getBoundingClien.left,W5G=_v5G$getBoundingClien.top,z5G=_v5G$getBoundingClien.right,e5G=_v5G$getBoundingClien.bottom;if(w7G.boxIntersects(y5G,W5G,z5G,e5G,G5G,b5G,G5G,b5G)){c5Z="a";c5Z+="ncho";c5Z+="rHandle";h5G.highlighted=!![];this.anyHighlighted=!"";E5G=!!"1";c5G={message:Q5G.name,type:c5Z};continue;}if(h5G.highlighted===!![]){h5G.highlighted=!"1";E5G=!!1;}}}}if(!N5G&&!this.anyHighlighted&&e2G.dataSegment){p2G=this.barFromPixel(j5G);if(p2G>=0&&p2G<e2G.dataSegment.length){for(z2G in this.overlays){A5Z="fu";A5Z+="n";A5Z+="cti";A5Z+="on";y2G=this.overlays[z2G];if(y2G.panel!=this.currentPanel.name)continue;if(y2G.study.isHighlighted===![])continue;else if(_typeof(y2G.study.isHighlighted)==A5Z){if(y2G.study.isHighlighted(this,j5G,T5G)){y2G.highlight=!"";this.anyHighlighted=!![];}continue;}X5G=e2G.dataSegment[p2G];if(!X5G)continue;for(var P5G in y2G.outputMap){if(d5G.call(this,p2G,a5G,P5G,y2G.getYAxis(this))){if(y2G.name!=y2G.panel){this.anyHighlighted=!"";}y2G.highlight=P5G;break;}}if(y2G.highlight){this.highlightedDataSetField=P5G;break;;}}for(z2G in e2G.seriesRenderers){if(this.highlightedDataSetField)break;K5G=e2G.seriesRenderers[z2G];I5G=K5G.params.panel;if(K5G==this.mainSeriesRenderer)continue;if(!K5G.params.highlightable&&!this.currentVectorParameters.vectorType)continue;if(I5G!=this.currentPanel.name)continue;for(x5G=+"0";x5G<K5G.seriesParams.length;x5G++){B5Z="C";B5Z+="l";B5Z+="o";B5Z+="se";W2G=K5G.seriesParams[x5G];D5G=W2G.field;if(!D5G&&!K5G.highLowBars){D5G=this.defaultPlotField||B5Z;}if(W2G.symbol&&W2G.subField){D5G+="-->"+W2G.subField;}s5G=K5G.params.yAxis;if(!s5G&&I5G){s5G=this.panels[I5G].yAxis;}if(K5G.params.step&&p2G>0){if(!K5G.caches[W2G.id])continue;V5G=K5G.caches[W2G.id][p2G];if(!V5G&&V5G!==0)continue;o2QQ.O9X(6);t5G=K5G.caches[W2G.id][o2QQ.x9X(1,p2G)];if((t5G||t5G===0)&&T5G+Y2G>=V5G&&T5G-Y2G<=t5G||T5G-Y2G<=V5G&&T5G+Y2G>=t5G){W2G.highlight=!!"1";this.anyHighlighted=!!{};}}else if(d5G.call(this,p2G,a5G,D5G,s5G,K5G,W2G.id)){W2G.highlight=!![];this.anyHighlighted=!!{};}if(W2G.highlight){this.highlightedDataSetField=D5G;break;}}}}}function d5G(A4G,o4G,C4G,Z4G,L4G,m4G){var B67=o2QQ;var z5Z,L5Z,T4G,q4G,k4G,D4G,g4G,i4G,w4G,N4G,E4G,K4G,O4G,U4G,c4G,j4G,a4G,n4G,x4G,V4G,t4G,B4G,S4G,h4G;z5Z="segme";z5Z+="nt";L5Z="Clos";L5Z+="e";T4G=this.chart;q4G=this.currentPanel;if(!Z4G){Z4G=q4G.yAxis;}k4G=C4G.split("-->");D4G=k4G[0];g4G=k4G[1];if(!g4G){g4G=L5Z;}i4G=T4G.dataSegment[p2G];U4G=null;c4G=null;j4G=null;a4G=new Array(3);n4G=L4G&&L4G.caches[m4G];if(i4G&&n4G){E4G=n4G[p2G];U4G=i4G.tick;if(E4G||E4G===0){a4G[0]=+"1";}for(x4G=p2G-1;x4G>=0;x4G--){if(n4G[x4G]||n4G[x4G]===("0"^0)){K4G=n4G[x4G];B67.I9X(76);c4G=B67.L9X(x4G,U4G,p2G);a4G[1]=1;break;}}for(x4G=p2G+1;x4G<T4G.dataSegment.length;x4G++){if(n4G[x4G]||n4G[x4G]==="0">>1616859712){O4G=n4G[x4G];B67.I9X(76);j4G=B67.L9X(x4G,U4G,p2G);a4G[2]=1;break;}}}if(c4G===null){w4G=this.getPreviousBar.call(this,T4G,C4G,p2G);if(w4G){c4G=w4G.tick;K4G=f4G(w4G);}}if(j4G===null){N4G=this.getNextBar.call(this,T4G,C4G,p2G);if(N4G){j4G=N4G.tick;O4G=f4G(N4G);}}if(c4G===null&&j4G===null){return!{};}if(!n4G){E4G=f4G(i4G);K4G=f4G(w4G);O4G=f4G(N4G);U4G=i4G.tick;if(w4G){c4G=w4G.tick;}if(N4G){j4G=N4G.tick;}}if(!K4G&&K4G!==0){K4G=0;c4G=0;}if(!O4G&&O4G!==0){if(E4G||E4G===0){O4G=E4G;a4G[2]=a4G[0];}else{O4G=K4G;B67.O9X(50);a4G[B67.x9X("2",0)]=a4G[1];}if(m4G&&T4G.series[m4G].parameters.extendToEndOfDataSet){j4G=T4G.dataSet.length-+"1";}else{j4G=c4G;}}if(!E4G&&E4G!==+"0"){E4G=O4G;U4G=j4G;a4G[0]=a4G[2];if(K4G===+"0"&&c4G===0){K4G=E4G;c4G=U4G;B67.O9X(53);a4G[B67.x9X(65535168,"1")]=a4G[0];}}V4G=this.pixelFromTransformedValue.bind(this);t4G=this.valueFromPixel.bind(this);E4G=t4G(a4G[0]?E4G:V4G(E4G,q4G,Z4G),q4G);K4G=t4G(a4G[1]?K4G:V4G(K4G,q4G,Z4G),q4G);O4G=t4G(a4G[2]?O4G:V4G(O4G,q4G,Z4G),q4G);B4G=w7G.convertBoxToPixels(this,q4G.name,o4G);S4G=w7G.convertBoxToPixels(this,q4G.name,{x0:c4G,y0:K4G,x1:U4G,y1:E4G});function f4G(M4G){var R4G;if(!M4G){return null;}R4G=M4G[D4G];if(R4G&&(R4G[g4G]||R4G[g4G]===0)){R4G=R4G[g4G];}if(L4G&&L4G.getBasis){R4G+=L4G.getBasis(M4G,D4G,g4G);}B67.A9d();if(!T4G.transformFunc||Z4G!=T4G.yAxis){return R4G;}else if(M4G.transform&&D4G in M4G.transform){R4G=M4G.transform[D4G];if(R4G&&(R4G[g4G]||R4G[g4G]===0)){R4G=R4G[g4G];}return R4G;}return T4G.transformFunc(this,T4G,R4G);}h4G=w7G.convertBoxToPixels(this,q4G.name,{x0:U4G,y0:E4G,x1:j4G,y1:O4G});if(w7G.boxIntersects(B4G.x0,B4G.y0,B4G.x1,B4G.y1,S4G.x0,S4G.y0,S4G.x1,S4G.y1,z5Z)||w7G.boxIntersects(B4G.x0,B4G.y0,B4G.x1,B4G.y1,h4G.x0,h4G.y0,h4G.x1,h4G.y1,"segment")){return!![];}return!!"";}g5G=this.preferences.dragging;for(z2G in this.overlays){y2G=this.overlays[z2G];if(y2G.highlight){this.anyHighlighted=!!"1";J5G=y2G.inputs.display||y2G.name;J5G=this.translateIf(J5G);c5G={message:J5G,noDelete:y2G.permanent,noEdit:!y2G.editFunction,type:"study"};B5G=null;if(g5G===!![]||g5G&&g5G.study){O5G=y2G;}n5G=y2G.getYAxis(this);}if(y2G.prev!=y2G.highlight){E5G=!!1;}}for(z2G in e2G.seriesRenderers){U5G=e2G.seriesRenderers[z2G];p5G=U5G.params.yAxis?U5G.params.yAxis.textStyle:null;for(var H5G="0">>1077224352;H5G<U5G.seriesParams.length;H5G++){W2G=U5G.seriesParams[H5G];if(U5G.params.highlightable&&W2G.highlight){N5Z="serie";N5Z+="s";n5Z="a";n5Z+="u";n5Z+="t";n5Z+="o";this.anyHighlighted=!!"1";f5G=W2G.color||p5G;if(f5G==n5Z){f5G=this.defaultColor;}if(W2G.opacity&&W2G.opacity!==1){f5G=w7G.hexToRgba(w7G.colorToHex(f5G),parseFloat(W2G.opacity));}c5G={message:W2G.display||W2G.symbol,backgroundColor:f5G,noDelete:W2G.permanent,type:N5Z};B5G=null;if(g5G===!!{}||g5G&&g5G.series){O5G=U5G;U5G.params.highlight=!![];}n5G=U5G.getYAxis(this);}if(W2G.prev!=W2G.highlight){E5G=!"";}}}for(z2G in this.plugins){u5G=this.plugins[z2G];C5G={};if(u5G.findHighlights){C5G=u5G.findHighlights(this,l5G,N5G);if(C5G.somethingChanged){E5G=!!"1";}if(C5G.anyHighlighted){this.anyHighlighted=!!1;c5G=C5G.stickyArgs||{};}}}m5G=this.whichPanel(T5G);k5G=this.whichYAxis(m5G,j5G);if(!n5G){n5G=k5G;}if(this.currentBaseline){n5G=this.currentBaseline.getYAxis(this);}if(n5G){if(!n5G.highlight){E5G=!![];}n5G.highlight=!![];}Z5G=[];for(var r5G in this.panels){Z5G=Z5G.concat(this.panels[r5G].yaxisLHS).concat(this.panels[r5G].yaxisRHS);}for(z2G=+"0";z2G<Z5G.length;z2G++){if(n5G==Z5G[z2G]&&!N5G)continue;if(Z5G[z2G].highlight){E5G=!![];}Z5G[z2G].highlight=![];}for(x5G=0;w5G&&x5G<w5G.length;x5G++){q5G=w5G[x5G];i5G=q5G.params.box;if(!i5G)continue;if(q5G.params.panelName!==this.currentPanel.name)continue;o5G=w7G.convertBoxToPixels(this,this.currentPanel.name,a5G);if(w7G.boxIntersects(o5G.x0,o5G.y0,o5G.x1,o5G.y1,i5G.x0,i5G.y0,i5G.x1,i5G.y1)){this.activeMarker=q5G;q5G.highlight=!!1;this.markerHelper.highlighted.push(q5G);}if(q5G.prev!=q5G.highlight){E5G=!!{};}}if(E5G){this.draw();c5G.panel=m5G;if(this.anyHighlighted&&!this.grabStartYAxis){c5G.panel=m5G;}else{c5G={};}this.displaySticky(c5G);this.clearMeasure();if(B5G){B5G.measure();}}if((g5G===!!1||g5G&&g5G.yaxis)&&k5G&&!k5G.noDraw){this.anyHighlight=!!1;O5G=k5G;}if(!this.anyHighlighted){this.setMeasure();}if(O5G&&!m5G.noDrag){if(this.longHoldTookEffect&&!this.cancelLongHold){if(O5G.params){if(O5G.params.dependentOf){O5G=e2G.seriesRenderers[O5G.params.dependentOf];O5G.params.highlight=!0;}for(z2G in e2G.seriesRenderers){if(e2G.seriesRenderers[z2G].params.dependentOf==O5G.params.name){e2G.seriesRenderers[z2G].params.highlight=!!{};}}}this.highlightedDraggable=O5G;if(O5G.getDependents){Y5G=O5G.getDependents(this,!![]);for(z2G in this.overlays){y2G=this.overlays[z2G];if(Y5G.indexOf(y2G)>-1){y2G.highlight=!!1;}}}}this.container.classList.add("stx-draggable");}else{this.container.classList.remove("stx-draggable");}this.highlightedDataSetField=this.adjustHighlightedDataSetField(this.highlightedDataSetField);this.displayDrawOK();};w7G.ChartEngine.prototype.rightClickHighlighted=function(){o2QQ.A9d();if(this.runPrepend("rightClickHighlighted",arguments)){return;}this.deleteHighlighted(!!{});this.runAppend("rightClickHighlighted",arguments);};w7G.ChartEngine.prototype.deleteHighlighted=function(Q4G,d4G){var k5Z,l4G,s4G,y4G,W4G,J4G,F4G,P4G,G4G,e4G,u4G,H4G,r4G;o2QQ.l9d();k5Z="deleteHighlight";k5Z+="ed";if(this.runPrepend("deleteHighlighted",arguments)){return;}this.cancelTouchSingleClick=!"";w7G.clearCanvas(this.chart.tempCanvas,this);l4G=this.bypassRightClick===!{};if(l4G||!this.bypassRightClick.drawing){for(var I4G=this.drawingObjects.length-1;I4G>=0;I4G--){s4G=this.drawingObjects[I4G];if(!s4G.highlighted)continue;if(Q4G){this.rightClickDrawing(s4G,d4G);}else if(!s4G.permanent){y4G=s4G.abort();if(!y4G){W4G=this.exportDrawings();this.drawingObjects.splice(I4G,1);this.undoStamp(W4G,this.exportDrawings());}this.changeOccurred("vector");}}}if(l4G||!this.bypassRightClick.study){for(var v4G in this.overlays){J4G=this.overlays[v4G];if((J4G.overlay||J4G.underlay)&&J4G.highlight&&!J4G.permanent){if(Q4G||d4G){this.rightClickOverlay(v4G,d4G);}else{this.removeOverlay(v4G);}}}}F4G=this.currentPanel.chart;if(l4G||!this.bypassRightClick.series){for(var z4G in F4G.seriesRenderers){P4G=F4G.seriesRenderers[z4G];if(P4G.params.highlightable){G4G=this.panels[P4G.params.panel];e4G=G4G&&G4G.yAxis.name;for(var b4G=P4G.seriesParams.length-1;b4G>=0;b4G--){u4G=P4G.seriesParams[b4G];if((P4G.params.highlight||u4G.highlight)&&!u4G.permanent){P4G.removeSeries(u4G.id);if(P4G.seriesParams.length<"1"-0){this.removeSeriesRenderer(P4G);if(P4G.params.name==e4G){this.electNewPanelOwner(P4G.params.panel);}else{this.checkForEmptyPanel(P4G.params.panel);H4G=this.getYAxisByName(G4G,P4G.params.name);if(H4G){H4G.name=H4G.studies[0]||H4G.renderers[1];}}}}}}}}this.draw();this.resizeChart();this.clearMeasure();r4G=this.controls.mSticky;if(r4G){r4G.style.display="none";r4G.children[0].innerHTML="";}this.runAppend(k5Z,arguments);};w7G.ChartEngine.prototype.displayDragOK=function(x8G){var B2d=o2QQ;var p4G,X4G,O8G,T8G,q8G,G5Z,c8G,J5Z,D5Z,H5Z,f5Z,E8G,Y4G,g8G,j8G;p4G=this.controls.dragOk;if(p4G){if(!x8G){if(!this.tapForHighlighting||!this.touchingEvent||this.anyHighlighted){this.findHighlights(this.highlightViaTap);};}X4G=this.highlightedDraggable;O8G=X4G&&X4G.undraggable&&X4G.undraggable(this);T8G=this.cx;q8G=this.cy;if(!x8G){if(X4G&&!O8G&&this.longHoldTookEffect&&!this.cancelLongHold){G5Z="inline";G5Z+="-b";G5Z+="loc";G5Z+="k";c8G=X4G.inputs&&X4G.inputs.display||X4G.params&&(X4G.params.display||X4G.params.name)||X4G.name;p4G.querySelector(".field").setAttribute("text",c8G);K8G.call(this,p4G);p4G.style.display=G5Z;this.draw();this.displaySticky();if(this.grabStartYAxis){this.container.classList.replace("stx-drag-chart","stx-drag-axis");}else{this.container.classList.replace("stx-drag-chart","stx-drag-series");}}else{J5Z="stx-dra";J5Z+="g-axis";D5Z="n";D5Z+="o";D5Z+="n";D5Z+="e";p4G.style.display=D5Z;this.draw();this.container.classList.remove("stx-drag-series");this.container.classList.remove(J5Z);for(var a8G in this.panels){H5Z="l";H5Z+="e";H5Z+="f";H5Z+="t";f5Z="a";f5Z+="l";f5Z+="l";E8G=this.panels[a8G].subholder.classList;E8G.remove("dropzone");E8G.remove(f5Z);E8G.remove(H5Z);E8G.remove("right");E8G.remove("top");E8G.remove("bottom");for(Y4G=0;Y4G<this.panels[a8G].yaxisLHS.length;Y4G++){this.panels[a8G].yaxisLHS[Y4G].dropzone=null;}for(Y4G=0;Y4G<this.panels[a8G].yaxisRHS.length;Y4G++){this.panels[a8G].yaxisRHS[Y4G].dropzone=null;}}}this.draw();}if(X4G){g8G=q8G+p4G.offsetHeight;j8G=Math.max(0,T8G-p4G.offsetWidth);B2d.I9X(0);p4G.style.top=B2d.x9X("px",g8G);B2d.I9X(0);p4G.style.left=B2d.L9X("px",j8G);K8G.call(this,p4G);}}function K8G(B8G){var P5Z,U8G,n8G;P5Z=".fi";P5Z+="e";P5Z+="ld";U8G=this.translateIf(B8G.querySelector(P5Z).getAttribute("text"));n8G=this.whichYAxis(this.whichPanel(this.cy),this.cx,this.cy);B2d.l9d();if(n8G&&n8G.dropzone=="all"){U8G+="-->"+this.translateIf(n8G.name);}B8G.querySelector(".field").innerHTML=U8G;}};w7G.ChartEngine.prototype.displayDrawOK=function(){var v2d=o2QQ;var w8G,N8G,W5Z,s5Z,Z8G,L8G;w8G=this.controls.drawOk;v2d.l9d();if(w8G&&w7G.Drawing){N8G=w7G.Drawing[this.currentVectorParameters.vectorType];if(N8G){N8G=new N8G();}if(this.highlightedDataSetField&&N8G&&N8G.getYValue){W5Z=".";W5Z+="fi";W5Z+="eld";s5Z="p";s5Z+="x";w8G.style.display="inline-block";Z8G=this.cy+w8G.offsetHeight;L8G=this.cx-w8G.offsetWidth;v2d.O9X(0);w8G.style.top=v2d.x9X(s5Z,Z8G);v2d.O9X(0);w8G.style.left=v2d.x9X("px",L8G);w8G.querySelector(W5Z).innerHTML=this.translateIf(this.highlightedDataSetField);}else{w8G.style.display="none";}}};w7G.ChartEngine.prototype.mouseWheel=function(D8G){var K2d=o2QQ;var i8G,f8G,j99,w99,e99,S8G,h8G,V8G,t8G,C8G;if(this.runPrepend("mouseWheel",arguments)){return;}if(D8G.preventDefault){D8G.preventDefault();}if(this.openDialog!==""){return;}i8G=D8G.deltaX;f8G=D8G.deltaY;if(Math.abs(f8G)>Math.abs(i8G)){K2d.I9X(74);i8G=K2d.L9X(2147483647,"0");}else{f8G=0;}j99=-586099853;w99=-1276657693;K2d.I9X(74);e99=K2d.L9X(2147483647,"2");for(var V99=1;K2d.Y19(V99.toString(),V99.toString().length,26125)!==j99;V99++){this.lastMouseWheelEvent=Date.now();if(Math.abs(i8G)!==3||Math.abs(f8G)==+"5"){return;}e99+=+"2";}if(K2d.Y19(e99.toString(),e99.toString().length,54980)!==w99){this.lastMouseWheelEvent=Date.now();if(Math.abs(i8G)==="0">>1639098784&&Math.abs(f8G)===0){return;}}if(this.allowSideswipe&&i8G!==0){this.lastMove="horizontal";S8G=i8G;if(S8G>50){S8G=50;}if(S8G<-+"50"){S8G=-50;}this.grabbingScreen=!!{};if(!this.currentPanel){this.currentPanel=this.chart.panel;}this.grabStartX=w7G.ChartEngine.crosshairX;this.grabStartY=w7G.ChartEngine.crosshairY;this.grabStartScrollX=this.chart.scroll;this.grabStartScrollY=this.currentPanel.yAxis.scroll;this.grabStartMicropixels=this.micropixels;this.grabStartPanel=this.currentPanel;this.mousemoveinner(w7G.ChartEngine.crosshairX-S8G,w7G.ChartEngine.crosshairY);this.updateChartAccessories();this.grabbingScreen=!1;return;}this.lastMove="vertical";if(!this.allowZoom){return;}if(!this.displayInitialized){return;}if(!f8G){if(w7G.wheelEvent=="mousewheel"){K2d.O9X(6);var r2X=K2d.x9X(1,0);f8G=r2X/+"40"*D8G.wheelDelta;if(D8G.wheelDeltaX){K2d.O9X(77);var K2X=K2d.L9X(0,143,13,11);K2d.I9X(29);var C2X=K2d.L9X(57,10374,39,13,14);i8G=K2X/C2X*D8G.wheelDeltaX;}}else{f8G=D8G.detail;}}if(typeof D8G.deltaMode=="undefined"){D8G.deltaMode=D8G.type=="MozMousePixelScroll"?0:1;}h8G=-f8G;if(D8G.deltaMode==1){K2d.O9X(49);h8G*=K2d.L9X(0,"33");}V8G=null;t8G=null;if(this.mouseWheelAcceleration){C8G=Math.max(Math.pow(Math.abs(h8G),0.3),1);K2d.O9X(78);V8G=K2d.L9X(C8G,1,0,"0.1");K2d.I9X(38);t8G=K2d.L9X(0.2,C8G,1);}this.zoomInitiatedByMouseWheel=!!{};if(h8G>0){if(this.reverseMouseWheel){this.zoomOut(null,t8G);}else{this.zoomIn(null,V8G);}}else if(h8G<0){if(this.reverseMouseWheel){this.zoomIn(null,V8G);}else{this.zoomOut(null,t8G);}}if(this.runAppend("mouseWheel",arguments)){return;}return![];};w7G.ChartEngine.handleContextMenu=function(o8G){var k8G;for(var m8G=0;m8G<w7G.ChartEngine.registeredContainers.length;m8G++){k8G=w7G.ChartEngine.registeredContainers[m8G].stx;if(k8G){if(k8G.anyHighlighted){if(o8G.preventDefault){o8G.preventDefault();}return!!0;}}}};if(typeof document!="undefined"){document.addEventListener("contextmenu",w7G.ChartEngine.handleContextMenu);}w7G.ChartEngine.htmlControls={annotationSave:'<span class="stx-btn stx_annotation_save" style="display: none;">save</span>',annotationCancel:'<span class="stx-btn stx_annotation_cancel" style="display: none; margin-left:10px;">cancel</span>',mSticky:'<div class="stx_sticky"> <span class="mStickyInterior"></span> <span class="mStickyRightClick"><span class="overlayEdit stx-btn" style="display:none"><span>&nbsp;</span></span> <span class="overlayTrashCan stx-btn" style="display:none"><span>&nbsp;</span></span> <span class="mouseDeleteInstructions"><span>(</span><span class="mouseDeleteText">right-click to delete</span><span class="mouseManageText">right-click to manage</span><span class="dragAnchorText">drag to change anchor time</span><span>)</span></span></span><span class="stickyLongPressText">(long-press to drag)</span></div>',drawOk:'<div class="stx_draw_ok"><div class="icon"></div><div class="field"></div></div>',dragOk:'<div class="stx_drag_ok"><div class="icon"></div><div class="field"></div></div>',crossX:q5Z,crossY:'<div class="stx_crosshair stx_crosshair_y" style="display: none;"></div>',chartControls:I5Z,home:'<div class="stx_jump_today" style="display:none"><span></span></div>',floatDate:'<div class="stx-float-date" style="visibility: hidden;"></div>',handleTemplate:'<div class="stx-ico-handle" style="display: none;"><span></span></div> ',iconsTemplate:a5Z,baselineHandle:'<div class="stx-baseline-handle" style="display: none;"></div>',notificationTray:'<div class="stx_notification_tray"><template><div><span class="icon"></span><span class="message"></span></div></template></div>'};w7G.ChartEngine.prototype.registerChartControl=function(P8G,s8G,I8G){var b2d=o2QQ;var R8G,A8G,M8G,l5Z,R5Z,Q5Z;R8G=this.controls;if(!R8G||!R8G.chartControls){return;}if(R8G.chartControls.querySelector((780.38==("4707"^0,"420.79"-0)?0x1d71:".")+P8G)){return;}b2d.l9d();A8G=null;M8G=R8G.chartControls.querySelector(".stx-zoom-in");if(M8G){l5Z="s";l5Z+="tx-chart-control-button ";R5Z="</s";R5Z+="pan>";Q5Z="<";Q5Z+="span class=\"stx-tooltip\">";A8G=document.createElement("span");b2d.I9X(21);A8G.innerHTML=b2d.x9X(Q5Z,s8G,R5Z);b2d.O9X(0);A8G.className=b2d.L9X(P8G,l5Z);M8G.parentNode.appendChild(A8G);if(I8G){w7G.safeClickTouch(A8G,I8G);}if(!w7G.touchDevice){this.makeModal(A8G);}return A8G;}};w7G.ChartEngine.prototype.zoomOut=function(G8G,l8G){var r5Z,J8G,H8G,v8G,u8G;o2QQ.l9d();r5Z="zo";r5Z+="omOut";if(this.runPrepend(r5Z,arguments)){return;}if(this.preferences.zoomOutSpeed){l8G=this.preferences.zoomOutSpeed;}else if(!l8G){o2QQ.O9X(7);l8G=o2QQ.L9X(1,0.7);}function r8G(d8G){o2QQ.A9d();return function(F8G){J8G.zoomSet(F8G,d8G);if(J8G.animations.zoom.hasCompleted){if(J8G.runAppend("zoomOut",arguments)){return;}J8G.changeOccurred("layout");if(J8G.continuousZoom){J8G.continuousZoom.execute(!![]);}}};}if(G8G&&G8G.preventDefault){G8G.preventDefault();}this.cancelTouchSingleClick=!!{};J8G=this;for(var b8G in this.charts){H8G=this.charts[b8G];v8G=H8G.width*l8G/this.layout.candleWidth;if(H8G.allowScrollFuture===!!""&&H8G.allowScrollPast===!!""&&v8G>H8G.dataSet.length){v8G=H8G.dataSet.length;}u8G=this.chart.width/v8G;this.layout.setSpan=null;this.layout.range=null;this.animations.zoom.run(r8G(H8G),this.layout.candleWidth,u8G);}};w7G.ChartEngine.prototype.zoomIn=function(e8G,z8G){var Q8G,W8G,y8G,p8G;if(this.runPrepend("zoomIn",arguments)){return;}if(this.preferences.zoomInSpeed){z8G=this.preferences.zoomInSpeed;}else if(!z8G){z8G=0.7;}if(e8G&&e8G.preventDefault){e8G.preventDefault();}this.cancelTouchSingleClick=!!1;function Y8G(E6F){o2QQ.A9d();return function(a6F){var K5Z;Q8G.zoomSet(a6F,E6F);if(Q8G.animations.zoom.hasCompleted){K5Z="z";K5Z+="o";K5Z+="omI";K5Z+="n";if(Q8G.runAppend(K5Z,arguments)){return;}Q8G.changeOccurred("layout");if(Q8G.continuousZoom){Q8G.continuousZoom.execute();}}};}Q8G=this;for(var X8G in this.charts){W8G=this.charts[X8G];y8G=W8G.width*z8G/this.layout.candleWidth;if(W8G.maxTicks-y8G<1){y8G=W8G.maxTicks-+"1";}if(y8G<this.minimumZoomTicks){y8G=this.minimumZoomTicks;}p8G=this.chart.width/y8G;this.layout.setSpan=null;this.layout.range=null;this.animations.zoom.run(Y8G(W8G),this.layout.candleWidth,p8G);}};w7G.ChartEngine.prototype.createCrosshairs=function(){var C5Z,x6F,K6F;C5Z="createCr";C5Z+="osshairs";if(this.runPrepend("createCrosshairs",arguments)){return;}if(!this.manageTouchAndMouse||this.mainSeriesRenderer&&this.mainSeriesRenderer.nonInteractive){return;}x6F=this.controls.crossX;K6F=this.controls.crossY;if(x6F){if(!x6F.onmousedown){x6F.onmousedown=function(O6F){if(O6F.preventDefault){O6F.preventDefault();}return!!0;};}}if(K6F){if(!K6F.onmousedown){K6F.onmousedown=function(T6F){if(T6F.preventDefault){T6F.preventDefault();}return![];};}}this.runAppend(C5Z,arguments);};N7G=!"1";w7G.ChartEngine.prototype.mousemoveinner=w7G.ChartEngine.prototype.mousemoveinner||function(q6F,c6F){var O5Z;o2QQ.l9d();O5Z="interaction feature re";O5Z+="quires activating movement feature.";if(!N7G){console.error(O5Z);}N7G=!![];};};o54=function o54(j6F){o2QQ.A9d();var g6F;g6F=typeof _CIQ!=="undefined"?_CIQ:j6F.CIQ;if(!g6F.Marker){g6F.ChartEngine.helpersToRegister.push(function(n6F){n6F.markerHelper={chartMap:{},classMap:{},domMarkers:[],highlighted:[]};});g6F.ChartEngine.prototype.addToHolder=function(B6F){var w6F,N6F,Z6F,U6F;w6F=this.panels[B6F.params.panelName];o2QQ.l9d();if(!w6F){return;}N6F=B6F.params;Z6F=B6F.node;U6F=B6F.stxNodeCreator;if(U6F&&U6F.prepareForHolder){Z6F=U6F.prepareForHolder(B6F);}if(N6F.chartContainer){this.container.appendChild(B6F.node);}else if(N6F.includeAxis){w6F.holder.appendChild(B6F.node);}else{w6F.subholder.appendChild(Z6F);}B6F.chart=w6F.chart;if(U6F&&U6F.addToHolder){U6F.addToHolder(B6F);}if(U6F&&U6F.expand){g6F.Marker.initializeScrollBehavior(U6F);}};g6F.ChartEngine.prototype.getMarkerArray=function(S6F,h6F){var L6F,D6F;L6F=[];for(var f6F in this.markers){for(var i6F=0;i6F<this.markers[f6F].length;i6F++){D6F=this.markers[f6F][i6F];if(S6F=="panelName"){if(D6F.params.panelName==h6F){L6F.push(D6F);}}else if(S6F=="label"){if(f6F==h6F){L6F.push(D6F);}}else if(S6F=="all"){L6F.push(D6F);}}}return L6F;};g6F.ChartEngine.prototype.removeFromHolder=function(t6F){var C6F,b99,g99,F99,m6F,V6F,k6F,A6F,o6F;C6F=this.panels[t6F.params.panelName];if(C6F){b99=-401043568;g99=-936757062;F99=2;for(var x99="1"*1;o2QQ.g19(x99.toString(),x99.toString().length,+"52593")!==b99;x99++){if(t6F.node.parentNode==C6F.holder){C6F.holder.removeChild(t6F.node);}else if(t6F.node.parentNode==C6F.subholder){C6F.subholder.removeChild(t6F.node);}else if(t6F.node.parentNode==this.container){this.container.removeChild(t6F.node);}F99+=2;}if(o2QQ.g19(F99.toString(),F99.toString().length,32903)!==g99){if(t6F.node.parentNode!==C6F.holder){C6F.holder.removeChild(t6F.node);}else if(t6F.node.parentNode!==C6F.subholder){C6F.subholder.removeChild(t6F.node);}else if(t6F.node.parentNode!=this.container){this.container.removeChild(t6F.node);}}}m6F=this.markers[t6F.params.label];if(!m6F){return;}for(V6F="0">>1007032320;V6F<m6F.length;V6F++){if(m6F[V6F]===t6F){m6F.splice(V6F,1);break;}}k6F=this.markerHelper.chartMap[t6F.chart.name];if(k6F){for(V6F="0"-0;V6F<k6F.markers.length;V6F++){if(k6F.markers[V6F]===t6F){k6F.markers.splice(V6F,1);break;}}}A6F=this.markerHelper.classMap[t6F.className];if(A6F){o6F=A6F[t6F.params.panelName];if(o6F){for(V6F=0;V6F<o6F.length;V6F++){if(o6F[V6F]===t6F){o6F.splice(V6F,1);break;}}}}};g6F.ChartEngine.prototype.moveMarkers=function(P6F,J6F){var m5Z,I6F,s6F;m5Z="p";m5Z+="a";m5Z+="nelN";m5Z+="ame";I6F=this.getMarkerArray(m5Z,P6F);for(var R6F=0;R6F<I6F.length;R6F++){I6F[R6F].params.panelName=J6F;}for(var M6F in this.markerHelper.classMap){s6F=this.markerHelper.classMap[M6F][P6F];if(s6F){this.markerHelper.classMap[M6F][J6F]=s6F;delete this.markerHelper.classMap[M6F][P6F];}}};g6F.ChartEngine.prototype.establishMarkerTicks=function(){var v6F,H6F;v6F=this.markerHelper.chartMap;for(var G6F in v6F){H6F=v6F[G6F];if(H6F.dataSetLength==this.charts[G6F].dataSet.length)continue;for(var l6F=0;l6F<H6F.markers.length;l6F++){this.setMarkerTick(H6F.markers[l6F]);}}};g6F.ChartEngine.prototype.futureTickIfDisplayed=function(u6F){var a67=o2QQ;var b6F,F6F,W6F,z6F,e6F,y6F,r6F,X6F,Q6F;b6F=u6F.chart;if(b6F.dataSet.length<1){return;}F6F=b6F.xaxis[b6F.xaxis.length-1].DT;a67.O9X(79);var O2X=a67.x9X(3529,2,9,17);F6F=new Date(F6F.getTime()-this.timeZoneOffset*O2X);if(u6F.params.x>F6F){return;}a67.A9d();W6F=b6F.maxTicks-b6F.dataSegment.length;z6F=b6F.dataSet.length+W6F;r6F=new Date(+b6F.dataSet[b6F.dataSet.length-1].DT);X6F=this.standardMarketIterator(r6F,null,b6F);Q6F=u6F.params.x.getTime();for(var d6F=b6F.dataSet.length;d6F<z6F;d6F++){e6F=r6F.getTime();r6F=X6F.next();y6F=r6F.getTime();if(y6F==Q6F){u6F.tick=d6F;return;}else if(y6F>Q6F&&e6F<Q6F){a67.O9X(6);u6F.tick=Math.max(a67.L9X(1,d6F),0);return;}}};g6F.ChartEngine.prototype.setMarkerTick=function(p6F){var E1F,K1F,x1F,a1F,O1F,T1F;E1F=p6F.chart;if(p6F.params.xPositioner=="master"&&p6F.params.x){p6F.tick=Math.floor(p6F.params.x/this.layout.periodicity);return;}else if(p6F.params.xPositioner=="date"&&p6F.params.x){a1F=p6F.params.x.getTime();for(var Y6F=0;Y6F<E1F.dataSet.length;Y6F++){O1F=E1F.dataSet[Y6F];x1F=O1F.DT.getTime();K1F=x1F;if(Y6F>0){K1F=E1F.dataSet[Y6F-1].DT.getTime();}if(x1F==a1F){p6F.tick=Y6F;return;}else if(x1F>a1F&&K1F<a1F){o2QQ.O9X(6);p6F.tick=Math.max(o2QQ.x9X(1,Y6F),0);return;}else if(a1F<x1F){p6F.tick=null;return;}}if(E1F.dataSet.length<1){return;}T1F=new Date(+E1F.dataSet[Y6F-("1"&2147483647)].DT);if(T1F.getTime()<a1F){p6F.params.future=!!1;}p6F.tick=null;;}};g6F.ChartEngine.prototype.positionMarkers=function(){var u5Z,q1F,n1F,U1F,B1F,w1F,c1F,g1F;u5Z="a";u5Z+="l";o2QQ.l9d();function N1F(){var D1F,L1F,Z1F,S1F;if(q1F.runPrepend("positionMarkers",arguments)){return;}q1F.markerTimeout=null;for(var f1F in q1F.markerHelper.classMap){for(var i1F in q1F.markerHelper.classMap[f1F]){D1F=q1F.markerHelper.classMap[f1F][i1F];L1F=q1F.panels[i1F];if(D1F.length){Z1F={stx:q1F,arr:D1F,panel:L1F};Z1F.firstTick=L1F.chart.dataSet.length-L1F.chart.scroll;Z1F.lastTick=Z1F.firstTick+L1F.chart.dataSegment.length;S1F=D1F[0].constructor.placementFunction;if(S1F){S1F(Z1F);}else{q1F.defaultMarkerPlacement(Z1F);}}}}q1F.runAppend("positionMarkers",arguments);}u5Z+="l";q1F=this;n1F=this.chart;if(!q1F.markerHelper){return;}if(this.markerDelay||this.markerDelay==="0"*1){if(!this.markerTimeout){this.markerTimeout=setTimeout(N1F,this.markerDelay);}}else{N1F();}U1F=this.getFirstLastDataRecord(n1F.dataSegment,"tick");B1F=this.getFirstLastDataRecord(n1F.dataSegment,"tick",!!{});if(!U1F||!B1F){return;}w1F=this.getMarkerArray(u5Z);for(var j1F=+"0";j1F<w1F.length;j1F++){c1F=w1F[j1F];g1F=c1F.stxNodeCreator;if(U1F.tick<=c1F.tick&&c1F.tick<=B1F.tick){if(g1F&&g1F.drawMarker){g1F.drawMarker(c1F);}}else if(c1F.attached&&g1F.expand){g1F.expand.style.visibility="hidden";}}};g6F.Marker=g6F.Marker||function(k1F){var p5Z,Z5Z,X5Z,M9Z,h1F,E9Z,t1F,C1F,V1F,m1F;p5Z="gene";p5Z+="ric";Z5Z="cha";Z5Z+="r";Z5Z+="t";X5Z="da";X5Z+="te";this.params={xPositioner:X5Z,yPositioner:"value",panelName:Z5Z,permanent:!{},label:p5Z,includeAxis:!{}};g6F.extend(this.params,k1F);if(!this.params.node){M9Z="DI";M9Z+="V";this.params.node=document.createElement(M9Z);}h1F=this.params.stx;if(!h1F){E9Z="Marker cre";E9Z+="ated without s";E9Z+="pecifyi";E9Z+="ng stx";console.log(E9Z);return;}if(!this.className){this.className="CIQ.Marker";}if(g6F.derivedFrom(this.params.node,g6F.Marker.NodeCreator)){this.stxNodeCreator=this.params.node;this.node=this.stxNodeCreator.node;}else{this.node=this.params.node;}t1F=this.params.label;if(!h1F.markers[t1F]){h1F.markers[t1F]=[];}h1F.markers[t1F].push(this);C1F=h1F.panels[this.params.panelName];o2QQ.l9d();this.chart=C1F.chart;if(!h1F.markerHelper.chartMap[this.chart.name]){h1F.markerHelper.chartMap[this.chart.name]={dataSetLength:0,markers:[]};}h1F.markerHelper.chartMap[this.chart.name].markers.push(this);V1F=h1F.markerHelper.classMap[this.className];if(!V1F){V1F=h1F.markerHelper.classMap[this.className]={};}if(!V1F[this.params.panelName]){V1F[this.params.panelName]=[];}V1F[this.params.panelName].push(this);m1F=this.stxNodeCreator&&this.stxNodeCreator.deferAttach;if(!m1F){h1F.addToHolder(this);}h1F.setMarkerTick(this);if(this.stxNodeCreator&&this.stxNodeCreator.drawMarker){this.stxNodeCreator.drawMarker(this);}};g6F.Marker.prototype.remove=function(){o2QQ.A9d();this.params.stx.removeFromHolder(this);};g6F.Marker.prototype.click=function(A1F){var h9Z,o1F;h9Z="n";h9Z+="um";h9Z+="ber";if(_typeof(arguments[0])===h9Z){A1F={cx:arguments[0],cy:arguments[+"1"],panel:arguments[3]};}var _A1F=A1F,R1F=_A1F.cx,M1F=_A1F.cy,P1F=_A1F.panel;if(!this.params.stx){return;}o1F=this.params.node;if(o1F.click){o1F.click(R1F,M1F,this,P1F);}};g6F.Marker.prototype.doubleClick=function(_ref12){var I1F=_ref12.cx,s1F=_ref12.cy,J1F=_ref12.panel;o2QQ.l9d();return!{};};g6F.Marker.prototype.render=function(){var H1F,l1F;H1F=[this];l1F={stx:this.params.stx,arr:H1F,panel:this.params.stx.panels[this.params.panelName],showClass:this.showClass};o2QQ.l9d();this.constructor.placementFunction(l1F);};g6F.Marker.removeByLabel=function(b1F,r1F){var u1F,v1F;o2QQ.A9d();u1F=b1F.getMarkerArray("label",r1F);for(var G1F=0;G1F<u1F.length;G1F++){v1F=u1F[G1F];b1F.removeFromHolder(v1F);if(v1F.stxNodeCreator&&v1F.stxNodeCreator.remove){v1F.stxNodeCreator.remove(v1F);}}b1F.draw();};g6F.Marker.positionContentVerticalAndHorizontal=function(F1F){var C67=o2QQ;var Q1F,W1F,d1F,z1F,e1F,p1F,Y1F,E0F,X1F,a0F,y1F,U9Z,S9Z,y9Z;Q1F=F1F.querySelectorAll(".stx-marker-expand")[0];if(!Q1F||!g6F.trulyVisible(Q1F)){return;}W1F=Q1F.offsetHeight;d1F=Q1F.style;d1F.left=d1F.right="";d1F.bottom=d1F.top="";z1F=getComputedStyle(Q1F);e1F=z1F.left;p1F=z1F.bottom;C67.O9X(30);var m2X=C67.L9X(30,13,380);Y1F=F1F.offsetLeft+parseInt(e1F,m2X);E0F=parseInt(p1F,10);X1F=F1F.offsetTop-(E0F+W1F-F1F.offsetHeight);a0F=F1F.parentNode.offsetWidth;y1F=F1F.parentNode.offsetHeight;if(Y1F+Q1F.offsetWidth>a0F){d1F.right=e1F;d1F.left="auto";}if(F1F.offsetTop<=y1F){if(X1F>y1F-W1F){U9Z="a";U9Z+="u";U9Z+="t";U9Z+="o";d1F.top=y1F-F1F.offsetTop-W1F+"px";d1F.bottom=U9Z;}}else{C67.I9X(0);d1F.top=C67.x9X("px",y1F);}if(F1F.offsetTop+F1F.offsetHeight>=0){if(X1F<0){S9Z="p";S9Z+="x";d1F.top=-F1F.offsetTop+S9Z;d1F.bottom="auto";}}else{y9Z="0";y9Z+="p";y9Z+="x";d1F.bottom=y9Z;}};g6F.Marker.initializeScrollBehavior=function(O0F){o2QQ.A9d();var x0F=O0F.expand;if(!x0F){return;}x0F.addEventListener(g6F.wheelEvent,function(T0F){o2QQ.A9d();return T0F.stopPropagation();});var _ref13=g6F.UI||{},K0F=_ref13.scrollbarStyling;if(K0F){K0F.refresh(x0F);}else{x0F.style.overflowY="scroll";}};g6F.ChartEngine.prototype.getBarBounds=function(q0F){var i9Z,B0F,j0F,c0F,g0F,n0F,U0F;i9Z="pan";i9Z+="df";B0F=this.layout.chartType;j0F=this.layout.aggregationType;if(j0F==i9Z){c0F={high:Math.max(q0F.pfOpen,q0F.pfClose),low:Math.min(q0F.pfOpen,q0F.pfClose)};}else{c0F={high:q0F.High,low:q0F.Low};}if(q0F.markerHigh){c0F.high=q0F.markerHigh;}if(q0F.markerLow){c0F.low=q0F.markerLow;}if(q0F.Open===undefined){g0F=q0F.Close;}if(q0F.High===undefined){n0F=Math.max(q0F.Open||g0F,q0F.Close);}if(q0F.Low===undefined){U0F=Math.min(q0F.Open||g0F,q0F.Close);}if(!c0F.high&&c0F.high!==0){c0F.high=n0F;}if(!c0F.low&&c0F.low!==0){c0F.low=U0F;}return c0F;};g6F.ChartEngine.prototype.defaultMarkerPlacement=function(t0F){var t67=o2QQ;var C0F,m0F,Z0F,L0F,P0F,A0F,I0F,v9Z,w0F,f0F,D0F,N0F,v0F,i0F,S0F,k0F,H0F,G0F,t9Z,b0F,u0F,l0F,R0F,h0F,w9Z,j9Z,s0F,M0F,V0F,o0F,e9Z,V9Z,o9Z;C0F=t0F.panel;m0F=t0F.yAxis?t0F.yAxis:t0F.panel.yAxis;Z0F=C0F.chart;L0F=t0F.stx;t67.l9d();P0F=L0F.chart.highLowBars;A0F=Z0F.defaultPlotField;if(!A0F||P0F){A0F="Close";}I0F={};for(var J0F=+"0";J0F<t0F.arr.length;J0F++){v9Z="n";v9Z+="on";v9Z+="e";w0F=t0F.arr[J0F];f0F=w0F.params;if(w0F.params.box)continue;D0F=w0F.node;if(!w0F.clientWidth){w0F.clientWidth=D0F.clientWidth;}if(!w0F.clientHeight){w0F.clientHeight=D0F.clientHeight;}N0F=null;v0F=f0F.xPositioner;i0F=f0F.yPositioner;S0F=w0F.tick;k0F=Z0F.dataSet;H0F=w0F.clientWidth;if(v0F!=v9Z){if(v0F=="bar"&&f0F.x){if(f0F.x<Z0F.xaxis.length){G0F=Z0F.xaxis[f0F.x];if(G0F){N0F=G0F.data;}}t67.O9X(0);var u2X=t67.x9X(1,1);t67.I9X(80);var X2X=t67.L9X(18,12,1,9,12);D0F.style.left=Math.round(L0F.pixelFromBar(f0F.x,Z0F)-H0F/u2X)+X2X+"px";}else{t9Z="p";t9Z+="x";if(!S0F&&S0F!==0){if(f0F.future&&Z0F.scroll<Z0F.maxTicks){L0F.futureTickIfDisplayed(w0F);S0F=w0F.tick;if(!S0F&&S0F!==+"0"){D0F.style.left="-1000px";continue;}}else{D0F.style.left="-1000px";continue;}}if(S0F<k0F.length){N0F=k0F[S0F];}w0F.leftpx=Math.round(L0F.pixelFromTick(S0F,Z0F)-Z0F.left-H0F/2);w0F.rightEdge=w0F.leftpx+H0F;D0F.style.left=w0F.leftpx+t9Z;if(S0F<t0F.firstTick&&w0F.rightEdge<Z0F.left-50)continue;;}if(!N0F){N0F=k0F[k0F.length-+"1"];};}else if(i0F.indexOf("candle")>-1){b0F=getComputedStyle(D0F).left;if(b0F){u0F=L0F.barFromPixel(parseInt(b0F,10),Z0F);if(u0F>="0"<<167264544){N0F=Z0F.xaxis[u0F].data;if(!N0F){t67.O9X(81);var Z2X=t67.x9X(5,36,2,14);N0F=k0F[k0F.length-Z2X];};}}}D0F.style.top="auto";l0F=f0F.y;R0F=w0F.clientHeight;if(i0F!="none"){w9Z="und";w9Z+="er_c";w9Z+="an";w9Z+="dle";j9Z="und";j9Z+="ef";j9Z+="ined";s0F=i0F+"-"+D0F.style.left;M0F=f0F.chartContainer?L0F.height:C0F.yAxis.bottom;V0F=0;t67.O9X(1);o0F=t67.L9X(1,"0");if(_typeof(I0F[s0F])==j9Z){I0F[s0F]=0;}o0F=I0F[s0F];I0F[s0F]+=R0F;if(i0F=="value"&&(l0F||l0F===0)){t67.O9X(41);var p2X=t67.x9X(3,5,10);V0F=Math.round(M0F-L0F.pixelFromPrice(l0F,C0F,m0F)-R0F/p2X)+"px";}else if((i0F=="below_candle"||i0F==w9Z)&&N0F){e9Z="p";e9Z+="x";h0F=N0F[A0F];if(P0F){h0F=L0F.getBarBounds(N0F)[m0F.flipped?"high":"low"];}V0F=Math.round(M0F-L0F.pixelFromPrice(h0F,C0F,m0F)-R0F-o0F)+e9Z;}else if(i0F=="on_candle"&&N0F){h0F=N0F[A0F];if(P0F){h0F=(N0F.Low+N0F.High)/("2"-0);}t67.I9X(52);var M1X=t67.x9X(0,40,20);V0F=Math.round(M0F-L0F.pixelFromPrice(h0F,C0F,m0F)-R0F/M1X-o0F)+"px";}else if(i0F=="top"){V0F=Math.round(M0F-R0F-o0F-C0F.top)+"px";}else if(i0F=="bottom"){V0F=Math.round(o0F)+"px";}else if(N0F){V9Z="hi";V9Z+="gh";o9Z="l";o9Z+="o";o9Z+="w";h0F=N0F[A0F];if(P0F){h0F=L0F.getBarBounds(N0F)[m0F.flipped?o9Z:V9Z];}V0F=Math.round(M0F-L0F.pixelFromPrice(h0F,C0F,m0F)+o0F)+"px";}if(D0F.style.bottom!=V0F){D0F.style.bottom=V0F;}}g6F.Marker.positionContentVerticalAndHorizontal(D0F);}};g6F.Marker.NodeCreator=function(){};g6F.Marker.NodeCreator.toNode=function(){o2QQ.l9d();return this.node;};g6F.Marker.Simple=function(d0F){var b9Z,r0F,Q0F,F0F,Y9Z,y0F,g9Z;b9Z="stx-";b9Z+="v";b9Z+="isua";b9Z+="l";o2QQ.A9d();r0F=this.node=document.createElement("div");r0F.className="stx-marker";r0F.classList.add(d0F.type);if(d0F.category){r0F.classList.add(d0F.category);}Q0F=g6F.newChild(r0F,"div",b9Z);g6F.newChild(r0F,"div","stx-stem");if(d0F.type=="callout"){Y9Z="h";Y9Z+="4";y0F=g6F.newChild(Q0F,"div","stx-marker-content");g6F.newChild(y0F,Y9Z,null,d0F.headline);F0F=g6F.newChild(y0F,"div","stx-marker-expand");g6F.newChild(F0F,(683.94,7960)==6291?(9840,8460)>=5642?4150>=703.22?("T","9.93e+3"*1):![]:(0x1029,5.55e+3):"p",null,d0F.story);}else{g9Z="s";g9Z+="tx-ma";g9Z+="rker-ex";g9Z+="pand";F0F=g6F.newChild(r0F,"div",g9Z);g6F.newChild(F0F,"h4",null,d0F.headline);g6F.newChild(F0F,9792>6690?"p":(859,329)<6100?(9030,97.58)<(228.92,1510)?"O":79.67:(0x183a,1.51),null,d0F.story);g6F.safeClickTouch(F0F,function(z0F){o2QQ.A9d();var F9Z;F9Z="hig";F9Z+="hli";F9Z+="ght";r0F.classList.toggle(F9Z);});}g6F.safeClickTouch(Q0F,function(e0F){r0F.classList.toggle("highlight");setTimeout(W0F,10);});function W0F(){g6F.Marker.positionContentVerticalAndHorizontal(r0F);}this.nodeType="Simple";this.expand=F0F;};g6F.inheritsFrom(g6F.Marker.Simple,g6F.Marker.NodeCreator,!{});}};A54=function A54(O3F){var H9d=o2QQ;var X0F,x3F,a3F,E3F,K3F,Y0F,p0F;X0F=typeof _CIQ!=="undefined"?_CIQ:O3F.CIQ;x3F=typeof _timezoneJS!=="undefined"?_timezoneJS:O3F.timezoneJS;H9d.O9X(82);a3F=H9d.L9X(60,"60000");H9d.O9X(1);E3F=H9d.L9X(24,a3F);K3F=X0F.Market;X0F.Market=function(T3F){this.market_def=!"1";this.rules=!!"";this.normalHours=[];this.extraHours=[];this.class_name="Market";if(!x3F.Date){this.tz_lib=Date;;}else{this.tz_lib=x3F.Date;}this.market_tz="";this.hour_aligned=![];this.convertOnDaily=![];this.enabled_by_default=!{};if(typeof T3F!="undefined"&&T3F&&!X0F.isEmpty(T3F)){if(T3F.market_definition){T3F=T3F.market_definition;}if(T3F.rules){this.rules=T3F.rules;}if(T3F.market_tz){this.market_tz=T3F.market_tz;}if(T3F.convertOnDaily){this.convertOnDaily=T3F.convertOnDaily;}if(_typeof(T3F.hour_aligned)){this.hour_aligned=T3F.hour_aligned;}if(typeof T3F.beginningDayOfWeek!=="undefined"){this.beginningDayOfWeek=T3F.beginningDayOfWeek;}if(typeof T3F.enabled_by_default!=="undefined"){if(T3F.enabled_by_default instanceof Array){this.enabled_by_default=T3F.enabled_by_default;}}this.market_def=T3F;if(this.market_def.name===undefined){this.market_def.name="no market name specified";}}else{return;}X0F.Market._createTimeSegments(this);this.getSessionNames();};X0F.Market.Symbology=function(){};X0F.Market.Symbology.isForeignSymbol=function(q3F){H9d.A9d();return![];};X0F.Market.Symbology.isFuturesSymbol=function(c3F){H9d.A9d();return!{};};X0F.Market.Symbology.isRateSymbol=function(g3F){H9d.l9d();return!"1";};X0F.Market.Symbology.isForexSymbol=function(j3F){return![];};X0F.Market.Symbology.isForexMetal=function(n3F,U3F){H9d.l9d();return!1;};X0F.Market.Symbology.isForexFuturesSymbol=function(B3F){if(X0F.Market.Symbology.isForexSymbol(B3F)){return!!"1";}if(X0F.Market.Symbology.isFuturesSymbol(B3F)){return!"";}return!1;};X0F.Market.Symbology.factory=function(w3F){return null;;};X0F.Market.Symbology.encodeTermStructureInstrumentSymbol=function(N3F,Z3F){console.warn("You are trying to call `CIQ.Market.Symbology.encodeTermStructureInstrumentSymbol` but have not implemented it.");};if(K3F){X0F.extend(X0F.Market,K3F);}X0F.Market.prototype.sessions=null;X0F.Market.prototype.beginningDayOfWeek=+"0";X0F.Market.prototype.getSessionNames=function(){var L3F,D3F;if(!this.rules){this.sessions=[];}else if(!this.sessions){L3F=[];D3F=[];this.rules.map(function(f3F){if(f3F.name&&L3F.indexOf(f3F.name)===-1){L3F.push(f3F.name);D3F.push({name:f3F.name,enabled:f3F.enabled?f3F.enabled:!{}});}});this.sessions=D3F;}return this.sessions.slice();};X0F.Market.prototype._find_next_segment=function(t3F,C3F){var i3F,S3F,h3F,V3F;if(!this.market_def){return null;}if(!this.rules){return null;}i3F=new Date(+t3F);S3F=this.newIterator({begin:i3F,interval:+"1",inZone:this.market_tz,outZone:this.market_tz});if(this._wasOpenIntraDay(i3F)){h3F=this.zseg_match.close_parts.hours;V3F=this.zseg_match.close_parts.minutes;i3F.setHours(h3F);i3F.setMinutes(V3F);S3F=this.newIterator({begin:i3F,interval:1,inZone:this.market_tz,outZone:this.market_tz});}return S3F.next();};X0F.Market.prototype._find_prev_segment=function(P3F,o3F){var m3F,k3F,A3F,R3F,M3F;if(!this.market_def){return null;}if(!this.rules){return null;}m3F=new Date(+P3F);k3F=this.newIterator({begin:m3F,interval:"1"^0,inZone:this.market_tz,outZone:this.market_tz});A3F=this._wasOpenIntraDay(m3F);if(A3F===null){H9d.O9X(6);m3F=new Date(H9d.x9X(60000,m3F));A3F=this._wasOpenIntraDay(m3F);}else{if(o3F&&m3F.getHours()===this.zseg_match.open_parts.hours&&m3F.getMinutes()===this.zseg_match.open_parts.minutes||!o3F&&m3F.getHours()===this.zseg_match.close_parts.hours&&m3F.getMinutes()===this.zseg_match.close_parts.minutes){m3F=k3F.previous();}}if(A3F){R3F=this.zseg_match.open_parts.hours;M3F=this.zseg_match.open_parts.minutes;m3F.setHours(R3F);m3F.setMinutes(M3F);k3F=this.newIterator({begin:m3F,interval:1,inZone:this.market_tz,outZone:this.market_tz});m3F=k3F.previous();if(this.zseg_match.close_parts.hours===R3F){if(this.zseg_match.close_parts.minutes===M3F){if(o3F){return k3F.next();}return m3F;}}if(this.zseg_match.adjacent_child){return m3F;}if(o3F){return k3F.next();}return m3F;}return k3F.previous();};X0F.Market.prototype.disableSession=function(J3F,H3F){H9d.l9d();var s3F;s3F=!!0;if(typeof H3F!=="undefined"&&H3F){s3F=!![];}if(J3F){for(var I3F=0;I3F<this.normalHours.length;I3F++){if(this.normalHours[I3F].name===J3F){this.normalHours[I3F].enabled=s3F;}}for(I3F=0;I3F<this.extraHours.length;I3F++){if(this.extraHours[I3F].name===J3F){this.extraHours[I3F].enabled=s3F;}}}};X0F.Market.prototype.enableSession=function(l3F){H9d.A9d();this.disableSession(l3F,"enable_instead");};X0F.Market.prototype.enableAllAvailableSessions=function(){var b39,Y39,g39,G3F;b39=-+"1009190342";Y39=926069760;g39=2;for(var T39=1;H9d.Y19(T39.toString(),T39.toString().length,63309)!==b39;T39++){G3F=this.getSessionNames();g39+=2;}if(H9d.Y19(g39.toString(),g39.toString().length,72205)!==Y39){G3F=this.getSessionNames();}for(var v3F=0;v3F<G3F.length;v3F++){this.enableSession(G3F[v3F].name);}};X0F.Market.prototype.getClose=function(r3F,d3F,F3F,Q3F){H9d.A9d();var T9Z,b3F,u3F;T9Z="un";T9Z+="defined";if(!this.market_def){return null;}if(!this.rules){return null;}b3F=r3F;if(!r3F){b3F=new Date();F3F=null;;}b3F=this._convertToMarketTZ(b3F,F3F);if(_typeof(d3F)!==T9Z){if(this._wasOpenIntraDay(b3F)){if(this.zseg_match.name===d3F){b3F.setHours(this.zseg_match.close_parts.hours,this.zseg_match.close_parts.minutes,"0">>2011228160,0);b3F=this._convertFromMarketTZ(b3F,Q3F);return b3F;}}}else{if(this._wasOpenDaily(b3F)){u3F=this.zseg_match;while(u3F.child_){u3F=u3F.child_;}while(!u3F.enabled){u3F=u3F.parent_;}b3F.setHours(u3F.close_parts.hours,u3F.close_parts.minutes,0,0);b3F=this._convertFromMarketTZ(b3F,Q3F);return b3F;}}return null;};X0F.Market.prototype.getNextClose=function(e3F,X3F,Y3F){var y3F,p3F,z3F,W3F;if(!this.market_def){return null;}if(!this.rules){return null;}y3F=e3F;if(!e3F){y3F=new Date();X3F=null;;}y3F=this._convertToMarketTZ(y3F,X3F);if(!this._wasOpenIntraDay(y3F)){p3F=this.newIterator({begin:y3F,interval:1,inZone:this.market_tz,outZone:this.market_tz});y3F=p3F.next();}H9d.A9d();z3F=y3F.getDate();W3F=this.zseg_match;while(W3F.adjacent_child){W3F=W3F.adjacent_child;z3F+=+"1";}y3F.setDate(z3F);y3F.setHours(W3F.close_parts.hours,W3F.close_parts.minutes,0,0);y3F=this._convertFromMarketTZ(y3F,Y3F);return y3F;};X0F.Market.prototype.getNextOpen=function(a9F,x9F,K9F){var E9F;H9d.A9d();if(!this.market_def){return null;}if(!this.rules){return null;}E9F=a9F;if(!a9F){E9F=new Date();x9F=null;;}E9F=this._convertToMarketTZ(E9F,x9F);E9F=this._find_next_segment(E9F);if(this.zseg_match.adjacent_parent){E9F=this.getNextOpen(E9F,this.market_tz,this.market_tz);E9F=this._convertFromMarketTZ(E9F,K9F);return E9F;}E9F.setHours(this.zseg_match.open_parts.hours);E9F.setMinutes(this.zseg_match.open_parts.minutes);E9F=this._convertFromMarketTZ(E9F,K9F);return E9F;};X0F.Market.prototype.getOpen=function(q9F,c9F,g9F,j9F){var O9F,T9F;if(!this.market_def){return null;}if(!this.rules){return null;}H9d.l9d();O9F=q9F;if(!q9F){O9F=new Date();g9F=null;;}O9F=this._convertToMarketTZ(O9F,g9F);if(typeof c9F!=="undefined"){if(this._wasOpenIntraDay(O9F)){if(this.zseg_match.name==c9F){O9F.setHours(this.zseg_match.open_parts.hours,this.zseg_match.open_parts.minutes,0,0);O9F=this._convertFromMarketTZ(O9F,j9F);return O9F;}}}else{if(this._wasOpenDaily(O9F)){T9F=this.zseg_match;while(T9F.parent_){T9F=T9F.parent_;}while(!T9F.enabled){T9F=T9F.child_;}O9F.setHours(T9F.open_parts.hours,T9F.open_parts.minutes,"0"*1,0);O9F=this._convertFromMarketTZ(O9F,j9F);return O9F;}}return null;};X0F.Market.prototype.getNormalOpen=function(){var x9Z;x9Z="17";x9Z+=":0";x9Z+="0";var n9F=this.market_def,U9F=this.rules;H9d.A9d();if(!(n9F&&U9F)){return"00:00";}if(n9F.normal_daily_open){return n9F.normal_daily_open;}if(n9F.name==="FOREX"){return x9Z;}return U9F.find(function(_ref14){var B9F=_ref14.name;H9d.l9d();return!B9F||B9F==="";}).open;};X0F.Market.prototype.getNormalClose=function(){var d9Z;d9Z="2";d9Z+="4:0";d9Z+="0";var w9F=this.market_def,N9F=this.rules;if(!(w9F&&N9F)){return d9Z;}if(w9F.normal_daily_close){return w9F.normal_daily_close;}if(w9F.name==="FOREX"){return"17:00";}return N9F.filter(function(_ref15){var L9F=_ref15.dayofweek,Z9F=_ref15.name;return L9F&&(!Z9F||Z9F==="");}).pop().close;};X0F.Market.prototype.getPreviousClose=function(f9F,i9F,S9F){var D9F;if(!this.market_def){return null;}if(!this.rules){return null;}D9F=f9F;if(!f9F){D9F=new Date();i9F=null;;}D9F=this._convertToMarketTZ(D9F,i9F);D9F=this._find_prev_segment(D9F,![]);if(this.zseg_match.adjacent_child){return this.getPreviousClose(D9F,this.market_tz,this.market_tz);}D9F.setHours(this.zseg_match.close_parts.hours);D9F.setMinutes(this.zseg_match.close_parts.minutes);D9F=this._convertFromMarketTZ(D9F,S9F);return D9F;};X0F.Market.prototype.getPreviousOpen=function(V9F,t9F,C9F){var h9F;if(!this.market_def){return null;}if(!this.rules){return null;}h9F=V9F;if(!V9F){h9F=new Date();t9F=null;;}h9F=this._convertToMarketTZ(h9F,t9F);h9F=this._find_prev_segment(h9F,!"");if(this.zseg_match.adjacent_parent){return this.getPreviousOpen(h9F,this.market_tz,this.market_tz);}h9F.setHours(this.zseg_match.open_parts.hours);h9F.setMinutes(this.zseg_match.open_parts.minutes);h9F=this._convertFromMarketTZ(h9F,C9F);return h9F;};X0F.Market.prototype.getSession=function(m9F,k9F){m9F=this._convertToMarketTZ(m9F,k9F);if(this._wasOpenIntraDay(m9F)&&this.zseg_match){return this.zseg_match.name;}return null;};X0F.Market.prototype.marketZoneNow=function(){H9d.A9d();return this._convertToMarketTZ(new Date());};X0F.Market.prototype.isHourAligned=function(){H9d.l9d();return this.hour_aligned;};X0F.Market.prototype.isOpen=function(){var o9F;o9F=new Date();if(this.market_tz){o9F=new this.tz_lib(o9F.getTime(),this.market_tz);}return this._wasOpenIntraDay(o9F);};X0F.Market.prototype.isMarketDay=function(){var A9F;A9F=new Date();if(this.market_tz){A9F=new this.tz_lib(A9F.getTime(),this.market_tz);}return this._wasOpenDaily(A9F);};X0F.Market.prototype.isMarketDate=function(R9F){return this._wasOpenDaily(R9F);};X0F.Market.prototype.newIterator=function(P9F){var z9Z,I9F,M9F,L9Z;z9Z="s";z9Z+="e";z9Z+="c";z9Z+="ond";I9F=!{};if(P9F.periodicity){I9F=P9F.periodicity;}else if(P9F.multiple){I9F=P9F.multiple;}M9F=P9F.interval;if(!M9F){M9F="minute";}if(M9F=="hour"){M9F=60;}if(!I9F){I9F=1;}if(!P9F.begin){P9F.begin=new Date();P9F.inZone=null;}if(M9F==parseInt(M9F,10)){M9F=parseInt(M9F,10);if(P9F.periodicity<1/60){H9d.I9X(83);I9F=H9d.x9X(M9F,60000,I9F);M9F="millisecond";}else if(P9F.periodicity<1){H9d.I9X(84);I9F=H9d.L9X(I9F,"60",M9F);M9F="second";}else{H9d.I9X(1);I9F=H9d.x9X(M9F,I9F);M9F="minute";}}if(P9F.timeUnit){L9Z="t";L9Z+="ick";if(P9F.timeUnit==="millisecond"){M9F=P9F.timeUnit;}else if(P9F.timeUnit==="second"){M9F=P9F.timeUnit;}else if(P9F.timeUnit===L9Z){M9F="second";}}if(M9F=="tick"){M9F=z9Z;}P9F.interval=M9F;P9F.multiple=I9F;P9F.market=this;return new X0F.Market.Iterator(P9F);};X0F.Market.prototype._wasOpenDaily=function(s9F){return this._was_open(s9F,!"1");};X0F.Market.prototype._wasOpenIntraDay=function(J9F){H9d.l9d();return this._was_open(J9F,!"");};X0F.Market.prototype._was_open=function(G9F,l9F){var c9Z,d9F,u9F,r9F,F9F,Q9F,y9F,W9F,z9F,e9F,X9F,H9F,b9F,v9F;c9Z="und";c9Z+="ef";c9Z+="i";c9Z+="ned";d9F=this.zseg_match;this.zopen_hour=0;this.zopen_minute=0;H9d.O9X(74);this.zclose_hour=H9d.x9X(2147483647,"0");this.zclose_minute=0;this.zmatch_open=!!0;this.zseg_match=null;if(!this.market_def||!this.rules){this.zclose_hour=24;return!!{};}u9F=![];H9d.A9d();r9F=!{};F9F=G9F.getFullYear();Q9F=G9F.getMonth()+ +"1";y9F=G9F.getDay();W9F=G9F.getDate();z9F=G9F.getHours();e9F=G9F.getMinutes();X9F=G9F.getSeconds();H9d.O9X(85);b9F=H9d.x9X(60,60,60,e9F,z9F,X9F);if(_typeof(l9F)===c9Z){l9F=!!{};}for(v9F=0;v9F<this.normalHours.length;v9F++){H9F=this.normalHours[v9F];if(!H9F.enabled){continue;}u9F=H9F.dayofweek===y9F;if(u9F&&l9F){u9F=b9F>=H9F.open&&b9F<H9F.close;}if(u9F){if(!l9F&&this.zseg_match){if(H9F.open_parts.hours>this.zopen_hour||H9F.open_parts.hours==this.zopen_hour&&H9F.open_parts.minutes>this.zopen_minute){continue;}}if(H9F!==d9F&&!H9F.adjacent_parent&&!H9F.adjacent_child){this.shouldResetToBeginningOfSegment=!!{};}this.zopen_hour=H9F.open_parts.hours;this.zopen_minute=H9F.open_parts.minutes;this.zclose_hour=H9F.close_parts.hours;this.zclose_minute=H9F.close_parts.minutes;this.zmatch_open=b9F===H9F.open;this.zseg_match=H9F;if(l9F)break;}}for(v9F="0"*1;v9F<this.extraHours.length;v9F++){H9F=this.extraHours[v9F];if(!H9F.enabled){continue;}if("*"===H9F.year||F9F===H9F.year){if(Q9F===H9F.month&&W9F===H9F.day){r9F=!l9F&&H9F.open||b9F>=H9F.open&&b9F<H9F.close;if(!r9F&&this.zseg_match){u9F=!{};this.zopen_hour=0;this.zopen_minute=+"0";this.zclose_hour=0;this.zclose_minute=0;this.zmatch_open=!"1";this.zseg_match=null;}if(r9F){if(!l9F&&this.zseg_match){if(H9F.open_parts.hours>this.zopen_hour||H9F.open_parts.hours==this.zopen_hour&&H9F.open_parts.minutes>this.zopen_minute){continue;}}this.zopen_hour=H9F.open_parts.hours;this.zopen_minute=H9F.open_parts.minutes;this.zclose_hour=H9F.close_parts.hours;this.zclose_minute=H9F.close_parts.minutes;this.zmatch_open=b9F===H9F.open;this.zseg_match=H9F;if(l9F)break;}}}}return this.zseg_match;};X0F.Market.prototype._wasClosed=function(p9F){H9d.l9d();return!this._was_open(p9F,!"");};X0F.Market.prototype._wasOpen=function(Y9F){H9d.l9d();return this._was_open(Y9F,!!"1");};X0F.Market.prototype._tzDifferenceMillis=function(T7F,w7F,Z7F){var K7F,c7F,g7F,j7F,M69,E69,h69;K7F=0;c7F=T7F;g7F=T7F;j7F=c7F.getTimezoneOffset()-g7F.getTimezoneOffset();M69=218025821;E69=-2121537214;H9d.A9d();h69=2;for(var S69=1;H9d.g19(S69.toString(),S69.toString().length,"26844"^0)!==M69;S69++){H9d.O9X(86);K7F=H9d.x9X(2147483647,"69",j7F,7810);return K7F;}if(H9d.Y19(h69.toString(),h69.toString().length,44047)!==E69){H9d.I9X(83);K7F=H9d.L9X(60,1000,j7F);return K7F;}};X0F.Market._createTimeSegments=function(m7F){var G7F,h7F,B9Z,A9Z,f7F,i7F,Q7F;H9d.A9d();G7F=function G7F(z7F,W7F){if(z7F.close_parts.hours===24&&W7F.open_parts.hours===0){if(W7F.open_parts.minutes===+"0"){if(h7F.dayofweek===i7F.dayofweek-1){return!!"1";}if(h7F.dayofweek===6&&i7F.dayofweek===0){return!![];}}}return!!"";};for(var k7F=0;k7F<m7F.rules.length;k7F++){B9Z="nam";B9Z+="e";A9Z="u";A9Z+="ndef";A9Z+="ined";f7F=JSON.parse(JSON.stringify(m7F.rules[k7F]));if(typeof f7F.open==="undefined"&&_typeof(f7F.close)===A9Z){f7F.open="00:00";f7F.close="00:00";}if(!f7F.hasOwnProperty(B9Z)){f7F.name="";}try{if(typeof f7F.dayofweek!=="undefined"){f7F.year=(9610,849.78)!=(69.09,"79.3"*1)?"*":350.04;i7F=Y0F._createDayOfWeekSegment(m7F,f7F);if(h7F){if(h7F.dayofweek===i7F.dayofweek){h7F.child_=i7F;i7F.parent_=h7F;}else{if(G7F(h7F,i7F)){h7F.adjacent_child=i7F;i7F.adjacent_parent=h7F;}}}h7F=i7F;}else if(typeof f7F.date!=="undefined"){f7F.isDayOfWeek=!!"";f7F.dayofweek=-1;i7F=Y0F._createDateTimeSegment(m7F,f7F);}else{H9d.I9X(0);console.log(H9d.L9X(f7F,"Error, unknown rule type "));}if(m7F.enabled_by_default){for(var v7F=0;v7F<m7F.enabled_by_default.length;v7F++){Q7F=m7F.enabled_by_default[v7F];if(i7F.name===Q7F){i7F.enabled=!![];break;}}}else{;}}catch(E2F){H9d.I9X(0);console.log(H9d.x9X(E2F,"Error, creating market rules "));}}};X0F.Market._timeSegment={};Y0F=X0F.Market._timeSegment;Y0F.re_wild_card_iso=/^(\*)-(\d\d)-(\d\d)$/;Y0F.re_regular_iso=/^(\d\d\d\d)-(\d\d)-(\d\d)$/;Y0F.re_split_hours_minutes=/^(\d\d):(\d\d)$/;Y0F.re_split_hour_minutes=/^(\d):(\d\d)$/;Y0F._hashCode=function(U2F){var a2F,x2F,N2F,D2F;a2F=0;if(U2F.length===0){return a2F;}for(x2F=0,D2F=U2F.length;x2F<D2F;x2F++){N2F=U2F.charCodeAt(x2F);H9d.O9X(87);a2F=H9d.x9X(5,a2F,N2F,a2F);a2F|=0;;}return a2F;};Y0F._splitHoursMinutes=function(C2F){var S2F,V2F;S2F=Y0F.re_split_hour_minutes.exec(C2F);V2F={hours:NaN,minutes:NaN};if(S2F===null){S2F=Y0F.re_split_hours_minutes.exec(C2F);if(S2F===null){return V2F;}}V2F.hours=parseInt(S2F[1],10);V2F.minutes=parseInt(S2F[2],10);H9d.A9d();return V2F;};Y0F._createDayOfWeekSegment=function(I2F,R2F){var o2F;o2F={name:R2F.name,isDayOfWeek:!![],dayofweek:R2F.dayofweek,date_str:"*",open_parts:Y0F._splitHoursMinutes(R2F.open),close_parts:Y0F._splitHoursMinutes(R2F.close),open:Y0F._secSinceMidnight(I2F,R2F.open,!!{}),close:Y0F._secSinceMidnight(I2F,R2F.close,![]),child_:!"1",parent_:!!"",adjacent_child:!!"",adjacent_parent:!{},enabled:![]};if(o2F.name===""){o2F.enabled=!!1;}o2F.hash_code=this._hashCode((o2F.open+o2F.close).toString());I2F.normalHours.push(o2F);return o2F;};Y0F._createDateTimeSegment=function(d2F,l2F){H9d.l9d();var u2F,F2F,b2F;u2F=this.re_regular_iso.exec(l2F.date);if(u2F===null){u2F=this.re_wild_card_iso.exec(l2F.date);if(u2F===null){console.log("Warning: invalid date format on rule -> "+l2F.date);return;}F2F=373.61>=(4532,+"7820")?("p",!!0): true?(+"4880",7040)<(5870,"8245"-0)?"*":(!!0,0x168a):undefined;;}else{F2F=parseInt(u2F[1],10);}b2F={name:l2F.name,isDayOfWeek:![],dayofweek:-1,year:F2F,month:parseInt(u2F[2],+"10"),day:parseInt(u2F[3],10),date_str:l2F.date,open_parts:Y0F._splitHoursMinutes(l2F.open),close_parts:Y0F._splitHoursMinutes(l2F.close),open:Y0F._secSinceMidnight(d2F,l2F.open,!""),close:Y0F._secSinceMidnight(d2F,l2F.close,!!""),enabled:!{}};if(b2F.name===""){b2F.enabled=!!{};}b2F.hash_key=this._hashCode(b2F.date_str+b2F.open+b2F.close);d2F.extraHours.push(b2F);return b2F;};Y0F._secSinceMidnight=function(x5F,E5F,a5F){var X2F,e2F,Y2F,p2F,q19,I19,a19;H9d.l9d();X2F=E5F.split((6121,9236)<=3729?9.34e+3:":");e2F=parseInt(X2F["0"&2147483647],10);Y2F=parseInt(X2F[1],+"10");H9d.O9X(88);p2F=H9d.x9X(e2F,60,60,Y2F,60);if(!a5F){if(e2F==="24"*1){H9d.O9X(74);q19=H9d.x9X(2147483647,"1085748585");I19=1752063099;a19=2;for(var R19=1;H9d.g19(R19.toString(),R19.toString().length,53201)!==q19;R19++){H9d.O9X(89);p2F=H9d.x9X(43,3,58,e2F);a19+=2;}if(H9d.Y19(a19.toString(),a19.toString().length,55327)!==I19){H9d.O9X(90);p2F=H9d.L9X(1,"60",60,119202368,e2F);}}}return p2F;};X0F.Market.prototype._convertToMarketTZ=function(K5F,T5F){H9d.l9d();var O5F;if(T5F){O5F=new this.tz_lib(K5F.getFullYear(),K5F.getMonth(),K5F.getDate(),K5F.getHours(),K5F.getMinutes(),K5F.getSeconds(),K5F.getMilliseconds(),T5F);}else{O5F=new this.tz_lib(K5F.getFullYear(),K5F.getMonth(),K5F.getDate(),K5F.getHours(),K5F.getMinutes(),K5F.getSeconds(),K5F.getMilliseconds());}if(O5F.setTimezone){O5F.setTimezone(this.market_tz);}return new Date(O5F.getFullYear(),O5F.getMonth(),O5F.getDate(),O5F.getHours(),O5F.getMinutes(),O5F.getSeconds(),O5F.getMilliseconds());};X0F.Market.prototype._convertFromMarketTZ=function(c5F,g5F){var q5F;q5F=new this.tz_lib(c5F.getFullYear(),c5F.getMonth(),c5F.getDate(),c5F.getHours(),c5F.getMinutes(),c5F.getSeconds(),c5F.getMilliseconds(),this.market_tz);if(g5F){if(q5F.setTimezone){q5F.setTimezone(g5F);}}else{return new Date(q5F.getTime());}return new Date(q5F.getFullYear(),q5F.getMonth(),q5F.getDate(),q5F.getHours(),q5F.getMinutes(),q5F.getSeconds(),q5F.getMilliseconds());};X0F.Market.Iterator=function(j5F){this.market=j5F.market;H9d.l9d();this.begin=j5F.begin;this.interval=j5F.interval;this.multiple=j5F.multiple;this.inZone=j5F.inZone;this.outZone=j5F.outZone;this.clock=new X0F.Market.Iterator._Clock(j5F.market,j5F.interval,j5F.multiple);this.intraDay=this.clock.intra_day;if(this.intraDay){this.begin=this.market._convertToMarketTZ(this.begin,j5F.inZone);}this.clock._setStart(this.begin);this.clock.minutes_aligned=!{};};X0F.Market.Iterator.prototype.date=function(){return this.clock._date();};X0F.Market.Iterator.prototype.futureTick=function(N5F){var n5F,U5F,B5F,Z5F,f5F,w5F,i5F,L5F,D5F;this.clock.skip=1;H9d.I9X(1);n5F=H9d.x9X(1,"0");if(this.intraDay){U5F=this.market._convertToMarketTZ(N5F.end,this.inZone).getTime();}else{U5F=N5F.end.getTime();}B5F=this.clock.ctime;if(U5F===B5F){return n5F;}Z5F=2;f5F=1000;w5F=0;if(N5F.sample_size){Z5F=N5F.sample_size;}i5F=new Date().getTime();if(U5F>B5F){this.clock.forward=!![];while(this.clock.ctime<U5F){n5F+=1;H9d.O9X(50);w5F+=H9d.x9X("1",1);this.clock._findNext();if(w5F===f5F){w5F=0;L5F=new Date().getTime();if(L5F-i5F>=Z5F){D5F=(this.clock.ctime-B5F)/n5F;H9d.O9X(91);n5F=Math.floor(H9d.x9X(D5F,U5F,B5F));break;}}}if(this.clock.ctime>U5F){n5F--;}}else{this.clock.forward=!{};while(this.clock.ctime>U5F){n5F+=+"1";w5F+=1;this.clock._findPrevious();if(w5F===f5F){H9d.I9X(74);w5F=H9d.L9X(2147483647,"0");L5F=new Date().getTime();if(L5F-i5F>=Z5F){D5F=(B5F-this.clock.ctime)/n5F;H9d.I9X(91);n5F=Math.floor(H9d.x9X(D5F,B5F,U5F));break;}}}}return n5F;};X0F.Market.Iterator.prototype.isHourAligned=function(){H9d.l9d();return!this.intraDay||this.market.isHourAligned();};X0F.Market.Iterator.prototype.isOpen=function(){H9d.A9d();return this.market.isOpen();};X0F.Market.Iterator.prototype.next=function(h5F){this.clock.skip=1;if(h5F){this.clock.skip=h5F;}this.clock.forward=!!{};for(var S5F=0;S5F<this.clock.skip;S5F++){this.begin=this.clock._findNext();}if(this.intraDay||this.market.convertOnDaily){return this.market._convertFromMarketTZ(this.clock.display_date,this.outZone);}return this.clock.display_date;};X0F.Market.Iterator.prototype.peek=function(){H9d.A9d();return this.clock._peek();};X0F.Market.Iterator.prototype.previous=function(t5F){this.clock.skip=1;if(t5F){this.clock.skip=t5F;}this.clock.forward=!!0;H9d.l9d();for(var V5F=0;V5F<this.clock.skip;V5F++){this.begin=this.clock._findPrevious();}if(this.intraDay||this.market.convertOnDaily){return this.market._convertFromMarketTZ(this.clock.display_date,this.outZone);}return this.clock.display_date;};X0F.Market.Iterator._Clock=function(A5F,C5F,o5F){var P9Z,k9Z,N9Z,n9Z,m5F,k5F;P9Z="m";P9Z+="on";P9Z+="t";P9Z+="h";k9Z="hou";k9Z+="r";N9Z="m";N9Z+="inut";N9Z+="e";n9Z="sec";n9Z+="on";n9Z+="d";if(o5F%60===0&&C5F===n9Z){C5F="minute";H9d.O9X(7);o5F=H9d.x9X(o5F,60);}this.market=A5F;this.interval=C5F;this.multiple=o5F;this.intra_day=!!0;this.intervals=[];this.max_iters=10080;m5F=E3F;k5F=this._dayImpl;if(C5F==="millisecond"){k5F=this._millisImpl;m5F=1;}else if(C5F==="second"){k5F=this._secondImpl;m5F=1000;}else if(C5F===N9Z){k5F=this._minuteImpl;m5F=+"60000";}else if(C5F===k9Z){k5F=this._hourImpl;m5F=a3F;}else if(C5F==="day"){k5F=this._dayImpl;m5F=E3F;}else if(C5F==="week"){k5F=this._weekImpl;H9d.I9X(1);m5F=H9d.x9X(7,E3F);}else if(C5F===P9Z){k5F=this._monthImpl;H9d.I9X(92);m5F=H9d.x9X(E3F,"30");}else{H9d.I9X(21);console.log(H9d.x9X('Periodicity ERROR: "',C5F,'" is not a valid interval. Please see setPeriodicity() for details.'));}H9d.O9X(1);this.tick_time=H9d.x9X(o5F,m5F);this.intra_day=this.tick_time<E3F;this._findPrevious=this._findNext=k5F;};p0F=X0F.Market.Iterator._Clock.prototype;p0F._total_minutes=function(R5F,M5F,P5F,I5F){H9d.I9X(93);H9d.l9d();return H9d.L9X(P5F,60,I5F,M5F,R5F);};p0F._alignMinutes=function(){var s5F,J5F,v5F,l5F,H5F;if(!this.market.market_def||this.market.zopen_minute===undefined){return[];}s5F=this.market.zopen_minute;J5F=this.market.zseg_match;if(J5F&&J5F.adjacent_parent){H9d.O9X(94);var E1X=H9d.x9X(52,3996,6,13);H9d.I9X(12);var h1X=H9d.L9X(11,14,1446,14480);s5F=J5F.adjacent_parent.open/E1X-h1X;}else{if(this.market.isHourAligned()&&this.multiple%60===0){s5F=0;}}v5F=this._total_minutes(this.market.zopen_hour,s5F,this.market.zclose_hour,this.market.zclose_minute);l5F=[];H9d.I9X(1);H5F=H9d.x9X(1,"0");while(H5F<v5F){H9d.O9X(0);l5F.push(H9d.x9X(H5F,s5F));H5F+=this.multiple;}return l5F;};p0F._alignBaseZero=function(u5F){var G5F,b5F;G5F=+"0";b5F=[G5F];while(!""){G5F+=this.multiple;if(G5F>=u5F){break;}b5F.push(G5F);}return b5F;};p0F._date=function(){var r5F,d5F;r5F=Math.round(this.ctime);H9d.l9d();d5F=new Date(r5F);if(this.intra_day){this.display_date=new Date(r5F+this.shift_millis);}else{this.display_date=d5F;}return d5F;};p0F._alignToBoundary=function(z5F,Q5F){var y5F,W5F,e5F;y5F=+"0";W5F=0;e5F=Q5F;for(var F5F=0;F5F<z5F.length-1;F5F++){y5F=z5F[F5F];H9d.O9X(0);W5F=z5F[H9d.x9X(1,F5F)];if(Q5F===y5F||Q5F===W5F){break;;}if(Q5F>y5F&&Q5F<W5F){e5F=y5F;break;}else if(F5F+("1"|1)===z5F.length-1){e5F=W5F;}}return e5F;};p0F._peek=function(){return this._date().toString();};p0F._seekHr=function(){if(this.forward){this.ctime-=a3F;}else{this.ctime+=a3F;}};p0F._setStart=function(X5F){var p5F,Y5F;p5F=this.market._tzDifferenceMillis(X5F);Y5F=new Date(X5F.getTime()+p5F);this.shift_millis=p5F;this.ctime=Y5F.getTime();H9d.O9X(49);this.shift_millis=H9d.L9X(0,"0");this.ctime=X5F.getTime();};p0F._tickTock=function(){H9d.l9d();if(this.forward){this.ctime+=this.tick_time;}else{this.ctime-=this.tick_time;}};p0F._tockTick=function(){if(this.forward){this.ctime-=this.tick_time;}else{this.ctime+=this.tick_time;}};p0F._tickTock24=function(){H9d.l9d();var A39,B39,n39;A39=239824313;B39=-371214485;n39=2;for(var k39=1;H9d.Y19(k39.toString(),k39.toString().length,47414)!==A39;k39++){this.ctime*=E3F;n39+=2;}if(H9d.Y19(n39.toString(),n39.toString().length,15467)!==B39){this.ctime+=E3F;}};p0F._tockTick24=function(){H9d.A9d();this.ctime-=E3F;};p0F._windMaybe=function(O4F,T4F){var E4F,a4F,x4F,K4F;E4F=0;a4F=new Date(this.ctime);H9d.l9d();x4F=![];while(!O4F.call(this.market,a4F)){T4F.call(this);x4F=!0;a4F=new Date(this.ctime);E4F+=+"1";if(E4F>this.max_iters){K4F="Warning! max iterations ("+this.max_iters;K4F+=") reached with no rule match.";console.log(K4F);break;}}return x4F;};p0F._millisImpl=function(){var g4F,j4F,q4F,c4F,n4F,U4F,B4F,w4F,N4F,Z4F;g4F=!{};if(!this.mperiods_aligned){H9d.I9X(6);j4F=this._alignBaseZero(H9d.L9X(0,"1000"));q4F=new Date(this.ctime);c4F=q4F.getMilliseconds();c4F=this._alignToBoundary(j4F,c4F);q4F.setMilliseconds(0);this.ctime=q4F.getTime()+c4F;this.mperiods_aligned=!![];g4F=!!{};}H9d.A9d();n4F=this._date().getMinutes();this._tickTock();U4F=this._date().getMinutes();if((g4F||n4F!=U4F)&&!this.market._wasOpenIntraDay(this._date())){B4F=this._date().getSeconds();w4F=this._date().getMilliseconds();N4F=this.tick_time;this.tick_time=60000;Z4F=this.multiple;H9d.I9X(49);this.multiple=H9d.x9X(0,"1");this._minuteImpl();this.tick_time=N4F;this.multiple=Z4F;H9d.O9X(95);this.ctime+=H9d.L9X(w4F,1000,B4F);}return this._date();};p0F._secondImpl=function(){H9d.A9d();var f4F,i4F,L4F,D4F,S4F,h4F,V4F,t4F,C4F;f4F=!!0;if(!this.speriod_aligned){i4F=this._alignBaseZero(60);L4F=new Date(this.ctime);D4F=L4F.getSeconds();D4F=this._alignToBoundary(i4F,D4F);L4F.setSeconds(D4F);L4F.setMilliseconds(0);this.ctime=L4F.getTime();this.speriod_aligned=!![];f4F=!!"1";}S4F=this._date().getMinutes();this._tickTock();h4F=this._date().getMinutes();if((f4F||S4F!=h4F)&&!this.market._wasOpenIntraDay(this._date())){V4F=this._date().getSeconds();t4F=this.tick_time;this.tick_time=60000;C4F=this.multiple;this.multiple=1;this._minuteImpl();this.tick_time=t4F;this.multiple=C4F;H9d.O9X(1);this.ctime+=H9d.L9X(V4F,1000);}return this._date();};p0F._minuteImpl=function(){var P4F,m4F,I4F,s4F,A4F,k4F,o4F,R4F,J4F,M4F;P4F=this._windMaybe(this.market._wasOpenIntraDay,this._tockTick);m4F=new Date(this.ctime);I4F=m4F.getTimezoneOffset();s4F=m4F.getMinutes();A4F=m4F.getHours();k4F=this._alignMinutes();o4F=this._total_minutes(this.market.zopen_hour,this.market.zopen_minute,A4F,s4F)+this.market.zopen_minute;if(P4F){if(this.forward){H9d.O9X(11);var U1X=H9d.L9X(2,8,9);o4F=k4F[k4F.length-U1X];}else{o4F=k4F[0];}}else{o4F=this._alignToBoundary(k4F,o4F);}H9d.O9X(95);var S1X=H9d.x9X(40,4,5);A4F=Math.floor(o4F/S1X)+this.market.zopen_hour;H9d.I9X(73);m4F.setHours(A4F,H9d.L9X(60,o4F),0,+"0");R4F=m4F.getTimezoneOffset()-I4F;if(this.forward&&R4F<0||!this.forward&&R4F>0){m4F.setTime(m4F.getTime()-R4F*("60000"*1));}this.ctime=m4F.getTime();this._tickTock();J4F=this.market.hour_aligned&&this.multiple%("60"<<1762778368)===0;if(this._windMaybe(this.market._wasOpenIntraDay,this._tickTock)||!J4F&&this.shouldResetToBeginningOfSegment){m4F=new Date(this.ctime);if(this.forward){m4F.setMinutes(this.market.zopen_minute);m4F.setHours(this.market.zopen_hour);}else{k4F=this._alignMinutes();H9d.O9X(6);var y1X=H9d.x9X(2,1053754658);M4F=k4F[k4F.length-("1"<<y1X)];H9d.O9X(73);m4F.setMinutes(H9d.x9X(60,M4F));m4F.setHours(Math.floor(M4F/60)+this.market.zopen_hour);}this.ctime=m4F.getTime();}return this._date();};p0F._hourImpl=function(){var H4F,b4F,l4F,v4F,G4F;this._windMaybe(this.market._wasOpenIntraDay,this._tockTick);H4F=new Date(this.ctime);if(this.market.isHourAligned()){H9d.I9X(1);H4F.setMinutes(H9d.L9X(1,"0"));}else{H4F.setMinutes(this.market.zopen_minute);}H4F.setSeconds(+"0");H4F.setMilliseconds(0);this.ctime=H4F.getTime();this._tickTock();b4F=this.market.zseg_match;if(this._windMaybe(this.market._wasOpenIntraDay,this._tickTock)||!this.market.hour_aligned&&b4F!=this.market.zseg_match){l4F=new Date(this.ctime);if(this.forward){l4F.setMinutes(this.market.zopen_minute);l4F.setHours(this.market.zopen_hour);}else{v4F=this._alignMinutes();H9d.I9X(11);var i1X=H9d.L9X(7,2,8);G4F=v4F[v4F.length-i1X];H9d.I9X(73);l4F.setMinutes(H9d.x9X(60,G4F));l4F.setHours(Math.floor(G4F/60)+this.market.zopen_hour);}this.ctime=l4F.getTime();}return this._date();};p0F._dayImpl=function(){var u4F,r4F;this._windMaybe(this.market._wasOpenDaily,this._seekHr);u4F=new Date(this.ctime);H9d.l9d();u4F.setHours(12,0,0,0);this.ctime=u4F.getTime();r4F=0;while(r4F<this.multiple){if(this.forward){this._tickTock24();}else{this._tockTick24();}if(!this.market._wasOpenDaily(this._date())){continue;}r4F+=1;}u4F=new Date(this.ctime);u4F.setHours(0);this.ctime=u4F.getTime();return this._date();};p0F._weekImpl=function(){var F4F,d4F;F4F=this.market;d4F=new Date(this.ctime);d4F.setHours(12);this.ctime=d4F.getTime();this._tickTock();d4F=new Date(this.ctime);while(d4F.getDay()!==F4F.beginningDayOfWeek){this._tockTick24();d4F=new Date(this.ctime);}this._windMaybe(F4F._wasOpenDaily,this._tickTock24);d4F=new Date(this.ctime);H9d.O9X(74);d4F.setHours(0,+"0",H9d.L9X(2147483647,"0"),0);this.ctime=d4F.getTime();return this._date();};p0F._monthImpl=function(){var Q4F;Q4F=new Date(this.ctime);Q4F.setDate(15);this.ctime=Q4F.getTime();this._tickTock();Q4F=new Date(this.ctime);H9d.O9X(53);Q4F.setDate(H9d.x9X(1850868064,"1"));Q4F.setHours(+"12");this.ctime=Q4F.getTime();this._windMaybe(this.market._wasOpenDaily,this._tickTock24);Q4F=new Date(this.ctime);Q4F.setHours(0,0,0,0);this.ctime=Q4F.getTime();return this._date();};p0F._findNext=null;p0F._findPrevious=null;};R54=function R54(e4F){var C9d=o2QQ;C9d.u1Q=function(R1Q){C9d.l9d();if(C9d)return C9d.d1Q(R1Q);};C9d.m1Q=function(c1Q){C9d.A9d();if(C9d&&c1Q)return C9d.C1Q(c1Q);};C9d.f1Q=function(x1Q){if(C9d&&x1Q)return C9d.d1Q(x1Q);};C9d.h1Q=function(p1Q){if(C9d&&p1Q)return C9d.d1Q(p1Q);};C9d.k1Q=function(s1Q){C9d.A9d();if(C9d&&s1Q)return C9d.C1Q(s1Q);};var y4F,W4F,z4F;y4F=typeof _CIQ!=="undefined"?_CIQ:e4F.CIQ;W4F="valid";C9d.I9X(74);y4F.valid=C9d.x9X(2147483647,"0");y4F[C9d.k1Q("e3d7")?"ChartEngine":""][C9d.h1Q("782e")?"prototype":""][C9d.a1Q("bb8c")?"":"mousemoveinner"]=function(Z8F,L8F){C9d.Q1Q=function(N1Q){if(C9d&&N1Q)return C9d.d1Q(N1Q);};C9d.z1Q=function(P1Q){if(C9d)return C9d.C1Q(P1Q);};C9d.I1Q=function(A1Q){if(C9d&&A1Q)return C9d.C1Q(A1Q);};C9d.G1Q=function(g1Q){C9d.A9d();if(C9d&&g1Q)return C9d.d1Q(g1Q);};var P9L=-(C9d.e1Q("927e")?5584694209:1369033598),m9L=-(C9d.f1Q("d2d2")?275100496:944535649),N9L=C9d.G1Q("d968")?8967121776:1152522172,B9L=-(C9d.J1Q("3c99")?1774336746:3889723347),o9L=C9d.I1Q("d4c1")?902808910:460082353,u9L=32925579,t9L=487848811,z9L=C9d.z1Q("e7d4")?3570473681:2029656737,k9L=-(C9d.B1Q("34b1")?502099741:183904618),l9L=486932963,r9L=-709227830,e9L=1970054570,F9L=C9d.o1Q("3fa1")?1654477928:6413283408,W9L=C9d.Q1Q("87d9")?1195516860:6721782531,E9L=-1938824572,Q9L=C9d.m1Q("1787")?723786846:729079046;if(!(C9d.G9L(0,C9d.W1Q("1ee4")?false:true,C9d.u1Q("47e3")?899828:412402)!==P9L&&C9d.C9L(0,false,861235)!==m9L&&C9d.C9L(11,false,554462)!==N9L&&C9d.G9L(0,false,537004)!==B9L&&C9d.G9L(10,false,443528)!==o9L&&C9d.C9L(0,false,709995)!==u9L&&C9d.G9L(10,false,851828)!==t9L&&C9d.G9L(0,false,314098)!==z9L&&C9d.C9L(11,false,603729)!==k9L&&C9d.G9L(0,false,150159)!==l9L&&C9d.G9L(10,false,394554)!==r9L&&C9d.G9L(0,false,886680)!==e9L&&C9d.G9L(10,false,683489)!==F9L&&C9d.G9L(0,false,216268)!==W9L&&C9d.G9L(9,false,736043)!==E9L&&C9d.G9L(0,false,933434)!==Q9L)){var K8F=function K8F(V8F){C9d.l9d();var C4L=-269499956,G4L=1364765024,R4L=-678501013,V4L=1804467678,P4L=256315928,m4L=-1183561877,N4L=-1232091893,B4L=-1509433451,o4L=-2051033470,u4L=1543238135,t4L=646129359,z4L=-1784748347,k4L=456318646,l4L=643461910,r4L=1429249725,e4L=-894429253;if(C9d.G9L(0,false,459371)===C4L||C9d.G9L(0,false,317818)===G4L||C9d.G9L(11,false,321603)===R4L||C9d.C9L(0,false,364110)===V4L||C9d.C9L(10,false,683307)===P4L||C9d.G9L(0,false,865225)===m4L||C9d.G9L(10,false,624271)===N4L||C9d.C9L(0,false,282431)===B4L||C9d.G9L(11,false,606992)===o4L||C9d.C9L(0,false,191790)===u4L||C9d.G9L(10,false,709338)===t4L||C9d.G9L(0,false,373279)===z4L||C9d.C9L(10,false,749973)===k4L||C9d.C9L(0,false,615746)===l4L||C9d.C9L(9,false,494650)===r4L||C9d.G9L(0,false,236222)===e4L){V8F["currentBaseline"]=null;V8F["runAppend"]("mousemoveinner",D8F);}};var G9Z,a8F,D8F,U8F,g8F,B8F,f8F,i8F,X4F,w8F,z19,c19,A19,N8F,j8F,O8F,D9Z,n8F,E8F,Y4F,p4F,x8F,S8F,p09,M59,E59,Q39,R39,l39,h8F,T8F,q8F,c8F;G9Z="mouse";G9Z+="moveinner";if(!this["chart"]["canvas"]){return;}if(!y4F["isAndroid"]&&!y4F["isIOS7or8"]){if(this["chart"]["canvas"]["height"]!=Math["floor"](this["devicePixelRatio"]*this["chart"]["container"]["clientHeight"])||this["chart"]["canvas"]["width"]!=Math["floor"](this["devicePixelRatio"]*this["chart"]["container"]["clientWidth"])){this["resizeChart"]();return;}}if(this["runPrepend"](G9Z,arguments)){return;}D8F=arguments;U8F=this["container"]["getBoundingClientRect"]();this["top"]=U8F["top"];this["left"]=U8F["left"];this["right"]=this["left"]+this["width"];this["bottom"]=this["top"]+this["height"];this["hasDragged"]=!!{};y4F["ChartEngine"]["crosshairX"]=Z8F;y4F["ChartEngine"]["crosshairY"]=L8F;g8F=this["cy"]=this["crossYActualPos"]=this["backOutY"](y4F["ChartEngine"]["crosshairY"]);B8F=this["cx"]=this["crossXActualPos"]=this["backOutX"](y4F["ChartEngine"]["crosshairX"]);if(this["grabbingScreen"]&&this["anyHighlighted"]){C9d["O9X"](96);var v1X=C9d["x9X"](19,12,6,9,18);C9d["O9X"](0);var t1X=C9d["x9X"](2,0);f8F=Math["pow"](this["grabStartX"]-Z8F,v1X)+Math["pow"](this["grabStartY"]-L8F,t1X);if(f8F<36){return;}}this["cancelLongHold"]=!0;i8F=function i8F(t8F,C8F){var f9L=-1268502337,d9L=-1129431116,X9L=1790116959,Z9L=597120635,p9L=434516339,w4L=1009665056,n4L=-264380120,q4L=-791527354,O4L=-1885086312,K4L=316561223,a4L=1481940314,c4L=1900197950,g4L=724186871,h4L=907561193,j4L=2008939533,J4L=1914828977;C9d.A9d();if(C9d.C9L(0,false,530311)===f9L||C9d.C9L(0,false,205970)===d9L||C9d.G9L(11,false,629460)===X9L||C9d.G9L(0,false,314647)===Z9L||C9d.C9L(10,false,560879)===p9L||C9d.G9L(0,false,785601)===w4L||C9d.G9L(10,false,340359)===n4L||C9d.C9L(0,false,574914)===q4L||C9d.G9L(11,false,507161)===O4L||C9d.G9L(0,false,396977)===K4L||C9d.G9L(10,false,690932)===a4L||C9d.G9L(0,false,929433)===c4L||C9d.C9L(10,false,919269)===g4L||C9d.C9L(0,false,980510)===h4L||C9d.G9L(9,false,687614)===j4L||C9d.C9L(0,false,354209)===J4L){if(y4F[W4F]===0){return t8F["whichPanel"](C8F)||t8F["chart"]["panel"];}if(!t8F["draw"][W4F]){t8F["draw"]=function(){var S4L=-399978118,y4L=155774614,H4L=-2001359268,A4L=-763208433,Y4L=1469188647,x4L=-759780068,D4L=1971180036,b4L=636805352,v4L=1299693418,U4L=639047202,i4L=1555073133,s4L=1790167306,L4L=-655644609,M4L=91382829,T4L=1171012760,I4L=1934248565;if(C9d.C9L(0,false,191196)===S4L||C9d.C9L(0,false,574294)===y4L||C9d.G9L(11,false,673139)===H4L||C9d.C9L(0,false,143089)===A4L||C9d.C9L(10,false,506231)===Y4L||C9d.C9L(0,false,446435)===x4L||C9d.C9L(10,false,837737)===D4L||C9d.C9L(0,false,218691)===b4L||C9d.C9L(11,false,433331)===v4L||C9d.G9L(0,false,734238)===U4L||C9d.G9L(10,false,407242)===i4L||C9d.G9L(0,false,771968)===s4L||C9d.G9L(10,false,840283)===L4L||C9d.G9L(0,false,883505)===M4L||C9d.G9L(9,false,980018)===T4L||C9d.G9L(0,false,762557)===I4L){y4F["clearCanvas"](this["chart"]["canvas"],this);}};t8F["draw"][W4F]=!"";}}};this["currentPanel"]=i8F(this,g8F);if(!this["currentPanel"]){return;}X4F=this["currentPanel"]["chart"];if(X4F["dataSet"]){this["crosshairTick"]=this["tickFromPixel"](B8F,X4F);a8F=this["valueFromPixel"](g8F,this["currentPanel"]);this["crosshairValue"]=this["adjustIfNecessary"](this["currentPanel"],this["crosshairTick"],a8F);w8F=this["currentPanel"]["name"]=="chart"?this["preferences"]["horizontalCrosshairField"]:this["currentPanel"]["horizontalCrosshairField"];if(w8F&&this["crosshairTick"]<X4F["dataSet"]["length"]&&this["crosshairTick"]>-1){a8F=X4F["dataSet"][this["crosshairTick"]][w8F];this["crossYActualPos"]=this["pixelFromPrice"](a8F,this["currentPanel"]);}}if(y4F["ChartEngine"]["crosshairX"]>=this["left"]&&y4F["ChartEngine"]["crosshairX"]<=this["right"]&&y4F["ChartEngine"]["crosshairY"]>=this["top"]&&y4F["ChartEngine"]["crosshairY"]<=this["bottom"]){z19=917250754;c19=-732573405;A19=2;for(var n19=1;C9d["Y19"](n19["toString"](),n19["toString"]()["length"],+"14851")!==z19;n19++){this["insideChart"]=![];A19+=2;}if(C9d["Y19"](A19["toString"](),A19["toString"]()["length"],"31294"-0)!==c19){this["insideChart"]=!1;}this["insideChart"]=!!1;}else{this["insideChart"]=!{};}N8F=this["xAxisAsFooter"]===!!1?this["chart"]["canvasHeight"]:this["chart"]["panel"]["bottom"];this["overXAxis"]=this["insideChart"]&&y4F["ChartEngine"]["crosshairY"]<=N8F+this["top"]&&y4F["ChartEngine"]["crosshairY"]>N8F-this["xaxisHeight"]+this["top"];this["overYAxis"]=(this["cx"]>=this["currentPanel"]["right"]||this["cx"]<=this["currentPanel"]["left"])&&this["insideChart"];if(this["overXAxis"]||this["overYAxis"]||!this["insideChart"]&&!this["grabbingScreen"]){this["undisplayCrosshairs"]();if(!this["overXAxis"]&&!this["overYAxis"]){return;};}if(!this["displayCrosshairs"]&&!y4F["ChartEngine"]["resizingPanel"]){this["undisplayCrosshairs"]();return;}if(this["repositioningBaseline"]){this["setBaselineUserLevel"]();return K8F(this);}if(this["repositioningAnchorSelector"]){j8F=this["repositioningAnchorSelector"]["hoverTick"];O8F=this["tickFromPixel"](this["cx"],this["chart"]);if(O8F>=0&&O8F<this["chart"]["dataSet"]["length"]&&(!(j8F&&j8F!==0)||O8F!==j8F)){this["repositioningAnchorSelector"]["hoverTick"]=O8F;this["draw"]();}return K8F(this);}if(this["grabbingScreen"]&&!y4F["ChartEngine"]["resizingPanel"]){D9Z="p";D9Z+="a";D9Z+="n";if(this["highlightedDraggable"]){this["displayDragOK"](!![]);this["dragPlotOrAxis"](B8F,g8F);return K8F(this);}if(this["anyHighlighted"]){y4F["clearCanvas"](this["chart"]["tempCanvas"],this);this["anyHighlighted"]=![];for(n8F in this["overlays"]){this["overlays"][n8F]["highlight"]=!"1";}for(n8F in X4F["series"]){X4F["series"][n8F]["highlight"]=!1;}this["displaySticky"]();}if(this["grabStartX"]==-("1">>563163968)){this["grabStartX"]=y4F["ChartEngine"]["crosshairX"];this["grabStartScrollX"]=X4F["scroll"];}if(this["grabStartY"]==-1){this["grabStartY"]=y4F["ChartEngine"]["crosshairY"];this["grabStartScrollY"]=this["currentPanel"]["yAxis"]["scroll"];}E8F=y4F["ChartEngine"]["crosshairX"]-this["grabStartX"];Y4F=y4F["ChartEngine"]["crosshairY"]-this["grabStartY"];if(E8F===0&&Y4F===0){return;}if(Math["abs"](E8F)+Math["abs"](Y4F)>5){this["grabOverrideClick"]=!!1;}x8F=this["layout"]["candleWidth"];if(this["allowZoom"]&&this["grabMode"]!=D9Z&&(this["grabMode"]["indexOf"]("zoom")===0||this["overXAxis"]||this["grabStartYAxis"])){if(this["grabMode"]===""){if(this["overXAxis"]){this["grabMode"]="zoom-x";}else if(this["grabStartYAxis"]){this["grabMode"]="zoom-y";}}if(this["grabMode"]=="zoom-x"){C9d["I9X"](53);Y4F=C9d["x9X"](1720825952,"0");}else if(this["grabMode"]=="zoom-y"){E8F=0;}if(E8F){this["grabStartX"]=y4F["ChartEngine"]["crosshairX"];S8F=x8F-E8F/this["chart"]["maxTicks"];this["zoomSet"](S8F,this["chart"]);}if(this["layout"]["setSpan"]){this["layout"]["setSpan"]=null;this["changeOccurred"]("layout");}p4F=this["grabStartYAxis"];if(p4F){C9d["I9X"](1);p09=-C9d["L9X"](1,"1514675592");M59=-1631182443;E59=2;for(var U59=1;C9d["g19"](U59["toString"](),U59["toString"]()["length"],90150)!==p09;U59++){if(p4F["flipped"]){Y4F+=!0;}C9d["I9X"](53);E59+=C9d["x9X"](504191392,"2");}if(C9d["Y19"](E59["toString"](),E59["toString"]()["length"],12448)!==M59){if(p4F["flipped"]){Y4F*=-1;}}p4F["zoom"]=Math["round"](this["grabStartZoom"]+Y4F);if(this["grabStartZoom"]<p4F["height"]){if(p4F["zoom"]>=p4F["height"]){C9d["O9X"](17);var j1X=C9d["L9X"](9,13,8,29);p4F["zoom"]=p4F["height"]-j1X;}}else{Q39=-489428741;R39=-2047896574;C9d["I9X"](74);l39=C9d["L9X"](2147483647,"2");for(var K39=1;C9d["Y19"](K39["toString"](),K39["toString"]()["length"],66504)!==Q39;K39++){if(p4F["zoom"]>=p4F["height"]){C9d["O9X"](10);var w1X=C9d["L9X"](252,0,13,19);p4F["zoom"]=p4F["height"]%w1X;}l39+=2;}if(C9d["g19"](l39["toString"](),l39["toString"]()["length"],7764)!==R39){if(p4F["zoom"]>=p4F["height"]){p4F["zoom"]=p4F["height"]%5;}}if(p4F["zoom"]<=p4F["height"]){C9d["O9X"](6);var e1X=C9d["L9X"](5,6);p4F["zoom"]=p4F["height"]+e1X;}}}}else if(!this["overYAxis"]){this["dispatch"]("move",{stx:this,panel:this["currentPanel"],x:this["cx"],y:this["cy"],grab:!""});if(this["allowScroll"]){if(Math["abs"](Y4F)<this["yTolerance"]){if(!this["yToleranceBroken"]){C9d["O9X"](6);Y4F=C9d["L9X"](0,"0");if(E8F===0){return;}}}else{this["yToleranceBroken"]=!"";}if(!this["grabStartMicropixels"]){this["grabStartMicropixels"]=0;}this["grabMode"]="pan";X4F["scroll"]=this["grabStartScrollX"];C9d["I9X"](6);var V1X=C9d["x9X"](15,2091346031);C9d["I9X"](47);var b1X=C9d["L9X"](8,10,10,8);this["micropixels"]=this["grabStartMicropixels"]+E8F*(this["shift"]?"5"<<V1X:b1X);if(!this["lineTravelSpacing"]){while(this["micropixels"]>0){this["micropixels"]-=x8F;X4F["scroll"]++;}while(this["micropixels"]<-x8F){this["micropixels"]+=x8F;X4F["scroll"]--;}}if(X4F["scroll"]>=X4F["maxTicks"]){this["preferences"]["whitespace"]=this["initialWhitespace"];}else{this["preferences"]["whitespace"]=(X4F["maxTicks"]-X4F["scroll"])*x8F;}if(this["currentPanel"]==this["grabStartPanel"]){p4F=this["currentPanel"]["yAxis"];if(p4F["flipped"]){Y4F*=-1;}p4F["scroll"]=this["grabStartScrollY"]+Y4F;}this["dispatch"]("scroll",{stx:this,panel:this["currentPanel"],x:this["cx"],y:this["cy"]});}}h8F=function h8F(m8F){var F4L=623993072,W4L=138055977,E4L=1575567228,Q4L=-1370910677,f4L=456356204,d4L=2035690280,X4L=-1199370808,Z4L=-2034781445,p4L=-1269676436,w26=-205772576,n26=-1305241029,q26=1723785792,O26=-1851803572,K26=-1749441133,a26=-1169724342,c26=802213184;C9d.A9d();if(C9d.C9L(0,false,224336)===F4L||C9d.C9L(0,false,563906)===W4L||C9d.G9L(11,false,371292)===E4L||C9d.C9L(0,false,531038)===Q4L||C9d.G9L(10,false,832232)===f4L||C9d.C9L(0,false,722847)===d4L||C9d.C9L(10,false,914628)===X4L||C9d.C9L(0,false,285638)===Z4L||C9d.G9L(11,false,788171)===p4L||C9d.C9L(0,false,384542)===w26||C9d.G9L(10,false,928811)===n26||C9d.C9L(0,false,480944)===q26||C9d.G9L(10,false,530694)===O26||C9d.G9L(0,false,312601)===K26||C9d.G9L(9,false,404933)===a26||C9d.C9L(0,false,949644)===c26){return function(){C9d.A9d();var g26=-673160581,h26=1934634290,j26=-2039619377,J26=1913686508,S26=50542274,y26=-558270411,H26=1665186236,A26=-454986799,Y26=120712930,x26=1953828433,D26=2108752921,b26=723767570,v26=1304781947,U26=1225308000,i26=-1172325387,s26=1374929070;if(C9d.C9L(0,false,856899)===g26||C9d.C9L(0,false,764459)===h26||C9d.G9L(11,false,505102)===j26||C9d.C9L(0,false,649235)===J26||C9d.C9L(10,false,489452)===S26||C9d.G9L(0,false,166714)===y26||C9d.G9L(10,false,319634)===H26||C9d.C9L(0,false,867491)===A26||C9d.G9L(11,false,988227)===Y26||C9d.C9L(0,false,370858)===x26||C9d.G9L(10,false,167002)===D26||C9d.G9L(0,false,596288)===b26||C9d.G9L(10,false,501561)===v26||C9d.G9L(0,false,783346)===U26||C9d.G9L(9,false,578838)===i26||C9d.G9L(0,false,930244)===s26){m8F["draw"]();m8F["updateChartAccessories"]();}};}};if(y4F["ChartEngine"]["useAnimation"]){window["requestAnimationFrame"](h8F(this));}else{this["draw"]();this["updateChartAccessories"]();}if(this["activeDrawing"]){y4F["clearCanvas"](this["chart"]["tempCanvas"],this);this["activeDrawing"]["render"](this["chart"]["tempCanvas"]["context"]);this["activeDrawing"]["measure"]();}this["undisplayCrosshairs"]();return;}this["grabMode"]="";if(this["overXAxis"]||this["overYAxis"]){this["updateChartAccessories"]();if(!this["tapForHighlighting"]||!this["touchingEvent"]||this["anyHighlighted"]){this["findHighlights"]();}return K8F(this);;}if(this["controls"]["crossX"]){this["controls"]["crossX"]["style"]["left"]=this["pixelFromTick"](this["crosshairTick"],X4F)-0.5+"px";}if(this["controls"]["crossY"]){this["controls"]["crossY"]["style"]["top"]=this["crossYActualPos"]+"px";}if(this["insideChart"]&&!y4F["ChartEngine"]["resizingPanel"]){T8F=this["currentVectorParameters"]["vectorType"];if(this["layout"]["studies"]){q8F=this["layout"]["studies"][this["currentPanel"]["name"]];if(q8F){if(!this["preferences"]["dragging"]||!this["preferences"]["dragging"]["study"]){delete this["overlays"][q8F["name"]];}if(T8F){this["overlays"][q8F["name"]]=q8F;}}}if(!y4F["Drawing"]||!T8F||!y4F["Drawing"][T8F]||!new y4F["Drawing"][T8F]()["dragToDraw"]){this["doDisplayCrosshairs"]();}this["updateChartAccessories"]();}else{this["undisplayCrosshairs"]();}if(this["magnetize"]){this["magnetize"]();}if(this["repositioningDrawing"]){this["repositionDrawing"](this["repositioningDrawing"]);}else if(y4F["ChartEngine"]["drawingLine"]){if(this["activeDrawing"]){c8F=this["panels"][this["activeDrawing"]["panelName"]];a8F=this["adjustIfNecessary"](c8F,this["crosshairTick"],this["valueFromPixel"](this["backOutY"](y4F["ChartEngine"]["crosshairY"]),c8F));if(this["magnetizedPrice"]&&c8F["name"]==this["currentPanel"]["name"]){a8F=this["adjustIfNecessary"](c8F,this["crosshairTick"],this["magnetizedPrice"]);}if(this["magnetizedPrice"]===null){y4F["clearCanvas"](this["chart"]["tempCanvas"],this);}this["activeDrawing"]["move"](this["chart"]["tempCanvas"]["context"],this["crosshairTick"],a8F);if(this["activeDrawing"]["measure"]){this["activeDrawing"]["measure"]();}}}else if(y4F["ChartEngine"]["resizingPanel"]){this["resizePanels"]();}if(this["insideChart"]){this["dispatch"]("move",{stx:this,panel:this["currentPanel"],x:this["cx"],y:this["cy"],grab:!!""});if(!this["tapForHighlighting"]||!this["touchingEvent"]||this["anyHighlighted"]){this["findHighlights"]();}}return K8F(this);}};y4F.ChartEngine.prototype.swipeStart=function(k8F){var o8F;C9d.l9d();if(this.swipe&&this.swipe.interval){clearInterval(this.swipe.interval);}this.swipe.velocity=+"0";this.swipe.amplitude=0;this.swipe.frame=k8F.scroll;this.swipe.micropixels=this.micropixels;this.swipe.timestamp=Date.now();this.swipe.chart=k8F;this.swipe.end=![];this.swipe.timeConstant=325;this.swipe.cb=null;o8F=this;requestAnimationFrame(function(){C9d.l9d();o8F.swipeSample();});};y4F.ChartEngine.prototype.swipeSample=function(){var A8F,R8F,M8F,P8F,I8F,J8F,H8F,l8F,s8F;A8F=this.swipe;C9d.l9d();if(A8F.end){return;}R8F=this;H8F=20;M8F=Date.now();P8F=M8F-A8F.timestamp;if(P8F<H8F){requestAnimationFrame(function(){C9d.l9d();R8F.swipeSample();});return;}l8F=y4F.touchDevice?0.4:0.8;A8F.timestamp=M8F;I8F=(A8F.chart.scroll-A8F.frame)*this.layout.candleWidth+this.micropixels-A8F.micropixels;A8F.frame=A8F.chart.scroll;A8F.micropixels=this.micropixels;C9d.O9X(97);J8F=C9d.L9X(P8F,1,1000,I8F);s8F=l8F*J8F+("0.2"-0)*A8F.velocity;if(Math.abs(s8F)>Math.abs(A8F.velocity)){A8F.velocity=s8F;}if(Math.abs(I8F)<6){A8F.velocity=+"0";;}requestAnimationFrame(function(){R8F.swipeSample();});};y4F.ChartEngine.prototype.swipeRelease=function(){var v8F,G8F;v8F=this.swipe;if(v8F.velocity>3000){v8F.velocity=3000;}if(v8F.velocity<-3000){v8F.velocity=-3000;}if(v8F.velocity>10||v8F.velocity<-10){v8F.amplitude=0.8*v8F.velocity;v8F.scroll=v8F.chart.scroll;v8F.target=v8F.amplitude;v8F.timestamp=Date.now();G8F=this;if(this.disableBackingStoreDuringTouch){this.disableBackingStore();}requestAnimationFrame(function(){C9d.l9d();G8F.autoscroll();});}};y4F.ChartEngine.prototype.dragPlotOrAxis=function(e8F,x6u){var W9Z,S6u,h6u,M6u,V6u,O6u,b8F,u8F,d8F,E6u,a6u,g6u,T6u,W8F,j6u,f9Z,q6u,z8F,r8F,n6u,U6u,J6u,t6u,C6u,H6u,Q8F,y8F,H9Z,s9Z,q9Z,P6u,I6u,s6u,L6u,I9Z,a9Z,F8F,D6u,v6u,b6u,m6u,B6u,u6u,R9Z,c6u,f6u,i6u,l9Z,k6u,K6u,o6u,N6u,Z6u,r9Z,K9Z,C9Z,A6u,R6u;W9Z="no";W9Z+="ne";if(!d6u.call(this)&&!this.grabbingScreen){return;}S6u=null;h6u=20;M6u=10;C9d.I9X(6);V6u=this.whichPanel(C9d.x9X(h6u,x6u));C9d.I9X(0);O6u=this.whichPanel(C9d.x9X(h6u,x6u));b8F=this.whichPanel(x6u);u8F=this.highlightedDraggable;if(!b8F){return;}if(u8F.undraggable&&u8F.undraggable(this)){return;}d8F=this.whichYAxis(b8F,e8F,x6u);C9d.I9X(6);E6u=this.whichYAxis(b8F,C9d.L9X(M6u,e8F),x6u);C9d.I9X(0);a6u=this.whichYAxis(b8F,C9d.L9X(M6u,e8F),x6u);if(this.xAxisAsFooter&&b8F.name==Object.keys(this.panels).pop()){O6u=this.whichPanel(x6u+h6u+this.xaxisHeight);if(S6u){S6u+=this.xaxisHeight;}}g6u=!!0;T6u=!{};W8F=![];if(y4F.Renderer){g6u=u8F instanceof y4F.Renderer;}if(y4F.Studies){T6u=u8F instanceof y4F.Studies.StudyDescriptor;}W8F=u8F instanceof y4F.ChartEngine.YAxis;j6u=function j6u(X6u){var J9Z;C9d.l9d();if(!W8F){J9Z="righ";J9Z+="t";if(X6u==J9Z){return b8F.right-b8F.width/6;}if(X6u=="left"){C9d.I9X(6);var g1X=C9d.L9X(14,20);return b8F.left+b8F.width/g1X;}}C9d.O9X(6);var F1X=C9d.L9X(32,34);return(b8F.left+b8F.right)/F1X;};if(!W8F&&!d8F){f9Z="r";f9Z+="ight";if(e8F<j6u("left")){E6u=this.whichYAxis(b8F,b8F.left-1,x6u);}else if(e8F>j6u(f9Z)){a6u=this.whichYAxis(b8F,b8F.right+1,x6u);}}q6u=[];if(u8F.getDependents){q6u=u8F.getDependents(this,!![]);}z8F=u8F.panel;r8F=u8F.getYAxis(this);if(g6u){z8F=u8F.params.panel;}else if(W8F){z8F=this.grabStartPanel.name;}n6u=this.panels[z8F];for(U6u in this.panels){if(this.panels[U6u].soloing){J6u=!!"1";}}t6u=r8F.isShared(this);C6u=!W8F&&!J6u&&(n6u!==b8F&&n6u!=V6u&&n6u!=O6u||!this.checkForEmptyPanel(n6u,!!{},[u8F].concat(q6u)));H6u=z8F==b8F.name&&r8F!==d8F&&r8F!==a6u&&r8F!==E6u||t6u;if(C6u&&(!V6u||b8F!==V6u)){b8F.subholder.classList.add("dropzone");b8F.subholder.classList.add("top");O6u=b8F;}else if(C6u&&(!O6u||b8F!==O6u)){H9Z="dropz";H9Z+="one";b8F.subholder.classList.add(H9Z);b8F.subholder.classList.add("bottom");}else if(b8F!==n6u){if(!W8F&&!b8F.noDrag){s9Z="dropz";s9Z+="o";s9Z+="ne";b8F.subholder.classList.add(s9Z);b8F.subholder.classList.add("all");Q8F=b8F.name;}}else if((!b8F.yaxisRHS.length||b8F.yaxisRHS.length==+"1"&&b8F.yaxisRHS[0]==r8F&&r8F.position==W9Z)&&!d8F&&!a6u&&e8F>j6u("right")){q9Z="drop";q9Z+="zone";b8F.subholder.classList.add(q9Z);b8F.subholder.classList.add("right");y8F="right";}else if((!b8F.yaxisLHS.length||b8F.yaxisLHS.length==1&&b8F.yaxisLHS[0]==r8F&&r8F.position=="none")&&!d8F&&!E6u&&e8F<j6u("left")){b8F.subholder.classList.add("dropzone");b8F.subholder.classList.add("left");y8F="left";}else if(H6u){if(W8F&&e8F>b8F.left&&e8F<b8F.right){C9d.O9X(5);var x1X=C9d.L9X(5,8,8724221);P6u=b8F.yaxisLHS[b8F.yaxisLHS.length-("1">>x1X)];I6u=b8F.yaxisRHS[0];s6u=j6u();if(e8F<s6u&&P6u!=r8F){E6u=P6u;}else if(e8F>s6u&&I6u!=r8F){a6u=I6u;}}if(!W8F||d8F!==r8F){L6u=!W8F&&t6u;if(a6u&&(a6u!==r8F||L6u)&&(!d8F||d8F!==a6u)){I9Z="l";I9Z+="eft";a6u.dropzone=I9Z;y8F=a6u.position||this.chart.panel.yAxis.position||"right";}else if(E6u&&(E6u!==r8F||L6u)&&(!d8F||d8F!==E6u)){E6u.dropzone="right";y8F=E6u.position||this.chart.panel.yAxis.position||"right";}else if(d8F){if(!a6u&&(d8F!==r8F||L6u)){d8F.dropzone="right";}else if(!E6u&&(d8F!==r8F||L6u)){d8F.dropzone="left";}else if(d8F!==r8F){a9Z="a";a9Z+="l";a9Z+="l";d8F.dropzone=a9Z;}if(d8F.dropzone){y8F=d8F.position||this.chart.panel.yAxis.position||"right";}}}}if(this.grabbingScreen||!b8F.subholder.classList.contains("dropzone")&&!y8F){this.draw();return;}D6u=-1;if(!Q8F&&!y8F&&C6u){Q8F=T6u?u8F.inputs.id:u8F.params.name||y4F.uniqueID();for(var l6u in this.panels){D6u++;if(this.panels[l6u]==O6u)break;}if(!O6u){D6u++;}if(this.panels[z8F].yAxis.name==Q8F){z8F=this.electNewPanelOwner(z8F);}v6u=T6u?u8F.inputs.display:null;if(z8F){this.createPanel(v6u||Q8F,Q8F,S6u,this.chart.name,new y4F.ChartEngine.YAxis({name:Q8F}));}else{z8F=Q8F;}if(T6u){u8F.panel=z8F;}else{u8F.params.panel=z8F;}}if(Q8F){if(T6u){if(!u8F.parameters){u8F.parameters={};}u8F.parameters.panelName=Q8F;this.highlightedDraggable=y4F.getFn("Studies.replaceStudy")(this,u8F.inputs.id,u8F.type,u8F.inputs,u8F.outputs,u8F.parameters,null,u8F.study);}else if(g6u){for(var G6u in u8F.seriesParams){b6u=u8F.seriesParams[G6u];m6u=null;if(u8F.params.yAxis){if(u8F.params.yAxis!==this.chart.panel.yAxis){m6u=u8F.params.yAxis;m6u.name=u8F.params.name;}}this.modifySeries(b6u.id,{panel:Q8F,yAxis:m6u});}}if(D6u>-+"1"){B6u={};u6u=0;for(U6u in this.panels){if(D6u==u6u++){B6u[Q8F]=this.panels[Q8F];}if(U6u==Q8F)continue;B6u[U6u]=this.panels[U6u];}if(!B6u[Q8F]){B6u[Q8F]=this.panels[Q8F];}this.panels=B6u;}this.checkForEmptyPanel(z8F);for(var w6u=0;w6u<q6u.length;w6u++){if(q6u[w6u].params){this.checkForEmptyPanel(q6u[w6u].params.name);}else{this.checkForEmptyPanel(q6u[w6u].name);}}this.adjustPanelPositions();}else if(y8F){R9Z="a";R9Z+="l";R9Z+="l";c6u=function c6u(a1u,p6u,x1u,Y6u){var Q9Z,E1u,O1u;Q9Z="st";Q9Z+="u";Q9Z+="d";Q9Z+="y";if(x1u==Q9Z){if(!p6u.parameters){p6u.parameters={};}if(Y6u){p6u.parameters.yaxisDisplayValue=Y6u.position;}else{delete p6u.parameters.yaxisDisplayValue;}E1u=y4F.getFn("Studies.replaceStudy")(a1u,p6u.inputs.id,p6u.type,p6u.inputs,p6u.outputs,p6u.parameters,p6u.panel,p6u.study);}if(x1u=="renderer"){for(var K1u in p6u.seriesParams){O1u=p6u.seriesParams[K1u];E1u=a1u.modifySeries(O1u.id,{panel:Q8F,yAxis:Y6u});}}return E1u;};f6u=d8F&&d8F.dropzone==R9Z;if(!f6u){if(W8F){u8F.position=y8F;if(this.layout.studies){i6u=this.layout.studies[u8F.name];if(i6u){if(!i6u.parameters){i6u.parameters={};}i6u.parameters.yaxisDisplayValue=y8F;}}}else if(T6u){l9Z="s";l9Z+="tud";l9Z+="y";this.highlightedDraggable=c6u(this,u8F,l9Z,{position:y8F});}else if(g6u){c6u(this,u8F,"renderer",new y4F.ChartEngine.YAxis({name:u8F.params.name||y4F.uniqueID(),position:y8F}));}r8F=this.highlightedDraggable.getYAxis(this);}if(!t6u||!f6u||W8F){k6u=r8F;if(f6u&&r8F==this.chart.panel.yAxis){k6u=d8F;}for(F8F=0;F8F<b8F.yaxisLHS.length;F8F++){if(b8F.yaxisLHS[F8F]==k6u){b8F.yaxisLHS.splice(F8F,1);break;}}for(F8F=0;F8F<b8F.yaxisRHS.length;F8F++){if(b8F.yaxisRHS[F8F]==k6u){b8F.yaxisRHS.splice(F8F,1);break;}}}if(f6u){if(this.getYAxisByName(b8F,r8F.name)==b8F.yAxis){this.electNewPanelOwner(b8F,d8F);}if(W8F){N6u=r8F;Z6u=d8F;if(r8F==this.chart.panel.yAxis){N6u=d8F;Z6u=r8F;}for(o6u in N6u.studies){c6u(this,this.layout.studies[N6u.studies[o6u]],"study",Z6u===this.chart.panel.yAxis?null:{position:Z6u.name});}for(o6u in N6u.renderers){r9Z="rend";r9Z+="er";r9Z+="e";r9Z+="r";c6u(this,this.chart.seriesRenderers[N6u.renderers[o6u]],r9Z,Z6u);}this.highlightedDraggable=Z6u;}else if(T6u){K9Z="s";K9Z+="t";K9Z+="udy";this.highlightedDraggable=c6u(this,u8F,K9Z,{position:d8F.name});}else if(g6u){c6u(this,u8F,"renderer",d8F);}}else{C9Z="le";C9Z+="ft";if(r8F.position=="none"){r8F.width=y4F.ChartEngine.YAxis.prototype.width;}r8F.position=y8F;K6u=y8F==C9Z?b8F.yaxisLHS:b8F.yaxisRHS;for(F8F=0;F8F<K6u.length;F8F++){if(K6u[F8F]!==r8F){if(K6u[F8F].dropzone=="left"){K6u.splice(F8F,0,r8F);}else if(K6u[F8F].dropzone=="right"){C9d.I9X(0);K6u.splice(C9d.L9X(1,F8F),0,r8F);}else continue;}break;}if(F8F==K6u.length){K6u.push(r8F);}}}for(var r6u in this.panels){A6u=this.panels[r6u];R6u=A6u.yaxisLHS.concat(A6u.yaxisRHS);for(F8F=0;F8F<R6u.length;F8F++){R6u[F8F].height=A6u.yAxis.height;this.calculateYAxisMargins(R6u[F8F]);}}this.displayDragOK();this.draw();this.calculateYAxisPositions();this.draw();this.findHighlights(null,!!{});this.savePanels();function d6u(){var y6u,F6u;function W6u(z6u){C9d.A9d();return function(e6u){C9d.A9d();if(z6u.subholder.classList.contains(e6u)){z6u.subholder.classList.remove(e6u);y6u=!!{};}};}y6u=![];for(var Q6u in this.panels){["dropzone","all","left","right","top","bottom"].forEach(W6u(this.panels[Q6u]));for(F6u=0;F6u<this.panels[Q6u].yaxisLHS.length;F6u++){if(this.panels[Q6u].yaxisLHS[F6u].dropzone){y6u=!0;}this.panels[Q6u].yaxisLHS[F6u].dropzone=null;}for(F6u=0;F6u<this.panels[Q6u].yaxisRHS.length;F6u++){if(this.panels[Q6u].yaxisRHS[F6u].dropzone){y6u=!0;}this.panels[Q6u].yaxisRHS[F6u].dropzone=null;}}return y6u;}};C9d.l9d();z4F=![];y4F.ChartEngine.prototype.findHighlights=y4F.ChartEngine.prototype.findHighlights||function(T1u,q1u){if(!z4F){console.error("movement feature requires activating interaction feature.");}z4F=!!{};};};M54=function M54(g1u){var c1u;c1u=typeof _CIQ!=="undefined"?_CIQ:g1u.CIQ;c1u.NameValueStore=c1u.NameValueStore||function(){};c1u.NameValueStore.prototype.toJSONIfNecessary=function(j1u){var n1u;if(j1u.constructor==String){return j1u;}try{n1u=JSON.stringify(j1u);return n1u;}catch(U1u){var O9Z;O9Z="Cannot conver";O9Z+="t t";O9Z+="o JSON: ";o2QQ.I9X(0);console.log(o2QQ.x9X(j1u,O9Z));return null;}};c1u.NameValueStore.prototype.fromJSONIfNecessary=function(B1u){var w1u;try{w1u=JSON.parse(B1u);return w1u;}catch(N1u){return B1u;}};c1u.NameValueStore.prototype.get=function(L1u,D1u){var Z1u;Z1u=c1u.localStorage.getItem(L1u);D1u(null,this.fromJSONIfNecessary(Z1u));};c1u.NameValueStore.prototype.set=function(i1u,S1u,f1u){o2QQ.A9d();c1u.localStorageSetItem(i1u,this.toJSONIfNecessary(S1u));if(f1u){f1u(null);}};c1u.NameValueStore.prototype.remove=function(V1u,h1u){c1u.localStorage.removeItem(V1u);o2QQ.l9d();if(h1u){h1u(null);}};};P54=function P54(m1u){var m9Z,t1u;m9Z="un";m9Z+="defined";t1u=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==m9Z?_CIQ:m1u.CIQ;if(!t1u.ChartEngine){t1u.ChartEngine=function(){};}C1u.fetchInitialData=function(k1u,o1u,A1u,R1u,M1u){};C1u.fetchUpdateData=function(P1u,I1u,s1u,J1u){};C1u.fetchPaginationData=function(H1u,l1u,v1u,G1u,b1u){};C1u.subscribe=function(u1u){};C1u.unsubscribe=function(r1u){};t1u.QuoteFeed=t1u.QuoteFeed||function(){};t1u.QuoteFeed.prototype.fetch=function(d1u,F1u){o2QQ.l9d();if(!this.v2QuoteFeed){console.log("You must implement CIQ.QuoteFeed.[yourfeedname].prototype.fetch()");}};t1u.QuoteFeed.prototype.announceError=function(Q1u,y1u){if(Q1u.suppressErrors||y1u.suppressAlert){return;}if(Q1u.startDate){;}else if(Q1u.endDate){;}else if(y1u.error){t1u.alert("Error fetching quote:"+y1u.error);}else{;}};t1u.QuoteFeed.prototype.multiFetch=function(W1u,z1u){if(W1u.length===0){z1u([]);}return W1u["0"^0].stx.driver.multiFetch(W1u,z1u);};t1u.QuoteFeed.Subscriptions=function(){o2QQ.l9d();this.subscriptions=[];};t1u.inheritsFrom(t1u.QuoteFeed.Subscriptions,t1u.QuoteFeed);t1u.QuoteFeed.Subscriptions.prototype.checkSubscriptions=function(Y1u){var X1u,e1u,E0u,a0u,u9Z,x0u,X9Z,Z9Z;E0u=Y1u.getSymbols({"breakout-equations":!![]});a0u=this;o2QQ.A9d();E0u=E0u.filter(function(T0u){var O0u;O0u=Y1u.quoteDriver.getQuoteFeed(T0u);return O0u&&O0u.engine==a0u;});for(var p1u=0;p1u<this.subscriptions.length;p1u++){this.subscriptions[p1u].match=!"1";}for(var K0u=+"0";K0u<E0u.length;K0u++){u9Z="w";u9Z+="e";u9Z+="e";u9Z+="k";e1u=E0u[K0u];x0u=e1u.interval;if((x0u=="month"||x0u==u9Z)&&!Y1u.dontRoll){x0u="day";}e1u.interval=x0u;e1u.period=1;e1u.match=!"1";if(!isNaN(e1u.interval)){X9Z="mi";X9Z+="nute";e1u.period=e1u.interval;e1u.interval=e1u.timeUnit;if(!e1u.interval){e1u.interval=X9Z;}}delete e1u.periodicity;delete e1u.timeUnit;delete e1u.setSpan;for(p1u=0;p1u<this.subscriptions.length;p1u++){X1u=this.subscriptions[p1u];if(X1u.symbol==e1u.symbol&&X1u.period==e1u.period&&X1u.interval==e1u.interval){e1u.match=!!1;X1u.match=!0;break;}else if(X1u.symbol!=e1u.symbol){Z9Z="per";Z9Z+="io";Z9Z+="d";if(e1u.reason!=Z9Z){e1u.reason="symbol";}X1u.reason="symbol";}else{e1u.reason="period";X1u.reason="period";}}}this.subscriptions=this.subscriptions.filter(function(q0u){var u67=o2QQ;var A59,B59,n59;if(!q0u.match){if(!q0u.stx){q0u.stx=Y1u;}a0u.unsubscribe(q0u);}A59=-1809646284;u67.I9X(53);B59=-u67.x9X(471891072,"21025861");u67.A9d();u67.O9X(50);n59=u67.x9X("2",0);for(var k59=+"1";u67.Y19(k59.toString(),k59.toString().length,90030)!==A59;k59++){return q0u.match;}if(u67.g19(n59.toString(),n59.toString().length,+"70806")!==B59){return q0u.match;}});E0u.forEach(function(c0u){o2QQ.A9d();if(!c0u.match){if(!c0u.stx){c0u.stx=Y1u;}if(!c0u.reason){c0u.reason="initialize";}if(c0u.symbol!==Y1u.chart.symbol){c0u.series=!![];}a0u.subscribe(c0u);a0u.subscriptions.push(c0u);}});};t1u.QuoteFeed.Subscriptions.prototype.fetch=function(g0u,n0u){var j0u;j0u=this;this.fetchFromSource(g0u,function(U0u){if(!U0u.error){j0u.checkSubscriptions(g0u.stx);}n0u(U0u);});};t1u.QuoteFeed.Subscriptions.prototype.subscribe=function(B0u){console.log("subscribe",B0u);};t1u.QuoteFeed.Subscriptions.prototype.unsubscribe=function(w0u){console.log("unsubscribe",w0u);};t1u.QuoteFeed.Subscriptions.prototype.fetchFromSource=function(N0u,Z0u){o2QQ.l9d();var p9Z;p9Z="Please provide";p9Z+=" implement";p9Z+="ation of fetchFromSour";p9Z+="ce";console.log(p9Z);};t1u.QuoteFeed.prototype.requiresImmediateRefresh=function(L0u){return![];};t1u.ChartEngine.prototype.attachQuoteFeed=function(D0u,f0u,i0u){var v4Z,i4Z,t4Z,S0u;v4Z="fun";v4Z+="ctio";v4Z+="n";i4Z="func";i4Z+="ti";i4Z+="o";i4Z+="n";if(!f0u){f0u={};}if(_typeof(D0u.fetchInitialData)===i4Z||_typeof(D0u.fetchUpdateData)===v4Z||typeof D0u.fetchPaginationData==="function"){t4Z="f";t4Z+="unction";if(typeof D0u.fetchPaginationData!=="function"&&typeof D0u.fetchUpdateData!=="function"){f0u.noLoadMore=!!1;}D0u.v2QuoteFeed=!"";["multiFetch","announceError","requiresImmediateRefresh"].forEach(function(h0u){if(!D0u[h0u]&&D0u[h0u]!==![]){D0u[h0u]=t1u.QuoteFeed.prototype[h0u];}o2QQ.l9d();;});if(_typeof(D0u.subscribe)===t4Z){D0u.checkSubscriptions=t1u.QuoteFeed.Subscriptions.prototype.checkSubscriptions;D0u.subscriptions=[];}}if(!f0u.maximumTicks){f0u.maximumTicks=D0u.maxTicks?D0u.maxTicks:20000;}if(!f0u.bufferSize||f0u.bufferSize<0){f0u.bufferSize=0;}f0u.bufferSize=Math.round(f0u.bufferSize);f0u.intervalTimer=null;if(this.quoteDriver){if(!i0u&&this.quoteDriver.hasUnfilteredQuoteFeed){this.detachQuoteFeed();}else{S0u=this.quoteDriver.hasUnfilteredQuoteFeed&&this.quoteDriver.quoteFeeds.pop();this.quoteDriver.quoteFeeds.push({engine:D0u,behavior:f0u,filter:i0u});if(S0u){this.quoteDriver.quoteFeeds.push(S0u);}this.quoteDriver.updateChartLoop(null,f0u);}}if(!this.quoteDriver){this.quoteDriver=new t1u.ChartEngine.Driver(this,D0u,f0u,i0u);}o2QQ.A9d();if(!i0u){this.quoteDriver.hasUnfilteredQuoteFeed=!!1;}};t1u.ChartEngine.prototype.detachQuoteFeed=function(C0u){var V0u,a09,R09,l09;V0u=this.quoteDriver;a09=331570346;R09=+"650477244";l09=2;for(var C09=+"1";o2QQ.g19(C09.toString(),C09.toString().length,"94541">>811685568)!==a09;C09++){if(!V0u){return;}l09+=2;}if(o2QQ.g19(l09.toString(),l09.toString().length,67248)!==R09){if(+V0u){return;}}for(var t0u=V0u.quoteFeeds.length-1;t0u>=+"0";t0u--){if(!C0u||V0u.quoteFeeds[t0u].quoteFeed==C0u){V0u.die(V0u.quoteFeeds[t0u]);V0u.quoteFeeds.splice(t0u,1);}}if(!V0u.quoteFeeds.length){V0u=this.quoteDriver=null;}else if(C0u==V0u.quoteFeed){V0u.quoteFeed=V0u.quoteFeeds[+"0"].quoteFeed;V0u.behavior=V0u.quoteFeeds[+"0"].behavior;}};t1u.ChartEngine.Driver=function(A0u,k0u,m0u,o0u){this.stx=A0u;if(!m0u){m0u={};}this.quoteFeeds=[{engine:k0u,behavior:m0u,filter:o0u}];this.id=t1u.uniqueID(!!1);this.behavior=m0u;this.quoteFeed=k0u;this.loadingNewChart=!!"";this.updatingChart=![];if(!o0u){this.hasUnfilteredQuoteFeed=!!1;}this.updateChartLoop();};t1u.ChartEngine.Driver.prototype.die=function(P0u){o2QQ.A9d();var M0u;for(var R0u=0;R0u<this.quoteFeeds.length;R0u++){if(!P0u||this.quoteFeeds[R0u]==P0u){M0u=this.quoteFeeds[R0u].behavior;if(M0u.intervalTimer){clearInterval(M0u.intervalTimer);M0u.intervalTimer=-1;;}}}};function C1u(){}t1u.ChartEngine.Driver.prototype.getQuoteFeed=function(I0u){o2QQ.A9d();var s0u;if(!I0u.symbolObject){I0u.symbolObject={symbol:I0u.symbol};}for(var J0u=0;J0u<this.quoteFeeds.length;J0u++){s0u=this.quoteFeeds[J0u];if(s0u.behavior.generator!=I0u.symbolObject.generator)continue;if(!s0u.filter||s0u.filter(I0u)){return s0u;}}return null;;};t1u.ChartEngine.Driver.prototype.multiFetch=function(l0u,G0u){var b0u,H0u,u0u;function r0u(F0u,d0u,Q0u){return function(W0u){var y0u;o2QQ.A9d();d0u.results.push({dataCallback:W0u,params:F0u});d0u.counter++;if(d0u.counter>=d0u.finished){y0u=d0u.results;d0u.results=[];Q0u(y0u);}};}if(l0u.length===0){G0u([]);}o2QQ.l9d();b0u={counter:0,finished:l0u.length,results:[]};for(var v0u=0;v0u<l0u.length;v0u++){H0u=l0u[v0u];if(H0u.stx.isEquationChart(H0u.symbol)){t1u.fetchEquationChart(H0u,r0u(H0u,b0u,G0u));}else{u0u=this.getQuoteFeed(H0u);if(u0u){t1u.ChartEngine.Driver.fetchData(t1u.QuoteFeed.SERIES,u0u.engine,H0u,r0u(H0u,b0u,G0u));}}}};t1u.ChartEngine.Driver.prototype.updateSubscriptions=function(){for(var z0u=+"0";z0u<this.quoteFeeds.length;z0u++){if(this.quoteFeeds[z0u].checkSubscriptions){this.quoteFeeds[z0u].checkSubscriptions(this.stx);}}};t1u.ChartEngine.Driver.prototype.loadDependents=function(e0u,x3u,K3u,q3u){var a3u,L3u,g3u,j3u,D3u,t3u,Y69,g69,F69,C3u,m3u,E3u,f3u,i3u,k3u,X0u,p0u,O3u,n3u,T3u,S3u,U3u,c3u,h3u,V3u,w3u,Y0u,Z3u;a3u=this;if(!q3u){L3u=0;g3u=[];j3u=[];D3u=function D3u(A3u){o2QQ.A9d();if(x3u&&++L3u>=a3u.quoteFeeds.length){x3u(null);}};t3u=function t3u(R3u){o2QQ.l9d();if(++L3u<g3u.length){return;}if(!j3u.length){D3u(R3u);}j3u.forEach(function(M3u){a3u.loadDependents(e0u,D3u,K3u,M3u.behavior);});};a3u.quoteFeeds.forEach(function(P3u){o2QQ.l9d();if(P3u.behavior.generator){j3u.push(P3u);}else{g3u.push(P3u);}});g3u.forEach(function(I3u){a3u.loadDependents(e0u,t3u,K3u,I3u.behavior);});Y69=+"1258456815";g69=-621168635;F69=2;for(var x69=1;o2QQ.g19(x69.toString(),x69.toString().length,+"28929")!==Y69;x69++){return;}if(o2QQ.g19(F69.toString(),F69.toString().length,47826)!==g69){return;}}m3u={};E3u=e0u.stx;f3u=e0u.chart;i3u=f3u.series;k3u=E3u.masterData;O3u=[];n3u={};T3u=K3u==t1u.QuoteFeed.UPDATE;S3u=K3u==t1u.QuoteFeed.PAGINATION;U3u=t1u.shallowClone(e0u);for(C3u in i3u){X0u=i3u[C3u];c3u=X0u.parameters;if(!T3u){if(!e0u.future&&X0u.moreAvailable===![])continue;if(e0u.future&&X0u.upToDate===!!{})continue;;}if(X0u.loading)continue;if(c3u.loadData===!"1")continue;if(T3u||S3u){if(!X0u.endPoints||!Object.keys(X0u.endPoints).length)continue;;}if(c3u.data&&!c3u.data.useDefaultQuoteFeed)continue;p0u=c3u.symbolObject;if(!p0u.symbol)continue;if(p0u.generator!=q3u.generator)continue;U3u.symbolObject=p0u;U3u.symbol=p0u.symbol;h3u=this.getQuoteFeed(U3u);if(q3u!=(h3u&&h3u.behavior))continue;V3u=!!1;if(!T3u){X0u.loading=!![];}for(var B3u=0;B3u<O3u.length;B3u++){if(t1u.symbolEqual(O3u[B3u],p0u)){V3u=!{};}}if(V3u){O3u.push(p0u);n3u[p0u.symbol]=X0u.endPoints;}}w3u=[];o2QQ.A9d();for(var N3u=0;N3u<O3u.length;N3u++){p0u=O3u[N3u];Y0u=t1u.shallowClone(e0u.originalState);Y0u.symbol=p0u.symbol;Y0u.symbolObject=p0u;if(Y0u.update||Y0u.future){if(!Y0u.endDate){Y0u.endDate=e0u.endDate;}Y0u.startDate=n3u[p0u.symbol].end;}else{if(!Y0u.startDate){Y0u.startDate=e0u.startDate;}Y0u.endDate=S3u&&!e0u.future?n3u[p0u.symbol].begin:e0u.endDate;Y0u.ticks=e0u.ticks;}w3u.push(Y0u);}if(!w3u.length&&T3u){Z3u={appending:e0u.appending||e0u.originalState.update};if(Z3u.appending){Z3u.appendToDate=e0u.startDate;}E3u.createDataSet(null,null,Z3u);if(!e0u.nodraw){E3u.draw();}if(x3u){x3u(null);}return;}this.multiFetch(w3u,o3u(T3u));function o3u(s3u){return function(d3u){var l3u,H3u,F3u,Q3u,G3u,J3u,y3u,W3u,b3u,u3u;l3u=null;for(var v3u=0;v3u<d3u.length;v3u++){H3u=d3u[v3u];F3u=H3u.dataCallback.error;if(!F3u&&F3u!==0){Q3u=H3u.params.symbolObject;G3u=H3u.dataCallback;J3u=G3u.quotes;y3u=G3u.moreAvailable;W3u=G3u.upToDate;b3u=[];if(E3u.getSeries){b3u=E3u.getSeries({symbolObject:Q3u});}u3u=!{};for(var r3u=0;r3u<b3u.length;r3u++){X0u=b3u[r3u];if(!s3u){if(!e0u.future){X0u.moreAvailable=y3u===!"1"?!{}:y3u||J3u.length>(H3u.params.endDate?1:"0"-0);}else{X0u.upToDate=W3u===!![]?!"":W3u||J3u.length<=(H3u.params.startDate?+"1":0);if(E3u.isHistoricalModeSet&&J3u.length<2){X0u.mostRecentForwardAttempt=new Date();}}X0u.loading=!"1";}u3u=X0u.parameters.fillGaps||u3u;}J3u=a3u.cleanup(E3u,X0u,J3u,K3u,e0u,u3u);E3u.updateChartData(J3u,f3u,{secondarySeries:Q3u.symbol,noCreateDataSet:!0,noCleanupDates:!!1,allowReplaceOHL:!!{}});if(J3u&&J3u.length&&(!l3u||l3u>J3u[0].DT)){l3u=J3u[0].DT;}}}if(d3u.length){E3u.createDataSet(null,null,{appending:e0u.originalState.update||e0u.future,appendToDate:l3u});if(!e0u.nodraw){E3u.draw();}if(K3u==t1u.QuoteFeed.INITIAL){a3u.resetRefreshInterval(q3u.refreshInterval,q3u);}}if(x3u){x3u(null);}};}};t1u.ChartEngine.Driver.prototype.cleanup=function(e3u,p3u,z3u,O9u,E9u,T9u){var a9u,Y3u,X3u,x9u,K9u;e3u.doCleanupDates(z3u,e3u.layout.interval);if(!E9u.missingBarsCreated&&z3u&&z3u.length&&e3u.cleanupGaps&&T9u!==!1){X3u=E9u.chart;if(!p3u){Y3u=X3u.defaultPlotField;}else{X3u=p3u;Y3u=p3u.parameters.symbol||p3u.id;}if(O9u==t1u.QuoteFeed.PAGINATION&&!E9u.loadMoreReplace){if(X3u.endPoints.begin&&X3u.endPoints.begin>z3u[z3u.length-"1"*1].DT){x9u=e3u.getFirstLastDataRecord(e3u.masterData,Y3u,![]);if(p3u){x9u=x9u[Y3u];}z3u.push(x9u);a9u="pop";}}else if(O9u==t1u.QuoteFeed.UPDATE){if(X3u.endPoints.end&&X3u.endPoints.end<z3u[0].DT){K9u=e3u.getFirstLastDataRecord(e3u.masterData,Y3u,!!{});if(p3u){K9u=K9u[Y3u];}z3u.unshift(K9u);a9u="shift";}}z3u=e3u.doCleanupGaps(z3u,E9u.chart,{cleanupGaps:T9u,noCleanupDates:!!{}});if(a9u){z3u[a9u]();}}o2QQ.A9d();return z3u;};o2QQ.A9d();t1u.ChartEngine.Driver.prototype.updateChart=function(n9u){var w9u,U9u,c9u,N9u,Z9u,g9u,q9u,j9u,B9u;if(this.updatingChart){return;}if(this.loadingNewChart){return;}w9u=Object.keys(this.stx.charts).length;o2QQ.l9d();U9u=0;c9u=this.stx;N9u=c9u.layout.interval;Z9u=c9u.layout.timeUnit;for(var L9u in c9u.charts){g9u=c9u.charts[L9u];if(!g9u.symbol)continue;q9u=this.makeParams(g9u.symbol,g9u.symbolObject,g9u);j9u=this.getQuoteFeed(q9u);if(g9u.masterData&&g9u.masterData.length){q9u.startDate=g9u.endPoints.end;;}q9u.update=!!"1";q9u.originalState=t1u.shallowClone(q9u);if(n9u&&n9u!=q9u.behavior){this.loadDependents(q9u,null,t1u.QuoteFeed.UPDATE,n9u);continue;}this.updatingChart=!!{};B9u=D9u(this,q9u,g9u.symbol,j9u);if(c9u.isEquationChart(q9u.symbol)){t1u.fetchEquationChart(q9u,B9u);}else if(j9u){t1u.ChartEngine.Driver.fetchData(t1u.QuoteFeed.UPDATE,j9u.engine,q9u,B9u);}}function D9u(i9u,f9u,h9u,S9u){var d99,L99,z99;o2QQ.A9d();d99=-1694698609;L99=-1686132573;z99=2;for(var B99=1;o2QQ.g19(B99.toString(),B99.toString().length,33335)!==d99;B99++){if(f9u.behavior.prefetchAction){f9u.behavior.prefetchAction("");}z99+=2;}if(o2QQ.g19(z99.toString(),z99.toString().length,36747)!==L99){if(f9u.behavior.prefetchAction){f9u.behavior.prefetchAction("updateChart");}}return function(t9u){var V9u,m9u,C9u;U9u++;V9u=f9u.chart;o2QQ.A9d();m9u=V9u.masterData;if(h9u==V9u.symbol&&N9u==c9u.layout.interval&&Z9u==c9u.layout.timeUnit&&!c9u.isHistoricalMode()){if(!t9u.error){C9u=t9u.quotes;C9u=i9u.cleanup(c9u,null,C9u,t1u.QuoteFeed.UPDATE,f9u);c9u.updateChartData(C9u,V9u,{noCreateDataSet:!!1,noCleanupDates:!!{}});V9u.attribution=t9u.attribution;}else if(S9u){S9u.engine.announceError(f9u.originalState,t9u);}}else{i9u.updatingChart=!!"";return;}if(U9u==w9u){i9u.updatingChart=![];}if(f9u.behavior.callback){f9u.behavior.callback(f9u);}i9u.loadDependents(f9u,null,t1u.QuoteFeed.UPDATE,f9u.behavior);;};}};t1u.ChartEngine.Driver.prototype.updateChartLoop=function(o9u,k9u){var M9u,A9u;if(!k9u){k9u=this.behavior;}if(k9u.intervalTimer==-1){return;}if(k9u.intervalTimer){clearInterval(k9u.intervalTimer);}M9u=function M9u(I9u,P9u){o2QQ.l9d();return function(){if(P9u.noUpdate){return;}I9u.updateChart(P9u);};};for(var R9u=0;R9u<this.quoteFeeds.length;R9u++){A9u=this.quoteFeeds[R9u].behavior;if(k9u==A9u&&!A9u.noUpdate){if(!o9u&&o9u!==0){o9u=A9u.refreshInterval;}if(o9u){k9u.intervalTimer=setInterval(M9u(this,A9u),o9u*+"1000");}}}};t1u.ChartEngine.Driver.prototype.resetRefreshInterval=function(J9u,s9u){(s9u||this.behavior).refreshInterval=J9u;this.updateChartLoop(null,s9u);o2QQ.A9d();;};t1u.ChartEngine.Driver.prototype.loadAll=function(H9u,l9u){var v9u,G9u;v9u=this;o2QQ.l9d();G9u=0;b9u()();function b9u(){o2QQ.A9d();return function(u9u){o2QQ.A9d();if(u9u){l9u(u9u);}else if(!H9u.moreAvailable&&H9u.upToDate){l9u(null);;}else if(++G9u>20){l9u("error, moreAvailable not implemented correctly in QuoteFeed");}else{H9u.loadingMore=![];v9u.checkLoadMore(H9u,!!{},!!1,b9u(),!!"1");}};}};t1u.ChartEngine.Driver.prototype.checkLoadMore=function(r9u,g7u,S7u,y9u,j7u){var F9u,n7u,U7u,d9u,Q9u,X9u,p9u,x7u,Y9u,E7u,W9u,K7u,O7u,a7u,z9u,Z7u,L7u,T7u,D7u,e9u,j4Z,q7u,c7u;o2QQ.l9d();F9u=this.stx;n7u=this;if(r9u.loadingMore||this.loadingNewChart){r9u.initialScroll=r9u.scroll;if(y9u){y9u(null);}return;}U7u=F9u.isHistoricalMode();if(!U7u){F9u.isHistoricalModeSet=!!"";}function w7u(t7u){return!t7u.endPoints.end||r9u.scroll-r9u.maxTicks+1<Q9u.bufferSize||F9u.tickFromDate(t7u.endPoints.end,r9u,null,!!{})-X9u.length+r9u.scroll-r9u.maxTicks+("2">>1709012800)<Q9u.bufferSize;}d9u=this.makeParams(r9u.symbol,r9u.symbolObject,r9u);if(F9u.currentlyImporting){if(y9u){y9u(null);}return;}Q9u=d9u.behavior;X9u=r9u.dataSet;function i7u(m7u,C7u){if(Q9u.prefetchAction){Q9u.prefetchAction("checkLoadMore");}return function(A7u){o2QQ.l9d();var R7u,k7u,o7u,J7u,M7u,P7u,I7u,s7u,H7u;R7u=m7u.stx;k7u=C7u.chart;if(C7u.symbol==k7u.symbol&&Z7u==R7u.layout.interval&&L7u==R7u.layout.timeUnit){if(!C7u.loadMore){C7u.chart.loadingMore=!{};}if(!A7u.error){if(!A7u.quotes){A7u.quotes=[];}o7u=A7u.quotes;J7u=k7u.masterData;o7u=m7u.cleanup(R7u,null,o7u,t1u.QuoteFeed.PAGINATION,C7u);if(o7u.length&&k7u.masterData&&k7u.masterData.length){if(C7u.future){M7u=o7u[0];if(M7u.DT&&M7u.DT==k7u.masterData[k7u.masterData.length-1].DT){J7u.pop();}}else{o2QQ.O9X(98);var d1X=o2QQ.x9X(2,14,18,0,2);P7u=o7u[o7u.length-d1X];if(P7u.DT&&+P7u.DT==+k7u.masterData["0">>219223712].DT){o7u.pop();}}}if(!C7u.future){if(A7u.moreAvailable){k7u.moreAvailable=!![];}else if(A7u.moreAvailable===!!0||!o7u.length){k7u.moreAvailable=!{};}else{k7u.moreAvailable=!![];}}else{if(A7u.upToDate){k7u.upToDate=!0;}else if(A7u.upToDate===!1||o7u.length>1){k7u.upToDate=![];}if(R7u.isHistoricalModeSet&&o7u.length<2){k7u.mostRecentForwardAttempt=new Date();};}m7u.tickMultiplier=o7u.length?2:m7u.tickMultiplier*2;I7u=o7u[0]?o7u[0].DT:C7u.startDate;s7u=o7u[0]?o7u[o7u.length-1].DT:C7u.endDate;if(!k7u.endPoints.begin||k7u.endPoints.begin>I7u){k7u.endPoints.begin=I7u;}if(!k7u.endPoints.end||k7u.endPoints.end<s7u){k7u.endPoints.end=s7u;}k7u.loadingMore=!!0;if(C7u.loadMoreReplace){R7u.setMasterData(o7u,k7u,{noCleanupDates:!!{}});}else if(C7u.future){R7u.updateChartData(o7u,k7u,{noCreateDataSet:!!1,noCleanupDates:!![]});}else{t1u.addMemberToMasterdata({stx:R7u,chart:k7u,data:o7u,fields:[(3749,8375)!=(2583,8210)?"*":"U"],noCleanupDates:!![]});}if(C7u.future){H7u={appending:!!1,appendToDate:o7u[0]&&o7u[0].DT};}R7u.createDataSet(undefined,undefined,H7u);if(!j7u){R7u.draw();}if(Q9u.callback){Q9u.callback(C7u);}m7u.loadDependents(C7u,y9u,t1u.QuoteFeed.PAGINATION);}else{m7u.quoteFeed.announceError(C7u.originalState,A7u);C7u.chart.loadingMore=!!"";if(y9u){y9u(A7u.error);}}}else{return;}};}o2QQ.O9X(0);var L1X=o2QQ.x9X(9,991);x7u=L1X*(Q9u.forwardPaginationRetryInterval||+"5");function B7u(V7u){return!V7u.endPoints.begin||X9u.length-r9u.scroll<Q9u.bufferSize||X9u.length-r9u.scroll-F9u.tickFromDate(V7u.endPoints.begin,r9u)<Q9u.bufferSize;}function f7u(h7u){r9u.loadingMore=!{};if(y9u){y9u(h7u);}}Y9u=!{};E7u=![];if(r9u.dataSet.length){for(var N7u in r9u.series){W9u=r9u.series[N7u];if(W9u.loading)continue;if(W9u.parameters.loadData===![])continue;p9u=!W9u.mostRecentForwardAttempt||W9u.mostRecentForwardAttempt.getTime()+x7u<Date.now();if(W9u.moreAvailable!==!{}&&B7u(W9u)){Y9u=!"";}if(p9u&&!W9u.upToDate&&w7u(W9u)){E7u=!"";}}}p9u=!r9u.mostRecentForwardAttempt||r9u.mostRecentForwardAttempt.getTime()+x7u<Date.now();K7u=(B7u(r9u)||g7u)&&r9u.moreAvailable!==!1;O7u=(w7u(r9u)||g7u)&&!r9u.upToDate&&p9u;a7u=K7u||Y9u;z9u=F9u.isHistoricalModeSet&&!a7u&&(O7u||E7u);Z7u=F9u.layout.interval;L7u=F9u.layout.timeUnit;T7u=![];D7u=Q9u.findHeadOfData||r9u.masterData&&r9u.masterData.length;if(!Q9u.noLoadMore&&D7u){if(z9u||!F9u.maxDataSetSize||r9u.dataSet.length<F9u.maxDataSetSize){if(a7u||z9u){r9u.initialScroll=r9u.scroll;r9u.loadingMore=!!{};d9u=this.makeParams(r9u.symbol,r9u.symbolObject,r9u);d9u.pagination=!![];d9u.future=z9u;if(r9u.masterData&&r9u.masterData.length){if(z9u){d9u.startDate=r9u.endPoints.end;}else{d9u.endDate=r9u.endPoints.begin;}if(z9u&&!d9u.startDate){j4Z="D";j4Z+="T";e9u=F9u.getFirstLastDataRecord(r9u.masterData,j4Z,!"");if(e9u){d9u.startDate=e9u.DT;}}else if(a7u&&!d9u.endDate){e9u=F9u.getFirstLastDataRecord(r9u.masterData,"DT");if(e9u){d9u.endDate=e9u.DT;}}}else{d9u.endDate=new Date();}d9u.originalState=t1u.shallowClone(d9u);d9u.nodraw=j7u;if(!K7u&&Y9u||!O7u&&E7u){this.loadingMore=!![];this.loadDependents(d9u,f7u,t1u.QuoteFeed.PAGINATION);if(y9u){y9u(null);}return;}if(F9u.fetchMaximumBars[F9u.layout.aggregationType]){d9u.fetchMaximumBars=!![];if(!F9u.maxMasterDataSize||Q9u.maximumTicks<F9u.maxMasterDataSize){d9u.ticks=Q9u.maximumTicks;}else{d9u.ticks=F9u.maxMasterDataSize;}}q7u=i7u(this,d9u);if(F9u.isEquationChart(d9u.symbol)){t1u.fetchEquationChart(d9u,q7u);}else{if(z9u){d9u.appending=!!{};}c7u=n7u.getQuoteFeed(d9u);if(c7u){t1u.ChartEngine.Driver.fetchData(t1u.QuoteFeed.PAGINATION,c7u.engine,d9u,q7u);}}T7u=!"";}}}if(!T7u&&y9u){y9u(null);}};t1u.ChartEngine.Driver.prototype.extendHistoricalData=function(_ref16){var W7u=_ref16.from;var u7u=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){};var G7u,d7u;var v7u=this.stx;function z7u(X7u,e7u){o2QQ.A9d();return function(_ref17){var p7u=_ref17.quotes,Y7u=_ref17.moreAvailable,E2u=_ref17.error;if(e7u.symbol!==l7u.symbol||Q7u!==b7u.interval||y7u!==b7u.timeUnit){return;;}l7u.loadingMore=![];if(E2u){return u7u(E2u);}p7u=X7u.cleanup(v7u,null,p7u,t1u.QuoteFeed.PAGINATION,e7u);if(typeof Y7u==="boolean"){l7u.moreAvailable=Y7u;}else{l7u.moreAvailable=!!p7u.length;}l7u.endPoints.begin=p7u["0"&2147483647].DT;t1u.addMemberToMasterdata({stx:v7u,chart:l7u,data:p7u,fields:[(8740,"3160"*1)>2800?"*":(![],+"209.78")],noCleanupDates:!!"1"});v7u.createDataSet();v7u.draw();};}var l7u=v7u.chart,b7u=v7u.layout;var r7u=l7u.masterData,F7u=l7u.dataSet;var Q7u=b7u.interval,y7u=b7u.timeUnit;G7u=this.makeParams(l7u.symbol,l7u.symbolObject,l7u);d7u=this.getQuoteFeed(G7u);if(l7u.loadingMore||this.loadingNewChart||v7u.currentlyImporting||!r7u.length||!d7u||v7u.maxDataSetSize&&F7u.length>v7u.maxDataSetSize){return u7u(null);}l7u.loadingMore=!0;G7u.originalState=Object.assign({},G7u);G7u.startDate=W7u;G7u.endDate=r7u[0].DT;t1u.ChartEngine.Driver.fetchData(t1u.QuoteFeed.PAGINATION,d7u.engine,G7u,z7u(this,G7u));};t1u.ChartEngine.Driver.prototype.barsToFetch=function(K2u){var b4Z,a2u,x2u,O2u;b4Z="mo";b4Z+="nth";if(!t1u.isValidNumber(this.tickMultiplier)){this.tickMultiplier=2;}a2u=this.stx.layout.interval;x2u=K2u.stx.layout.periodicity;if((a2u==b4Z||a2u=="week")&&!this.stx.dontRoll){x2u*=a2u=="week"?7:30;}O2u=K2u.stx.chart.maxTicks*x2u;return O2u*this.tickMultiplier;};t1u.ChartEngine.Driver.determineStartDate=function(T2u,q2u,c2u){return this.determineStartOrEndDate(T2u,q2u,c2u,!![]);};t1u.ChartEngine.Driver.determineStartOrEndDate=function(g2u,n2u,U2u,B2u){var j2u;if(B2u||g2u.fetchMaximumBars){j2u=g2u.startDate||n2u.previous(U2u);}else{j2u=g2u.future?n2u.next(U2u):new Date();}return j2u;};t1u.ChartEngine.Driver.prototype.makeParams=function(S2u,t2u,f2u){var L4Z,N2u,L2u,C2u,h2u,V2u,w2u,i2u,Z2u,f4Z;L4Z="w";L4Z+="e";L4Z+="e";L4Z+="k";N2u=this.stx;L2u=N2u.layout.interval;C2u=this.barsToFetch({stx:N2u});if((L2u=="month"||L2u==L4Z)&&!N2u.dontRoll){L2u="day";}h2u=this.getQuoteFeed({interval:L2u,symbol:S2u,symbolObject:t2u});V2u=h2u&&h2u.behavior;w2u=t1u.shallowClone(V2u)||{};w2u.behavior=V2u;i2u=!{};Z2u=[];if(f2u.market&&f2u.market.getSessionNames){Z2u=f2u.market.getSessionNames();}if(N2u.extendedHours){if(N2u.extendedHours.filter){i2u=!"";}else{i2u=N2u.layout.extended;Z2u=Z2u.filter(function(m2u){o2QQ.l9d();return m2u.enabled||N2u.layout.marketSessions[m2u.name];});}}else{Z2u=Z2u.filter(function(k2u){o2QQ.l9d();return k2u.enabled;});}for(var D2u=0;D2u<Z2u.length;D2u++){Z2u[D2u]=Z2u[D2u].name;;}t1u.extend(w2u,{stx:N2u,symbol:S2u,symbolObject:t2u,chart:f2u,interval:L2u,extended:i2u,period:1,ticks:C2u,additionalSessions:Z2u,quoteDriverID:this.id},!!{});if(!w2u.symbolObject){w2u.symbolObject={symbol:S2u};}if(!isNaN(w2u.interval)){f4Z="min";f4Z+="ute";w2u.period=parseInt(w2u.interval,10);w2u.interval=N2u.layout.timeUnit;if(!w2u.interval){w2u.interval=f4Z;}}return w2u;};t1u.ChartEngine.Driver.prototype.newChart=function(M2u,I2u){o2QQ.l9d();var o2u,J2u,l2u,v2u,P2u,A2u,s2u,R2u,H2u;o2u=this.stx;J2u=M2u.symbol;l2u=o2u.layout.interval;v2u=o2u.layout.timeUnit;P2u=M2u.chart;P2u.moreAvailable=null;P2u.upToDate=null;P2u.loadingMore=!{};P2u.attribution=null;function G2u(b2u,u2u){o2QQ.A9d();if(R2u.prefetchAction){R2u.prefetchAction("newChart");}return function(F2u){var r2u,d2u,W2u,Q2u;r2u=u2u.chart;d2u=F2u.quotes;W2u=!{};if(J2u==r2u.symbol&&l2u==o2u.layout.interval&&v2u==o2u.layout.timeUnit){b2u.loadingNewChart=!1;if(!F2u.error){d2u=b2u.cleanup(o2u,null,d2u,t1u.QuoteFeed.INITIAL,u2u);o2u.setMasterData(d2u,r2u,{noCleanupDates:!!"1"});r2u.endPoints={};r2u.endPoints.begin=d2u[0]?d2u["0"*1].DT:u2u.startDate;r2u.endPoints.end=d2u[0]?d2u[d2u.length-1].DT:u2u.endDate;if(!d2u){r2u.moreAvailable=![];r2u.upToDate=!!{};}else{r2u.moreAvailable=F2u.moreAvailable===!"1"?!{}:!![];r2u.upToDate=F2u.upToDate;}r2u.attribution=F2u.attribution;if(M2u.initializeChart){o2u.initializeChart();}o2u.createDataSet();W2u=!!"1";}else{s2u.engine.announceError(u2u.originalState,F2u);}}else{if(I2u){I2u("orphaned");}return;}for(var y2u in r2u.series){r2u.series[y2u].endPoints={};r2u.series[y2u].moreAvailable=null;r2u.series[y2u].upToDate=null;}Q2u=r2u.masterData;o2QQ.l9d();if(Q2u&&Q2u.length){u2u.startDate=Q2u[0].DT;u2u.endDate=Q2u[Q2u.length-1].DT;}if(R2u.callback){R2u.callback(u2u);}b2u.loadDependents(u2u,function(){if(W2u&&!u2u.nodraw){b2u.stx.home();}o2QQ.A9d();if(I2u){I2u(F2u.error);}b2u.stx.dispatch("newChart",{stx:b2u.stx,symbol:b2u.stx.chart.symbol,symbolObject:b2u.stx.chart.symbolObject,moreAvailable:b2u.stx.chart.moreAvailable,upToDate:b2u.stx.chart.upToDate,quoteDriver:b2u});b2u.resetRefreshInterval(R2u.refreshInterval,R2u);},t1u.QuoteFeed.INITIAL);};}A2u=this.makeParams(J2u,M2u.symbolObject,P2u);t1u.extend(A2u,M2u,!"");s2u=this.getQuoteFeed(A2u);R2u=A2u.behavior;if(o2u.fetchMaximumBars[o2u.layout.aggregationType]||M2u.fetchMaximumBars){if(!o2u.maxMasterDataSize||R2u.maximumTicks<o2u.maxMasterDataSize){A2u.ticks=R2u.maximumTicks;}else{A2u.ticks=o2u.maxMasterDataSize;}A2u.fetchMaximumBars=!0;}this.loadingNewChart=!![];this.updatingChart=![];A2u.originalState=t1u.shallowClone(A2u);H2u=G2u(this,A2u);if(this.stx.isEquationChart(A2u.symbol)){t1u.fetchEquationChart(A2u,H2u);}else if(s2u){t1u.ChartEngine.Driver.fetchData(t1u.QuoteFeed.INITIAL,s2u.engine,A2u,H2u);}};t1u.QuoteFeed.INITIAL=1;t1u.QuoteFeed.UPDATE=2;t1u.QuoteFeed.PAGINATION=3;t1u.QuoteFeed.SERIES=4;t1u.ChartEngine.Driver.fetchData=function(p2u,e2u,z2u,X2u){if(!z2u.symbol){return X2u({quotes:[]});}o2QQ.l9d();if(e2u.v2QuoteFeed){if(typeof e2u.subscribe!=="function"){t1u.ChartEngine.Driver.fetchDataInContext(p2u,e2u,z2u,X2u);}else{t1u.ChartEngine.Driver.fetchDataInContext(p2u,e2u,z2u,function(Y2u){if(!Y2u.error){this.checkSubscriptions(z2u.stx);}o2QQ.A9d();X2u(Y2u);}.bind(e2u));}}else{z2u.stx.convertToDataZone(z2u.startDate);z2u.stx.convertToDataZone(z2u.endDate);e2u.fetch(z2u,X2u);}};t1u.ChartEngine.Driver.fetchDataInContext=function(O5u,x5u,E5u,c5u){var Q4Z,a4Z,g5u,j5u,T5u,K5u,a5u,W4Z,q5u,n5u,U5u,M2K,B5u;Q4Z="f";Q4Z+="u";Q4Z+="nctio";Q4Z+="n";a4Z="functi";a4Z+="on";a5u=E5u.stx;if(!a5u.chart.market.newIterator){W4Z="quoteFeed featu";W4Z+="re requires first activating m";W4Z+="arket";W4Z+=" feature.";console.error(W4Z);return;}if(O5u===t1u.QuoteFeed.SERIES){E5u.series=!0;O5u=t1u.QuoteFeed.INITIAL;if(E5u.endDate&&!E5u.startDate||E5u.future){O5u=t1u.QuoteFeed.PAGINATION;}else if(E5u.startDate&&!E5u.endDate){O5u=t1u.QuoteFeed.UPDATE;}}q5u=Math.min(E5u.ticks,E5u.maximumTicks);if(x5u.maxTicks){q5u=Math.min(q5u,x5u.maxTicks);}n5u=E5u.symbolObject.masterSymbol||E5u.symbol;switch(O5u){case t1u.QuoteFeed.UPDATE:if(a5u.isHistoricalModeSet){a5u.quoteDriver.updatingChart=!"1";return;}if(E5u.startDate){U5u=E5u.startDate;}else{U5u=new Date();U5u.setHours(0,0,0,0);}if(_typeof(x5u.fetchUpdateData)===a4Z){x5u.fetchUpdateData(n5u,a5u.convertToDataZone(U5u),E5u,c5u);}break;case t1u.QuoteFeed.INITIAL:K5u=E5u.endDate||new Date();g5u={begin:K5u,interval:E5u.interval,periodicity:E5u.interval=="tick"?a5u.chart.xAxis.futureTicksInterval:E5u.period,outZone:a5u.dataZone};j5u=a5u.chart.market.newIterator(g5u);T5u=t1u.ChartEngine.Driver.determineStartDate(E5u,j5u,q5u);if(E5u.endDate){K5u=E5u.endDate;}if(_typeof(x5u.fetchInitialData)===Q4Z){x5u.fetchInitialData(n5u,T5u,a5u.convertToDataZone(K5u),E5u,c5u);}break;case t1u.QuoteFeed.PAGINATION:M2K="tic";M2K+="k";g5u={begin:E5u.endDate||E5u.startDate,interval:E5u.interval,periodicity:E5u.interval==M2K?a5u.chart.xAxis.futureTicksInterval:E5u.period,outZone:a5u.dataZone};j5u=a5u.chart.market.newIterator(g5u);B5u=t1u.ChartEngine.Driver.determineStartOrEndDate(E5u,j5u,q5u,!E5u.future);T5u=E5u.startDate||B5u;K5u=E5u.endDate||B5u;if(!E5u.startDate){E5u.stx.convertToDataZone(K5u);}else{E5u.stx.convertToDataZone(T5u);}if(typeof x5u.fetchPaginationData==="function"){if(a5u.maxMasterDataSize&&a5u.maxMasterDataSize<=a5u.masterData.length){return;}x5u.fetchPaginationData(n5u,T5u,K5u,E5u,function(w5u){o2QQ.l9d();if(K5u>=Date.now()){a5u.isHistoricalModeSet=!"1";}if(c5u){c5u(w5u);}});}break;default:console.error("Illegal fetchData constant");}};};I54=function I54(Z5u){var N5u;N5u=typeof _CIQ!=="undefined"?_CIQ:Z5u.CIQ;N5u.ChartEngine.prototype.addSeries=function(f5u,L5u,C5u){var o5u,H5u,V5u,D5u,h5u,m5u,k5u,A5u,R5u,i5u,M5u,t5u,l5u,v5u,s5u,S5u,J5u;o5u=this.runPrepend("addSeries",arguments);if(o5u){return o5u;}H5u=f5u?f5u:null;V5u=f5u;if(!f5u){f5u=N5u.uniqueID();}if(L5u&&L5u.panel===!0){L5u.panel=f5u;}D5u={parameters:L5u?N5u.clone(L5u):{},yValueCache:[],display:H5u,id:f5u,loading:L5u?L5u.loadData!==![]:!!{}};function P5u(b5u,F5u){var E2K,d5u,u5u,G5u,r5u;E2K="L";o2QQ.l9d();E2K+="in";E2K+="e";E2K+="s";d5u=L5u.renderer||E2K;u5u=L5u.name||f5u;if(L5u.yAxis&&!(L5u.yAxis instanceof N5u.ChartEngine.YAxis)&&!M5u){L5u.yAxis.name=u5u;}if(!L5u.renderer&&!L5u.name&&!L5u.color&&!L5u.chartType){return;}G5u=b5u.getSeriesRenderer(u5u);if(!G5u){r5u={name:u5u,overChart:L5u.overChart!==!{},useChartLegend:!!{}};if(L5u.chartType){G5u=N5u.Renderer.produce(L5u.chartType,N5u.extend({highlightable:L5u.highlightable,dependentOf:L5u.dependentOf,panel:L5u.panel,yAxis:L5u.yAxis,baseline:L5u.baseline},r5u));}else{N5u.ensureDefaults(L5u,r5u);G5u=new N5u.Renderer[d5u]({params:L5u});}if(!G5u){return;}b5u.setSeriesRenderer(G5u);}G5u.attachSeries(f5u,L5u);if(L5u.loadData!==!"1"){G5u.ready();}b5u.layout.symbols=b5u.getSymbols({"include-parameters":!![],"exclude-studies":!0});b5u.changeOccurred("layout");}D5u.parameters.yAxis=L5u&&L5u.yAxis;L5u=D5u.parameters;if(L5u.symbol){V5u=L5u.symbol;}if(L5u.isComparison){L5u.shareYAxis=!!{};}if(L5u.yAxis&&!(L5u.yAxis instanceof N5u.ChartEngine.YAxis)){L5u.yAxis=new N5u.ChartEngine.YAxis(L5u.yAxis);;}N5u.ensureDefaults(L5u,{chartName:this.chart.name,symbolObject:{symbol:V5u},panel:this.chart.panel.name,fillGaps:!!0,action:"add-series"});if("display"in L5u){D5u.display=L5u.display;}h5u=this.charts[L5u.chartName];m5u=L5u.symbolObject;V5u=L5u.symbol=m5u.symbol;if(!D5u.display){D5u.display=V5u||L5u.field;}D5u.endPoints={};if(!L5u.gapDisplayStyle&&L5u.gapDisplayStyle!==!1){L5u.gapDisplayStyle=L5u.gaps;}if(L5u.isComparison){if(L5u.gapDisplayStyle===undefined){L5u.gapDisplayStyle="transparent";}}k5u=this.getSeries({symbolObject:m5u,chart:h5u,includeMaster:!![]});A5u=L5u.panel;if(!this.panels[A5u]){R5u=L5u.yAxis||new N5u.ChartEngine.YAxis();R5u.name=f5u;this.createPanel(f5u,A5u,null,null,R5u);if(!this.preferences.dragging||!this.preferences.dragging.series){L5u.highlightable=!1;}}else{if(!L5u.yAxis&&!L5u.shareYAxis){L5u.yAxis=new N5u.ChartEngine.YAxis({name:f5u,position:"none"});}}h5u.series[f5u]=D5u;i5u=this;M5u=this.currentlyImporting;if(L5u.isComparison&&h5u.forcePercentComparison&&L5u.panel==h5u.panel.name&&(!L5u.yAxis||L5u.yAxis==h5u.yAxis)){this.setChartScale("percent");}t5u=h5u.masterData;function I5u(Q5u){return function(y5u){var h2K,W5u,z5u;h2K="s";h2K+="ymbolChange";if(!y5u.error){W5u=y5u.quotes;z5u=L5u.fillGaps;if(!i5u.cleanupGaps){z5u=![];}W5u=i5u.doCleanupGaps(W5u,i5u.chart,{cleanupGaps:z5u});i5u.updateChartData(W5u,i5u.chart,{secondarySeries:V5u,noCreateDataSet:!![],noCleanupDates:!!1,allowReplaceOHL:!!{}});D5u.loading=!"1";D5u.moreAvailable=y5u.moreAvailable;D5u.upToDate=y5u.upToDate;P5u(i5u,D5u);}if(L5u.action!==null&&!k5u.length){i5u.dispatch(M5u?"symbolImport":h2K,{stx:i5u,symbol:Q5u.symbol,symbolObject:Q5u.symbolObject,action:L5u.action,id:D5u.id,parameters:L5u});}if(C5u){C5u.call(i5u,y5u.error,D5u);}};}if(!t5u){t5u=h5u.masterData=this.masterData=[];}l5u=t5u.length;if(L5u.data&&!L5u.data.useDefaultQuoteFeed){v5u={symbol:V5u,symbolObject:m5u,action:L5u.action};I5u(v5u)({quotes:L5u.data});}else if(k5u.length){D5u.endPoints=k5u[0].endPoints;D5u.loading=k5u[0].loading;P5u(this,D5u);if(C5u){setTimeout(function(){var Q17=o2QQ;var h99,y99,i99;Q17.I9X(6);h99=Q17.x9X(0,"1552374838");y99=2040760460;Q17.A9d();i99=2;for(var t99=1;Q17.Y19(t99.toString(),t99.toString().length,18326)!==h99;t99++){C5u.call(i5u,1,D5u);i99+=2;}if(Q17.Y19(i99.toString(),i99.toString().length,57014)!==y99){C5u.call(i5u,null,D5u);}},0);}}else if(this.quoteDriver&&L5u.loadData!==![]){s5u=this.quoteDriver;S5u=s5u.makeParams(V5u,m5u,h5u);if(l5u){S5u.startDate=t5u[0].DT;S5u.endDate=this.isHistoricalMode()?t5u[t5u.length-1].DT:new Date();}if(S5u.stx.isEquationChart(S5u.symbol)){N5u.fetchEquationChart(S5u,I5u(S5u));}else{J5u=s5u.getQuoteFeed(S5u);if(J5u){N5u.ChartEngine.Driver.fetchData(4,J5u.engine,S5u,I5u(S5u));}}}else{P5u(this,D5u);if(C5u){C5u.call(this,null,D5u);}}this.runAppend("addSeries",arguments);return D5u;};N5u.ChartEngine.prototype.getSeries=function(e5u){var Y5u,E4u,X5u,p5u,a4u;Y5u=e5u.chart?e5u.chart:this.chart;E4u=Y5u.series;X5u=e5u.symbolObject;if(!X5u){X5u={symbol:e5u.symbol};}p5u=[];for(var x4u in E4u){a4u=E4u[x4u];if(N5u.symbolEqual(X5u,a4u.parameters.symbolObject)){p5u.push(a4u);}}if(e5u.includeMaster){if(N5u.symbolEqual(X5u,Y5u.symbolObject)){p5u.push({});}}return p5u;};N5u.ChartEngine.prototype.modifySeries=function(L4u,T4u,V4u){var y2K,S2K,U2K,O4u,g4u,q4u,K4u,c4u,n4u,U4u,D4u,j4u,f4u,h4u,B4u,l19,r19,K19,i4u,Z4u;y2K="la";y2K+="y";y2K+="o";y2K+="ut";S2K="st";S2K+="ring";U2K="modifySeri";U2K+="es";if(this.runPrepend(U2K,arguments)){return;}if(!T4u){return;}if(_typeof(L4u)===S2K){q4u=T4u.chartName?this.charts[T4u.chartName]:this.chart;g4u=L4u;O4u=q4u.series[g4u];}else{O4u=L4u;g4u=O4u.id;q4u=this.charts[O4u.parameters.chartName];}if(!O4u){return;}N5u.extend(O4u.parameters,T4u,!![]);this.getRendererFromSeries(g4u).modifyRenderer(T4u);K4u=O4u.parameters;for(var S4u in q4u.seriesRenderers){n4u=q4u.seriesRenderers[S4u];U4u=n4u.params;D4u=n4u.seriesParams;for(var w4u=0;w4u<D4u.length;++w4u){j4u=D4u[w4u];f4u=this.panels[j4u.panel];h4u=f4u&&f4u.yAxis.name;if(j4u.id===O4u.id){if(K4u.panel===!!{}){K4u.panel=K4u.dependentOf||K4u.name;}U4u.panel=K4u.panel;if(T4u.yAxis){if(!(T4u.yAxis instanceof N5u.ChartEngine.YAxis)){T4u.yAxis=new N5u.ChartEngine.YAxis(T4u.yAxis);;}U4u.yAxis=T4u.yAxis;}if(K4u.panel!=j4u.panel&&U4u.name==h4u){this.electNewPanelOwner(j4u.panel);;}else{B4u=this.getYAxisByName(K4u.panel,U4u.name);if(B4u&&K4u.yAxis&&B4u.name!==K4u.yAxis.name){B4u.name=this.electNewYAxisOwner(B4u);}}if(!K4u.field){K4u.field=null;}n4u.attachSeries(g4u,N5u.ensureDefaults(K4u,j4u));if(!K4u.field){K4u.field=K4u.subField;}delete K4u.subField;if(K4u.isComparison&&q4u.forcePercentComparison&&K4u.panel==q4u.panel.name&&(!O4u.parameters.yAxis||K4u.yAxis.name==q4u.yAxis.name)){this.setChartScale("percent");}c4u=n4u;break;}}}this.changeOccurred(y2K);N5u.getFn("Drawing.updateSource")(this,O4u.parameters.symbol||g4u,null,O4u.parameters.panel);this.runAppend("modifySeries",arguments);if(V4u!==!!1){l19=-1203440976;r19=-+"333794271";K19=2;for(var O19=1;o2QQ.Y19(O19.toString(),O19.toString().length,20644)!==l19;O19++){i4u=c4u.getDependents(this);K19+=2;}if(o2QQ.g19(K19.toString(),K19.toString().length,30728)!==r19){i4u=c4u.getDependents(this);}for(var N4u=0;N4u<i4u.length;N4u++){this.modifySeries(i4u[N4u].params.name,{panel:c4u.params.panel,yAxis:O4u.parameters.yAxis},!!"1");}Z4u=q4u.seriesRenderers[c4u.params.dependentOf];if(Z4u){if(Z4u.params.yAxis!=O4u.parameters.yAxis||Z4u.params.panel!=c4u.params.panel){this.modifySeries(c4u.params.dependentOf,{panel:c4u.params.panel,yAxis:O4u.parameters.yAxis},!!{});}}}this.draw();return O4u;};N5u.ChartEngine.prototype.deleteSeries=function(A4u,t4u,m4u){var v2K,i2K,P4u,C4u,k4u,I4u,o4u,R4u,M4u;v2K="del";v2K+="eteSeries";i2K="symbo";i2K+="l";i2K+="C";i2K+="hange";if(this.runPrepend("deleteSeries",arguments)){return;}m4u=m4u?m4u:{};P4u=m4u.action?m4u.action:"remove-series";if(_typeof(A4u)==="object"){C4u=A4u.id;t4u=t4u||this.charts[A4u.parameters.chartName];}else{C4u=A4u;t4u=t4u||this.chart;}k4u=t4u.series[C4u];if(!k4u){return;}I4u=k4u.parameters.loadData;o4u=k4u.parameters.symbolObject;delete t4u.series[C4u];o2QQ.A9d();R4u=this.getSeries({symbolObject:o4u,includeMaster:!!"1"});if(I4u===!"1"){R4u.push(C4u);}if(!R4u.length){this.cleanMasterData(o4u,t4u);}M4u=this.panels[k4u.parameters.panel];if(M4u){this.checkForEmptyPanel(M4u);}this.createDataSet();if(!R4u.length){this.dispatch(this.currentlyImporting?"symbolImport":i2K,{stx:this,symbol:o4u.symbol,symbolObject:o4u,id:C4u,action:P4u});}if(this.quoteDriver){this.quoteDriver.updateSubscriptions();}this.runAppend(v2K,arguments);};N5u.ChartEngine.prototype.removeSeries=function(v4u,J4u){var H4u,u4u,s4u,G4u,d4u,F4u,l4u;if(this.runPrepend("removeSeries",arguments)){return;}u4u=![];if(_typeof(v4u)==="object"){H4u=v4u.id;J4u=J4u||this.charts[v4u.parameters.chartName];}else{H4u=v4u;J4u=J4u||this.chart;}for(var r4u in J4u.seriesRenderers){s4u=J4u.seriesRenderers[r4u];G4u=this.panels[s4u.params.panel];d4u=G4u&&G4u.yAxis.name;for(var b4u=s4u.seriesParams.length-1;b4u>=0;b4u--){F4u=s4u.seriesParams[b4u];if(F4u.id===H4u){s4u.removeSeries(H4u);if(s4u.seriesParams.length<+"1"){this.removeSeriesRenderer(s4u);if(s4u.params.name==d4u){this.electNewPanelOwner(s4u.params.panel);}else{if(!this.checkForEmptyPanel(s4u.params.panel)){l4u=this.getYAxisByName(G4u,s4u.params.name);if(l4u){l4u.name=l4u.studies[0]||l4u.renderers[1];}}}}u4u=!!{};}}}if(!u4u){this.deleteSeries(H4u,J4u);}this.resetDynamicYAxis();this.draw();this.resizeChart();o2QQ.A9d();this.runAppend("removeSeries",arguments);};N5u.Comparison=N5u.Comparison||function(){};N5u.Comparison.initialPrice=+"100";N5u.Comparison.getInitialPrice=function(Q4u){var y4u,z4u,W4u;if(Q4u.initialComparisonPrice){return Q4u.initialComparisonPrice;}Q4u.initialComparisonPrice=100;y4u=N5u.Comparison.initialPrice;if(typeof y4u=="number"){Q4u.initialComparisonPrice=y4u;}if(typeof y4u=="string"){if(Q4u.series[y4u]||y4u===""){z4u="Close";if(Q4u.defaultPlotField){if(!Q4u.highLowBars){z4u=Q4u.defaultPlotField;}}for(var e4u=Q4u.dataSet.length-Q4u.scroll-1;e4u<Q4u.dataSet.length;e4u++){W4u=Q4u.dataSet[e4u];if(W4u){if(W4u[y4u]&&W4u[y4u][z4u]){Q4u.initialComparisonPrice=W4u[y4u][z4u];break;}else if(y4u===""&&W4u[z4u]){Q4u.initialComparisonPrice=W4u[z4u];break;}}}}}o2QQ.A9d();return Q4u.initialComparisonPrice;};N5u.Comparison.priceToPercent=function(Y4u,E8u,p4u){var j2d=o2QQ;var X4u;X4u=N5u.Comparison.baseline||p4u;j2d.O9X(99);var z1X=j2d.x9X(120,19,6,2066);j2d.O9X(6);var c1X=j2d.L9X(13,10013);j2d.O9X(6);var A1X=j2d.x9X(150000,160000);return Math.round((p4u-X4u)/X4u*z1X*c1X)/A1X;};N5u.Comparison.percentToPrice=function(K8u,O8u,x8u){o2QQ.l9d();var a8u;a8u=N5u.Comparison.baseline||"1">>1776900960;o2QQ.I9X(100);return o2QQ.L9X(100,a8u,1,x8u);};N5u.Comparison.priceToRelative=function(j8u,g8u,T8u){var q8u,c8u;q8u=N5u.Comparison.baseline||T8u;c8u=N5u.Comparison.getInitialPrice(g8u);o2QQ.I9X(101);o2QQ.A9d();return o2QQ.L9X(T8u,q8u,c8u);};N5u.Comparison.relativeToPrice=function(N8u,B8u,w8u){var n8u,U8u;o2QQ.A9d();n8u=N5u.Comparison.baseline||1;U8u=N5u.Comparison.getInitialPrice(B8u);o2QQ.O9X(101);return o2QQ.x9X(w8u,U8u,n8u);};N5u.Comparison.createComparisonSegmentInner=function(S8u,D8u){var M2d=o2QQ;var j2K,t2K,R8u,Z8u,I8u,u8u,s8u,f8u,r8u,M8u,J8u,V8u,w2K,H8u,i8u,l8u,v8u,o8u,L8u,P8u,t8u,G8u,b8u,A8u,m8u,Q8u,y8u;j2K="L";j2K+="o";j2K+="w";t2K="Hi";t2K+="g";t2K+="h";R8u=[];for(Z8u in D8u.series){s8u=D8u.series[Z8u].parameters;if(s8u.isComparison){R8u.push(s8u.symbol);}}f8u=["Close","Open",t2K,j2K,"iqPrevClose"];r8u=S8u.chart.highLowBars;if(D8u.defaultPlotField&&!r8u){f8u.unshift(D8u.defaultPlotField);}M8u=f8u[0];J8u=S8u.layout.studies;for(var d8u in J8u){V8u=J8u[d8u];I8u=S8u.panels[V8u.panel];u8u=V8u.getYAxis(S8u);if(!I8u||I8u.yAxis!=u8u)continue;for(Z8u in V8u.outputMap){f8u.push(Z8u);}for(var k8u=0;k8u<=+"2";k8u++){w2K="_";w2K+="hi";w2K+="s";w2K+="t";f8u.push(V8u.name+w2K+(k8u?k8u:""));}if(V8u.referenceOutput){f8u.push(V8u.referenceOutput+" "+V8u.name);}}for(var F8u in S8u.plugins){H8u=S8u.plugins[F8u];if(!H8u.transformOutputs)continue;for(Z8u in H8u.transformOutputs){f8u.push(Z8u);}}D8u.initialComparisonPrice=null;D8u.dataSegment=[];i8u=null;M2d.O9X(0);var B1X=M2d.x9X(1,0);l8u=D8u.dataSet.length-D8u.scroll-B1X;if(S8u.startComparisonsAtFirstVisibleBar){l8u+=1;}M2d.I9X(102);var n1X=M2d.x9X(19,20,1462910683,1462910683,1462911048);v8u=D8u.maxTicks+("3">>n1X);for(var h8u=0;h8u<=v8u;h8u++){if(h8u==v8u){h8u=-1;}M2d.I9X(0);o8u=M2d.x9X(h8u,l8u);if(o8u<D8u.dataSet.length&&o8u>=0){L8u=D8u.dataSet[o8u];P8u=L8u[M8u];if(!i8u){if(P8u===0||P8u===null){if(h8u<0)break;else continue;;}i8u=N5u.clone(L8u);}if(!L8u.transform){L8u.transform={cache:{},DT:L8u.DT,Date:L8u.Date};}if(!N5u.Comparison.baseline&&P8u){i8u=N5u.clone(L8u);}N5u.Comparison.baseline=i8u[M8u];for(t8u=0;t8u<f8u.length;t8u++){Z8u=f8u[t8u];if(L8u[Z8u]||L8u[Z8u]===0){L8u.transform[Z8u]=D8u.transformFunc(S8u,D8u,L8u[Z8u]);}}for(t8u=0;t8u<R8u.length;t8u++){Z8u=R8u[t8u];G8u=D8u.series[Z8u];if(h8u==-1&&G8u&&G8u.parameters.isComparison){delete L8u.transform[Z8u];continue;}b8u=L8u[Z8u];for(var C8u=+"0";b8u&&C8u<f8u.length;C8u++){A8u=b8u[f8u[C8u]];if(A8u||A8u===+"0"){m8u=i8u[Z8u]&&i8u[Z8u][f8u[0]];if(!m8u&&m8u!==0){if(!i8u[Z8u]){i8u[Z8u]={};}i8u[Z8u][f8u[C8u]]=m8u=A8u*N5u.Comparison.baseline/L8u[M8u];}if(m8u!==0){Q8u=N5u.Comparison.baseline||1;M2d.O9X(103);y8u=M2d.L9X(m8u,Q8u,A8u);if(!L8u.transform[Z8u]){L8u.transform[Z8u]={};}L8u.transform[Z8u][f8u[C8u]]=D8u.transformFunc(S8u,D8u,y8u);}}}}D8u.dataSegment.push(L8u);}else if(o8u<("0"&2147483647)){D8u.dataSegment.push(null);}if(h8u<0)break;;}};N5u.Comparison.priceFormat=function(X8u,p8u,W8u){var e2d=o2QQ;var z8u,e8u;if(W8u===null||typeof W8u=="undefined"||isNaN(W8u)){return"";}z8u=p8u.yAxis.priceTick;e8u=X8u.internationalizer;if(e8u){if(z8u>=5){e2d.I9X(7);W8u=e8u.percent.format(e2d.x9X(W8u,100));}else if(z8u>=0.5){e2d.I9X(7);W8u=e8u.percent1.format(e2d.x9X(W8u,100));}else if(z8u>=0.05){e2d.I9X(7);W8u=e8u.percent2.format(e2d.L9X(W8u,100));}else if(z8u>="0.005"-0){e2d.O9X(27);W8u=e8u.percent3.format(e2d.L9X(W8u,"100"));}else{e2d.O9X(104);W8u=e8u.percent4.format(e2d.x9X(1489177376,"100",W8u));}}else{if(z8u>=5){e2d.O9X(105);var N1X=e2d.L9X(15,2,8,3872);e2d.O9X(106);var P1X=e2d.L9X(1353928,9450,18,16,9);e2d.O9X(107);var G1X=e2d.x9X(8910,8931,8931);e2d.I9X(9);var D1X=e2d.L9X(15,14);e2d.I9X(108);var J1X=e2d.x9X(7,6,476,5703,9);W8u=W8u.toFixed("0"|0)+(N1X!=+"2789"?(P1X,958.51)<(+"1300",+"5600")?G1X>("424.71"*D1X,85.53)?"%":(J1X,"c"):433.29:!!"");}else if(z8u>=0.5){e2d.O9X(9);var f1X=e2d.L9X(10,9);W8u=W8u.toFixed(f1X)+"%";}else if(z8u>=0.05){e2d.I9X(95);var H1X=e2d.L9X(483058806,69008401,10);e2d.O9X(95);var s1X=e2d.x9X(616,122,12);e2d.O9X(109);var q1X=e2d.x9X(1,17,425,850,9332);e2d.I9X(0);var a1X=e2d.x9X(2820,1410);e2d.O9X(110);var Q1X=e2d.x9X(5219,104341,3,16,7);W8u=W8u.toFixed("2"-0)+(714.69=="7289">>H1X?(s1X,q1X)>(453.4,a1X)?("G",685.31):(Q1X,!!{}):"%");}else if(z8u>=0.005){e2d.O9X(0);var C1X=e2d.L9X(7,122);e2d.O9X(6);var m1X=e2d.x9X(64185,68464);e2d.I9X(30);var Z1X=e2d.L9X(9859,20,187314);e2d.I9X(111);var M6X=e2d.L9X(631,1,628,69,10);W8u=W8u.toFixed("3"&2147483647)+(("1427"|C1X)!==(m1X,Z1X)?"%":M6X);}else{e2d.I9X(112);var E6X=e2d.L9X(1,29,18,8);e2d.O9X(46);var h6X=e2d.x9X(23597,1,15,2145);e2d.I9X(52);var U6X=e2d.L9X(22375,62650,2);W8u=W8u.toFixed(E6X)+(("765"-0,h6X)<=(+"405",U6X)?"%":+"1.93e+3");}}e2d.l9d();if(parseFloat(W8u)===+"0"&&W8u.charAt(0)==(("9291"^0)===(3330,94)?(19.41,0x11e4):(7180,8290)!==580.51?"-":0x1b0d)){W8u=W8u.substring(1);}return W8u;};N5u.ChartEngine.prototype.setComparison=function(K6w,E6w,O6w){var e2K,o2K,Y8u,x6w;e2K="str";e2K+="i";e2K+="n";e2K+="g";if(!E6w){E6w=this.chart;}if(_typeof(E6w)==e2K){E6w=this.charts[E6w];}if(O6w||O6w===""){N5u.Comparison.initialPrice=O6w;}if(K6w===!!"1"){o2K="pe";o2K+="rc";o2K+="en";o2K+="t";if(E6w.isComparison){return;}K6w=o2K;}this.resetDynamicYAxis();Y8u=E6w.panel.yAxis;x6w=Y8u.priceFormatter==N5u.Comparison.priceFormat;switch(K6w){case"relative":this.setTransform(E6w,N5u.Comparison.priceToRelative,N5u.Comparison.relativeToPrice);if(x6w){Y8u.priceFormatter=Y8u.originalPriceFormatter?Y8u.originalPriceFormatter.func:null;Y8u.originalPriceFormatter=null;}Y8u.whichSet="dataSegment";E6w.isComparison=!!{};break;case"percent":this.setTransform(E6w,N5u.Comparison.priceToPercent,N5u.Comparison.percentToPrice);if(!x6w){Y8u.originalPriceFormatter={func:Y8u.priceFormatter};Y8u.priceFormatter=N5u.Comparison.priceFormat;}Y8u.whichSet="dataSegment";E6w.isComparison=!!{};break;default:this.unsetTransform(E6w);if(x6w){Y8u.priceFormatter=Y8u.originalPriceFormatter?Y8u.originalPriceFormatter.func:null;Y8u.originalPriceFormatter=null;}Y8u.whichSet="dataSet";E6w.isComparison=!{};break;}};N5u.ChartEngine.prototype.setChartScale=function(T6w){var V2K,q6w,c6w;V2K="layo";V2K+="u";V2K+="t";q6w=this.chart;c6w={percent:!![],relative:!!{}};if(!T6w){T6w="linear";}o2QQ.A9d();if(c6w[T6w]){this.setComparison(T6w,q6w,N5u.Comparison.initialPrice);}else if(c6w[this.layout.chartScale]){this.setComparison(![],q6w);}this.layout.chartScale=T6w;if(q6w.canvas){this.draw();}this.changeOccurred(V2K);};};s54=function s54(L6w){var B6w,w6w;B6w=typeof _CIQ!=="undefined"?_CIQ:L6w.CIQ;function Z6w(Q6w,J6w,l6w){var z6w,y6w,G6w,g2K,W6w,d6w,H6w,r6w,s6w,F6w;if(!J6w){J6w={};}z6w=[];y6w="ciq-no-share";G6w=document.querySelector("body");if(J6w.hide&&J6w.hide instanceof Array){g2K=",";g2K+=" ";W6w=J6w.hide.join(g2K);d6w=document.querySelectorAll(W6w);for(var u6w=0;u6w<d6w.length;u6w++){d6w[u6w].classList.add(y6w);}}G6w.classList.add("sharing");H6w=Q6w.chart.container.getElementsByTagName("svg");r6w=[];s6w=0;for(;s6w<H6w.length;s6w++){F6w=H6w[s6w];r6w.push(F6w.innerHTML);N6w(F6w);}w6w(Q6w.chart.container,{allowTaint:!!"",logging:!"1",width:J6w.width||null,height:J6w.height||null,backgroundColor:J6w.background||null,useCORS:!!1}).then(function(X6w){var F2K;if(l6w){F2K="im";F2K+="age/pn";F2K+="g";l6w(null,J6w.data?X6w.toDataURL(F2K):X6w);}for(s6w=0;s6w<H6w.length;s6w++){H6w[s6w].innerHTML=r6w[s6w];}G6w.classList.remove("sharing");})["catch"](function(p6w){o2QQ.A9d();if(l6w){l6w(p6w);}for(s6w=0;s6w<H6w.length;s6w++){H6w[s6w].innerHTML=r6w[s6w];}G6w.classList.remove("sharing");});}function V6w(){o2QQ.A9d();var O1w,K1w;if(B6w.Share.html2canvasLocation){return B6w.Share.html2canvasLocation;}O1w=document.getElementsByTagName("script");for(var x1w=0;x1w<O1w.length;x1w++){K1w=O1w[x1w];if(K1w.src&&K1w.src.indexOf("share.js")>-("1"-0)){return K1w.src.replace(/standard\/share\.js/,"")+"thirdparty/";}}return"js/thirdparty/";}function D6w(Y6w){var x2K,T2K;if(typeof html2canvas==="undefined"){x2K="htm";x2K+="l2can";x2K+="vas.min.";x2K+="js";T2K="un";T2K+="define";T2K+="d";if((typeof requirejs==="undefined"?"undefined":_typeof(requirejs))!==T2K){try{return requirejs(["html2canvas.min.js"],function(E1w){w6w=E1w;return Y6w();});}catch(a1w){console.warn("Require loading has failed, attempting to load html2canvas manually.");}}B6w.loadScript(V6w()+x2K,function(){o2QQ.A9d();w6w=html2canvas;return Y6w();});}else{w6w=html2canvas;return Y6w();}}B6w.Share=B6w.Share||function(){};B6w.Share.FullChart2PNG=function(t6w,C6w,o6w){if(!t6w||!t6w.chart){return;}o2QQ.l9d();if(typeof html2canvas==="undefined"){return D6w(function(){return Z6w(t6w,C6w,o6w);});}w6w=html2canvas;Z6w(t6w,C6w,o6w);};o2QQ.l9d();B6w.Share.createImage=function(T1w,q1w,w1w){var L2K,d2K,n1w,c1w,U1w,N1w,g1w,j1w,Z1w,B1w;L2K="i";L2K+="m";L2K+="g";d2K="o";d2K+="bjec";d2K+="t";n1w=[].slice.call(arguments);w1w=n1w.pop();if(q1w===null||_typeof(q1w)!=d2K){q1w={widthPX:n1w[1],heightPX:n1w[+"2"],imageType:n1w[3]};}c1w=q1w.widthPX;U1w=q1w.heightPX;N1w=q1w.imageType;g1w=T1w.chart.canvas.height;j1w=T1w.chart.canvas.width;if(T1w.chart.canvas.style.height){g1w=B6w.stripPX(T1w.chart.canvas.style.height);j1w=B6w.stripPX(T1w.chart.canvas.style.width);}if(c1w&&U1w){g1w=U1w;j1w=c1w;}else if(U1w){j1w=T1w.chart.canvas.width*(g1w/T1w.chart.canvas.height);}else if(c1w){j1w=c1w;g1w=T1w.chart.canvas.height*(c1w/T1w.chart.canvas.width);}Z1w=N1w?"image/"+N1w:"image/png";B1w=document.createElement(L2K);B1w.onload=function(){B6w.Share.FullChart2PNG(T1w,{image:this,width:j1w,height:g1w,hide:q1w.hide},function(L1w,D1w){if(L1w){o2QQ.I9X(0);console.warn(o2QQ.L9X(L1w,"Error producing canvas snapshot: "));}else{try{w1w(D1w.toDataURL(Z1w));;}catch(f1w){console.warn("Safari devices do not handle CORS enabled images. Using the charts' canvas as a fallback.");w1w(B1w.src);}}});};B1w.src=T1w.chart.canvas.toDataURL(Z1w);};B6w.Share.uploadImage=function(V1w,t1w,i1w,S1w){var h1w;o2QQ.A9d();if(!i1w){i1w={};}i1w.image=V1w;h1w=B6w.postAjax(t1w,JSON.stringify(i1w),function(C1w,m1w){if(C1w!=200){S1w(C1w,null);return;}S1w(null,m1w);});if(!h1w){S1w(+"0",null);}};B6w.Share.shareChart=function(k1w,o1w,A1w){B6w.Share.createImage(k1w,{},function(s1w){var l67=o2QQ;var R1w,M1w,P1w,I1w,J1w,H1w;R1w=B6w.uniqueID();M1w="ht";M1w+="tps";M1w+=":";M1w+="//share.chartiq.com";l67.O9X(21);l67.l9d();P1w=l67.x9X(M1w,"/upload/",R1w);if(o1w){if(o1w.host){M1w=o1w.host;}if(o1w.path){l67.I9X(23);var S6X=l67.L9X(6072,9,16,608,1234);P1w=M1w+o1w.path+((154.97,S6X)<604.86?336.70:"/")+R1w;}}I1w=k1w.getStartDateOffset();J1w={layout:k1w.exportLayout(),drawings:k1w.exportDrawings(),xOffset:I1w,startDate:k1w.chart.dataSegment[I1w].Date,endDate:k1w.chart.dataSegment[k1w.chart.dataSegment.length-1].Date,id:R1w,symbol:k1w.chart.symbol};H1w={id:R1w,image:s1w,config:J1w};B6w.Share.uploadImage(s1w,P1w,H1w,function(l1w,v1w){l67.A9d();var z2K;if(l1w!==null){z2K="err";z2K+="or sharing chart";z2K+=": ";B6w.alert(z2K,l1w);}else{l67.I9X(0);A1w(l67.L9X(v1w,M1w));}});;});};function N6w(A6w){var Y2K,b2K,R6w,M6w;Y2K="fill-o";Y2K+="paci";Y2K+="ty";b2K="fil";b2K+="l";if(!A6w.style){return;}R6w=getComputedStyle(A6w);M6w=["alignment-baseline","dominant-baseline",b2K,Y2K,"font-family","font-size","font-variant","font-weight","text-align","text-anchor"];M6w.forEach(function(I6w){o2QQ.A9d();if(!A6w.style[I6w]&&R6w[I6w]){A6w.style[I6w]=R6w[I6w];}});for(var P6w in A6w.children){N6w(A6w.children[P6w]);}}};J54=function J54(b1w){var G1w;G1w=typeof _CIQ!=="undefined"?_CIQ:b1w.CIQ;G1w.ChartEngine.prototype.setRange=function(u1w,e1w){var Y5d=o2QQ;var c0w,r1w,F1w,Q1w,E0w,d1w,g0w,y1w,W1w,z1w,j0w,Z0w,L0w,x0w,f0w,U0w,i0w,X1w,P0w,S0w,I0w,s0w,h0w,t0w,C0w,w0w,P2K,k2K,N2K,n2K,Y1w,T0w,k0w;if(G1w.isEmpty(u1w)){u1w={dtLeft:arguments[+"0"],dtRight:arguments[1],padding:arguments[2],chart:arguments[3]};e1w=arguments[4];}if(this.staticRange){u1w.goIntoPast=u1w.goIntoFuture=!!1;}if(!u1w.chart){u1w.chart=this.chart;}if(typeof u1w.padding=="undefined"){Y5d.O9X(49);u1w.padding=Y5d.x9X(0,"0");}c0w=![];function J0w(N3w,Z3w,n3w,B3w,w3w,L3w){var j3w,U3w,B2K;j3w=0;Y5d.O9X(6);U3w=Y5d.x9X(Z3w,N3w);Y5d.l9d();if(G1w.ChartEngine.isDailyInterval(n3w)){if(n3w=="month"){j3w=U3w/G1w.MONTH/B3w;}else if(n3w=="week"){j3w=U3w/G1w.WEEK/B3w;}else{j3w=U3w/G1w.DAY/B3w;}}else{if(!isNaN(n3w)){B2K="se";B2K+="co";B2K+="nd";if(w3w=="millisecond"){Y5d.O9X(113);j3w=Y5d.x9X(U3w,B3w,n3w);}else if(w3w==B2K){j3w=U3w/G1w.SECOND/(B3w*n3w);}else{j3w=U3w/G1w.MINUTE/(B3w*n3w);}}}return Math.round(j3w);;}r1w=u1w.chart;F1w=typeof u1w.dtLeft==="string"?new Date(u1w.dtLeft):u1w.dtLeft;Q1w=new Date();if(u1w.dtRight){Q1w=typeof u1w.dtRight==="string"?new Date(u1w.dtRight):u1w.dtRight;}if(!F1w){E0w=this.standardMarketIterator(Q1w,null,r1w);F1w=E0w.previous(r1w.maxTicks);if(!u1w.periodicity){c0w=!!1;}}r1w.inflectionPoint=F1w;this.layout.range={dtLeft:F1w,dtRight:Q1w};function N0w(d0w){var A2K,b0w,l0w,x3w,X0w,p0w,F0w,K3w,O3w,v0w,H0w,Y0w,E3w,y0w,c3w,c2K,P59,G59,D59,e0w,a3w,T3w;A2K="l";A2K+="a";A2K+="y";A2K+="out";if(typeof d0w=="undefined"){d0w=null;}b0w=0;l0w=+"0";x3w=new Date();X0w=u1w.base;p0w=u1w.periodicity;F0w=d1w.layout;if(u1w.goIntoFuture&&(!r1w.masterData.length||F1w>r1w.masterData[r1w.masterData.length-+"1"].DT)){K3w=r1w.masterData.length?r1w.masterData.pop():{DT:F1w};O3w=d1w.doCleanupGaps([K3w,{DT:Q1w}],r1w,{cleanupGaps:"gap",noCleanupDates:!!{}});d1w.setMasterData(r1w.masterData.concat(O3w),r1w,{noCleanupDates:!!{}});d1w.createDataSet(null,null,{appending:!0});}v0w=r1w.dataSet;H0w=v0w.length;if(!v0w||H0w===0){if(e1w){e1w(d0w);}return;}if(X0w==="day"&&p0w&&p0w.interval==="day"){E3w=u1w.multiplier;b0w=H0w<E3w?0:H0w-E3w;Y5d.O9X(114);l0w=Y5d.x9X(H0w,"1");}else if(X0w==="today"&&v0w[H0w-("1"&2147483647)].DT.getDate()<x3w.getDate()){y0w=new Date(v0w[H0w-1].DT.getTime());c3w=y0w.getTime();Y0w=0;for(var G0w=H0w-1;G0w>=0;G0w--){if(v0w[G0w]&&v0w[G0w].DT.getDate()!=y0w.getDate()){y0w=new Date(+v0w[G0w+1].DT);Y5d.O9X(115);Y0w=Y5d.x9X(772416640,"1",G0w);break;}}b0w=Y0w;Y5d.O9X(6);l0w=Y5d.x9X(1,H0w);}else{c2K="a";c2K+="l";c2K+="l";if(u1w.base!="all"&&(F1w.getTime()>=v0w[0].DT.getTime()||u1w.goIntoPast)){b0w=d1w.tickFromDate(F1w,r1w,null,!!{});}else{Y5d.O9X(53);P59=-Y5d.L9X(143359680,"1091346484");G59=-1049587807;Y5d.O9X(1);D59=Y5d.L9X(1,"2");for(var f59=1;Y5d.Y19(f59.toString(),f59.toString().length,"62757">>458217728)!==P59;f59++){b0w=2;D59+=2;}if(Y5d.g19(D59.toString(),D59.toString().length,77558)!==G59){b0w=0;}}if(u1w.base!=c2K&&(Q1w.getTime()<=v0w[H0w-1].DT.getTime()||u1w.goIntoFuture)){l0w=d1w.tickFromDate(Q1w,r1w);if(l0w>H0w-1){l0w--;};}else{Y5d.I9X(6);l0w=Y5d.x9X(1,H0w);}}Y5d.O9X(5);e0w=Y5d.L9X(b0w,1,l0w);if(e0w<1){if(e1w){e1w(d0w);}return;}a3w=u1w.padding||"0"<<315700640;if(l0w<H0w-+"1"){a3w=+"0";}T3w=(r1w.width-a3w)/e0w;d1w.setCandleWidth(T3w,r1w);Y5d.I9X(116);r1w.scroll=Y5d.x9X(e0w,H0w,1,l0w);d1w.micropixels=1;for(var q3w in d1w.panels){d1w.calculateYAxisMargins(d1w.panels[q3w].yAxis);}if(!u1w.dontSaveRangeToLayout){delete u1w.chart;delete F0w.setSpan;F0w.range=u1w;;}else{delete F0w.range;}d1w.draw();d1w.changeOccurred(A2K);if(!c0w){d1w.dispatch("periodicity",{stx:d1w,differentData:w0w,prevPeriodicity:{interval:h0w,periodicity:t0w,timeUnit:C0w}});}if(e1w){e1w(d0w);}}d1w=this;g0w=+"0";if(this.quoteDriver){if(c0w){y1w=this.layout.interval;z1w=this.layout.timeUnit;W1w=this.layout.periodicity;}else if(u1w.periodicity){j0w=G1w.cleanPeriodicity(u1w.periodicity.period,u1w.periodicity.interval,u1w.periodicity.timeUnit);y1w=j0w.interval;z1w=j0w.timeUnit;W1w=j0w.period;}else{Z0w=Q1w.getTime()-F1w.getTime();if(!this.autoPickCandleWidth.turnOn){L0w=this.staticRangePeriodicityMap;x0w=null;for(var n0w=0;n0w<L0w.length;n0w++){f0w=L0w[n0w];if(Z0w/f0w.rangeInMS<1.001){x0w=f0w;break;}}y1w=x0w.interval;W1w=x0w.periodicity;z1w=x0w.timeUnit;}else{U0w=0;if(this.autoPickCandleWidth.candleWidth){U0w=this.autoPickCandleWidth.candleWidth;}else{U0w=this.chart.barsHaveWidth?5:2;}i0w=r1w.width/U0w;X1w=this.dynamicRangePeriodicityMap;y1w=X1w[0].interval;W1w=1;for(var p1w=0;p1w<X1w.length;p1w++){S0w=Z0w/X1w[p1w].rangeInMS;if(S0w<i0w){if(X1w[p1w-+"1"]){y1w=X1w[p1w-1].interval;z1w=X1w[p1w-1].timeUnit;Y5d.O9X(7);W1w=Math.ceil(Y5d.x9X(P0w,i0w));}else{y1w=X1w[p1w].interval;z1w=X1w[p1w].timeUnit;W1w=1;}break;}P0w=S0w;}}}I0w=this.chart.scroll;s0w=this.layout.candleWidth;h0w=this.layout.interval;t0w=this.layout.periodicity;C0w=this.layout.timeUnit;this.chart.scroll=this.chart.maxTicks=J0w(Q1w.getTime(),F1w.getTime(),y1w,W1w,z1w,this.dontRoll);this.layout.candleWidth=this.chart.width/this.chart.maxTicks;w0w=this.needDifferentData({period:W1w,interval:y1w,timeUnit:z1w});if(Object.keys(this.chart.endPoints).length&&(this.chart.endPoints.begin>F1w||this.chart.endPoints.end<Q1w)){w0w=!![];}if(!this.chart.masterData||!this.chart.masterData.length||w0w||u1w.forceLoad){P2K="w";P2K+="e";P2K+="e";P2K+="k";k2K="m";k2K+="onth";this.layout.interval=y1w;this.layout.periodicity=W1w;this.layout.timeUnit=z1w;if(!this.layout.timeUnit){N2K="min";N2K+="ute";n2K="tic";n2K+="k";if(G1w.ChartEngine.isDailyInterval(this.layout.interval)){this.layout.timeUnit=null;}else if(this.layout.interval=="second"){this.layout.timeUnit="second";}else if(this.layout.interval!=n2K){this.layout.timeUnit=N2K;}}Y1w={symbol:r1w.symbol,symbolObject:r1w.symbolObject,chart:r1w,nodraw:!!"1"};if(this.layout.interval=="tick"){Y1w.startDate=F1w;Y1w.endDate=Q1w;}if(!this.displayInitialized){Y1w.initializeChart=!0;}T0w={symbol:r1w.symbol,symbolObject:r1w.symbolObject,interval:this.layout.interval};if((T0w.interval==k2K||T0w.interval==P2K)&&!this.dontRoll){T0w.interval="day";}k0w=Math.max(this.quoteDriver.getQuoteFeed(T0w).behavior.bufferSize+50,200);E0w=this.standardMarketIterator(F1w,null,r1w);Y1w.startDate=new Date(E0w.previous(k0w).getTime());E0w=this.standardMarketIterator(Q1w,null,r1w);Y1w.endDate=new Date(E0w.next(k0w).getTime());if(Y1w.endDate<Date.now()){this.isHistoricalModeSet=!0;}this.clearCurrentMarketData(this.chart);clearTimeout(this.streamParameters.timeout);this.quoteDriver.newChart(Y1w,M0w);}else{if(this.layout.interval!=y1w||this.layout.periodicity!=W1w||this.layout.timeUnit!=z1w||!this.chart.dataSegment||!this.chart.dataSegment[0]||this.chart.dataSegment[+"0"].DT!=r1w.inflectionPoint){this.layout.interval=y1w;this.layout.periodicity=W1w;this.layout.timeUnit=z1w;this.createDataSet();}M0w();}}else{N0w();}function M0w(g3w){if(g3w&&g0w===0){r1w.scroll=I0w;d1w.setCandleWidth(s0w);d1w.layout.interval=h0w;d1w.layout.periodicity=t0w;d1w.layout.timeUnit=C0w;if(e1w){e1w(g3w);}return;}g0w++;if(g0w>10){console.log("CIQ.ChartEngine.setRange(): Too many loads (10) from server. Stopping. Check periodicity logic.");N0w();return;}N0w();;}};o2QQ.l9d();G1w.ChartEngine.prototype.setSpan=function(f3w,k3w){var p5d=o2QQ;var f2K,J2K,D2K,G2K,V3w,i3w,M3w,t3w,S3w,C3w,o3w,P3w,j39,w39,e39,h3w,m3w,D3w,I3w,J3w,H3w,l3w,v3w,t09,w09,e09,s3w;f2K="y";f2K+="e";f2K+="ar";J2K="y";J2K+="t";J2K+="d";D2K="a";D2K+="ll";G2K="o";G2K+="bjec";G2K+="t";V3w=arguments[0];i3w=arguments[1];M3w=arguments[2];t3w=arguments[3];if(_typeof(f3w)==G2K){V3w=f3w.period?f3w.period:f3w.multiplier?f3w.multiplier:1;i3w=f3w.interval?f3w.interval:f3w.base?f3w.base:f3w.span?f3w.span:f3w.period;M3w=f3w.padding;t3w=f3w.chart;}else{f3w={period:V3w,interval:i3w,padding:M3w,chart:t3w};k3w=arguments[5];}if(!t3w){t3w=this.chart;}S3w=t3w.market;function R3w(b3w,r3w){var u3w;if(!I3w){return b3w;}u3w=+"7";if(r3w){b3w.setHours(b3w.getHours()+u3w);}else{b3w.setHours(b3w.getHours()-u3w);if(!S3w.isMarketDate(b3w)){b3w.setDate(b3w.getDate()-2);};}return b3w;}i3w=i3w.toLowerCase();if(i3w==D2K){f3w.dontSaveRangeToLayout=!![];this.displayAll(f3w,k3w);return;}o3w=i3w;P3w=1;if(i3w=="today"){j39=1289119044;w39=887718409;e39=2;for(var V39=1;p5d.Y19(V39.toString(),V39.toString().length,18902)!==j39;V39++){o3w="day";e39+=2;}if(p5d.Y19(e39.toString(),e39.toString().length,82408)!==w39){o3w="";}}else if(i3w=="year"){o3w="month";P3w=12;}h3w=G1w.shallowClone(f3w);m3w={begin:S3w.marketZoneNow(),interval:o3w,period:P3w};D3w=m3w.begin;I3w=G1w.Market.Symbology.isForexSymbol(t3w.symbol);if(i3w===J2K){D3w=A3w(D3w);D3w.setMonth(0);D3w.setDate(1);}else if(i3w==="month"){D3w=A3w(new Date());D3w.setMonth(D3w.getMonth()-V3w);}else if(i3w===f2K){D3w=A3w(new Date());D3w.setFullYear(D3w.getFullYear()-V3w);}else if(i3w==="week"){D3w=A3w(new Date());D3w.setDate(D3w.getDate()-V3w*7);}else if(i3w==="day"&&V3w=="1"<<49407424&&S3w.isMarketDay()){J3w=D3w.getHours();H3w=D3w.getMinutes();l3w=D3w.getSeconds();v3w=D3w.getMilliseconds();C3w=S3w.newIterator(m3w);D3w=C3w.previous();D3w.setHours(J3w,H3w,l3w,v3w);D3w=S3w._convertFromMarketTZ(D3w);}else if(i3w==="today"){m3w.begin=R3w(D3w,!"");C3w=S3w.newIterator(m3w);if(S3w.isOpen()||S3w.getPreviousOpen().getDate()==D3w.getDate()){C3w.next();}D3w=C3w.previous();R3w(D3w);h3w.goIntoFuture=!!{};h3w.dtRight=new Date(+D3w);h3w.dtRight.setDate(D3w.getDate()+1);h3w.dtRight=S3w._convertFromMarketTZ(h3w.dtRight);if(!I3w){D3w.setHours(C3w.market.zopen_hour);D3w.setMinutes(C3w.market.zopen_minute);D3w.setSeconds(0);}t09=1289837553;w09=-451506933;e09=2;for(var V09=1;p5d.g19(V09.toString(),V09.toString().length,79471)!==t09;V09++){D3w=S3w._convertFromMarketTZ(D3w);e09+=2;}if(p5d.g19(e09.toString(),e09.toString().length,56809)!==w09){D3w=S3w._convertFromMarketTZ(D3w);}}else{if(i3w=="day"){m3w.begin=R3w(D3w,!![]);}C3w=S3w.newIterator(m3w);if(V3w==1){V3w++;}p5d.I9X(6);D3w=C3w.previous(p5d.x9X(1,V3w));if(i3w=="day"){D3w=S3w._convertFromMarketTZ(R3w(D3w));}}h3w.dtLeft=D3w;if(h3w.maintainPeriodicity){h3w.periodicity={};h3w.periodicity.interval=this.layout.interval;h3w.periodicity.period=this.layout.periodicity;}t3w.spanLock=!"1";h3w.dontSaveRangeToLayout=!![];s3w=this;function A3w(G3w){G3w.setHours(0);G3w.setMinutes(0);G3w.setSeconds(0);G3w.setMilliseconds(0);p5d.A9d();return G3w;}this.setRange(h3w,function(d3w){var H2K;H2K="lay";H2K+="ou";H2K+="t";s3w.layout.setSpan=f3w;s3w.changeOccurred(H2K);if(i3w=="today"){t3w.spanLock=!!1;;}if(k3w){k3w(d3w);}});};G1w.ChartEngine.prototype.getSpanCandleWidth=function(y3w){var X5d=o2QQ;var q2K,W2K,s2K,W3w,Q3w,e3w,F3w,z3w,X3w;q2K="wee";q2K+="k";W2K="d";W2K+="a";W2K+="y";s2K="mont";s2K+="h";if(!y3w||!y3w.base||!y3w.multiplier){return;}W3w=parseFloat(y3w.multiplier);Q3w=y3w.base;e3w=new Date();F3w=new Date();if(Q3w=="year"){F3w.setFullYear(F3w.getFullYear()-W3w);}else if(Q3w==s2K){F3w.setMonth(F3w.getMonth()-W3w);}else if(Q3w==W2K){F3w.setDate(F3w.getDate()-W3w);}else if(Q3w==q2K){F3w.setDate(F3w.getDate()-7*W3w);}else if(Q3w=="YTD"){F3w.setMonth(0);F3w.setDate(1);}X5d.O9X(117);var y6X=X5d.L9X(30,9,996,9,16);X5d.O9X(0);var i6X=X5d.L9X(30,30);z3w=(e3w.getTime()-F3w.getTime())/y6X/i6X/+"60"/+"24";X5d.I9X(101);z3w=X5d.L9X(5,7,z3w);X3w=this.chart.width/z3w;return X3w;};G1w.ChartEngine.prototype.displayAll=function(Y3w,O9w){var W5d=o2QQ;var I2K,a9w,p3w,F19,T19,x19,q9w;I2K="mont";I2K+="h";var E9w=this.chart,x9w=this.layout;W5d.l9d();function K9w(){var c9w;if(!E9w.masterData||!E9w.masterData.length){return;}c9w=G1w.clone(Y3w);c9w.dtLeft=E9w.endPoints.begin.DT;c9w.dtRight=E9w.endPoints.end.DT;c9w.periodicity={};c9w.periodicity.interval=x9w.interval;c9w.periodicity.period=x9w.periodicity;c9w.periodicity.timeUnit=x9w.timeUnit;a9w.setRange(c9w,function(j9w){a9w.layout.setSpan={base:Y3w.base,multiplier:Y3w.multiplier};a9w.changeOccurred("layout");for(var g9w in a9w.panels){a9w.calculateYAxisMargins(a9w.panels[g9w].yAxis);}W5d.A9d();a9w.draw();if(O9w){O9w(j9w);}});}if(Y3w&&Y3w.chart){E9w=Y3w.chart;}a9w=this;if(!this.quoteDriver){K9w();return;}p3w=Y3w.maintainPeriodicity?{period:x9w.periodicity,interval:x9w.interval,timeUnit:x9w.timeUnit}:{period:1,interval:I2K,timeUnit:null};F19=-1582825121;T19=282477540;x19=2;for(var L19=1;W5d.Y19(L19.toString(),L19.toString().length,67714)!==F19;L19++){p3w=Y3w.periodicity?Y3w.periodicity:p3w;p3w=G1w.cleanPeriodicity(p3w.period,p3w.interval,p3w.timeUnit);q9w=this.needDifferentData(p3w);this.layout.periodicity=p3w.period;this.layout.interval=p3w.interval;W5d.I9X(50);x19+=W5d.L9X("2",2);}function T9w(n9w){if(!n9w){a9w.quoteDriver.loadAll(E9w,K9w);}}if(W5d.g19(x19.toString(),x19.toString().length,30760)!==T19){p3w=Y3w.periodicity?Y3w.periodicity:p3w;p3w=G1w.cleanPeriodicity(p3w.period,p3w.interval,p3w.timeUnit);q9w=this.needDifferentData(p3w);this.layout.periodicity=p3w.period;this.layout.interval=p3w.interval;}this.layout.timeUnit=p3w.timeUnit;if(Y3w.forceLoad||q9w){this.clearCurrentMarketData(this.chart);this.quoteDriver.newChart({noDraw:!!1,symbol:this.chart.symbol,symbolObject:this.chart.symbolObject,chart:this.chart,initializeChart:!![],fetchMaximumBars:!!{}},T9w);}else{if(E9w.moreAvailable||!E9w.upToDate){T9w();}else{this.createDataSet();K9w();}}};};H54=function H54(B9w){var h9d=o2QQ;var C39,O39,m39,a2K,U9w;C39=-+"1082917894";h9d.O9X(53);O39=-h9d.L9X(2000687488,"683945770");m39=2;for(var M09=1;h9d.g19(M09.toString(),M09.toString().length,43407)!==C39;M09++){a2K="unde";a2K+="fin";a2K+="ed";U9w=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==a2K?_CIQ:B9w.CIQ;h9d.I9X(1);m39+=h9d.L9X(1,"2");}if(h9d.Y19(m39.toString(),m39.toString().length,85581)!==O39){U9w=!_CIQ===""?_CIQ:B9w.CIQ;}U9w.ChartEngine.prototype.importLayout=function(F9w,i9w){var Z9w,S9w,N9w,f9w,V9w,D9w,G9w,Q9w,t9w,M9w,W9w,b9w,w9w,o9w,P9w,L9w,z9w,I9w,s9w,h9w,C9w,e9w,d9w,m9w,k9w,p9w,H9w,l9w,v9w,Y9w;if(!F9w){if(i9w.cb){i9w.cb();}return;}Z9w=this;S9w=[];if(_typeof(i9w)!=="object"){i9w={managePeriodicity:arguments["1">>1441290464],preserveTicksAndCandleWidth:arguments[2]};}N9w=this.layout;f9w=U9w.shallowClone(N9w);V9w=i9w.managePeriodicity;D9w=i9w.cb;G9w=i9w.seriesCB;Q9w=i9w.noDataLoad;function A9w(h7w){var l2K,i7w,L7w,D7w,R2K;h9d.l9d();l2K="la";l2K+="y";l2K+="out";if(M9w){Z9w.importDrawings(M9w);}Z9w.currentlyImporting=!1;if(h7w){return;}function V7w(){Z9w.createDataSet();R9w(Z9w.panels);Z9w.calculateYAxisPositions();Z9w.draw();}D7w=[];for(var S7w in Z9w.chart.series){R2K="s";R2K+="tudy";if(!Z9w.removeSeries)break;L7w=Z9w.chart.series[S7w];if(L7w.parameters.bucket==R2K){i7w=!0;Z9w.removeSeries(L7w);D7w.push(L7w);}}for(var f7w=+"0";f7w<D7w.length;f7w++){L7w=D7w[f7w];Z9w.addSeries(L7w.id,L7w.parameters,V7w);}if(!i7w){Z9w.draw();}Z9w.updateListeners("layout");Z9w.changeOccurred(l2K);;}t9w=i9w.preserveTicksAndCandleWidth;M9w=null;if(this.exportDrawings){M9w=this.exportDrawings();this.abortDrawings();}this.currentlyImporting=!![];for(var y9w in N9w.studies){W9w=N9w.studies[y9w];U9w.getFn("Studies.removeStudy")(this,W9w);}this.overlays={};b9w=U9w.shallowClone(this.panels);this.panels={};w9w=U9w.clone(F9w);N9w.periodicity=f9w.periodicity;N9w.interval=f9w.interval;N9w.timeUnit=f9w.timeUnit;N9w.setSpan=f9w.setSpan;N9w.range=f9w.range;if(t9w){N9w.candleWidth=f9w.candleWidth;}else{if(!N9w.candleWidth){N9w.candleWidth=8;}}this.setCandleWidth(N9w.candleWidth);if(N9w.flipped){this.flipChart(N9w.flipped);}o9w=w9w.panels;I9w=function I9w(N7w,Z7w){return N7w.index<Z7w.index?-1:1;};for(P9w in o9w){if(!("index"in o9w[P9w])){I9w=null;}L9w=o9w[P9w];L9w.name=P9w;S9w.push(L9w);}N9w.panels={};s9w=null;if(S9w.length>0){if(I9w){S9w.sort(I9w);}for(var J9w=0;J9w<S9w.length;++J9w){L9w=S9w[J9w];z9w=L9w.yAxis?new U9w.ChartEngine.YAxis(L9w.yAxis):null;this.stackPanel(L9w.display,L9w.name,L9w.percent,L9w.chartName,z9w);if(L9w.soloing){s9w=this.panels[L9w.name];}}}if(U9w.isEmpty(o9w)){this.stackPanel("chart","chart",1,"chart");}this.resizeCanvas();for(var u9w in b9w){h9w=b9w[u9w];C9w=this.panels[u9w];if(C9w){this.container.removeChild(C9w.holder);if(h9w.handle){this.container.removeChild(h9w.handle);}e9w={holder:!0,subholder:!![],display:!!{},icons:!!{}};for(var r9w in e9w){C9w[r9w]=h9w[r9w];}this.configurePanelControls(C9w);if(h9w.chart.panel==h9w){h9w.chart.panel=C9w;};}else{this.privateDeletePanel(h9w);}}this.chart.panel=this.panels.chart;R9w(this.panels);U9w.dataBindSafeAssignment(N9w,U9w.clone(w9w));d9w=U9w.clone(N9w.studies);delete N9w.studies;for(var X9w in d9w){m9w=d9w[X9w];U9w.getFn("Studies.addStudy")(this,m9w.type,m9w.inputs,m9w.outputs,m9w.parameters,m9w.panel);}if(this.extendedHours){this.extendedHours.prepare(N9w.extended,N9w.marketSessions);}if(typeof N9w.chartType=="undefined"){N9w.chartType="line";}this.setMainSeriesRenderer();function E7w(){Z9w.calculateYAxisPositions();R9w(Z9w.panels);if(G9w){G9w();}}if(s9w){this.panelSolo(s9w);}this.adjustPanelPositions();R9w(this.panels);this.storePanels();if(!Q9w){if(w9w.symbols&&w9w.symbols.length){k9w={chart:this.chart};if(!t9w&&V9w&&w9w.range&&Object.keys(w9w.range).length){k9w.range=w9w.range;}else if(!t9w&&V9w&&w9w.setSpan&&Object.keys(w9w.setSpan).length){k9w.span=w9w.setSpan;}else if(V9w&&w9w.interval){k9w.periodicity={interval:w9w.interval,period:w9w.periodicity,timeUnit:w9w.timeUnit};}else{k9w.periodicity={interval:f9w.interval,period:f9w.periodicity,timeUnit:f9w.timeUnit};}p9w=w9w.symbols[+"0"].symbolObject||w9w.symbols[0].symbol;this.loadChart(p9w,k9w,function(k7w){var m7w;if(!k7w){for(var t7w,C7w=1;C7w<w9w.symbols.length;++C7w){if(!Z9w.addSeries)break;t7w=w9w.symbols[C7w];if(!t7w.parameters){t7w.parameters={};}m7w=U9w.clone(t7w.parameters);if(this.panels[m7w.panel]){Z9w.addSeries(t7w.id,m7w,E7w);}else{console.warn('Warning: Series "'+t7w.id+'" could not be imported due to a missing corresponding panel "'+m7w.panel+'"');}}if(w9w.chartScale){Z9w.setChartScale(w9w.chartScale);}}A9w(k7w);h9d.A9d();if(D9w){D9w.apply(null,arguments);}});return;}if(V9w){if(!t9w&&this.setRange){H9w=w9w.range;if(H9w&&Object.keys(H9w).length&&this.chart.symbol){this.setRange(H9w,function(){A9w();if(D9w){D9w();}});return;}else if(w9w.setSpan&&Object.keys(w9w.setSpan).length&&this.chart.symbol){this.setSpan(w9w.setSpan,function(){h9d.l9d();A9w();if(D9w){D9w();}});return;}}l9w=w9w.interval;v9w=w9w.periodicity;Y9w=w9w.timeUnit;if(isNaN(v9w)){v9w=1;}if(!l9w){l9w="day";}this.setPeriodicity({period:v9w,interval:l9w,timeUnit:Y9w},function(){A9w();if(D9w){D9w();}});return;}}if(V9w){N9w.periodicity=w9w.periodicity;N9w.interval=w9w.interval;N9w.timeUnit=w9w.timeUnit;N9w.setSpan=w9w.setSpan;}this.createDataSet();function R9w(O7w){h9d.A9d();var Q2K,x7w;for(var a7w=+"0";a7w<S9w.length;a7w++){Q2K="yaxisLH";Q2K+="S";x7w=S9w[a7w];K7w(x7w,Q2K);K7w(x7w,"yaxisRHS");}Z9w.chart.yAxis=Z9w.chart.panel.yAxis;function T7w(q7w){h9d.A9d();return!!q7w;}function K7w(U7w,j7w){var B7w,c7w,n7w,w7w;if(!U7w[j7w]||!U7w[j7w].length){return;}B7w=O7w[U7w.name];if(!B7w){return;}c7w=B7w[j7w];n7w=new Array(c7w.length);for(var g7w=0;g7w<c7w.length;g7w++){w7w=U7w[j7w].indexOf(c7w[g7w].name);if(w7w>-("1"^0)){n7w[w7w]=c7w[g7w];}else{n7w.push(c7w[g7w]);}}if(n7w.length){B7w[j7w]=n7w.filter(T7w);}}}if(!t9w){this.home();}A9w();if(D9w){D9w();}};U9w.ChartEngine.prototype.exportLayout=function(v7w){var A7w,r2K,l7w,o7w,R7w,P7w,I7w;function H7w(u7w){var b7w;h9d.A9d();b7w=[];for(var G7w=0;G7w<u7w.length;G7w++){b7w.push(u7w[G7w].name);}return b7w;}A7w={};for(var M7w in this.layout){r2K="d";r2K+="r";r2K+="awi";r2K+="ng";if(M7w!="studies"&&M7w!="panels"&&M7w!=r2K){A7w[M7w]=U9w.clone(this.layout[M7w]);}else if(M7w=="studies"){A7w.studies={};}else if(M7w=="panels"){A7w.panels={};}}l7w=0;for(var s7w in this.panels){o7w=this.panels[s7w];if(o7w.exportable===!"1")continue;R7w=A7w.panels[s7w]={};R7w.percent=o7w.percent;R7w.display=o7w.display;R7w.chartName=o7w.chart.name;R7w.soloing=o7w.soloing;R7w.index=l7w++;R7w.yAxis={name:o7w.yAxis.name,position:o7w.yAxis.position};if(o7w.yaxisLHS){R7w.yaxisLHS=H7w(o7w.yaxisLHS);}if(o7w.yaxisRHS){R7w.yaxisRHS=H7w(o7w.yaxisRHS);}}for(var J7w in this.layout.studies){P7w=A7w.studies[J7w]={};I7w=this.layout.studies[J7w];P7w.type=I7w.type;P7w.inputs=U9w.clone(I7w.inputs);P7w.outputs=U9w.clone(I7w.outputs);P7w.panel=I7w.panel;P7w.parameters=U9w.clone(I7w.parameters);}if(v7w){A7w.symbols=this.getSymbols({"include-parameters":!![],"exclude-studies":!0,"exclude-generated":!![]});}else{delete A7w.symbols;}return A7w;};U9w.ChartEngine.prototype.importPreferences=function(r7w){var K2K;K2K="preferenc";K2K+="es";U9w.extend(this.preferences,r7w);if(r7w.timeZone){this.setTimeZone(this.dataZone,r7w.timeZone);}if(r7w.language&&U9w.I18N){U9w.I18N.localize(this,r7w.language);}this.changeOccurred(K2K);};U9w.ChartEngine.prototype.exportPreferences=function(){return this.preferences;};};l54=function l54(Q7w){var S3K,U3K,h3K,E3K,h6K,E6K,M6K,p1K,Z1K,X1K,l1K,R1K,d7w,F7w;S3K="#b";S3K+="82";S3K+="c";S3K+="0c";U3K="V";U3K+="olu";U3K+="me";U3K+=" Chart";h3K="a";h3K+="u";h3K+="t";h3K+="o";E3K="#FF";E3K+="0000";h6K="Expon";h6K+="ent";h6K+="ia";h6K+="l";E6K="Exp";E6K+="onenti";E6K+="al";M6K="Weig";M6K+="ht";M6K+="ed";p1K="V";p1K+="IDYA";Z1K="Exponent";Z1K+="i";Z1K+="a";Z1K+="l";X1K="welles wil";X1K+="der";l1K="t";l1K+="m";l1K+="a";R1K="m";R1K+="a";d7w=typeof _CIQ!=="undefined"?_CIQ:Q7w.CIQ;F7w=typeof _timezoneJS!=="undefined"?_timezoneJS:Q7w.timezoneJS;if(d7w.ChartEngine){d7w.ChartEngine.prototype.rightClickOverlay=function(W7w,z7w){var y7w;if(this.runPrepend("rightClickOverlay",arguments)){return;}o2QQ.A9d();y7w=this.overlays[W7w];if(y7w.editFunction){y7w.editFunction(z7w);}else{this.removeOverlay(W7w);}this.runAppend("rightClickOverlay",arguments);};d7w.ChartEngine.prototype.addOverlay=function(e7w){var C2K;C2K="add";C2K+="Overl";C2K+="ay";if(this.runPrepend("addOverlay",arguments)){return;}this.overlays[e7w.name]=e7w;this.runAppend(C2K,arguments);};d7w.ChartEngine.prototype.removeOverlay=function(a2w){var X7w,p7w,Y7w,K2w;if(this.runPrepend("removeOverlay",arguments)){return;}X7w=this.overlays[a2w];for(var x2w in this.overlays){p7w=this.overlays[x2w];Y7w=["Field"];if(d7w.Studies){Y7w=d7w.Studies.getFieldInputs(p7w);}for(var E2w=0;E2w<Y7w.length;E2w++){if(X7w.outputMap[p7w.inputs[Y7w[E2w]]]){this.removeOverlay(p7w.name);}}}if(X7w){this.cleanupRemovedStudy(X7w);K2w=this.panels[X7w.panel];delete this.overlays[a2w];this.checkForEmptyPanel(X7w.panel);}if(!this.currentlyImporting){this.displaySticky();this.createDataSet();this.changeOccurred("layout");}this.resetDynamicYAxis();this.runAppend("removeOverlay",arguments);};d7w.ChartEngine.prototype.cleanupRemovedStudy=function(O2w){if(!O2w){return;}if(O2w.study.removeFN){O2w.study.removeFN(this,O2w);}for(var T2w in this.plugins){if(T2w.indexOf("{"+O2w.id+(("1520"<<213549152,779.51)>=357?"}":(194.04,"0xc14"*1)))>-1){delete this.plugins[T2w];}}if(this.layout.studies){delete this.layout.studies[O2w.name];}delete this.overlays[O2w.name];if(d7w.Studies){d7w.Studies.removeStudySymbols(O2w,this);}if(this.quoteDriver){this.quoteDriver.updateSubscriptions();}};}d7w.Studies=d7w.Studies||function(){};d7w.Studies.DEFAULT_INPUTS={Period:14};d7w.Studies.DEFAULT_OUTPUTS={Result:"auto"};d7w.Studies.sortForProcessing=function(g2w){var q2w,c2w;q2w=[];function j2w(U2w,n2w){U2w.forEach(function(B2w){var w2w;if(n2w.indexOf(B2w)==-1){w2w=B2w.getDependents(g2w);if(w2w.length){j2w(w2w,n2w);}n2w.unshift(B2w);}});}c2w=g2w.layout.studies;if(c2w){j2w(Object.values(c2w),q2w);}return q2w;};d7w.Studies.StudyDescriptor=function(f2w,D2w,Z2w,i2w,S2w,L2w){var N2w;this.name=f2w;this.type=D2w;this.panel=Z2w;this.inputs=i2w;this.outputs=S2w;this.parameters=L2w;this.outputMap={};this.min=null;this.max=null;this.startFrom=0;this.subField="Close";N2w=d7w.Studies.studyLibrary[D2w];o2QQ.l9d();if(!N2w){N2w={};if(Z2w=="chart"||!Z2w&&L2w&&L2w.chartName=="chart"){this.overlay=!![];}}if(typeof N2w.inputs=="undefined"){N2w.inputs=d7w.clone(d7w.Studies.DEFAULT_INPUTS);}if(typeof N2w.outputs=="undefined"){N2w.outputs=d7w.clone(d7w.Studies.DEFAULT_OUTPUTS);}this.study=N2w;this.libraryEntry=N2w;;};d7w.Studies.StudyDescriptor.prototype.getYAxis=function(h2w){var V2w,C2w,t2w;V2w=this.yAxis;if(this.parameters){C2w=this.parameters.yaxisDisplayValue;}o2QQ.l9d();if(!V2w){t2w=h2w.panels[this.panel];if(t2w){V2w=h2w.getYAxisByName(t2w,C2w)||h2w.getYAxisByName(t2w,this.name)||t2w.yAxis;}}if(!V2w){V2w=h2w.getYAxisByName(h2w.chart.panel,C2w)||h2w.chart.panel.yAxis;}return V2w;};d7w.Studies.StudyDescriptor.prototype.getContext=function(m2w){return m2w.chart.context;};d7w.Studies.StudyDescriptor.prototype.getDependents=function(R2w,P2w){var o2w,k2w,M2w;o2w=[];for(var I2w in R2w.layout.studies){k2w=R2w.layout.studies[I2w];if(k2w==this)continue;M2w=d7w.Studies.getFieldInputs(k2w);for(var A2w=0;A2w<M2w.length;A2w++){if(k2w.inputs[M2w[A2w]].includes(this.name)){if(P2w&&k2w.parameters&&k2w.parameters.panelName)continue;o2w.push(k2w);o2w=o2w.concat(k2w.getDependents(R2w,P2w));break;}}}return o2w;};d7w.Studies.StudyDescriptor.prototype.undraggable=function(J2w){var s2w;s2w=this.study.attributes;if(s2w){if(s2w.panelName&&s2w.panelName.hidden){return!"";}if(s2w.yaxisDisplayValue&&s2w.yaxisDisplayValue.hidden){return!0;}}return!"1";};d7w.Studies.StudyDescriptor.prototype.appendFutureTicks=function(b2w,v2w){var G2w,r2w,l2w,H2w;o2QQ.l9d();G2w=b2w.chart.scrubbed;if(!G2w.length){return;}r2w=b2w.standardMarketIterator(G2w[G2w.length-1].DT);for(l2w=v2w.length-1;l2w>=0;l2w--){H2w=v2w[l2w];for(var u2w in H2w){if(H2w[u2w]||H2w[u2w]===0){l2w=-1;break;}}if(l2w==-+"1")break;v2w.pop();}for(l2w=0;l2w<v2w.length;l2w++){H2w=v2w[l2w];if(!H2w.DT){H2w.DT=r2w.next();}if(!H2w.displayDate){b2w.setDisplayDate(H2w);}H2w.futureTick=!!{};G2w.push(H2w);}};d7w.Studies.generateID=function(W2w,E5w,z2w,e2w,x5w){var S5d=o2QQ;var X2w,a5w,d2w,G69,D69,J69,Q2w,m2K,O2K,F2w,Y2w;X2w=d7w.Studies.studyLibrary[E5w];S5d.O9X(21);a5w=S5d.L9X( true?"\u200C":undefined,x5w||E5w,"\u200C");d2w=a5w;if(X2w){if(X2w.customRemoval){return d2w;}}if(!d7w.isEmpty(z2w)){G69=-+"210362402";D69=-1589431637;S5d.O9X(53);J69=S5d.L9X(717296256,"2");for(var H69=1;S5d.g19(H69.toString(),H69.toString().length,89635)!==G69;H69++){Q2w=!!"1";S5d.I9X(50);J69+=S5d.x9X("2",0);}if(S5d.g19(J69.toString(),J69.toString().length,37008)!==D69){Q2w=!{};}for(var p2w in z2w){m2K="f";m2K+="iel";m2K+="d";O2K="d";O2K+="is";O2K+="pla";O2K+="y";if(["id",O2K,"Shading","Anchor Selector"].includes(p2w)){continue;}F2w=z2w[p2w];if(F2w==m2K)continue;F2w=F2w.toString();if(d7w.Studies.prettify[F2w]!==undefined){F2w=d7w.Studies.prettify[F2w];}if(Q2w){Q2w=!{};d2w+=" (";}else{if(F2w){d2w+=",";}}d2w+=F2w;}if(!Q2w){d2w+=(4318,1690)>603?")":(301.8,5407)!=(7690,622.64)?(292.12,"c"):4.57e+3;}}if(e2w&&e2w.indexOf(d2w)===0){return e2w;}if(W2w.layout.studies&&W2w.layout.studies[d2w]){for(var y2w=2;y2w<("50"&2147483647);y2w++){S5d.I9X(21);Y2w=S5d.x9X(d2w,"-",y2w);if(!W2w.layout.studies[Y2w]){d2w=Y2w;break;}}}return d2w;};d7w.Studies.DialogHelper=function(w5w){var T5w,O5w,g5w,Z5w,l5w,L5w,A5w,h5w,R5w,K5w,U5w,P5w,V5w,I5w,s5w,u2K,X2K,Z2K,p2K,m5w,M1K,J5w,E1K,H5w,h1K,N5w,q5w,n5w,j5w,U1K,S1K,s69,W69,q69,f5w,o5w,b1K,w1K,v1K,B5w,V1K;T5w=this.stx=w5w.stx;O5w=this.sd=w5w.sd;o2QQ.l9d();this.name=O5w?O5w.type:w5w.name;this.signal=1;this.inputs=[];this.outputs=[];this.parameters=[];g5w=this.libraryEntry=O5w?O5w.study:d7w.Studies.studyLibrary[w5w.name];if(typeof g5w.inputs=="undefined"){g5w.inputs=d7w.clone(d7w.Studies.DEFAULT_INPUTS);}function S5w(d5w,F5w){if(!this.attributes[d5w]){this.attributes[d5w]={};}o2QQ.l9d();if(F5w){this.attributes[d5w].hidden=!0;}}if(typeof g5w.outputs=="undefined"){g5w.outputs=d7w.clone(d7w.Studies.DEFAULT_OUTPUTS);}Z5w=O5w&&T5w.panels[O5w.panel]?T5w.panels[O5w.panel]:T5w.chart.panel;l5w=Z5w.chart;this.title=T5w.translateIf(g5w.name);this.attributes=d7w.clone(g5w.attributes);if(!this.attributes){this.attributes={};}function b5w(Q5w){var e5w,y5w,z5w;o2QQ.A9d();e5w={};y5w=Q5w.defaults;z5w={name:Q5w.name,heading:T5w.translateIf(Q5w.label),defaultValue:y5w["0"<<1329723488],value:Q5w.value,options:e5w,type:"select"};for(var W5w=0;W5w<y5w.length;W5w++){e5w[y5w[W5w]]=T5w.translateIf(y5w[W5w]);}if(Q5w.color!==undefined){z5w.defaultColor=T5w.defaultColor;z5w.color=Q5w.color;}return z5w;}for(var v5w in this.attributes){L5w=this.attributes[v5w];for(var i5w in L5w){if(typeof L5w[i5w]=="function"){L5w[i5w]=L5w[i5w].call(O5w);}}}function u5w(X5w){var p5w;p5w={name:X5w.name,heading:T5w.translateIf(X5w.label),defaultValue:X5w.defaults,value:X5w.value,type:"checkbox"};return p5w;}A5w=[];h5w=T5w.layout.studies;R5w=[];if(O5w){R5w=Array.prototype.concat(O5w,O5w.getDependents(T5w));}for(var M5w in h5w){if(R5w.indexOf(h5w[M5w])>-1)continue;for(var G5w in h5w[M5w].outputMap){A5w.push(G5w);}}for(var c5w in g5w.inputs){K5w={};this.inputs.push(K5w);K5w.name=c5w;K5w.heading=T5w.translateIf(c5w);U5w=g5w.inputs[c5w];if(O5w&&O5w.inputs&&typeof O5w.inputs[c5w]!="undefined"&&O5w.inputs[c5w]!==null){K5w.value=O5w.inputs[c5w];}else{K5w.value=g5w.inputs[c5w];}K5w.defaultInput=g5w.inputs[c5w];if(!this.attributes[c5w]){this.attributes[c5w]=d7w.Studies.inputAttributeDefaultGenerator(K5w.defaultInput);}if(U5w.constructor==Number){K5w.type="number";}else if(U5w.constructor==String){P5w=d7w.Studies.movingAverageHelper(T5w,K5w.defaultInput);if(P5w){K5w.type="select";K5w.defaultInput=P5w;V5w=d7w.Studies.movingAverageHelper(T5w,K5w.value);if(!V5w){V5w=K5w.value;}K5w.value=V5w;K5w.options=d7w.Studies.movingAverageHelper(T5w,"options");}else if(U5w=="field"){K5w.type="select";K5w.options={};I5w=["Open","High","Low","Close","Adj_Close","hl/2","hlc/3","hlcc/4","ohlc/4",l5w.defaultPlotField].concat(A5w);for(var t5w=0;t5w<I5w.length;t5w++){s5w=I5w[t5w];K5w.options[s5w]=T5w.translateIf(s5w);}if(K5w.value=="field"){K5w.value="Close";}if(K5w.defaultInput=="field"){u2K="C";u2K+="l";u2K+="os";u2K+="e";K5w.defaultInput=u2K;}}else{X2K="te";X2K+="x";X2K+="t";K5w.type=X2K;if(this.attributes[c5w].placeholder=="yyyy-mm-dd"){K5w.type="date";}else if(this.attributes[c5w].placeholder=="hh:mm:ss"){K5w.type="time";}}}else if(U5w.constructor==Boolean){Z2K="t";Z2K+="r";Z2K+="u";Z2K+="e";K5w.type="checkbox";if(K5w.value===!!{}||K5w.value==Z2K||K5w.value=="on"){K5w.value=!0;}}else if(U5w.constructor==Array){K5w.type="select";K5w.options={};for(var D5w=0;D5w<U5w.length;D5w++){K5w.options[U5w[D5w]]=T5w.translateIf(U5w[D5w]);}if(K5w.value.constructor==Array){K5w.value=K5w.value[+"0"];}if(this.attributes[c5w].defaultSelected){K5w.defaultInput=this.attributes[c5w].defaultSelected;}else{K5w.defaultInput=U5w[0];}}}this.dateTimeInputs=[];function r5w(a4w){var i1K,Y5w;i1K="a";o2QQ.l9d();i1K+="l";i1K+="i";i1K+="as";if(f5w==i1K){o2QQ.I9X(53);Y5w=o2QQ.L9X(828250752,"1");for(var E4w in T5w.panels){if(E4w==a4w){return x4w(E4w,Y5w);}Y5w++;}}function x4w(O4w,K4w){var y1K;y1K="P";y1K+="a";y1K+="ne";y1K+="l ";return y1K+K4w.toString();}return a4w;}for(var C5w=+"0";C5w<this.inputs.length;C5w++){p2K="d";p2K+="a";p2K+="t";p2K+="e";m5w=this.inputs[C5w];if(m5w.type==p2K){M1K=" ";M1K+="D";M1K+="a";M1K+="te";J5w=m5w.name.substring(0,m5w.name.indexOf(M1K));for(var k5w=0;k5w<this.inputs.length;k5w++){E1K="t";E1K+="i";E1K+="me";H5w=this.inputs[k5w];if(H5w.type==E1K){h1K=" T";h1K+="i";h1K+="me";if(H5w.name==J5w+h1K){this.dateTimeInputs.push(J5w);break;}}}}}this.adjustInputTimesForDisplayZone();for(c5w in g5w.outputs){N5w={name:c5w,heading:T5w.translateIf(c5w)};N5w.color=N5w.defaultOutput=g5w.outputs[c5w];if(O5w&&O5w.outputs&&O5w.outputs[c5w]){N5w.color=O5w.outputs[c5w];}if(N5w.color=="auto"){N5w.color=T5w.defaultColor;}this.outputs.push(N5w);}q5w=O5w?O5w.parameters:null;if(g5w.parameters){n5w=g5w.parameters.init;if(n5w){if(n5w.studyOverZonesEnabled!==undefined){U1K="ch";U1K+="eckbox";j5w={name:"studyOverZones",heading:T5w.translateIf("Show Zones"),defaultValue:n5w.studyOverZonesEnabled,value:n5w.studyOverZonesEnabled};if(q5w&&(q5w.studyOverZonesEnabled||q5w.studyOverZonesEnabled===!"1")){j5w.value=q5w.studyOverZonesEnabled;}j5w.type=U1K;this.parameters.push(j5w);}if(n5w.studyOverBoughtValue!==undefined){S1K="a";S1K+="u";S1K+="t";S1K+="o";j5w={name:"studyOverBought",heading:T5w.translateIf("OverBought"),defaultValue:n5w.studyOverBoughtValue,value:n5w.studyOverBoughtValue,defaultColor:n5w.studyOverBoughtColor,color:n5w.studyOverBoughtColor};if(q5w&&q5w.studyOverBoughtValue){j5w.value=q5w.studyOverBoughtValue;}if(q5w&&q5w.studyOverBoughtColor){j5w.color=q5w.studyOverBoughtColor;}if(j5w.color==S1K){j5w.color=T5w.defaultColor;}j5w.type="text";this.parameters.push(j5w);}if(n5w.studyOverSoldValue!==undefined){j5w={name:"studyOverSold",heading:T5w.translateIf("OverSold"),defaultValue:n5w.studyOverSoldValue,value:n5w.studyOverSoldValue,defaultColor:n5w.studyOverSoldColor,color:n5w.studyOverSoldColor};s69=-251703157;W69=-706608055;q69=2;for(var a69=1;o2QQ.Y19(a69.toString(),a69.toString().length,98019)!==s69;a69++){if(q5w&&q5w.studyOverSoldValue){j5w.value=q5w.studyOverSoldValue;}if(q5w&&q5w.studyOverSoldColor){j5w.color=q5w.studyOverSoldColor;}if(j5w.color=="auto"){j5w.color=T5w.defaultColor;}j5w.type="text";this.parameters.push(j5w);q69+=2;}if(o2QQ.Y19(q69.toString(),q69.toString().length,"96371"<<1905175424)!==W69){if(q5w||q5w.studyOverSoldValue){j5w.value=q5w.studyOverSoldValue;}if(q5w||q5w.studyOverSoldColor){j5w.color=q5w.studyOverSoldColor;}if(j5w.color==="text"){j5w.color=T5w.defaultColor;}j5w.type="text";this.parameters.push(j5w);}}if(!this.attributes.studyOverBoughtValue){this.attributes.studyOverBoughtValue={};}if(!this.attributes.studyOverSoldValue){this.attributes.studyOverSoldValue={};}}}f5w=this.panelSelect=w5w.panelSelect;o5w=this.axisSelect=w5w.axisSelect;if(w5w.addWhenDone){o5w=f5w=!!"";}if(o5w||f5w){b1K="p";b1K+="anelName";if(!O5w){O5w=d7w.Studies.addStudy(T5w,w5w.name,null,null,{calculateOnly:!![]});d7w.Studies.removeStudy(T5w,O5w);}if(f5w){w1K="A";w1K+="u";w1K+="t";w1K+="o";v1K="pa";v1K+="ne";v1K+="lName";this.parameters.push(b5w({label:"Panel",name:v1K,defaults:function(){var j1K,t1K,T4w;j1K="New";j1K+=" ";j1K+="panel";t1K="Au";t1K+="to";T4w=[];o2QQ.l9d();T4w.push(t1K);for(var q4w in T5w.panels){if(q4w!=O5w.panel||!q5w||!q5w.panelName){T4w.push(r5w(q4w));}}if(!T5w.checkForEmptyPanel(O5w.panel,!!1,O5w)){T4w.push(j1K);}return T4w;}(),value:q5w&&q5w.panelName?r5w(q5w.panelName):w1K}),u5w({label:"Show as Underlay",name:"underlay",defaults:!1,value:O5w.underlay||O5w.parameters&&O5w.parameters.underlayEnabled}));}B5w=T5w.getYAxisByName(Z5w,O5w.name);if(o5w){V1K="s";V1K+="har";V1K+="e";V1K+="d";this.parameters.push(b5w({label:"Y-Axis",name:"yaxisDisplay",defaults:function(){var o1K,e1K,g4w,j4w;o1K="n";o1K+="o";o1K+="ne";e1K="l";e1K+="e";e1K+="f";e1K+="t";g4w=Z5w.yaxisLHS.concat(Z5w.yaxisRHS);j4w=[];j4w.push("default","right",e1K,o1K,"shared");for(var c4w=0;c4w<g4w.length;c4w++){if(g4w[c4w]!=B5w){j4w.push(g4w[c4w].name);}}return j4w;}(),value:q5w&&q5w.yaxisDisplayValue||B5w&&B5w.position||(O5w.panel!=O5w.name?V1K:Z5w.yAxis.position||"default"),color:B5w&&B5w.textStyle?B5w.textStyle:"auto"}),u5w({label:"Invert Y-Axis",name:"flipped",defaults:!!0,value:q5w?q5w.flippedEnabled:B5w?B5w.flipped:!"1"}));}S5w.call(this,"flippedEnabled",!B5w&&O5w.panel!=O5w.name);S5w.call(this,"underlayEnabled",g5w.underlay);S5w.call(this,b1K,g5w.seriesFN===null);S5w.call(this,"yaxisDisplayValue",g5w.seriesFN===null||g5w.yAxis&&g5w.yAxis.noDraw);}};d7w.Studies.DialogHelper.prototype.updateStudy=function(B4w){var n4w,U4w,w4w,Z4w;n4w={};U4w=this.sd;w4w=this.libraryEntry;if(!w4w){w4w={};}if(!U4w){U4w=w4w;}n4w.inputs=d7w.clone(U4w.inputs);function L4w(f4w){var D4w;if(this.panelSelect=="alias"){D4w=S4w(f4w);if(D4w){for(var i4w in this.stx.panels){if(! --D4w){return i4w;}}}}o2QQ.A9d();function S4w(V4w){var h4w;h4w=V4w.match(/.* (\d)/);return h4w&&h4w[1];}return f4w;}n4w.outputs=d7w.clone(U4w.outputs);n4w.parameters=d7w.clone(U4w.parameters);this.adjustInputTimesForDisplayZone(B4w);if(B4w.parameters&&B4w.parameters.panelName){B4w.parameters.panelName=L4w.call(this,B4w.parameters.panelName);}d7w.extend(n4w,B4w);if(!n4w.parameters){n4w.parameters={};}if(n4w.inputs&&n4w.inputs.id){U4w=d7w.Studies.replaceStudy(this.stx,n4w.inputs.id,this.name,n4w.inputs,n4w.outputs,n4w.parameters,null,U4w.study);}else{U4w=d7w.Studies.addStudy(this.stx,this.name,n4w.inputs,n4w.outputs,n4w.parameters,null,U4w.study);}Z4w=new d7w.Studies.DialogHelper({stx:this.stx,sd:U4w,axisSelect:this.axisSelect,panelSelect:this.panelSelect});for(var N4w in Z4w){if(N4w!="signal"){this[N4w]=Z4w[N4w];}}this.signal*=-1;;};d7w.Studies.DialogHelper.prototype.adjustInputTimesForDisplayZone=function(m4w){var Q5d=o2QQ;var k4w,o4w,R4w,M4w,t4w,C4w,Y1K,I4w,A4w,g1K;Q5d.A9d();if(this.stx.displayZone){for(var P4w=0;P4w<this.dateTimeInputs.length;P4w++){k4w=this.dateTimeInputs[P4w];C4w="";if(m4w&&m4w.inputs){Y1K=" Ti";Y1K+="me";Q5d.O9X(0);R4w=m4w.inputs[Q5d.L9X(" Date",k4w)];Q5d.O9X(0);M4w=m4w.inputs[Q5d.L9X(Y1K,k4w)];if(R4w){C4w=R4w;}if(M4w){C4w+=M4w;}}for(o4w=0;o4w<this.inputs.length;o4w++){t4w=this.inputs[o4w];if(!R4w&&R4w!==""&&t4w.name==k4w+" Date"){C4w=t4w.value+C4w;}else if(!M4w&&M4w!==""&&t4w.name==k4w+" Time"){C4w+=t4w.value;}}C4w=C4w.replace(/\D/g,"");if(C4w.length<12){return;}I4w=d7w.strToDateTime(C4w);if(!isNaN(I4w.valueOf())){if(m4w){if(!m4w.inputs){m4w.inputs={};}A4w=d7w.convertTimeZone(I4w,this.stx.displayZone);Q5d.I9X(0);m4w.inputs[Q5d.x9X(" Date",k4w)]=d7w.yyyymmdd(A4w);Q5d.O9X(0);m4w.inputs[Q5d.L9X(" Time",k4w)]=d7w.hhmmss(A4w);}else{A4w=d7w.convertTimeZone(I4w,null,this.stx.displayZone);for(o4w=0;o4w<this.inputs.length;o4w++){g1K=" Tim";g1K+="e";t4w=this.inputs[o4w];if(t4w.name==k4w+" Date"){t4w.value=d7w.yyyymmdd(A4w);}if(t4w.name==k4w+g1K){t4w.value=d7w.hhmmss(A4w);}}}}}}};d7w.Studies.prepareStudy=function(l4w,H4w,s4w){if(typeof H4w.calculateFN=="undefined"){H4w.useRawValues=!0;}if(d7w.isEmpty(s4w.outputMap)){for(var J4w in s4w.outputs){if(H4w.useRawValues){s4w.outputMap[J4w]=J4w;}else{s4w.outputMap[J4w+" "+s4w.name]=J4w;}}}};d7w.Studies.rejiggerDerivedStudies=function(y4w,d4w,e4w){var W4w,X4w,F4w,v4w,G4w,Q4w,p4w,r4w,z4w;W4w=d4w.name;X4w=d4w.panel;F4w=d4w.getDependents(y4w);for(var u4w=0;u4w<F4w.length;u4w++){v4w=F4w[u4w];G4w=d7w.clone(v4w.inputs);Q4w=G4w.id;if(!Q4w)continue;p4w=!!0;r4w=d7w.Studies.getFieldInputs(v4w);for(var b4w=0;b4w<r4w.length;b4w++){G4w[r4w[b4w]]=G4w[r4w[b4w]].replace(W4w,e4w);}z4w=d7w.Studies.replaceStudy(y4w,Q4w,v4w.type,G4w,v4w.outputs,d7w.extend(v4w.parameters,{rejiggering:!0}),null,v4w.study);delete z4w.parameters.rejiggering;}};d7w.Studies.removeStudySymbols=function(Y4w,a8w){if(Y4w.series){for(var E8w in Y4w.series){a8w.deleteSeries(Y4w.series[E8w],null,{action:"remove-study"});}};};d7w.Studies.replaceStudy=function(x8w,g8w,n8w,j8w,U8w,c8w,B8w,w8w){var O8w,K8w,T8w,q8w;if(!c8w){c8w={};}if(g8w){c8w.replaceID=g8w;}g8w=c8w.replaceID;O8w=x8w.layout.studies[g8w];d7w.Studies.removeStudySymbols(O8w,x8w);if(O8w.attribution){x8w.removeFromHolder(O8w.attribution.marker);}if(x8w.quoteDriver){x8w.quoteDriver.updateSubscriptions();}if(j8w){if(j8w.id==j8w.display){delete j8w.display;}delete j8w.id;}K8w=d7w.Studies.addStudy(x8w,n8w,j8w,U8w,c8w,B8w,w8w);K8w.highlight=O8w.highlight;K8w.uniqueId=O8w.uniqueId;q8w={};for(T8w in x8w.layout.studies){if(T8w==g8w){q8w[K8w.name]=K8w;}else{q8w[T8w]=x8w.layout.studies[T8w];}}x8w.layout.studies=q8w;q8w={};for(T8w in x8w.overlays){if(T8w==g8w){if(K8w.overlay||K8w.underlay){q8w[K8w.name]=K8w;}}else{q8w[T8w]=x8w.overlays[T8w];}}x8w.overlays=q8w;if(!x8w.overlays[K8w.name]&&(K8w.overlay||K8w.underlay)){x8w.addOverlay(K8w);}x8w.checkForEmptyPanel(O8w.panel);if(!c8w.rejiggering){x8w.initializeDisplay(x8w.chart);d7w.Studies.rejiggerDerivedStudies(x8w,O8w,K8w.inputs.id,K8w.panel);x8w.changeOccurred("layout");if(!x8w.currentlyImporting&&!c8w.calculateOnly&&K8w.chart.dataSet){x8w.createDataSet(null,K8w.chart);}x8w.draw();}d7w.transferObject(O8w,K8w);x8w.layout.studies[K8w.name]=O8w;x8w.overlays[K8w.name]=O8w;x8w.chart.state.studies.sorted=null;return O8w;};d7w.Studies.addStudy=function(Z8w,m8w,f8w,i8w,L8w,I8w,S8w){var d1K,F1K,D8w,t8w,k8w,N8w,R8w,s8w,C8w,o8w,M8w,A8w,T1K,h8w;d1K="l";d1K+="ayo";d1K+="u";d1K+="t";F1K="Def";F1K+="ault panel";D8w=S8w?S8w:d7w.Studies.studyLibrary[m8w];if(!L8w){L8w={};}if(D8w){if(D8w.inputs){t8w=d7w.clone(D8w.inputs);for(var V8w in t8w){if(t8w[V8w]instanceof Array){if(D8w.attributes&&D8w.attributes[V8w]&&D8w.attributes[V8w].defaultSelected){t8w[V8w]=D8w.attributes[V8w].defaultSelected;}else{t8w[V8w]=t8w[V8w][0];}}}f8w=d7w.extend(t8w,f8w);}if(D8w.outputs){i8w=d7w.extend(d7w.clone(D8w.outputs),i8w);}k8w=D8w.parameters;if(k8w&&k8w.init){L8w=d7w.extend(d7w.clone(k8w.init),L8w);}if(k8w&&!L8w.display){L8w.display=k8w.display;}}if(!f8w){f8w=d7w.clone(d7w.Studies.DEFAULT_INPUTS);}if(!i8w){i8w=d7w.clone(d7w.Studies.DEFAULT_OUTPUTS);}if(!L8w.chartName){L8w.chartName="chart";}if(L8w.panelName=="Auto"||L8w.panelName==F1K){L8w.panelName="";}if(f8w.Period<("1"&2147483647)){f8w.Period=1;}N8w=null;if(!Z8w.layout.studies){Z8w.layout.studies={};}if(D8w&&D8w.initializeFN){N8w=D8w.initializeFN(Z8w,m8w,f8w,i8w,L8w,I8w,S8w);}else{N8w=d7w.Studies.initializeFN(Z8w,m8w,f8w,i8w,L8w,I8w,S8w);}if(!N8w){o2QQ.O9X(0);console.log(o2QQ.L9X(m8w,"CIQ.Studies.addStudy: initializeFN() returned null for "));return;}S8w=N8w.study;N8w.chart=Z8w.charts[L8w.chartName];N8w.type=m8w;N8w.permanent=S8w.permanent;N8w.customLegend=S8w.customLegend;N8w.uniqueId=d7w.uniqueID();d7w.Studies.prepareStudy(Z8w,S8w,N8w);o2QQ.l9d();R8w=Z8w.chart.state.studies;if(!R8w){R8w=Z8w.chart.state.studies={};}R8w.sorted=null;if(!L8w.replaceID){Z8w.layout.studies[N8w.inputs.id]=N8w;if(N8w.overlay||N8w.underlay){Z8w.addOverlay(N8w);}if(!Z8w.currentlyImporting&&!L8w.calculateOnly&&N8w.chart.dataSet){Z8w.createDataSet(null,N8w.chart);}}else{s8w=!0;delete L8w.replaceID;}if(Z8w.quoteDriver){Z8w.quoteDriver.updateSubscriptions();}if(L8w.calculateOnly){Z8w.changeOccurred("layout");return N8w;}C8w=Z8w.panels[N8w.panel];o8w=![];M8w=!(N8w.overlay||N8w.underlay);if(M8w&&S8w.horizontalCrosshairFieldFN){C8w.horizontalCrosshairField=S8w.horizontalCrosshairFieldFN(Z8w,N8w);}if(Z8w.editCallback){o8w=!0;}else if(M8w){if(Z8w.callbackListeners.studyPanelEdit&&Z8w.callbackListeners.studyPanelEdit.length){o8w=!![];}}else{if(Z8w.callbackListeners.studyOverlayEdit&&Z8w.callbackListeners.studyOverlayEdit.length){o8w=!![];}}if(o8w){L8w.editMode=!"";A8w=![];for(var P8w in N8w.inputs){T1K="d";T1K+="isplay";if(P8w=="id")continue;if(P8w==T1K)continue;A8w=!"";break;}if(!A8w){for(var J8w in N8w.outputs){A8w=!"";break;}}if(A8w){if(typeof N8w.study.edit!="undefined"){if(N8w.study.edit){h8w=function(H8w,l8w,v8w,G8w){o2QQ.l9d();return function(){d7w.clearCanvas(H8w.chart.tempCanvas,H8w);l8w.study.edit(l8w,{stx:H8w,inputs:v8w,outputs:G8w,parameters:L8w});};}(Z8w,N8w,f8w,i8w,L8w);Z8w.setPanelEdit(C8w,h8w);N8w.editFunction=h8w;}}else if(!M8w){h8w=function(b8w,u8w,r8w,d8w,F8w){return function(Q8w){var e07=o2QQ;var d09,L09,z09;d09=836181016;e07.I9X(6);L09=-e07.x9X(0,"25487055");z09=2;for(var n09=+"1";e07.g19(n09.toString(),n09.toString().length,"80704"*1)!==d09;n09++){d7w.clearCanvas(b8w.chart.tempCanvas,b8w);e07.O9X(1);z09+=e07.L9X(1,"2");}if(e07.g19(z09.toString(),z09.toString().length,15942)!==L09){d7w.clearCanvas(b8w.chart.tempCanvas,b8w);}b8w.dispatch("studyOverlayEdit",{stx:b8w,sd:u8w,inputs:r8w,outputs:d8w,parameters:F8w,forceEdit:Q8w});};}(Z8w,N8w,f8w,i8w,L8w);N8w.editFunction=h8w;}else{if(Z8w.editCallback){h8w=function(y8w,W8w,z8w,e8w){return function(){o2QQ.A9d();var X8w;X8w=y8w.editCallback(y8w,W8w);d7w.clearCanvas(y8w.chart.tempCanvas,y8w);d7w.Studies.studyDialog(y8w,m8w,X8w,{inputs:z8w,outputs:e8w,parameters:L8w});};}(Z8w,N8w,f8w,i8w,L8w);if(C8w.name!="chart"){Z8w.setPanelEdit(C8w,h8w);}}else{h8w=function(p8w,Y8w,E6O,a6O,x6O){o2QQ.l9d();return function(){var x1K;o2QQ.A9d();x1K="studyPanelEdi";x1K+="t";d7w.clearCanvas(p8w.chart.tempCanvas,p8w);p8w.dispatch(x1K,{stx:p8w,sd:Y8w,inputs:E6O,outputs:a6O,parameters:x6O});};}(Z8w,N8w,f8w,i8w,L8w);if(C8w.name!="chart"){Z8w.setPanelEdit(C8w,h8w);N8w.editFunction=h8w;}}}}}Z8w.changeOccurred(d1K);if(!s8w){Z8w.draw();}return N8w;};d7w.Studies.removeStudy=function(O6O,K6O){var c6O,g6O,q6O,T6O;c6O=O6O.panels[K6O.panel];g6O=c6O&&c6O.yAxis.name;o2QQ.l9d();if(K6O.overlay||K6O.underlay){O6O.removeOverlay(K6O.name);}q6O=O6O.panels[K6O.panel];if(K6O.attribution){O6O.removeFromHolder(K6O.attribution.marker);}delete O6O.layout.studies[K6O.name];if(q6O&&!O6O.checkForEmptyPanel(q6O)){if(g6O==K6O.name){O6O.electNewPanelOwner(q6O);}T6O=O6O.getYAxisByName(K6O.panel,K6O.name);if(T6O){T6O.name=T6O.studies[1]||T6O.renderers[0];}}O6O.draw();O6O.resizeChart();};d7w.Studies.getPanelFromFieldName=function(f6O,L6O){o2QQ.l9d();var n6O,j6O,B6O,N6O,Z6O;n6O=d7w.Studies.getFieldInputs(L6O);if(!n6O.length){return null;}j6O=f6O.layout.studies;if(!j6O){return null;}B6O={};for(var w6O in j6O){for(var D6O in j6O[w6O].outputMap){B6O[D6O]=j6O[w6O].panel;}}for(var U6O=0;U6O<n6O.length;U6O++){N6O=L6O.inputs[n6O[U6O]];if(N6O){Z6O=B6O[N6O];if(Z6O){return Z6O;}}}return null;};d7w.Studies.createLibraryHash=function(){o2QQ.l9d();return Object.keys(d7w.Studies.studyLibrary).join((623,4394)!=(9085,5033)?8630!==+"4076"?"|":(707.29,858)!==157?("Q",9.40e+3):(![],7.65e+3):"5.63e+3"&2147483647);;};d7w.Studies.displayStudies=function(h6O,s6O,J6O){var m6O,o6O,z1K,i6O,C6O,l6O,t6O,S6O,k6O,L1K,A6O,R6O,V6O,P6O,I6O,b6O;if(J6O){s6O.studyLibraryHash=d7w.Studies.createLibraryHash();}m6O=h6O.layout.studies;if(!m6O){return;}o6O={};o2QQ.A9d();o6O[s6O.name]=!![];for(var H6O in m6O){z1K="undef";z1K+="ined";i6O=m6O[H6O];C6O=i6O.study;if(!C6O)continue;l6O=i6O.underlay||i6O.parameters&&i6O.parameters.underlayEnabled;if(J6O&&!l6O||!J6O&&l6O)continue;t6O=d7w.clone(C6O.renderer);if(t6O&&!(t6O instanceof Array)){t6O=[t6O];}S6O=h6O.panels[i6O.panel];if(S6O){if(S6O.chart!=s6O)continue;if(S6O.hidden)continue;if(!o6O[S6O.name]){k6O=i6O.permanent||!h6O.manageTouchAndMouse;if(S6O.closeX){if(k6O){S6O.closeX.style.display="none";}}else if(S6O.close){if(k6O){S6O.close.style.display="none";}}if(S6O.edit){L1K="n";L1K+="one";if(k6O){S6O.edit.style.display=L1K;}}o6O[S6O.name]=k6O;}}else{if(h6O.currentlyImporting){delete m6O[H6O];}continue;}A6O=i6O.chart.dataSegment;if(i6O.panel==i6O.parameters.chartName&&(!i6O.parameters||!i6O.parameters.panelName)){R6O=d7w.Studies.getPanelFromFieldName(h6O,i6O);if(R6O&&i6O.panel!=R6O){i6O.panel=R6O;}}if(_typeof(C6O.seriesFN)==z1K){if(t6O){if(!i6O.overlay){d7w.Studies.createYAxis(h6O,i6O,A6O,S6O);}for(var M6O=0;M6O<t6O.length;M6O++){V6O=t6O[M6O];for(var v6O in i6O.outputMap){if(i6O.outputMap[v6O]==V6O.field){V6O.field=v6O;}}if(!V6O.field)continue;V6O.panel=i6O.panel;P6O=V6O.binding;if(P6O){for(var G6O in P6O){I6O=d7w.Studies.determineColor(i6O.outputs[P6O[G6O]]);if(I6O&&I6O!="auto"){V6O[G6O]=I6O;};}}V6O.yAxis=null;b6O=d7w.Renderer.produce(V6O.type,V6O);b6O.stx=h6O;b6O.attachSeries(null,V6O).draw();}}else{d7w.Studies.displaySeriesAsLine(h6O,i6O,A6O);}if(S6O){d7w.Studies.displayError(h6O,i6O);}}else{if(C6O.seriesFN){if(S6O){C6O.seriesFN(h6O,i6O,A6O);d7w.Studies.displayError(h6O,i6O);}}}}};d7w.Studies.displayError=function(r6O,d6O,u6O){var c1K,F6O,Q6O;c1K="Not ";c1K+="enough data to compute ";if(!d6O.error){return;}F6O=u6O&&u6O.panel?u6O.panel:d6O.panel;Q6O=d6O.error===!0?r6O.translateIf(c1K)+r6O.translateIf(d6O.study.name):r6O.translateIf(d6O.error);if(u6O&&(u6O.h!=="center"||u6O.v!=="bottom")){r6O.watermark(F6O,u6O);return;}r6O.displayErrorAsWatermark(F6O,Q6O);};d7w.Studies.calculateMinMaxForDataPoint=function(Y6O,p6O,X6O){o2QQ.A9d();var W6O,z6O,y6O;W6O=Number.MAX_VALUE;o2QQ.I9X(118);var v6X=o2QQ.L9X(3,0,38,14,3);z6O=Number.MAX_VALUE*v6X;for(var e6O=0;e6O<X6O.length;e6O++){y6O=X6O[e6O][p6O];if(y6O===null||typeof y6O=="undefined")continue;if(isNaN(y6O))continue;W6O=Math.min(y6O,W6O);z6O=Math.max(y6O,z6O);}return{min:W6O,max:z6O};};d7w.Studies.getYAxisParameters=function(O1O,x1O){var a1O,K1O,E1O,B1K,A1K;a1O={};K1O=O1O.layout.studies&&O1O.layout.studies[x1O.name];if(K1O){E1O=K1O.study;if(E1O.yaxis||E1O.yAxisFN){a1O.noDraw=!!"1";}else{if(E1O.parameters&&E1O.parameters.excludeYAxis){a1O.noDraw=!!{};}a1O.ground=E1O.yAxis&&E1O.yAxis.ground;if(x1O){if(E1O.range!="bypass"){B1K="-";B1K+="1 to";B1K+=" ";B1K+="1";A1K="0 t";A1K+="o ";A1K+="100";if(E1O.range==A1K){a1O.range=[0,+"100"];}else if(E1O.range==B1K){a1O.range=[-1,1];}else{if(E1O.range=="0 to max"){a1O.range=[+"0",Math.max(+"0",x1O.high)];}else if(E1O.centerline||E1O.centerline==="0"<<1420579584){a1O.range=[Math.min(E1O.centerline,x1O.low),Math.max(E1O.centerline,x1O.high)];}}}if(a1O.range){x1O.low=a1O.range[+"0"];x1O.high=a1O.range[1];}if(K1O.min){x1O.min=K1O.min;}if(K1O.max){x1O.max=K1O.max;}if(K1O.parameters&&K1O.parameters.studyOverZonesEnabled){a1O.noDraw=!!1;}}}}return a1O;};d7w.Studies.doPostDrawYAxis=function(q1O,g1O){var T1O,n1O,B1O,c1O,j1O;for(var U1O in q1O.layout.studies){T1O=q1O.layout.studies[U1O];n1O=q1O.panels[T1O.panel];if(!n1O||n1O.hidden)continue;B1O=T1O.getYAxis(q1O);if(B1O!=g1O)continue;c1O=T1O.study;if(g1O.name==T1O.name){if(c1O.yaxis){c1O.yaxis(q1O,T1O);}if(c1O.yAxisFN){c1O.yAxisFN(q1O,T1O);};}d7w.Studies.drawZones(q1O,T1O);if(!T1O.error){j1O=c1O.centerline;if(j1O||j1O===("0"|0)||j1O!==null&&g1O.highValue>0&&g1O.lowValue<0){d7w.Studies.drawHorizontal(q1O,T1O,null,j1O||0,g1O);}}}};d7w.Studies.displaySeriesAsLine=function(Z1O,N1O,L1O){var w1O;if(!L1O.length){return;}w1O=Z1O.panels[N1O.panel];if(!w1O||w1O.hidden){return;}for(var D1O in N1O.outputMap){d7w.Studies.displayIndividualSeriesAsLine(Z1O,N1O,w1O,D1O,L1O);}};d7w.Studies.displaySeriesAsHistogram=function(V1O,f1O,P1O){var k1K,t1O,C1O,n1K,i1O,k1O,S1O,R1O,h1O,o1O,N1K,A1O,M1O;k1K="ov";k1K+="erl";k1K+="a";k1K+="id";if(!P1O.length){return;}o2QQ.l9d();t1O=V1O.panels[f1O.panel];if(!t1O){return;}if(t1O.hidden){return;}C1O=[];for(var m1O in f1O.outputMap){n1K="o";n1K+="b";n1K+="jec";n1K+="t";i1O=f1O.outputs[f1O.outputMap[m1O]];if(!i1O)continue;k1O=0.3;if(_typeof(i1O)==n1K){k1O=i1O.opacity;i1O=i1O.color;}S1O={field:m1O,fill_color_up:i1O,border_color_up:i1O,fill_color_down:i1O,border_color_down:i1O};if(f1O.underlay){S1O.opacity_up=S1O.opacity_down=k1O||0.3;}C1O.push(S1O);}R1O=f1O.getYAxis(V1O);h1O=f1O.inputs;o1O=h1O.WidthFactor;if(f1O.study&&f1O.study.parameters){N1K="u";N1K+="nde";N1K+="fined";A1O=f1O.study.parameters;if(_typeof(A1O.widthFactor)!==N1K){o1O=A1O.widthFactor;}}M1O={name:f1O.name,type:h1O.HistogramType?h1O.HistogramType:k1K,panel:f1O.panel,yAxis:R1O,widthFactor:o1O||0.5,bindToYAxis:!!{},highlight:f1O.highlight};V1O.drawHistogram(M1O,C1O);};d7w.Studies.displayIndividualSeriesAsLine=function(s1O,I1O,v1O,d1O,E0O){var G1K,P1K,H1O,J1O,F1O,z1O,u1O,Q1O,G1O,r1O,l1O,y1O,W1O,X1O,b1O,p1O,Y1O;G1K="transpa";G1K+="rent";P1K="aut";P1K+="o";if(!v1O.height){v1O.height=v1O.bottom-v1O.top;}H1O=I1O.getContext(s1O);J1O=I1O.outputs[I1O.outputMap[d1O]];if(!J1O){return;}H1O.save();if(typeof J1O==="string"){J1O={color:J1O,width:"1"&2147483647};}H1O.lineWidth=J1O.width||1;F1O=J1O.color;if(F1O==P1K){F1O=s1O.defaultColor;}H1O.strokeStyle=F1O;z1O=J1O.pattern;H1O.setLineDash(d7w.borderPatternToArray(H1O.lineWidth,z1O));H1O.lineDashOffset=0;u1O=0;Q1O=I1O.study;o2QQ.A9d();G1O=I1O.getYAxis(s1O);u1O=s1O.decimalPlacesFromPriceTick(G1O.priceTick);if(I1O.overlay||I1O.underlay){u1O=null;}if(G1O.decimalPlaces||G1O.decimalPlaces==="0"*1){u1O=G1O.decimalPlaces;}r1O=null;if(I1O.parameters){r1O=I1O.parameters.label;}l1O=Q1O.parameters;if(!l1O){l1O={};}y1O=l1O.plotType=="step";if(I1O.series){for(var e1O in I1O.series){W1O=I1O.series[e1O].parameters.type;if(W1O){o2QQ.O9X(62);y1O=o2QQ.L9X("step",W1O);}}}if(l1O.noLabels){r1O=!1;}if(!I1O.noSlopes&&I1O.noSlopes!==!!0){I1O.noSlopes=l1O.noSlopes;}if(!I1O.extendToEnd&&I1O.extendToEnd!==![]){I1O.extendToEnd=l1O.extendToEnd;}X1O=r1O||s1O.preferences.labels&&r1O!==!{};b1O=I1O.gaplines;if(b1O===!"1"){b1O=G1K;}p1O=I1O.inputs.Symbol;Y1O=b1O?s1O.getGapColorFunction(p1O,d1O,J1O,b1O):null;s1O.plotDataSegmentAsLine(d1O,v1O,{yAxis:G1O,skipTransform:s1O.panels[I1O.panel].name!=I1O.chart.name,label:X1O,labelDecimalPlaces:u1O,noSlopes:I1O.noSlopes,step:y1O,alignStepToSide:I1O.alignStepToSide,extendToEndOfLastBar:I1O.extendToEndOfLastBar,width:I1O.lineWidth,extendToEndOfDataSet:I1O.extendToEnd,gapDisplayStyle:b1O,highlight:I1O.highlight},Y1O);if(Q1O.appendDisplaySeriesAsLine){Q1O.appendDisplaySeriesAsLine(s1O,I1O,E0O,d1O,v1O);}H1O.restore();};d7w.Studies.drawHorizontal=function(O0O,c0O,j0O,g0O,T0O,a0O){var D1K,x0O,q0O,K0O;D1K="s";D1K+="egmen";D1K+="t";x0O=O0O.panels[c0O.panel];q0O=O0O.getBackgroundCanvas().context;if(!x0O){return;}if(!a0O){a0O=T0O.textStyle;}K0O=O0O.pixelFromPrice(g0O,x0O,T0O);if(K0O>T0O.top&&K0O<T0O.bottom){O0O.plotLine(x0O.left,x0O.right,K0O,K0O,a0O,D1K,q0O,!{},{opacity:a0O&&a0O.opacity?a0O.opacity:0.5});}};d7w.Studies.displayHistogramWithSeries=function(U0O,n0O,w0O){var N0O,B0O;N0O=U0O.panels[n0O.panel];B0O=0.5;if(n0O.underlay){B0O=+"0.3";}d7w.Studies.createHistogram(U0O,n0O,w0O,!{},B0O);o2QQ.A9d();d7w.Studies.displaySeriesAsLine(U0O,n0O,w0O);};d7w.Studies.drawZones=function(L0O,f0O,r0O){var o5d=o2QQ;var f1K,J1K,s0O,J0O,i0O,S0O,P0O,C0O,h0O,D0O,m0O,b0O,o0O,t0O,k0O,I0O,Z0O,l0O,A0O,R0O,V0O,H1K,v0O,G0O,H0O,W1K,s1K,u0O,I1K,q1K,M0O;f1K="stx_gr";f1K+="id";f1K+="_bor";f1K+="der";J1K="a";J1K+="u";J1K+="t";J1K+="o";if(!f0O.parameters||!f0O.parameters.studyOverZonesEnabled){return;}s0O=parseFloat(f0O.parameters.studyOverSoldValue);J0O=parseFloat(f0O.parameters.studyOverBoughtValue);i0O=f0O.parameters.studyOverSoldColor;o5d.A9d();S0O=f0O.parameters.studyOverBoughtColor;P0O=f0O.zoneOutput;if(!P0O){P0O="Result";}C0O=d7w.Studies.determineColor(f0O.outputs[P0O]);if(!C0O||C0O==J1K||d7w.isTransparent(C0O)){C0O=L0O.defaultColor;}if(!i0O){i0O=C0O;}if(!i0O||i0O=="auto"||d7w.isTransparent(i0O)){i0O=L0O.defaultColor;}if(!S0O){S0O=C0O;}if(!S0O||S0O=="auto"||d7w.isTransparent(S0O)){S0O=L0O.defaultColor;}h0O=L0O.panels[f0O.panel];D0O=f0O.getYAxis(L0O);m0O=D0O.displayBorder;if(L0O.axisBorders===!!0){m0O=!1;}if(L0O.axisBorders===!!{}){m0O=!!{};}if(D0O.width===0){m0O=!"1";}b0O=L0O.getYAxisCurrentPosition(D0O,h0O);o5d.O9X(62);o0O=o5d.L9X("left",b0O);t0O=D0O.justifyRight;if(!t0O&&t0O!==![]){if(L0O.chart.yAxis.justifyRight||L0O.chart.yAxis.justifyRight===![]){t0O=L0O.chart.yAxis.justifyRight;}else{t0O=o0O;}}k0O=Math.round(D0O.left+(o0O?D0O.width:0))+0.5;I0O=m0O?3:0;Z0O=L0O.getBackgroundCanvas().context;l0O=Z0O.fillStyle;Z0O.globalAlpha=0.2;L0O.startClip(h0O.name,!!{});Z0O.beginPath();A0O=Math.round(L0O.pixelFromPrice(J0O,h0O,D0O))+0.5;Z0O.strokeStyle=S0O;Z0O.moveTo(h0O.left,A0O);Z0O.lineTo(h0O.right,A0O);Z0O.stroke();Z0O.closePath();Z0O.beginPath();R0O=Math.round(L0O.pixelFromPrice(s0O,h0O,D0O))+0.5;Z0O.strokeStyle=i0O;Z0O.moveTo(h0O.left,R0O);Z0O.lineTo(h0O.right,R0O);Z0O.stroke();Z0O.closePath();V0O=new d7w.Plotter();V0O.newSeries("border","stroke",L0O.canvasStyle(f1K));if(m0O){H1K="b";H1K+="order";v0O=o0O?k0O-I0O:k0O-0.5;G0O=o0O?k0O+0.5:k0O+I0O;V0O.moveTo("border",v0O,A0O);V0O.lineTo("border",G0O,A0O);V0O.moveTo("border",v0O,R0O);V0O.lineTo(H1K,G0O,R0O);}Z0O.fillStyle=l0O;H0O={skipTransform:L0O.panels[f0O.panel].name!=f0O.chart.name,panelName:f0O.panel,band:P0O+((240.18,1210)<=("2085"-0,309.41)? true?319>=1930?"K":25.48:undefined:" ")+f0O.name,yAxis:D0O,opacity:0.3};if(!f0O.highlight&&L0O.highlightedDraggable){o5d.I9X(1);H0O.opacity*=o5d.x9X(1,"0.3");}d7w.preparePeakValleyFill(L0O,d7w.extend(H0O,{threshold:J0O,direction:D0O.flipped?-1:1,color:S0O}));d7w.preparePeakValleyFill(L0O,d7w.extend(H0O,{threshold:s0O,direction:D0O.flipped?1:-1,color:i0O}));Z0O.globalAlpha=1;if(!f0O.study||!f0O.study.yaxis){if(m0O){W1K="borde";W1K+="r";s1K="bo";s1K+="rder";u0O=Math.round(D0O.bottom)+0.5;V0O.moveTo(s1K,k0O,D0O.top);V0O.lineTo(W1K,k0O,u0O);V0O.draw(Z0O,"border");}if(D0O.width!==0){I1K="lef";I1K+="t";q1K="r";q1K+="i";q1K+="gh";q1K+="t";L0O.canvasFont("stx_yaxis",Z0O);L0O.canvasColor("stx_yaxis",Z0O);Z0O.textAlign=t0O?q1K:I1K;if(o0O){o5d.O9X(46);var t6X=o5d.L9X(2,64,16,20);M0O=D0O.left+t6X;if(t0O){o5d.O9X(119);var j6X=o5d.x9X(33,7,2,8);M0O=D0O.left+D0O.width-I0O-j6X;}}else{o5d.I9X(20);var w6X=o5d.L9X(0,4,4,4,7);M0O=D0O.left+I0O+w6X;if(t0O){M0O=D0O.left+D0O.width;}}Z0O.fillStyle=S0O;Z0O.fillText(J0O,M0O,A0O);Z0O.fillStyle=i0O;Z0O.fillText(s0O,M0O,R0O);Z0O.fillStyle=l0O;}}L0O.endClip();Z0O.globalAlpha=1;if(D0O.name==f0O.name){D0O.yAxisPlotter=new d7w.Plotter();}};d7w.Studies.createHistogram=function(d0O,e0O,L3O,S3O,q3O){var F5d=o2QQ;var y0O,Q0O,z0O,X0O,p0O,c3O,f3O,W0O,F0O,Y0O,Q1K,a1K,x3O,g3O,i3O,j3O,n3O,B3O,w3O,N3O,T3O;y0O=d0O.panels[e0O.panel];Q0O=e0O.getContext(d0O);z0O=e0O.getYAxis(d0O);d0O.startClip(y0O.name);F5d.l9d();F5d.I9X(120);var e6X=F5d.L9X(8,3,9);X0O=d0O.layout.candleWidth-e6X;if(X0O<2){X0O=1;}p0O=d0O.pixelFromPrice(0,y0O,z0O);if(z0O.min>+"0"){p0O=d0O.pixelFromPrice(z0O.min,y0O,z0O);}if(S3O){p0O=Math.floor(y0O.top+y0O.height/2);}c3O=e0O.name+"_hist";d0O.canvasColor("stx_histogram");f3O=Q0O.fillStyle;if(q3O||q3O===0){Q0O.globalAlpha=q3O;}if(!e0O.highlight&&d0O.highlightedDraggable){Q0O.globalAlpha*=0.3;}W0O=null;F0O=null;Y0O=e0O.outputs;for(var E3O=0;E3O<L3O.length;E3O++){Q1K="Nega";Q1K+="ti";Q1K+="ve Bar";a1K="Decr";a1K+="easi";a1K+="ng Ba";a1K+="r";x3O=L3O[E3O];if(!x3O)continue;if(x3O.candleWidth){X0O=Math.floor(Math.max(1,x3O.candleWidth-2));}g3O=Math.floor(d0O.pixelFromBar(E3O,y0O.chart)-X0O/2);i3O=Math.floor(X0O);if(W0O===null){F5d.I9X(121);var o6X=F5d.L9X(7,2,99,14,14);j3O=d0O.tickFromPixel(g3O,y0O.chart)-o6X;if(j3O<0){W0O=F0O;}else{W0O=d0O.pixelFromPrice(d0O.chart.dataSet[j3O][c3O],y0O,z0O)-p0O;}}else{W0O=F0O;}F0O=d0O.pixelFromPrice(x3O[c3O],y0O,z0O)-p0O;n3O=d7w.Studies.determineColor(Y0O[a1K]);B3O=d7w.Studies.determineColor(Y0O["Increasing Bar"]);w3O=d7w.Studies.determineColor(Y0O["Positive Bar"]);N3O=d7w.Studies.determineColor(Y0O[Q1K]);T3O=z0O.flipped;Q0O.fillStyle=f3O;if(n3O&&(T3O?F0O<W0O:F0O>W0O)){Q0O.fillStyle=n3O;}else if(B3O&&(T3O?F0O>W0O:F0O<W0O)){Q0O.fillStyle=B3O;}else if(w3O&&(T3O?F0O>0:F0O<0)){Q0O.fillStyle=w3O;}else if(N3O&&(T3O?F0O<+"0":F0O>+"0")){Q0O.fillStyle=N3O;}Q0O.fillRect(g3O,p0O,i3O,Math.floor(F0O));}Q0O.globalAlpha=1;d0O.endClip();};d7w.Studies.prettify={Close:"C",Open:4148!==(3237,191.52)?"O":0x2030,High:"H",Low:"L",simple:R1K,exponential:"ema",triangular:l1K,VIDYA:"vdma",weighted:"wma","welles wilder":"smma","true":"y","false":"n"};d7w.Studies.prettyRE=/^.*\((.*?)\).*$/;d7w.Studies.prettyDisplay=function(h3O){o2QQ.l9d();var C3O,t3O;C3O=d7w.Studies.prettyRE.exec(h3O);if(!C3O){return h3O;}t3O=C3O[1];if(t3O){for(var m3O in d7w.Studies.prettify){t3O=t3O.replace(m3O,d7w.Studies.prettify[m3O]);}h3O=h3O.replace(C3O["1"&2147483647],t3O);}return h3O;};d7w.Studies.getFieldInputs=function(R3O){o2QQ.l9d();var k3O,o3O,r1K;k3O=[];o3O=R3O.study.inputs;for(var A3O in o3O){r1K="fiel";r1K+="d";if(o3O[A3O]==r1K){k3O.push(A3O);}}return k3O;};d7w.Studies.initializeFN=function(s3O,K7O,H3O,q7O,I3O,G3O,l3O){var C1K,K1K,M3O,r3O,F3O,W3O,Q3O,y3O,E7O,b09,Y09,F09,O7O,a7O,x7O,v3O,z3O,b3O,Y3O,u3O;C1K="New";C1K+=" panel";K1K="Ow";K1K+="n";K1K+=" panel";if(!H3O){H3O={};}if(!I3O){I3O={};}if(!H3O.id){H3O.id=d7w.Studies.generateID(s3O,K7O,H3O,I3O.replaceID,I3O.display);}if(!H3O.display){H3O.display=H3O.id;}o2QQ.A9d();M3O=new d7w.Studies.StudyDescriptor(H3O.id,K7O,H3O.id,H3O,q7O,I3O);if(H3O.Period){M3O.days=Math.max(+"1",parseInt(M3O.inputs.Period,10));}if(l3O){if(!l3O.inputs){l3O.inputs=M3O.study.inputs;}if(!l3O.outputs){l3O.outputs=M3O.study.outputs;}M3O.study=l3O;}else{l3O=M3O.study;}if(l3O.display){H3O.display=l3O.display;}if(typeof I3O.panelName=="string"){G3O=I3O.panelName;}if(G3O==H3O.id||G3O&&!s3O.panelExists(G3O)){M3O.underlay=M3O.overlay=!{};}if(G3O==K1K||G3O==C1K){G3O=null;}r3O=M3O.overlay||H3O.Overlay||M3O.overlay!==![]&&l3O.overlay;F3O=M3O.underlay||H3O.Underlay||M3O.underlay!==!"1"&&l3O.underlay;if(r3O&&I3O.underlayEnabled){F3O=!!{};}if(F3O){M3O.underlay=!"";}if(!F3O&&s3O.chart.panel&&G3O==s3O.chart.panel.name){r3O=!![];}if(r3O){M3O.overlay=!![];}W3O=s3O.preferences.dragging;if(W3O===!0||W3O&&W3O.study){M3O.overlay=!!{};}if(G3O){I3O.panelName=G3O;}else if(!r3O&&!F3O){G3O=H3O.id;}if(I3O.calculateOnly){if(r3O||F3O){if(s3O.panels[I3O.panelName]){M3O.panel=I3O.panelName;}else{M3O.panel=d7w.Studies.getPanelFromFieldName(s3O,M3O)||I3O.chartName;}}return M3O;}Q3O={};y3O=s3O.layout.studies[I3O.replaceID];if(y3O){Q3O={outputMap:d7w.clone(y3O.outputMap),panel:y3O.panel};}M3O.panel="";if(G3O){E7O=d7w.Studies.smartMovePanel(s3O,M3O.inputs,G3O,I3O.replaceID,I3O.panelName=="New panel");b09=893050470;Y09=-102102848;F09=2;for(var x09=1;o2QQ.g19(x09.toString(),x09.toString().length,67122)!==b09;x09++){if(E7O){M3O.panel=E7O.name;}F09+=2;}if(o2QQ.Y19(F09.toString(),F09.toString().length,94178)!==Y09){if(E7O){M3O.panel=E7O.name;}}}else if(r3O||F3O){M3O.panel=d7w.Studies.getPanelFromFieldName(s3O,M3O)||I3O.chartName;}if(!M3O.panel){O7O=l3O.panelHeight||null;a7O=l3O.yAxis||{};a7O.name=M3O.inputs.id;M3O.panel=M3O.inputs.id;s3O.createPanel(M3O.inputs.display,M3O.panel,O7O,I3O.chartName,new d7w.ChartEngine.YAxis(a7O));}if(M3O.parameters&&M3O.parameters.panelName){M3O.parameters.panelName=M3O.panel;}x7O=s3O.panels[M3O.panel];v3O=d7w.Studies.smartCreateYAxis(s3O,x7O,M3O.inputs.id,I3O.yaxisDisplayValue,I3O.yAxis||l3O.yAxis);z3O=l3O?d7w.clone(l3O.yAxis):null;b3O=z3O||v3O;if(b3O){if(b3O.ground){b3O.initialMarginBottom=0;}if(b3O.initialMarginTop||b3O.initialMarginTop===0||b3O.initialMarginBottom||b3O.initialMarginBottom===0){s3O.calculateYAxisMargins(b3O);}if(b3O.name==I3O.replaceID){b3O.name=M3O.inputs.id;}}if(v3O){v3O.width=v3O.position=="none"?0:d7w.ChartEngine.YAxis.prototype.width;if(I3O.yaxisDisplayValue=="shared"||I3O.yaxisDisplayValue=="default"){delete I3O.yaxisDisplayValue;}else{if(z3O){d7w.ensureDefaults(v3O,z3O);}else if(v3O.name==M3O.name){if(!I3O.yaxisDisplayColor||I3O.yaxisDisplayColor=="auto"){delete v3O.textStyle;}else{v3O.textStyle=d7w.colorToHex(I3O.yaxisDisplayColor);}v3O.justifyRight=null;v3O.flipped=I3O.flippedEnabled;}}if(v3O!=x7O.yAxis){v3O.displayGridLines=![];}else if(v3O!=s3O.chart.yAxis){v3O.displayGridLines=s3O.displayGridLinesInStudies;}}s3O.calculateYAxisPositions();if(y3O){Y3O=!{};for(var T7O in s3O.drawingObjects){u3O=s3O.drawingObjects[T7O];if(Q3O.outputMap&&Q3O.outputMap.hasOwnProperty(u3O.field)){u3O.field=u3O.field.replace(I3O.replaceID,M3O.inputs.id);if(M3O.parameters&&M3O.parameters.panelName){u3O.panelName=M3O.parameters.panelName;}else{u3O.panelName=M3O.panel;}Y3O=!0;}else if(Q3O.panel&&Q3O.panel==u3O.panelName){u3O.panelName=u3O.panelName.replace(I3O.replaceID,M3O.inputs.id);Y3O=!!1;}}if(Y3O){s3O.changeOccurred("vector");}}return M3O;};d7w.Studies.smartMovePanel=function(c7O,L7O,n7O,j7O,D7O){var U7O,w7O,g7O,N7O;w7O=L7O.id;if(j7O){U7O=c7O.layout.studies[j7O];}if(U7O){g7O=c7O.panels[U7O.panel];if(g7O){if(g7O.yAxis.name==j7O){if((D7O||n7O!=j7O)&&!c7O.checkForEmptyPanel(g7O.name,!!1,U7O)){c7O.electNewPanelOwner(g7O);N7O=U7O.getYAxis(c7O);if(N7O.name==j7O){c7O.electNewYAxisOwner(N7O);};}else if(n7O==j7O||!c7O.panels[n7O]){if(w7O!=g7O.name){c7O.modifyPanel(g7O,{name:w7O,display:L7O.display});}n7O=w7O;}}}}return c7O.panels[n7O];};d7w.Studies.smartCreateYAxis=function(t7O,V7O,R7O,C7O,o7O){var u1K,m1K,O1K,S7O,m7O,M7O,k7O;u1K="n";u1K+="one";m1K="l";m1K+="eft";O1K="d";O1K+="ef";O1K+="ault";S7O=t7O.getYAxisByName(V7O,R7O);if(!C7O&&o7O){C7O=o7O.position;}if(C7O==O1K||C7O=="shared"||C7O==V7O.yAxis.name){C7O="";}if([m1K,"right",u1K].indexOf(C7O)>-1){if(!S7O||S7O.isShared(t7O)){m7O=o7O||{};d7w.extend(m7O,{name:R7O,position:C7O});if(!S7O&&!t7O.currentlyImporting&&V7O!=V7O.chart.panel&&!V7O.yAxis.studies.length&&!V7O.yAxis.renderers.length){S7O=V7O.yAxis;d7w.extend(S7O,m7O);}else{M7O=S7O==V7O.yAxis;if(S7O){S7O.name=t7O.electNewYAxisOwner(S7O);}S7O=t7O.addYAxis(V7O,new d7w.ChartEngine.YAxis(m7O));if(M7O){V7O.yAxis=S7O;}}}else{S7O.position=C7O;}return S7O;}if(C7O){k7O=t7O.getYAxisByName(V7O,C7O);if(k7O&&S7O==V7O.yAxis&&!S7O.isShared(t7O)){V7O.yAxis=k7O;}if(S7O&&S7O.isShared(t7O)){S7O.name=t7O.electNewYAxisOwner(S7O);}else{if(S7O!==V7O.yAxis){t7O.deleteYAxisIfUnused(V7O,S7O);}}return k7O;}if(S7O){if(S7O.isShared(t7O)){S7O.name=t7O.electNewYAxisOwner(S7O);}else{delete S7O.position;if(S7O!==V7O.yAxis){t7O.deleteYAxisIfUnused(V7O,S7O);}}}t7O.resizeChart();return V7O.yAxis;};d7w.Studies.calculateVolume=function(P7O,I7O){var J7O,v7O,b7O;if(I7O.type=="vol undr"){if(!P7O||!P7O.chart.dataSet){return;}J7O=P7O.layout;v7O=I7O.parameters.removeStudy;b7O=J7O.volumeUnderlay;J7O.volumeUnderlay=!v7O;if(b7O!=J7O.volumeUnderlay){P7O.changeOccurred("layout");}if(v7O){d7w.Studies.removeStudy(P7O,I7O);}}I7O.outputMap={};o2QQ.l9d();I7O.outputMap.Volume="";};d7w.Studies.MA=function(p7O,K2O,E2O,a2O,O2O,T2O,z7O,x2O){var H5d=o2QQ;H5d.A9d();var y7O,m19,u19,X19;y7O=new d7w.Studies.StudyDescriptor(O2O+" "+z7O.name,"ma",z7O.panel);y7O.chart=z7O.chart;m19=-+"544080920";u19=835346966;X19=+"2";for(var p19=1;H5d.g19(p19.toString(),p19.toString().length,32682)!==m19;p19++){y7O.days=parseInt(K2O,10);y7O.startFrom=z7O.startFrom;if(x2O){y7O.subField=x2O;}y7O.inputs={};if(p7O){y7O.inputs.Type=p7O;}if(E2O){y7O.inputs.Field=E2O;}X19+=2;}if(H5d.g19(X19.toString(),X19.toString().length,73854)!==u19){y7O.days=parseInt(K2O,+"32");y7O.startFrom=z7O.startFrom;if(x2O){y7O.subField=x2O;}y7O.inputs={};if(p7O){y7O.inputs.Type=p7O;}if(E2O){y7O.inputs.Field=E2O;}}if(a2O){H5d.O9X(6);y7O.inputs.Offset=parseInt(a2O,H5d.x9X(0,"10"));}d7w.Studies.calculateMovingAverage(T2O,y7O);};d7w.Studies.movingAverage={conversions:{ma:"simple",sma:"simple",ema:"exponential",tma:"triangular",vdma:"vidya",wma:"weighted",smma:X1K},translations:{simple:"Simple",exponential:Z1K,triangular:"Triangular",vidya:"VIDYA",weighted:"Weighted","welles wilder":"Welles Wilder"},typeMap:{ema:"Exponential",exponential:"Exponential",tma:"Triangular",triangular:"Triangular",vdma:p1K,vidya:"VIDYA",wma:M6K,weighted:"Weighted",smma:E6K,"welles wilder":h6K}};d7w.Studies.movingAverageHelper=function(j2O,g2O){o2QQ.l9d();var q2O;if(g2O=="options"){q2O={};for(var c2O in d7w.Studies.movingAverage.translations){q2O[c2O]=j2O.translateIf(d7w.Studies.movingAverage.translations[c2O]);}return q2O;}return d7w.Studies.movingAverage.conversions[g2O];};d7w.Studies.createVolumeChart=function(U2O,n2O,C2O){var I5d=o2QQ;var t6K,i6K,y6K,S6K,U6K,D2O,V2O,N2O,f2O,t2O,i2O,S2O,w2O,L2O,B2O,v6K,h2O,Z2O;t6K="Vol";t6K+="um";t6K+="e";i6K="_";i6K+="do";I5d.l9d();i6K+="wn";y6K="co";y6K+="l";y6K+="o";y6K+="r";S6K="stx_v";S6K+="olu";S6K+="me_underlay";U6K="U";U6K+="p Volume";D2O=n2O.panel;V2O=n2O.inputs;N2O=n2O.underlay;f2O=n2O.overlay;t2O=N2O||f2O;i2O=d7w.Studies.determineColor(n2O.outputs[U6K]);S2O=d7w.Studies.determineColor(n2O.outputs["Down Volume"]);w2O=N2O?S6K:"stx_volume";I5d.I9X(0);U2O.setStyle(I5d.L9X("_up",w2O),y6K,i2O);I5d.O9X(0);U2O.setStyle(I5d.L9X("_down",w2O),"color",S2O);L2O=[{field:n2O.volumeField||"Volume",fill_color_up:U2O.canvasStyle(w2O+"_up").color,border_color_up:U2O.canvasStyle(w2O+"_up").borderLeftColor,opacity_up:U2O.canvasStyle(w2O+"_up").opacity,fill_color_down:U2O.canvasStyle(w2O+"_down").color,border_color_down:U2O.canvasStyle(w2O+i6K).borderLeftColor,opacity_down:U2O.canvasStyle(w2O+"_down").opacity,color_function:n2O.colorFunction}];B2O=L2O[0];if(!N2O&&B2O.border_color_down==="rgb(184, 44, 12)"){v6K="#00";v6K+="0000";B2O.border_color_down=v6K;B2O.border_color_up="#000000";}h2O=n2O.getYAxis(U2O);Z2O={name:t6K,panel:D2O,yAxis:h2O,widthFactor:1,bindToYAxis:!0,highlight:n2O.highlight};d7w.extend(Z2O,n2O.study.parameters);d7w.extend(Z2O,n2O.parameters);if(U2O.colorByCandleDirection&&!n2O.colorFunction){B2O.color_function=function(o2O){var m2O,k2O;m2O=o2O.Open;k2O=o2O.Close;return{fill_color:m2O>k2O?B2O.fill_color_down:B2O.fill_color_up,border_color:m2O>k2O?B2O.border_color_down:B2O.border_color_up,opacity:m2O>k2O?B2O.opacity_down:B2O.opacity_up};};}U2O.drawHistogram(Z2O,L2O);};d7w.Studies.calculateStandardDeviation=function(F2O,A2O){var t5d=o2QQ;var e6K,w6K,j6K,s2O,I2O,v2O,H2O,l2O,J2O,G2O,b2O,M2O,R2O,r2O,u2O,o6K,P2O;e6K="Standa";e6K+="rd De";e6K+="viations";w6K="_";w6K+="M";w6K+="A";j6K="Moving Average ";j6K+="Ty";j6K+="pe";s2O=A2O.chart.scrubbed;if(s2O.length<A2O.days+1){A2O.error=!![];return;}I2O=A2O.inputs.Field;if(!I2O||I2O=="field"){I2O="Close";}v2O=A2O.inputs[j6K];if(!v2O){v2O=A2O.inputs.Type;}d7w.Studies.MA(v2O,A2O.days,I2O,A2O.inputs.Offset,w6K,F2O,A2O);t5d.O9X(50);H2O=t5d.L9X("0",0);l2O=0;J2O=0;G2O=Number(A2O.inputs[e6K]);if(G2O<0){G2O=+"2";}b2O=A2O.name;for(var d2O in A2O.outputs){t5d.I9X(21);b2O=t5d.x9X(d2O,+"0.06">("9618"&2147483647)?(!1,!!"1"):(7049,6490)>=(7530,284.12)?" ": true?(0x243d,+"6.08e+3"):undefined,b2O);}for(M2O=A2O.startFrom-1,r2O=0;M2O>=0&&r2O<A2O.days;M2O--,r2O++){R2O=s2O[M2O][I2O];if(R2O&&_typeof(R2O)=="object"){R2O=R2O[A2O.subField];}if(isNaN(R2O)){R2O=+"0";}t5d.O9X(74);H2O+=Math.pow(R2O,t5d.x9X(2147483647,"2"));l2O+=R2O;}for(M2O=A2O.startFrom;M2O<s2O.length;M2O++){u2O=s2O[M2O];R2O=u2O[I2O];if(R2O&&_typeof(R2O)=="object"){R2O=R2O[A2O.subField];}if(!R2O&&R2O!==0){R2O=0;}H2O+=Math.pow(R2O,2);l2O+=R2O;if(M2O<A2O.days-1)continue;if(M2O>=A2O.days){o6K="ob";o6K+="j";o6K+="ec";o6K+="t";P2O=s2O[M2O-A2O.days][I2O];if(P2O&&_typeof(P2O)==o6K){P2O=P2O[A2O.subField];}if(isNaN(P2O)){t5d.I9X(35);P2O=t5d.L9X(534671744,"0");}H2O-=Math.pow(P2O,2);l2O-=P2O;}J2O=u2O["_MA "+A2O.name];if(J2O||J2O===0){t5d.O9X(9);var V6X=t5d.L9X(8,6);t5d.I9X(5);var b6X=t5d.x9X(13,15,0);u2O[b2O]=Math.sqrt((H2O+A2O.days*Math.pow(J2O,V6X)-b6X*J2O*l2O)/A2O.days)*G2O;}}};d7w.Studies.calculateMovingAverage=function(j5O,Q2O){var b6K,V6K,X2O,q5O,p2O,x5O,z2O,Y2O,E5O,e2O,W2O,y2O,a5O,O5O,c5O,T5O,U5O,B5O,K5O,g5O;b6K="Cl";b6K+="o";b6K+="s";b6K+="e";V6K="sim";V6K+="p";V6K+="l";V6K+="e";if(!Q2O.chart.scrubbed){return;}X2O=Q2O.inputs.Type;if(X2O=="ma"||X2O=="sma"||!X2O){X2O="simple";}q5O=d7w.Studies.movingAverage.typeMap;if(X2O in q5O){return d7w.Studies["calculateMovingAverage"+q5O[X2O]](j5O,Q2O);}else if(X2O!==V6K){return;}p2O=Q2O.chart.scrubbed;x5O=0;z2O=[];Y2O=Q2O.name;for(var n5O in Q2O.outputs){o2QQ.I9X(21);Y2O=o2QQ.x9X(n5O,2130<1997?9665>=6010?(9320,849.26)<7456?!!"":!![]:0x14c6:" ",Y2O);}E5O=Q2O.inputs.Field;if(!E5O||E5O=="field"){E5O=b6K;}e2O=parseInt(Q2O.inputs.Offset,10);if(isNaN(e2O)){e2O=0;}O5O=Q2O.startFrom;c5O=e2O;for(W2O=Q2O.startFrom-1;W2O>=0;W2O--){y2O=p2O[W2O][E5O];if(y2O&&_typeof(y2O)=="object"){y2O=y2O[Q2O.subField];}if(!y2O&&y2O!==0)continue;if(c5O>0){c5O--;O5O=W2O;continue;}if(z2O.length==Q2O.days-1)break;x5O+=y2O;z2O.unshift(y2O);}if(z2O.length<Q2O.days-1){z2O=[];O5O=0;;}T5O=[];for(W2O=O5O;W2O<p2O.length;W2O++){U5O=p2O[W2O];y2O=U5O[E5O];if(y2O&&_typeof(y2O)=="object"){y2O=y2O[Q2O.subField];}B5O=W2O+e2O>=0&&W2O+e2O<p2O.length;K5O=B5O?p2O[W2O+e2O]:null;if(!y2O&&y2O!==0){if(K5O){K5O[Y2O]=null;}else if(W2O+e2O>=p2O.length){a5O={};a5O[Y2O]=null;T5O.push(a5O);}continue;}x5O+=y2O;z2O.push(y2O);if(z2O.length>Q2O.days){x5O-=z2O.shift();}g5O=z2O.length==Q2O.days?x5O/Q2O.days:null;if(K5O){K5O[Y2O]=g5O;}else if(W2O+e2O>=p2O.length){a5O={};a5O[Y2O]=g5O;T5O.push(a5O);}}Q2O.appendFutureTicks(j5O,T5O);};d7w.Studies.calculateMovingAverageExponential=function(H5O,w5O){var h5d=o2QQ;var Y6K,k5O,i5O,S5O,D5O,h5O,o5O,L5O,t5O,C5O,f5O,Z5O,N5O,m5O,A5O,R5O,g6K,s5O,J5O,M5O,V5O,P5O;Y6K="we";Y6K+="lles wilder";k5O=w5O.inputs.Type;i5O=w5O.chart.scrubbed;S5O=0;D5O=0;h5O=0;h5d.O9X(6);var Y6X=h5d.x9X(22,24);o5O=Y6X/(w5O.days+ +"1");if(k5O===Y6K||k5O==="smma"){o5O=+"1"/w5O.days;}L5O=null;t5O=w5O.name;for(var I5O in w5O.outputs){h5d.I9X(21);t5O=h5d.x9X(I5O," ",t5O);}C5O=w5O.inputs.Field;if(!C5O||C5O=="field"){C5O="Close";}f5O=parseInt(w5O.inputs.Offset,10);if(isNaN(f5O)){f5O=0;}m5O=w5O.startFrom;A5O=f5O;for(Z5O=w5O.startFrom-1;Z5O>=0;Z5O--){N5O=i5O[Z5O][t5O];if(!N5O&&N5O!==0)continue;if(L5O===null){L5O=N5O;}h5O=w5O.days;if(A5O<=0)break;A5O--;m5O=Z5O;}if(L5O===null){L5O=m5O=+"0";}R5O=[];for(Z5O=m5O;Z5O<i5O.length;Z5O++){g6K="o";g6K+="bjec";g6K+="t";s5O=i5O[Z5O];N5O=s5O[C5O];if(N5O&&_typeof(N5O)==g6K){N5O=N5O[w5O.subField];}J5O=Z5O+f5O>=0&&Z5O+f5O<i5O.length;M5O=J5O?i5O[Z5O+f5O]:null;if(!N5O&&N5O!==0){V5O=null;}else{if(h5O==w5O.days-1){S5O+=N5O;D5O=S5O/w5O.days;V5O=D5O;}else if(h5O<w5O.days-1){S5O+=N5O;h5d.I9X(122);D5O=h5d.L9X(S5O,"1",h5O);V5O=null;}else if(h5O===0){S5O+=N5O;D5O=S5O;V5O=null;}else if(L5O||L5O===0){h5d.O9X(10);D5O=h5d.x9X(L5O,N5O,o5O,L5O);V5O=D5O;}L5O=D5O;h5O++;}if(M5O){M5O[t5O]=V5O;}else if(Z5O+f5O>=i5O.length){P5O={};P5O[t5O]=V5O;R5O.push(P5O);}}w5O.appendFutureTicks(H5O,R5O);};d7w.Studies.calculateMovingAverageVIDYA=function(p5O,l5O){var u5d=o2QQ;var d6K,x6K,T6K,F6K,O4O,u5O,Y5O,d5O,r5O,F5O,b5O,v5O,G5O,Q5O,e5O,E4O,X5O,y5O,K4O,W5O,a4O,z5O;d6K="_MA";d6K+="STD";x6K="_";x6K+="STD ";T6K="Cl";T6K+="o";T6K+="s";T6K+="e";F6K="fi";F6K+="el";F6K+="d";O4O=l5O.inputs.Type;u5O=l5O.chart.scrubbed;u5d.O9X(112);var g6X=u5d.L9X(14,2,10,4);u5d.O9X(123);var F6X=u5d.L9X(7,17,120);Y5O=g6X/(l5O.days+F6X);d5O=null;r5O=l5O.name;for(var x4O in l5O.outputs){u5d.I9X(21);r5O=u5d.x9X(x4O,(6190,3837)==6750?(5978,9130)==657?"L":(910.31,639.01)!==5557?(0x1,5.99e+3):(+"7.41e+3","609"^0):" ",r5O);}F5O=l5O.inputs.Field;if(!F5O||F5O==F6K){F5O=T6K;}l5O.std=new d7w.Studies.StudyDescriptor(l5O.name,"sdev",l5O.panel);l5O.std.chart=l5O.chart;l5O.std.days=5;l5O.std.startFrom=l5O.startFrom;l5O.std.inputs={Field:F5O,"Standard Deviations":1,Type:"ma"};l5O.std.outputs={_STD:null};d7w.Studies.calculateStandardDeviation(p5O,l5O.std);d7w.Studies.MA("ma",20,x6K+l5O.name,0,d6K,p5O,l5O);b5O=parseInt(l5O.inputs.Offset,10);if(isNaN(b5O)){b5O=0;}e5O=l5O.startFrom;E4O=b5O;for(v5O=l5O.startFrom-1;v5O>=0;v5O--){G5O=u5O[v5O][r5O];if(!G5O&&G5O!==0)continue;if(d5O===null){d5O=G5O;}if(E4O<=0)break;E4O--;e5O=v5O;}if(d5O===null){d5O=e5O=0;}X5O=[];for(v5O=e5O;v5O<u5O.length;v5O++){y5O=u5O[v5O];G5O=y5O[F5O];if(G5O&&_typeof(G5O)=="object"){G5O=G5O[l5O.subField];}K4O=v5O+b5O>=0&&v5O+b5O<u5O.length;W5O=K4O?u5O[v5O+b5O]:null;if(!G5O&&G5O!==0){if(W5O){W5O[r5O]=null;}else if(v5O+b5O>=u5O.length){Q5O={};Q5O[r5O]=null;X5O.push(Q5O);}continue;}if(!y5O["_MASTD "+l5O.name]&&y5O["_MASTD "+l5O.name]!==0)continue;a4O=y5O["_STD "+l5O.name]/y5O["_MASTD "+l5O.name];u5d.O9X(124);z5O=u5d.L9X(a4O,G5O,a4O,Y5O,d5O,1,Y5O);d5O=z5O;if(v5O<l5O.days){z5O=null;}if(W5O){W5O[r5O]=z5O;}else if(v5O+b5O>=u5O.length){Q5O={};Q5O[r5O]=z5O;X5O.push(Q5O);}}l5O.appendFutureTicks(p5O,X5O);};d7w.Studies.calculateMovingAverageTriangular=function(B4O,T4O){var i5d=o2QQ;var A6K,c6K,z6K,L6K,c4O,n4O,U4O,j4O,g4O,w4O,N4O,Z4O,B6K,n6K,L4O;A6K="T";A6K+="R";A6K+="I";A6K+="2";c6K="T";c6K+="RI";c6K+="1 ";z6K="si";z6K+="mple";L6K="f";L6K+="ield";c4O=T4O.chart.scrubbed;n4O=T4O.inputs.Field;if(!n4O||n4O==L6K){n4O="Close";}U4O=Math.ceil(T4O.days/2);d7w.Studies.MA("simple",U4O,n4O,0,"TRI1",B4O,T4O);if(T4O.days%2===("0"^0)){U4O++;}d7w.Studies.MA(z6K,U4O,c6K+T4O.name,0,A6K,B4O,T4O);j4O=T4O.name;for(var D4O in T4O.outputs){i5d.O9X(21);j4O=i5d.x9X(D4O," ",j4O);}g4O=parseInt(T4O.inputs.Offset,10);if(isNaN(g4O)){g4O=0;}w4O=g4O;for(var q4O=T4O.startFrom-1;q4O>=+"0";q4O--){N4O=c4O[q4O][j4O];if(!N4O&&N4O!==0)continue;if(w4O>0){w4O--;continue;}break;}Z4O=[];for(q4O++;q4O<c4O.length;q4O++){if(q4O+g4O>=0){B6K="T";B6K+="RI";B6K+="2";B6K+=" ";if(q4O+g4O<c4O.length){i5d.I9X(0);c4O[i5d.x9X(g4O,q4O)][j4O]=c4O[q4O][B6K+T4O.name];}else{n6K="T";n6K+="RI2";n6K+=" ";L4O={};L4O[j4O]=c4O[q4O][n6K+T4O.name];Z4O.push(L4O);}}}T4O.appendFutureTicks(B4O,Z4O);};d7w.Studies.calculateMovingAverageWeighted=function(G4O,S4O){var E5d=o2QQ;var k6K,N6K,t4O,o4O,A4O,m4O,J4O,C4O,V4O,f4O,i4O,k4O,h4O,M4O,I4O,P4O,P6K,l4O,v4O,R4O,s4O;k6K="Clos";E5d.A9d();k6K+="e";N6K="fi";N6K+="el";N6K+="d";t4O=S4O.chart.scrubbed;o4O=0;A4O=0;m4O=S4O.inputs.Field;if(!m4O||m4O==N6K){m4O=k6K;}E5d.I9X(6);var T6X=E5d.x9X(3,4);E5d.O9X(52);var x6X=E5d.L9X(0,18,9);J4O=S4O.days*(S4O.days+T6X)/x6X;C4O=S4O.name;for(var H4O in S4O.outputs){E5d.O9X(21);C4O=E5d.L9X(H4O," ",C4O);}V4O=parseInt(S4O.inputs.Offset,"10"*1);if(isNaN(V4O)){V4O=+"0";}h4O=[];M4O=S4O.startFrom;I4O=V4O;for(f4O=S4O.startFrom-1;f4O>=0;f4O--){i4O=t4O[f4O][m4O];if(i4O&&_typeof(i4O)=="object"){i4O=i4O[S4O.subField];}if(!i4O&&i4O!==+"0")continue;if(I4O>0){I4O--;M4O=f4O;continue;}if(h4O.length==S4O.days-1)break;h4O.unshift(i4O);}if(h4O.length<S4O.days-1){h4O=[];M4O=+"0";;}for(f4O=0;f4O<h4O.length;f4O++){E5d.O9X(125);var d6X=E5d.L9X(17,4,4,20,3);o4O+=(f4O+d6X)*h4O[f4O];A4O+=h4O[f4O];}P4O=[];for(f4O=M4O;f4O<t4O.length;f4O++){P6K="o";P6K+="bj";P6K+="e";P6K+="ct";l4O=t4O[f4O];i4O=l4O[m4O];if(i4O&&_typeof(i4O)==P6K){i4O=i4O[S4O.subField];}v4O=f4O+V4O>=0&&f4O+V4O<t4O.length;R4O=v4O?t4O[f4O+V4O]:null;if(!i4O&&i4O!==0){if(R4O){R4O[C4O]=null;}else if(f4O+V4O>=t4O.length){k4O={};k4O[C4O]=null;P4O.push(k4O);}continue;}h4O.push(i4O);if(h4O.length>S4O.days){o4O-=A4O;A4O-=h4O.shift();}o4O+=h4O.length*i4O;A4O+=i4O;s4O=f4O<S4O.days-1?null:o4O/J4O;if(R4O){R4O[C4O]=s4O;}else if(f4O+V4O>=t4O.length){k4O={};k4O[C4O]=s4O;P4O.push(k4O);}}S4O.appendFutureTicks(G4O,P4O);};d7w.Studies.calculateStudyATR=function(e4O,y4O){var r5d=o2QQ;var d4O,b4O,F4O,u4O,f6K,J6K,D6K,G6K,Q4O,W4O,z4O;d4O=y4O.chart.scrubbed;b4O=y4O.days;if(d4O.length<b4O+1){y4O.error=!0;return;}F4O=0;u4O=y4O.name;for(var r4O=Math.max(y4O.startFrom,"1"*1);r4O<d4O.length;r4O++){f6K="AT";f6K+="R ";J6K="T";J6K+="rue Ra";J6K+="ng";J6K+="e ";D6K="Sum T";D6K+="ru";D6K+="e Range ";G6K="Sum Tru";G6K+="e Range";G6K+=" ";Q4O=d4O[r4O];r5d.I9X(6);W4O=d4O[r5d.L9X(1,r4O)];z4O=Q4O.trueRange;if(W4O[G6K+u4O]){r5d.I9X(0);F4O=W4O[r5d.x9X(u4O,D6K)];}F4O+=z4O;if(r4O>b4O){r5d.O9X(6);F4O-=d4O[r5d.L9X(b4O,r4O)][r5d.L9X(u4O,J6K,r5d.I9X(0))];}r5d.I9X(0);Q4O[r5d.x9X(u4O,"True Range ")]=z4O;r5d.I9X(0);Q4O[r5d.L9X(u4O,"Sum True Range ")]=F4O;if(r4O==b4O){r5d.I9X(0);Q4O[r5d.x9X(u4O,"ATR ")]=r5d.x9X(F4O,b4O,r5d.O9X(7));}else if(r4O>b4O){r5d.O9X(6);var L6X=r5d.x9X(13,14);r5d.O9X(0);Q4O[r5d.x9X(u4O,f6K)]=(W4O["ATR "+u4O]*(b4O-L6X)+z4O)/b4O;}}};d7w.Studies.displayPSAR2=function(Y4O,X4O,O60){var L5d=o2QQ;var H6K,g60,j60,U60,p4O,B60,s6K,x60,c60,N60,a60,K60,q60,T60,n60;H6K="P";H6K+="lo";H6K+="t Type";g60=Y4O.panels[X4O.panel];j60=X4O.getYAxis(Y4O);U60=j60==Y4O.chart.panel.yAxis;Y4O.startClip(g60.name);p4O=X4O.getContext(Y4O);B60=X4O.inputs[H6K]=="squarewave";L5d.l9d();for(var w60 in X4O.outputs){s6K="aut";s6K+="o";L5d.I9X(5);var z6X=L5d.x9X(11,7506,395);L5d.O9X(52);var c6X=L5d.x9X(13,14,1);L5d.I9X(126);var A6X=L5d.x9X(5,10,10,3992);L5d.O9X(127);var B6X=L5d.x9X(10,6342,6327,2109,6);x60=w60+("776.61"-0<=z6X?" ":("3154"*c6X,A6X)<=B6X?(!!{},"Q"):"F")+X4O.name;p4O.beginPath();c60=Y4O.layout.candleWidth;N60=Math.max(3,Math.floor(Y4O.chart.tmpWidth/("2"|0)));for(var E60=0;E60<O60.length;E60++){a60=O60[E60];if(!a60||!a60[x60]&&a60[x60]!==0)continue;if(a60.candleWidth){c60=a60.candleWidth;}if(U60&&a60.transform){a60=a60.transform;}K60=Y4O.pixelFromBar(E60,g60.chart);if(B60){L5d.O9X(7);K60-=L5d.L9X(c60,2);}q60=Y4O.pixelFromTransformedValue(a60[X4O.referenceOutput?X4O.referenceOutput+(("2738"^0,476)<=(+"2000","1406"|68)?" ":4940<=("3980"&2147483647)?"793.17"*1:+"5593"!=824.44?8.46e+3:(0xbae,!1))+X4O.name:x60],g60,j60);if(E60===0||!O60[E60-1]||!O60[E60-+"1"][x60]&&O60[E60-1][x60]!==0){p4O.moveTo(K60,q60);}if(B60){p4O.lineTo(K60,q60);L5d.I9X(0);p4O.lineTo(L5d.x9X(c60,K60),q60);if(O60[E60+1]){L5d.I9X(128);T60=O60[L5d.L9X("1",E60)];if(U60&&T60.transform){T60=T60.transform;}if(!T60[x60]&&T60[x60]!==0){L5d.I9X(0);p4O.lineTo(L5d.L9X(c60,K60),Y4O.pixelFromTransformedValue(T60[X4O.referenceOutput?X4O.referenceOutput+((711,7020)!=7430?" ": false?undefined:(+"3.63e+3",![]))+X4O.name:x60],Y4O.panels[X4O.panel],j60));}}}else{L5d.O9X(39);p4O.moveTo(L5d.L9X(2,N60,K60),q60);L5d.O9X(36);p4O.lineTo(L5d.L9X(2,K60,N60),q60);}}L5d.O9X(1);p4O.lineWidth=L5d.x9X(1,"1");if(X4O.highlight){p4O.lineWidth=3;}n60=d7w.Studies.determineColor(X4O.outputs[w60]);if(n60==s6K){n60=Y4O.defaultColor;}p4O.strokeStyle=n60;if(!X4O.highlight&&Y4O.highlightedDraggable){p4O.globalAlpha*=0.3;}p4O.stroke();p4O.closePath();L5d.O9X(74);p4O.lineWidth=L5d.x9X(2147483647,"1");}Y4O.endClip();};d7w.Studies.inputAttributeDefaultGenerator=function(Z60){var Z5d=o2QQ;var K59,C59,O59;if(!Z60&&Z60!==0){return{};}if(Z60.constructor==Number){if(Math.floor(Z60)==Z60){if(Z60>0){return{min:1,step:1};}return{step:1};K59=-724743960;C59=1523979559;O59=2;for(var u59=1;Z5d.g19(u59.toString(),u59.toString().length,90738)!==K59;u59++){;Z5d.O9X(74);O59+=Z5d.x9X(2147483647,"2");}if(Z5d.Y19(O59.toString(),O59.toString().length,8920)!==C59){;}}if(Z60>+"0"){return{min:0,step:0.01};}return{step:0.01};;}return{};};d7w.Studies.getMarketOffset=function(_ref18){var i60=_ref18.stx,S60=_ref18.localQuoteDate,C60=_ref18.shiftToDateBoundary;var n5d=o2QQ;var I6K,q6K,W6K,D60,t60,f60,L60,V60;I6K="U";I6K+="T";I6K+="C";q6K="U";n5d.A9d();q6K+="T";q6K+="C";W6K="Market.Symbo";W6K+="logy.i";W6K+="sForexMetal";if(arguments.length>1){n5d.O9X(35);i60=arguments[n5d.L9X(1881336512,"0")];S60=arguments[1];D60=arguments[2];}var h60=i60.chart.symbol;t60=d7w.getFn(W6K)(h60);if(D60===undefined){D60=d7w.getFn("Market.Symbology.isForexSymbol")(h60);}if(!i60.chart.market){f60=null;}else{f60=D60?"America/New_York":i60.chart.market.market_tz;}n5d.I9X(129);var n6X=n5d.L9X(2305,4615,59968,5,16);L60=new Date(S60.getTime()+S60.getTimezoneOffset()*n6X);if(!f60||f60.indexOf(q6K)==-1){L60=d7w.convertTimeZone(L60,I6K,f60);}V60=new Date(L60.getFullYear(),L60.getMonth(),L60.getDate(),L60.getHours(),L60.getMinutes(),L60.getSeconds(),L60.getMilliseconds()).getTime()-S60.getTime();if(C60&&D60){n5d.I9X(130);V60+=n5d.L9X(60,t60?6:7,"1000",60);}return V60;};d7w.Studies.getStudyList=function(A60){var k60,o60;k60={};o60={};d7w.extend(o60,A60);o2QQ.l9d();for(var m60 in d7w.Studies.studyLibrary){if(!o60[m60]){k60[d7w.Studies.studyLibrary[m60].name]=m60;}}return k60;};d7w.Studies.determineColor=function(R60){if(!R60){return null;}else if(_typeof(R60)==="object"){return R60.color;}return R60;};d7w.Studies.calculateGenericEnvelope=function(F60,M60,u60,s60,r60,d60){var A5d=o2QQ;var Q6K,a6K,G60,l60,r6K,l6K,R6K,P60,J60,I60,H60,v60;Q6K="Cl";Q6K+="ose";a6K="fie";a6K+="l";a6K+="d";if(!u60){u60=0;}if(!d60){d60=0;}if(!s60||s60==a6K){s60=Q6K;}if(!r60){r60=s60;}G60=M60.chart.scrubbed;l60=M60.inputs.Field;if(!l60||l60==="field"){l60="Close";}for(var b60=M60.startFrom;G60&&b60<G60.length;b60++){r6K="%";r6K+="b";r6K+=" ";l6K="o";l6K+="bj";l6K+="e";l6K+="ct";R6K="o";R6K+="b";R6K+="j";R6K+="ect";P60=G60[b60];if(!P60)continue;if(!P60[s60])continue;J60=P60[l60];if(J60&&_typeof(J60)==R6K){J60=J60.Close;}I60=P60[s60];if(I60&&_typeof(I60)=="object"){I60=I60[M60.subField];}H60=P60[r60];if(H60&&_typeof(H60)==l6K){H60=H60[M60.subField];}A5d.O9X(95);v60=A5d.x9X(d60,u60,H60);A5d.I9X(0);P60[M60.type+" Top "+M60.name]=A5d.x9X(v60,I60);A5d.O9X(6);P60[M60.type+" Bottom "+M60.name]=A5d.x9X(v60,I60);P60[M60.type+" Median "+M60.name]=I60;P60["Bandwidth "+M60.name]=I60?200*v60/I60:0;A5d.I9X(131);P60[r6K+M60.name]=A5d.x9X(J60,I60,1,v60,50);}};d7w.Studies.displayChannel=function(z60,Q60,p60){var l5d=o2QQ;var K6K,y60,m6K,O6K,C6K,W60,w69,e69,o69,X60;K6K="Cha";K6K+="nne";K6K+="l Fil";K6K+="l";if(Q60.inputs[K6K]){y60={panelName:Q60.panel};for(var e60 in Q60.outputs){m6K="M";m6K+="edian";O6K="L";O6K+="o";O6K+="w";C6K="T";C6K+="o";C6K+="p";W60=e60.split((8660,911)==(1350,828.97)?491.56<16.21?954.92:(4.95e+3,!{}):" ").pop();if(W60==C6K||W60=="High"){l5d.I9X(0);var N6X=l5d.x9X(6,1969);l5d.O9X(107);var k6X=l5d.L9X(4152,248,4);l5d.I9X(28);var P6X=l5d.L9X(10,423645,15,114570,4);l5d.O9X(99);var G6X=l5d.L9X(9110,4,7,27312);y60.topBand=e60+(N6X>(k6X,P6X)?G6X:" ")+Q60.name;}else if(W60=="Bottom"||W60==O6K){y60.bottomBand=e60+" "+Q60.name;}else if(W60==m6K||W60=="Channel"){y60.color=d7w.Studies.determineColor(Q60.outputs[e60]);}}if(Q60.parameters&&Q60.parameters.opacity){y60.opacity=Q60.parameters.opacity;}else{w69=1523382147;e69=-2138056784;o69=2;for(var b69=1;l5d.Y19(b69.toString(),b69.toString().length,+"9312")!==w69;b69++){y60.opacity=808;o69+=2;}if(l5d.Y19(o69.toString(),o69.toString().length,"7343"<<761908160)!==e69){y60.opacity=0.2;}}X60=z60.panels[Q60.panel];y60.skipTransform=X60.name!=Q60.chart.name;y60.yAxis=Q60.getYAxis(z60);if(!Q60.highlight&&z60.highlightedDraggable){y60.opacity*=0.3;}d7w.prepareChannelFill(z60,y60);}d7w.Studies.displaySeriesAsLine(z60,Q60,p60);};d7w.Studies.initAnchorHandle=function(a10,E10){o2QQ.l9d();var Y60=E10.handle;if(Y60){return;}if(!a10.controls.anchorHandles){a10.controls.anchorHandles={};}if(a10.controls.anchorHandles[E10.uniqueId]){Y60=a10.controls.anchorHandles[E10.uniqueId].handle;}else{Y60=document.createElement("div");Y60.classList.add("stx_anchor_handle");Y60.setAttribute(E10.uniqueId,"");a10.controls.anchorHandles[E10.uniqueId]={handle:Y60,sd:E10};a10.controls.chartControls.parentElement.appendChild(Y60);}E10.anchorHandle=Y60;};d7w.Studies.removeAnchorHandle=function(K10,O10){var _ref19=(K10.controls.anchorHandles||{})[O10.uniqueId]||{},x10=_ref19.handle;if(x10){delete K10.controls.anchorHandles[O10.uniqueId];x10.remove();}};d7w.Studies.repositionAnchor=function(c10,T10){var j10,u6K,B10,q10,w10,N10,f10,i10;var Z10=T10.currentAnchorTime,L10=T10.uniqueId;var _ref20=c10.repositioningAnchorSelector||{},g10=_ref20.hoverTick;o2QQ.l9d();var _c10$chart=c10.chart,n10=_c10$chart.dataSet,U10=_c10$chart.market;var D10=c10.controls.anchorHandles;j10={};if(g10||g10===0){u6K="YYY";u6K+="Y-MM-";u6K+="d";u6K+="d";if(g10>=n10.length){return;}B10=!T10.inputs["Anchor Date"];q10=n10[g10].DT;w10=d7w.Studies.getMarketOffset({stx:c10,localQuoteDate:q10,shiftToDateBoundary:!!"1"});if(B10&&new Date(q10.getTime()+w10).getDate()!==new Date(Z10.getTime()+w10).getDate()){return;}if(U10.market_def){q10=new F7w.Date(q10,U10.market_def.market_tz);}N10=!B10&&d7w.dateToStr(q10,u6K);f10=d7w.dateToStr(q10,"HH:mm:ss");j10={"Anchor Time":f10};if(N10){j10["Anchor Date"]=N10;}}i10=d7w.Studies.replaceStudy(c10,T10.inputs.id,T10.type,Object.assign(T10.inputs,j10),T10.outputs,T10.parameters,T10.panel);D10[L10].sd=i10;c10.draw();};d7w.Studies.displayAnchorHandleAndLine=function(h10,C10,M10){var _k;var g5d=o2QQ;var M3K,p6K,Z6K,X6K,e10,P10,J10,c00,u10,r10,d10,R10,S10,Q10,k10,o10,z10,N00,Z00,L00;M3K="p";M3K+="x";p6K="p";p6K+="x";Z6K="l";Z6K+="i";Z6K+="n";Z6K+="e";X6K="A";X6K+="nchor Time";e10=(h10.repositioningAnchorSelector||{}).sd===C10;var _ref21=e10&&h10.repositioningAnchorSelector,t10=_ref21.hoverTick;var l10=h10.chart,X10=h10.panels,p10=h10.xaxisHeight;var _l10$market=l10.market,V10=_l10$market===void 0?{}:_l10$market,Y10=l10.symbol;P10=X10[C10.panel];var _P=P10,E00=_P.top,I10=_P.bottom,v10=_P.right,a00=_P.left,x00=_P.height;var s10=C10.inputs,A10=C10.anchorHandle,K00=C10.currentAnchorTime;var _h10$canvasStyle=h10.canvasStyle("stx_anchor_handle"),G10=_h10$canvasStyle.backgroundColor,O00=_h10$canvasStyle.borderLeftColor;var _split=(s10[X6K]||"").split(("948.43"-0,5754)!=(7188,8160)?2760<(6660,"5050"*1)?":":"l":("b",596.49)),_split2=_slicedToArray(_split,3),T00=_split2[0],q00=_split2[1],_split2$=_split2[2],b10=_split2$===void 0?0:_split2$;J10=!s10["Anchor Date"];c00=d7w.getFn("Market.Symbology.isForexSymbol")(Y10);u10=(t10||t10===0)&&(h10.chart.dataSet[t10]||{}).DT;r10=d7w.Studies.getMarketOffset({stx:h10,localQuoteDate:M10[M10.length-1].DT,shiftToDateBoundary:!!{}});d10=u10&&J10&&new Date(u10.getTime()+r10).getDate()!==new Date(K00.getTime()+r10).getDate();var g00=h10.controls.anchorHandles[C10.uniqueId].highlighted;var _V10$getNormalOpen$sp=V10.getNormalOpen().split(":").map(function(D00){return parseInt(D00);}),_V10$getNormalOpen$sp2=_slicedToArray(_V10$getNormalOpen$sp,2),F10=_V10$getNormalOpen$sp2[0],j00=_V10$getNormalOpen$sp2[1];R10=function R10(i00){g5d.A9d();var f00;f00=i00?h10.tickFromDate(i00,null,null,!![]):t10;return[h10.pixelFromTick(f00,l10),f00];};S10=J10?new Date(M10[M10.length-1].DT):d7w.strToDate(s10["Anchor Date"]);if(V10.market_def){S10=new F7w.Date(S10,V10.market_def.market_tz);}S10.setHours(T00,q00,b10);Q10=c00&&(S10.getHours()>F10||S10.getHours()===F10&&S10.getMinutes()>=j00);if(Q10){S10.setDate(S10.getDate()-1);}var _R=R10(),_R2=_slicedToArray(_R,1),H10=_R2[0];var _R3=R10(S10),_R4=_slicedToArray(_R3,2),m10=_R4[0],y10=_R4[1];k10=new Date(S10);(_k=k10).setHours.apply(_k,_toConsumableArray(V10.getNormalClose().split(":")));if(Q10){k10.setDate(k10.getDate()+1);}var _ref22=k10&&R10(k10)||[],_ref23=_slicedToArray(_ref22,1),n00=_ref23[0];if(J10&&(m10>v10||n00>v10)){o10=new Date(S10);do{o10.setDate(o10.getDate()-1);}while(V10&&!V10.isMarketDate(o10));var _R5=R10(o10),_R6=_slicedToArray(_R5,2),W10=_R6[0],U00=_R6[1];if(W10>a00){S10=o10;m10=W10;y10=U00;}}z10={y0:E00,y1:I10,type:Z6K,confineToPanel:P10};h10.plotLine(Object.assign(z10,{x0:m10,x1:m10,color:G10,pattern:"solid",lineWidth:g00?3:2,opacity:1}));h10.plotLine(Object.assign(z10,{x0:H10,x1:H10,color:d10?O00:G10,pattern:[6,6],lineWidth:2,opacity:d10?0.5:1}));g5d.O9X(21);var D6X=g5d.x9X(207543680,8,622631032);A10.style.height=[8,x00/4,50].sort(function(S00,h00){g5d.I9X(6);return g5d.L9X(h00,S00);})["1"<<D6X]+p6K;var _A10$getBoundingClien=A10.getBoundingClientRect(),B00=_A10$getBoundingClien.height,w00=_A10$getBoundingClien.width;N00=Math.round(I10)===h10.height?p10:0;Z00=P10.name==="chart"?35:0;g5d.I9X(132);L00=g5d.L9X(Z00,N00,B00,"10",402350080);g5d.I9X(5);A10.style.top=g5d.L9X(L00,M3K,I10);A10.style.left=t10||t10===0?H10:m10-w00/+"2"+"px";C10.currentAnchorTime=S10;C10.currentAnchorTick=y10;};d7w.Studies.studyScriptLibrary={};d7w.Studies.studyLibrary=d7w.Studies.studyLibrary||{};d7w.extend(d7w.Studies.studyLibrary,{ma:{name:"Moving Average",overlay:!!{},calculateFN:d7w.Studies.calculateMovingAverage,inputs:{Period:+"50",Field:"field",Type:"ma",Offset:"0"<<1009091008},outputs:{MA:E3K}},"STD Dev":{name:"Standard Deviation",calculateFN:d7w.Studies.calculateStandardDeviation,inputs:{Period:14,Field:"field","Standard Deviations":2,"Moving Average Type":"ma"},attributes:{"Standard Deviations":{min:0.1,step:0.1}}},"True Range":{name:"True Range",calculateFN:d7w.Studies.calculateStudyATR,inputs:{},outputs:{"True Range":h3K}},volume:{name:U3K,range:"0 to max",yAxis:{ground:!"",initialMarginTop:0,zoom:0},seriesFN:d7w.Studies.createVolumeChart,calculateFN:d7w.Studies.calculateVolume,inputs:{},outputs:{"Up Volume":"#8cc176","Down Volume":S3K}}});};v54=function v54(t00){var V00;o2QQ.l9d();V00=typeof _CIQ!=="undefined"?_CIQ:t00.CIQ;if(!V00.ChartEngine.Driver){console.error("symbolLookupBase feature requires first activating quoteFeed feature.");}else{V00.ChartEngine.Driver.Lookup=function(C00){};V00.ChartEngine.Driver.Lookup.prototype.acceptText=function(m00,k00,o00,A00){if(!this.cb){return;}};}};G54=function G54(M00){var R00;R00=typeof _CIQ!=="undefined"?_CIQ:M00.CIQ;R00.ThemeHelper=R00.ThemeHelper||function(s00){var o3K,e3K,w3K,j3K,t3K,v3K,i3K,y3K,P00,I00;o2QQ.A9d();o3K="st";o3K+="x_line_chart";e3K="stx_candl";e3K+="e_down";w3K="Can";w3K+="dle/";w3K+="B";w3K+="ar";j3K="s";j3K+="tx_candle_up";t3K="stx_candle_shad";t3K+="ow_even";v3K="Candle/";v3K+="Bar";i3K="stx_c";i3K+="andle_sha";i3K+="dow_up";y3K="Candle/B";y3K+="ar";this.params=s00;P00=s00.stx;I00="#FFFFFF";if(P00.chart.container){I00=getComputedStyle(P00.chart.container).backgroundColor;if(R00.isTransparent(I00)){I00=P00.containerColor;}}this.settings.chart.Background.color=R00.hexToRgba(I00);this.settings.chart["Grid Lines"].color=R00.hexToRgba(P00.canvasStyle("stx_grid").color);this.settings.chart["Grid Dividers"].color=R00.hexToRgba(P00.canvasStyle("stx_grid_dark").color);this.settings.chart["Axis Text"].color=R00.hexToRgba(P00.canvasStyle("stx_xaxis").color);this.settings.chartTypes[y3K].up.color=R00.hexToRgba(P00.canvasStyle("stx_candle_up").color);this.settings.chartTypes["Candle/Bar"].down.color=R00.hexToRgba(P00.canvasStyle("stx_candle_down").color);this.settings.chartTypes["Candle/Bar"].up.wick=R00.hexToRgba(P00.canvasStyle(i3K).color);this.settings.chartTypes[v3K].down.wick=R00.hexToRgba(P00.canvasStyle("stx_candle_shadow_down").color);this.settings.chartTypes["Candle/Bar"].even.wick=R00.hexToRgba(P00.canvasStyle(t3K).color);this.settings.chartTypes["Candle/Bar"].up.border=R00.hexToRgba(P00.canvasStyle(j3K).borderLeftColor);this.settings.chartTypes[w3K].down.border=R00.hexToRgba(P00.canvasStyle(e3K).borderLeftColor);if(R00.isTransparent(P00.canvasStyle("stx_candle_up").borderLeftColor)){this.settings.chartTypes["Candle/Bar"].up.border=null;}if(R00.isTransparent(P00.canvasStyle("stx_candle_down").borderLeftColor)){this.settings.chartTypes["Candle/Bar"].down.border=null;}this.settings.chartTypes.Line.color=R00.hexToRgba(P00.canvasStyle(o3K).color);this.settings.chartTypes.Mountain.color=R00.hexToRgba(P00.canvasStyle("stx_mountain_chart").backgroundColor);this.settings.chartTypes.Mountain.basecolor=R00.hexToRgba(P00.canvasStyle("stx_mountain_chart").color);};R00.ThemeHelper.prototype.settings={chart:{Background:{color:null},"Grid Lines":{color:null},"Grid Dividers":{color:null},"Axis Text":{color:null}},chartTypes:{"Candle/Bar":{up:{color:null,wick:null,border:null},down:{color:null,wick:null,border:null},even:{color:null,wick:null,border:null}},Line:{color:null},Mountain:{color:null,basecolor:null}}};o2QQ.l9d();R00.ThemeHelper.prototype.update=function(J00){var c3K,z3K,L3K,d3K,x3K,T3K,F3K,g3K,Y3K,b3K,V3K,v00,H00;c3K="co";c3K+="l";c3K+="or";z3K="stx_mou";z3K+="ntain_chart";L3K="ba";L3K+="c";L3K+="k";L3K+="groundColor";d3K="stx_mou";d3K+="nt";d3K+="ain";d3K+="_chart";x3K="s";x3K+="tx_mountain_char";x3K+="t";T3K="stx_";T3K+="c";T3K+="andle_";T3K+="down";F3K="st";F3K+="x_s";F3K+="hadow_even";g3K="stx_sh";g3K+="adow_up";Y3K="c";Y3K+="o";Y3K+="lor";b3K="stx";b3K+="_candle_";b3K+="up";o2QQ.A9d();V3K="Grid ";V3K+="Di";V3K+="viders";if(!J00){J00=this.params.stx;}v00={stx_candle_up:{stx_candle_up:!!{},stx_bar_up:!!"1",stx_hollow_candle_up:!![],stx_line_up:!0,stx_baseline_up:!!"1"},stx_candle_down:{stx_candle_down:!!"1",stx_bar_down:!!{},stx_hollow_candle_down:!"",stx_line_down:!!1,stx_baseline_down:!![]},stx_candle_even:{stx_hollow_candle_even:!![],stx_bar_even:!![]},stx_shadow_up:{stx_candle_shadow_up:!!"1"},stx_shadow_down:{stx_candle_shadow_down:!0},stx_shadow_even:{stx_candle_shadow_even:!!{}},stx_line_chart:{stx_bar_chart:!!{},stx_line_chart:!![]},stx_grid:{stx_grid:!!1},stx_grid_dark:{stx_grid_dark:!!{}},stx_xaxis:{stx_xaxis_dark:!!"1",stx_xaxis:!!"1",stx_yaxis:!!{},stx_yaxis_dark:!![],stx_grid_border:!![]},stx_mountain_chart:{stx_mountain_chart:!!{}},stx_market_session:{stx_market_session:!!{}}};J00.chart.container.style.backgroundColor=this.settings.chart.Background.color;J00.defaultColor="";l00("stx_grid","color",this.settings.chart["Grid Lines"].color);l00("stx_grid_dark","color",this.settings.chart[V3K].color);l00("stx_xaxis","color",this.settings.chart["Axis Text"].color);H00=this.settings.chartTypes["Candle/Bar"];if(!H00.even){H00.even={color:null,wick:R00.hexToRgba(J00.canvasStyle("stx_candle_shadow_even").color),border:null};}l00(b3K,"color",H00.up.color);l00("stx_candle_down",Y3K,H00.down.color);function l00(u00,r00,d00){o2QQ.A9d();var G00;G00=v00[u00];for(var b00 in G00){J00.setStyle(b00,r00,d00);}}l00("stx_candle_even","color",H00.even.color);l00(g3K,"color",H00.up.wick);l00("stx_shadow_down","color",H00.down.wick);l00(F3K,"color",H00.even.wick);J00.setStyle("stx_candle_up","borderLeftColor",H00.up.border);J00.setStyle(T3K,"borderLeftColor",H00.down.border);l00("stx_line_chart","color",this.settings.chartTypes.Line.color);J00.setStyle(x3K,"borderTopColor",R00.hexToRgba(this.settings.chartTypes.Mountain.color,1));J00.setStyle(d3K,L3K,R00.hexToRgba(this.settings.chartTypes.Mountain.color,0.5));J00.setStyle(z3K,c3K,R00.hexToRgba(this.settings.chartTypes.Mountain.basecolor,"0.01"*1));J00.draw();};R00.ChartEngine.prototype.setThemeSettings=function(Q00){var F00,A3K;this.styles={};this.chart.container.style.backgroundColor="";this.defaultColor="";if(Q00){F00=new R00.ThemeHelper({stx:this});F00.settings=Q00;F00.update();}this.updateListeners("theme");this.changeOccurred("theme");if(this.displayInitialized){A3K="t";A3K+="he";A3K+="m";A3K+="e";this.headsUpHR();this.clearPixelCache();this.updateListeners(A3K);this.draw();}};};b54=function b54(z00){var v9K,i9K,y9K,S9K,U9K,h9K,E9K,M9K,p5K,Z5K,X5K,u5K,m5K,O5K,C5K,K5K,r5K,l5K,R5K,Q5K,a5K,I5K,q5K,W5K,s5K,H5K,f5K,J5K,D5K,G5K,P5K,k5K,N5K,n5K,B5K,A5K,c5K,z5K,L5K,d5K,x5K,T5K,F5K,g5K,Y5K,b5K,V5K,o5K,e5K,w5K,j5K,t5K,v5K,i5K,y5K,S5K,U5K,h5K,E5K,M5K,p0K,Z0K,X0K,u0K,m0K,O0K,C0K,K0K,r0K,l0K,R0K,Q0K,a0K,I0K,q0K,W0K,s0K,H0K,f0K,J0K,D0K,G0K,P0K,k0K,N0K,n0K,B0K,A0K,c0K,z0K,L0K,d0K,x0K,T0K,F0K,g0K,Y0K,b0K,V0K,o0K,e0K,w0K,j0K,t0K,v0K,i0K,y0K,S0K,U0K,h0K,E0K,M0K,p7K,Z7K,X7K,u7K,m7K,O7K,C7K,K7K,r7K,l7K,R7K,Q7K,a7K,I7K,q7K,W7K,s7K,H7K,f7K,J7K,D7K,G7K,P7K,k7K,N7K,n7K,B7K,A7K,c7K,z7K,L7K,d7K,x7K,T7K,F7K,g7K,Y7K,b7K,V7K,o7K,S8K,U8K,h8K,E8K,M8K,p3K,Z3K,X3K,u3K,m3K,O3K,C3K,K3K,r3K,l3K,R3K,Q3K,a3K,I3K,q3K,W3K,s3K,H3K,f3K,J3K,D3K,G3K,P3K,k3K,N3K,n3K,B3K,W00,y00;v9K="m";v9K+="a";v9K+="x";i9K="O";i9K+="c";i9K+="t";y9K="m";y9K+="a";y9K+="x";S9K="m";S9K+="a";o2QQ.A9d();S9K+="x";U9K="Au";U9K+="g";h9K="S";h9K+="u";h9K+="n>=9";E9K="M";E9K+="ay";M9K="S";M9K+="un";M9K+=">=1";p5K="o";p5K+="n";p5K+="l";p5K+="y";Z5K="F";Z5K+="e";Z5K+="b";X5K="O";X5K+="c";X5K+="t";u5K="Sun>=";u5K+="1";m5K="N";m5K+="ov";O5K="Sun";O5K+=">=8";C5K="M";C5K+="ar";K5K="Sun";K5K+=">=8";r5K="M";r5K+="a";r5K+="r";l5K="m";l5K+="a";l5K+="x";R5K="ma";R5K+="x";Q5K="Sun>";Q5K+="=";Q5K+="1";a5K="N";a5K+="o";a5K+="v";I5K="M";I5K+="a";I5K+="r";q5K="l";q5K+="astSu";q5K+="n";W5K="m";W5K+="a";W5K+="x";s5K="Oc";s5K+="t";H5K="M";H5K+="a";H5K+="r";f5K="J";f5K+="a";f5K+="n";J5K="m";J5K+="a";J5K+="x";D5K="m";D5K+="ax";G5K="A";G5K+="p";G5K+="r";P5K="m";P5K+="a";P5K+="x";k5K="m";k5K+="ax";N5K="2";N5K+="0";n5K="o";n5K+="n";n5K+="l";n5K+="y";B5K="Sun";B5K+=">=";B5K+="1";A5K="S";A5K+="u";A5K+="n>";A5K+="=1";c5K="m";c5K+="a";c5K+="x";z5K="Sun>";z5K+="=1";L5K="A";L5K+="p";L5K+="r";d5K="m";d5K+="a";d5K+="x";x5K="Su";x5K+="n>";x5K+="=";x5K+="1";T5K="ma";T5K+="x";F5K="S";F5K+="u";F5K+="n";F5K+=">=1";g5K="l";g5K+="astFri";Y5K="lastF";Y5K+="ri";b5K="m";b5K+="a";b5K+="x";V5K="m";V5K+="a";V5K+="x";o5K="S";o5K+="at>=24";e5K="2";e5K+="9";w5K="on";w5K+="ly";j5K="S";j5K+="at>=24";t5K="Ma";t5K+="r";v5K="l";v5K+="astS";v5K+="u";v5K+="n";i5K="M";i5K+="a";i5K+="r";y5K="m";y5K+="ax";S5K="m";S5K+="a";S5K+="x";U5K="F";U5K+="ri";U5K+=">=2";U5K+="3";h5K="2";h5K+="1";E5K="2";E5K+="1";M5K="2";M5K+="0";p0K="S";p0K+="e";p0K+="p";Z0K="2";Z0K+="1";X0K="S";X0K+="e";X0K+="p";u0K="2";u0K+="1";m0K="M";m0K+="ar";O0K="2";O0K+="0";C0K="S";C0K+="e";C0K+="p";K0K="on";K0K+="l";K0K+="y";r0K="2";r0K+="1";l0K="S";l0K+="e";l0K+="p";R0K="M";R0K+="a";R0K+="r";Q0K="lastS";Q0K+="un";a0K="O";a0K+="c";a0K+="t";I0K="+";I0K+="02";q0K="m";q0K+="a";q0K+="x";W0K="S";W0K+="u";W0K+="n>=";W0K+="1";s0K="on";s0K+="l";s0K+="y";H0K="o";H0K+="n";H0K+="l";H0K+="y";f0K="2";f0K+="7";J0K="o";J0K+="n";J0K+="l";J0K+="y";D0K="1";D0K+="9";G0K="o";G0K+="n";G0K+="l";G0K+="y";P0K="o";P0K+="n";P0K+="l";P0K+="y";k0K="Ma";k0K+="y";N0K="M";N0K+="ar";n0K="last";n0K+="Sun";B0K="Asia/Ri";B0K+="y";B0K+="ad";B0K+="h";A0K="U";A0K+="T";A0K+="C";c0K="A";c0K+="sia/Y";c0K+="ang";c0K+="on";z0K="Eu";z0K+="rope/";z0K+="Moscow";L0K="-";L0K+="04";d0K="U";d0K+="r";d0K+="u";d0K+="guay";x0K="-05";x0K+="/-";x0K+="0";x0K+="4";T0K="-0";T0K+="3";F0K="C";F0K+="hile";g0K="-0";g0K+="3/";g0K+="-0";g0K+="2";Y0K="Ar";Y0K+="g";b0K="H";b0K+="ait";b0K+="i";V0K="C";V0K+="%";V0K+="s";V0K+="T";o0K="M";o0K+="%sT";e0K="M";e0K+="exic";e0K+="o";w0K="C";w0K+="%s";w0K+="T";j0K="C";j0K+="ST";t0K="A";t0K+="%";t0K+="sT";v0K="Ca";v0K+="n";v0K+="a";v0K+="da";i0K="N%";i0K+="sT";y0K="Ca";y0K+="na";y0K+="d";y0K+="a";S0K="U";S0K+="S";U0K="P";U0K+="%s";U0K+="T";h0K="U";h0K+="S";E0K="M";E0K+="%";E0K+="s";E0K+="T";M0K="U";M0K+="S";p7K="+";p7K+="03";Z7K="Europe/B";Z7K+="e";Z7K+="lgra";Z7K+="de";X7K="CE%s";X7K+="T";u7K="+1";u7K+="1";m7K="+";m7K+="0";m7K+="3";O7K="E";O7K+="E";O7K+="T";C7K="C";C7K+="E";C7K+="%sT";K7K="E";K7K+="U";r7K="C";r7K+="E";r7K+="%";r7K+="sT";l7K="EE";l7K+="%s";l7K+="T";R7K="C";R7K+="-E";R7K+="ur";Q7K="E";Q7K+="U";a7K="E";a7K+="U";I7K="Etc/";I7K+="UT";I7K+="C";q7K="U";q7K+="T";q7K+="C";W7K="Ch";W7K+="ST";s7K="+";s7K+="12/";s7K+="+13";H7K="Fij";H7K+="i";f7K="AE%";f7K+="s";f7K+="T";J7K="A";J7K+="V";D7K="AE%s";D7K+="T";G7K="A";G7K+="S";P7K="A";P7K+="W";k7K="AW";k7K+="%s";k7K+="T";N7K="Pa";N7K+="le";N7K+="stine";n7K="Paki";n7K+="st";n7K+="an";B7K="K";B7K+="S";B7K+="T";A7K="K";A7K+="S";A7K+="T";c7K="E";c7K+="E%sT";z7K="Jor";z7K+="dan";L7K="I";L7K+="%";L7K+="s";L7K+="T";d7K="Ir";d7K+="an";x7K="EUA";x7K+="sia";T7K="P";T7K+="R";T7K+="C";F7K="+0";F7K+="4";F7K+="/";F7K+="+05";g7K="A";g7K+="z";g7K+="e";g7K+="r";Y7K="SA";Y7K+="ST";b7K="Mo";b7K+="rocc";b7K+="o";V7K="E";V7K+="E";V7K+="%";V7K+="sT";o7K="-";o7K+="0";o7K+="1";S8K="Pacific/Tongata";S8K+="pu";U8K="Pacific/";U8K+="Auck";U8K+="land";h8K="Australia";h8K+="/Darwin";E8K="Asia/Tok";E8K+="yo";M8K="Asia/Irk";M8K+="uts";M8K+="k";p3K="Asia/";p3K+="H";p3K+="ong_Kong";Z3K="Asia/";Z3K+="Novosibi";Z3K+="rsk";X3K="Asia/Novokuz";X3K+="n";X3K+="e";X3K+="tsk";u3K="As";u3K+="ia/Krasno";u3K+="yarsk";m3K="Asi";m3K+="a/Ho";m3K+="v";m3K+="d";O3K="A";O3K+="sia/D";O3K+="haka";C3K="Asia/";C3K+="Ka";C3K+="thm";C3K+="andu";K3K="Asia/Du";K3K+="b";K3K+="ai";r3K="A";r3K+="s";r3K+="ia";r3K+="/Baku";l3K="Asi";l3K+="a/T";l3K+="ehra";l3K+="n";R3K="Eu";R3K+="rope/Volgograd";Q3K="Asi";Q3K+="a/R";Q3K+="iya";Q3K+="dh";a3K="Asia/Jer";a3K+="usal";a3K+="e";a3K+="m";I3K="Asi";I3K+="a/";I3K+="Nicosia";q3K="Europe/Belgrad";q3K+="e";W3K="Afr";W3K+="ica/Casabl";W3K+="anc";W3K+="a";s3K="Europe/D";s3K+="ublin";H3K="UT";H3K+="C";f3K="Am";f3K+="erica/P";f3K+="u";f3K+="erto_Rico";J3K="America/Hal";J3K+="ifax";D3K="America/New_Y";D3K+="ork";G3K="America/B";G3K+="o";G3K+="g";G3K+="ota";P3K="Ame";P3K+="ric";P3K+="a/Chihua";P3K+="hua";k3K="Americ";k3K+="a/";k3K+="Los_Angeles";N3K="P";N3K+="acific/Honolulu";n3K="Pac";n3K+="ific/P";n3K+="ago_Pago";B3K="und";B3K+="efined";W00=typeof _CIQ!=="undefined"?_CIQ:z00.CIQ;y00=(typeof _timezoneJS==="undefined"?"undefined":_typeof(_timezoneJS))!==B3K?_timezoneJS:z00.timezoneJS;W00.timeZoneMap={"(UTC-11:00) American Samoa, Midway Island":n3K,"(UTC-10:00) Hawaii":N3K,"(UTC-09:00) Alaska":"America/Juneau","(UTC-08:00) Pacific Time (US and Canada), Tijuana":k3K,"(UTC-07:00) Arizona":"America/Phoenix","(UTC-07:00) Chihuahua, Mazatlan":P3K,"(UTC-07:00) Mountain Time (US and Canada)":"America/Denver","(UTC-06:00) Central America":"America/Costa_Rica","(UTC-06:00) Central Time (US and Canada)":"America/Chicago","(UTC-06:00) Guadalajara, Mexico City, Monterrey":"America/Mexico_City","(UTC-06:00) Saskatchewan":"America/Regina","(UTC-05:00) Bogota, Lima, Quito, Rio Branco":G3K,"(UTC-05:00) Eastern Time (US and Canada)":D3K,"(UTC-05:00) Havana":"America/Havana","(UTC-05:00) Port-au-Prince":"America/Port-au-Prince","(UTC-04:00) Asuncion":"America/Asuncion","(UTC-04:00) Santiago":"America/Santiago","(UTC-04:00) Caracas":"America/Caracas","(UTC-04:00) Atlantic Time (Canada)":J3K,"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan":f3K,"(UTC-03:30) Newfoundland and Labrador":"America/St_Johns","(UTC-03:00) Cancun, Jamaica, Panama":"America/Panama","(UTC-03:00) Buenos Aires":"America/Argentina/Buenos_Aires","(UTC-03:00) Punta Arenas":"America/Punta_Arenas","(UTC-03:00) Montevideo":"America/Montevideo","(UTC-03:00) Sao Paulo":"America/Sao_Paulo","(UTC-02:00) Mid-Atlantic":"Atlantic/South_Georgia","(UTC-01:00) Azores":"Atlantic/Azores","(UTC-01:00) Cape Verde Islands":"Atlantic/Cape_Verde","(UTC) Greenwich Mean Time, Reykjavik":H3K,"(UTC) Dublin":s3K,"(UTC) Lisbon, London":"Europe/London","(UTC+01:00) Algiers, Tunis":"Africa/Tunis","(UTC+01:00) Casablanca":W3K,"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna":"Europe/Amsterdam","(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague":q3K,"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris":"Europe/Brussels","(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb":"Europe/Sarajevo","(UTC+02:00) Kaliningrad":"Europe/Kaliningrad","(UTC+02:00) Athens, Bucharest":"Europe/Bucharest","(UTC+02:00) Cairo":"Africa/Cairo","(UTC+02:00) Harare, Johannesburg":"Africa/Johannesburg","(UTC+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius":"Europe/Helsinki","(UTC+02:00) Cyprus":I3K,"(UTC+02:00) Beirut":"Asia/Beirut","(UTC+02:00) Damascus":"Asia/Damascus","(UTC+02:00) Jerusalem":a3K,"(UTC+02:00) Amman":"Asia/Amman","(UTC+03:00) Istanbul":"Europe/Istanbul","(UTC+03:00) Baghdad, Kuwait, Qatar, Riyadh":Q3K,"(UTC+03:00) Minsk, Moscow, Kirov, Simferopol":"Europe/Moscow","(UTC+03:00) Volgograd":R3K,"(UTC+03:00) Nairobi":"Africa/Nairobi","(UTC+03:30) Tehran":l3K,"(UTC+04:00) Baku":r3K,"(UTC+04:00) Dubai, Muscat":K3K,"(UTC+04:00) Astrakhan, Samara, Saratov, Ulyanovsk":"Europe/Samara","(UTC+04:30) Kabul":"Asia/Kabul","(UTC+05:00) Karachi, Tashkent":"Asia/Karachi","(UTC+05:00) Yekaterinburg":"Asia/Yekaterinburg","(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi":"Asia/Kolkata","(UTC+05:45) Kathmandu":C3K,"(UTC+06:00) Almaty":"Asia/Almaty","(UTC+06:00) Omsk":"Asia/Omsk","(UTC+06:00) Astana, Dhaka":O3K,"(UTC+06:30) Yangon":"Asia/Yangon","(UTC+07:00) Bangkok, Jakarta, Vietnam":"Asia/Bangkok","(UTC+07:00) Hovd":m3K,"(UTC+07:00) Krasnoyarsk":u3K,"(UTC+07:00) Novokuznetsk":X3K,"(UTC+07:00) Barnaul, Novosibirsk, Tomsk":Z3K,"(UTC+08:00) Beijing, Chongqing, Hong Kong SAR":p3K,"(UTC+08:00) Brunei, Kuala Lumpur, Singapore":"Asia/Kuala_Lumpur","(UTC+08:00) Irkutsk":M8K,"(UTC+08:00) Choibalsan, Ulaanbaatar":"Asia/Ulaanbaatar","(UTC+08:00) Manila, Taipei":"Asia/Taipei","(UTC+08:00) Perth":"Australia/Perth","(UTC+08:45) Eucla":"Australia/Eucla","(UTC+09:00) Osaka, Sapporo, Tokyo":E8K,"(UTC+09:00) Pyongyang":"Asia/Pyongyang","(UTC+09:00) Seoul":"Asia/Seoul","(UTC+09:00) Chita, Khandyga, Yakutsk":"Asia/Yakutsk","(UTC+09:30) Adelaide":"Australia/Adelaide","(UTC+09:30) Darwin":h8K,"(UTC+10:00) Brisbane":"Australia/Brisbane","(UTC+10:00) Canberra, Melbourne, Sydney":"Australia/Sydney","(UTC+10:00) Guam, Port Moresby":"Pacific/Guam","(UTC+10:00) Ust-Nera, Vladivostok":"Asia/Vladivostok","(UTC+11:00) Noumea, Solomon Islands":"Pacific/Noumea","(UTC+11:00) Magadan":"Asia/Magadan","(UTC+11:00) Sakhalin, Srednekolymsk":"Asia/Srednekolymsk","(UTC+12:00) Anadyr, Kamchatka":"Asia/Kamchatka","(UTC+12:00) Auckland, Wellington":U8K,"(UTC+12:00) Fiji":"Pacific/Fiji","(UTC+12:45) Chatham":"Pacific/Chatham","(UTC+13:00) Tonga":S8K,"(UTC+13:00) Samoa":"Pacific/Apia","(UTC+14:00) Kiritimati":"Pacific/Kiritimati"};(function(){var w8K,j8K,t8K,v8K,i8K,y8K,q30,a30,x30,p00,K30,T30,E30,O30,e00,g30,Y00,c30;w8K="S";w8K+="eptemb";w8K+="er";j8K="J";j8K+="u";j8K+="n";j8K+="e";t8K="Satu";t8K+="r";t8K+="day";v8K="Thur";v8K+="sd";v8K+="ay";i8K="Tuesd";i8K+="ay";y8K="Sun";y8K+="d";y8K+="ay";"use strict";q30=typeof window!=="undefined"?window:null;a30=q30||(typeof global!=="undefined"?global:{});y00.VERSION="0.4.11";x30=a30.$||a30.jQuery||a30.Zepto;p00=a30.fleegix;K30=y00.Days=[y8K,"Monday",i8K,"Wednesday",v8K,"Friday",t8K];T30=y00.Months=["January","February","March","April","May",j8K,"July","August",w8K,"October","November","December"];E30={};O30={};e00={};for(var X00=0;X00<T30.length;X00++){E30[T30[X00].substr(0,3)]=X00;}for(X00=0;X00<K30.length;X00++){O30[K30[X00].substr(0,3)]=X00;}g30=Array.prototype.indexOf||function(w30){var B30,U30,j30,n30;if(this===null){throw new TypeError();}B30=Object(this);U30=B30.length>>>0;if(U30===0){return-+"1";}j30=0;if(arguments.length>"1"*1){j30=Number(arguments[1]);if(j30!=j30){j30=0;}else if(j30!==0&&j30!==Infinity&&j30!==-Infinity){o2QQ.I9X(41);var J6X=o2QQ.L9X(16,6,21);j30=(j30>0||J6X)*Math.floor(Math.abs(j30));}}if(j30>=U30){return-1;}n30=j30>="0"-0?j30:Math.max(U30-Math.abs(j30),0);o2QQ.A9d();for(;n30<U30;n30++){if(n30 in B30&&B30[n30]===w30){return n30;}}return-1;};Y00=function Y00(L30,D30){var x67=o2QQ;var f30,N30,Z30;if(typeof L30!=="number"){x67.I9X(0);throw x67.x9X(L30,"not a number: ");}x67.I9X(133);f30=x67.L9X(2147483647,"1000",L30);N30=L30.toString();Z30=N30.length;if(f30&&Z30>D30){x67.I9X(6);return N30.substr(x67.x9X(D30,Z30),Z30);}N30=[N30];while(Z30<D30){N30.unshift(9040>(3828,1530)?"0":(455.27,"1060"&2147483647)>=(+"713.28",764)?(6260,7303)>1318?0x1f00:"T":"Q");Z30++;}return N30.join("");};c30=function c30(i30){var b8K,V8K,o8K,e8K;b8K="t";b8K+="e";b8K+="x";b8K+="t";V8K="ge";V8K+="t";o8K="a";o8K+="sy";o8K+="nc";e8K="URL must be specifie";e8K+="d";if(!i30){return;}if(!i30.url){throw new Error(e8K);}if(!(o8K in i30)){i30.async=!0;}o2QQ.l9d();if((!p00||typeof p00.xhr==="undefined")&&(!x30||typeof x30.ajax==="undefined")){throw new Error("Please use the Fleegix.js XHR module, jQuery ajax, Zepto ajax, or define your own transport mechanism for downloading zone files.");}if(!i30.async){return p00&&p00.xhr?p00.xhr.doReq({url:i30.url,async:!{}}):x30.ajax({url:i30.url,async:![],dataType:"text"}).responseText;}return p00&&p00.xhr?p00.xhr.send({url:i30.url,method:V8K,handleSuccess:i30.success,handleErr:i30.error}):x30.ajax({url:i30.url,dataType:b8K,method:"GET",error:i30.error,success:i30.success});};y00.ruleCache={};y00.Date=function(){var z67=o2QQ;var g8K,Y8K,S30,V30,m30,h30,k30,t30,F8K;g8K="st";g8K+="r";g8K+="i";g8K+="ng";z67.l9d();Y8K="[obj";Y8K+="ect A";Y8K+="rr";Y8K+="ay]";if(this===y00){throw"timezoneJS.Date object must be constructed with 'new'";}S30=Array.prototype.slice.apply(arguments);V30=null;m30=null;h30=[];k30=!1;if(Object.prototype.toString.call(S30[0])===Y8K){S30=S30[0];}if(typeof S30[S30.length-1]==="string"){k30=Date.parse(S30[S30.length-1].replace(/GMT[+-]\d+/,""));if(isNaN(k30)||k30===null){m30=S30.pop();}}t30=!"1";switch(S30.length){case 0:V30=new Date();break;case 1:V30=new Date(S30[0]);if(_typeof(S30[0])==g8K&&S30[0].search(/[+-][0-9]{4}/)==-1&&S30[0].search(/Z/)==-1&&S30[+"0"].search(/T/)==-1){t30=!!{};}break;case 2:V30=new Date(S30[0],S30[1]);t30=!![];break;default:for(var C30="0"*1;C30<7;C30++){h30[C30]=S30[C30]||0;}z67.I9X(50);V30=new Date(h30[0],h30[1],h30[2],h30[+"3"],h30[4],h30[z67.L9X("5",4)],h30[6]);t30=!!"1";break;}if(isNaN(V30.getTime())){F8K="Inv";F8K+="alid";F8K+=" date";throw new Error(F8K);}this._useCache=!!"";this._tzInfo={};this._day=0;this.year=0;this.month=0;this.date=0;z67.O9X(1);this.hours=z67.L9X(1,"0");this.minutes=0;this.seconds=0;this.milliseconds=0;this.timezone=m30||null;if(t30){this.setFromDateObjProxy(V30);}else{this.setFromTimeProxy(V30.getTime(),m30);}};W00.extend(y00.Date.prototype,{getDate:function getDate(){o2QQ.A9d();return this.date;},getDay:function getDay(){o2QQ.A9d();return this._day;},getFullYear:function getFullYear(){o2QQ.l9d();return this.year;},getMonth:function getMonth(){return this.month;},getYear:function getYear(){o2QQ.O9X(15);var f6X=o2QQ.L9X(450496,14,32300,14);o2QQ.A9d();return this.year-f6X;},getHours:function getHours(){o2QQ.A9d();return this.hours;},getMilliseconds:function getMilliseconds(){o2QQ.A9d();return this.milliseconds;},getMinutes:function getMinutes(){o2QQ.A9d();return this.minutes;},getSeconds:function getSeconds(){return this.seconds;},getUTCDate:function getUTCDate(){return this.getUTCDateProxy().getUTCDate();},getUTCDay:function getUTCDay(){return this.getUTCDateProxy().getUTCDay();},getUTCFullYear:function getUTCFullYear(){return this.getUTCDateProxy().getUTCFullYear();},getUTCHours:function getUTCHours(){return this.getUTCDateProxy().getUTCHours();},getUTCMilliseconds:function getUTCMilliseconds(){return this.getUTCDateProxy().getUTCMilliseconds();},getUTCMinutes:function getUTCMinutes(){o2QQ.A9d();return this.getUTCDateProxy().getUTCMinutes();},getUTCMonth:function getUTCMonth(){o2QQ.l9d();return this.getUTCDateProxy().getUTCMonth();},getUTCSeconds:function getUTCSeconds(){o2QQ.A9d();return this.getUTCDateProxy().getUTCSeconds();},getTime:function getTime(){var P8d=o2QQ;P8d.I9X(134);var H6X=P8d.L9X(1665,15,57,2,15);P8d.O9X(26);P8d.l9d();var s6X=P8d.L9X(1,83,5,912);return this._timeProxy+this.getTimezoneOffset()*H6X*s6X;},getTimezone:function getTimezone(){o2QQ.l9d();return this.timezone;},getTimezoneOffset:function getTimezoneOffset(){o2QQ.A9d();return this.getTimezoneInfo().tzOffset;},getTimezoneAbbreviation:function getTimezoneAbbreviation(){return this.getTimezoneInfo().tzAbbr;},getTimezoneInfo:function getTimezoneInfo(){var o30;o2QQ.l9d();if(this._useCache){return this._tzInfo;}if(this.timezone){o30=this.timezone==="Etc/UTC"||this.timezone==="Etc/GMT"?{tzOffset:0,tzAbbr:"UTC"}:y00.timezone.getTzInfo(this._timeProxy,this.timezone);}else{o30={tzOffset:this.getLocalOffset(),tzAbbr:null};}this._tzInfo=o30;this._useCache=!!{};return o30;},getUTCDateProxy:function getUTCDateProxy(){var A30;A30=new Date(this._timeProxy);A30.setUTCMinutes(A30.getUTCMinutes()+this.getTimezoneOffset());o2QQ.l9d();return A30;},setDate:function setDate(R30){var T8K;T8K="da";T8K+="t";T8K+="e";this.setAttribute(T8K,R30);o2QQ.l9d();return this.getTime();},setFullYear:function setFullYear(I30,P30,M30){var x8K;if(M30!==undefined){this.setAttribute("date",1);}this.setAttribute("year",I30);if(P30!==undefined){this.setAttribute("month",P30);}if(M30!==undefined){x8K="d";x8K+="at";x8K+="e";this.setAttribute(x8K,M30);}return this.getTime();},setMonth:function setMonth(J30,s30){var d8K;d8K="m";o2QQ.A9d();d8K+="on";d8K+="th";this.setAttribute(d8K,J30);if(s30!==undefined){this.setAttribute("date",s30);}return this.getTime();},setYear:function setYear(H30){H30=Number(H30);o2QQ.l9d();if(0<=H30&&H30<=99){H30+=1900;}this.setUTCAttribute("year",H30);return this.getTime();},setHours:function setHours(b30,l30,v30,G30){var L8K;this.setAttribute("hours",b30);if(l30!==undefined){this.setAttribute("minutes",l30);}if(v30!==undefined){this.setAttribute("seconds",v30);}if(G30!==undefined){L8K="mil";L8K+="lis";L8K+="eco";L8K+="nds";this.setAttribute(L8K,G30);}return this.getTime();},setMinutes:function setMinutes(d30,u30,r30){this.setAttribute("minutes",d30);if(u30!==undefined){this.setAttribute("seconds",u30);}if(r30!==undefined){this.setAttribute("milliseconds",r30);}return this.getTime();},setSeconds:function setSeconds(Q30,F30){o2QQ.l9d();var z8K;this.setAttribute("seconds",Q30);if(F30!==undefined){z8K="mi";z8K+="lliseconds";this.setAttribute(z8K,F30);}return this.getTime();},setMilliseconds:function setMilliseconds(y30){this.setAttribute("milliseconds",y30);o2QQ.l9d();return this.getTime();},setTime:function setTime(W30){var c8K;if(isNaN(W30)){c8K="Units mus";c8K+="t b";c8K+="e a number.";throw new Error(c8K);}this.setFromTimeProxy(W30,this.timezone);o2QQ.l9d();return this.getTime();},setUTCFullYear:function setUTCFullYear(X30,e30,z30){var A8K;if(z30!==undefined){this.setUTCAttribute("date",1);}this.setUTCAttribute("year",X30);if(e30!==undefined){this.setUTCAttribute("month",e30);}if(z30!==undefined){A8K="d";A8K+="a";A8K+="t";A8K+="e";this.setUTCAttribute(A8K,z30);}return this.getTime();},setUTCMonth:function setUTCMonth(Y30,p30){o2QQ.l9d();this.setUTCAttribute("month",Y30);if(p30!==undefined){this.setUTCAttribute("date",p30);}return this.getTime();},setUTCDate:function setUTCDate(E90){this.setUTCAttribute("date",E90);o2QQ.l9d();return this.getTime();},setUTCHours:function setUTCHours(O90,a90,x90,K90){var B8K;this.setUTCAttribute("hours",O90);if(a90!==undefined){B8K="min";B8K+="ut";B8K+="e";B8K+="s";this.setUTCAttribute(B8K,a90);}if(x90!==undefined){this.setUTCAttribute("seconds",x90);}if(K90!==undefined){this.setUTCAttribute("milliseconds",K90);}return this.getTime();},setUTCMinutes:function setUTCMinutes(c90,T90,q90){var n8K;this.setUTCAttribute("minutes",c90);if(T90!==undefined){n8K="sec";n8K+="on";n8K+="d";n8K+="s";this.setUTCAttribute(n8K,T90);}o2QQ.l9d();if(q90!==undefined){this.setUTCAttribute("milliseconds",q90);}return this.getTime();},setUTCSeconds:function setUTCSeconds(j90,g90){this.setUTCAttribute("seconds",j90);if(g90!==undefined){this.setUTCAttribute("milliseconds",g90);}return this.getTime();},setUTCMilliseconds:function setUTCMilliseconds(n90){this.setUTCAttribute("milliseconds",n90);return this.getTime();},setFromDateObjProxy:function setFromDateObjProxy(U90){this.year=U90.getFullYear();this.month=U90.getMonth();this.date=U90.getDate();this.hours=U90.getHours();this.minutes=U90.getMinutes();this.seconds=U90.getSeconds();this.milliseconds=U90.getMilliseconds();this._day=U90.getDay();o2QQ.l9d();this._dateProxy=U90;this._timeProxy=Date.UTC(this.year,this.month,this.date,this.hours,this.minutes,this.seconds,this.milliseconds);this._useCache=!{};},setFromTimeProxy:function setFromTimeProxy(w90,N90){var B90,Z90;o2QQ.l9d();B90=new Date(w90);Z90=N90?y00.timezone.getTzInfo(w90,N90,!"").tzOffset:B90.getTimezoneOffset();B90.setTime(w90+(B90.getTimezoneOffset()-Z90)*60000);this.setFromDateObjProxy(B90);},setAttribute:function setAttribute(L90,f90){var D90,i90;if(isNaN(f90)){throw new Error("Units must be a number.");}o2QQ.l9d();D90=this._dateProxy;i90=L90==="year"?"FullYear":L90.substr("0"*1,1).toUpperCase()+L90.substr(1);D90["set"+i90](f90);this.setFromDateObjProxy(D90);},setUTCAttribute:function setUTCAttribute(h90,V90){var k8K,N8K,t90,S90;k8K="yea";k8K+="r";if(isNaN(V90)){N8K="Un";N8K+="its must be a ";N8K+="number.";throw new Error(N8K);}t90=h90===k8K?"FullYear":h90.substr(0,"1"<<1690750528).toUpperCase()+h90.substr(1);S90=this.getUTCDateProxy();S90["setUTC"+t90](V90);S90.setUTCMinutes(S90.getUTCMinutes()-this.getTimezoneOffset());this.setFromTimeProxy(S90.getTime()+this.getTimezoneOffset()*60000,this.timezone);},setTimezone:function setTimezone(m90){o2QQ.A9d();var C90;C90=this.getTimezoneInfo().tzOffset;this.timezone=m90;this._useCache=!!0;this.setUTCMinutes(this.getUTCMinutes()-this.getTimezoneInfo().tzOffset+C90);},removeTimezone:function removeTimezone(){this.timezone=null;o2QQ.l9d();this._useCache=!"1";},valueOf:function valueOf(){return this.getTime();},clone:function clone(){return this.timezone?new y00.Date(this.getTime(),this.timezone):new y00.Date(this.getTime());},toGMTString:function toGMTString(){var G8K,P8K;G8K="E";G8K+="t";G8K+="c";G8K+="/GMT";P8K="EEE, dd MM";P8K+="M yyyy HH:mm:ss ";P8K+="Z";return this.toString(P8K,G8K);},toLocaleStringIntl:function toLocaleStringIntl(){},toLocaleDateString:function toLocaleDateString(){},toLocaleTimeString:function toLocaleTimeString(){},toSource:function toSource(){},toISOString:function toISOString(){var T8d=o2QQ;var D8K;D8K="Etc/";D8K+="UTC";T8d.O9X(107);var W6X=T8d.L9X(6786,6794,3397);T8d.I9X(135);var q6X=T8d.x9X(2152,11,8,19,38763);T8d.O9X(94);var I6X=T8d.L9X(7576,113656,8,2);T8d.O9X(136);var a6X=T8d.x9X(708,118,9,7009,14);T8d.O9X(30);var Q6X=T8d.L9X(246,18,4346);T8d.I9X(21);var R6X=T8d.L9X(511,7,7140);T8d.I9X(5);var l6X=T8d.L9X(9,5,2844);T8d.O9X(137);var r6X=T8d.x9X(9899,9884,9879,5);T8d.A9d();return this.toString("yyyy-MM-ddTHH:mm:ss.SSS",D8K)+(W6X<("6896"|q6X,I6X)?"Z":(a6X,Q6X)==R6X?l6X:(828.76,+"1827")>=(375.26,115.3)?("7.40e+3"-0,!{}):(451.28,r6X));},toJSON:function toJSON(){return this.toISOString();},toDateString:function toDateString(){var J8K;J8K="EE";J8K+="E MMM dd yyy";J8K+="y";return this.toString(J8K);},toTimeString:function toTimeString(){var f8K;o2QQ.A9d();f8K="H";f8K+=":mm k";return this.toString(f8K);},toString:function toString(R90,A90){var H8K,M90,P90,k90,o90;o2QQ.A9d();H8K="yyyy-MM-ddTHH:mm";H8K+=":s";H8K+="s.SSS";if(!R90){R90=H8K;}M90=R90;P90=A90?y00.timezone.getTzInfo(this.getTime(),A90):this.getTimezoneInfo();k90=this;if(A90){k90=this.clone();k90.setTimezone(A90);}o90=k90.getHours();return M90.replace(/a+/g,function(){o2QQ.A9d();return"k";}).replace(/y+/g,function(I90){o2QQ.A9d();return Y00(k90.getFullYear(),I90.length);}).replace(/d+/g,function(s90){return Y00(k90.getDate(),s90.length);}).replace(/m+/g,function(J90){o2QQ.l9d();return Y00(k90.getMinutes(),J90.length);}).replace(/s+/g,function(H90){return Y00(k90.getSeconds(),H90.length);}).replace(/S+/g,function(l90){o2QQ.A9d();return Y00(k90.getMilliseconds(),l90.length);}).replace(/h+/g,function(v90){o2QQ.l9d();return Y00(o90%12===0?12:o90%12,v90.length);}).replace(/M+/g,function(u90){var b90,G90;o2QQ.A9d();b90=k90.getMonth();G90=u90.length;if(G90>3){return y00.Months[b90];}else if(G90>("2"^0)){return y00.Months[b90].substring(+"0",G90);}o2QQ.I9X(0);return Y00(o2QQ.L9X(1,b90),G90);}).replace(/k+/g,function(){if(o90>=12){if(o90>12){o90-=12;}return"PM";}return"AM";}).replace(/H+/g,function(r90){o2QQ.A9d();return Y00(o90,r90.length);}).replace(/E+/g,function(d90){o2QQ.l9d();return K30[k90.getDay()].substring(0,d90.length);}).replace(/Z+/gi,function(){return P90.tzAbbr;});},toUTCString:function toUTCString(){o2QQ.A9d();return this.toGMTString();},civilToJulianDayNumber:function civilToJulianDayNumber(y90,F90,e90){var E8d=o2QQ;var Q90,W90,z90;F90++;if(F90>12){E8d.I9X(138);Q90=parseInt(E8d.x9X("12",F90,1267367424),10);E8d.I9X(73);F90=E8d.L9X(12,F90);y90+=Q90;}if(F90<=2){y90-=1;F90+=12;}E8d.I9X(27);E8d.l9d();Q90=Math.floor(E8d.x9X(y90,"100"));E8d.I9X(12);var K6X=E8d.L9X(12,17,24,301);W90=+"2"-Q90+Math.floor(Q90/K6X);E8d.I9X(105);var C6X=E8d.x9X(20,3528,11,1179);E8d.O9X(139);var O6X=E8d.x9X(8,2,10,13);E8d.O9X(22);var m6X=E8d.L9X(9,25908,24375);z90=Math.floor(365.25*(y90+C6X))+Math.floor(30.6001*(F90+O6X))+e90+W90-m6X;return z90;},getLocalOffset:function getLocalOffset(){o2QQ.A9d();return this._dateProxy.getTimezoneOffset();}},!![]);y00.timezone=new function(){var v7K,i7K,m8K,O8K,C8K,K8K,r8K,l8K,R8K,Q8K,a8K,I8K,q8K,W8K,s8K,X90,a70,x70;v7K="backw";v7K+="ar";v7K+="d";i7K="a";i7K+="si";i7K+="a";m8K="e";m8K+="tcetera";O8K="e";O8K+="urop";O8K+="e";C8K="eur";C8K+="o";C8K+="p";C8K+="e";K8K="e";K8K+="urope";r8K="australa";r8K+="sia";l8K="a";l8K+="fr";function q70(w70,U70){var s17=o2QQ;var y69,i69,v69,B70;y69=-1267695221;i69=-889544583;v69=2;for(var j69=1;s17.g19(j69.toString(),j69.toString().length,"51663"|198)!==y69;j69++){s17.I9X(21);var u6X=s17.x9X(1475,8,12);s17.I9X(30);var X6X=s17.x9X(254588970,13,3055067650);s17.O9X(0);var Z6X=s17.x9X(7,8933);s17.I9X(11);var p6X=s17.L9X(39676,2,34010);s17.O9X(140);var M8X=s17.L9X(186,11,13,5,917);s17.I9X(141);var E8X=s17.L9X(15,538,20,5,806457);s17.I9X(6);var h8X=s17.x9X(25267,27564);s17.O9X(142);var U8X=s17.x9X(901629,53544,18,17,19);s17.O9X(0);var S8X=s17.L9X(11,13249);s17.O9X(6);var y8X=s17.L9X(5,674307);s17.O9X(143);var i8X=s17.x9X(4,191800631,3,3,767202502);s17.O9X(144);var v8X=s17.L9X(1649,17,975,970,1);B70=X90.zoneFileBasePath%((u6X,"1500"<<X6X)<=(Z6X,1298)?p6X==(M8X,E8X)?"":h8X===U8X?S8X:(y8X,"0xb79b">>i8X):(v8X,!![]))/w70;v69+=2;}if(s17.Y19(v69.toString(),v69.toString().length,50432)!==i69){s17.I9X(0);var t8X=s17.x9X(8836,884);s17.I9X(145);var j8X=s17.L9X(2,442,5,416,11);s17.O9X(11);var w8X=s17.x9X(4108,20,3);s17.O9X(107);var e8X=s17.x9X(4283,6411,3);s17.O9X(146);var o8X=s17.x9X(1,1,1226,6);s17.O9X(0);var V8X=s17.x9X(14,8557);s17.I9X(0);var b8X=s17.x9X(17,9403);s17.I9X(147);var Y8X=s17.x9X(19,7,7955,6,1);s17.O9X(148);var g8X=s17.L9X(1,2250,7,15,559);B70=X90.zoneFileBasePath+((t8X,+"1538")<(j8X,w8X)?e8X!==(o8X,"711"^0)?"/":V8X!=+"8904"?b8X:(946.74,Y8X):(g8X,!1))+w70;}s17.l9d();return!U70||!U70.async?X90.parseZones(X90.transport({url:B70,async:!!""})):X90.transport({async:!!"1",url:B70,success:function success(N70){var X8K;X8K="f";s17.l9d();X8K+="unction";return X90.parseZones(N70)&&_typeof(U70.callback)===X8K&&U70.callback();},error:function error(){var p8K,Z8K;p8K="' zoneinfo fi";s17.l9d();p8K+="l";p8K+="e";p8K+="s";Z8K="Error retriev";Z8K+="ing '";s17.O9X(21);throw new Error(s17.x9X(Z8K,B70,p8K));}});}l8K+="i";l8K+="ca";R8K="afri";R8K+="c";R8K+="a";Q8K="eu";Q8K+="rope";a8K="eu";a8K+="r";a8K+="op";a8K+="e";I8K="afr";function K70(n70){var u8K;u8K="' i";u8K+="s either incorrect, or not loaded in the timezone registry.";o2QQ.l9d();o2QQ.I9X(21);throw new Error(o2QQ.x9X("Timezone '",n70,u8K));}I8K+="i";I8K+="c";I8K+="a";q8K="austral";q8K+="asia";W8K="n";function c70(t70){var o70,m70,k70,C70;if(!t70[3]){return;}o70=parseInt(t70[3],10);m70=11;k70=31;if(t70[4]){m70=E30[t70[+"4"].substr(o2QQ.L9X(988038976,"0",o2QQ.I9X(53)),3)];k70=parseInt(t70[5],10)||1;}C70=t70[6]?Y90(t70[6]):[0,0,0];return[o70,m70,k70,C70[0],C70[1],C70[2]];}W8K+="orthamerica";s8K="northamer";s8K+="i";s8K+="c";s8K+="a";function T70(G70,b70){o2QQ.I9X(6);return-Math.ceil(o2QQ.L9X(G70,b70));}X90=this;a70={Etc:"etcetera",EST:"northamerica",MST:"northamerica",HST:"northamerica",EST5EDT:"northamerica",CST6CDT:s8K,MST7MDT:W8K,PST8PDT:"northamerica",America:["northamerica","southamerica"],Pacific:q8K,Atlantic:"europe",Africa:I8K,Indian:"africa",Antarctica:"antarctica",Asia:"asia",Australia:"australasia",Europe:a8K,WET:"europe",CET:Q8K,MET:"europe",EET:"europe"};x70={"Pacific/Honolulu":"northamerica","Atlantic/Bermuda":"northamerica","Atlantic/Cape_Verde":R8K,"Atlantic/St_Helena":l8K,"Indian/Kerguelen":"antarctica","Indian/Chagos":"asia","Indian/Maldives":"asia","Indian/Christmas":r8K,"Indian/Cocos":"australasia","America/Danmarkshavn":"europe","America/Scoresbysund":"europe","America/Godthab":"europe","America/Thule":"europe","Asia/Istanbul":"europe","Asia/Yekaterinburg":K8K,"Asia/Omsk":"europe","Asia/Novosibirsk":"europe","Asia/Krasnoyarsk":"europe","Asia/Irkutsk":"europe","Asia/Yakutsk":"europe","Asia/Vladivostok":"europe","Asia/Sakhalin":"europe","Asia/Magadan":C8K,"Asia/Kamchatka":O8K,"Asia/Anadyr":"europe","Africa/Ceuta":"europe",GMT:m8K,"Europe/Nicosia":"asia"};this.zoneFileBasePath=null;function p90(Z70){var L70,i70,D70,f70;L70=x70[Z70];if(L70){return L70;}i70=Z70.split((751.99,656.23)!=592?4980==(616.16,4032)?(+"2371",3265)==(3660,405.4)?0x105e:+"141.21":"/":(881,!!1))[0];D70=a70[i70];if(D70){return D70;}f70=X90.zones[Z70];if(typeof f70==="string"){return p90(f70);}if(!X90.loadedZones.backward){X90.loadZoneFile("backward");return p90(Z70);}K70(Z70);}this.zoneFiles=["africa","antarctica",i7K,"australasia",v7K,"etcetera","europe","northamerica","pacificnew","southamerica"];this.loadingSchemes={PRELOAD_ALL:"preloadAll",LAZY_LOAD:"lazyLoad",MANUAL_LOAD:"manualLoad"};function Y90(V70){var h70,S70;h70=/(\d+)(?::0*(\d*))?(?::0*(\d*))?([wsugz])?$/;S70=V70.match(h70);S70[+"1"]=parseInt(S70[1],10);S70[2]=S70[2]?parseInt(S70["2"<<1110321408],10):0;S70[3]=S70[3]?parseInt(S70[3],10):0;return S70.slice(1,5);}this.getRegionForTimezone=p90;this.loadingScheme=this.loadingSchemes.LAZY_LOAD;this.loadedZones={};this.zones={};this.rules={};this.init=function(J20){var t7K,I20,H20;t7K="north";t7K+="amer";t7K+="i";t7K+="ca";I20={async:!!"1"};H20=this.loadingScheme===this.loadingSchemes.PRELOAD_ALL?this.zoneFiles:this.defaultZoneFile||t7K;for(var s20 in J20){I20[s20]=J20[s20];}o2QQ.A9d();return this.loadZoneFiles(H20,I20);};this.loadZoneFiles=function(v20,l20){var b20,u20;u20=+"0";if(typeof v20==="string"){return this.loadZoneFile(v20,l20);}o2QQ.l9d();l20=l20||{};b20=l20.callback;l20.callback=function(){u20++;u20===v20.length&&typeof b20==="function"&&b20();};for(var G20=0;G20<v20.length;G20++){this.loadZoneFile(v20[G20],l20);}};this.loadZoneFile=function(r20,d20){if(typeof this.zoneFileBasePath==="undefined"){throw new Error("Please define a base path to your zone file directory -- timezoneJS.timezone.zoneFileBasePath.");}if(this.loadedZones[r20]){return;}this.loadedZones[r20]=!![];return q70(r20,d20);};function O70(l70){var e17=o2QQ;var H70,v70;H70=Y90(l70);v70=l70.charAt(0)===( false?undefined:"-")?-("1"^0):1;e17.O9X(60);var F8X=e17.L9X(13,53,12,720,15);e17.O9X(14);var T8X=e17.x9X(20,18,10,10);e17.I9X(22);var x8X=e17.L9X(12,10000,8988);H70=v70*(((H70[+"0"]*+"60"+H70[+"1"])*F8X+H70[T8X])*x8X);e17.I9X(149);return e17.L9X(60,H70,1000);}function j70(P20,R20){var A20,y7K,M20;o2QQ.l9d();A20=P20[2];if(A20.indexOf("%s")>-1){y7K="%";y7K+="s";if(R20){M20=R20["7"-0]==="-"?"":R20[7];}else{M20="8074"*1>=("391.04"-0,4970)?"S":(!{},1.63e+2);}return A20.replace(y7K,M20);}else if(A20.indexOf("/")>-1){return A20.split("/",2)[R20?R20[6]?1:"0">>280918272:0];}return A20;}this.loadZoneJSONData=function(Q20,y20){var F20;F20=function F20(W20){W20=JSON.parse(W20);for(var z20 in W20.zones){X90.zones[z20]=W20.zones[z20];}o2QQ.A9d();for(var e20 in W20.rules){X90.rules[e20]=W20.rules[e20];}};return y20?F20(X90.transport({url:Q20,async:!{}})):X90.transport({url:Q20,success:F20});};this.loadZoneDataFromObject=function(X20){if(!X20){return;}o2QQ.A9d();for(var p20 in X20.zones){X90.zones[p20]=X20.zones[p20];}for(var Y20 in X20.rules){X90.rules[Y20]=X20.rules[Y20];}};this.getAllZones=function(){var E50;o2QQ.l9d();E50=[];for(var a50 in this.zones){E50.push(a50);}return E50.sort();};this.parseZones=function(j50){var z17=o2QQ;var c50,x50,g50,K50,O50,T50,j7K,w7K,e7K;if(!j50){return!{};}c50=j50.split(5670<7135?(94,2550)<="769"<<604015168?0x1370:"\n":"F");z17.A9d();x50=[];g50="";O50=null;T50=null;for(var q50=0;q50<c50.length;q50++){K50=c50[q50];if(K50.match(/^\s/)){j7K="Zone";j7K+=" ";z17.O9X(21);K50=z17.x9X(j7K,O50,K50);}K50=K50.split( true?"#":(undefined))[0];if(K50.length>3){w7K="Ru";w7K+="l";w7K+="e";x50=K50.split(/\s+/);g50=x50.shift();switch(g50){case"Zone":O50=x50.shift();if(!X90.zones[O50]){X90.zones[O50]=[];}if(x50.length<3)break;x50.splice(3,x50.length,c70(x50));if(x50[3]){x50[3]=Date.UTC.apply(null,x50[3]);}x50[0]=-O70(x50[0]);X90.zones[O50].push(x50);break;case w7K:T50=x50.shift();if(!X90.rules[T50]){X90.rules[T50]=[];}x50[0]=parseInt(x50[0],10);x50[1]=parseInt(x50[1],10)||x50[1];z17.O9X(49);x50[z17.L9X(0,"5")]=Y90(x50[5]);x50[6]=O70(x50[6]);X90.rules[T50].push(x50);break;case"Link":if(X90.zones[x50[1]]){e7K=". Cannot create lin";e7K+="k of a preexisted zone.";z17.I9X(6);var d8X=z17.L9X(19,20);throw new Error("Error with Link "+x50[d8X]+e7K);}if(isNaN(x50[0])){X90.zones[x50[1]]=x50[+"0"];}else{X90.zones[x50[1]]=parseInt(x50[0],10);}break;}}}return!![];};function g70(p70,K20,O20,T20){var Y67=o2QQ;var Y70,y70,E20,W70,U7K,z70,e70,a20,x20,F70,u70,Q70,X70,d70;Y70=typeof p70==="number"?new Date(p70):p70;Y67.I9X(74);y70=K20[Y67.x9X(2147483647,"1")];E20=K20[0];W70=y70.match(/^([0-9]):([0-9][0-9])$/);if(W70){U7K="J";U7K+="an";Y67.O9X(13);var L8X=Y67.x9X(2,2,2);Y67.I9X(150);var z8X=Y67.x9X(1,4,16,3,13);Y67.O9X(151);var c8X=Y67.x9X(11,780,8509,11);Y67.O9X(22);var A8X=Y67.L9X(12,14,0);return[-1000000,"max",("7640"<<1664662720,3330)!==9786?(7717,"965.34"-0)===9310?0xd3a:(3310,6219)!=4820?"-":"890.09"*1:(!{},"7.66e+3"|3084),U7K,1,[0,0,0],parseInt(W70[L8X],z8X)*c8X+parseInt(W70[A8X],+"10"),3102<=+"502.09"?(!"1","b"):"-"];}z70=function z70(g20,q20,j20){var c20;c20=0;if(q20===(+"9340"===(8951,5930)?!"":"u")||q20===((3240,+"513.35")!==(14.99,464.62)?"g":(983.99,5460)>(+"7432",+"3367")?5653<=648.13?"k":"Z":"K")||q20===( true?"z":undefined)){c20=0;}else if(q20===(974<5384?"s":(275,!!"1"))){c20=E20;}else if(q20==="w"||!q20){c20=T70(E20,j20[6]);}else{Y67.I9X(0);throw new Error(Y67.x9X(q20,"unknown type "));}Y67.l9d();Y67.I9X(1);c20*=Y67.L9X(1000,60);return new Date(g20.getTime()+c20);};e70=function e70(D20,f20){var w20,n20,B20,U20,B69,n69,N69,S7K,N20,L20,J19,f19,H19,Z20;Y67.l9d();w20=D20[0];n20=D20[1];B20=n20[+"5"];if(!e00[w20]){e00[w20]={};}if(e00[w20][n20]){U20=e00[w20][n20];}else{if(!isNaN(n20[4])){B69=-286940912;n69=1628168614;Y67.O9X(53);N69=Y67.x9X(570773600,"2");for(var P69=1;Y67.g19(P69.toString(),P69.toString().length,+"32481")!==B69;P69++){U20=new Date(Date.UTC(w20,E30[n20[7]],n20[7],B20[6],B20[4],B20[7],8));N69+=2;}if(Y67.Y19(N69.toString(),N69.toString().length,"50871"&2147483647)!==n69){U20=new Date(Date.UTC(w20,E30[n20[7]],n20["7"*1],B20[6],B20[+"4"],B20[7],8));}U20=new Date(Date.UTC(w20,E30[n20[3]],n20[4],B20[0],B20[+"1"],B20[+"2"],0));}else{S7K=">";S7K+="=";if(n20[4].substr(0,4)==="last"){U20=new Date(Date.UTC(w20,E30[n20["3"<<664190080]]+ +"1",1,B20[+"0"]-24,B20[1],B20[2],0));N20=O30[n20[+"4"].substr(Y67.x9X(454947168,"4",Y67.I9X(53)),3)];L20="<=";}else{U20=new Date(Date.UTC(w20,E30[n20[3]],n20[4].substr(5),B20[0],B20[1],B20[+"2"],0));J19=-689123292;f19=1374374708;H19=2;for(var W19=1;Y67.g19(W19.toString(),W19.toString().length,26404)!==J19;W19++){N20=O30[n20[5].substr(+"4",4)];Y67.O9X(35);L20=n20[0].substr(+"1",Y67.x9X(1488397440,"4"));H19+=2;}if(Y67.Y19(H19.toString(),H19.toString().length,38695)!==f19){N20=O30[n20[4].substr(0,3)];L20=n20[4].substr(3,2);}}Z20=U20.getUTCDay();if(L20===S7K){U20.setUTCDate(U20.getUTCDate()+(N20-Z20+(N20<Z20?7:+"0")));}else{U20.setUTCDate(U20.getUTCDate()+(N20-Z20-(N20>Z20?"7"^0:0)));}}e00[w20][n20]=U20;}if(f20){U20=z70(U20,B20[3],f20);}return U20;};a20=function a20(h20,S20){var V20;V20=[];for(var i20=0;S20&&i20<S20.length;i20++){if(S20[i20][0]<=h20&&(S20[i20][1]>=h20||S20[i20][+"0"]===h20&&S20[i20][1]==="only"||S20[i20][1]==="max")){V20.push([h20,S20[i20]]);}}return V20;};x20=function x20(t20,C20,m20){var k20,o20,P39,G39,D39;if(!(t20 instanceof Date)){k20=t20[0];o20=t20[1];t20=!m20&&e00[k20]&&e00[k20][o20]?e00[k20][o20]:e70(t20,m20);}else if(m20){t20=z70(t20,O20? true?"u":undefined:+"9980"==("197.25"-0,322.02)?(0x2eb,"m"):"w",m20);}if(!(C20 instanceof Date)){k20=C20[0];P39=-863352383;G39=927220992;D39=2;for(var f39=1;Y67.g19(f39.toString(),f39.toString().length,45356)!==P39;f39++){o20=C20[2];C20=+m20||e00[k20]||e00[k20][o20]?e00[k20][o20]:e70(C20,m20);D39+=2;}if(Y67.Y19(D39.toString(),D39.toString().length,86602)!==G39){o20=C20[+"1"];C20=!m20&&e00[k20]&&e00[k20][o20]?e00[k20][o20]:e70(C20,m20);}}else if(m20){C20=z70(C20,O20?(4463,+"5765")==212.77?(!!1,7.52e+3):"u":7170!==(8500,1440)?"w":!1,m20);}t20=Number(t20);C20=Number(C20);Y67.I9X(6);return Y67.x9X(C20,t20);};F70=Y70.getUTCFullYear();Q70=y00.ruleCache[T20];if(!Q70){Q70=y00.ruleCache[T20]={};}u70=Q70[F70];Y67.A9d();if(!u70){Y67.I9X(6);u70=a20(Y67.x9X(1,F70),X90.rules[y70]);u70=u70.concat(a20(F70,X90.rules[y70]));u70.sort(x20);Q70[F70]=u70;}if(!u70||!u70.length){return null;}for(var r70=u70.length-1;r70>=+"0";r70--){if(r70>0){Y67.O9X(114);X70=u70[Y67.x9X(r70,"1")][+"1"];}else{X70=null;}d70=u70[r70];if(!d70[2]){d70[2]=e70(d70,X70);;}if(x20(Y70,d70,X70)>=0){return d70[1];}}return null;;}this.transport=c30;function E70(M70,I70){var p67=o2QQ;var E7K,M7K,J70,A70,R70,h7K,s70;E7K="s";E7K+="t";E7K+="ring";M7K="nu";M7K+="mb";M7K+="er";J70=_typeof(M70)===M7K?M70:new Date(+M70).getTime();A70=I70;R70=X90.zones[A70];while(_typeof(R70)===E7K){A70=R70;R70=X90.zones[A70];}if(!R70){if(!X90.loadedZones.backward){X90.loadZoneFile("backward");return E70(M70,I70);}else if(A70&&A70!==I70){X90.lazyLoadZoneFiles(A70);return E70(M70,A70);}K70(A70);}if(R70.length===0){h7K="No";h7K+=" Zone";h7K+=" foun";h7K+="d for '";p67.I9X(43);throw new Error(p67.L9X(M70,I70,h7K,"' on "));}for(var P70=R70.length-1;P70>=0;P70--){s70=R70[P70];if(s70[3]&&J70>s70["3"^0])break;}p67.I9X(0);return R70[p67.x9X(1,P70)];}this.getTzInfo=function(N50,w50,L50){var n50,U50,B50,Z50;this.lazyLoadZoneFiles(w50);n50=E70(N50,w50);U50=+n50[0];B50=g70(N50,n50,L50,w50);if(B50){U50=T70(U50,B50[6]);}Z50=j70(n50,B50);return{tzOffset:U50,tzAbbr:Z50};};this.lazyLoadZoneFiles=function(f50){var D50;if(this.loadingScheme===this.loadingSchemes.LAZY_LOAD){D50=p90(f50);if(!D50){throw new Error("Not a valid timezone ID.");}this.loadZoneFiles(D50);}};}();}).call(typeof window!=="undefined"?window:_this);y00.timezone.loadingScheme=y00.timezone.loadingSchemes.MANUAL_LOAD;y00.timezone.loadZoneDataFromObject({zones:{"Atlantic/Cape_Verde":[[60,5147>(938.87,1757)?(6112,7006)!=766.5?"-":347.81:(620,"i"),o7K,null]],"Africa/Cairo":[[-120,"Egypt",V7K,null]],"Africa/Nairobi":[[-180,(+"339.75",114)!==(371.8,3218)?(480,3350)<(+"3817",3428)?"-":(174.36,"821.74"-0)<2720?+"0x1d08":(0x3a6,840.41):(754.54,840.47),"EAT",null]],"Africa/Casablanca":[["0">>1258995072,b7K,"+00/+01",1540695600000],[-+"60","Morocco","+01/+00",null]],"Africa/Windhoek":[[-120,"Namibia","%s",null]],"Africa/Johannesburg":[[-120,"SA",Y7K,null]],"Africa/Tunis":[[-60,"Tunisia","CE%sT",null]],"Antarctica/Troll":[[0,"Troll","%s",null]],"Asia/Kabul":[[-("270"^0),2490<"2400">>297599104?9.76e+3:"-","+0430",null]],"Asia/Baku":[[-240,g7K,F7K,null]],"Asia/Dhaka":[[-360,"Dhaka","+06/+07",null]],"Asia/Yangon":[[-390,5470<=9530?(8270,1598)===("250"<<956663680,9780)?(955,!!{}):(8676,7000)===(+"701.5",148.14)?!!{}:"-":(!"","0x12c8"-0),"+0630",null]],"Asia/Shanghai":[[-480,T7K,"C%sT",null]],"Asia/Hong_Kong":[[-480,"HK","HK%sT",null]],"Asia/Taipei":[[-480,"Taiwan","C%sT",null]],"Asia/Nicosia":[[-120,x7K,"EE%sT",null]],"Asia/Kolkata":[[-330,"-","IST",null]],"Asia/Tehran":[[-210,d7K,"+0330/+0430",null]],"Asia/Jerusalem":[[-120,"Zion",L7K,null]],"Asia/Tokyo":[[-540,"Japan","J%sT",null]],"Asia/Amman":[[-120,z7K,c7K,null]],"Asia/Almaty":[[-360,"-","ALMT",null]],"Asia/Seoul":[[-540,"ROK","K%sT",null]],"Asia/Pyongyang":[[-510, false?undefined:"-",A7K,1525476600000],[-540,"-",B7K,null]],"Asia/Beirut":[[-120,"Lebanon","EE%sT",null]],"Asia/Kuala_Lumpur":[[-480,"-","+08",null]],"Asia/Hovd":[[-("420">>1857443776),"Mongol","+07/+08",null]],"Asia/Ulaanbaatar":[[-+"480","Mongol","+08/+09",null]],"Asia/Kathmandu":[[-345,("951.11"*1,825)<395.92?412.09>+"3020"?"h":575.27!==(24.42,857)?("r",!""):"t":"-","+0545",null]],"Asia/Karachi":[[-300,n7K,"PK%sT",null]],"Asia/Hebron":[[-120,N7K,"EE%sT",null]],"Asia/Riyadh":[[-180,"-","+03",null]],"Asia/Damascus":[[-120,"Syria","EE%sT",null]],"Asia/Bangkok":[[-420,"-","+07",null]],"Asia/Dubai":[[-240,"-","+04",null]],"Australia/Darwin":[[-570,"Aus","AC%sT",null]],"Australia/Perth":[[-480,"AW",k7K,null]],"Australia/Eucla":[[-525,P7K,"+0845/+0945",null]],"Australia/Brisbane":[[-600,"AQ","AE%sT",null]],"Australia/Adelaide":[[-570,G7K,"AC%sT",null]],"Australia/Hobart":[[-600,"AT",D7K,null]],"Australia/Melbourne":[[-("600"*1),J7K,f7K,null]],"Australia/Sydney":[[-600,"AN","AE%sT",null]],"Australia/Lord_Howe":[[-630,"LH","+1030/+11",null]],"Pacific/Fiji":[[-("720"-0),H7K,s7K,null]],"Pacific/Guam":[[-600, true?"-":undefined,W7K,null]],"Pacific/Kiritimati":[[-840,"-","+14",null]],"Pacific/Noumea":[[-660,"NC","+11/+12",null]],"Pacific/Auckland":[[-720,"NZ","NZ%sT",null]],"Pacific/Chatham":[[-765,"Chatham","+1245/+1345",null]],"Pacific/Pago_Pago":[[660,"-","SST",null]],"Pacific/Apia":[[-780,"WS","+13/+14",null]],"Pacific/Tongatapu":[[-780,"Tonga","+13/+14",null]],"Etc/UTC":[[0, false?undefined:"-",q7K,null]],UTC:I7K,"Europe/London":[[0,a7K,"GMT/BST",null]],"Europe/Dublin":[[+"0","Eire","IST/GMT",null]],WET:[[0,Q7K,"WE%sT",null]],CET:[[-("60"^0),"C-Eur","CE%sT",null]],MET:[[-+"60",R7K,"ME%sT",null]],EET:[[-120,"EU","EE%sT",null]],"Europe/Brussels":[[-60,"EU","CE%sT",null]],"America/Thule":[[240,"Thule","A%sT",null]],"Europe/Helsinki":[[-+"120","EU",l7K,null]],"Europe/Paris":[[-60,"EU",r7K,null]],"Europe/Berlin":[[-60,K7K,"CE%sT",null]],"Europe/Amsterdam":[[-60,"EU",C7K,null]],"Atlantic/Azores":[[+"60","EU","-01/+00",null]],"Europe/Bucharest":[[-120,"EU","EE%sT",null]],"Europe/Kaliningrad":[[-120,4350!=(6579,6245)?1929<=(589.26,7580)?"-":+"761.41":("X",0x1a63),O7K,null]],"Europe/Moscow":[[-180,"-","MSK",null]],"Europe/Volgograd":[[-180,"-","+03",1540692000000],[-240,"-","+04",+"1609034400000"],[-180,"-",m7K,null]],"Europe/Samara":[[-240,"-","+04",null]],"Asia/Yekaterinburg":[[-300,"-","+05",null]],"Asia/Omsk":[[-360,"-","+06",null]],"Asia/Novosibirsk":[[-("420"<<1364647168), true?"-":(undefined),"+07",null]],"Asia/Novokuznetsk":[[-420,"-","+07",null]],"Asia/Krasnoyarsk":[[-420, true?"-":undefined,"+07",null]],"Asia/Irkutsk":[[-480,"-","+08",null]],"Asia/Yakutsk":[[-540,573.07<=4670?"-":5.29e+3,"+09",null]],"Asia/Vladivostok":[[-600,"-","+10",null]],"Asia/Magadan":[[-+"660","-",u7K,null]],"Asia/Srednekolymsk":[[-660, false?(undefined):(329,"351.46"-0)<=(785.64,490.66)?"-":(548.02,+"9.48e+3"),"+11",null]],"Asia/Kamchatka":[[-720,"-","+12",null]],"Europe/Belgrade":[[-60,"EU",X7K,null]],"Europe/Sarajevo":Z7K,"Europe/Istanbul":[[-180,"-",p7K,null]],"America/New_York":[[300,M0K,"E%sT",null]],"America/Chicago":[[360,"US","C%sT",null]],"America/Denver":[[420,"US",E0K,null]],"America/Los_Angeles":[[480,h0K,U0K,null]],"America/Juneau":[["540"-0,S0K,"AK%sT",null]],"Pacific/Honolulu":[[+"600",("3361"<<1740626464,614.44)==(+"3142",1460)?("b",638.93):"-","HST",null]],"America/Phoenix":[[420,(9463,773)!=137.74?(807.95,3070)!=632.01?"-":+"723":344,"MST",null]],"America/St_Johns":[[210,y0K,i0K,null]],"America/Halifax":[[+"240",v0K,t0K,null]],"America/Regina":[[360,2462<=+"3830"?"-":(0x803,+"2.03e+3"),j0K,null]],"America/Mexico_City":[[360,"Mexico",w0K,null]],"America/Chihuahua":[[420,e0K,o0K,null]],"America/Costa_Rica":[[360,"CR","C%sT",null]],"America/Havana":[[300,"Cuba",V0K,null]],"America/Port-au-Prince":[[300,b0K,"E%sT",null]],"America/Panama":[[300,"-","EST",null]],"America/Puerto_Rico":[[240,"-","AST",null]],"America/Argentina/Buenos_Aires":[[180,Y0K,g0K,null]],"America/Sao_Paulo":[[180,"Brazil","-03/-02",null]],"America/Santiago":[[240,F0K,"-04/-03",null]],"America/Punta_Arenas":[[240,"Chile","-04/-03",1480809600000],[180,"-",T0K,null]],"America/Bogota":[["300"^0,"CO",x0K,null]],"America/Asuncion":[[240,"Para","-04/-03",null]],"Atlantic/South_Georgia":[[120,(2738,138.56)>5216?(+"194",9.92)!==816?4.85e+3:1.65e+3:"-","-02",null]],"America/Montevideo":[[180,d0K,"-03/-02",null]],"America/Caracas":[[240,5171===("1179"-0,"528.1"-0)?(35.36,5960)>(2385,3092)?(4610,6132)>=6630?(!!1,0x21e):"x":705.49:"-",L0K,null]],"Europe/Athens":"Europe/Bucharest","Europe/Simferopol":z0K,"Asia/Rangoon":c0K,"Atlantic/Reykjavik":A0K,"Asia/Kuwait":B0K,"Asia/Muscat":"Asia/Riyadh","Asia/Istanbul":"Europe/Istanbul"},rules:{Egypt:[],Morocco:[[2013,2018,"-","Oct",n0K,[3,0,0,null],0,"-"],[2014,+"2018","-",N0K,"lastSun",["2"|2,0,0,null],60,(1280,"4959"<<1266436192)<("3747"^0,5853)?(5749,6816)!==(6440,+"587")?"-":(8.24e+3,"T"):"x"],[2017,"only","-",k0K,"21",[3,0,0,null],0,(+"5625",3965)>"418"-0?+"870.34">("636.47"-0,111.42)?(2119,232)===(4323,1120)?(!!1,0x1f62):"-":(3.56e+3,!![]):(0x156f,"P")],[2017,"only","-","Jul", true?"2":undefined,[2,0,+"0",null],60,("7650"^0,4870)!==44.92?(2215,445.25)==(5750,307)?(155.07,758.60):"-":("X",43)],[2018,P0K,"-","May","13",[3,0,0,null],0,(889.87,7405)!=(308.88,+"5010")?"-": false?undefined:(819.69,7.03e+3)],[2018,"only", false?undefined:(3620,7010)>+"3900"?234.11<(643.06,160.97)?(1.51e+3,!{}):"-":(0x23b9,![]),"Jun","17",[2,0,0,null],60,(123,9450)>(407.56,+"8660")?"-":(211.02,+"1840")==(1900,2142)?(9.85e+3,"197"<<1352109568): false?(undefined):"c"],[2019,"only","-","May","5",[3,0,0,null],-60,(7380,558)<=(7677,+"9720")?(+"480",+"567.56")!=(5715,5611)?"-":0x7b4:(0x20a4,2.63e+3)],[2019,G0K,(631,6264)<(+"204.14",7100)?"-":"n","Jun","9",[2,0,0,null],0,958.45==+"9645"?8.00e+2:"-"],[2020,"only",3950>=1710?"-":(+"3020",+"3450")==3859?("B",6.05e+3):9152<(7760,1193)?0x1de6:!!{},"Apr",D0K,[3,+"0",0,null],-60,"-"],[2020,J0K,(928.13,7660)!==154.37?"-":(7620,8990)>=(1681,3436)?!"1":(+"240.46",![]),"May","31",[2,0,0,null],0,"-"],[+"2021","only","-","Apr","11",["3"&2147483647,0,0,null],-("60"&2147483647),4706>=("5848"&2147483647,940.53)?"-": false?undefined:212.8>+"9436"?("0x142a"*1,963.78):"v"],[2021,"only",6487===(8920,892.41)?(0xa5c,870.10):("611.95"-0,"5356"<<908673728)<=(3319,814.13)?(718.41,"v"):411==(1560,497.65)?+"7.82e+3":"-","May","16",[2,+"0",0,null],0,(8470,1670)<=1323?(701.63,2.51e+3):"-"],[2022,"only","-","Mar",f0K,[+"3","0"&2147483647,+"0",null],-("60">>724550048),(354.98,"3130"|1050)===(88.56,436.94)?5.28e+3:(8756,80.59)!==(9170,6005)?"308.81"-0>"513.52"-0?"B":"-":(0x15cc,0xbce)],[2022,"only",(757.78,"6389"|4308)!=(3380,4770)?"-":("239"^0,682)>=3479?(873.34,405):+"968","May",(7089,"875.87"-0)<974.68?(867.67,"7053"*1)==(7150,494)?0x3a9:"8":"L",[+"2",+"0",0,null],+"0","-"],[2023,H0K,(1050,+"8068")===1680?"j":+"4081"!==(385.93,6397)?3850<=5403?"-":!{}:!0,"Mar","19",[3,0,+"0",null],-60,"-"],[2023,"only",8723<(357.9,3950)?(+"0x236f",![]):818>=(8670,2142)?114.99>637.26?2.47e+3:!!0:"-","Apr","30",[2,0,0,null],0,"-"],[2024,"only",(+"813",4310)>(9326,7130)?(6.00e+3,!!1):"-","Mar","10",[3,0,0,null],-60,"-"],[2024,s0K,"-","Apr","14",[2,+"0","0">>187000032,null],"0">>2081499872,"-"],[2025,"only",(+"599.81",5680)!=="725">>1758583264?"-":766.21>=7660?(!![],9.53e+3): true?"d":(undefined),"Feb","23",[3,0,0,null],-60,8080>=6920?"-":(+"0xa9c",551.90)],[2025,"only","-","Apr","6",[+"2",0,"0"<<1792542176,null],0, false?undefined:(961,677.4)<5981?"-":786]],Namibia:[[1994,2017,(465.23,7718)<"7335"<<605249504?(!{},6.63e+3): true?"-":undefined,"Sep","Sun>=1",[2,0,0,null],0,"CAT"],[1995,2017,8660!==(9070,2130)?"-":(2410,2290)===(605,8730)?(494.14,"k"):(![],"7.37e+2"|544),"Apr",W0K,[+"2",0,0,null],-60,"WAT"]],SA:[],Tunisia:[],Troll:[[+"2005",q0K,1650<(2010,602.72)?(388,4252)<(4830,237)?828.85:4.78e+3:"-","Mar","lastSun",[1,0,0,("225.23"*1,5540)<=(642.01,640.79)?(0x8ea,![]):"u"],120,I0K],[2004,"max",("1930"*1,+"575.76")<(1050,8379)?"-":("p","b"),"Oct","lastSun",[1,0,0,"u"],0,"+00"]],EUAsia:[[1981,"max", false?undefined:"-","Mar","lastSun",[1,0,0,637.27<(974.68,81.23)?561<=965.96?965.13<=2760?4.35e+3:"N":883.02:"u"],60,"S"],[1996,"max","-",a0K,Q0K,[+"1",0,0,"u"],0,"-"]],Azer:[],Dhaka:[],PRC:[],HK:[],Taiwan:[],Iran:[[2017,2019,(7460,"7345"<<1843816384)==(2650,"5790"|5132)?80.06:(6620,388.75)>=7246?3330<=7816?(![],!1):0x13d3:"-",R0K,"21",[24,0,0,null],60,8142!==("161.45"*1,7500)?"-":6350!==+"3601"?(8920,131.17)==472.19?!!0:("Q","X"):(0x203c,"j")],[2017,2019,"519.32"*1>(2910,8524)?+"9398"===+"7955"?4.68e+3: true?(4.68e+3,650.23):undefined:"-",l0K,r0K,[24,0,0,null],0,(+"2120",+"9110")!=+"4579"?"-":"c"],["2020"&2147483647,K0K,(3950,+"2129")>(+"9580",7690)?(8266,445.98)<=("7140"*1,983.74)?"512.66"*1<("9305"|65,"7393">>788939936)?"a":(0x17a,"l"):(!"",686.85):"-","Mar","20",[24,0,0,null],60,8970==(5930,7001)?0x21c1:(2275,526.57)!=(4540,+"6793")?6440<938.63?4.83e+2:"-":(!![],0x14e7)],[2020,"only",("9261"&2147483647)!==(5925,4680)?"-":(+"769.07","G"),C0K,O0K,[24,0,"0"^0,null],0,4122>(740.59,907.88)?"-":(247,"126.97"*1)<(+"6326",38.43)?135.98: false?undefined:0x102f],[2021,2023,(+"235.1",5477)===(247.27,+"432.57")?(0x21a5,6.79e+3):"7412"*1>9711?3940!=(3624,282)?+"119.56":("v",2.29e+3):"-",m0K,u0K,[+"24",0,"0"-0,null],60,"-"],[2021,2023,494>=+"313.97"?"-":(8840,841.78)<4373?2.51e+3:(!"",0x2526),X0K,Z0K,["24"|8,0,0,null],0,"-"],[+"2024","only","-","Mar","20",[24,0,0,null],60,"-"],[+"2024","only",(553.16,"882.23"*1)>2310?8380>=(3440,4200)?(557.31,9650)>=(9533,7630)?(0x10b7,0x1fe7):5.80e+2:(0x1839,"X"):"-",p0K,M5K,[24,0,"0"<<1709170144,null],+"0","-"],[2025,"2027"<<816096000,(867,419.31)===(7780,"342.86"*1)?(9.85e+3,0x22b4):(+"5381",741.35)!="3319"*1?(2500,"9800"-0)!==+"7470"?"-":(9.56e+3,"E"):(4.37e+3,!![]),"Mar",E5K,[24,0,0,null],60,7873==(3670,5099)?!![]:"-"],[2025,"2027"^0,8298>9609?(6.60e+3,!1):(8570,3150)<(304.86,601.49)?![]:"-","Sep",h5K,[24,0,"0"-0,null],0,(6505,8199)<(8250,+"2984")?(0xd4a,!!"1"):7959>674?"-":(703.72,4060)===(2414,3057)?"E":(!!{},"C")]],Zion:[[2013,"max",931.06<"469.83"-0?511.48>=(7145,7620)?(0x18d9,0x1e11):447.55:"-","Mar",U5K,[2,0,0,null],60,(705.09,+"9180")<=108.8?(676.44,!![]):(5352,7692)>=4990? true?"D":undefined:(+"99.68",!!{})],[2013,S5K,(8134,7983)!==8591?"-":(8.41e+3,!0),"Oct","lastSun",["2">>354922400,0,0,null],0,"S"]],Japan:[],Jordan:[[2014,"max","-","Mar","lastThu",[24,0,+"0",null],60,"S"],[2014,"max","-","Oct","lastFri",[0,0,0,"s"],0,298==(219.14,6346)?(0xe1a,"0.00e+0"*1):"-"]],ROK:[],Lebanon:[[1993,y5K,4780!="1460">>738588448?"-":(2410,1656)<+"3430"?0x7fe:(+"579.76","Z"),i5K,v5K,[+"0","0"|0,0,null],60,(+"4908",+"348.62")<=4750?"S":0x1b3a],[1999,"max", true?(4120,+"369.3")<(499.5,4960)?(532.08,2450)==(3640,64.12)?!"":"-":("c",74.88):(undefined),"Oct","lastSun",[0,0,0,null],0,(199.49,339.17)<(343.17,3390)?8760<=158.23?5140>(811,7367)?"N":(0x1a7f,8.23e+3):"-":(0x2527,"K")]],Mongol:[],Pakistan:[],Palestine:[[2016,2018,(6523,"1100"-0)==("7904"-0,796)?!1:"-",t5K,j5K,[1,0,0,null],60,4600<=(1030,691.03)?"H":(+"9810",301)===("6100"*1,7733)?"g":(7530,+"410.69")<1310?"S":"0x10f5"*1],[+"2016",+"2018","-","Oct","Sat>=24",[1,+"0",0,null],"0"|0,"-"],["2019"|1184,w5K,"-","Mar",e5K,[+"0",0,0,null],60,"S"],[+"2019","only","-","Oct",o5K,[+"0",0,0,null],+"60","-"],[2020,V5K,"-","Mar","Sat>=24",[0,0,0,null],60,"S"],[2020,"max","838.89"*1!==(+"7770",9492)?323.53<=1033?"-":("z",9.56e+3):4.23e+3,"Oct","Sat>=24",[1,0,0,null],60,(7880,5940)===(8070,5930)?2185<9710?(4.48e+3,"t"):("u",0x14c9):"-"]],Syria:[[2012,b5K,"-","Mar",Y5K,[0,+"0",0,null],60,"9860">>202406016>=(63.89,679)?(6640,6750)<=9560?"S":(1252,9060)>(3753,+"118.19")?(+"3.60e+3",!{}):+"0x1dcc":(!!"1","k")],[+"2009","max","-","Oct",g5K,[0,0,0,null],0,"-"]],Aus:[],AW:[],AQ:[],AS:[[2008,"max",9670>=("789"|789)?(902.08,895.5)===(780.63,6240)?"O":("3514"&2147483647)<(53.64,843.86)?(0x821,!!0):"-":!{},"Apr","Sun>=1",[2,"0">>803136448,0,"s"],+"0",(9580,7428)==(6439,+"4000")?("S","o"):"S"],[+"2008","max",831.56<8110?"-":502.54,"Oct",F5K,[2,0,0,"s"],"60"*1,"D"]],AT:[[2001,"max","-","Oct","Sun>=1",[2,+"0",0,("3740"&2147483647)=="735.37"*1?5.26e+3:(657.07,751)==("9310"&2147483647,871.13)?(!{},"114.44"-0):(2450,831)>=496.35?"s":(![],"Z")],60,(+"248.22",5593)>(325.19,"555.56"-0)?"D": false?undefined:(235.88,2460)<(568,5900)?4.49e+3:("J",0xb70)],[2008,T5K,671.25==("4952"|768,2113)?("u","l"):(4181,7395)>=812.62?"-":(0x2663,5.68e+3),"Apr",x5K,[2,0,0,"s"],"0"&2147483647,(8580,809.72)>(9035,178)?"S":"K"]],AV:[[+"2008","max","-","Apr","Sun>=1",[2,0,0,"s"],0,146.18<"1127">>1328585984?1476===(3717,2754)?529.48<=("4130"&2147483647,187.03)?(7.39e+3,"R"):"R":"S":"L"],[2008,d5K,"-","Oct","Sun>=1",["2"-0,0,0,("389.79"-0,"827"*1)<("4740"|128,"587.89"-0)?"r":(580.77,7658)>=9830?+"0x2101":"s"],+"60","7842"*1!=(6860,9360)?"D":(2810,9330)==(8250,146.71)?!!0:6.12e+3]],AN:[["2008">>643465184,"max","-",L5K,z5K,[2,"0"<<409087200,+"0","s"],0, false?undefined:"S"],[2008,"max","-","Oct","Sun>=1",[2,0,"0"*1,+"759">=8050?(+"5.24e+3",924.41):"s"],60,+"3111">=(258.36,9710)?!!{}:"D"]],LH:[[2008,c5K, false?(undefined):"-","Apr",A5K,[2,0,0,null],"0"-0,4140<=(5717,8796)?"-":("4.82e+3"^0,0x1532)],[2008,"max",(7170,4354)==("841"|768,60.25)?("U",0xa6c):(4410,7191)!=3220?"-":("h","G"),"Oct","Sun>=1",[2,0,0,null],30,"-"]],Fiji:[[2014,2018,+"6952"==234.36?881.41==(3768,267.49)?!!"1":(!{},!{}):"-","Nov",B5K,[2,0,0,null],60,"-"],[2015,"max","-","Jan","Sun>=12",[3,0,0,null],0,(+"9684",9876)===(5540,9950)?708.90:3955==(2800,312.29)?7.07e+3:"-"],[2019,n5K,(6276,9722)!==4079?4500<=(4374,3350)?880.79<=3010?("0x1a88"<<1533622560,!!{}):("f",70.07):"-":3.32e+2,"Nov","Sun>=8",[2,0,0,null],60,(631.59,7365)!=="141">>357510464?"-":"5900"*1===(2650,1681)?"u":("C","x")],[2020,"only","-","Dec",N5K,[2,0,0,null],60,(+"846",617)==2824?(9114,9512)<=8830?!"1":(0x1996,268.64):"-"],[2021,k5K,845.58!==(+"844",183)?"-":389!=(2330,+"7339")?7208<=428.87?![]:(3.98e+3,"V"):("v",5.04e+3),"Nov","Sun>=8",[2,"0"<<958008480,"0"^0,null],+"60","-"]],NC:[],NZ:[["2007"<<1008746464,"max",4922<("9120"^0)?(3860,790.3)<=310.6?0x420:"-":!"","Sep","lastSun",[2,0,0,(158,7702)!==(4353,+"553")? false?(undefined):(8748,5512)>=7174?(+"401.36","T"):"s":("d",0x7f0)],"60"|36,5000<1611?625!==("3040"^0)?![]:"A":"D"],[2008,P5K,"-",G5K,"Sun>=1",[2,0,0,"s"],+"0","S"]],Chatham:[[2007,D5K,780.2<=(8820,7280)?2520>=("766.55"-0,+"634.6")?"-":(725.51,0xc07):("r",0x2a1),"Sep","lastSun",[2,45,0,"s"],60,(4400,4100)<=7750?"-":0x155f],[2008,"max",6700<=(5110,"399.74"*1)?"u":"-","Apr","Sun>=1",[2,45,0,"1672">>2049737920!==(153.9,"656">>1355008864)?(763.62,+"193.58")<=(4430,"147.14"*1)?(5040,2970)<=+"300"?(!![],+"0x122d"):775.01:"s":0xe64],0,(+"516.95",8930)!==("9140">>1103946624,331.17)?"-":("462.76"-0,6470)!=(9390,3880)?("6910"|628)<("80"&2147483647,1797)?(!!0,797.36):(!!1,!!""):5.94e+3]],WS:[[2012,J5K,(9524,247.75)<369.91?"-":(5.77e+3,"H"),"Apr","Sun>=1",[4,0,0,null],0,(376.2,"70.88"*1)<=(4628,3460)?"-":3.01e+3],[2012,"max","-","Sep","lastSun",[3,0,0,null],60, false?(undefined):"2000"*1===(8630,6581)?3.62e+3:"-"]],Tonga:[[2016,"only","-","Nov","Sun>=1",["2"&2147483647,0,0,null],"60"-0,(389,326.11)==(+"359",3920)?("L","c"):"-"],[2017,"only","-",f5K,"Sun>=15",[+"3",0,+"0",null],0,"-"]],Eire:[[1981,"max","-","Mar","lastSun",[1,0,"0"-0,"u"],+"0","-"],[1996,"max","-","Oct","lastSun",[1,+"0",0,(7950,4410)>4356?"u":192.94],-60,+"384.42"!=(5990,382.85)?3320<=(255,6940)?"-":(6010,1581)==(2398,802.18)?("z","E"):("b","Q"):4.42e+3]],EU:[[1981,"max",(8151,1166)===5580?9.07e+3:+"2690"<=4905?"-":0x2246,H5K,"lastSun",[1,+"0",0,241>=("100.18"-0,884.14)?(+"0xbac",176.49):"u"],60,"S"],["1996"*1,"max","-",s5K,"lastSun",[1,0,0,(73.12,1210)===+"3320"?(6490,"538.63"-0)!=(5579,9950)?("5918"<<1667676928,1610)>363?1.11e+3:1.66e+2:4.89e+3:"u"],0,"542.45"*1<=299?(3.52e+3,"T"):+"585">=544?"-":(778.78,"0x17ae"&2147483647)]],"C-Eur":[[1981,W5K,(865,3880)==("1440"|1024)?(0x1b56,"F"):("8268"<<390797088,929.07)==(6710,"1620"-0)?(+"143",871)>=9594?(!!{},"1.24e+3"-0):("O","0x2114"*1):"-","Mar",q5K,[2,0,0,(1130,1105)!=(6190,+"4899")?"s":(9650,"666"-0)!=(+"1390","1029"&2147483647)?(2.50e+3,!!1):("b",!![])],60,(+"9360",877.65)>=(6050,5740)?(711.45,"h"):62.89>(+"733.77",5450)?(0x156,814):(6230,3776)!=(1208,+"6208")?"S":!""],[1996,"max","-","Oct","lastSun",[2,0,0,"s"],0,124.62!==(7082,"863.67"*1)?(5560,1988)<=160?5.15e+3:"-":(0x1fbf,!!{})]],Thule:[[2007,"max",+"11"==1330?5808>(1335,"4152"-0)?0xd2b:"F":"-",I5K,"Sun>=8",[2,0,0,null],60,"D"],[2007,"max","-","Nov","Sun>=1",[2,0,0,null],0,(680,"512"<<1485268992)<=("549.98"*1,3510)?(4918,1150)!=8452?(422.75,+"8840")!==147.1?"S":(0x1481,![]):278.32:"3.20e+3"<<794971616]],US:[[2007,"max","-","Mar","Sun>=8",[2,0,0,null],60,+"841"<="102.21"-0?(5.13e+3,+"0x1c6c"): false?undefined:"D"],[2007,"max",(1180,969.02)>("4301"*1,2490)?733.26:(5406,+"5490")<=5692?(492.63,+"8150")<=647.63?738.67:"-":(!"1",249.15),"Nov","Sun>=1",[2,0,+"0",null],0,(1030,7762)==(352.82,2871)?("u",![]):"S"]],Canada:[[2007,"max",(225,971.28)==="1970"-0?(874.54,5270)===(6970,5951)?(6.40e+3,!![]): true?(!"","J"):undefined:"-","Mar","Sun>=8",[2,0,0,null],60, false?undefined:"D"],["2007"*1,"max", true?"-":undefined,a5K,Q5K,[+"2",0,+"0",null],0,"S"]],Mexico:[["2002"|1730,R5K,"-","Apr","Sun>=1",[2,0,0,null],60,7981>=(408,123.79)?(468.17,7636)==(8550,6920)?("5.42e+3"|1284,"0xadd">>1011885696):"D":(2.60e+3,!"")],["2002"-0,l5K,"-","Oct","lastSun",[2,0,0,null],0,"S"]],CR:[],Cuba:[[2012,"max",(+"147.21","2168"&2147483647)>=(69.49,732)?7020!=(1048,8312)?"-":(![],!{}):6.65e+3,"Nov","Sun>=1",[0,+"0",0,("6860"|6848,845.29)!=6555?"s":367.96<4530?222.17:(!{},"Z")],0,"S"],[2013,"max", false?undefined:(7830,55)===5536?(7950,295.35)===842.98?"87.61"-0:3.54e+3:"-",r5K,K5K,[0,0,0,+"822.52">+"2050"?0x21f7:704>3601?("S",0x20d9):+"766"!=4654?"s":(2.04e+3,!1)],60,"D"]],Haiti:[[2017,"max","-",C5K,O5K,[2,0,+"0",null],60,"D"],[+"2017","max",+"5110"==4210?(402.33,+"8297")>(7768,531)?(4900,+"1440")>(4544,2609)?+"344.78":("O","B"):(0x108a,268.80):"-",m5K,u5K,[2,0,0,null],0,(952.18,8890)<=152?(0x1945,+"0x635"):(42,"812.13"-0)<(9480,+"745")?(253,628.34)>(9703,896.55)?!![]:("0x226b">>1168182656,931):"S"]],Arg:[],Brazil:[[2008,2017,"-",X5K,"Sun>=15",[0,0,0,null],60,"-"],[2016,2019,(+"6610",714)==(1600,4820)?(509.24,"F"):(5560,2860)==775.32?(9.96e+3,!{}):"-",Z5K,"Sun>=15",[0,0,+"0",null],+"0",2150===("9459"^0)?(+"927.23",3650)!==(811.71,9850)?822.61:![]:"-"],[2018,p5K,(7640,498.46)>=649.72?(0x1800,0x728):"-","Nov",M9K,[0,0,"0"*1,null],60,6100!==(877.99,6070)?(5215,5956)!=(738.33,9740)?"-":(894.74,7980)>=(+"4134",73.17)?9.37e+3:+"272.13":"s"]],Chile:[[2016,2018,(623.19,72)>=485.12?0x1503:(4680,5942)>685.13?"-":("f","E"),E9K,h9K,[3,0,0,458.52<286.62?(7380,6210)>=+"7639"?(+"3.47e+3",!!{}):293.72:"u"],0,"-"],[2016,2018,"-",U9K,"Sun>=9",[4,0,0,"2980"*1==(6750,+"6610")? false?(undefined):("J",0xc85):"u"],60,("3010"&2147483647,4240)!==(861.51,3220)?"-":(441.54,6010)!="934.1"-0?4.12e+3:856.09],[2019,"max",(7280,7292)!==("4876"^0)?"-":0xd13,"Apr","Sun>=2",[3,0,0,+"9623">("5170">>795217856,2164)?124.31>6173?("6263">>2088075296,173.13)!==(692.14,487.87)?"O":![]:"u":(+"5.14",![])],+"0",(3820,3412)>(+"3200",+"7738")?(5.24e+3,!![]):(95.48,2709)<=8160?"-":567.59<=9580?399.77:(!![],959.51)],[2019,S9K,"-","Sep","Sun>=2",[+"4",+"0",+"0","u"],"60"-0,"-"]],CO:[],Para:[[2010,y9K,(+"9027",9720)!=(6280,"410.37"-0)?"-":(165.57,3649)!==9720? false?(undefined):("i","H"):("K",7.19e+3),i9K,"Sun>=1",[0,0,0,null],60,(157.69,789.08)!=83.36?(3880,775)>("380">>1851028128,17.61)?"-":8481>=4550?900.37:7.90e+3:5.15e+3],[+"2013",v9K,9507<(3648,2290)?2.82e+3:"-","Mar","Sun>=22",[0,+"0",0,null],0,(372.12,729)==417.61?0x1170:"-"]],Uruguay:[]}});};u54=function u54(V50){var i50,S50;function h50(t50,m50,k50){var C50;if(!t50.layout.crosshair){i50.ChartEngine.crosshairY=0;i50.ChartEngine.crosshairX=0;t50.cx=t50.backOutX(0);o2QQ.O9X(50);t50.cy=t50.backOutY(o2QQ.L9X("0",0));t50.findHighlights(null,!!1);i50.ChartEngine.crosshairY=k50;i50.ChartEngine.crosshairX=m50;C50=t50.container.getBoundingClientRect();t50.top=C50.top;t50.left=C50.left;t50.right=t50.left+t50.width;t50.bottom=t50.top+t50.height;t50.cx=t50.backOutX(m50);t50.cy=t50.backOutY(k50);if(t50.currentPanel&&t50.currentPanel.chart.dataSet){t50.crosshairTick=t50.tickFromPixel(t50.cx,t50.currentPanel.chart);t50.crosshairValue=t50.adjustIfNecessary(t50.currentPanel,t50.crosshairTick,t50.valueFromPixel(t50.cy,t50.currentPanel));}t50.headsUpHR();}o2QQ.l9d();t50.findHighlights(!![]);t50.draw();}i50=typeof _CIQ!=="undefined"?_CIQ:V50.CIQ;i50.ChartEngine.prototype.touchSingleClick=function(P50,A50,R50){var M50,o50;M50=this;o50=arguments;o2QQ.l9d();return function(){(function(){var j9K,t9K,I50,s50,J50,H50;j9K="t";j9K+="ouchSingle";j9K+="Cli";o2QQ.A9d();j9K+="ck";if(!this.cancelTouchSingleClick){t9K="touchSing";t9K+="leClick";if(this.runPrepend(t9K,o50)){return;}if(this.editingAnnotation){return;}this.clicks={s1MS:-1,e1MS:-1,s2MS:-("1">>1873744256),e2MS:-1};if(!this.displayCrosshairs){return;}if(!this.displayInitialized){return;}if(this.openDialog!==""){return;}if(A50<this.left||A50>this.right||R50<this.top||R50>this.bottom){return;}I50=this.backOutY(i50.ChartEngine.crosshairY);s50=this.backOutX(i50.ChartEngine.crosshairX);this.currentPanel=this.whichPanel(I50);J50=this.currentVectorParameters.vectorType;if(!i50.Drawing||!J50||!i50.Drawing[J50]||!new i50.Drawing[J50]().dragToDraw){if(!this.drawingClick(this.currentPanel,s50,I50)){h50(this,A50,R50);}if(!this.currentVectorParameters.vectorType){H50=this.activeMarker&&this.activeMarker.click({cx:s50,cy:I50,panel:this.currentPanel});if(!H50){this.dispatch("tap",{stx:this,panel:this.currentPanel,x:s50,y:I50});}}}}this.runAppend(j9K,o50);}).apply(M50,o50);};};i50.ChartEngine.prototype.touchDoubleClick=function(b50,l50,v50){var X59,Z59,p59,G50;if(this.runPrepend("touchDoubleClick",arguments)){return;}if(this.editingAnnotation){return;}if(i50.ChartEngine.drawingLine){return this.undo();}if(this.activeDrawing){return;}h50(this,l50,v50);X59=-692166672;Z59=407028113;p59=2;for(var E99=1;o2QQ.g19(E99.toString(),E99.toString().length,45303)!==X59;E99++){G50=this.activeMarker||this.activeMarker.doubleClick({cx:l50,cy:v50,panel:this.currentPanel});if(+G50){this.dispatch("",{stx:this,finger:b50,x:l50,y:v50});}p59+=2;}if(o2QQ.g19(p59.toString(),p59.toString().length,99308)!==Z59){G50=this.activeMarker&&this.activeMarker.doubleClick({cx:l50,cy:v50,panel:this.currentPanel});if(~G50){this.dispatch("",{stx:this,finger:b50,x:l50,y:v50});}}G50=this.activeMarker&&this.activeMarker.doubleClick({cx:l50,cy:v50,panel:this.currentPanel});if(!G50){this.dispatch("doubleTap",{stx:this,finger:b50,x:l50,y:v50});}this.runAppend("touchDoubleClick",arguments);};i50.ChartEngine.prototype.startProxy=function(u50){var w9K;w9K="tou";w9K+="c";w9K+="h";this.touchPointerType=u50.pointerType;if(this.touchPointerType!=w9K){this.mouseMode=!!{};return;}this.mouseMode=!1;o2QQ.A9d();this.touches[this.touches.length]={pointerId:u50.pointerId,pageX:u50.clientX,pageY:u50.clientY,clientX:u50.clientX,clientY:u50.clientY};this.changedTouches=[{pointerId:u50.pointerId,pageX:u50.clientX,pageY:u50.clientY,clientX:u50.clientX,clientY:u50.clientY}];if(this.touches.length==("1"|1)){this.gesturePointerId=u50.pointerId;}this.touchstart(u50);};i50.ChartEngine.prototype.moveProxy=function(r50){var S59,y59,i59;if(r50.pointerType&&r50.pointerType!="touch"){this.mouseMode=!"";return;}S59=1544296336;y59=1279073121;i59=+"2";o2QQ.l9d();for(var t59=1;o2QQ.g19(t59.toString(),t59.toString().length,18979)!==S59;t59++){this.mouseMode=!!{};i59+=+"2";}if(o2QQ.Y19(i59.toString(),i59.toString().length,39036)!==y59){this.mouseMode=!{};}this.mouseMode=!!"";this.touchmove(r50);};i50.ChartEngine.prototype.endProxy=function(d50){var Q50;if(this.touchPointerType!="touch"){this.mouseMode=!!1;return;}this.mouseMode=!"1";Q50=this.touches.length;for(var F50=0;F50<this.touches.length;F50++){if(this.touches[F50].pointerId==d50.pointerId){o2QQ.I9X(53);this.touches.splice(F50,o2QQ.x9X(577733344,"1"));break;}}if(F50==Q50){this.touches=[];this.grabbingScreen=!!0;this.touching=!"1";return;}this.changedTouches=[{pointerId:d50.pointerId,pageX:d50.clientX,pageY:d50.clientY,clientX:d50.clientX,clientY:d50.clientY}];this.touchend(d50);};i50.ChartEngine.prototype.msMouseMoveProxy=function(W50){var S39,y39,i39;S39=1562656305;y39=-336164622;i39=2;for(var t39="1"<<1918635200;o2QQ.g19(t39.toString(),t39.toString().length,48689)!==S39;t39++){if(this.touches.length&&~this.mouseMode){return;}this.mousemove(W50);i39+=2;}if(o2QQ.Y19(i39.toString(),i39.toString().length,+"18485")!==y39){if(this.touches.length||!this.mouseMode){return;}this.mousemove(W50);}};i50.ChartEngine.prototype.msMouseDownProxy=function(z50){if(!this.mouseMode){return;}this.mousedown(z50);};i50.ChartEngine.prototype.msMouseUpProxy=function(e50){if(!this.mouseMode){return;}o2QQ.A9d();this.mouseup(e50);};i50.ChartEngine.prototype.iosMouseMoveProxy=function(X50){o2QQ.A9d();if(this.touching){return;}this.mousemove(X50);};i50.ChartEngine.prototype.iosMouseDownProxy=function(p50){if(this.touching){this.mouseMode=!!0;return;}o2QQ.A9d();this.mouseMode=!"";this.mousedown(p50);};i50.ChartEngine.prototype.iosMouseUpProxy=function(Y50){if(this.touching){return;}this.mouseup(Y50);};i50.ChartEngine.prototype.touchmove=function(E40){var y9d=o2QQ;var V9K,o9K,e9K,a40,D40,f40,i40,R40,x39,d39,L39,w40,N40,M40,Z40,U40,n40,S40,O40,h40,L40,V40,t40,q40,c40,C40,g40,j40,P40,m40,T40,k40,I40,B40,s40,J40,H40,l40,o40,A40,K40,v40,G40;V9K="touchmov";V9K+="e";o9K="to";o9K+="uchm";o9K+="ove";e9K="n";e9K+="o";e9K+="n";e9K+="e";if(!this.displayInitialized){return;}if(this.openDialog!==""){return;}if(i50.ChartEngine.ignoreTouch===!""){return;}a40=[];if(!this.overYAxis||this.controls&&this.controls.crossX&&this.controls.crossX.style.display!=e9K){if(E40&&E40.preventDefault&&E40.cancelable&&this.captureTouchEvents){E40.preventDefault();}if(E40){E40.stopPropagation();}}y9d.A9d();D40=new Date().getTime();if(this.clicks.s2MS==-1){this.clicks.e1MS=D40;if(this.clicks.e1MS-this.clicks.s1MS<25){return;}}else{this.clicks.e2MS=D40;if(this.clicks.e2MS-this.clicks.s2MS<25){return;}}if(!E40.pointerType){E40.pointerType=this.touchPointerType;}if(i50.isSurface){if(this.mouseMode){return;}if(!E40.pointerId){E40.pointerId=this.gesturePointerId;}for(var x40=0;x40<this.touches.length;x40++){if(this.touches[x40].pointerId==E40.pointerId){f40=Math.abs(this.touches[x40].pageX-E40.clientX);i40=Math.abs(this.touches[x40].pageY-E40.clientY);y9d.O9X(34);R40=Math.sqrt(y9d.L9X(f40,f40,i40,i40));if(!R40){return;}this.clicks.e1MS=new Date().getTime();if(this.clicks.e1MS-this.clicks.s1MS<"50"<<45172512){return;}if(this.touches[x40].pageX==E40.clientX&&this.touches[x40].pageY==E40.clientY){return;}this.touches[x40].pageX=this.touches[x40].clientX=E40.clientX;this.touches[x40].pageY=this.touches[x40].clientY=E40.clientY;break;}}if(x40===0){this.movedPrimary=!!"1";}else{this.movedSecondary=!!"1";}if(x40==this.touches.length){return;}this.changedTouches=[{pointerId:E40.pointerId,pageX:E40.clientX,pageY:E40.clientY,clientX:E40.clientX,clientY:E40.clientY}];a40=this.touches.length?this.touches:this.changedTouches;}else{a40=E40.touches;y9d.I9X(6);x39=y9d.L9X(0,"558420842");d39=890433334;L39=2;for(var c39=+"1";y9d.Y19(c39.toString(),c39.toString().length,84281)!==x39;c39++){this.changedTouches=E40.changedTouches;L39+=2;}if(y9d.Y19(L39.toString(),L39.toString().length,80952)!==d39){this.changedTouches=E40.changedTouches;}this.changedTouches=E40.changedTouches;}if(a40.length==1){if(Math.pow(this.clicks.x-a40[0].clientX,"2"*1)+Math.pow(this.clicks.y-a40[0].clientY,"2"*1)<=16){return;}}w40=this.crosshairXOffset;N40=this.crosshairYOffset;M40=this.currentVectorParameters.vectorType&&this.currentVectorParameters.vectorType!=="";Z40=!this.layout.crosshair&&!M40&&!this.touchNoPan;if(E40.pointerType=="pen"||Z40||this.activeDrawing&&this.activeDrawing.name=="freeform"){w40=N40=+"0";}if(this.runPrepend(o9K,arguments)){return;}if(i50.ChartEngine.resizingPanel){S40=a40[+"0"];U40=S40.clientX;n40=S40.clientY;y9d.O9X(0);this.mousemoveinner(y9d.x9X(w40,U40),y9d.L9X(N40,n40));return;}if(this.moveB!=-1){this.touchMoveTime=new Date();}this.moveA=this.moveB;this.moveB=a40[0].pageX;if(a40.length==1&&!this.twoFingerStart){h40=a40[0];U40=h40.clientX;n40=h40.clientY;this.pinchingScreen=0;y9d.I9X(0);this.mousemoveinner(y9d.L9X(w40,U40),y9d.x9X(N40,n40));L40=this.whichPanel(n40);V40=this.xAxisAsFooter===!![]?this.chart.canvasHeight:this.chart.panel.bottom;this.overXAxis=n40<=this.top+V40&&n40>=V40-this.xaxisHeight+this.top&&this.insideChart;if(!L40){this.overYAxis=!{};}else{this.overYAxis=(U40>=L40.right||U40<=L40.left)&&this.insideChart;}}else if(a40.length==2&&this.allowZoom){if(!this.displayCrosshairs){return;}t40=a40[0];q40=t40.clientX;c40=t40.clientY;C40=a40[1];g40=C40.clientX;j40=C40.clientY;y9d.I9X(152);O40=Math.sqrt(y9d.x9X(q40,q40,c40,c40,j40,g40,g40,j40));y9d.O9X(153);var B8X=y9d.L9X(14,15,0,14,16);this.pinchingCenter=(Math.min(q40,g40)-Math.max(q40,g40))/B8X;P40=Math.round(this.gestureStartDistance-O40);if(Z40){this.pinchingScreen=5;}this.clearPixelCache();if(this.pinchingScreen<2){if(i50.isSurface&&(!this.movedPrimary||!this.movedSecondary)){return;}if(q40<this.pt.x1&&g40<this.pt.x2||q40>this.pt.x1&&g40>this.pt.x2||c40<this.pt.y1&&j40<this.pt.y2||c40>this.pt.y1&&j40>this.pt.y2){this.pinchingScreen=0;}else{this.pinchingScreen++;if(this.pinchingScreen<2){return;}}}this.pt={x1:q40,x2:g40,y1:c40,y2:j40};if(this.pinchingScreen===0){this.grabMode="pan";y9d.O9X(0);this.mousemoveinner(y9d.x9X(w40,q40),y9d.x9X(N40,c40));this.gestureStartDistance=O40;}else{m40=Math.asin((Math.max(j40,c40)-Math.min(j40,c40))/O40);if(Math.abs(P40)<12&&!Z40){this.moveCount++;if(this.moveCount==4){this.pinchingScreen=0;this.moveCount=0;return;}}else{this.moveCount=0;}if(m40<1||!this.goneVertical&&m40<1.37){if(!this.currentPanel){return;}T40=this.currentPanel.chart;this.goneVertical=!1;O40=this.pt.x2-this.pt.x1;k40=this.grabStartValues.t2-this.grabStartValues.t1;y9d.I9X(6);var n8X=y9d.L9X(2,4);I40=this.grabStartValues.t1+k40/n8X;y9d.I9X(7);B40=y9d.L9X(O40,k40);if(T40.allowScrollFuture===!{}&&T40.allowScrollPast===![]){B40=Math.max(B40,T40.width/T40.dataSet.length);}s40=this.layout.candleWidth;this.setCandleWidth(B40,T40);if(T40.maxTicks<this.minimumZoomTicks){this.setCandleWidth(s40,T40);return;}this.micropixels=0;J40=this.pixelFromTick(Math.round(I40),T40);y9d.O9X(154);var N8X=y9d.L9X(0,13,4,1,9);H40=this.pt.x1-this.left+Math.round(O40/N8X);y9d.I9X(6);l40=y9d.x9X(H40,J40);y9d.I9X(7);o40=y9d.L9X(l40,B40);A40=Math.round(o40);T40.scroll-=A40;y9d.O9X(6);this.microscroll=y9d.L9X(o40,A40);this.micropixels=B40*this.microscroll;this.draw();}else{K40=this.grabStartYAxis;this.goneVertical=!![];if(K40){K40.zoom=this.grabStartZoom+(this.gestureStartDistance-O40);if(this.grabStartZoom<K40.height){if(K40.zoom>=K40.height){y9d.I9X(22);var k8X=y9d.L9X(2,6,3);K40.zoom=K40.height-k8X;}}else{if(K40.zoom<=K40.height){y9d.O9X(155);var P8X=y9d.x9X(5,11,14,55,14);K40.zoom=K40.height+P8X;}}this.draw();;}}this.updateChartAccessories();}}else if(a40.length==3&&i50.ChartEngine.allowThreeFingerTouch){if(!this.displayCrosshairs){return;}y9d.I9X(74);v40=a40[y9d.x9X(2147483647,"0")];G40=v40.clientX;O40=this.grabStartX-G40;this.grabEndPeriodicity=this.grabStartPeriodicity+Math.round(O40/+"10");if(this.grabEndPeriodicity<1){this.grabEndPeriodicity=1;}}this.runAppend(V9K,arguments);};i50.ChartEngine.prototype.touchstart=function(d40){var U9d=o2QQ;var Q40,y40,p40,W40,u40,r40,b40,K80,O80,Z80,T80,Y40,F40,L80,q80,c80,g80,e40,n80,U80,a80,N80,X40,x80,h80,V80;if(i50.ChartEngine.ignoreTouch){return;}if(i50.isSurface){this.movedPrimary=![];this.movedSecondary=!"1";}else{if(this.touchingEvent){clearTimeout(this.touchingEvent);}this.touching=!"";this.touches=d40.touches;this.changedTouches=d40.changedTouches;}if(i50.ChartEngine.resizingPanel){return;}Q40=this.crosshairXOffset;y40=this.crosshairYOffset;if(this.touchPointerType=="pen"){Q40=y40=0;}if(this.runPrepend("touchstart",arguments)){return;}if(this.manageTouchAndMouse&&d40&&d40.preventDefault&&d40.cancelable&&this.captureTouchEvents){d40.preventDefault();}U9d.A9d();this.hasDragged=!!"";this.doubleFingerMoves=0;this.moveCount=+"0";this.twoFingerStart=!{};if(this.touches.length==+"1"||this.touches.length==2){this.touchMoveTime=Date.now();K80=this.touches[+"0"];u40=K80.clientX;r40=K80.clientY;this.moveA=u40;this.moveB=-1;if(this.openDialog===""){this.registerPointerEvent({x:u40,y:r40,time:this.touchMoveTime},"down");if(this.changedTouches.length==1&&!this.isDoubleClick(!!1)){i50.extend(this.clicks,{s1MS:this.touchMoveTime,e1MS:-1,s2MS:-1,e2MS:-1,x:this.changedTouches[0].pageX,y:this.changedTouches["0"^0].pageY});}}O80=this.container.getBoundingClientRect();this.top=O80.top;this.left=O80.left;this.right=this.left+this.width;this.bottom=this.top+this.height;if(this.touches.length==1){Z80=this.backOutY(r40);this.currentPanel=this.whichPanel(Z80);}if(!this.currentPanel){this.currentPanel=this.chart.panel;}b40=this.currentPanel;if(u40>=this.left&&u40<=this.right&&r40>=this.top&&r40<=this.bottom){this.insideChart=!0;T80=this.xAxisAsFooter===!!{}?this.chart.canvasHeight:this.chart.panel.bottom;this.overXAxis=r40<=this.top+T80&&r40>=this.top+T80-this.xaxisHeight;this.overYAxis=u40>=this.left+b40.right||u40<=this.left+b40.left;Y40=-1;this.cy=this.backOutY(r40);this.cx=this.backOutX(u40);this.crosshairTick=this.tickFromPixel(this.cx,b40.chart);this.crosshairValue=this.adjustIfNecessary(b40,this.crosshairTick,this.valueFromPixel(this.cy,this.currentPanel));for(var z40=0;z40<this.drawingObjects.length;z40++){F40=this.drawingObjects[z40];if(F40.highlighted){if(Y40<0){Y40=z40;}L80=F40.highlighted;this.findHighlights(!!"1");if(z40==Y40&&F40.highlighted&&!F40.permanent){if(this.clicks.s2MS==-1){this.activateRepositioning(F40);;}else{this.findHighlights(![],!![]);;}return;}this.anyHighlighted=!!{};F40.highlighted=L80;}}}else{this.insideChart=!!0;}q80=this.currentVectorParameters.vectorType&&this.currentVectorParameters.vectorType!=="";if(!this.layout.crosshair&&!(this.layout.headsUp&&this.layout.headsUp.floating)&&!q80&&this.insideChart&&!this.touchNoPan){Q40=y40=0;var D80=this.baselineHelper;if(D80.size){if(this.findBaselineHandle(d40,!0)){return;}}if(this.controls.anchorHandles){c80=Object.values(this.controls.anchorHandles);g80=!"1";for(var E80=0;E80<c80.length;E80++){e40=c80[E80];var _e2=e40,j80=_e2.handle,f80=_e2.sd;n80=this.resolveX(this.cx);U80=this.resolveY(this.cy);var _j80$getBoundingClien=j80.getBoundingClientRect(),B80=_j80$getBoundingClien.left,i80=_j80$getBoundingClien.top,w80=_j80$getBoundingClien.right,S80=_j80$getBoundingClien.bottom;B80-=10;w80+=+"10";if(i50.boxIntersects(B80,i80,w80,S80,n80,U80,n80,U80)){e40.highlighted=!![];this.repositioningAnchorSelector={sd:f80};j80.classList.add("stx-grab");g80=!0;}if(e40.highlighted===!!1){e40.highlighted=!{};}}if(g80){return;}}for(p40 in this.panels){W40=this.panels[p40];if(W40.highlighted){this.grabHandle(W40);return;}}this.grabbingScreen=!![];if(this.disableBackingStoreDuringTouch){this.disableBackingStore();}b40.chart.spanLock=!{};this.yToleranceBroken=![];U9d.O9X(0);this.grabStartX=U9d.x9X(Q40,u40);U9d.I9X(0);this.grabStartY=U9d.x9X(y40,r40);this.grabStartMicropixels=this.micropixels;this.grabStartScrollX=b40.chart.scroll;this.grabStartScrollY=b40.yAxis.scroll;this.grabStartPanel=this.currentPanel;if(this.swipeStart){this.swipeStart(b40.chart);}this.grabStartYAxis=this.whichYAxis(b40,this.backOutX(u40));this.grabStartZoom=this.grabStartYAxis?this.grabStartYAxis.zoom:0;setTimeout(function(t80){U9d.A9d();return function(){t80.grabbingHand();};}(this),100);}else{this.grabbingScreen=!!0;if(this.insideChart&&b40.subholder===d40.target){a80=this.currentVectorParameters.vectorType;if(i50.Drawing&&a80&&i50.Drawing[a80]&&new i50.Drawing[a80]().dragToDraw){this.userPointerDown=!!{};i50.ChartEngine.crosshairX=u40;i50.ChartEngine.crosshairY=r40;if(b40&&b40.chart.dataSet){this.crosshairTick=this.tickFromPixel(this.backOutX(i50.ChartEngine.crosshairX),this.currentPanel.chart);this.crosshairValue=this.adjustIfNecessary(b40,this.crosshairTick,this.valueFromPixel(this.backOutY(i50.ChartEngine.crosshairY),this.currentPanel));}this.drawingClick(b40,this.backOutX(u40),this.backOutY(r40));this.headsUpHR();return;}}}if(this.touches.length===("1"&2147483647)&&this.layout.crosshair&&!q80&&b40.subholder===d40.target){U9d.I9X(0);this.mousemoveinner(U9d.L9X(Q40,u40),U9d.L9X(y40,r40));}}if(this.touches.length==2){this.cancelLongHold=!!"1";this.swipe.end=!!{};if(!this.displayCrosshairs&&!this.touchNoPan||!this.insideChart){return;}N80=this.touches[+"1"];X40=N80.clientX;x80=N80.clientY;for(p40 in this.panels){W40=this.panels[p40];if(W40.highlighted){this.grabHandle(W40);return;}}b40=this.currentPanel;U9d.O9X(152);this.gestureStartDistance=Math.sqrt(U9d.x9X(u40,u40,r40,r40,x80,X40,X40,x80));this.pt={x1:u40,x2:X40,y1:r40,y2:x80};this.grabbingScreen=!!{};if(this.disableBackingStoreDuringTouch){this.disableBackingStore();}b40.chart.spanLock=!!"";U9d.O9X(0);this.grabStartX=U9d.x9X(Q40,u40);U9d.I9X(0);this.grabStartY=U9d.x9X(y40,r40);this.grabStartMicropixels=this.micropixels;this.grabStartScrollX=b40.chart.scroll;this.grabStartScrollY=b40.yAxis.scroll;this.grabStartPanel=b40;if(this.swipeStart){this.swipeStart(b40.chart);}this.grabStartCandleWidth=this.layout.candleWidth;this.grabStartYAxis=this.whichYAxis(b40,this.backOutX((u40+X40)/2))||b40.yAxis;this.grabStartZoom=this.grabStartYAxis?this.grabStartYAxis.zoom:0;this.grabStartPt=this.pt;this.grabStartValues={x1:this.pt.x1,x2:this.pt.x2,y1:this.valueFromPixel(this.pt.y1-this.top,b40),y2:this.valueFromPixel(this.pt.y2-this.top,b40),t1:this.tickFromPixel(this.pt.x1-this.left,b40.chart),t2:this.tickFromPixel(this.pt.x2-this.left,b40.chart)};this.twoFingerStart=!!1;setTimeout(function(C80){return function(){C80.grabbingHand();};}(this),100);}else if(this.touches.length==3){if(!this.displayCrosshairs){return;}h80=this.touches[0];V80=h80.clientX;this.grabStartX=V80;this.grabStartPeriodicity=this.layout.periodicity;}if(this.touches.length==1&&!this.layout.crosshair){this.mouseTimer=Date.now();this.longHoldTookEffect=![];if(this.longHoldTime||this.longHoldTime===0){this.startLongHoldTimer();}}this.runAppend("touchstart",arguments);};i50.ChartEngine.prototype.touchend=function(m80){var G9d=o2QQ;var d69,L69,z69,P80,k80,b9K,Y9K,o80,A80,I80,R80,J80,H80,M80,s80;if(i50.ChartEngine.ignoreTouch){return;}this.swipe.end=!0;G9d.l9d();if(i50.isSurface){}else{d69=1660294242;G9d.I9X(49);L69=G9d.x9X(0,"1200849865");z69=2;for(var A69=1;G9d.Y19(A69.toString(),A69.toString().length,90028)!==d69;A69++){this.touches=m80.touches;z69+=2;}if(G9d.g19(z69.toString(),z69.toString().length,58106)!==L69){this.touches=m80.touches;}this.changedTouches=m80.changedTouches;}if(this.runPrepend("touchend",arguments)){return;}this.cancelLongHold=!!{};if(this.touches.length<=1){if(this.layout.crosshair||this.currentVectorParameters.vectorType){if(!this.touches.length||!this.twoFingerStart){this.grabbingScreen=!"1";}}}if(this.touches.length){this.grabStartX=-1;this.grabStartY=-1;}P80=this.pinchingScreen;if(this.disableBackingStoreDuringTouch){this.reconstituteBackingStore();}if(!this.touches.length){this.touchingEvent=setTimeout(function(l80){return function(){l80.touching=!{};};}(this),+"500");if(i50.ChartEngine.resizingPanel){this.releaseHandle();return;}this.pinchingScreen=null;this.pinchingCenter=null;this.goneVertical=![];this.grabbingScreen=![];this.grabMode="";if(this.highlightedDraggable){if(this.dragPlotOrAxis){this.dragPlotOrAxis(this.cx,this.cy);}this.currentPanel=this.whichPanel(this.cy);}this.grabStartYAxis=null;this.displayDragOK();this.doDisplayCrosshairs();this.updateChartAccessories();}else{if(i50.ChartEngine.resizingPanel){return;}}k80=this.touches.length+ +"1";if(this.changedTouches.length==1){if(this.repositioningDrawing){b9K="v";b9K+="ector";this.changeOccurred(b9K);i50.clearCanvas(this.chart.tempCanvas,this);this.activateRepositioning(null);this.draw();if(!this.layout.crosshair&&!this.currentVectorParameters.vectorType){this.findHighlights(!{},!![]);}return;}if(this.repositioningBaseline){Y9K="s";Y9K+="t";Y9K+="x-grab";this.repositioningBaseline=null;this.controls.baselineHandle.classList.remove(Y9K);o80=this.mainSeriesRenderer||{};if(o80.params&&o80.params.baseline&&o80.params.type!="mountain"){;}this.draw();return;}if(this.repositioningAnchorSelector){i50.Studies.repositionAnchor(this,this.repositioningAnchorSelector.sd);this.repositioningAnchorSelector=null;Object.values(this.controls.anchorHandles).forEach(function(_ref24){var v80=_ref24.handle;G9d.A9d();return v80.classList.remove("stx-grab");});return;}A80=Date.now();if(this.openDialog===""&&m80.changedTouches.length){I80=m80.changedTouches[0];this.registerPointerEvent({x:I80.clientX,y:I80.clientY,time:A80},"up");}if(this.clicks.s2MS==-+"1"){this.clicks.e1MS=A80;R80=this.currentVectorParameters.vectorType;if(!i50.Drawing||!R80||!i50.Drawing[R80]||!new i50.Drawing[R80]().dragToDraw){if(this.clicks.e1MS-this.clicks.s1MS<750&&!this.longHoldTookEffect&&(!this.hasDragged||this.layout.crosshair)){setTimeout(this.touchSingleClick(k80,this.clicks.x,this.clicks.y),this.doubleClickTime+1);;}else{this.clicks={s1MS:-1,e1MS:-("1"&2147483647),s2MS:-1,e2MS:-1};}}this.userPointerDown=![];J80=this.backOutY(this.changedTouches[0].pageY)+this.crosshairYOffset;H80=this.backOutX(this.changedTouches[0].pageX)+this.crosshairXOffset;M80=this.currentPanel;s80=M80&&M80.subholder===m80.target;if(i50.Drawing&&this.activeDrawing&&this.activeDrawing.dragToDraw&&s80){this.drawingClick(M80,H80,J80);return;}if(this.isDoubleClick(!![])&&(s80||this.overYAxis||this.overXAxis)){this.touchDoubleClick(k80,this.clicks.x,this.clicks.y);}}else{this.clicks.e2MS=A80;this.clicks={s1MS:-1,e1MS:-1,s2MS:-1,e2MS:-1};}}else if(this.displayCrosshairs){if(this.grabEndPeriodicity!=-1&&!isNaN(this.grabEndPeriodicity)){if(i50.ChartEngine.isDailyInterval(this.layout.interval)||this.allowIntradayNMinute){this.setPeriodicity({period:this.grabEndPeriodicity,interval:this.layout.interval});}G9d.O9X(6);this.grabEndPeriodicity=-G9d.x9X(0,"1");}}if(this.changedTouches.length){if(!this.layout.crosshair&&!this.currentVectorParameters.vectorType&&k80==("1"&2147483647)||this.twoFingerStart&&!P80&&!this.touches.length){if(this.swipeRelease){this.swipeRelease();}this.findHighlights(!!"",!![]);}if(P80&&this.continuousZoom){this.continuousZoom.execute();this.continuousZoom.execute(!!{});}}if(!this.touches.length){this.twoFingerStart=![];}this.runAppend("touchend",arguments);};S50=![];i50.ChartEngine.prototype.mousemoveinner=i50.ChartEngine.prototype.mousemoveinner||function(G80,b80){if(!S50){console.error("touch feature requires activating movement feature.");}o2QQ.l9d();S50=!!{};};};r54=function r54(r80){var g9K,u80;g9K="unde";g9K+="fined";u80=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==g9K?_CIQ:r80.CIQ;u80.Visualization=u80.Visualization||function(d80){var F9K,T9K;F9K="functio";F9K+="n";if(!d80){console.log("CIQ.Visualization() missing attributes argument.");return;}if(_typeof(d80.renderFunction)!==F9K){T9K="CIQ.Visualization() missing render";T9K+="Function property in attributes.";console.log(T9K);return;}this.container=null;this.attributes=d80;o2QQ.A9d();this.data=null;this.object=null;};u80.extend(u80.Visualization.prototype,{destroy:function destroy(Q80){var F80;F80=this.container;u80.resizeObserver(F80,null,F80.resizeHandle);if(F80.autoGenerated){F80.remove();delete this.container;}else{F80.innerHTML="";}if(Q80){return;}this.attributes=null;this.container=null;this.data=null;this.object=null;o2QQ.l9d();this.destroy=this.draw=this.setAttributes=function(){};this.updateData=function(){return undefined;};},draw:function draw(p80){var x9K,d9K,W80,y80,L9K,z80,X80,e80;x9K="ob";x9K+="je";x9K+="c";x9K+="t";if(!this.data||_typeof(this.data)!==x9K){d9K="CIQ.Visuali";d9K+="zation.dr";d9K+="aw";d9K+="() missing data.";console.log(d9K);return;}W80=this.attributes;y80=W80.container||this.container;if(typeof y80==="string"){y80=document.querySelector(y80);}if(!y80){L9K="d";L9K+="i";L9K+="v";y80=document.createElement(L9K);y80.style.height=y80.style.width="300px";document.body.appendChild(y80);y80.autoGenerated=!0;}if(W80.stx){z80=W80.stx.chart.canvasShim;if(W80.useCanvasShim&&z80&&z80!==y80&&z80!==y80.parentNode){if(!y80.autoGenerated){y80=y80.cloneNode();y80.id="";y80.autoGenerated=!![];}z80.appendChild(y80);}}if(this.container&&this.container!==y80){this.destroy(!"");}o2QQ.A9d();if(!y80.resizeHandle){X80=function X80(x6f){return function(){if(x6f.data&&x6f.container&&document.body.contains(x6f.container)){x6f.draw.call(x6f,!!{});}};};y80.resizeHandle=u80.resizeObserver(y80,X80(this),null,"100">>1032507040);}this.container=y80;function Y80(E6f,a6f){return E6f.index<a6f.index?-1:E6f.index>a6f.index?"1"|0:0;}this.attributes=W80;W80=u80.ensureDefaults({container:this.container},this.attributes);e80=W80.renderFunction(Object.values(this.data).sort(Y80),W80);if(e80){if(W80.id){e80.id=W80.id;}if(p80||W80.forceReplace){this.container.innerHTML="";this.container.appendChild(e80);}}this.attributes=W80;this.object=e80;},setAttributes:function setAttributes(T6f,g6f){var n9K,B9K,A9K,c9K,z9K,c6f,q6f,K6f;n9K="stri";o2QQ.A9d();n9K+="ng";B9K="forceRepla";B9K+="ce";A9K="us";A9K+="eCanvas";A9K+="Sh";A9K+="im";c9K="s";c9K+="t";c9K+="x";z9K="rend";z9K+="erFunctio";z9K+="n";c6f=[z9K,"container",c9K,A9K,"id",B9K];q6f=!{};K6f=T6f;if(_typeof(T6f)==n9K){K6f={};K6f[T6f]=g6f;}if(_typeof(K6f)=="object"){for(var O6f in K6f){if(this.attributes[O6f]!==K6f[O6f]&&c6f.indexOf(O6f)!==-1){q6f=!!{};}this.attributes[O6f]=K6f[O6f];}}this.draw(q6f);},updateData:function updateData(N6f,B6f){var k9K,N9K,j6f,U6f,n6f,P9K,G9K;k9K="up";k9K+="d";k9K+="a";k9K+="te";N9K="repl";N9K+="a";N9K+="ce";n6f=Array.isArray(N6f)?N6f.reduce(function(Z6f,L6f){Z6f[L6f.name]=L6f;o2QQ.l9d();return Z6f;},{}):u80.shallowClone(N6f);for(j6f in n6f){U6f=n6f[j6f];if(Object.prototype.toString.call(U6f)!=="[object Object]"){n6f[j6f]={value:U6f};}if(!n6f[j6f].name){n6f[j6f].name=j6f;}if(!n6f[j6f].value){o2QQ.I9X(1);n6f[j6f].value=o2QQ.x9X(1,"0");}}if(!B6f){B6f="replace";}switch(B6f.toLowerCase()){case"delete":for(j6f in n6f){delete this.data[j6f];}break;case N9K:this.data={};case k9K:case"add":for(j6f in n6f){P9K="[object ";P9K+="N";P9K+="u";P9K+="mber]";if(!this.data[j6f]){this.data[j6f]={name:j6f};}U6f=n6f[j6f].value;if(Object.prototype.toString.call(U6f)==P9K){if(!this.data[j6f].value||B6f=="update"){this.data[j6f].value=0;}this.data[j6f].value+=U6f;}else{this.data[j6f].value=U6f;}for(var w6f in n6f[j6f]){if(w6f!=="value"){this.data[j6f][w6f]=n6f[j6f][w6f];}}}break;default:G9K="Invalid or missing action.  Valid values are";G9K+=" 'add', 'delete', 'replace', or 'update'.";console.log(G9K);}this.draw(this.attributes.forceReplace);return this;}});u80.ChartEngine.prototype.embedVisualization=function(D6f){if(!D6f){D6f={};}D6f.stx=this;D6f.useCanvasShim=!!"1";D6f.translator=function(f6f){return D6f.stx.translateIf(f6f);};return new u80.Visualization(D6f);};};d54=function d54(S6f){var Z69,p69,M39,i6f,D9K;Z69=-558738158;p69=941733242;M39=2;for(var h39=1;o2QQ.Y19(h39.toString(),h39.toString().length,84581)!==Z69;h39++){i6f=-_CIQ===""?_CIQ:S6f.CIQ;M39+=2;}if(o2QQ.Y19(M39.toString(),M39.toString().length,82064)!==p69){i6f=typeof _CIQ!=="undefined"?_CIQ:S6f.CIQ;}if(!i6f.Studies){D9K="medianPrice featu";D9K+="re re";D9K+="quires fi";D9K+="rst activating studies feature.";console.error(D9K);}else{i6f.Studies.calculateTypicalPrice=function(R6f,h6f){var Z8d=o2QQ;var t6f,C6f,m6f,k6f,o6f;t6f=h6f.chart.scrubbed;C6f=h6f.days;if(t6f.length<C6f+ +"1"){if(!h6f.overlay){h6f.error=!![];}return;}m6f=h6f.name;for(var A6f in h6f.outputs){Z8d.O9X(21);m6f=Z8d.x9X(A6f,2570<(1231,169.29)?(2090,4222)<=(9540,134.29)?0x94c:(0x2091,"T"):" ",m6f);}k6f="hlc/3";if(h6f.type=="Med Price"){k6f="hl/2";}else if(h6f.type=="Weighted Close"){k6f="hlcc/4";}o6f=0;if(h6f.startFrom<=C6f){h6f.startFrom=0;}for(var V6f=h6f.startFrom;V6f<t6f.length;V6f++){if(V6f&&t6f[V6f-1][m6f]){Z8d.O9X(126);var G8X=Z8d.L9X(17,1,19,4);o6f=t6f[V6f-G8X][m6f]*C6f;}o6f+=t6f[V6f][k6f];if(V6f>=C6f){Z8d.I9X(6);o6f-=t6f[Z8d.x9X(C6f,V6f)][k6f];Z8d.O9X(7);t6f[V6f][m6f]=Z8d.L9X(o6f,C6f);}}};i6f.Studies.studyLibrary=i6f.extend(i6f.Studies.studyLibrary,{"Med Price":{name:"Median Price",calculateFN:i6f.Studies.calculateTypicalPrice,inputs:{Period:14}}});}};F54=function F54(P6f){var J9K,M6f,W9K;J9K="undefine";J9K+="d";M6f=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==J9K?_CIQ:P6f.CIQ;o2QQ.l9d();if(!M6f.Studies){console.error("momentum feature requires first activating studies feature.");}else{W9K="f";W9K+="ie";W9K+="ld";M6f.Studies.calculateRateOfChange=function(d6f,I6f){var n8d=o2QQ;var H9K,f9K,s6f,b59,Y59,g59,J6f,b6f,H6f,s9K,v6f,G6f,u6f;H9K="Cen";H9K+="ter Li";H9K+="n";H9K+="e";f9K="Clo";f9K+="se";s6f=I6f.chart.scrubbed;n8d.l9d();if(s6f.length<I6f.days+ +"1"){b59=1914947650;Y59=-1925499852;g59=2;for(var T59=1;n8d.g19(T59.toString(),T59.toString().length,61548)!==b59;T59++){I6f.error=![];g59+=2;}if(n8d.g19(g59.toString(),g59.toString().length,94717)!==Y59){I6f.error=!!"1";}return;}J6f=I6f.inputs.Field;if(!J6f||J6f=="field"){J6f=f9K;}if(I6f.parameters.isVolume){J6f="Volume";}b6f=I6f.name;for(var r6f in I6f.outputs){n8d.O9X(21);b6f=n8d.x9X(r6f," ",b6f);}H6f=I6f.inputs[H9K];if(!H6f){H6f=0;}else{H6f=parseInt(H6f,10);}for(var l6f=Math.max(I6f.startFrom,I6f.days);l6f<s6f.length;l6f++){s9K="ob";s9K+="j";s9K+="ect";v6f=s6f[l6f][J6f];if(v6f&&_typeof(v6f)=="object"){v6f=v6f[I6f.subField];}G6f=s6f[l6f-I6f.days][J6f];if(G6f&&_typeof(G6f)==s9K){G6f=G6f[I6f.subField];}if(I6f.type=="Momentum"){n8d.I9X(5);s6f[l6f][b6f]=n8d.L9X(G6f,H6f,v6f);}else{u6f=G6f;if(u6f){n8d.O9X(156);s6f[l6f][b6f]=n8d.L9X(1,"100",u6f,H6f,v6f,295369664);}}}};M6f.Studies.studyLibrary=M6f.extend(M6f.Studies.studyLibrary,{"Price ROC":{name:"Price Rate of Change",calculateFN:M6f.Studies.calculateRateOfChange,inputs:{Period:+"14",Field:W9K}},Momentum:{name:"Momentum Indicator",calculateFN:M6f.Studies.calculateRateOfChange,inputs:{Period:14},centerline:0}});}};Q54=function Q54(Q6f){var F6f,I9K;o2QQ.A9d();F6f=typeof _CIQ!=="undefined"?_CIQ:Q6f.CIQ;if(!F6f.Studies){console.error("priceRelative feature requires first activating studies feature.");}else{I9K="Pri";I9K+="ce Rel";I9K+="a";I9K+="tive";F6f.Studies.initPriceRelative=function(W6f,e6f,X6f,p6f,Y6f,E1f){var y6f,z6f;y6f=F6f.Studies.initializeFN(W6f,e6f,X6f,p6f,Y6f,E1f);z6f=[y6f.inputs["Comparison Symbol"].toUpperCase()];F6f.Studies.fetchAdditionalInstruments(W6f,y6f,z6f);return y6f;};F6f.Studies.calculatePriceRelative=function(j1f,K1f){var O1f,T1f,g1f,x1f,q1f,a1f;O1f=K1f.chart.scrubbed;T1f=K1f.inputs["Comparison Symbol"].toUpperCase();if(!T1f){T1f=K1f.study.inputs["Comparison Symbol"];}g1f={};x1f=j1f.chart.symbol||"";x1f=x1f.replace(/[=+\-*\\%]/g,"");g1f[x1f]=O1f.slice(K1f.startFrom);if(!g1f[x1f].length){return;}if(x1f!=T1f){g1f[T1f]=null;}o2QQ.I9X(65);o2QQ.A9d();q1f=F6f.computeEquationChart(o2QQ.x9X(6332>=(657.23,"807.67"*1)?7790>(8516,"169.18"-0)?"[":"Q":"v",T1f,+"214.42">=709.26?(480.58,!!"1"):"]",x1f,"]/["),g1f);a1f=0;for(var c1f=K1f.startFrom;c1f<O1f.length&&a1f<q1f.length;c1f++){while(a1f<q1f.length&&O1f[c1f].DT.getTime()>q1f[a1f].DT.getTime()){a1f++;}if(O1f[c1f].DT.getTime()<q1f[a1f].DT.getTime())continue;O1f[c1f]["Result "+K1f.name]=q1f[a1f].Close;a1f++;}};F6f.Studies.displayVsComparisonSymbol=function(U1f,n1f,N1f){var L1f,q9K,B1f,D1f,Z1f;L1f=n1f.inputs["Comparison Symbol"].toUpperCase();if(!U1f.getSeries({symbol:L1f,chart:n1f.chart}).length){q9K=":";q9K+=" ";U1f.displayErrorAsWatermark(n1f.panel,U1f.translateIf(n1f.study.name)+q9K+U1f.translateIf("Not Available"));return;}B1f={skipTransform:U1f.panels[n1f.panel].name!=n1f.chart.name,panelName:n1f.panel,band:"Result "+n1f.name,threshold:n1f.study.centerline,yAxis:n1f.getYAxis(U1f),gapDisplayStyle:!!"1"};D1f=B1f.yAxis?B1f.yAxis.flipped:U1f.panels[n1f.panel].yAxis.flipped;Z1f=0.3;if(!n1f.highlight&&U1f.highlightedDraggable){Z1f*=+"0.3";}for(var w1f=N1f.length-("1"|0);w1f>=0;w1f--){if(N1f[w1f]&&N1f[w1f][L1f]){F6f.Studies.displaySeriesAsLine(U1f,n1f,N1f);if(n1f.study.centerline||n1f.study.centerline===0){if(n1f.outputs.Gain){F6f.preparePeakValleyFill(U1f,F6f.extend(B1f,{direction:D1f?-1:1,color:F6f.Studies.determineColor(n1f.outputs.Gain),opacity:Z1f}));}if(n1f.outputs.Loss){F6f.preparePeakValleyFill(U1f,F6f.extend(B1f,{direction:D1f?1:-1,color:F6f.Studies.determineColor(n1f.outputs.Loss),opacity:Z1f}));}}return;}}};F6f.Studies.fetchAdditionalInstruments=function(S1f,f1f,k1f,M1f){var o1f,m1f,h1f,V1f,t1f,R1f;if(!S1f.quoteDriver){console.log("CIQ.Studies.fetchAdditionalInstruments: No quotefeed to fetch symbol");return;}o1f=S1f.panels[f1f.panel].chart;f1f.symbols=k1f;for(m1f=0;m1f<k1f.length;m1f++){h1f=V1f=k1f[m1f];if(_typeof(V1f)=="object"){h1f=V1f.symbol;}else{V1f={symbol:h1f};}t1f={symbol:h1f,symbolObject:V1f,bucket:"study",studyName:f1f.name,chartName:o1f.name,action:"add-study"};F6f.extend(t1f,M1f);R1f=t1f.loadData;if(S1f.currentlyImporting){t1f.loadData=!{};}if(!f1f.series){f1f.series={};}f1f.series[h1f]=S1f.addSeries(null,t1f,P1f);f1f.series[h1f].parameters.loadData=R1f;}function P1f(){S1f.createDataSet();S1f.draw();}};F6f.Studies.studyLibrary=F6f.extend(F6f.Studies.studyLibrary,{"P Rel":{name:I9K,initializeFN:F6f.Studies.initPriceRelative,seriesFN:F6f.Studies.displayVsComparisonSymbol,calculateFN:F6f.Studies.calculatePriceRelative,centerline:0,inputs:{"Comparison Symbol":"SPY"},deferUpdate:!![]}});}};y54=function y54(s1f){var a9K,I1f,w4K,j4K,t4K;a9K="und";a9K+="ef";a9K+="i";o2QQ.l9d();a9K+="ned";I1f=(typeof _CIQ==="undefined"?"undefined":_typeof(_CIQ))!==a9K?_CIQ:s1f.CIQ;if(!I1f.Studies){console.error("vwap feature requires first activating studies feature.");}else{w4K="#";w4K+="FF";w4K+="0000";j4K="V";j4K+="WAP";t4K="#";t4K+="FF0";t4K+="000";I1f.Studies.calculateVWAP=function(b1f,J1f){var A8d=o2QQ;A8d.A9d();var u1f,H1f,Q9K,y1f,j59,w59,e59,R9K,z1f,G1f,r1f,e1f,Y1f,l9K,r9K,d1f,O0f,K9K,j0f,t0f,p1f,X1f,L0f,i0f,C9K,m9K,O9K,X9K,u9K,Z9K;u1f=J1f.type=="AVWAP";H1f=J1f.chart.scrubbed;if(!u1f&&I1f.ChartEngine.isDailyInterval(b1f.layout.interval)){Q9K="VWAP is I";Q9K+="ntraday Only";J1f.error=Q9K;return;}y1f="h";y1f+="l";y1f+="c";y1f+="/3";if(u1f){j59=-938396619;A8d.I9X(1);w59=A8d.L9X(1,"1947925338");e59=2;for(var V59=1;A8d.g19(V59.toString(),V59.toString().length,41955)!==j59;V59++){y1f=J1f.inputs.Field;e59+=2;}if(A8d.g19(e59.toString(),e59.toString().length,39249)!==w59){y1f=J1f.inputs.Field;}y1f=J1f.inputs.Field;if(!y1f||y1f=="field"){R9K="l";R9K+="ayo";R9K+="u";R9K+="t";y1f=J1f.inputs.Field="hlc/3";b1f.changeOccurred(R9K);}}z1f=null;G1f=0;r1f=0;e1f=0;Y1f=!"1";if(J1f.startFrom>1){l9K="_V";l9K+="xP";l9K+="2 ";G1f=H1f[J1f.startFrom-1]["_V "+J1f.name]||0;r1f=H1f[J1f.startFrom-+"1"]["_VxP "+J1f.name]||0;e1f=H1f[J1f.startFrom-1][l9K+J1f.name]||0;}if(u1f){r9K="Anch";r9K+="or ";r9K+="Dat";r9K+="e";d1f=J1f.inputs[r9K].replace(/-/g,"");if(d1f.search(/^\d{8}$/)){J1f.error="Invalid Anchor Date";return;}O0f=J1f.inputs["Anchor Time"].replace(/:/g,"");if(!O0f.search(/^\d{4,6}$/)){d1f+=O0f;}d1f=I1f.strToDateTime(d1f.replace(/\D/g,""));if(!J1f.startFrom&&d1f>=H1f[+"0"].DT){J1f.startFrom=b1f.tickFromDate(d1f,b1f.chart,null,!![]);}if(J1f.inputs["Anchor Selector"]){I1f.Studies.initAnchorHandle(b1f,J1f);}else{I1f.Studies.removeAnchorHandle(b1f,J1f);}}for(var l1f=J1f.startFrom;l1f<H1f.length;l1f++){K9K="V";K9K+="W";K9K+="AP";K9K+=" ";if(!u1f){if(z1f===null){z1f=I1f.Studies.getMarketOffset({stx:b1f,localQuoteDate:H1f[l1f].DT,shiftToDateBoundary:!0});}if(H1f[l1f-+"1"]&&H1f[l1f-1].DT){j0f=new Date(new Date(+H1f[l1f].DT).setMilliseconds(H1f[l1f].DT.getMilliseconds()+z1f));t0f=new Date(new Date(+H1f[l1f-("1"^0)].DT).setMilliseconds(H1f[l1f-1].DT.getMilliseconds()+z1f));if(t0f.getDate()!=j0f.getDate()&&b1f.chart.market.isMarketDate(j0f)){z1f=null;G1f=r1f=e1f=0;}}}p1f=H1f[l1f][y1f];X1f=H1f[l1f].Volume;if(u1f&&!X1f){X1f=1;}G1f+=X1f;A8d.I9X(1);r1f+=A8d.L9X(p1f,X1f);A8d.I9X(83);e1f+=A8d.L9X(p1f,p1f,X1f);if(!u1f&&!G1f)continue;H1f[l1f]["_V "+J1f.name]=G1f;H1f[l1f]["_VxP "+J1f.name]=r1f;H1f[l1f]["_VxP2 "+J1f.name]=e1f;L0f=H1f[l1f]["_SDVWAP "+J1f.name]=Math.sqrt(Math.max("0"|0,e1f/G1f-Math.pow(r1f/G1f,2)));A8d.O9X(7);i0f=H1f[l1f][K9K+J1f.name]=A8d.L9X(r1f,G1f);for(var F1f=1;F1f<=3;F1f++){C9K="SD";C9K+="V";C9K+="WA";C9K+="P";A8d.I9X(38);H1f[l1f][C9K+F1f+"+ "+J1f.name]=A8d.x9X(F1f,L0f,i0f);A8d.O9X(157);H1f[l1f]["SDVWAP"+F1f+"- "+J1f.name]=A8d.x9X(F1f,L0f,i0f);}Y1f=!!{};}for(var v1f=+"1";v1f<=3;v1f++){m9K="\u03C3";m9K+=")";O9K="Di";O9K+="splay ";if(J1f.inputs[O9K+v1f+" Standard Deviation ("+v1f+m9K]){X9K=" Standard ";X9K+="Dev";X9K+="iation (";u9K="\u03C3";u9K+=")";A8d.O9X(43);J1f.outputMap["SDVWAP"+v1f+"+ "+J1f.name]=A8d.x9X(u9K," Standard Deviation (",v1f,v1f);A8d.I9X(43);J1f.outputMap["SDVWAP"+v1f+"- "+J1f.name]=A8d.x9X("\u03C3)",X9K,v1f,v1f);}}if(!u1f&&!Y1f){Z9K="VWAP";Z9K+=" Requi";Z9K+="res Vo";Z9K+="lume";J1f.error=Z9K;}};I1f.Studies.initAnchoredVWAP=function(s0f,G0f,C0f,Q0f,W0f,E3f){var p9K,E4K,M4K,v0f;p9K="A";p9K+="n";p9K+="chor Date";if(!C0f[p9K]&&!C0f["Anchor Time"]){var o0f=s0f.chart.dataSegment;for(var A0f=0;o0f&&A0f<o0f.length;A0f++){if(o0f[A0f]){E4K="H";E4K+="H:";E4K+="mm:";E4K+="ss";M4K="Anchor";M4K+=" Ti";M4K+="me";var M0f=o0f[A0f].DT;C0f["Anchor Date"]=I1f.dateToStr(M0f,"YYYY-MM-dd");C0f[M4K]=I1f.dateToStr(M0f,E4K);break;}}}v0f=I1f.Studies.initializeFN(s0f,G0f,C0f,Q0f,W0f,E3f);return v0f;};I1f.Studies.displayVWAP=function(x3f,a3f,j3f){var h4K,q3f,c3f,g3f,U4K,n3f,K3f,O3f,T3f,S4K,i4K,y4K,v4K;h4K="Display 2 Standard Deviatio";h4K+="n (2\u03C3)";o2QQ.A9d();I1f.Studies.displaySeriesAsLine(x3f,a3f,j3f);q3f=a3f.inputs["Display 1 Standard Deviation (1\u03C3)"];c3f=a3f.inputs[h4K];g3f=a3f.inputs["Display 3 Standard Deviation (3\u03C3)"];if((q3f||c3f||g3f)&&a3f.inputs.Shading){U4K="VWAP";U4K+=" ";n3f=x3f.panels[a3f.panel];K3f={opacity:a3f.parameters.opacity?a3f.parameters.opacity:0.2,skipTransform:n3f.name!=a3f.chart.name,yAxis:a3f.getYAxis(x3f)};if(!a3f.highlight&&x3f.highlightedDraggable){K3f.opacity*=0.3;}O3f="VWAP "+a3f.name;T3f=U4K+a3f.name;if(q3f){S4K="SDVWAP";S4K+="1+ ";I1f.prepareChannelFill(x3f,I1f.extend({panelName:a3f.panel,topBand:"SDVWAP1+ "+a3f.name,bottomBand:O3f,color:I1f.Studies.determineColor(a3f.outputs[a3f.outputMap[S4K+a3f.name]])},K3f));I1f.prepareChannelFill(x3f,I1f.extend({panelName:a3f.panel,topBand:"SDVWAP1- "+a3f.name,bottomBand:T3f,color:I1f.Studies.determineColor(a3f.outputs[a3f.outputMap["SDVWAP1- "+a3f.name]])},K3f));O3f="SDVWAP1+ "+a3f.name;T3f="SDVWAP1- "+a3f.name;}if(c3f){i4K="SD";i4K+="VW";i4K+="A";i4K+="P2+ ";y4K="S";y4K+="DVWAP2-";y4K+=" ";I1f.prepareChannelFill(x3f,I1f.extend({panelName:a3f.panel,topBand:"SDVWAP2+ "+a3f.name,bottomBand:O3f,color:I1f.Studies.determineColor(a3f.outputs[a3f.outputMap["SDVWAP2+ "+a3f.name]])},K3f));I1f.prepareChannelFill(x3f,I1f.extend({panelName:a3f.panel,topBand:"SDVWAP2- "+a3f.name,bottomBand:T3f,color:I1f.Studies.determineColor(a3f.outputs[a3f.outputMap[y4K+a3f.name]])},K3f));O3f=i4K+a3f.name;T3f="SDVWAP2- "+a3f.name;}if(g3f){v4K="SDVWAP3";v4K+="- ";I1f.prepareChannelFill(x3f,I1f.extend({panelName:a3f.panel,topBand:"SDVWAP3+ "+a3f.name,bottomBand:O3f,color:I1f.Studies.determineColor(a3f.outputs[a3f.outputMap["SDVWAP3+ "+a3f.name]])},K3f));I1f.prepareChannelFill(x3f,I1f.extend({panelName:a3f.panel,topBand:"SDVWAP3- "+a3f.name,bottomBand:T3f,color:I1f.Studies.determineColor(a3f.outputs[a3f.outputMap[v4K+a3f.name]])},K3f));}}if(a3f.anchorHandle){I1f.Studies.displayAnchorHandleAndLine(x3f,a3f,j3f);}};I1f.Studies.studyLibrary=I1f.extend(I1f.Studies.studyLibrary,{AVWAP:{name:"Anchored VWAP",overlay:!![],calculateFN:I1f.Studies.calculateVWAP,seriesFN:I1f.Studies.displayVWAP,initializeFN:I1f.Studies.initAnchoredVWAP,removeFN:I1f.Studies.removeAnchorHandle,inputs:{Field:"field","Anchor Date":"","Anchor Time":"","Display 1 Standard Deviation (1\u03C3)":!!"","Display 2 Standard Deviation (2\u03C3)":!{},"Display 3 Standard Deviation (3\u03C3)":!{},Shading:![],"Anchor Selector":!!{}},outputs:{VWAP:t4K,"1 Standard Deviation (1\u03C3)":"#e1e1e1","2 Standard Deviation (2\u03C3)":"#85c99e","3 Standard Deviation (3\u03C3)":"#fff69e"},parameters:{init:{opacity:0.2}},attributes:{"Anchor Date":{placeholder:"yyyy-mm-dd"},"Anchor Time":{placeholder:"hh:mm:ss",step:1}}},VWAP:{name:j4K,overlay:!!{},calculateFN:I1f.Studies.calculateVWAP,seriesFN:I1f.Studies.displayVWAP,inputs:{"Display 1 Standard Deviation (1\u03C3)":![],"Display 2 Standard Deviation (2\u03C3)":!!0,"Display 3 Standard Deviation (3\u03C3)":![],Shading:![]},outputs:{VWAP:w4K,"1 Standard Deviation (1\u03C3)":"#e1e1e1","2 Standard Deviation (2\u03C3)":"#85c99e","3 Standard Deviation (3\u03C3)":"#fff69e"},parameters:{init:{opacity:0.2}}}});}};W54=function W54(B3f){o2QQ.A9d();var U3f;U3f=typeof _CIQ!=="undefined"?_CIQ:B3f.CIQ;if(!U3f.Studies){console.error("zigzag feature requires first activating studies feature.");}else{U3f.Studies.calculateZigZag=function(I3f,Z3f){var s8d=o2QQ;var w3f,t3f,D3f,f3f,M3f,L3f,N3f,S3f,C3f,m3f,P3f,o4K,h3f,V4K,o3f,A3f,b4K,V3f;w3f=Z3f.chart.scrubbed;if(!w3f||!w3f.length){return;}t3f=Z3f.highLowChart;D3f=null;f3f=null;M3f=Z3f.inputs["Distance(%)"];L3f=0;N3f=0;S3f=0;C3f=null;m3f=null;P3f=0;for(var k3f=Math.min(w3f.length-1,Z3f.startFrom);k3f>=0;k3f--){o4K="_";o4K+="s";o4K+="tate ";P3f=k3f;if(w3f[k3f][o4K+Z3f.name]){h3f=w3f[k3f]["_state "+Z3f.name];D3f=h3f[0];f3f=h3f[1];L3f=h3f[2];N3f=h3f[3];S3f=h3f[4];C3f=h3f[5];m3f=h3f[6];break;}}for(var i3f=P3f;i3f<w3f.length;i3f++){V4K="H";V4K+="i";V4K+="g";V4K+="h";o3f=w3f[i3f][t3f?V4K:"Close"];A3f=w3f[i3f][t3f?"Low":"Close"];if(f3f===null||f3f<o3f){f3f=o3f;if(L3f<0){D3f=A3f;}s8d.I9X(158);C3f=s8d.L9X(M3f,1,f3f,100);if(L3f>-("1"&2147483647)){if(m3f!==null&&f3f>m3f){b4K="L";b4K+="o";b4K+="w";w3f[N3f]["Result "+Z3f.name]=w3f[N3f][t3f?b4K:"Close"];R3f(S3f,N3f);s8d.I9X(53);L3f=-s8d.x9X(878828256,"1");D3f=A3f;S3f=N3f;N3f=i3f;continue;}}else{N3f=i3f;}}if(D3f===null||D3f>A3f){D3f=A3f;if(L3f>0){f3f=o3f;}s8d.I9X(159);m3f=s8d.L9X(100,D3f,M3f,1);if(L3f<+"1"){if(C3f!==null&&D3f<C3f){w3f[N3f]["Result "+Z3f.name]=w3f[N3f][t3f?"High":"Close"];R3f(S3f,N3f);L3f=1;f3f=o3f;S3f=N3f;N3f=i3f;continue;}}else{N3f=i3f;}}}w3f[N3f]["Result "+Z3f.name]=w3f[N3f][t3f?L3f==1?"Low":"High":"Close"];function R3f(J3f,H3f){var e4K;for(var s3f=J3f+1;s3f<H3f;s3f++){e4K="Re";e4K+="su";e4K+="lt ";w3f[s3f]["ShadowResult "+Z3f.name]=(w3f[H3f]["Result "+Z3f.name]-w3f[J3f]["Result "+Z3f.name])*(s3f-J3f)/(H3f-J3f)+w3f[J3f]["Result "+Z3f.name];delete w3f[s3f][e4K+Z3f.name];}}w3f[N3f]["_state "+Z3f.name]=[D3f,f3f,L3f,N3f,S3f,C3f,m3f];R3f(S3f,N3f);s8d.I9X(160);var D8X=s8d.x9X(6,6,12,4,11);V3f=w3f.length-D8X;while(V3f>N3f){if(w3f[V3f].Close||w3f[V3f].Close===0){w3f[V3f]["Result "+Z3f.name]=w3f[V3f][t3f?L3f==1?"High":"Low":"Close"];break;}V3f--;}s8d.l9d();R3f(N3f,V3f);};U3f.Studies.displayZigZag=function(u3f,l3f,r3f){var j8d=o2QQ;var F4K,Q3f,d3f,b3f,Y4K,g4K,v3f,G3f,T4K;F4K="Sha";F4K+="d";F4K+="o";F4K+="wResult ";Q3f=u3f.chart.highLowBars;if(l3f.highLowChart!=Q3f){l3f.highLowChart=Q3f;l3f.startFrom=0;l3f.study.calculateFN(u3f,l3f);}d3f=u3f.chart;for(var F3f=0;F3f<r3f.length;F3f++){b3f=r3f[F3f];if(b3f){if(b3f["_shadowCopy "+l3f.name]){Y4K="R";Y4K+="esu";Y4K+="lt";Y4K+=" ";delete b3f[Y4K+l3f.name];delete b3f["_shadowCopy "+l3f.name];}if(!b3f["Result "+l3f.name]){g4K="Resul";g4K+="t";g4K+=" ";if(b3f.transform){delete b3f.transform[g4K+l3f.name];}}}}v3f=r3f[0];j8d.I9X(6);var J8X=j8d.L9X(15,16);G3f=r3f[r3f.length-J8X];if(v3f&&v3f[F4K+l3f.name]){T4K="_";T4K+="sh";T4K+="adowCopy ";v3f["Result "+l3f.name]=v3f["ShadowResult "+l3f.name];if(v3f.transform){v3f.transform["Result "+l3f.name]=d3f.transformFunc(u3f,d3f,v3f["ShadowResult "+l3f.name]);}j8d.I9X(50);v3f[T4K+l3f.name]=j8d.x9X("1",1);}if(G3f&&G3f["ShadowResult "+l3f.name]){G3f["Result "+l3f.name]=G3f["ShadowResult "+l3f.name];if(G3f.transform){G3f.transform["Result "+l3f.name]=d3f.transformFunc(u3f,d3f,G3f["ShadowResult "+l3f.name]);}G3f["_shadowCopy "+l3f.name]=1;}U3f.Studies.displaySeriesAsLine(u3f,l3f,r3f);};U3f.Studies.studyLibrary=U3f.extend(U3f.Studies.studyLibrary,{ZigZag:{name:"ZigZag",overlay:!!{},seriesFN:U3f.Studies.displayZigZag,calculateFN:U3f.Studies.calculateZigZag,inputs:{"Distance(%)":+"10"},parameters:{init:{label:!{}}},attributes:{"Distance(%)":{min:0.1,step:+"0.1"}}}});}};Y54={CIQ:_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"],SplinePlotter:_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["SplinePlotter"],timezoneJS:_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["timezoneJS"],$$:_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["$$"],$$$:_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["$$$"]};if((typeof __TREE_SHAKE__==="undefined"?"undefined":_typeof(__TREE_SHAKE__))===W0EE||!__TREE_SHAKE__){(Y54.CIQ||_js_chartiq_js__WEBPACK_IMPORTED_MODULE_0__["CIQ"]).activateImports(S54,h54,V54,t54,C54,m54,k54,o54,A54,R54,M54,P54,I54,s54,J54,H54,l54,v54,G54,b54,u54,r54,d54,F54,Q54,y54,W54,null);}/* eslint-enable  */ /* jshint ignore:end   */ /* ignore jslint end   */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ })

}]);
//# sourceMappingURL=chartiq-8db5e6.smartcharts.js.map
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_deriv_deriv-api_dist_DerivAPIBasic_js"],{

/***/ "../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js":
/*!********************************************************************!*\
  !*** ../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js ***!
  \********************************************************************/
/***/ (function(module) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_586__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_586__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_586__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_586__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_586__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_586__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_586__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_586__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_586__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_586__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_586__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_586__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_586__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_586__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_586__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_586__(__nested_webpack_require_586__.s = \"./src/deriv_api/DerivAPIBasic.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/@babel/runtime/helpers/arrayWithHoles.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _arrayWithHoles(arr) {\\n  if (Array.isArray(arr)) return arr;\\n}\\n\\nmodule.exports = _arrayWithHoles;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/arrayWithHoles.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _assertThisInitialized(self) {\\n  if (self === void 0) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return self;\\n}\\n\\nmodule.exports = _assertThisInitialized;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/assertThisInitialized.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n  try {\\n    var info = gen[key](arg);\\n    var value = info.value;\\n  } catch (error) {\\n    reject(error);\\n    return;\\n  }\\n\\n  if (info.done) {\\n    resolve(value);\\n  } else {\\n    Promise.resolve(value).then(_next, _throw);\\n  }\\n}\\n\\nfunction _asyncToGenerator(fn) {\\n  return function () {\\n    var self = this,\\n        args = arguments;\\n    return new Promise(function (resolve, reject) {\\n      var gen = fn.apply(self, args);\\n\\n      function _next(value) {\\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n      }\\n\\n      function _throw(err) {\\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n      }\\n\\n      _next(undefined);\\n    });\\n  };\\n}\\n\\nmodule.exports = _asyncToGenerator;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/asyncToGenerator.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nmodule.exports = _classCallCheck;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/classCallCheck.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/construct.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\\\");\\n\\nfunction isNativeReflectConstruct() {\\n  if (typeof Reflect === \\\"undefined\\\" || !Reflect.construct) return false;\\n  if (Reflect.construct.sham) return false;\\n  if (typeof Proxy === \\\"function\\\") return true;\\n\\n  try {\\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\\n    return true;\\n  } catch (e) {\\n    return false;\\n  }\\n}\\n\\nfunction _construct(Parent, args, Class) {\\n  if (isNativeReflectConstruct()) {\\n    module.exports = _construct = Reflect.construct;\\n  } else {\\n    module.exports = _construct = function _construct(Parent, args, Class) {\\n      var a = [null];\\n      a.push.apply(a, args);\\n      var Constructor = Function.bind.apply(Parent, a);\\n      var instance = new Constructor();\\n      if (Class) setPrototypeOf(instance, Class.prototype);\\n      return instance;\\n    };\\n  }\\n\\n  return _construct.apply(null, arguments);\\n}\\n\\nmodule.exports = _construct;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/construct.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/createClass.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _defineProperties(target, props) {\\n  for (var i = 0; i < props.length; i++) {\\n    var descriptor = props[i];\\n    descriptor.enumerable = descriptor.enumerable || false;\\n    descriptor.configurable = true;\\n    if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n    Object.defineProperty(target, descriptor.key, descriptor);\\n  }\\n}\\n\\nfunction _createClass(Constructor, protoProps, staticProps) {\\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n  if (staticProps) _defineProperties(Constructor, staticProps);\\n  return Constructor;\\n}\\n\\nmodule.exports = _createClass;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/createClass.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/defineProperty.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _defineProperty(obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n  } else {\\n    obj[key] = value;\\n  }\\n\\n  return obj;\\n}\\n\\nmodule.exports = _defineProperty;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/defineProperty.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _getPrototypeOf(o) {\\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n    return o.__proto__ || Object.getPrototypeOf(o);\\n  };\\n  return _getPrototypeOf(o);\\n}\\n\\nmodule.exports = _getPrototypeOf;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/getPrototypeOf.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/inherits.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\\\");\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) setPrototypeOf(subClass, superClass);\\n}\\n\\nmodule.exports = _inherits;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/inherits.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/isNativeFunction.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _isNativeFunction(fn) {\\n  return Function.toString.call(fn).indexOf(\\\"[native code]\\\") !== -1;\\n}\\n\\nmodule.exports = _isNativeFunction;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/isNativeFunction.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _iterableToArrayLimit(arr, i) {\\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \\\"[object Arguments]\\\")) {\\n    return;\\n  }\\n\\n  var _arr = [];\\n  var _n = true;\\n  var _d = false;\\n  var _e = undefined;\\n\\n  try {\\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n      _arr.push(_s.value);\\n\\n      if (i && _arr.length === i) break;\\n    }\\n  } catch (err) {\\n    _d = true;\\n    _e = err;\\n  } finally {\\n    try {\\n      if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"]();\\n    } finally {\\n      if (_d) throw _e;\\n    }\\n  }\\n\\n  return _arr;\\n}\\n\\nmodule.exports = _iterableToArrayLimit;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/nonIterableRest.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _nonIterableRest() {\\n  throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n}\\n\\nmodule.exports = _nonIterableRest;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/nonIterableRest.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/objectSpread.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/objectSpread.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var defineProperty = __webpack_require__(/*! ./defineProperty */ \\\"./node_modules/@babel/runtime/helpers/defineProperty.js\\\");\\n\\nfunction _objectSpread(target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i] != null ? arguments[i] : {};\\n    var ownKeys = Object.keys(source);\\n\\n    if (typeof Object.getOwnPropertySymbols === 'function') {\\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\\n      }));\\n    }\\n\\n    ownKeys.forEach(function (key) {\\n      defineProperty(target, key, source[key]);\\n    });\\n  }\\n\\n  return target;\\n}\\n\\nmodule.exports = _objectSpread;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/objectSpread.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!\n  \\**************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var _typeof = __webpack_require__(/*! ../helpers/typeof */ \\\"./node_modules/@babel/runtime/helpers/typeof.js\\\");\\n\\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ \\\"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\\\");\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n    return call;\\n  }\\n\\n  return assertThisInitialized(self);\\n}\\n\\nmodule.exports = _possibleConstructorReturn;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _setPrototypeOf(o, p) {\\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n    o.__proto__ = p;\\n    return o;\\n  };\\n\\n  return _setPrototypeOf(o, p);\\n}\\n\\nmodule.exports = _setPrototypeOf;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/setPrototypeOf.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!\n  \\**************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \\\"./node_modules/@babel/runtime/helpers/arrayWithHoles.js\\\");\\n\\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \\\"./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\\\");\\n\\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \\\"./node_modules/@babel/runtime/helpers/nonIterableRest.js\\\");\\n\\nfunction _slicedToArray(arr, i) {\\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\\n}\\n\\nmodule.exports = _slicedToArray;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/slicedToArray.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/typeof.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _typeof2(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof2(obj); }\\n\\nfunction _typeof(obj) {\\n  if (typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\") {\\n    module.exports = _typeof = function _typeof(obj) {\\n      return _typeof2(obj);\\n    };\\n  } else {\\n    module.exports = _typeof = function _typeof(obj) {\\n      return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : _typeof2(obj);\\n    };\\n  }\\n\\n  return _typeof(obj);\\n}\\n\\nmodule.exports = _typeof;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/typeof.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n\\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\\\");\\n\\nvar isNativeFunction = __webpack_require__(/*! ./isNativeFunction */ \\\"./node_modules/@babel/runtime/helpers/isNativeFunction.js\\\");\\n\\nvar construct = __webpack_require__(/*! ./construct */ \\\"./node_modules/@babel/runtime/helpers/construct.js\\\");\\n\\nfunction _wrapNativeSuper(Class) {\\n  var _cache = typeof Map === \\\"function\\\" ? new Map() : undefined;\\n\\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\\n    if (Class === null || !isNativeFunction(Class)) return Class;\\n\\n    if (typeof Class !== \\\"function\\\") {\\n      throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n    }\\n\\n    if (typeof _cache !== \\\"undefined\\\") {\\n      if (_cache.has(Class)) return _cache.get(Class);\\n\\n      _cache.set(Class, Wrapper);\\n    }\\n\\n    function Wrapper() {\\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\\n    }\\n\\n    Wrapper.prototype = Object.create(Class.prototype, {\\n      constructor: {\\n        value: Wrapper,\\n        enumerable: false,\\n        writable: true,\\n        configurable: true\\n      }\\n    });\\n    return setPrototypeOf(Wrapper, Class);\\n  };\\n\\n  return _wrapNativeSuper(Class);\\n}\\n\\nmodule.exports = _wrapNativeSuper;\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/regenerator/index.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"module.exports = __webpack_require__(/*! regenerator-runtime */ \\\"./node_modules/regenerator-runtime/runtime.js\\\");\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/@babel/runtime/regenerator/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/json-stable-stringify/index.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/json-stable-stringify/index.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(/*! jsonify */ \\\"./node_modules/jsonify/index.js\\\");\\n\\nmodule.exports = function (obj, opts) {\\n    if (!opts) opts = {};\\n    if (typeof opts === 'function') opts = { cmp: opts };\\n    var space = opts.space || '';\\n    if (typeof space === 'number') space = Array(space+1).join(' ');\\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\\n    var replacer = opts.replacer || function(key, value) { return value; };\\n\\n    var cmp = opts.cmp && (function (f) {\\n        return function (node) {\\n            return function (a, b) {\\n                var aobj = { key: a, value: node[a] };\\n                var bobj = { key: b, value: node[b] };\\n                return f(aobj, bobj);\\n            };\\n        };\\n    })(opts.cmp);\\n\\n    var seen = [];\\n    return (function stringify (parent, key, node, level) {\\n        var indent = space ? ('\\\\n' + new Array(level + 1).join(space)) : '';\\n        var colonSeparator = space ? ': ' : ':';\\n\\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\\n            node = node.toJSON();\\n        }\\n\\n        node = replacer.call(parent, key, node);\\n\\n        if (node === undefined) {\\n            return;\\n        }\\n        if (typeof node !== 'object' || node === null) {\\n            return json.stringify(node);\\n        }\\n        if (isArray(node)) {\\n            var out = [];\\n            for (var i = 0; i < node.length; i++) {\\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\\n                out.push(indent + space + item);\\n            }\\n            return '[' + out.join(',') + indent + ']';\\n        }\\n        else {\\n            if (seen.indexOf(node) !== -1) {\\n                if (cycles) return json.stringify('__cycle__');\\n                throw new TypeError('Converting circular structure to JSON');\\n            }\\n            else seen.push(node);\\n\\n            var keys = objectKeys(node).sort(cmp && cmp(node));\\n            var out = [];\\n            for (var i = 0; i < keys.length; i++) {\\n                var key = keys[i];\\n                var value = stringify(node, key, node[key], level+1);\\n\\n                if(!value) continue;\\n\\n                var keyValue = json.stringify(key)\\n                    + colonSeparator\\n                    + value;\\n                ;\\n                out.push(indent + space + keyValue);\\n            }\\n            seen.splice(seen.indexOf(node), 1);\\n            return '{' + out.join(',') + indent + '}';\\n        }\\n    })({ '': obj }, '', obj, 0);\\n};\\n\\nvar isArray = Array.isArray || function (x) {\\n    return {}.toString.call(x) === '[object Array]';\\n};\\n\\nvar objectKeys = Object.keys || function (obj) {\\n    var has = Object.prototype.hasOwnProperty || function () { return true };\\n    var keys = [];\\n    for (var key in obj) {\\n        if (has.call(obj, key)) keys.push(key);\\n    }\\n    return keys;\\n};\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/json-stable-stringify/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/jsonify/index.js\":\n/*!***************************************!*\\\n  !*** ./node_modules/jsonify/index.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"exports.parse = __webpack_require__(/*! ./lib/parse */ \\\"./node_modules/jsonify/lib/parse.js\\\");\\nexports.stringify = __webpack_require__(/*! ./lib/stringify */ \\\"./node_modules/jsonify/lib/stringify.js\\\");\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/jsonify/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/jsonify/lib/parse.js\":\n/*!*******************************************!*\\\n  !*** ./node_modules/jsonify/lib/parse.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"var at, // The index of the current character\\n    ch, // The current character\\n    escapee = {\\n        '\\\"':  '\\\"',\\n        '\\\\\\\\': '\\\\\\\\',\\n        '/':  '/',\\n        b:    '\\\\b',\\n        f:    '\\\\f',\\n        n:    '\\\\n',\\n        r:    '\\\\r',\\n        t:    '\\\\t'\\n    },\\n    text,\\n\\n    error = function (m) {\\n        // Call error when something is wrong.\\n        throw {\\n            name:    'SyntaxError',\\n            message: m,\\n            at:      at,\\n            text:    text\\n        };\\n    },\\n    \\n    next = function (c) {\\n        // If a c parameter is provided, verify that it matches the current character.\\n        if (c && c !== ch) {\\n            error(\\\"Expected '\\\" + c + \\\"' instead of '\\\" + ch + \\\"'\\\");\\n        }\\n        \\n        // Get the next character. When there are no more characters,\\n        // return the empty string.\\n        \\n        ch = text.charAt(at);\\n        at += 1;\\n        return ch;\\n    },\\n    \\n    number = function () {\\n        // Parse a number value.\\n        var number,\\n            string = '';\\n        \\n        if (ch === '-') {\\n            string = '-';\\n            next('-');\\n        }\\n        while (ch >= '0' && ch <= '9') {\\n            string += ch;\\n            next();\\n        }\\n        if (ch === '.') {\\n            string += '.';\\n            while (next() && ch >= '0' && ch <= '9') {\\n                string += ch;\\n            }\\n        }\\n        if (ch === 'e' || ch === 'E') {\\n            string += ch;\\n            next();\\n            if (ch === '-' || ch === '+') {\\n                string += ch;\\n                next();\\n            }\\n            while (ch >= '0' && ch <= '9') {\\n                string += ch;\\n                next();\\n            }\\n        }\\n        number = +string;\\n        if (!isFinite(number)) {\\n            error(\\\"Bad number\\\");\\n        } else {\\n            return number;\\n        }\\n    },\\n    \\n    string = function () {\\n        // Parse a string value.\\n        var hex,\\n            i,\\n            string = '',\\n            uffff;\\n        \\n        // When parsing for string values, we must look for \\\" and \\\\ characters.\\n        if (ch === '\\\"') {\\n            while (next()) {\\n                if (ch === '\\\"') {\\n                    next();\\n                    return string;\\n                } else if (ch === '\\\\\\\\') {\\n                    next();\\n                    if (ch === 'u') {\\n                        uffff = 0;\\n                        for (i = 0; i < 4; i += 1) {\\n                            hex = parseInt(next(), 16);\\n                            if (!isFinite(hex)) {\\n                                break;\\n                            }\\n                            uffff = uffff * 16 + hex;\\n                        }\\n                        string += String.fromCharCode(uffff);\\n                    } else if (typeof escapee[ch] === 'string') {\\n                        string += escapee[ch];\\n                    } else {\\n                        break;\\n                    }\\n                } else {\\n                    string += ch;\\n                }\\n            }\\n        }\\n        error(\\\"Bad string\\\");\\n    },\\n\\n    white = function () {\\n\\n// Skip whitespace.\\n\\n        while (ch && ch <= ' ') {\\n            next();\\n        }\\n    },\\n\\n    word = function () {\\n\\n// true, false, or null.\\n\\n        switch (ch) {\\n        case 't':\\n            next('t');\\n            next('r');\\n            next('u');\\n            next('e');\\n            return true;\\n        case 'f':\\n            next('f');\\n            next('a');\\n            next('l');\\n            next('s');\\n            next('e');\\n            return false;\\n        case 'n':\\n            next('n');\\n            next('u');\\n            next('l');\\n            next('l');\\n            return null;\\n        }\\n        error(\\\"Unexpected '\\\" + ch + \\\"'\\\");\\n    },\\n\\n    value,  // Place holder for the value function.\\n\\n    array = function () {\\n\\n// Parse an array value.\\n\\n        var array = [];\\n\\n        if (ch === '[') {\\n            next('[');\\n            white();\\n            if (ch === ']') {\\n                next(']');\\n                return array;   // empty array\\n            }\\n            while (ch) {\\n                array.push(value());\\n                white();\\n                if (ch === ']') {\\n                    next(']');\\n                    return array;\\n                }\\n                next(',');\\n                white();\\n            }\\n        }\\n        error(\\\"Bad array\\\");\\n    },\\n\\n    object = function () {\\n\\n// Parse an object value.\\n\\n        var key,\\n            object = {};\\n\\n        if (ch === '{') {\\n            next('{');\\n            white();\\n            if (ch === '}') {\\n                next('}');\\n                return object;   // empty object\\n            }\\n            while (ch) {\\n                key = string();\\n                white();\\n                next(':');\\n                if (Object.hasOwnProperty.call(object, key)) {\\n                    error('Duplicate key \\\"' + key + '\\\"');\\n                }\\n                object[key] = value();\\n                white();\\n                if (ch === '}') {\\n                    next('}');\\n                    return object;\\n                }\\n                next(',');\\n                white();\\n            }\\n        }\\n        error(\\\"Bad object\\\");\\n    };\\n\\nvalue = function () {\\n\\n// Parse a JSON value. It could be an object, an array, a string, a number,\\n// or a word.\\n\\n    white();\\n    switch (ch) {\\n    case '{':\\n        return object();\\n    case '[':\\n        return array();\\n    case '\\\"':\\n        return string();\\n    case '-':\\n        return number();\\n    default:\\n        return ch >= '0' && ch <= '9' ? number() : word();\\n    }\\n};\\n\\n// Return the json_parse function. It will have access to all of the above\\n// functions and variables.\\n\\nmodule.exports = function (source, reviver) {\\n    var result;\\n    \\n    text = source;\\n    at = 0;\\n    ch = ' ';\\n    result = value();\\n    white();\\n    if (ch) {\\n        error(\\\"Syntax error\\\");\\n    }\\n\\n    // If there is a reviver function, we recursively walk the new structure,\\n    // passing each name/value pair to the reviver function for possible\\n    // transformation, starting with a temporary root object that holds the result\\n    // in an empty key. If there is not a reviver function, we simply return the\\n    // result.\\n\\n    return typeof reviver === 'function' ? (function walk(holder, key) {\\n        var k, v, value = holder[key];\\n        if (value && typeof value === 'object') {\\n            for (k in value) {\\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\\n                    v = walk(value, k);\\n                    if (v !== undefined) {\\n                        value[k] = v;\\n                    } else {\\n                        delete value[k];\\n                    }\\n                }\\n            }\\n        }\\n        return reviver.call(holder, key, value);\\n    }({'': result}, '')) : result;\\n};\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/jsonify/lib/parse.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/jsonify/lib/stringify.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/jsonify/lib/stringify.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"var cx = /[\\\\u0000\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g,\\n    escapable = /[\\\\\\\\\\\\\\\"\\\\x00-\\\\x1f\\\\x7f-\\\\x9f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g,\\n    gap,\\n    indent,\\n    meta = {    // table of character substitutions\\n        '\\\\b': '\\\\\\\\b',\\n        '\\\\t': '\\\\\\\\t',\\n        '\\\\n': '\\\\\\\\n',\\n        '\\\\f': '\\\\\\\\f',\\n        '\\\\r': '\\\\\\\\r',\\n        '\\\"' : '\\\\\\\\\\\"',\\n        '\\\\\\\\': '\\\\\\\\\\\\\\\\'\\n    },\\n    rep;\\n\\nfunction quote(string) {\\n    // If the string contains no control characters, no quote characters, and no\\n    // backslash characters, then we can safely slap some quotes around it.\\n    // Otherwise we must also replace the offending characters with safe escape\\n    // sequences.\\n    \\n    escapable.lastIndex = 0;\\n    return escapable.test(string) ? '\\\"' + string.replace(escapable, function (a) {\\n        var c = meta[a];\\n        return typeof c === 'string' ? c :\\n            '\\\\\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\\n    }) + '\\\"' : '\\\"' + string + '\\\"';\\n}\\n\\nfunction str(key, holder) {\\n    // Produce a string from holder[key].\\n    var i,          // The loop counter.\\n        k,          // The member key.\\n        v,          // The member value.\\n        length,\\n        mind = gap,\\n        partial,\\n        value = holder[key];\\n    \\n    // If the value has a toJSON method, call it to obtain a replacement value.\\n    if (value && typeof value === 'object' &&\\n            typeof value.toJSON === 'function') {\\n        value = value.toJSON(key);\\n    }\\n    \\n    // If we were called with a replacer function, then call the replacer to\\n    // obtain a replacement value.\\n    if (typeof rep === 'function') {\\n        value = rep.call(holder, key, value);\\n    }\\n    \\n    // What happens next depends on the value's type.\\n    switch (typeof value) {\\n        case 'string':\\n            return quote(value);\\n        \\n        case 'number':\\n            // JSON numbers must be finite. Encode non-finite numbers as null.\\n            return isFinite(value) ? String(value) : 'null';\\n        \\n        case 'boolean':\\n        case 'null':\\n            // If the value is a boolean or null, convert it to a string. Note:\\n            // typeof null does not produce 'null'. The case is included here in\\n            // the remote chance that this gets fixed someday.\\n            return String(value);\\n            \\n        case 'object':\\n            if (!value) return 'null';\\n            gap += indent;\\n            partial = [];\\n            \\n            // Array.isArray\\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\\n                length = value.length;\\n                for (i = 0; i < length; i += 1) {\\n                    partial[i] = str(i, value) || 'null';\\n                }\\n                \\n                // Join all of the elements together, separated with commas, and\\n                // wrap them in brackets.\\n                v = partial.length === 0 ? '[]' : gap ?\\n                    '[\\\\n' + gap + partial.join(',\\\\n' + gap) + '\\\\n' + mind + ']' :\\n                    '[' + partial.join(',') + ']';\\n                gap = mind;\\n                return v;\\n            }\\n            \\n            // If the replacer is an array, use it to select the members to be\\n            // stringified.\\n            if (rep && typeof rep === 'object') {\\n                length = rep.length;\\n                for (i = 0; i < length; i += 1) {\\n                    k = rep[i];\\n                    if (typeof k === 'string') {\\n                        v = str(k, value);\\n                        if (v) {\\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\\n                        }\\n                    }\\n                }\\n            }\\n            else {\\n                // Otherwise, iterate through all of the keys in the object.\\n                for (k in value) {\\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\\n                        v = str(k, value);\\n                        if (v) {\\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\\n                        }\\n                    }\\n                }\\n            }\\n            \\n        // Join all of the member texts together, separated with commas,\\n        // and wrap them in braces.\\n\\n        v = partial.length === 0 ? '{}' : gap ?\\n            '{\\\\n' + gap + partial.join(',\\\\n' + gap) + '\\\\n' + mind + '}' :\\n            '{' + partial.join(',') + '}';\\n        gap = mind;\\n        return v;\\n    }\\n}\\n\\nmodule.exports = function (value, replacer, space) {\\n    var i;\\n    gap = '';\\n    indent = '';\\n    \\n    // If the space parameter is a number, make an indent string containing that\\n    // many spaces.\\n    if (typeof space === 'number') {\\n        for (i = 0; i < space; i += 1) {\\n            indent += ' ';\\n        }\\n    }\\n    // If the space parameter is a string, it will be used as the indent string.\\n    else if (typeof space === 'string') {\\n        indent = space;\\n    }\\n\\n    // If there is a replacer, it must be a function or an array.\\n    // Otherwise, throw an error.\\n    rep = replacer;\\n    if (replacer && typeof replacer !== 'function'\\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\\n        throw new Error('JSON.stringify');\\n    }\\n    \\n    // Make a fake root object containing our value under the key of ''.\\n    // Return the result of stringifying the value.\\n    return str('', {'': value});\\n};\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/jsonify/lib/stringify.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/regenerator-runtime/runtime.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/regenerator-runtime/runtime.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/**\\n * Copyright (c) 2014-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nvar runtime = (function (exports) {\\n  \\\"use strict\\\";\\n\\n  var Op = Object.prototype;\\n  var hasOwn = Op.hasOwnProperty;\\n  var undefined; // More compressible than void 0.\\n  var $Symbol = typeof Symbol === \\\"function\\\" ? Symbol : {};\\n  var iteratorSymbol = $Symbol.iterator || \\\"@@iterator\\\";\\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \\\"@@asyncIterator\\\";\\n  var toStringTagSymbol = $Symbol.toStringTag || \\\"@@toStringTag\\\";\\n\\n  function wrap(innerFn, outerFn, self, tryLocsList) {\\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\\n    var generator = Object.create(protoGenerator.prototype);\\n    var context = new Context(tryLocsList || []);\\n\\n    // The ._invoke method unifies the implementations of the .next,\\n    // .throw, and .return methods.\\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\\n\\n    return generator;\\n  }\\n  exports.wrap = wrap;\\n\\n  // Try/catch helper to minimize deoptimizations. Returns a completion\\n  // record like context.tryEntries[i].completion. This interface could\\n  // have been (and was previously) designed to take a closure to be\\n  // invoked without arguments, but in all the cases we care about we\\n  // already have an existing method we want to call, so there's no need\\n  // to create a new function object. We can even get away with assuming\\n  // the method takes exactly one argument, since that happens to be true\\n  // in every case, so we don't have to touch the arguments object. The\\n  // only additional allocation required is the completion record, which\\n  // has a stable shape and so hopefully should be cheap to allocate.\\n  function tryCatch(fn, obj, arg) {\\n    try {\\n      return { type: \\\"normal\\\", arg: fn.call(obj, arg) };\\n    } catch (err) {\\n      return { type: \\\"throw\\\", arg: err };\\n    }\\n  }\\n\\n  var GenStateSuspendedStart = \\\"suspendedStart\\\";\\n  var GenStateSuspendedYield = \\\"suspendedYield\\\";\\n  var GenStateExecuting = \\\"executing\\\";\\n  var GenStateCompleted = \\\"completed\\\";\\n\\n  // Returning this object from the innerFn has the same effect as\\n  // breaking out of the dispatch switch statement.\\n  var ContinueSentinel = {};\\n\\n  // Dummy constructor functions that we use as the .constructor and\\n  // .constructor.prototype properties for functions that return Generator\\n  // objects. For full spec compliance, you may wish to configure your\\n  // minifier not to mangle the names of these two functions.\\n  function Generator() {}\\n  function GeneratorFunction() {}\\n  function GeneratorFunctionPrototype() {}\\n\\n  // This is a polyfill for %IteratorPrototype% for environments that\\n  // don't natively support it.\\n  var IteratorPrototype = {};\\n  IteratorPrototype[iteratorSymbol] = function () {\\n    return this;\\n  };\\n\\n  var getProto = Object.getPrototypeOf;\\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\\n  if (NativeIteratorPrototype &&\\n      NativeIteratorPrototype !== Op &&\\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\\n    // This environment has a native %IteratorPrototype%; use it instead\\n    // of the polyfill.\\n    IteratorPrototype = NativeIteratorPrototype;\\n  }\\n\\n  var Gp = GeneratorFunctionPrototype.prototype =\\n    Generator.prototype = Object.create(IteratorPrototype);\\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\\n  GeneratorFunctionPrototype[toStringTagSymbol] =\\n    GeneratorFunction.displayName = \\\"GeneratorFunction\\\";\\n\\n  // Helper for defining the .next, .throw, and .return methods of the\\n  // Iterator interface in terms of a single ._invoke method.\\n  function defineIteratorMethods(prototype) {\\n    [\\\"next\\\", \\\"throw\\\", \\\"return\\\"].forEach(function(method) {\\n      prototype[method] = function(arg) {\\n        return this._invoke(method, arg);\\n      };\\n    });\\n  }\\n\\n  exports.isGeneratorFunction = function(genFun) {\\n    var ctor = typeof genFun === \\\"function\\\" && genFun.constructor;\\n    return ctor\\n      ? ctor === GeneratorFunction ||\\n        // For the native GeneratorFunction constructor, the best we can\\n        // do is to check its .name property.\\n        (ctor.displayName || ctor.name) === \\\"GeneratorFunction\\\"\\n      : false;\\n  };\\n\\n  exports.mark = function(genFun) {\\n    if (Object.setPrototypeOf) {\\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\\n    } else {\\n      genFun.__proto__ = GeneratorFunctionPrototype;\\n      if (!(toStringTagSymbol in genFun)) {\\n        genFun[toStringTagSymbol] = \\\"GeneratorFunction\\\";\\n      }\\n    }\\n    genFun.prototype = Object.create(Gp);\\n    return genFun;\\n  };\\n\\n  // Within the body of any async function, `await x` is transformed to\\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\\n  // `hasOwn.call(value, \\\"__await\\\")` to determine if the yielded value is\\n  // meant to be awaited.\\n  exports.awrap = function(arg) {\\n    return { __await: arg };\\n  };\\n\\n  function AsyncIterator(generator) {\\n    function invoke(method, arg, resolve, reject) {\\n      var record = tryCatch(generator[method], generator, arg);\\n      if (record.type === \\\"throw\\\") {\\n        reject(record.arg);\\n      } else {\\n        var result = record.arg;\\n        var value = result.value;\\n        if (value &&\\n            typeof value === \\\"object\\\" &&\\n            hasOwn.call(value, \\\"__await\\\")) {\\n          return Promise.resolve(value.__await).then(function(value) {\\n            invoke(\\\"next\\\", value, resolve, reject);\\n          }, function(err) {\\n            invoke(\\\"throw\\\", err, resolve, reject);\\n          });\\n        }\\n\\n        return Promise.resolve(value).then(function(unwrapped) {\\n          // When a yielded Promise is resolved, its final value becomes\\n          // the .value of the Promise<{value,done}> result for the\\n          // current iteration.\\n          result.value = unwrapped;\\n          resolve(result);\\n        }, function(error) {\\n          // If a rejected Promise was yielded, throw the rejection back\\n          // into the async generator function so it can be handled there.\\n          return invoke(\\\"throw\\\", error, resolve, reject);\\n        });\\n      }\\n    }\\n\\n    var previousPromise;\\n\\n    function enqueue(method, arg) {\\n      function callInvokeWithMethodAndArg() {\\n        return new Promise(function(resolve, reject) {\\n          invoke(method, arg, resolve, reject);\\n        });\\n      }\\n\\n      return previousPromise =\\n        // If enqueue has been called before, then we want to wait until\\n        // all previous Promises have been resolved before calling invoke,\\n        // so that results are always delivered in the correct order. If\\n        // enqueue has not been called before, then it is important to\\n        // call invoke immediately, without waiting on a callback to fire,\\n        // so that the async generator function has the opportunity to do\\n        // any necessary setup in a predictable way. This predictability\\n        // is why the Promise constructor synchronously invokes its\\n        // executor callback, and why async functions synchronously\\n        // execute code before the first await. Since we implement simple\\n        // async functions in terms of async generators, it is especially\\n        // important to get this right, even though it requires care.\\n        previousPromise ? previousPromise.then(\\n          callInvokeWithMethodAndArg,\\n          // Avoid propagating failures to Promises returned by later\\n          // invocations of the iterator.\\n          callInvokeWithMethodAndArg\\n        ) : callInvokeWithMethodAndArg();\\n    }\\n\\n    // Define the unified helper method that is used to implement .next,\\n    // .throw, and .return (see defineIteratorMethods).\\n    this._invoke = enqueue;\\n  }\\n\\n  defineIteratorMethods(AsyncIterator.prototype);\\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\\n    return this;\\n  };\\n  exports.AsyncIterator = AsyncIterator;\\n\\n  // Note that simple async functions are implemented on top of\\n  // AsyncIterator objects; they just return a Promise for the value of\\n  // the final result produced by the iterator.\\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\\n    var iter = new AsyncIterator(\\n      wrap(innerFn, outerFn, self, tryLocsList)\\n    );\\n\\n    return exports.isGeneratorFunction(outerFn)\\n      ? iter // If outerFn is a generator, return the full iterator.\\n      : iter.next().then(function(result) {\\n          return result.done ? result.value : iter.next();\\n        });\\n  };\\n\\n  function makeInvokeMethod(innerFn, self, context) {\\n    var state = GenStateSuspendedStart;\\n\\n    return function invoke(method, arg) {\\n      if (state === GenStateExecuting) {\\n        throw new Error(\\\"Generator is already running\\\");\\n      }\\n\\n      if (state === GenStateCompleted) {\\n        if (method === \\\"throw\\\") {\\n          throw arg;\\n        }\\n\\n        // Be forgiving, per 25.3.3.3.3 of the spec:\\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\\n        return doneResult();\\n      }\\n\\n      context.method = method;\\n      context.arg = arg;\\n\\n      while (true) {\\n        var delegate = context.delegate;\\n        if (delegate) {\\n          var delegateResult = maybeInvokeDelegate(delegate, context);\\n          if (delegateResult) {\\n            if (delegateResult === ContinueSentinel) continue;\\n            return delegateResult;\\n          }\\n        }\\n\\n        if (context.method === \\\"next\\\") {\\n          // Setting context._sent for legacy support of Babel's\\n          // function.sent implementation.\\n          context.sent = context._sent = context.arg;\\n\\n        } else if (context.method === \\\"throw\\\") {\\n          if (state === GenStateSuspendedStart) {\\n            state = GenStateCompleted;\\n            throw context.arg;\\n          }\\n\\n          context.dispatchException(context.arg);\\n\\n        } else if (context.method === \\\"return\\\") {\\n          context.abrupt(\\\"return\\\", context.arg);\\n        }\\n\\n        state = GenStateExecuting;\\n\\n        var record = tryCatch(innerFn, self, context);\\n        if (record.type === \\\"normal\\\") {\\n          // If an exception is thrown from innerFn, we leave state ===\\n          // GenStateExecuting and loop back for another invocation.\\n          state = context.done\\n            ? GenStateCompleted\\n            : GenStateSuspendedYield;\\n\\n          if (record.arg === ContinueSentinel) {\\n            continue;\\n          }\\n\\n          return {\\n            value: record.arg,\\n            done: context.done\\n          };\\n\\n        } else if (record.type === \\\"throw\\\") {\\n          state = GenStateCompleted;\\n          // Dispatch the exception by looping back around to the\\n          // context.dispatchException(context.arg) call above.\\n          context.method = \\\"throw\\\";\\n          context.arg = record.arg;\\n        }\\n      }\\n    };\\n  }\\n\\n  // Call delegate.iterator[context.method](context.arg) and handle the\\n  // result, either by returning a { value, done } result from the\\n  // delegate iterator, or by modifying context.method and context.arg,\\n  // setting context.delegate to null, and returning the ContinueSentinel.\\n  function maybeInvokeDelegate(delegate, context) {\\n    var method = delegate.iterator[context.method];\\n    if (method === undefined) {\\n      // A .throw or .return when the delegate iterator has no .throw\\n      // method always terminates the yield* loop.\\n      context.delegate = null;\\n\\n      if (context.method === \\\"throw\\\") {\\n        // Note: [\\\"return\\\"] must be used for ES3 parsing compatibility.\\n        if (delegate.iterator[\\\"return\\\"]) {\\n          // If the delegate iterator has a return method, give it a\\n          // chance to clean up.\\n          context.method = \\\"return\\\";\\n          context.arg = undefined;\\n          maybeInvokeDelegate(delegate, context);\\n\\n          if (context.method === \\\"throw\\\") {\\n            // If maybeInvokeDelegate(context) changed context.method from\\n            // \\\"return\\\" to \\\"throw\\\", let that override the TypeError below.\\n            return ContinueSentinel;\\n          }\\n        }\\n\\n        context.method = \\\"throw\\\";\\n        context.arg = new TypeError(\\n          \\\"The iterator does not provide a 'throw' method\\\");\\n      }\\n\\n      return ContinueSentinel;\\n    }\\n\\n    var record = tryCatch(method, delegate.iterator, context.arg);\\n\\n    if (record.type === \\\"throw\\\") {\\n      context.method = \\\"throw\\\";\\n      context.arg = record.arg;\\n      context.delegate = null;\\n      return ContinueSentinel;\\n    }\\n\\n    var info = record.arg;\\n\\n    if (! info) {\\n      context.method = \\\"throw\\\";\\n      context.arg = new TypeError(\\\"iterator result is not an object\\\");\\n      context.delegate = null;\\n      return ContinueSentinel;\\n    }\\n\\n    if (info.done) {\\n      // Assign the result of the finished delegate to the temporary\\n      // variable specified by delegate.resultName (see delegateYield).\\n      context[delegate.resultName] = info.value;\\n\\n      // Resume execution at the desired location (see delegateYield).\\n      context.next = delegate.nextLoc;\\n\\n      // If context.method was \\\"throw\\\" but the delegate handled the\\n      // exception, let the outer generator proceed normally. If\\n      // context.method was \\\"next\\\", forget context.arg since it has been\\n      // \\\"consumed\\\" by the delegate iterator. If context.method was\\n      // \\\"return\\\", allow the original .return call to continue in the\\n      // outer generator.\\n      if (context.method !== \\\"return\\\") {\\n        context.method = \\\"next\\\";\\n        context.arg = undefined;\\n      }\\n\\n    } else {\\n      // Re-yield the result returned by the delegate method.\\n      return info;\\n    }\\n\\n    // The delegate iterator is finished, so forget it and continue with\\n    // the outer generator.\\n    context.delegate = null;\\n    return ContinueSentinel;\\n  }\\n\\n  // Define Generator.prototype.{next,throw,return} in terms of the\\n  // unified ._invoke helper method.\\n  defineIteratorMethods(Gp);\\n\\n  Gp[toStringTagSymbol] = \\\"Generator\\\";\\n\\n  // A Generator should always return itself as the iterator object when the\\n  // @@iterator function is called on it. Some browsers' implementations of the\\n  // iterator prototype chain incorrectly implement this, causing the Generator\\n  // object to not be returned from this call. This ensures that doesn't happen.\\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\\n  Gp[iteratorSymbol] = function() {\\n    return this;\\n  };\\n\\n  Gp.toString = function() {\\n    return \\\"[object Generator]\\\";\\n  };\\n\\n  function pushTryEntry(locs) {\\n    var entry = { tryLoc: locs[0] };\\n\\n    if (1 in locs) {\\n      entry.catchLoc = locs[1];\\n    }\\n\\n    if (2 in locs) {\\n      entry.finallyLoc = locs[2];\\n      entry.afterLoc = locs[3];\\n    }\\n\\n    this.tryEntries.push(entry);\\n  }\\n\\n  function resetTryEntry(entry) {\\n    var record = entry.completion || {};\\n    record.type = \\\"normal\\\";\\n    delete record.arg;\\n    entry.completion = record;\\n  }\\n\\n  function Context(tryLocsList) {\\n    // The root entry object (effectively a try statement without a catch\\n    // or a finally block) gives us a place to store values thrown from\\n    // locations where there is no enclosing try statement.\\n    this.tryEntries = [{ tryLoc: \\\"root\\\" }];\\n    tryLocsList.forEach(pushTryEntry, this);\\n    this.reset(true);\\n  }\\n\\n  exports.keys = function(object) {\\n    var keys = [];\\n    for (var key in object) {\\n      keys.push(key);\\n    }\\n    keys.reverse();\\n\\n    // Rather than returning an object with a next method, we keep\\n    // things simple and return the next function itself.\\n    return function next() {\\n      while (keys.length) {\\n        var key = keys.pop();\\n        if (key in object) {\\n          next.value = key;\\n          next.done = false;\\n          return next;\\n        }\\n      }\\n\\n      // To avoid creating an additional object, we just hang the .value\\n      // and .done properties off the next function object itself. This\\n      // also ensures that the minifier will not anonymize the function.\\n      next.done = true;\\n      return next;\\n    };\\n  };\\n\\n  function values(iterable) {\\n    if (iterable) {\\n      var iteratorMethod = iterable[iteratorSymbol];\\n      if (iteratorMethod) {\\n        return iteratorMethod.call(iterable);\\n      }\\n\\n      if (typeof iterable.next === \\\"function\\\") {\\n        return iterable;\\n      }\\n\\n      if (!isNaN(iterable.length)) {\\n        var i = -1, next = function next() {\\n          while (++i < iterable.length) {\\n            if (hasOwn.call(iterable, i)) {\\n              next.value = iterable[i];\\n              next.done = false;\\n              return next;\\n            }\\n          }\\n\\n          next.value = undefined;\\n          next.done = true;\\n\\n          return next;\\n        };\\n\\n        return next.next = next;\\n      }\\n    }\\n\\n    // Return an iterator with no values.\\n    return { next: doneResult };\\n  }\\n  exports.values = values;\\n\\n  function doneResult() {\\n    return { value: undefined, done: true };\\n  }\\n\\n  Context.prototype = {\\n    constructor: Context,\\n\\n    reset: function(skipTempReset) {\\n      this.prev = 0;\\n      this.next = 0;\\n      // Resetting context._sent for legacy support of Babel's\\n      // function.sent implementation.\\n      this.sent = this._sent = undefined;\\n      this.done = false;\\n      this.delegate = null;\\n\\n      this.method = \\\"next\\\";\\n      this.arg = undefined;\\n\\n      this.tryEntries.forEach(resetTryEntry);\\n\\n      if (!skipTempReset) {\\n        for (var name in this) {\\n          // Not sure about the optimal order of these conditions:\\n          if (name.charAt(0) === \\\"t\\\" &&\\n              hasOwn.call(this, name) &&\\n              !isNaN(+name.slice(1))) {\\n            this[name] = undefined;\\n          }\\n        }\\n      }\\n    },\\n\\n    stop: function() {\\n      this.done = true;\\n\\n      var rootEntry = this.tryEntries[0];\\n      var rootRecord = rootEntry.completion;\\n      if (rootRecord.type === \\\"throw\\\") {\\n        throw rootRecord.arg;\\n      }\\n\\n      return this.rval;\\n    },\\n\\n    dispatchException: function(exception) {\\n      if (this.done) {\\n        throw exception;\\n      }\\n\\n      var context = this;\\n      function handle(loc, caught) {\\n        record.type = \\\"throw\\\";\\n        record.arg = exception;\\n        context.next = loc;\\n\\n        if (caught) {\\n          // If the dispatched exception was caught by a catch block,\\n          // then let that catch block handle the exception normally.\\n          context.method = \\\"next\\\";\\n          context.arg = undefined;\\n        }\\n\\n        return !! caught;\\n      }\\n\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        var record = entry.completion;\\n\\n        if (entry.tryLoc === \\\"root\\\") {\\n          // Exception thrown outside of any try block that could handle\\n          // it, so set the completion value of the entire function to\\n          // throw the exception.\\n          return handle(\\\"end\\\");\\n        }\\n\\n        if (entry.tryLoc <= this.prev) {\\n          var hasCatch = hasOwn.call(entry, \\\"catchLoc\\\");\\n          var hasFinally = hasOwn.call(entry, \\\"finallyLoc\\\");\\n\\n          if (hasCatch && hasFinally) {\\n            if (this.prev < entry.catchLoc) {\\n              return handle(entry.catchLoc, true);\\n            } else if (this.prev < entry.finallyLoc) {\\n              return handle(entry.finallyLoc);\\n            }\\n\\n          } else if (hasCatch) {\\n            if (this.prev < entry.catchLoc) {\\n              return handle(entry.catchLoc, true);\\n            }\\n\\n          } else if (hasFinally) {\\n            if (this.prev < entry.finallyLoc) {\\n              return handle(entry.finallyLoc);\\n            }\\n\\n          } else {\\n            throw new Error(\\\"try statement without catch or finally\\\");\\n          }\\n        }\\n      }\\n    },\\n\\n    abrupt: function(type, arg) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.tryLoc <= this.prev &&\\n            hasOwn.call(entry, \\\"finallyLoc\\\") &&\\n            this.prev < entry.finallyLoc) {\\n          var finallyEntry = entry;\\n          break;\\n        }\\n      }\\n\\n      if (finallyEntry &&\\n          (type === \\\"break\\\" ||\\n           type === \\\"continue\\\") &&\\n          finallyEntry.tryLoc <= arg &&\\n          arg <= finallyEntry.finallyLoc) {\\n        // Ignore the finally entry if control is not jumping to a\\n        // location outside the try/catch block.\\n        finallyEntry = null;\\n      }\\n\\n      var record = finallyEntry ? finallyEntry.completion : {};\\n      record.type = type;\\n      record.arg = arg;\\n\\n      if (finallyEntry) {\\n        this.method = \\\"next\\\";\\n        this.next = finallyEntry.finallyLoc;\\n        return ContinueSentinel;\\n      }\\n\\n      return this.complete(record);\\n    },\\n\\n    complete: function(record, afterLoc) {\\n      if (record.type === \\\"throw\\\") {\\n        throw record.arg;\\n      }\\n\\n      if (record.type === \\\"break\\\" ||\\n          record.type === \\\"continue\\\") {\\n        this.next = record.arg;\\n      } else if (record.type === \\\"return\\\") {\\n        this.rval = this.arg = record.arg;\\n        this.method = \\\"return\\\";\\n        this.next = \\\"end\\\";\\n      } else if (record.type === \\\"normal\\\" && afterLoc) {\\n        this.next = afterLoc;\\n      }\\n\\n      return ContinueSentinel;\\n    },\\n\\n    finish: function(finallyLoc) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.finallyLoc === finallyLoc) {\\n          this.complete(entry.completion, entry.afterLoc);\\n          resetTryEntry(entry);\\n          return ContinueSentinel;\\n        }\\n      }\\n    },\\n\\n    \\\"catch\\\": function(tryLoc) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.tryLoc === tryLoc) {\\n          var record = entry.completion;\\n          if (record.type === \\\"throw\\\") {\\n            var thrown = record.arg;\\n            resetTryEntry(entry);\\n          }\\n          return thrown;\\n        }\\n      }\\n\\n      // The context.catch method must only be called with a location\\n      // argument that corresponds to a known catch block.\\n      throw new Error(\\\"illegal catch attempt\\\");\\n    },\\n\\n    delegateYield: function(iterable, resultName, nextLoc) {\\n      this.delegate = {\\n        iterator: values(iterable),\\n        resultName: resultName,\\n        nextLoc: nextLoc\\n      };\\n\\n      if (this.method === \\\"next\\\") {\\n        // Deliberately forget the last sent value so that we don't\\n        // accidentally pass it on to the delegate.\\n        this.arg = undefined;\\n      }\\n\\n      return ContinueSentinel;\\n    }\\n  };\\n\\n  // Regardless of whether this script is executing as a CommonJS module\\n  // or not, return the runtime object so that we can declare the variable\\n  // regeneratorRuntime in the outer scope, which allows this module to be\\n  // injected easily by `bin/regenerator --include-runtime script.js`.\\n  return exports;\\n\\n}(\\n  // If this script is executing as a CommonJS module, use module.exports\\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\\n  // object. Either way, the resulting object will be used to initialize\\n  // the regeneratorRuntime variable at the top of this file.\\n   true ? module.exports : undefined\\n));\\n\\ntry {\\n  regeneratorRuntime = runtime;\\n} catch (accidentalStrictMode) {\\n  // This module should not be running in strict mode, so the above\\n  // assignment should always work unless something is misconfigured. Just\\n  // in case runtime.js accidentally runs in strict mode, we can escape\\n  // strict mode using a global Function call. This could conceivably fail\\n  // if a Content Security Policy forbids using Function, but in that case\\n  // the proper solution is to fix the accidental strict mode problem. If\\n  // you've misconfigured your bundler to force strict mode and applied a\\n  // CSP to forbid Function, and you're not willing to fix either of those\\n  // problems, please detail your unique predicament in a GitHub issue.\\n  Function(\\\"r\\\", \\\"regeneratorRuntime = r\\\")(runtime);\\n}\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/regenerator-runtime/runtime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/index.js ***!\n  \\******************************************/\n/*! exports provided: Observable, ConnectableObservable, GroupedObservable, observable, Subject, BehaviorSubject, ReplaySubject, AsyncSubject, asapScheduler, asyncScheduler, queueScheduler, animationFrameScheduler, VirtualTimeScheduler, VirtualAction, Scheduler, Subscription, Subscriber, Notification, NotificationKind, pipe, noop, identity, isObservable, ArgumentOutOfRangeError, EmptyError, ObjectUnsubscribedError, UnsubscriptionError, TimeoutError, bindCallback, bindNodeCallback, combineLatest, concat, defer, empty, forkJoin, from, fromEvent, fromEventPattern, generate, iif, interval, merge, never, of, onErrorResumeNext, pairs, partition, race, range, throwError, timer, using, zip, scheduled, EMPTY, NEVER, config */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _internal_Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Observable\\\", function() { return _internal_Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"]; });\\n\\n/* harmony import */ var _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/observable/ConnectableObservable */ \\\"./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ConnectableObservable\\\", function() { return _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__[\\\"ConnectableObservable\\\"]; });\\n\\n/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/operators/groupBy */ \\\"./node_modules/rxjs/_esm5/internal/operators/groupBy.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"GroupedObservable\\\", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__[\\\"GroupedObservable\\\"]; });\\n\\n/* harmony import */ var _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/symbol/observable */ \\\"./node_modules/rxjs/_esm5/internal/symbol/observable.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"observable\\\", function() { return _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__[\\\"observable\\\"]; });\\n\\n/* harmony import */ var _internal_Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Subject\\\", function() { return _internal_Subject__WEBPACK_IMPORTED_MODULE_4__[\\\"Subject\\\"]; });\\n\\n/* harmony import */ var _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/BehaviorSubject */ \\\"./node_modules/rxjs/_esm5/internal/BehaviorSubject.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"BehaviorSubject\\\", function() { return _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__[\\\"BehaviorSubject\\\"]; });\\n\\n/* harmony import */ var _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/ReplaySubject */ \\\"./node_modules/rxjs/_esm5/internal/ReplaySubject.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ReplaySubject\\\", function() { return _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__[\\\"ReplaySubject\\\"]; });\\n\\n/* harmony import */ var _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/AsyncSubject */ \\\"./node_modules/rxjs/_esm5/internal/AsyncSubject.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"AsyncSubject\\\", function() { return _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__[\\\"AsyncSubject\\\"]; });\\n\\n/* harmony import */ var _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/scheduler/asap */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/asap.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"asapScheduler\\\", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__[\\\"asap\\\"]; });\\n\\n/* harmony import */ var _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal/scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"asyncScheduler\\\", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__[\\\"async\\\"]; });\\n\\n/* harmony import */ var _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./internal/scheduler/queue */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/queue.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"queueScheduler\\\", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__[\\\"queue\\\"]; });\\n\\n/* harmony import */ var _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./internal/scheduler/animationFrame */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"animationFrameScheduler\\\", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__[\\\"animationFrame\\\"]; });\\n\\n/* harmony import */ var _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./internal/scheduler/VirtualTimeScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"VirtualTimeScheduler\\\", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__[\\\"VirtualTimeScheduler\\\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"VirtualAction\\\", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__[\\\"VirtualAction\\\"]; });\\n\\n/* harmony import */ var _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./internal/Scheduler */ \\\"./node_modules/rxjs/_esm5/internal/Scheduler.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Scheduler\\\", function() { return _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__[\\\"Scheduler\\\"]; });\\n\\n/* harmony import */ var _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./internal/Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Subscription\\\", function() { return _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__[\\\"Subscription\\\"]; });\\n\\n/* harmony import */ var _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./internal/Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Subscriber\\\", function() { return _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__[\\\"Subscriber\\\"]; });\\n\\n/* harmony import */ var _internal_Notification__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./internal/Notification */ \\\"./node_modules/rxjs/_esm5/internal/Notification.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Notification\\\", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__[\\\"Notification\\\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"NotificationKind\\\", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__[\\\"NotificationKind\\\"]; });\\n\\n/* harmony import */ var _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./internal/util/pipe */ \\\"./node_modules/rxjs/_esm5/internal/util/pipe.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"pipe\\\", function() { return _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__[\\\"pipe\\\"]; });\\n\\n/* harmony import */ var _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./internal/util/noop */ \\\"./node_modules/rxjs/_esm5/internal/util/noop.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"noop\\\", function() { return _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__[\\\"noop\\\"]; });\\n\\n/* harmony import */ var _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./internal/util/identity */ \\\"./node_modules/rxjs/_esm5/internal/util/identity.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__[\\\"identity\\\"]; });\\n\\n/* harmony import */ var _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./internal/util/isObservable */ \\\"./node_modules/rxjs/_esm5/internal/util/isObservable.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"isObservable\\\", function() { return _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__[\\\"isObservable\\\"]; });\\n\\n/* harmony import */ var _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./internal/util/ArgumentOutOfRangeError */ \\\"./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ArgumentOutOfRangeError\\\", function() { return _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__[\\\"ArgumentOutOfRangeError\\\"]; });\\n\\n/* harmony import */ var _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./internal/util/EmptyError */ \\\"./node_modules/rxjs/_esm5/internal/util/EmptyError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"EmptyError\\\", function() { return _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__[\\\"EmptyError\\\"]; });\\n\\n/* harmony import */ var _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./internal/util/ObjectUnsubscribedError */ \\\"./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ObjectUnsubscribedError\\\", function() { return _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__[\\\"ObjectUnsubscribedError\\\"]; });\\n\\n/* harmony import */ var _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./internal/util/UnsubscriptionError */ \\\"./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"UnsubscriptionError\\\", function() { return _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__[\\\"UnsubscriptionError\\\"]; });\\n\\n/* harmony import */ var _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./internal/util/TimeoutError */ \\\"./node_modules/rxjs/_esm5/internal/util/TimeoutError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"TimeoutError\\\", function() { return _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__[\\\"TimeoutError\\\"]; });\\n\\n/* harmony import */ var _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./internal/observable/bindCallback */ \\\"./node_modules/rxjs/_esm5/internal/observable/bindCallback.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"bindCallback\\\", function() { return _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__[\\\"bindCallback\\\"]; });\\n\\n/* harmony import */ var _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./internal/observable/bindNodeCallback */ \\\"./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"bindNodeCallback\\\", function() { return _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__[\\\"bindNodeCallback\\\"]; });\\n\\n/* harmony import */ var _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./internal/observable/combineLatest */ \\\"./node_modules/rxjs/_esm5/internal/observable/combineLatest.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"combineLatest\\\", function() { return _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__[\\\"combineLatest\\\"]; });\\n\\n/* harmony import */ var _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./internal/observable/concat */ \\\"./node_modules/rxjs/_esm5/internal/observable/concat.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"concat\\\", function() { return _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__[\\\"concat\\\"]; });\\n\\n/* harmony import */ var _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./internal/observable/defer */ \\\"./node_modules/rxjs/_esm5/internal/observable/defer.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"defer\\\", function() { return _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__[\\\"defer\\\"]; });\\n\\n/* harmony import */ var _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./internal/observable/empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"empty\\\", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__[\\\"empty\\\"]; });\\n\\n/* harmony import */ var _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./internal/observable/forkJoin */ \\\"./node_modules/rxjs/_esm5/internal/observable/forkJoin.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"forkJoin\\\", function() { return _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__[\\\"forkJoin\\\"]; });\\n\\n/* harmony import */ var _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./internal/observable/from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"from\\\", function() { return _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__[\\\"from\\\"]; });\\n\\n/* harmony import */ var _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./internal/observable/fromEvent */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromEvent.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"fromEvent\\\", function() { return _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__[\\\"fromEvent\\\"]; });\\n\\n/* harmony import */ var _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./internal/observable/fromEventPattern */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"fromEventPattern\\\", function() { return _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__[\\\"fromEventPattern\\\"]; });\\n\\n/* harmony import */ var _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./internal/observable/generate */ \\\"./node_modules/rxjs/_esm5/internal/observable/generate.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"generate\\\", function() { return _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__[\\\"generate\\\"]; });\\n\\n/* harmony import */ var _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./internal/observable/iif */ \\\"./node_modules/rxjs/_esm5/internal/observable/iif.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"iif\\\", function() { return _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__[\\\"iif\\\"]; });\\n\\n/* harmony import */ var _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./internal/observable/interval */ \\\"./node_modules/rxjs/_esm5/internal/observable/interval.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"interval\\\", function() { return _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__[\\\"interval\\\"]; });\\n\\n/* harmony import */ var _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./internal/observable/merge */ \\\"./node_modules/rxjs/_esm5/internal/observable/merge.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"merge\\\", function() { return _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__[\\\"merge\\\"]; });\\n\\n/* harmony import */ var _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./internal/observable/never */ \\\"./node_modules/rxjs/_esm5/internal/observable/never.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"never\\\", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__[\\\"never\\\"]; });\\n\\n/* harmony import */ var _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./internal/observable/of */ \\\"./node_modules/rxjs/_esm5/internal/observable/of.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"of\\\", function() { return _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__[\\\"of\\\"]; });\\n\\n/* harmony import */ var _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./internal/observable/onErrorResumeNext */ \\\"./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"onErrorResumeNext\\\", function() { return _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__[\\\"onErrorResumeNext\\\"]; });\\n\\n/* harmony import */ var _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./internal/observable/pairs */ \\\"./node_modules/rxjs/_esm5/internal/observable/pairs.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"pairs\\\", function() { return _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__[\\\"pairs\\\"]; });\\n\\n/* harmony import */ var _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./internal/observable/partition */ \\\"./node_modules/rxjs/_esm5/internal/observable/partition.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"partition\\\", function() { return _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__[\\\"partition\\\"]; });\\n\\n/* harmony import */ var _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./internal/observable/race */ \\\"./node_modules/rxjs/_esm5/internal/observable/race.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"race\\\", function() { return _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__[\\\"race\\\"]; });\\n\\n/* harmony import */ var _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./internal/observable/range */ \\\"./node_modules/rxjs/_esm5/internal/observable/range.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"range\\\", function() { return _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__[\\\"range\\\"]; });\\n\\n/* harmony import */ var _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./internal/observable/throwError */ \\\"./node_modules/rxjs/_esm5/internal/observable/throwError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"throwError\\\", function() { return _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__[\\\"throwError\\\"]; });\\n\\n/* harmony import */ var _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./internal/observable/timer */ \\\"./node_modules/rxjs/_esm5/internal/observable/timer.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"timer\\\", function() { return _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__[\\\"timer\\\"]; });\\n\\n/* harmony import */ var _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./internal/observable/using */ \\\"./node_modules/rxjs/_esm5/internal/observable/using.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"using\\\", function() { return _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__[\\\"using\\\"]; });\\n\\n/* harmony import */ var _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./internal/observable/zip */ \\\"./node_modules/rxjs/_esm5/internal/observable/zip.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"zip\\\", function() { return _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__[\\\"zip\\\"]; });\\n\\n/* harmony import */ var _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./internal/scheduled/scheduled */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"scheduled\\\", function() { return _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__[\\\"scheduled\\\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"EMPTY\\\", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__[\\\"EMPTY\\\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"NEVER\\\", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__[\\\"NEVER\\\"]; });\\n\\n/* harmony import */ var _internal_config__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./internal/config */ \\\"./node_modules/rxjs/_esm5/internal/config.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"config\\\", function() { return _internal_config__WEBPACK_IMPORTED_MODULE_52__[\\\"config\\\"]; });\\n\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n//# sourceMappingURL=index.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/AsyncSubject.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/AsyncSubject.js ***!\n  \\**********************************************************/\n/*! exports provided: AsyncSubject */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AsyncSubject\\\", function() { return AsyncSubject; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\\n\\n\\n\\nvar AsyncSubject = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AsyncSubject, _super);\\n    function AsyncSubject() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.value = null;\\n        _this.hasNext = false;\\n        _this.hasCompleted = false;\\n        return _this;\\n    }\\n    AsyncSubject.prototype._subscribe = function (subscriber) {\\n        if (this.hasError) {\\n            subscriber.error(this.thrownError);\\n            return _Subscription__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscription\\\"].EMPTY;\\n        }\\n        else if (this.hasCompleted && this.hasNext) {\\n            subscriber.next(this.value);\\n            subscriber.complete();\\n            return _Subscription__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscription\\\"].EMPTY;\\n        }\\n        return _super.prototype._subscribe.call(this, subscriber);\\n    };\\n    AsyncSubject.prototype.next = function (value) {\\n        if (!this.hasCompleted) {\\n            this.value = value;\\n            this.hasNext = true;\\n        }\\n    };\\n    AsyncSubject.prototype.error = function (error) {\\n        if (!this.hasCompleted) {\\n            _super.prototype.error.call(this, error);\\n        }\\n    };\\n    AsyncSubject.prototype.complete = function () {\\n        this.hasCompleted = true;\\n        if (this.hasNext) {\\n            _super.prototype.next.call(this, this.value);\\n        }\\n        _super.prototype.complete.call(this);\\n    };\\n    return AsyncSubject;\\n}(_Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]));\\n\\n//# sourceMappingURL=AsyncSubject.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/AsyncSubject.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/BehaviorSubject.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/BehaviorSubject.js ***!\n  \\*************************************************************/\n/*! exports provided: BehaviorSubject */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"BehaviorSubject\\\", function() { return BehaviorSubject; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ \\\"./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\\n\\n\\n\\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BehaviorSubject, _super);\\n    function BehaviorSubject(_value) {\\n        var _this = _super.call(this) || this;\\n        _this._value = _value;\\n        return _this;\\n    }\\n    Object.defineProperty(BehaviorSubject.prototype, \\\"value\\\", {\\n        get: function () {\\n            return this.getValue();\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\\n        if (subscription && !subscription.closed) {\\n            subscriber.next(this._value);\\n        }\\n        return subscription;\\n    };\\n    BehaviorSubject.prototype.getValue = function () {\\n        if (this.hasError) {\\n            throw this.thrownError;\\n        }\\n        else if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        else {\\n            return this._value;\\n        }\\n    };\\n    BehaviorSubject.prototype.next = function (value) {\\n        _super.prototype.next.call(this, this._value = value);\\n    };\\n    return BehaviorSubject;\\n}(_Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]));\\n\\n//# sourceMappingURL=BehaviorSubject.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/BehaviorSubject.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/InnerSubscriber.js ***!\n  \\*************************************************************/\n/*! exports provided: InnerSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"InnerSubscriber\\\", function() { return InnerSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](InnerSubscriber, _super);\\n    function InnerSubscriber(parent, outerValue, outerIndex) {\\n        var _this = _super.call(this) || this;\\n        _this.parent = parent;\\n        _this.outerValue = outerValue;\\n        _this.outerIndex = outerIndex;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    InnerSubscriber.prototype._next = function (value) {\\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\\n    };\\n    InnerSubscriber.prototype._error = function (error) {\\n        this.parent.notifyError(error, this);\\n        this.unsubscribe();\\n    };\\n    InnerSubscriber.prototype._complete = function () {\\n        this.parent.notifyComplete(this);\\n        this.unsubscribe();\\n    };\\n    return InnerSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n\\n//# sourceMappingURL=InnerSubscriber.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/InnerSubscriber.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Notification.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Notification.js ***!\n  \\**********************************************************/\n/*! exports provided: NotificationKind, Notification */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"NotificationKind\\\", function() { return NotificationKind; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Notification\\\", function() { return Notification; });\\n/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observable/empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observable/of */ \\\"./node_modules/rxjs/_esm5/internal/observable/of.js\\\");\\n/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observable/throwError */ \\\"./node_modules/rxjs/_esm5/internal/observable/throwError.js\\\");\\n/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\\n\\n\\n\\nvar NotificationKind;\\n/*@__PURE__*/ (function (NotificationKind) {\\n    NotificationKind[\\\"NEXT\\\"] = \\\"N\\\";\\n    NotificationKind[\\\"ERROR\\\"] = \\\"E\\\";\\n    NotificationKind[\\\"COMPLETE\\\"] = \\\"C\\\";\\n})(NotificationKind || (NotificationKind = {}));\\nvar Notification = /*@__PURE__*/ (function () {\\n    function Notification(kind, value, error) {\\n        this.kind = kind;\\n        this.value = value;\\n        this.error = error;\\n        this.hasValue = kind === 'N';\\n    }\\n    Notification.prototype.observe = function (observer) {\\n        switch (this.kind) {\\n            case 'N':\\n                return observer.next && observer.next(this.value);\\n            case 'E':\\n                return observer.error && observer.error(this.error);\\n            case 'C':\\n                return observer.complete && observer.complete();\\n        }\\n    };\\n    Notification.prototype.do = function (next, error, complete) {\\n        var kind = this.kind;\\n        switch (kind) {\\n            case 'N':\\n                return next && next(this.value);\\n            case 'E':\\n                return error && error(this.error);\\n            case 'C':\\n                return complete && complete();\\n        }\\n    };\\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\\n            return this.observe(nextOrObserver);\\n        }\\n        else {\\n            return this.do(nextOrObserver, error, complete);\\n        }\\n    };\\n    Notification.prototype.toObservable = function () {\\n        var kind = this.kind;\\n        switch (kind) {\\n            case 'N':\\n                return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__[\\\"of\\\"])(this.value);\\n            case 'E':\\n                return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__[\\\"throwError\\\"])(this.error);\\n            case 'C':\\n                return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__[\\\"empty\\\"])();\\n        }\\n        throw new Error('unexpected notification kind value');\\n    };\\n    Notification.createNext = function (value) {\\n        if (typeof value !== 'undefined') {\\n            return new Notification('N', value);\\n        }\\n        return Notification.undefinedValueNotification;\\n    };\\n    Notification.createError = function (err) {\\n        return new Notification('E', undefined, err);\\n    };\\n    Notification.createComplete = function () {\\n        return Notification.completeNotification;\\n    };\\n    Notification.completeNotification = new Notification('C');\\n    Notification.undefinedValueNotification = new Notification('N', undefined);\\n    return Notification;\\n}());\\n\\n//# sourceMappingURL=Notification.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Notification.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Observable.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Observable.js ***!\n  \\********************************************************/\n/*! exports provided: Observable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Observable\\\", function() { return Observable; });\\n/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/canReportError */ \\\"./node_modules/rxjs/_esm5/internal/util/canReportError.js\\\");\\n/* harmony import */ var _util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/toSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/util/toSubscriber.js\\\");\\n/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/observable */ \\\"./node_modules/rxjs/_esm5/internal/symbol/observable.js\\\");\\n/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/pipe */ \\\"./node_modules/rxjs/_esm5/internal/util/pipe.js\\\");\\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ \\\"./node_modules/rxjs/_esm5/internal/config.js\\\");\\n/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nvar Observable = /*@__PURE__*/ (function () {\\n    function Observable(subscribe) {\\n        this._isScalar = false;\\n        if (subscribe) {\\n            this._subscribe = subscribe;\\n        }\\n    }\\n    Observable.prototype.lift = function (operator) {\\n        var observable = new Observable();\\n        observable.source = this;\\n        observable.operator = operator;\\n        return observable;\\n    };\\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\\n        var operator = this.operator;\\n        var sink = Object(_util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"toSubscriber\\\"])(observerOrNext, error, complete);\\n        if (operator) {\\n            sink.add(operator.call(sink, this.source));\\n        }\\n        else {\\n            sink.add(this.source || (_config__WEBPACK_IMPORTED_MODULE_4__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\\n                this._subscribe(sink) :\\n                this._trySubscribe(sink));\\n        }\\n        if (_config__WEBPACK_IMPORTED_MODULE_4__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling) {\\n            if (sink.syncErrorThrowable) {\\n                sink.syncErrorThrowable = false;\\n                if (sink.syncErrorThrown) {\\n                    throw sink.syncErrorValue;\\n                }\\n            }\\n        }\\n        return sink;\\n    };\\n    Observable.prototype._trySubscribe = function (sink) {\\n        try {\\n            return this._subscribe(sink);\\n        }\\n        catch (err) {\\n            if (_config__WEBPACK_IMPORTED_MODULE_4__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling) {\\n                sink.syncErrorThrown = true;\\n                sink.syncErrorValue = err;\\n            }\\n            if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_0__[\\\"canReportError\\\"])(sink)) {\\n                sink.error(err);\\n            }\\n            else {\\n                console.warn(err);\\n            }\\n        }\\n    };\\n    Observable.prototype.forEach = function (next, promiseCtor) {\\n        var _this = this;\\n        promiseCtor = getPromiseCtor(promiseCtor);\\n        return new promiseCtor(function (resolve, reject) {\\n            var subscription;\\n            subscription = _this.subscribe(function (value) {\\n                try {\\n                    next(value);\\n                }\\n                catch (err) {\\n                    reject(err);\\n                    if (subscription) {\\n                        subscription.unsubscribe();\\n                    }\\n                }\\n            }, reject, resolve);\\n        });\\n    };\\n    Observable.prototype._subscribe = function (subscriber) {\\n        var source = this.source;\\n        return source && source.subscribe(subscriber);\\n    };\\n    Observable.prototype[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__[\\\"observable\\\"]] = function () {\\n        return this;\\n    };\\n    Observable.prototype.pipe = function () {\\n        var operations = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            operations[_i] = arguments[_i];\\n        }\\n        if (operations.length === 0) {\\n            return this;\\n        }\\n        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__[\\\"pipeFromArray\\\"])(operations)(this);\\n    };\\n    Observable.prototype.toPromise = function (promiseCtor) {\\n        var _this = this;\\n        promiseCtor = getPromiseCtor(promiseCtor);\\n        return new promiseCtor(function (resolve, reject) {\\n            var value;\\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\\n        });\\n    };\\n    Observable.create = function (subscribe) {\\n        return new Observable(subscribe);\\n    };\\n    return Observable;\\n}());\\n\\nfunction getPromiseCtor(promiseCtor) {\\n    if (!promiseCtor) {\\n        promiseCtor = _config__WEBPACK_IMPORTED_MODULE_4__[\\\"config\\\"].Promise || Promise;\\n    }\\n    if (!promiseCtor) {\\n        throw new Error('no Promise impl found');\\n    }\\n    return promiseCtor;\\n}\\n//# sourceMappingURL=Observable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Observable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Observer.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Observer.js ***!\n  \\******************************************************/\n/*! exports provided: empty */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"empty\\\", function() { return empty; });\\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \\\"./node_modules/rxjs/_esm5/internal/config.js\\\");\\n/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/hostReportError */ \\\"./node_modules/rxjs/_esm5/internal/util/hostReportError.js\\\");\\n/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\\n\\n\\nvar empty = {\\n    closed: true,\\n    next: function (value) { },\\n    error: function (err) {\\n        if (_config__WEBPACK_IMPORTED_MODULE_0__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling) {\\n            throw err;\\n        }\\n        else {\\n            Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__[\\\"hostReportError\\\"])(err);\\n        }\\n    },\\n    complete: function () { }\\n};\\n//# sourceMappingURL=Observer.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Observer.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/OuterSubscriber.js ***!\n  \\*************************************************************/\n/*! exports provided: OuterSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"OuterSubscriber\\\", function() { return OuterSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](OuterSubscriber, _super);\\n    function OuterSubscriber() {\\n        return _super !== null && _super.apply(this, arguments) || this;\\n    }\\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.destination.next(innerValue);\\n    };\\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\\n        this.destination.error(error);\\n    };\\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\\n        this.destination.complete();\\n    };\\n    return OuterSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n\\n//# sourceMappingURL=OuterSubscriber.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/OuterSubscriber.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/ReplaySubject.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/ReplaySubject.js ***!\n  \\***********************************************************/\n/*! exports provided: ReplaySubject */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ReplaySubject\\\", function() { return ReplaySubject; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduler/queue */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/queue.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operators/observeOn */ \\\"./node_modules/rxjs/_esm5/internal/operators/observeOn.js\\\");\\n/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ \\\"./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js\\\");\\n/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SubjectSubscription */ \\\"./node_modules/rxjs/_esm5/internal/SubjectSubscription.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ReplaySubject, _super);\\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\\n        if (bufferSize === void 0) {\\n            bufferSize = Number.POSITIVE_INFINITY;\\n        }\\n        if (windowTime === void 0) {\\n            windowTime = Number.POSITIVE_INFINITY;\\n        }\\n        var _this = _super.call(this) || this;\\n        _this.scheduler = scheduler;\\n        _this._events = [];\\n        _this._infiniteTimeWindow = false;\\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\\n        if (windowTime === Number.POSITIVE_INFINITY) {\\n            _this._infiniteTimeWindow = true;\\n            _this.next = _this.nextInfiniteTimeWindow;\\n        }\\n        else {\\n            _this.next = _this.nextTimeWindow;\\n        }\\n        return _this;\\n    }\\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\\n        var _events = this._events;\\n        _events.push(value);\\n        if (_events.length > this._bufferSize) {\\n            _events.shift();\\n        }\\n        _super.prototype.next.call(this, value);\\n    };\\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\\n        this._events.push(new ReplayEvent(this._getNow(), value));\\n        this._trimBufferThenGetEvents();\\n        _super.prototype.next.call(this, value);\\n    };\\n    ReplaySubject.prototype._subscribe = function (subscriber) {\\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\\n        var scheduler = this.scheduler;\\n        var len = _events.length;\\n        var subscription;\\n        if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        else if (this.isStopped || this.hasError) {\\n            subscription = _Subscription__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscription\\\"].EMPTY;\\n        }\\n        else {\\n            this.observers.push(subscriber);\\n            subscription = new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__[\\\"SubjectSubscription\\\"](this, subscriber);\\n        }\\n        if (scheduler) {\\n            subscriber.add(subscriber = new _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__[\\\"ObserveOnSubscriber\\\"](subscriber, scheduler));\\n        }\\n        if (_infiniteTimeWindow) {\\n            for (var i = 0; i < len && !subscriber.closed; i++) {\\n                subscriber.next(_events[i]);\\n            }\\n        }\\n        else {\\n            for (var i = 0; i < len && !subscriber.closed; i++) {\\n                subscriber.next(_events[i].value);\\n            }\\n        }\\n        if (this.hasError) {\\n            subscriber.error(this.thrownError);\\n        }\\n        else if (this.isStopped) {\\n            subscriber.complete();\\n        }\\n        return subscription;\\n    };\\n    ReplaySubject.prototype._getNow = function () {\\n        return (this.scheduler || _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__[\\\"queue\\\"]).now();\\n    };\\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\\n        var now = this._getNow();\\n        var _bufferSize = this._bufferSize;\\n        var _windowTime = this._windowTime;\\n        var _events = this._events;\\n        var eventsCount = _events.length;\\n        var spliceCount = 0;\\n        while (spliceCount < eventsCount) {\\n            if ((now - _events[spliceCount].time) < _windowTime) {\\n                break;\\n            }\\n            spliceCount++;\\n        }\\n        if (eventsCount > _bufferSize) {\\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\\n        }\\n        if (spliceCount > 0) {\\n            _events.splice(0, spliceCount);\\n        }\\n        return _events;\\n    };\\n    return ReplaySubject;\\n}(_Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]));\\n\\nvar ReplayEvent = /*@__PURE__*/ (function () {\\n    function ReplayEvent(time, value) {\\n        this.time = time;\\n        this.value = value;\\n    }\\n    return ReplayEvent;\\n}());\\n//# sourceMappingURL=ReplaySubject.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/ReplaySubject.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Scheduler.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Scheduler.js ***!\n  \\*******************************************************/\n/*! exports provided: Scheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Scheduler\\\", function() { return Scheduler; });\\nvar Scheduler = /*@__PURE__*/ (function () {\\n    function Scheduler(SchedulerAction, now) {\\n        if (now === void 0) {\\n            now = Scheduler.now;\\n        }\\n        this.SchedulerAction = SchedulerAction;\\n        this.now = now;\\n    }\\n    Scheduler.prototype.schedule = function (work, delay, state) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        return new this.SchedulerAction(this, work).schedule(state, delay);\\n    };\\n    Scheduler.now = function () { return Date.now(); };\\n    return Scheduler;\\n}());\\n\\n//# sourceMappingURL=Scheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Scheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Subject.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Subject.js ***!\n  \\*****************************************************/\n/*! exports provided: SubjectSubscriber, Subject, AnonymousSubject */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SubjectSubscriber\\\", function() { return SubjectSubscriber; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Subject\\\", function() { return Subject; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AnonymousSubject\\\", function() { return AnonymousSubject; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ \\\"./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js\\\");\\n/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SubjectSubscription */ \\\"./node_modules/rxjs/_esm5/internal/SubjectSubscription.js\\\");\\n/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SubjectSubscriber, _super);\\n    function SubjectSubscriber(destination) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.destination = destination;\\n        return _this;\\n    }\\n    return SubjectSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscriber\\\"]));\\n\\nvar Subject = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](Subject, _super);\\n    function Subject() {\\n        var _this = _super.call(this) || this;\\n        _this.observers = [];\\n        _this.closed = false;\\n        _this.isStopped = false;\\n        _this.hasError = false;\\n        _this.thrownError = null;\\n        return _this;\\n    }\\n    Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__[\\\"rxSubscriber\\\"]] = function () {\\n        return new SubjectSubscriber(this);\\n    };\\n    Subject.prototype.lift = function (operator) {\\n        var subject = new AnonymousSubject(this, this);\\n        subject.operator = operator;\\n        return subject;\\n    };\\n    Subject.prototype.next = function (value) {\\n        if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        if (!this.isStopped) {\\n            var observers = this.observers;\\n            var len = observers.length;\\n            var copy = observers.slice();\\n            for (var i = 0; i < len; i++) {\\n                copy[i].next(value);\\n            }\\n        }\\n    };\\n    Subject.prototype.error = function (err) {\\n        if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        this.hasError = true;\\n        this.thrownError = err;\\n        this.isStopped = true;\\n        var observers = this.observers;\\n        var len = observers.length;\\n        var copy = observers.slice();\\n        for (var i = 0; i < len; i++) {\\n            copy[i].error(err);\\n        }\\n        this.observers.length = 0;\\n    };\\n    Subject.prototype.complete = function () {\\n        if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        this.isStopped = true;\\n        var observers = this.observers;\\n        var len = observers.length;\\n        var copy = observers.slice();\\n        for (var i = 0; i < len; i++) {\\n            copy[i].complete();\\n        }\\n        this.observers.length = 0;\\n    };\\n    Subject.prototype.unsubscribe = function () {\\n        this.isStopped = true;\\n        this.closed = true;\\n        this.observers = null;\\n    };\\n    Subject.prototype._trySubscribe = function (subscriber) {\\n        if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        else {\\n            return _super.prototype._trySubscribe.call(this, subscriber);\\n        }\\n    };\\n    Subject.prototype._subscribe = function (subscriber) {\\n        if (this.closed) {\\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__[\\\"ObjectUnsubscribedError\\\"]();\\n        }\\n        else if (this.hasError) {\\n            subscriber.error(this.thrownError);\\n            return _Subscription__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscription\\\"].EMPTY;\\n        }\\n        else if (this.isStopped) {\\n            subscriber.complete();\\n            return _Subscription__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscription\\\"].EMPTY;\\n        }\\n        else {\\n            this.observers.push(subscriber);\\n            return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__[\\\"SubjectSubscription\\\"](this, subscriber);\\n        }\\n    };\\n    Subject.prototype.asObservable = function () {\\n        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_1__[\\\"Observable\\\"]();\\n        observable.source = this;\\n        return observable;\\n    };\\n    Subject.create = function (destination, source) {\\n        return new AnonymousSubject(destination, source);\\n    };\\n    return Subject;\\n}(_Observable__WEBPACK_IMPORTED_MODULE_1__[\\\"Observable\\\"]));\\n\\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AnonymousSubject, _super);\\n    function AnonymousSubject(destination, source) {\\n        var _this = _super.call(this) || this;\\n        _this.destination = destination;\\n        _this.source = source;\\n        return _this;\\n    }\\n    AnonymousSubject.prototype.next = function (value) {\\n        var destination = this.destination;\\n        if (destination && destination.next) {\\n            destination.next(value);\\n        }\\n    };\\n    AnonymousSubject.prototype.error = function (err) {\\n        var destination = this.destination;\\n        if (destination && destination.error) {\\n            this.destination.error(err);\\n        }\\n    };\\n    AnonymousSubject.prototype.complete = function () {\\n        var destination = this.destination;\\n        if (destination && destination.complete) {\\n            this.destination.complete();\\n        }\\n    };\\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\\n        var source = this.source;\\n        if (source) {\\n            return this.source.subscribe(subscriber);\\n        }\\n        else {\\n            return _Subscription__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscription\\\"].EMPTY;\\n        }\\n    };\\n    return AnonymousSubject;\\n}(Subject));\\n\\n//# sourceMappingURL=Subject.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Subject.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/SubjectSubscription.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/SubjectSubscription.js ***!\n  \\*****************************************************************/\n/*! exports provided: SubjectSubscription */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SubjectSubscription\\\", function() { return SubjectSubscription; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\\n\\n\\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SubjectSubscription, _super);\\n    function SubjectSubscription(subject, subscriber) {\\n        var _this = _super.call(this) || this;\\n        _this.subject = subject;\\n        _this.subscriber = subscriber;\\n        _this.closed = false;\\n        return _this;\\n    }\\n    SubjectSubscription.prototype.unsubscribe = function () {\\n        if (this.closed) {\\n            return;\\n        }\\n        this.closed = true;\\n        var subject = this.subject;\\n        var observers = subject.observers;\\n        this.subject = null;\\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\\n            return;\\n        }\\n        var subscriberIndex = observers.indexOf(this.subscriber);\\n        if (subscriberIndex !== -1) {\\n            observers.splice(subscriberIndex, 1);\\n        }\\n    };\\n    return SubjectSubscription;\\n}(_Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]));\\n\\n//# sourceMappingURL=SubjectSubscription.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/SubjectSubscription.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Subscriber.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Subscriber.js ***!\n  \\********************************************************/\n/*! exports provided: Subscriber, SafeSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Subscriber\\\", function() { return Subscriber; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SafeSubscriber\\\", function() { return SafeSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isFunction */ \\\"./node_modules/rxjs/_esm5/internal/util/isFunction.js\\\");\\n/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observer */ \\\"./node_modules/rxjs/_esm5/internal/Observer.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js\\\");\\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ \\\"./node_modules/rxjs/_esm5/internal/config.js\\\");\\n/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/hostReportError */ \\\"./node_modules/rxjs/_esm5/internal/util/hostReportError.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\nvar Subscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](Subscriber, _super);\\n    function Subscriber(destinationOrNext, error, complete) {\\n        var _this = _super.call(this) || this;\\n        _this.syncErrorValue = null;\\n        _this.syncErrorThrown = false;\\n        _this.syncErrorThrowable = false;\\n        _this.isStopped = false;\\n        switch (arguments.length) {\\n            case 0:\\n                _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__[\\\"empty\\\"];\\n                break;\\n            case 1:\\n                if (!destinationOrNext) {\\n                    _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__[\\\"empty\\\"];\\n                    break;\\n                }\\n                if (typeof destinationOrNext === 'object') {\\n                    if (destinationOrNext instanceof Subscriber) {\\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\\n                        _this.destination = destinationOrNext;\\n                        destinationOrNext.add(_this);\\n                    }\\n                    else {\\n                        _this.syncErrorThrowable = true;\\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\\n                    }\\n                    break;\\n                }\\n            default:\\n                _this.syncErrorThrowable = true;\\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\\n                break;\\n        }\\n        return _this;\\n    }\\n    Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__[\\\"rxSubscriber\\\"]] = function () { return this; };\\n    Subscriber.create = function (next, error, complete) {\\n        var subscriber = new Subscriber(next, error, complete);\\n        subscriber.syncErrorThrowable = false;\\n        return subscriber;\\n    };\\n    Subscriber.prototype.next = function (value) {\\n        if (!this.isStopped) {\\n            this._next(value);\\n        }\\n    };\\n    Subscriber.prototype.error = function (err) {\\n        if (!this.isStopped) {\\n            this.isStopped = true;\\n            this._error(err);\\n        }\\n    };\\n    Subscriber.prototype.complete = function () {\\n        if (!this.isStopped) {\\n            this.isStopped = true;\\n            this._complete();\\n        }\\n    };\\n    Subscriber.prototype.unsubscribe = function () {\\n        if (this.closed) {\\n            return;\\n        }\\n        this.isStopped = true;\\n        _super.prototype.unsubscribe.call(this);\\n    };\\n    Subscriber.prototype._next = function (value) {\\n        this.destination.next(value);\\n    };\\n    Subscriber.prototype._error = function (err) {\\n        this.destination.error(err);\\n        this.unsubscribe();\\n    };\\n    Subscriber.prototype._complete = function () {\\n        this.destination.complete();\\n        this.unsubscribe();\\n    };\\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\\n        var _parentOrParents = this._parentOrParents;\\n        this._parentOrParents = null;\\n        this.unsubscribe();\\n        this.closed = false;\\n        this.isStopped = false;\\n        this._parentOrParents = _parentOrParents;\\n        return this;\\n    };\\n    return Subscriber;\\n}(_Subscription__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscription\\\"]));\\n\\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SafeSubscriber, _super);\\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\\n        var _this = _super.call(this) || this;\\n        _this._parentSubscriber = _parentSubscriber;\\n        var next;\\n        var context = _this;\\n        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__[\\\"isFunction\\\"])(observerOrNext)) {\\n            next = observerOrNext;\\n        }\\n        else if (observerOrNext) {\\n            next = observerOrNext.next;\\n            error = observerOrNext.error;\\n            complete = observerOrNext.complete;\\n            if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_2__[\\\"empty\\\"]) {\\n                context = Object.create(observerOrNext);\\n                if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__[\\\"isFunction\\\"])(context.unsubscribe)) {\\n                    _this.add(context.unsubscribe.bind(context));\\n                }\\n                context.unsubscribe = _this.unsubscribe.bind(_this);\\n            }\\n        }\\n        _this._context = context;\\n        _this._next = next;\\n        _this._error = error;\\n        _this._complete = complete;\\n        return _this;\\n    }\\n    SafeSubscriber.prototype.next = function (value) {\\n        if (!this.isStopped && this._next) {\\n            var _parentSubscriber = this._parentSubscriber;\\n            if (!_config__WEBPACK_IMPORTED_MODULE_5__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\\n                this.__tryOrUnsub(this._next, value);\\n            }\\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\\n                this.unsubscribe();\\n            }\\n        }\\n    };\\n    SafeSubscriber.prototype.error = function (err) {\\n        if (!this.isStopped) {\\n            var _parentSubscriber = this._parentSubscriber;\\n            var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_5__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling;\\n            if (this._error) {\\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\\n                    this.__tryOrUnsub(this._error, err);\\n                    this.unsubscribe();\\n                }\\n                else {\\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\\n                    this.unsubscribe();\\n                }\\n            }\\n            else if (!_parentSubscriber.syncErrorThrowable) {\\n                this.unsubscribe();\\n                if (useDeprecatedSynchronousErrorHandling) {\\n                    throw err;\\n                }\\n                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[\\\"hostReportError\\\"])(err);\\n            }\\n            else {\\n                if (useDeprecatedSynchronousErrorHandling) {\\n                    _parentSubscriber.syncErrorValue = err;\\n                    _parentSubscriber.syncErrorThrown = true;\\n                }\\n                else {\\n                    Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[\\\"hostReportError\\\"])(err);\\n                }\\n                this.unsubscribe();\\n            }\\n        }\\n    };\\n    SafeSubscriber.prototype.complete = function () {\\n        var _this = this;\\n        if (!this.isStopped) {\\n            var _parentSubscriber = this._parentSubscriber;\\n            if (this._complete) {\\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\\n                if (!_config__WEBPACK_IMPORTED_MODULE_5__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\\n                    this.__tryOrUnsub(wrappedComplete);\\n                    this.unsubscribe();\\n                }\\n                else {\\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\\n                    this.unsubscribe();\\n                }\\n            }\\n            else {\\n                this.unsubscribe();\\n            }\\n        }\\n    };\\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\\n        try {\\n            fn.call(this._context, value);\\n        }\\n        catch (err) {\\n            this.unsubscribe();\\n            if (_config__WEBPACK_IMPORTED_MODULE_5__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling) {\\n                throw err;\\n            }\\n            else {\\n                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[\\\"hostReportError\\\"])(err);\\n            }\\n        }\\n    };\\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\\n        if (!_config__WEBPACK_IMPORTED_MODULE_5__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling) {\\n            throw new Error('bad call');\\n        }\\n        try {\\n            fn.call(this._context, value);\\n        }\\n        catch (err) {\\n            if (_config__WEBPACK_IMPORTED_MODULE_5__[\\\"config\\\"].useDeprecatedSynchronousErrorHandling) {\\n                parent.syncErrorValue = err;\\n                parent.syncErrorThrown = true;\\n                return true;\\n            }\\n            else {\\n                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__[\\\"hostReportError\\\"])(err);\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    SafeSubscriber.prototype._unsubscribe = function () {\\n        var _parentSubscriber = this._parentSubscriber;\\n        this._context = null;\\n        this._parentSubscriber = null;\\n        _parentSubscriber.unsubscribe();\\n    };\\n    return SafeSubscriber;\\n}(Subscriber));\\n\\n//# sourceMappingURL=Subscriber.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Subscriber.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/Subscription.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/Subscription.js ***!\n  \\**********************************************************/\n/*! exports provided: Subscription */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Subscription\\\", function() { return Subscription; });\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isObject */ \\\"./node_modules/rxjs/_esm5/internal/util/isObject.js\\\");\\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/isFunction */ \\\"./node_modules/rxjs/_esm5/internal/util/isFunction.js\\\");\\n/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/UnsubscriptionError */ \\\"./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js\\\");\\n/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\\n\\n\\n\\n\\nvar Subscription = /*@__PURE__*/ (function () {\\n    function Subscription(unsubscribe) {\\n        this.closed = false;\\n        this._parentOrParents = null;\\n        this._subscriptions = null;\\n        if (unsubscribe) {\\n            this._unsubscribe = unsubscribe;\\n        }\\n    }\\n    Subscription.prototype.unsubscribe = function () {\\n        var errors;\\n        if (this.closed) {\\n            return;\\n        }\\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\\n        this.closed = true;\\n        this._parentOrParents = null;\\n        this._subscriptions = null;\\n        if (_parentOrParents instanceof Subscription) {\\n            _parentOrParents.remove(this);\\n        }\\n        else if (_parentOrParents !== null) {\\n            for (var index = 0; index < _parentOrParents.length; ++index) {\\n                var parent_1 = _parentOrParents[index];\\n                parent_1.remove(this);\\n            }\\n        }\\n        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__[\\\"isFunction\\\"])(_unsubscribe)) {\\n            try {\\n                _unsubscribe.call(this);\\n            }\\n            catch (e) {\\n                errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[\\\"UnsubscriptionError\\\"] ? flattenUnsubscriptionErrors(e.errors) : [e];\\n            }\\n        }\\n        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__[\\\"isArray\\\"])(_subscriptions)) {\\n            var index = -1;\\n            var len = _subscriptions.length;\\n            while (++index < len) {\\n                var sub = _subscriptions[index];\\n                if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__[\\\"isObject\\\"])(sub)) {\\n                    try {\\n                        sub.unsubscribe();\\n                    }\\n                    catch (e) {\\n                        errors = errors || [];\\n                        if (e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[\\\"UnsubscriptionError\\\"]) {\\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\\n                        }\\n                        else {\\n                            errors.push(e);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        if (errors) {\\n            throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[\\\"UnsubscriptionError\\\"](errors);\\n        }\\n    };\\n    Subscription.prototype.add = function (teardown) {\\n        var subscription = teardown;\\n        if (!teardown) {\\n            return Subscription.EMPTY;\\n        }\\n        switch (typeof teardown) {\\n            case 'function':\\n                subscription = new Subscription(teardown);\\n            case 'object':\\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\\n                    return subscription;\\n                }\\n                else if (this.closed) {\\n                    subscription.unsubscribe();\\n                    return subscription;\\n                }\\n                else if (!(subscription instanceof Subscription)) {\\n                    var tmp = subscription;\\n                    subscription = new Subscription();\\n                    subscription._subscriptions = [tmp];\\n                }\\n                break;\\n            default: {\\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\\n            }\\n        }\\n        var _parentOrParents = subscription._parentOrParents;\\n        if (_parentOrParents === null) {\\n            subscription._parentOrParents = this;\\n        }\\n        else if (_parentOrParents instanceof Subscription) {\\n            if (_parentOrParents === this) {\\n                return subscription;\\n            }\\n            subscription._parentOrParents = [_parentOrParents, this];\\n        }\\n        else if (_parentOrParents.indexOf(this) === -1) {\\n            _parentOrParents.push(this);\\n        }\\n        else {\\n            return subscription;\\n        }\\n        var subscriptions = this._subscriptions;\\n        if (subscriptions === null) {\\n            this._subscriptions = [subscription];\\n        }\\n        else {\\n            subscriptions.push(subscription);\\n        }\\n        return subscription;\\n    };\\n    Subscription.prototype.remove = function (subscription) {\\n        var subscriptions = this._subscriptions;\\n        if (subscriptions) {\\n            var subscriptionIndex = subscriptions.indexOf(subscription);\\n            if (subscriptionIndex !== -1) {\\n                subscriptions.splice(subscriptionIndex, 1);\\n            }\\n        }\\n    };\\n    Subscription.EMPTY = (function (empty) {\\n        empty.closed = true;\\n        return empty;\\n    }(new Subscription()));\\n    return Subscription;\\n}());\\n\\nfunction flattenUnsubscriptionErrors(errors) {\\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__[\\\"UnsubscriptionError\\\"]) ? err.errors : err); }, []);\\n}\\n//# sourceMappingURL=Subscription.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/Subscription.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/config.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/config.js ***!\n  \\****************************************************/\n/*! exports provided: config */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"config\\\", function() { return config; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\\nvar config = {\\n    Promise: undefined,\\n    set useDeprecatedSynchronousErrorHandling(value) {\\n        if (value) {\\n            var error = /*@__PURE__*/ new Error();\\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\\\n' + error.stack);\\n        }\\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\\n        }\\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\\n    },\\n    get useDeprecatedSynchronousErrorHandling() {\\n        return _enable_super_gross_mode_that_will_cause_bad_things;\\n    },\\n};\\n//# sourceMappingURL=config.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/config.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js\":\n/*!******************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js ***!\n  \\******************************************************************************/\n/*! exports provided: ConnectableObservable, connectableObservableDescriptor */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ConnectableObservable\\\", function() { return ConnectableObservable; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"connectableObservableDescriptor\\\", function() { return connectableObservableDescriptor; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operators/refCount */ \\\"./node_modules/rxjs/_esm5/internal/operators/refCount.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ConnectableObservable, _super);\\n    function ConnectableObservable(source, subjectFactory) {\\n        var _this = _super.call(this) || this;\\n        _this.source = source;\\n        _this.subjectFactory = subjectFactory;\\n        _this._refCount = 0;\\n        _this._isComplete = false;\\n        return _this;\\n    }\\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\\n        return this.getSubject().subscribe(subscriber);\\n    };\\n    ConnectableObservable.prototype.getSubject = function () {\\n        var subject = this._subject;\\n        if (!subject || subject.isStopped) {\\n            this._subject = this.subjectFactory();\\n        }\\n        return this._subject;\\n    };\\n    ConnectableObservable.prototype.connect = function () {\\n        var connection = this._connection;\\n        if (!connection) {\\n            this._isComplete = false;\\n            connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_4__[\\\"Subscription\\\"]();\\n            connection.add(this.source\\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\\n            if (connection.closed) {\\n                this._connection = null;\\n                connection = _Subscription__WEBPACK_IMPORTED_MODULE_4__[\\\"Subscription\\\"].EMPTY;\\n            }\\n        }\\n        return connection;\\n    };\\n    ConnectableObservable.prototype.refCount = function () {\\n        return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_5__[\\\"refCount\\\"])()(this);\\n    };\\n    return ConnectableObservable;\\n}(_Observable__WEBPACK_IMPORTED_MODULE_2__[\\\"Observable\\\"]));\\n\\nvar connectableProto = ConnectableObservable.prototype;\\nvar connectableObservableDescriptor = {\\n    operator: { value: null },\\n    _refCount: { value: 0, writable: true },\\n    _subject: { value: null, writable: true },\\n    _connection: { value: null, writable: true },\\n    _subscribe: { value: connectableProto._subscribe },\\n    _isComplete: { value: connectableProto._isComplete, writable: true },\\n    getSubject: { value: connectableProto.getSubject },\\n    connect: { value: connectableProto.connect },\\n    refCount: { value: connectableProto.refCount }\\n};\\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ConnectableSubscriber, _super);\\n    function ConnectableSubscriber(destination, connectable) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.connectable = connectable;\\n        return _this;\\n    }\\n    ConnectableSubscriber.prototype._error = function (err) {\\n        this._unsubscribe();\\n        _super.prototype._error.call(this, err);\\n    };\\n    ConnectableSubscriber.prototype._complete = function () {\\n        this.connectable._isComplete = true;\\n        this._unsubscribe();\\n        _super.prototype._complete.call(this);\\n    };\\n    ConnectableSubscriber.prototype._unsubscribe = function () {\\n        var connectable = this.connectable;\\n        if (connectable) {\\n            this.connectable = null;\\n            var connection = connectable._connection;\\n            connectable._refCount = 0;\\n            connectable._subject = null;\\n            connectable._connection = null;\\n            if (connection) {\\n                connection.unsubscribe();\\n            }\\n        }\\n    };\\n    return ConnectableSubscriber;\\n}(_Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"SubjectSubscriber\\\"]));\\nvar RefCountOperator = /*@__PURE__*/ (function () {\\n    function RefCountOperator(connectable) {\\n        this.connectable = connectable;\\n    }\\n    RefCountOperator.prototype.call = function (subscriber, source) {\\n        var connectable = this.connectable;\\n        connectable._refCount++;\\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\\n        var subscription = source.subscribe(refCounter);\\n        if (!refCounter.closed) {\\n            refCounter.connection = connectable.connect();\\n        }\\n        return subscription;\\n    };\\n    return RefCountOperator;\\n}());\\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RefCountSubscriber, _super);\\n    function RefCountSubscriber(destination, connectable) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.connectable = connectable;\\n        return _this;\\n    }\\n    RefCountSubscriber.prototype._unsubscribe = function () {\\n        var connectable = this.connectable;\\n        if (!connectable) {\\n            this.connection = null;\\n            return;\\n        }\\n        this.connectable = null;\\n        var refCount = connectable._refCount;\\n        if (refCount <= 0) {\\n            this.connection = null;\\n            return;\\n        }\\n        connectable._refCount = refCount - 1;\\n        if (refCount > 1) {\\n            this.connection = null;\\n            return;\\n        }\\n        var connection = this.connection;\\n        var sharedConnection = connectable._connection;\\n        this.connection = null;\\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\\n            sharedConnection.unsubscribe();\\n        }\\n    };\\n    return RefCountSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=ConnectableObservable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js\":\n/*!******************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js ***!\n  \\******************************************************************************/\n/*! exports provided: SubscribeOnObservable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SubscribeOnObservable\\\", function() { return SubscribeOnObservable; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/asap */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/asap.js\\\");\\n/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isNumeric */ \\\"./node_modules/rxjs/_esm5/internal/util/isNumeric.js\\\");\\n/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\\n\\n\\n\\n\\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SubscribeOnObservable, _super);\\n    function SubscribeOnObservable(source, delayTime, scheduler) {\\n        if (delayTime === void 0) {\\n            delayTime = 0;\\n        }\\n        if (scheduler === void 0) {\\n            scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__[\\\"asap\\\"];\\n        }\\n        var _this = _super.call(this) || this;\\n        _this.source = source;\\n        _this.delayTime = delayTime;\\n        _this.scheduler = scheduler;\\n        if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_3__[\\\"isNumeric\\\"])(delayTime) || delayTime < 0) {\\n            _this.delayTime = 0;\\n        }\\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\\n            _this.scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__[\\\"asap\\\"];\\n        }\\n        return _this;\\n    }\\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (scheduler === void 0) {\\n            scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__[\\\"asap\\\"];\\n        }\\n        return new SubscribeOnObservable(source, delay, scheduler);\\n    };\\n    SubscribeOnObservable.dispatch = function (arg) {\\n        var source = arg.source, subscriber = arg.subscriber;\\n        return this.add(source.subscribe(subscriber));\\n    };\\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\\n        var delay = this.delayTime;\\n        var source = this.source;\\n        var scheduler = this.scheduler;\\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\\n            source: source, subscriber: subscriber\\n        });\\n    };\\n    return SubscribeOnObservable;\\n}(_Observable__WEBPACK_IMPORTED_MODULE_1__[\\\"Observable\\\"]));\\n\\n//# sourceMappingURL=SubscribeOnObservable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/bindCallback.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/bindCallback.js ***!\n  \\*********************************************************************/\n/*! exports provided: bindCallback */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bindCallback\\\", function() { return bindCallback; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncSubject */ \\\"./node_modules/rxjs/_esm5/internal/AsyncSubject.js\\\");\\n/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canReportError */ \\\"./node_modules/rxjs/_esm5/internal/util/canReportError.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction bindCallback(callbackFunc, resultSelector, scheduler) {\\n    if (resultSelector) {\\n        if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__[\\\"isScheduler\\\"])(resultSelector)) {\\n            scheduler = resultSelector;\\n        }\\n        else {\\n            return function () {\\n                var args = [];\\n                for (var _i = 0; _i < arguments.length; _i++) {\\n                    args[_i] = arguments[_i];\\n                }\\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__[\\\"map\\\"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_4__[\\\"isArray\\\"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\\n            };\\n        }\\n    }\\n    return function () {\\n        var args = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            args[_i] = arguments[_i];\\n        }\\n        var context = this;\\n        var subject;\\n        var params = {\\n            context: context,\\n            subject: subject,\\n            callbackFunc: callbackFunc,\\n            scheduler: scheduler,\\n        };\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n            if (!scheduler) {\\n                if (!subject) {\\n                    subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncSubject\\\"]();\\n                    var handler = function () {\\n                        var innerArgs = [];\\n                        for (var _i = 0; _i < arguments.length; _i++) {\\n                            innerArgs[_i] = arguments[_i];\\n                        }\\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\\n                        subject.complete();\\n                    };\\n                    try {\\n                        callbackFunc.apply(context, args.concat([handler]));\\n                    }\\n                    catch (err) {\\n                        if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_3__[\\\"canReportError\\\"])(subject)) {\\n                            subject.error(err);\\n                        }\\n                        else {\\n                            console.warn(err);\\n                        }\\n                    }\\n                }\\n                return subject.subscribe(subscriber);\\n            }\\n            else {\\n                var state = {\\n                    args: args, subscriber: subscriber, params: params,\\n                };\\n                return scheduler.schedule(dispatch, 0, state);\\n            }\\n        });\\n    };\\n}\\nfunction dispatch(state) {\\n    var _this = this;\\n    var self = this;\\n    var args = state.args, subscriber = state.subscriber, params = state.params;\\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\\n    var subject = params.subject;\\n    if (!subject) {\\n        subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncSubject\\\"]();\\n        var handler = function () {\\n            var innerArgs = [];\\n            for (var _i = 0; _i < arguments.length; _i++) {\\n                innerArgs[_i] = arguments[_i];\\n            }\\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\\n        };\\n        try {\\n            callbackFunc.apply(context, args.concat([handler]));\\n        }\\n        catch (err) {\\n            subject.error(err);\\n        }\\n    }\\n    this.add(subject.subscribe(subscriber));\\n}\\nfunction dispatchNext(state) {\\n    var value = state.value, subject = state.subject;\\n    subject.next(value);\\n    subject.complete();\\n}\\nfunction dispatchError(state) {\\n    var err = state.err, subject = state.subject;\\n    subject.error(err);\\n}\\n//# sourceMappingURL=bindCallback.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/bindCallback.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js ***!\n  \\*************************************************************************/\n/*! exports provided: bindNodeCallback */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bindNodeCallback\\\", function() { return bindNodeCallback; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncSubject */ \\\"./node_modules/rxjs/_esm5/internal/AsyncSubject.js\\\");\\n/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canReportError */ \\\"./node_modules/rxjs/_esm5/internal/util/canReportError.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction bindNodeCallback(callbackFunc, resultSelector, scheduler) {\\n    if (resultSelector) {\\n        if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_4__[\\\"isScheduler\\\"])(resultSelector)) {\\n            scheduler = resultSelector;\\n        }\\n        else {\\n            return function () {\\n                var args = [];\\n                for (var _i = 0; _i < arguments.length; _i++) {\\n                    args[_i] = arguments[_i];\\n                }\\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__[\\\"map\\\"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__[\\\"isArray\\\"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\\n            };\\n        }\\n    }\\n    return function () {\\n        var args = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            args[_i] = arguments[_i];\\n        }\\n        var params = {\\n            subject: undefined,\\n            args: args,\\n            callbackFunc: callbackFunc,\\n            scheduler: scheduler,\\n            context: this,\\n        };\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n            var context = params.context;\\n            var subject = params.subject;\\n            if (!scheduler) {\\n                if (!subject) {\\n                    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncSubject\\\"]();\\n                    var handler = function () {\\n                        var innerArgs = [];\\n                        for (var _i = 0; _i < arguments.length; _i++) {\\n                            innerArgs[_i] = arguments[_i];\\n                        }\\n                        var err = innerArgs.shift();\\n                        if (err) {\\n                            subject.error(err);\\n                            return;\\n                        }\\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\\n                        subject.complete();\\n                    };\\n                    try {\\n                        callbackFunc.apply(context, args.concat([handler]));\\n                    }\\n                    catch (err) {\\n                        if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_3__[\\\"canReportError\\\"])(subject)) {\\n                            subject.error(err);\\n                        }\\n                        else {\\n                            console.warn(err);\\n                        }\\n                    }\\n                }\\n                return subject.subscribe(subscriber);\\n            }\\n            else {\\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\\n            }\\n        });\\n    };\\n}\\nfunction dispatch(state) {\\n    var _this = this;\\n    var params = state.params, subscriber = state.subscriber, context = state.context;\\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\\n    var subject = params.subject;\\n    if (!subject) {\\n        subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncSubject\\\"]();\\n        var handler = function () {\\n            var innerArgs = [];\\n            for (var _i = 0; _i < arguments.length; _i++) {\\n                innerArgs[_i] = arguments[_i];\\n            }\\n            var err = innerArgs.shift();\\n            if (err) {\\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\\n            }\\n            else {\\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\\n            }\\n        };\\n        try {\\n            callbackFunc.apply(context, args.concat([handler]));\\n        }\\n        catch (err) {\\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\\n        }\\n    }\\n    this.add(subject.subscribe(subscriber));\\n}\\nfunction dispatchNext(arg) {\\n    var value = arg.value, subject = arg.subject;\\n    subject.next(value);\\n    subject.complete();\\n}\\nfunction dispatchError(arg) {\\n    var err = arg.err, subject = arg.subject;\\n    subject.error(err);\\n}\\n//# sourceMappingURL=bindNodeCallback.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/combineLatest.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/combineLatest.js ***!\n  \\**********************************************************************/\n/*! exports provided: combineLatest, CombineLatestOperator, CombineLatestSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"combineLatest\\\", function() { return combineLatest; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CombineLatestOperator\\\", function() { return CombineLatestOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CombineLatestSubscriber\\\", function() { return CombineLatestSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fromArray */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromArray.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nvar NONE = {};\\nfunction combineLatest() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    var resultSelector = null;\\n    var scheduler = null;\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"isScheduler\\\"])(observables[observables.length - 1])) {\\n        scheduler = observables.pop();\\n    }\\n    if (typeof observables[observables.length - 1] === 'function') {\\n        resultSelector = observables.pop();\\n    }\\n    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(observables[0])) {\\n        observables = observables[0];\\n    }\\n    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__[\\\"fromArray\\\"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\\n}\\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\\n    function CombineLatestOperator(resultSelector) {\\n        this.resultSelector = resultSelector;\\n    }\\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\\n    };\\n    return CombineLatestOperator;\\n}());\\n\\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](CombineLatestSubscriber, _super);\\n    function CombineLatestSubscriber(destination, resultSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.resultSelector = resultSelector;\\n        _this.active = 0;\\n        _this.values = [];\\n        _this.observables = [];\\n        return _this;\\n    }\\n    CombineLatestSubscriber.prototype._next = function (observable) {\\n        this.values.push(NONE);\\n        this.observables.push(observable);\\n    };\\n    CombineLatestSubscriber.prototype._complete = function () {\\n        var observables = this.observables;\\n        var len = observables.length;\\n        if (len === 0) {\\n            this.destination.complete();\\n        }\\n        else {\\n            this.active = len;\\n            this.toRespond = len;\\n            for (var i = 0; i < len; i++) {\\n                var observable = observables[i];\\n                this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[\\\"subscribeToResult\\\"])(this, observable, observable, i));\\n            }\\n        }\\n    };\\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\\n        if ((this.active -= 1) === 0) {\\n            this.destination.complete();\\n        }\\n    };\\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        var values = this.values;\\n        var oldVal = values[outerIndex];\\n        var toRespond = !this.toRespond\\n            ? 0\\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\\n        values[outerIndex] = innerValue;\\n        if (toRespond === 0) {\\n            if (this.resultSelector) {\\n                this._tryResultSelector(values);\\n            }\\n            else {\\n                this.destination.next(values.slice());\\n            }\\n        }\\n    };\\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\\n        var result;\\n        try {\\n            result = this.resultSelector.apply(this, values);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.destination.next(result);\\n    };\\n    return CombineLatestSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\n\\n//# sourceMappingURL=combineLatest.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/combineLatest.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/concat.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/concat.js ***!\n  \\***************************************************************/\n/*! exports provided: concat */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"concat\\\", function() { return concat; });\\n/* harmony import */ var _of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./of */ \\\"./node_modules/rxjs/_esm5/internal/observable/of.js\\\");\\n/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operators/concatAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/concatAll.js\\\");\\n/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */\\n\\n\\nfunction concat() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__[\\\"concatAll\\\"])()(_of__WEBPACK_IMPORTED_MODULE_0__[\\\"of\\\"].apply(void 0, observables));\\n}\\n//# sourceMappingURL=concat.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/concat.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/defer.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/defer.js ***!\n  \\**************************************************************/\n/*! exports provided: defer */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"defer\\\", function() { return defer; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\\n\\n\\n\\nfunction defer(observableFactory) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var input;\\n        try {\\n            input = observableFactory();\\n        }\\n        catch (err) {\\n            subscriber.error(err);\\n            return undefined;\\n        }\\n        var source = input ? Object(_from__WEBPACK_IMPORTED_MODULE_1__[\\\"from\\\"])(input) : Object(_empty__WEBPACK_IMPORTED_MODULE_2__[\\\"empty\\\"])();\\n        return source.subscribe(subscriber);\\n    });\\n}\\n//# sourceMappingURL=defer.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/defer.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/empty.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/empty.js ***!\n  \\**************************************************************/\n/*! exports provided: EMPTY, empty */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"EMPTY\\\", function() { return EMPTY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"empty\\\", function() { return empty; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\\n\\nvar EMPTY = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) { return subscriber.complete(); });\\nfunction empty(scheduler) {\\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\\n}\\nfunction emptyScheduled(scheduler) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\\n}\\n//# sourceMappingURL=empty.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/empty.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/forkJoin.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/forkJoin.js ***!\n  \\*****************************************************************/\n/*! exports provided: forkJoin */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"forkJoin\\\", function() { return forkJoin; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isObject */ \\\"./node_modules/rxjs/_esm5/internal/util/isObject.js\\\");\\n/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction forkJoin() {\\n    var sources = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        sources[_i] = arguments[_i];\\n    }\\n    if (sources.length === 1) {\\n        var first_1 = sources[0];\\n        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__[\\\"isArray\\\"])(first_1)) {\\n            return forkJoinInternal(first_1, null);\\n        }\\n        if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_3__[\\\"isObject\\\"])(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {\\n            var keys = Object.keys(first_1);\\n            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);\\n        }\\n    }\\n    if (typeof sources[sources.length - 1] === 'function') {\\n        var resultSelector_1 = sources.pop();\\n        sources = (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__[\\\"isArray\\\"])(sources[0])) ? sources[0] : sources;\\n        return forkJoinInternal(sources, null).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__[\\\"map\\\"])(function (args) { return resultSelector_1.apply(void 0, args); }));\\n    }\\n    return forkJoinInternal(sources, null);\\n}\\nfunction forkJoinInternal(sources, keys) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var len = sources.length;\\n        if (len === 0) {\\n            subscriber.complete();\\n            return;\\n        }\\n        var values = new Array(len);\\n        var completed = 0;\\n        var emitted = 0;\\n        var _loop_1 = function (i) {\\n            var source = Object(_from__WEBPACK_IMPORTED_MODULE_4__[\\\"from\\\"])(sources[i]);\\n            var hasValue = false;\\n            subscriber.add(source.subscribe({\\n                next: function (value) {\\n                    if (!hasValue) {\\n                        hasValue = true;\\n                        emitted++;\\n                    }\\n                    values[i] = value;\\n                },\\n                error: function (err) { return subscriber.error(err); },\\n                complete: function () {\\n                    completed++;\\n                    if (completed === len || !hasValue) {\\n                        if (emitted === len) {\\n                            subscriber.next(keys ?\\n                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :\\n                                values);\\n                        }\\n                        subscriber.complete();\\n                    }\\n                }\\n            }));\\n        };\\n        for (var i = 0; i < len; i++) {\\n            _loop_1(i);\\n        }\\n    });\\n}\\n//# sourceMappingURL=forkJoin.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/forkJoin.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/from.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/from.js ***!\n  \\*************************************************************/\n/*! exports provided: from */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"from\\\", function() { return from; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeTo.js\\\");\\n/* harmony import */ var _scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduled */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */\\n\\n\\n\\nfunction from(input, scheduler) {\\n    if (!scheduler) {\\n        if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"]) {\\n            return input;\\n        }\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeTo\\\"])(input));\\n    }\\n    else {\\n        return Object(_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__[\\\"scheduled\\\"])(input, scheduler);\\n    }\\n}\\n//# sourceMappingURL=from.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/from.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/fromArray.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/fromArray.js ***!\n  \\******************************************************************/\n/*! exports provided: fromArray */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromArray\\\", function() { return fromArray; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToArray */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js\\\");\\n/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\\n\\n\\n\\nfunction fromArray(input, scheduler) {\\n    if (!scheduler) {\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeToArray\\\"])(input));\\n    }\\n    else {\\n        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__[\\\"scheduleArray\\\"])(input, scheduler);\\n    }\\n}\\n//# sourceMappingURL=fromArray.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/fromArray.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/fromEvent.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/fromEvent.js ***!\n  \\******************************************************************/\n/*! exports provided: fromEvent */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromEvent\\\", function() { return fromEvent; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isFunction */ \\\"./node_modules/rxjs/_esm5/internal/util/isFunction.js\\\");\\n/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\\n\\n\\n\\n\\nvar toString = Object.prototype.toString;\\nfunction fromEvent(target, eventName, options, resultSelector) {\\n    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__[\\\"isFunction\\\"])(options)) {\\n        resultSelector = options;\\n        options = undefined;\\n    }\\n    if (resultSelector) {\\n        return fromEvent(target, eventName, options).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__[\\\"map\\\"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__[\\\"isArray\\\"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        function handler(e) {\\n            if (arguments.length > 1) {\\n                subscriber.next(Array.prototype.slice.call(arguments));\\n            }\\n            else {\\n                subscriber.next(e);\\n            }\\n        }\\n        setupSubscription(target, eventName, handler, subscriber, options);\\n    });\\n}\\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\\n    var unsubscribe;\\n    if (isEventTarget(sourceObj)) {\\n        var source_1 = sourceObj;\\n        sourceObj.addEventListener(eventName, handler, options);\\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\\n    }\\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\\n        var source_2 = sourceObj;\\n        sourceObj.on(eventName, handler);\\n        unsubscribe = function () { return source_2.off(eventName, handler); };\\n    }\\n    else if (isNodeStyleEventEmitter(sourceObj)) {\\n        var source_3 = sourceObj;\\n        sourceObj.addListener(eventName, handler);\\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\\n    }\\n    else if (sourceObj && sourceObj.length) {\\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\\n        }\\n    }\\n    else {\\n        throw new TypeError('Invalid event target');\\n    }\\n    subscriber.add(unsubscribe);\\n}\\nfunction isNodeStyleEventEmitter(sourceObj) {\\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\\n}\\nfunction isJQueryStyleEventEmitter(sourceObj) {\\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\\n}\\nfunction isEventTarget(sourceObj) {\\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\\n}\\n//# sourceMappingURL=fromEvent.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/fromEvent.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js ***!\n  \\*************************************************************************/\n/*! exports provided: fromEventPattern */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fromEventPattern\\\", function() { return fromEventPattern; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isFunction */ \\\"./node_modules/rxjs/_esm5/internal/util/isFunction.js\\\");\\n/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction fromEventPattern(addHandler, removeHandler, resultSelector) {\\n    if (resultSelector) {\\n        return fromEventPattern(addHandler, removeHandler).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__[\\\"map\\\"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__[\\\"isArray\\\"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var handler = function () {\\n            var e = [];\\n            for (var _i = 0; _i < arguments.length; _i++) {\\n                e[_i] = arguments[_i];\\n            }\\n            return subscriber.next(e.length === 1 ? e[0] : e);\\n        };\\n        var retValue;\\n        try {\\n            retValue = addHandler(handler);\\n        }\\n        catch (err) {\\n            subscriber.error(err);\\n            return undefined;\\n        }\\n        if (!Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__[\\\"isFunction\\\"])(removeHandler)) {\\n            return undefined;\\n        }\\n        return function () { return removeHandler(handler, retValue); };\\n    });\\n}\\n//# sourceMappingURL=fromEventPattern.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/generate.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/generate.js ***!\n  \\*****************************************************************/\n/*! exports provided: generate */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"generate\\\", function() { return generate; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ \\\"./node_modules/rxjs/_esm5/internal/util/identity.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\\n\\n\\n\\nfunction generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\\n    var resultSelector;\\n    var initialState;\\n    if (arguments.length == 1) {\\n        var options = initialStateOrOptions;\\n        initialState = options.initialState;\\n        condition = options.condition;\\n        iterate = options.iterate;\\n        resultSelector = options.resultSelector || _util_identity__WEBPACK_IMPORTED_MODULE_1__[\\\"identity\\\"];\\n        scheduler = options.scheduler;\\n    }\\n    else if (resultSelectorOrObservable === undefined || Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_2__[\\\"isScheduler\\\"])(resultSelectorOrObservable)) {\\n        initialState = initialStateOrOptions;\\n        resultSelector = _util_identity__WEBPACK_IMPORTED_MODULE_1__[\\\"identity\\\"];\\n        scheduler = resultSelectorOrObservable;\\n    }\\n    else {\\n        initialState = initialStateOrOptions;\\n        resultSelector = resultSelectorOrObservable;\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var state = initialState;\\n        if (scheduler) {\\n            return scheduler.schedule(dispatch, 0, {\\n                subscriber: subscriber,\\n                iterate: iterate,\\n                condition: condition,\\n                resultSelector: resultSelector,\\n                state: state\\n            });\\n        }\\n        do {\\n            if (condition) {\\n                var conditionResult = void 0;\\n                try {\\n                    conditionResult = condition(state);\\n                }\\n                catch (err) {\\n                    subscriber.error(err);\\n                    return undefined;\\n                }\\n                if (!conditionResult) {\\n                    subscriber.complete();\\n                    break;\\n                }\\n            }\\n            var value = void 0;\\n            try {\\n                value = resultSelector(state);\\n            }\\n            catch (err) {\\n                subscriber.error(err);\\n                return undefined;\\n            }\\n            subscriber.next(value);\\n            if (subscriber.closed) {\\n                break;\\n            }\\n            try {\\n                state = iterate(state);\\n            }\\n            catch (err) {\\n                subscriber.error(err);\\n                return undefined;\\n            }\\n        } while (true);\\n        return undefined;\\n    });\\n}\\nfunction dispatch(state) {\\n    var subscriber = state.subscriber, condition = state.condition;\\n    if (subscriber.closed) {\\n        return undefined;\\n    }\\n    if (state.needIterate) {\\n        try {\\n            state.state = state.iterate(state.state);\\n        }\\n        catch (err) {\\n            subscriber.error(err);\\n            return undefined;\\n        }\\n    }\\n    else {\\n        state.needIterate = true;\\n    }\\n    if (condition) {\\n        var conditionResult = void 0;\\n        try {\\n            conditionResult = condition(state.state);\\n        }\\n        catch (err) {\\n            subscriber.error(err);\\n            return undefined;\\n        }\\n        if (!conditionResult) {\\n            subscriber.complete();\\n            return undefined;\\n        }\\n        if (subscriber.closed) {\\n            return undefined;\\n        }\\n    }\\n    var value;\\n    try {\\n        value = state.resultSelector(state.state);\\n    }\\n    catch (err) {\\n        subscriber.error(err);\\n        return undefined;\\n    }\\n    if (subscriber.closed) {\\n        return undefined;\\n    }\\n    subscriber.next(value);\\n    if (subscriber.closed) {\\n        return undefined;\\n    }\\n    return this.schedule(state);\\n}\\n//# sourceMappingURL=generate.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/generate.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/iif.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/iif.js ***!\n  \\************************************************************/\n/*! exports provided: iif */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"iif\\\", function() { return iif; });\\n/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ \\\"./node_modules/rxjs/_esm5/internal/observable/defer.js\\\");\\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\\n\\n\\nfunction iif(condition, trueResult, falseResult) {\\n    if (trueResult === void 0) {\\n        trueResult = _empty__WEBPACK_IMPORTED_MODULE_1__[\\\"EMPTY\\\"];\\n    }\\n    if (falseResult === void 0) {\\n        falseResult = _empty__WEBPACK_IMPORTED_MODULE_1__[\\\"EMPTY\\\"];\\n    }\\n    return Object(_defer__WEBPACK_IMPORTED_MODULE_0__[\\\"defer\\\"])(function () { return condition() ? trueResult : falseResult; });\\n}\\n//# sourceMappingURL=iif.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/iif.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/interval.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/interval.js ***!\n  \\*****************************************************************/\n/*! exports provided: interval */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"interval\\\", function() { return interval; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ \\\"./node_modules/rxjs/_esm5/internal/util/isNumeric.js\\\");\\n/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\\n\\n\\n\\nfunction interval(period, scheduler) {\\n    if (period === void 0) {\\n        period = 0;\\n    }\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__[\\\"async\\\"];\\n    }\\n    if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__[\\\"isNumeric\\\"])(period) || period < 0) {\\n        period = 0;\\n    }\\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__[\\\"async\\\"];\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\\n        return subscriber;\\n    });\\n}\\nfunction dispatch(state) {\\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\\n    subscriber.next(counter);\\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\\n}\\n//# sourceMappingURL=interval.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/interval.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/merge.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/merge.js ***!\n  \\**************************************************************/\n/*! exports provided: merge */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"merge\\\", function() { return merge; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/mergeAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeAll.js\\\");\\n/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromArray */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromArray.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction merge() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    var concurrent = Number.POSITIVE_INFINITY;\\n    var scheduler = null;\\n    var last = observables[observables.length - 1];\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"isScheduler\\\"])(last)) {\\n        scheduler = observables.pop();\\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\\n            concurrent = observables.pop();\\n        }\\n    }\\n    else if (typeof last === 'number') {\\n        concurrent = observables.pop();\\n    }\\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"]) {\\n        return observables[0];\\n    }\\n    return Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__[\\\"mergeAll\\\"])(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__[\\\"fromArray\\\"])(observables, scheduler));\\n}\\n//# sourceMappingURL=merge.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/merge.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/never.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/never.js ***!\n  \\**************************************************************/\n/*! exports provided: NEVER, never */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"NEVER\\\", function() { return NEVER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"never\\\", function() { return never; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/noop */ \\\"./node_modules/rxjs/_esm5/internal/util/noop.js\\\");\\n/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\\n\\n\\nvar NEVER = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](_util_noop__WEBPACK_IMPORTED_MODULE_1__[\\\"noop\\\"]);\\nfunction never() {\\n    return NEVER;\\n}\\n//# sourceMappingURL=never.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/never.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/of.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/of.js ***!\n  \\***********************************************************/\n/*! exports provided: of */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"of\\\", function() { return of; });\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromArray.js\\\");\\n/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js\\\");\\n/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\\n\\n\\n\\nfunction of() {\\n    var args = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        args[_i] = arguments[_i];\\n    }\\n    var scheduler = args[args.length - 1];\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__[\\\"isScheduler\\\"])(scheduler)) {\\n        args.pop();\\n        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__[\\\"scheduleArray\\\"])(args, scheduler);\\n    }\\n    else {\\n        return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__[\\\"fromArray\\\"])(args);\\n    }\\n}\\n//# sourceMappingURL=of.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/of.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js ***!\n  \\**************************************************************************/\n/*! exports provided: onErrorResumeNext */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"onErrorResumeNext\\\", function() { return onErrorResumeNext; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction onErrorResumeNext() {\\n    var sources = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        sources[_i] = arguments[_i];\\n    }\\n    if (sources.length === 0) {\\n        return _empty__WEBPACK_IMPORTED_MODULE_3__[\\\"EMPTY\\\"];\\n    }\\n    var first = sources[0], remainder = sources.slice(1);\\n    if (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(first)) {\\n        return onErrorResumeNext.apply(void 0, first);\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\\n        return Object(_from__WEBPACK_IMPORTED_MODULE_1__[\\\"from\\\"])(first).subscribe({\\n            next: function (value) { subscriber.next(value); },\\n            error: subNext,\\n            complete: subNext,\\n        });\\n    });\\n}\\n//# sourceMappingURL=onErrorResumeNext.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/pairs.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/pairs.js ***!\n  \\**************************************************************/\n/*! exports provided: pairs, dispatch */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pairs\\\", function() { return pairs; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dispatch\\\", function() { return dispatch; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\\n\\n\\nfunction pairs(obj, scheduler) {\\n    if (!scheduler) {\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n            var keys = Object.keys(obj);\\n            for (var i = 0; i < keys.length && !subscriber.closed; i++) {\\n                var key = keys[i];\\n                if (obj.hasOwnProperty(key)) {\\n                    subscriber.next([key, obj[key]]);\\n                }\\n            }\\n            subscriber.complete();\\n        });\\n    }\\n    else {\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n            var keys = Object.keys(obj);\\n            var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));\\n            return subscription;\\n        });\\n    }\\n}\\nfunction dispatch(state) {\\n    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;\\n    if (!subscriber.closed) {\\n        if (index < keys.length) {\\n            var key = keys[index];\\n            subscriber.next([key, obj[key]]);\\n            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));\\n        }\\n        else {\\n            subscriber.complete();\\n        }\\n    }\\n}\\n//# sourceMappingURL=pairs.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/pairs.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/partition.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/partition.js ***!\n  \\******************************************************************/\n/*! exports provided: partition */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"partition\\\", function() { return partition; });\\n/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ \\\"./node_modules/rxjs/_esm5/internal/util/not.js\\\");\\n/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeTo.js\\\");\\n/* harmony import */ var _operators_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/filter */ \\\"./node_modules/rxjs/_esm5/internal/operators/filter.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction partition(source, predicate, thisArg) {\\n    return [\\n        Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__[\\\"filter\\\"])(predicate, thisArg)(new _Observable__WEBPACK_IMPORTED_MODULE_3__[\\\"Observable\\\"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeTo\\\"])(source))),\\n        Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__[\\\"filter\\\"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__[\\\"not\\\"])(predicate, thisArg))(new _Observable__WEBPACK_IMPORTED_MODULE_3__[\\\"Observable\\\"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeTo\\\"])(source)))\\n    ];\\n}\\n//# sourceMappingURL=partition.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/partition.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/race.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/race.js ***!\n  \\*************************************************************/\n/*! exports provided: race, RaceOperator, RaceSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"race\\\", function() { return race; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"RaceOperator\\\", function() { return RaceOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"RaceSubscriber\\\", function() { return RaceSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromArray */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromArray.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction race() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    if (observables.length === 1) {\\n        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__[\\\"isArray\\\"])(observables[0])) {\\n            observables = observables[0];\\n        }\\n        else {\\n            return observables[0];\\n        }\\n    }\\n    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_2__[\\\"fromArray\\\"])(observables, undefined).lift(new RaceOperator());\\n}\\nvar RaceOperator = /*@__PURE__*/ (function () {\\n    function RaceOperator() {\\n    }\\n    RaceOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new RaceSubscriber(subscriber));\\n    };\\n    return RaceOperator;\\n}());\\n\\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RaceSubscriber, _super);\\n    function RaceSubscriber(destination) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.hasFirst = false;\\n        _this.observables = [];\\n        _this.subscriptions = [];\\n        return _this;\\n    }\\n    RaceSubscriber.prototype._next = function (observable) {\\n        this.observables.push(observable);\\n    };\\n    RaceSubscriber.prototype._complete = function () {\\n        var observables = this.observables;\\n        var len = observables.length;\\n        if (len === 0) {\\n            this.destination.complete();\\n        }\\n        else {\\n            for (var i = 0; i < len && !this.hasFirst; i++) {\\n                var observable = observables[i];\\n                var subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[\\\"subscribeToResult\\\"])(this, observable, observable, i);\\n                if (this.subscriptions) {\\n                    this.subscriptions.push(subscription);\\n                }\\n                this.add(subscription);\\n            }\\n            this.observables = null;\\n        }\\n    };\\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        if (!this.hasFirst) {\\n            this.hasFirst = true;\\n            for (var i = 0; i < this.subscriptions.length; i++) {\\n                if (i !== outerIndex) {\\n                    var subscription = this.subscriptions[i];\\n                    subscription.unsubscribe();\\n                    this.remove(subscription);\\n                }\\n            }\\n            this.subscriptions = null;\\n        }\\n        this.destination.next(innerValue);\\n    };\\n    return RaceSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\n\\n//# sourceMappingURL=race.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/race.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/range.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/range.js ***!\n  \\**************************************************************/\n/*! exports provided: range, dispatch */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"range\\\", function() { return range; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dispatch\\\", function() { return dispatch; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\\n\\nfunction range(start, count, scheduler) {\\n    if (start === void 0) {\\n        start = 0;\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        if (count === undefined) {\\n            count = start;\\n            start = 0;\\n        }\\n        var index = 0;\\n        var current = start;\\n        if (scheduler) {\\n            return scheduler.schedule(dispatch, 0, {\\n                index: index, count: count, start: start, subscriber: subscriber\\n            });\\n        }\\n        else {\\n            do {\\n                if (index++ >= count) {\\n                    subscriber.complete();\\n                    break;\\n                }\\n                subscriber.next(current++);\\n                if (subscriber.closed) {\\n                    break;\\n                }\\n            } while (true);\\n        }\\n        return undefined;\\n    });\\n}\\nfunction dispatch(state) {\\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\\n    if (index >= count) {\\n        subscriber.complete();\\n        return;\\n    }\\n    subscriber.next(start);\\n    if (subscriber.closed) {\\n        return;\\n    }\\n    state.index = index + 1;\\n    state.start = start + 1;\\n    this.schedule(state);\\n}\\n//# sourceMappingURL=range.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/range.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/throwError.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/throwError.js ***!\n  \\*******************************************************************/\n/*! exports provided: throwError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"throwError\\\", function() { return throwError; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\\n\\nfunction throwError(error, scheduler) {\\n    if (!scheduler) {\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) { return subscriber.error(error); });\\n    }\\n    else {\\n        return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\\n    }\\n}\\nfunction dispatch(_a) {\\n    var error = _a.error, subscriber = _a.subscriber;\\n    subscriber.error(error);\\n}\\n//# sourceMappingURL=throwError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/throwError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/timer.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/timer.js ***!\n  \\**************************************************************/\n/*! exports provided: timer */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"timer\\\", function() { return timer; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ \\\"./node_modules/rxjs/_esm5/internal/util/isNumeric.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction timer(dueTime, periodOrScheduler, scheduler) {\\n    if (dueTime === void 0) {\\n        dueTime = 0;\\n    }\\n    var period = -1;\\n    if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__[\\\"isNumeric\\\"])(periodOrScheduler)) {\\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\\n    }\\n    else if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__[\\\"isScheduler\\\"])(periodOrScheduler)) {\\n        scheduler = periodOrScheduler;\\n    }\\n    if (!Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__[\\\"isScheduler\\\"])(scheduler)) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__[\\\"async\\\"];\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var due = Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__[\\\"isNumeric\\\"])(dueTime)\\n            ? dueTime\\n            : (+dueTime - scheduler.now());\\n        return scheduler.schedule(dispatch, due, {\\n            index: 0, period: period, subscriber: subscriber\\n        });\\n    });\\n}\\nfunction dispatch(state) {\\n    var index = state.index, period = state.period, subscriber = state.subscriber;\\n    subscriber.next(index);\\n    if (subscriber.closed) {\\n        return;\\n    }\\n    else if (period === -1) {\\n        return subscriber.complete();\\n    }\\n    state.index = index + 1;\\n    this.schedule(state, period);\\n}\\n//# sourceMappingURL=timer.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/timer.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/using.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/using.js ***!\n  \\**************************************************************/\n/*! exports provided: using */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"using\\\", function() { return using; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\\n\\n\\n\\nfunction using(resourceFactory, observableFactory) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var resource;\\n        try {\\n            resource = resourceFactory();\\n        }\\n        catch (err) {\\n            subscriber.error(err);\\n            return undefined;\\n        }\\n        var result;\\n        try {\\n            result = observableFactory(resource);\\n        }\\n        catch (err) {\\n            subscriber.error(err);\\n            return undefined;\\n        }\\n        var source = result ? Object(_from__WEBPACK_IMPORTED_MODULE_1__[\\\"from\\\"])(result) : _empty__WEBPACK_IMPORTED_MODULE_2__[\\\"EMPTY\\\"];\\n        var subscription = source.subscribe(subscriber);\\n        return function () {\\n            subscription.unsubscribe();\\n            if (resource) {\\n                resource.unsubscribe();\\n            }\\n        };\\n    });\\n}\\n//# sourceMappingURL=using.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/using.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/observable/zip.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/observable/zip.js ***!\n  \\************************************************************/\n/*! exports provided: zip, ZipOperator, ZipSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"zip\\\", function() { return zip; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ZipOperator\\\", function() { return ZipOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ZipSubscriber\\\", function() { return ZipSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ \\\"./node_modules/rxjs/_esm5/internal/observable/fromArray.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../internal/symbol/iterator */ \\\"./node_modules/rxjs/_esm5/internal/symbol/iterator.js\\\");\\n/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\nfunction zip() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    var resultSelector = observables[observables.length - 1];\\n    if (typeof resultSelector === 'function') {\\n        observables.pop();\\n    }\\n    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__[\\\"fromArray\\\"])(observables, undefined).lift(new ZipOperator(resultSelector));\\n}\\nvar ZipOperator = /*@__PURE__*/ (function () {\\n    function ZipOperator(resultSelector) {\\n        this.resultSelector = resultSelector;\\n    }\\n    ZipOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\\n    };\\n    return ZipOperator;\\n}());\\n\\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ZipSubscriber, _super);\\n    function ZipSubscriber(destination, resultSelector, values) {\\n        if (values === void 0) {\\n            values = Object.create(null);\\n        }\\n        var _this = _super.call(this, destination) || this;\\n        _this.iterators = [];\\n        _this.active = 0;\\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\\n        _this.values = values;\\n        return _this;\\n    }\\n    ZipSubscriber.prototype._next = function (value) {\\n        var iterators = this.iterators;\\n        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(value)) {\\n            iterators.push(new StaticArrayIterator(value));\\n        }\\n        else if (typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__[\\\"iterator\\\"]] === 'function') {\\n            iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__[\\\"iterator\\\"]]()));\\n        }\\n        else {\\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\\n        }\\n    };\\n    ZipSubscriber.prototype._complete = function () {\\n        var iterators = this.iterators;\\n        var len = iterators.length;\\n        this.unsubscribe();\\n        if (len === 0) {\\n            this.destination.complete();\\n            return;\\n        }\\n        this.active = len;\\n        for (var i = 0; i < len; i++) {\\n            var iterator = iterators[i];\\n            if (iterator.stillUnsubscribed) {\\n                var destination = this.destination;\\n                destination.add(iterator.subscribe(iterator, i));\\n            }\\n            else {\\n                this.active--;\\n            }\\n        }\\n    };\\n    ZipSubscriber.prototype.notifyInactive = function () {\\n        this.active--;\\n        if (this.active === 0) {\\n            this.destination.complete();\\n        }\\n    };\\n    ZipSubscriber.prototype.checkIterators = function () {\\n        var iterators = this.iterators;\\n        var len = iterators.length;\\n        var destination = this.destination;\\n        for (var i = 0; i < len; i++) {\\n            var iterator = iterators[i];\\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\\n                return;\\n            }\\n        }\\n        var shouldComplete = false;\\n        var args = [];\\n        for (var i = 0; i < len; i++) {\\n            var iterator = iterators[i];\\n            var result = iterator.next();\\n            if (iterator.hasCompleted()) {\\n                shouldComplete = true;\\n            }\\n            if (result.done) {\\n                destination.complete();\\n                return;\\n            }\\n            args.push(result.value);\\n        }\\n        if (this.resultSelector) {\\n            this._tryresultSelector(args);\\n        }\\n        else {\\n            destination.next(args);\\n        }\\n        if (shouldComplete) {\\n            destination.complete();\\n        }\\n    };\\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\\n        var result;\\n        try {\\n            result = this.resultSelector.apply(this, args);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.destination.next(result);\\n    };\\n    return ZipSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscriber\\\"]));\\n\\nvar StaticIterator = /*@__PURE__*/ (function () {\\n    function StaticIterator(iterator) {\\n        this.iterator = iterator;\\n        this.nextResult = iterator.next();\\n    }\\n    StaticIterator.prototype.hasValue = function () {\\n        return true;\\n    };\\n    StaticIterator.prototype.next = function () {\\n        var result = this.nextResult;\\n        this.nextResult = this.iterator.next();\\n        return result;\\n    };\\n    StaticIterator.prototype.hasCompleted = function () {\\n        var nextResult = this.nextResult;\\n        return nextResult && nextResult.done;\\n    };\\n    return StaticIterator;\\n}());\\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\\n    function StaticArrayIterator(array) {\\n        this.array = array;\\n        this.index = 0;\\n        this.length = 0;\\n        this.length = array.length;\\n    }\\n    StaticArrayIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__[\\\"iterator\\\"]] = function () {\\n        return this;\\n    };\\n    StaticArrayIterator.prototype.next = function (value) {\\n        var i = this.index++;\\n        var array = this.array;\\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\\n    };\\n    StaticArrayIterator.prototype.hasValue = function () {\\n        return this.array.length > this.index;\\n    };\\n    StaticArrayIterator.prototype.hasCompleted = function () {\\n        return this.array.length === this.index;\\n    };\\n    return StaticArrayIterator;\\n}());\\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ZipBufferIterator, _super);\\n    function ZipBufferIterator(destination, parent, observable) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.parent = parent;\\n        _this.observable = observable;\\n        _this.stillUnsubscribed = true;\\n        _this.buffer = [];\\n        _this.isComplete = false;\\n        return _this;\\n    }\\n    ZipBufferIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__[\\\"iterator\\\"]] = function () {\\n        return this;\\n    };\\n    ZipBufferIterator.prototype.next = function () {\\n        var buffer = this.buffer;\\n        if (buffer.length === 0 && this.isComplete) {\\n            return { value: null, done: true };\\n        }\\n        else {\\n            return { value: buffer.shift(), done: false };\\n        }\\n    };\\n    ZipBufferIterator.prototype.hasValue = function () {\\n        return this.buffer.length > 0;\\n    };\\n    ZipBufferIterator.prototype.hasCompleted = function () {\\n        return this.buffer.length === 0 && this.isComplete;\\n    };\\n    ZipBufferIterator.prototype.notifyComplete = function () {\\n        if (this.buffer.length > 0) {\\n            this.isComplete = true;\\n            this.parent.notifyInactive();\\n        }\\n        else {\\n            this.destination.complete();\\n        }\\n    };\\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.buffer.push(innerValue);\\n        this.parent.checkIterators();\\n    };\\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\\n        return Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__[\\\"subscribeToResult\\\"])(this, this.observable, this, index);\\n    };\\n    return ZipBufferIterator;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=zip.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/observable/zip.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/audit.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/audit.js ***!\n  \\*************************************************************/\n/*! exports provided: audit */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"audit\\\", function() { return audit; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction audit(durationSelector) {\\n    return function auditOperatorFunction(source) {\\n        return source.lift(new AuditOperator(durationSelector));\\n    };\\n}\\nvar AuditOperator = /*@__PURE__*/ (function () {\\n    function AuditOperator(durationSelector) {\\n        this.durationSelector = durationSelector;\\n    }\\n    AuditOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\\n    };\\n    return AuditOperator;\\n}());\\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AuditSubscriber, _super);\\n    function AuditSubscriber(destination, durationSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.durationSelector = durationSelector;\\n        _this.hasValue = false;\\n        return _this;\\n    }\\n    AuditSubscriber.prototype._next = function (value) {\\n        this.value = value;\\n        this.hasValue = true;\\n        if (!this.throttled) {\\n            var duration = void 0;\\n            try {\\n                var durationSelector = this.durationSelector;\\n                duration = durationSelector(value);\\n            }\\n            catch (err) {\\n                return this.destination.error(err);\\n            }\\n            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(this, duration);\\n            if (!innerSubscription || innerSubscription.closed) {\\n                this.clearThrottle();\\n            }\\n            else {\\n                this.add(this.throttled = innerSubscription);\\n            }\\n        }\\n    };\\n    AuditSubscriber.prototype.clearThrottle = function () {\\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\\n        if (throttled) {\\n            this.remove(throttled);\\n            this.throttled = null;\\n            throttled.unsubscribe();\\n        }\\n        if (hasValue) {\\n            this.value = null;\\n            this.hasValue = false;\\n            this.destination.next(value);\\n        }\\n    };\\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\\n        this.clearThrottle();\\n    };\\n    AuditSubscriber.prototype.notifyComplete = function () {\\n        this.clearThrottle();\\n    };\\n    return AuditSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=audit.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/audit.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/auditTime.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/auditTime.js ***!\n  \\*****************************************************************/\n/*! exports provided: auditTime */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"auditTime\\\", function() { return auditTime; });\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _audit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audit */ \\\"./node_modules/rxjs/_esm5/internal/operators/audit.js\\\");\\n/* harmony import */ var _observable_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/timer */ \\\"./node_modules/rxjs/_esm5/internal/observable/timer.js\\\");\\n/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\\n\\n\\n\\nfunction auditTime(duration, scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__[\\\"async\\\"];\\n    }\\n    return Object(_audit__WEBPACK_IMPORTED_MODULE_1__[\\\"audit\\\"])(function () { return Object(_observable_timer__WEBPACK_IMPORTED_MODULE_2__[\\\"timer\\\"])(duration, scheduler); });\\n}\\n//# sourceMappingURL=auditTime.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/auditTime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/buffer.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/buffer.js ***!\n  \\**************************************************************/\n/*! exports provided: buffer */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"buffer\\\", function() { return buffer; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction buffer(closingNotifier) {\\n    return function bufferOperatorFunction(source) {\\n        return source.lift(new BufferOperator(closingNotifier));\\n    };\\n}\\nvar BufferOperator = /*@__PURE__*/ (function () {\\n    function BufferOperator(closingNotifier) {\\n        this.closingNotifier = closingNotifier;\\n    }\\n    BufferOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\\n    };\\n    return BufferOperator;\\n}());\\nvar BufferSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BufferSubscriber, _super);\\n    function BufferSubscriber(destination, closingNotifier) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.buffer = [];\\n        _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(_this, closingNotifier));\\n        return _this;\\n    }\\n    BufferSubscriber.prototype._next = function (value) {\\n        this.buffer.push(value);\\n    };\\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        var buffer = this.buffer;\\n        this.buffer = [];\\n        this.destination.next(buffer);\\n    };\\n    return BufferSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=buffer.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/buffer.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/bufferCount.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferCount.js ***!\n  \\*******************************************************************/\n/*! exports provided: bufferCount */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bufferCount\\\", function() { return bufferCount; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction bufferCount(bufferSize, startBufferEvery) {\\n    if (startBufferEvery === void 0) {\\n        startBufferEvery = null;\\n    }\\n    return function bufferCountOperatorFunction(source) {\\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\\n    };\\n}\\nvar BufferCountOperator = /*@__PURE__*/ (function () {\\n    function BufferCountOperator(bufferSize, startBufferEvery) {\\n        this.bufferSize = bufferSize;\\n        this.startBufferEvery = startBufferEvery;\\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\\n            this.subscriberClass = BufferCountSubscriber;\\n        }\\n        else {\\n            this.subscriberClass = BufferSkipCountSubscriber;\\n        }\\n    }\\n    BufferCountOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\\n    };\\n    return BufferCountOperator;\\n}());\\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BufferCountSubscriber, _super);\\n    function BufferCountSubscriber(destination, bufferSize) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.bufferSize = bufferSize;\\n        _this.buffer = [];\\n        return _this;\\n    }\\n    BufferCountSubscriber.prototype._next = function (value) {\\n        var buffer = this.buffer;\\n        buffer.push(value);\\n        if (buffer.length == this.bufferSize) {\\n            this.destination.next(buffer);\\n            this.buffer = [];\\n        }\\n    };\\n    BufferCountSubscriber.prototype._complete = function () {\\n        var buffer = this.buffer;\\n        if (buffer.length > 0) {\\n            this.destination.next(buffer);\\n        }\\n        _super.prototype._complete.call(this);\\n    };\\n    return BufferCountSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BufferSkipCountSubscriber, _super);\\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.bufferSize = bufferSize;\\n        _this.startBufferEvery = startBufferEvery;\\n        _this.buffers = [];\\n        _this.count = 0;\\n        return _this;\\n    }\\n    BufferSkipCountSubscriber.prototype._next = function (value) {\\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\\n        this.count++;\\n        if (count % startBufferEvery === 0) {\\n            buffers.push([]);\\n        }\\n        for (var i = buffers.length; i--;) {\\n            var buffer = buffers[i];\\n            buffer.push(value);\\n            if (buffer.length === bufferSize) {\\n                buffers.splice(i, 1);\\n                this.destination.next(buffer);\\n            }\\n        }\\n    };\\n    BufferSkipCountSubscriber.prototype._complete = function () {\\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\\n        while (buffers.length > 0) {\\n            var buffer = buffers.shift();\\n            if (buffer.length > 0) {\\n                destination.next(buffer);\\n            }\\n        }\\n        _super.prototype._complete.call(this);\\n    };\\n    return BufferSkipCountSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=bufferCount.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/bufferCount.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/bufferTime.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferTime.js ***!\n  \\******************************************************************/\n/*! exports provided: bufferTime */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bufferTime\\\", function() { return bufferTime; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction bufferTime(bufferTimeSpan) {\\n    var length = arguments.length;\\n    var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__[\\\"async\\\"];\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__[\\\"isScheduler\\\"])(arguments[arguments.length - 1])) {\\n        scheduler = arguments[arguments.length - 1];\\n        length--;\\n    }\\n    var bufferCreationInterval = null;\\n    if (length >= 2) {\\n        bufferCreationInterval = arguments[1];\\n    }\\n    var maxBufferSize = Number.POSITIVE_INFINITY;\\n    if (length >= 3) {\\n        maxBufferSize = arguments[2];\\n    }\\n    return function bufferTimeOperatorFunction(source) {\\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\\n    };\\n}\\nvar BufferTimeOperator = /*@__PURE__*/ (function () {\\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\\n        this.bufferTimeSpan = bufferTimeSpan;\\n        this.bufferCreationInterval = bufferCreationInterval;\\n        this.maxBufferSize = maxBufferSize;\\n        this.scheduler = scheduler;\\n    }\\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\\n    };\\n    return BufferTimeOperator;\\n}());\\nvar Context = /*@__PURE__*/ (function () {\\n    function Context() {\\n        this.buffer = [];\\n    }\\n    return Context;\\n}());\\nvar BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BufferTimeSubscriber, _super);\\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.bufferTimeSpan = bufferTimeSpan;\\n        _this.bufferCreationInterval = bufferCreationInterval;\\n        _this.maxBufferSize = maxBufferSize;\\n        _this.scheduler = scheduler;\\n        _this.contexts = [];\\n        var context = _this.openContext();\\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\\n        if (_this.timespanOnly) {\\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\\n        }\\n        else {\\n            var closeState = { subscriber: _this, context: context };\\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\\n        }\\n        return _this;\\n    }\\n    BufferTimeSubscriber.prototype._next = function (value) {\\n        var contexts = this.contexts;\\n        var len = contexts.length;\\n        var filledBufferContext;\\n        for (var i = 0; i < len; i++) {\\n            var context_1 = contexts[i];\\n            var buffer = context_1.buffer;\\n            buffer.push(value);\\n            if (buffer.length == this.maxBufferSize) {\\n                filledBufferContext = context_1;\\n            }\\n        }\\n        if (filledBufferContext) {\\n            this.onBufferFull(filledBufferContext);\\n        }\\n    };\\n    BufferTimeSubscriber.prototype._error = function (err) {\\n        this.contexts.length = 0;\\n        _super.prototype._error.call(this, err);\\n    };\\n    BufferTimeSubscriber.prototype._complete = function () {\\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\\n        while (contexts.length > 0) {\\n            var context_2 = contexts.shift();\\n            destination.next(context_2.buffer);\\n        }\\n        _super.prototype._complete.call(this);\\n    };\\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\\n        this.contexts = null;\\n    };\\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\\n        this.closeContext(context);\\n        var closeAction = context.closeAction;\\n        closeAction.unsubscribe();\\n        this.remove(closeAction);\\n        if (!this.closed && this.timespanOnly) {\\n            context = this.openContext();\\n            var bufferTimeSpan = this.bufferTimeSpan;\\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\\n        }\\n    };\\n    BufferTimeSubscriber.prototype.openContext = function () {\\n        var context = new Context();\\n        this.contexts.push(context);\\n        return context;\\n    };\\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\\n        this.destination.next(context.buffer);\\n        var contexts = this.contexts;\\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\\n        if (spliceIndex >= 0) {\\n            contexts.splice(contexts.indexOf(context), 1);\\n        }\\n    };\\n    return BufferTimeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscriber\\\"]));\\nfunction dispatchBufferTimeSpanOnly(state) {\\n    var subscriber = state.subscriber;\\n    var prevContext = state.context;\\n    if (prevContext) {\\n        subscriber.closeContext(prevContext);\\n    }\\n    if (!subscriber.closed) {\\n        state.context = subscriber.openContext();\\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\\n    }\\n}\\nfunction dispatchBufferCreation(state) {\\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\\n    var context = subscriber.openContext();\\n    var action = this;\\n    if (!subscriber.closed) {\\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\\n        action.schedule(state, bufferCreationInterval);\\n    }\\n}\\nfunction dispatchBufferClose(arg) {\\n    var subscriber = arg.subscriber, context = arg.context;\\n    subscriber.closeContext(context);\\n}\\n//# sourceMappingURL=bufferTime.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/bufferTime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js ***!\n  \\********************************************************************/\n/*! exports provided: bufferToggle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bufferToggle\\\", function() { return bufferToggle; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction bufferToggle(openings, closingSelector) {\\n    return function bufferToggleOperatorFunction(source) {\\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\\n    };\\n}\\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\\n    function BufferToggleOperator(openings, closingSelector) {\\n        this.openings = openings;\\n        this.closingSelector = closingSelector;\\n    }\\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\\n    };\\n    return BufferToggleOperator;\\n}());\\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BufferToggleSubscriber, _super);\\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.openings = openings;\\n        _this.closingSelector = closingSelector;\\n        _this.contexts = [];\\n        _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(_this, openings));\\n        return _this;\\n    }\\n    BufferToggleSubscriber.prototype._next = function (value) {\\n        var contexts = this.contexts;\\n        var len = contexts.length;\\n        for (var i = 0; i < len; i++) {\\n            contexts[i].buffer.push(value);\\n        }\\n    };\\n    BufferToggleSubscriber.prototype._error = function (err) {\\n        var contexts = this.contexts;\\n        while (contexts.length > 0) {\\n            var context_1 = contexts.shift();\\n            context_1.subscription.unsubscribe();\\n            context_1.buffer = null;\\n            context_1.subscription = null;\\n        }\\n        this.contexts = null;\\n        _super.prototype._error.call(this, err);\\n    };\\n    BufferToggleSubscriber.prototype._complete = function () {\\n        var contexts = this.contexts;\\n        while (contexts.length > 0) {\\n            var context_2 = contexts.shift();\\n            this.destination.next(context_2.buffer);\\n            context_2.subscription.unsubscribe();\\n            context_2.buffer = null;\\n            context_2.subscription = null;\\n        }\\n        this.contexts = null;\\n        _super.prototype._complete.call(this);\\n    };\\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\\n    };\\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\\n        this.closeBuffer(innerSub.context);\\n    };\\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\\n        try {\\n            var closingSelector = this.closingSelector;\\n            var closingNotifier = closingSelector.call(this, value);\\n            if (closingNotifier) {\\n                this.trySubscribe(closingNotifier);\\n            }\\n        }\\n        catch (err) {\\n            this._error(err);\\n        }\\n    };\\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\\n        var contexts = this.contexts;\\n        if (contexts && context) {\\n            var buffer = context.buffer, subscription = context.subscription;\\n            this.destination.next(buffer);\\n            contexts.splice(contexts.indexOf(context), 1);\\n            this.remove(subscription);\\n            subscription.unsubscribe();\\n        }\\n    };\\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\\n        var contexts = this.contexts;\\n        var buffer = [];\\n        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n        var context = { buffer: buffer, subscription: subscription };\\n        contexts.push(context);\\n        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(this, closingNotifier, context);\\n        if (!innerSubscription || innerSubscription.closed) {\\n            this.closeBuffer(context);\\n        }\\n        else {\\n            innerSubscription.context = context;\\n            this.add(innerSubscription);\\n            subscription.add(innerSubscription);\\n        }\\n    };\\n    return BufferToggleSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=bufferToggle.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js ***!\n  \\******************************************************************/\n/*! exports provided: bufferWhen */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bufferWhen\\\", function() { return bufferWhen; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction bufferWhen(closingSelector) {\\n    return function (source) {\\n        return source.lift(new BufferWhenOperator(closingSelector));\\n    };\\n}\\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\\n    function BufferWhenOperator(closingSelector) {\\n        this.closingSelector = closingSelector;\\n    }\\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\\n    };\\n    return BufferWhenOperator;\\n}());\\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](BufferWhenSubscriber, _super);\\n    function BufferWhenSubscriber(destination, closingSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.closingSelector = closingSelector;\\n        _this.subscribing = false;\\n        _this.openBuffer();\\n        return _this;\\n    }\\n    BufferWhenSubscriber.prototype._next = function (value) {\\n        this.buffer.push(value);\\n    };\\n    BufferWhenSubscriber.prototype._complete = function () {\\n        var buffer = this.buffer;\\n        if (buffer) {\\n            this.destination.next(buffer);\\n        }\\n        _super.prototype._complete.call(this);\\n    };\\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\\n        this.buffer = null;\\n        this.subscribing = false;\\n    };\\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.openBuffer();\\n    };\\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\\n        if (this.subscribing) {\\n            this.complete();\\n        }\\n        else {\\n            this.openBuffer();\\n        }\\n    };\\n    BufferWhenSubscriber.prototype.openBuffer = function () {\\n        var closingSubscription = this.closingSubscription;\\n        if (closingSubscription) {\\n            this.remove(closingSubscription);\\n            closingSubscription.unsubscribe();\\n        }\\n        var buffer = this.buffer;\\n        if (this.buffer) {\\n            this.destination.next(buffer);\\n        }\\n        this.buffer = [];\\n        var closingNotifier;\\n        try {\\n            var closingSelector = this.closingSelector;\\n            closingNotifier = closingSelector();\\n        }\\n        catch (err) {\\n            return this.error(err);\\n        }\\n        closingSubscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n        this.closingSubscription = closingSubscription;\\n        this.add(closingSubscription);\\n        this.subscribing = true;\\n        closingSubscription.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, closingNotifier));\\n        this.subscribing = false;\\n    };\\n    return BufferWhenSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=bufferWhen.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/catchError.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/catchError.js ***!\n  \\******************************************************************/\n/*! exports provided: catchError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"catchError\\\", function() { return catchError; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction catchError(selector) {\\n    return function catchErrorOperatorFunction(source) {\\n        var operator = new CatchOperator(selector);\\n        var caught = source.lift(operator);\\n        return (operator.caught = caught);\\n    };\\n}\\nvar CatchOperator = /*@__PURE__*/ (function () {\\n    function CatchOperator(selector) {\\n        this.selector = selector;\\n    }\\n    CatchOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\\n    };\\n    return CatchOperator;\\n}());\\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](CatchSubscriber, _super);\\n    function CatchSubscriber(destination, selector, caught) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.selector = selector;\\n        _this.caught = caught;\\n        return _this;\\n    }\\n    CatchSubscriber.prototype.error = function (err) {\\n        if (!this.isStopped) {\\n            var result = void 0;\\n            try {\\n                result = this.selector(err, this.caught);\\n            }\\n            catch (err2) {\\n                _super.prototype.error.call(this, err2);\\n                return;\\n            }\\n            this._unsubscribeAndRecycle();\\n            var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"InnerSubscriber\\\"](this, undefined, undefined);\\n            this.add(innerSubscriber);\\n            Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, result, undefined, undefined, innerSubscriber);\\n        }\\n    };\\n    return CatchSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=catchError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/catchError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/combineAll.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/combineAll.js ***!\n  \\******************************************************************/\n/*! exports provided: combineAll */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"combineAll\\\", function() { return combineAll; });\\n/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/combineLatest */ \\\"./node_modules/rxjs/_esm5/internal/observable/combineLatest.js\\\");\\n/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */\\n\\nfunction combineAll(project) {\\n    return function (source) { return source.lift(new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__[\\\"CombineLatestOperator\\\"](project)); };\\n}\\n//# sourceMappingURL=combineAll.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/combineAll.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/combineLatest.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/combineLatest.js ***!\n  \\*********************************************************************/\n/*! exports provided: combineLatest */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"combineLatest\\\", function() { return combineLatest; });\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/combineLatest */ \\\"./node_modules/rxjs/_esm5/internal/observable/combineLatest.js\\\");\\n/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\\n\\n\\n\\nvar none = {};\\nfunction combineLatest() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    var project = null;\\n    if (typeof observables[observables.length - 1] === 'function') {\\n        project = observables.pop();\\n    }\\n    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__[\\\"isArray\\\"])(observables[0])) {\\n        observables = observables[0].slice();\\n    }\\n    return function (source) { return source.lift.call(Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__[\\\"from\\\"])([source].concat(observables)), new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__[\\\"CombineLatestOperator\\\"](project)); };\\n}\\n//# sourceMappingURL=combineLatest.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/combineLatest.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/concat.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/concat.js ***!\n  \\**************************************************************/\n/*! exports provided: concat */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"concat\\\", function() { return concat; });\\n/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ \\\"./node_modules/rxjs/_esm5/internal/observable/concat.js\\\");\\n/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\\n\\nfunction concat() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    return function (source) { return source.lift.call(_observable_concat__WEBPACK_IMPORTED_MODULE_0__[\\\"concat\\\"].apply(void 0, [source].concat(observables))); };\\n}\\n//# sourceMappingURL=concat.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/concat.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/concatAll.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/concatAll.js ***!\n  \\*****************************************************************/\n/*! exports provided: concatAll */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"concatAll\\\", function() { return concatAll; });\\n/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeAll.js\\\");\\n/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\\n\\nfunction concatAll() {\\n    return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__[\\\"mergeAll\\\"])(1);\\n}\\n//# sourceMappingURL=concatAll.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/concatAll.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/concatMap.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/concatMap.js ***!\n  \\*****************************************************************/\n/*! exports provided: concatMap */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"concatMap\\\", function() { return concatMap; });\\n/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeMap.js\\\");\\n/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\\n\\nfunction concatMap(project, resultSelector) {\\n    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__[\\\"mergeMap\\\"])(project, resultSelector, 1);\\n}\\n//# sourceMappingURL=concatMap.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/concatMap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js ***!\n  \\*******************************************************************/\n/*! exports provided: concatMapTo */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"concatMapTo\\\", function() { return concatMapTo; });\\n/* harmony import */ var _concatMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concatMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/concatMap.js\\\");\\n/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */\\n\\nfunction concatMapTo(innerObservable, resultSelector) {\\n    return Object(_concatMap__WEBPACK_IMPORTED_MODULE_0__[\\\"concatMap\\\"])(function () { return innerObservable; }, resultSelector);\\n}\\n//# sourceMappingURL=concatMapTo.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/count.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/count.js ***!\n  \\*************************************************************/\n/*! exports provided: count */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"count\\\", function() { return count; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction count(predicate) {\\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\\n}\\nvar CountOperator = /*@__PURE__*/ (function () {\\n    function CountOperator(predicate, source) {\\n        this.predicate = predicate;\\n        this.source = source;\\n    }\\n    CountOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\\n    };\\n    return CountOperator;\\n}());\\nvar CountSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](CountSubscriber, _super);\\n    function CountSubscriber(destination, predicate, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.source = source;\\n        _this.count = 0;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    CountSubscriber.prototype._next = function (value) {\\n        if (this.predicate) {\\n            this._tryPredicate(value);\\n        }\\n        else {\\n            this.count++;\\n        }\\n    };\\n    CountSubscriber.prototype._tryPredicate = function (value) {\\n        var result;\\n        try {\\n            result = this.predicate(value, this.index++, this.source);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        if (result) {\\n            this.count++;\\n        }\\n    };\\n    CountSubscriber.prototype._complete = function () {\\n        this.destination.next(this.count);\\n        this.destination.complete();\\n    };\\n    return CountSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=count.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/count.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/debounce.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/debounce.js ***!\n  \\****************************************************************/\n/*! exports provided: debounce */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"debounce\\\", function() { return debounce; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction debounce(durationSelector) {\\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\\n}\\nvar DebounceOperator = /*@__PURE__*/ (function () {\\n    function DebounceOperator(durationSelector) {\\n        this.durationSelector = durationSelector;\\n    }\\n    DebounceOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\\n    };\\n    return DebounceOperator;\\n}());\\nvar DebounceSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DebounceSubscriber, _super);\\n    function DebounceSubscriber(destination, durationSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.durationSelector = durationSelector;\\n        _this.hasValue = false;\\n        _this.durationSubscription = null;\\n        return _this;\\n    }\\n    DebounceSubscriber.prototype._next = function (value) {\\n        try {\\n            var result = this.durationSelector.call(this, value);\\n            if (result) {\\n                this._tryNext(value, result);\\n            }\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n        }\\n    };\\n    DebounceSubscriber.prototype._complete = function () {\\n        this.emitValue();\\n        this.destination.complete();\\n    };\\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\\n        var subscription = this.durationSubscription;\\n        this.value = value;\\n        this.hasValue = true;\\n        if (subscription) {\\n            subscription.unsubscribe();\\n            this.remove(subscription);\\n        }\\n        subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(this, duration);\\n        if (subscription && !subscription.closed) {\\n            this.add(this.durationSubscription = subscription);\\n        }\\n    };\\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.emitValue();\\n    };\\n    DebounceSubscriber.prototype.notifyComplete = function () {\\n        this.emitValue();\\n    };\\n    DebounceSubscriber.prototype.emitValue = function () {\\n        if (this.hasValue) {\\n            var value = this.value;\\n            var subscription = this.durationSubscription;\\n            if (subscription) {\\n                this.durationSubscription = null;\\n                subscription.unsubscribe();\\n                this.remove(subscription);\\n            }\\n            this.value = null;\\n            this.hasValue = false;\\n            _super.prototype._next.call(this, value);\\n        }\\n    };\\n    return DebounceSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=debounce.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/debounce.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/debounceTime.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/debounceTime.js ***!\n  \\********************************************************************/\n/*! exports provided: debounceTime */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"debounceTime\\\", function() { return debounceTime; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\\n\\n\\n\\nfunction debounceTime(dueTime, scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__[\\\"async\\\"];\\n    }\\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\\n}\\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\\n    function DebounceTimeOperator(dueTime, scheduler) {\\n        this.dueTime = dueTime;\\n        this.scheduler = scheduler;\\n    }\\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\\n    };\\n    return DebounceTimeOperator;\\n}());\\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DebounceTimeSubscriber, _super);\\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.dueTime = dueTime;\\n        _this.scheduler = scheduler;\\n        _this.debouncedSubscription = null;\\n        _this.lastValue = null;\\n        _this.hasValue = false;\\n        return _this;\\n    }\\n    DebounceTimeSubscriber.prototype._next = function (value) {\\n        this.clearDebounce();\\n        this.lastValue = value;\\n        this.hasValue = true;\\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\\n    };\\n    DebounceTimeSubscriber.prototype._complete = function () {\\n        this.debouncedNext();\\n        this.destination.complete();\\n    };\\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\\n        this.clearDebounce();\\n        if (this.hasValue) {\\n            var lastValue = this.lastValue;\\n            this.lastValue = null;\\n            this.hasValue = false;\\n            this.destination.next(lastValue);\\n        }\\n    };\\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\\n        var debouncedSubscription = this.debouncedSubscription;\\n        if (debouncedSubscription !== null) {\\n            this.remove(debouncedSubscription);\\n            debouncedSubscription.unsubscribe();\\n            this.debouncedSubscription = null;\\n        }\\n    };\\n    return DebounceTimeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\nfunction dispatchNext(subscriber) {\\n    subscriber.debouncedNext();\\n}\\n//# sourceMappingURL=debounceTime.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/debounceTime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js ***!\n  \\**********************************************************************/\n/*! exports provided: defaultIfEmpty */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"defaultIfEmpty\\\", function() { return defaultIfEmpty; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction defaultIfEmpty(defaultValue) {\\n    if (defaultValue === void 0) {\\n        defaultValue = null;\\n    }\\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\\n}\\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\\n    function DefaultIfEmptyOperator(defaultValue) {\\n        this.defaultValue = defaultValue;\\n    }\\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\\n    };\\n    return DefaultIfEmptyOperator;\\n}());\\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DefaultIfEmptySubscriber, _super);\\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.defaultValue = defaultValue;\\n        _this.isEmpty = true;\\n        return _this;\\n    }\\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\\n        this.isEmpty = false;\\n        this.destination.next(value);\\n    };\\n    DefaultIfEmptySubscriber.prototype._complete = function () {\\n        if (this.isEmpty) {\\n            this.destination.next(this.defaultValue);\\n        }\\n        this.destination.complete();\\n    };\\n    return DefaultIfEmptySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=defaultIfEmpty.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/delay.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/delay.js ***!\n  \\*************************************************************/\n/*! exports provided: delay */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"delay\\\", function() { return delay; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isDate */ \\\"./node_modules/rxjs/_esm5/internal/util/isDate.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Notification */ \\\"./node_modules/rxjs/_esm5/internal/Notification.js\\\");\\n/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction delay(delay, scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__[\\\"async\\\"];\\n    }\\n    var absoluteDelay = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__[\\\"isDate\\\"])(delay);\\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\\n}\\nvar DelayOperator = /*@__PURE__*/ (function () {\\n    function DelayOperator(delay, scheduler) {\\n        this.delay = delay;\\n        this.scheduler = scheduler;\\n    }\\n    DelayOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\\n    };\\n    return DelayOperator;\\n}());\\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DelaySubscriber, _super);\\n    function DelaySubscriber(destination, delay, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.delay = delay;\\n        _this.scheduler = scheduler;\\n        _this.queue = [];\\n        _this.active = false;\\n        _this.errored = false;\\n        return _this;\\n    }\\n    DelaySubscriber.dispatch = function (state) {\\n        var source = state.source;\\n        var queue = source.queue;\\n        var scheduler = state.scheduler;\\n        var destination = state.destination;\\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\\n            queue.shift().notification.observe(destination);\\n        }\\n        if (queue.length > 0) {\\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\\n            this.schedule(state, delay_1);\\n        }\\n        else {\\n            this.unsubscribe();\\n            source.active = false;\\n        }\\n    };\\n    DelaySubscriber.prototype._schedule = function (scheduler) {\\n        this.active = true;\\n        var destination = this.destination;\\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\\n            source: this, destination: this.destination, scheduler: scheduler\\n        }));\\n    };\\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\\n        if (this.errored === true) {\\n            return;\\n        }\\n        var scheduler = this.scheduler;\\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\\n        this.queue.push(message);\\n        if (this.active === false) {\\n            this._schedule(scheduler);\\n        }\\n    };\\n    DelaySubscriber.prototype._next = function (value) {\\n        this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__[\\\"Notification\\\"].createNext(value));\\n    };\\n    DelaySubscriber.prototype._error = function (err) {\\n        this.errored = true;\\n        this.queue = [];\\n        this.destination.error(err);\\n        this.unsubscribe();\\n    };\\n    DelaySubscriber.prototype._complete = function () {\\n        this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__[\\\"Notification\\\"].createComplete());\\n        this.unsubscribe();\\n    };\\n    return DelaySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscriber\\\"]));\\nvar DelayMessage = /*@__PURE__*/ (function () {\\n    function DelayMessage(time, notification) {\\n        this.time = time;\\n        this.notification = notification;\\n    }\\n    return DelayMessage;\\n}());\\n//# sourceMappingURL=delay.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/delay.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/delayWhen.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/delayWhen.js ***!\n  \\*****************************************************************/\n/*! exports provided: delayWhen */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"delayWhen\\\", function() { return delayWhen; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\\n    if (subscriptionDelay) {\\n        return function (source) {\\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\\n                .lift(new DelayWhenOperator(delayDurationSelector));\\n        };\\n    }\\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\\n}\\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\\n    function DelayWhenOperator(delayDurationSelector) {\\n        this.delayDurationSelector = delayDurationSelector;\\n    }\\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\\n    };\\n    return DelayWhenOperator;\\n}());\\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DelayWhenSubscriber, _super);\\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.delayDurationSelector = delayDurationSelector;\\n        _this.completed = false;\\n        _this.delayNotifierSubscriptions = [];\\n        _this.index = 0;\\n        return _this;\\n    }\\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.destination.next(outerValue);\\n        this.removeSubscription(innerSub);\\n        this.tryComplete();\\n    };\\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\\n        this._error(error);\\n    };\\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\\n        var value = this.removeSubscription(innerSub);\\n        if (value) {\\n            this.destination.next(value);\\n        }\\n        this.tryComplete();\\n    };\\n    DelayWhenSubscriber.prototype._next = function (value) {\\n        var index = this.index++;\\n        try {\\n            var delayNotifier = this.delayDurationSelector(value, index);\\n            if (delayNotifier) {\\n                this.tryDelay(delayNotifier, value);\\n            }\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n        }\\n    };\\n    DelayWhenSubscriber.prototype._complete = function () {\\n        this.completed = true;\\n        this.tryComplete();\\n        this.unsubscribe();\\n    };\\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\\n        subscription.unsubscribe();\\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\\n        if (subscriptionIdx !== -1) {\\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\\n        }\\n        return subscription.outerValue;\\n    };\\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\\n        var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[\\\"subscribeToResult\\\"])(this, delayNotifier, value);\\n        if (notifierSubscription && !notifierSubscription.closed) {\\n            var destination = this.destination;\\n            destination.add(notifierSubscription);\\n            this.delayNotifierSubscriptions.push(notifierSubscription);\\n        }\\n    };\\n    DelayWhenSubscriber.prototype.tryComplete = function () {\\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\\n            this.destination.complete();\\n        }\\n    };\\n    return DelayWhenSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SubscriptionDelayObservable, _super);\\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\\n        var _this = _super.call(this) || this;\\n        _this.source = source;\\n        _this.subscriptionDelay = subscriptionDelay;\\n        return _this;\\n    }\\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\\n    };\\n    return SubscriptionDelayObservable;\\n}(_Observable__WEBPACK_IMPORTED_MODULE_2__[\\\"Observable\\\"]));\\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SubscriptionDelaySubscriber, _super);\\n    function SubscriptionDelaySubscriber(parent, source) {\\n        var _this = _super.call(this) || this;\\n        _this.parent = parent;\\n        _this.source = source;\\n        _this.sourceSubscribed = false;\\n        return _this;\\n    }\\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\\n        this.subscribeToSource();\\n    };\\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\\n        this.unsubscribe();\\n        this.parent.error(err);\\n    };\\n    SubscriptionDelaySubscriber.prototype._complete = function () {\\n        this.unsubscribe();\\n        this.subscribeToSource();\\n    };\\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\\n        if (!this.sourceSubscribed) {\\n            this.sourceSubscribed = true;\\n            this.unsubscribe();\\n            this.source.subscribe(this.parent);\\n        }\\n    };\\n    return SubscriptionDelaySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=delayWhen.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/delayWhen.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/dematerialize.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/dematerialize.js ***!\n  \\*********************************************************************/\n/*! exports provided: dematerialize */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"dematerialize\\\", function() { return dematerialize; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction dematerialize() {\\n    return function dematerializeOperatorFunction(source) {\\n        return source.lift(new DeMaterializeOperator());\\n    };\\n}\\nvar DeMaterializeOperator = /*@__PURE__*/ (function () {\\n    function DeMaterializeOperator() {\\n    }\\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\\n    };\\n    return DeMaterializeOperator;\\n}());\\nvar DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DeMaterializeSubscriber, _super);\\n    function DeMaterializeSubscriber(destination) {\\n        return _super.call(this, destination) || this;\\n    }\\n    DeMaterializeSubscriber.prototype._next = function (value) {\\n        value.observe(this.destination);\\n    };\\n    return DeMaterializeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=dematerialize.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/dematerialize.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/distinct.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/distinct.js ***!\n  \\****************************************************************/\n/*! exports provided: distinct, DistinctSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"distinct\\\", function() { return distinct; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DistinctSubscriber\\\", function() { return DistinctSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction distinct(keySelector, flushes) {\\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\\n}\\nvar DistinctOperator = /*@__PURE__*/ (function () {\\n    function DistinctOperator(keySelector, flushes) {\\n        this.keySelector = keySelector;\\n        this.flushes = flushes;\\n    }\\n    DistinctOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\\n    };\\n    return DistinctOperator;\\n}());\\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DistinctSubscriber, _super);\\n    function DistinctSubscriber(destination, keySelector, flushes) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.keySelector = keySelector;\\n        _this.values = new Set();\\n        if (flushes) {\\n            _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(_this, flushes));\\n        }\\n        return _this;\\n    }\\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.values.clear();\\n    };\\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\\n        this._error(error);\\n    };\\n    DistinctSubscriber.prototype._next = function (value) {\\n        if (this.keySelector) {\\n            this._useKeySelector(value);\\n        }\\n        else {\\n            this._finalizeNext(value, value);\\n        }\\n    };\\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\\n        var key;\\n        var destination = this.destination;\\n        try {\\n            key = this.keySelector(value);\\n        }\\n        catch (err) {\\n            destination.error(err);\\n            return;\\n        }\\n        this._finalizeNext(key, value);\\n    };\\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\\n        var values = this.values;\\n        if (!values.has(key)) {\\n            values.add(key);\\n            this.destination.next(value);\\n        }\\n    };\\n    return DistinctSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n\\n//# sourceMappingURL=distinct.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/distinct.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js ***!\n  \\****************************************************************************/\n/*! exports provided: distinctUntilChanged */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"distinctUntilChanged\\\", function() { return distinctUntilChanged; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction distinctUntilChanged(compare, keySelector) {\\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\\n}\\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\\n    function DistinctUntilChangedOperator(compare, keySelector) {\\n        this.compare = compare;\\n        this.keySelector = keySelector;\\n    }\\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\\n    };\\n    return DistinctUntilChangedOperator;\\n}());\\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](DistinctUntilChangedSubscriber, _super);\\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.keySelector = keySelector;\\n        _this.hasKey = false;\\n        if (typeof compare === 'function') {\\n            _this.compare = compare;\\n        }\\n        return _this;\\n    }\\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\\n        return x === y;\\n    };\\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\\n        var key;\\n        try {\\n            var keySelector = this.keySelector;\\n            key = keySelector ? keySelector(value) : value;\\n        }\\n        catch (err) {\\n            return this.destination.error(err);\\n        }\\n        var result = false;\\n        if (this.hasKey) {\\n            try {\\n                var compare = this.compare;\\n                result = compare(this.key, key);\\n            }\\n            catch (err) {\\n                return this.destination.error(err);\\n            }\\n        }\\n        else {\\n            this.hasKey = true;\\n        }\\n        if (!result) {\\n            this.key = key;\\n            this.destination.next(value);\\n        }\\n    };\\n    return DistinctUntilChangedSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=distinctUntilChanged.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js\":\n/*!*******************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js ***!\n  \\*******************************************************************************/\n/*! exports provided: distinctUntilKeyChanged */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"distinctUntilKeyChanged\\\", function() { return distinctUntilKeyChanged; });\\n/* harmony import */ var _distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./distinctUntilChanged */ \\\"./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js\\\");\\n/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */\\n\\nfunction distinctUntilKeyChanged(key, compare) {\\n    return Object(_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__[\\\"distinctUntilChanged\\\"])(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\\n}\\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/elementAt.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/elementAt.js ***!\n  \\*****************************************************************/\n/*! exports provided: elementAt */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"elementAt\\\", function() { return elementAt; });\\n/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ \\\"./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js\\\");\\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ \\\"./node_modules/rxjs/_esm5/internal/operators/filter.js\\\");\\n/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./throwIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js\\\");\\n/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js\\\");\\n/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./take */ \\\"./node_modules/rxjs/_esm5/internal/operators/take.js\\\");\\n/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction elementAt(index, defaultValue) {\\n    if (index < 0) {\\n        throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__[\\\"ArgumentOutOfRangeError\\\"]();\\n    }\\n    var hasDefaultValue = arguments.length >= 2;\\n    return function (source) {\\n        return source.pipe(Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\\\"filter\\\"])(function (v, i) { return i === index; }), Object(_take__WEBPACK_IMPORTED_MODULE_4__[\\\"take\\\"])(1), hasDefaultValue\\n            ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__[\\\"defaultIfEmpty\\\"])(defaultValue)\\n            : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__[\\\"throwIfEmpty\\\"])(function () { return new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__[\\\"ArgumentOutOfRangeError\\\"](); }));\\n    };\\n}\\n//# sourceMappingURL=elementAt.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/elementAt.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/endWith.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/endWith.js ***!\n  \\***************************************************************/\n/*! exports provided: endWith */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"endWith\\\", function() { return endWith; });\\n/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ \\\"./node_modules/rxjs/_esm5/internal/observable/concat.js\\\");\\n/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/of */ \\\"./node_modules/rxjs/_esm5/internal/observable/of.js\\\");\\n/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */\\n\\n\\nfunction endWith() {\\n    var array = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        array[_i] = arguments[_i];\\n    }\\n    return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__[\\\"concat\\\"])(source, _observable_of__WEBPACK_IMPORTED_MODULE_1__[\\\"of\\\"].apply(void 0, array)); };\\n}\\n//# sourceMappingURL=endWith.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/endWith.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/every.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/every.js ***!\n  \\*************************************************************/\n/*! exports provided: every */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"every\\\", function() { return every; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction every(predicate, thisArg) {\\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\\n}\\nvar EveryOperator = /*@__PURE__*/ (function () {\\n    function EveryOperator(predicate, thisArg, source) {\\n        this.predicate = predicate;\\n        this.thisArg = thisArg;\\n        this.source = source;\\n    }\\n    EveryOperator.prototype.call = function (observer, source) {\\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\\n    };\\n    return EveryOperator;\\n}());\\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](EverySubscriber, _super);\\n    function EverySubscriber(destination, predicate, thisArg, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.thisArg = thisArg;\\n        _this.source = source;\\n        _this.index = 0;\\n        _this.thisArg = thisArg || _this;\\n        return _this;\\n    }\\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\\n        this.destination.next(everyValueMatch);\\n        this.destination.complete();\\n    };\\n    EverySubscriber.prototype._next = function (value) {\\n        var result = false;\\n        try {\\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        if (!result) {\\n            this.notifyComplete(false);\\n        }\\n    };\\n    EverySubscriber.prototype._complete = function () {\\n        this.notifyComplete(true);\\n    };\\n    return EverySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=every.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/every.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/exhaust.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/exhaust.js ***!\n  \\***************************************************************/\n/*! exports provided: exhaust */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exhaust\\\", function() { return exhaust; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction exhaust() {\\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\\n}\\nvar SwitchFirstOperator = /*@__PURE__*/ (function () {\\n    function SwitchFirstOperator() {\\n    }\\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\\n    };\\n    return SwitchFirstOperator;\\n}());\\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SwitchFirstSubscriber, _super);\\n    function SwitchFirstSubscriber(destination) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.hasCompleted = false;\\n        _this.hasSubscription = false;\\n        return _this;\\n    }\\n    SwitchFirstSubscriber.prototype._next = function (value) {\\n        if (!this.hasSubscription) {\\n            this.hasSubscription = true;\\n            this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(this, value));\\n        }\\n    };\\n    SwitchFirstSubscriber.prototype._complete = function () {\\n        this.hasCompleted = true;\\n        if (!this.hasSubscription) {\\n            this.destination.complete();\\n        }\\n    };\\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\\n        this.remove(innerSub);\\n        this.hasSubscription = false;\\n        if (this.hasCompleted) {\\n            this.destination.complete();\\n        }\\n    };\\n    return SwitchFirstSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=exhaust.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/exhaust.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js ***!\n  \\******************************************************************/\n/*! exports provided: exhaustMap */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"exhaustMap\\\", function() { return exhaustMap; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction exhaustMap(project, resultSelector) {\\n    if (resultSelector) {\\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__[\\\"from\\\"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__[\\\"map\\\"])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\\n    }\\n    return function (source) {\\n        return source.lift(new ExhaustMapOperator(project));\\n    };\\n}\\nvar ExhaustMapOperator = /*@__PURE__*/ (function () {\\n    function ExhaustMapOperator(project) {\\n        this.project = project;\\n    }\\n    ExhaustMapOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\\n    };\\n    return ExhaustMapOperator;\\n}());\\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ExhaustMapSubscriber, _super);\\n    function ExhaustMapSubscriber(destination, project) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.project = project;\\n        _this.hasSubscription = false;\\n        _this.hasCompleted = false;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    ExhaustMapSubscriber.prototype._next = function (value) {\\n        if (!this.hasSubscription) {\\n            this.tryNext(value);\\n        }\\n    };\\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\\n        var result;\\n        var index = this.index++;\\n        try {\\n            result = this.project(value, index);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.hasSubscription = true;\\n        this._innerSub(result, value, index);\\n    };\\n    ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {\\n        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"InnerSubscriber\\\"](this, undefined, undefined);\\n        var destination = this.destination;\\n        destination.add(innerSubscriber);\\n        Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, result, value, index, innerSubscriber);\\n    };\\n    ExhaustMapSubscriber.prototype._complete = function () {\\n        this.hasCompleted = true;\\n        if (!this.hasSubscription) {\\n            this.destination.complete();\\n        }\\n        this.unsubscribe();\\n    };\\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.destination.next(innerValue);\\n    };\\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\\n        this.destination.error(err);\\n    };\\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\\n        var destination = this.destination;\\n        destination.remove(innerSub);\\n        this.hasSubscription = false;\\n        if (this.hasCompleted) {\\n            this.destination.complete();\\n        }\\n    };\\n    return ExhaustMapSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=exhaustMap.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/expand.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/expand.js ***!\n  \\**************************************************************/\n/*! exports provided: expand, ExpandOperator, ExpandSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"expand\\\", function() { return expand; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ExpandOperator\\\", function() { return ExpandOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ExpandSubscriber\\\", function() { return ExpandSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction expand(project, concurrent, scheduler) {\\n    if (concurrent === void 0) {\\n        concurrent = Number.POSITIVE_INFINITY;\\n    }\\n    if (scheduler === void 0) {\\n        scheduler = undefined;\\n    }\\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\\n}\\nvar ExpandOperator = /*@__PURE__*/ (function () {\\n    function ExpandOperator(project, concurrent, scheduler) {\\n        this.project = project;\\n        this.concurrent = concurrent;\\n        this.scheduler = scheduler;\\n    }\\n    ExpandOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\\n    };\\n    return ExpandOperator;\\n}());\\n\\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ExpandSubscriber, _super);\\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.project = project;\\n        _this.concurrent = concurrent;\\n        _this.scheduler = scheduler;\\n        _this.index = 0;\\n        _this.active = 0;\\n        _this.hasCompleted = false;\\n        if (concurrent < Number.POSITIVE_INFINITY) {\\n            _this.buffer = [];\\n        }\\n        return _this;\\n    }\\n    ExpandSubscriber.dispatch = function (arg) {\\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\\n        subscriber.subscribeToProjection(result, value, index);\\n    };\\n    ExpandSubscriber.prototype._next = function (value) {\\n        var destination = this.destination;\\n        if (destination.closed) {\\n            this._complete();\\n            return;\\n        }\\n        var index = this.index++;\\n        if (this.active < this.concurrent) {\\n            destination.next(value);\\n            try {\\n                var project = this.project;\\n                var result = project(value, index);\\n                if (!this.scheduler) {\\n                    this.subscribeToProjection(result, value, index);\\n                }\\n                else {\\n                    var state = { subscriber: this, result: result, value: value, index: index };\\n                    var destination_1 = this.destination;\\n                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\\n                }\\n            }\\n            catch (e) {\\n                destination.error(e);\\n            }\\n        }\\n        else {\\n            this.buffer.push(value);\\n        }\\n    };\\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\\n        this.active++;\\n        var destination = this.destination;\\n        destination.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(this, result, value, index));\\n    };\\n    ExpandSubscriber.prototype._complete = function () {\\n        this.hasCompleted = true;\\n        if (this.hasCompleted && this.active === 0) {\\n            this.destination.complete();\\n        }\\n        this.unsubscribe();\\n    };\\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this._next(innerValue);\\n    };\\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\\n        var buffer = this.buffer;\\n        var destination = this.destination;\\n        destination.remove(innerSub);\\n        this.active--;\\n        if (buffer && buffer.length > 0) {\\n            this._next(buffer.shift());\\n        }\\n        if (this.hasCompleted && this.active === 0) {\\n            this.destination.complete();\\n        }\\n    };\\n    return ExpandSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n\\n//# sourceMappingURL=expand.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/expand.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/filter.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/filter.js ***!\n  \\**************************************************************/\n/*! exports provided: filter */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"filter\\\", function() { return filter; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction filter(predicate, thisArg) {\\n    return function filterOperatorFunction(source) {\\n        return source.lift(new FilterOperator(predicate, thisArg));\\n    };\\n}\\nvar FilterOperator = /*@__PURE__*/ (function () {\\n    function FilterOperator(predicate, thisArg) {\\n        this.predicate = predicate;\\n        this.thisArg = thisArg;\\n    }\\n    FilterOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\\n    };\\n    return FilterOperator;\\n}());\\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](FilterSubscriber, _super);\\n    function FilterSubscriber(destination, predicate, thisArg) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.thisArg = thisArg;\\n        _this.count = 0;\\n        return _this;\\n    }\\n    FilterSubscriber.prototype._next = function (value) {\\n        var result;\\n        try {\\n            result = this.predicate.call(this.thisArg, value, this.count++);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        if (result) {\\n            this.destination.next(value);\\n        }\\n    };\\n    return FilterSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=filter.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/filter.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/finalize.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/finalize.js ***!\n  \\****************************************************************/\n/*! exports provided: finalize */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"finalize\\\", function() { return finalize; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\\n\\n\\n\\nfunction finalize(callback) {\\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\\n}\\nvar FinallyOperator = /*@__PURE__*/ (function () {\\n    function FinallyOperator(callback) {\\n        this.callback = callback;\\n    }\\n    FinallyOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\\n    };\\n    return FinallyOperator;\\n}());\\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](FinallySubscriber, _super);\\n    function FinallySubscriber(destination, callback) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.add(new _Subscription__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscription\\\"](callback));\\n        return _this;\\n    }\\n    return FinallySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=finalize.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/finalize.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/find.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/find.js ***!\n  \\************************************************************/\n/*! exports provided: find, FindValueOperator, FindValueSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"find\\\", function() { return find; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"FindValueOperator\\\", function() { return FindValueOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"FindValueSubscriber\\\", function() { return FindValueSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction find(predicate, thisArg) {\\n    if (typeof predicate !== 'function') {\\n        throw new TypeError('predicate is not a function');\\n    }\\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\\n}\\nvar FindValueOperator = /*@__PURE__*/ (function () {\\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\\n        this.predicate = predicate;\\n        this.source = source;\\n        this.yieldIndex = yieldIndex;\\n        this.thisArg = thisArg;\\n    }\\n    FindValueOperator.prototype.call = function (observer, source) {\\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\\n    };\\n    return FindValueOperator;\\n}());\\n\\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](FindValueSubscriber, _super);\\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.source = source;\\n        _this.yieldIndex = yieldIndex;\\n        _this.thisArg = thisArg;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\\n        var destination = this.destination;\\n        destination.next(value);\\n        destination.complete();\\n        this.unsubscribe();\\n    };\\n    FindValueSubscriber.prototype._next = function (value) {\\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\\n        var index = this.index++;\\n        try {\\n            var result = predicate.call(thisArg || this, value, index, this.source);\\n            if (result) {\\n                this.notifyComplete(this.yieldIndex ? index : value);\\n            }\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n        }\\n    };\\n    FindValueSubscriber.prototype._complete = function () {\\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\\n    };\\n    return FindValueSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n\\n//# sourceMappingURL=find.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/find.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/findIndex.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/findIndex.js ***!\n  \\*****************************************************************/\n/*! exports provided: findIndex */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"findIndex\\\", function() { return findIndex; });\\n/* harmony import */ var _operators_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operators/find */ \\\"./node_modules/rxjs/_esm5/internal/operators/find.js\\\");\\n/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */\\n\\nfunction findIndex(predicate, thisArg) {\\n    return function (source) { return source.lift(new _operators_find__WEBPACK_IMPORTED_MODULE_0__[\\\"FindValueOperator\\\"](predicate, source, true, thisArg)); };\\n}\\n//# sourceMappingURL=findIndex.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/findIndex.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/first.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/first.js ***!\n  \\*************************************************************/\n/*! exports provided: first */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"first\\\", function() { return first; });\\n/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ \\\"./node_modules/rxjs/_esm5/internal/util/EmptyError.js\\\");\\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ \\\"./node_modules/rxjs/_esm5/internal/operators/filter.js\\\");\\n/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./take */ \\\"./node_modules/rxjs/_esm5/internal/operators/take.js\\\");\\n/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js\\\");\\n/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./throwIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js\\\");\\n/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ \\\"./node_modules/rxjs/_esm5/internal/util/identity.js\\\");\\n/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction first(predicate, defaultValue) {\\n    var hasDefaultValue = arguments.length >= 2;\\n    return function (source) { return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\\\"filter\\\"])(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__[\\\"identity\\\"], Object(_take__WEBPACK_IMPORTED_MODULE_2__[\\\"take\\\"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__[\\\"defaultIfEmpty\\\"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__[\\\"throwIfEmpty\\\"])(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__[\\\"EmptyError\\\"](); })); };\\n}\\n//# sourceMappingURL=first.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/first.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/groupBy.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/groupBy.js ***!\n  \\***************************************************************/\n/*! exports provided: groupBy, GroupedObservable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"groupBy\\\", function() { return groupBy; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"GroupedObservable\\\", function() { return GroupedObservable; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\\n    return function (source) {\\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\\n    };\\n}\\nvar GroupByOperator = /*@__PURE__*/ (function () {\\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\\n        this.keySelector = keySelector;\\n        this.elementSelector = elementSelector;\\n        this.durationSelector = durationSelector;\\n        this.subjectSelector = subjectSelector;\\n    }\\n    GroupByOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\\n    };\\n    return GroupByOperator;\\n}());\\nvar GroupBySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](GroupBySubscriber, _super);\\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.keySelector = keySelector;\\n        _this.elementSelector = elementSelector;\\n        _this.durationSelector = durationSelector;\\n        _this.subjectSelector = subjectSelector;\\n        _this.groups = null;\\n        _this.attemptedToUnsubscribe = false;\\n        _this.count = 0;\\n        return _this;\\n    }\\n    GroupBySubscriber.prototype._next = function (value) {\\n        var key;\\n        try {\\n            key = this.keySelector(value);\\n        }\\n        catch (err) {\\n            this.error(err);\\n            return;\\n        }\\n        this._group(value, key);\\n    };\\n    GroupBySubscriber.prototype._group = function (value, key) {\\n        var groups = this.groups;\\n        if (!groups) {\\n            groups = this.groups = new Map();\\n        }\\n        var group = groups.get(key);\\n        var element;\\n        if (this.elementSelector) {\\n            try {\\n                element = this.elementSelector(value);\\n            }\\n            catch (err) {\\n                this.error(err);\\n            }\\n        }\\n        else {\\n            element = value;\\n        }\\n        if (!group) {\\n            group = (this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_4__[\\\"Subject\\\"]());\\n            groups.set(key, group);\\n            var groupedObservable = new GroupedObservable(key, group, this);\\n            this.destination.next(groupedObservable);\\n            if (this.durationSelector) {\\n                var duration = void 0;\\n                try {\\n                    duration = this.durationSelector(new GroupedObservable(key, group));\\n                }\\n                catch (err) {\\n                    this.error(err);\\n                    return;\\n                }\\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\\n            }\\n        }\\n        if (!group.closed) {\\n            group.next(element);\\n        }\\n    };\\n    GroupBySubscriber.prototype._error = function (err) {\\n        var groups = this.groups;\\n        if (groups) {\\n            groups.forEach(function (group, key) {\\n                group.error(err);\\n            });\\n            groups.clear();\\n        }\\n        this.destination.error(err);\\n    };\\n    GroupBySubscriber.prototype._complete = function () {\\n        var groups = this.groups;\\n        if (groups) {\\n            groups.forEach(function (group, key) {\\n                group.complete();\\n            });\\n            groups.clear();\\n        }\\n        this.destination.complete();\\n    };\\n    GroupBySubscriber.prototype.removeGroup = function (key) {\\n        this.groups.delete(key);\\n    };\\n    GroupBySubscriber.prototype.unsubscribe = function () {\\n        if (!this.closed) {\\n            this.attemptedToUnsubscribe = true;\\n            if (this.count === 0) {\\n                _super.prototype.unsubscribe.call(this);\\n            }\\n        }\\n    };\\n    return GroupBySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\nvar GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](GroupDurationSubscriber, _super);\\n    function GroupDurationSubscriber(key, group, parent) {\\n        var _this = _super.call(this, group) || this;\\n        _this.key = key;\\n        _this.group = group;\\n        _this.parent = parent;\\n        return _this;\\n    }\\n    GroupDurationSubscriber.prototype._next = function (value) {\\n        this.complete();\\n    };\\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\\n        var _a = this, parent = _a.parent, key = _a.key;\\n        this.key = this.parent = null;\\n        if (parent) {\\n            parent.removeGroup(key);\\n        }\\n    };\\n    return GroupDurationSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\nvar GroupedObservable = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](GroupedObservable, _super);\\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\\n        var _this = _super.call(this) || this;\\n        _this.key = key;\\n        _this.groupSubject = groupSubject;\\n        _this.refCountSubscription = refCountSubscription;\\n        return _this;\\n    }\\n    GroupedObservable.prototype._subscribe = function (subscriber) {\\n        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscription\\\"]();\\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\\n        if (refCountSubscription && !refCountSubscription.closed) {\\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\\n        }\\n        subscription.add(groupSubject.subscribe(subscriber));\\n        return subscription;\\n    };\\n    return GroupedObservable;\\n}(_Observable__WEBPACK_IMPORTED_MODULE_3__[\\\"Observable\\\"]));\\n\\nvar InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](InnerRefCountSubscription, _super);\\n    function InnerRefCountSubscription(parent) {\\n        var _this = _super.call(this) || this;\\n        _this.parent = parent;\\n        parent.count++;\\n        return _this;\\n    }\\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\\n        var parent = this.parent;\\n        if (!parent.closed && !this.closed) {\\n            _super.prototype.unsubscribe.call(this);\\n            parent.count -= 1;\\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\\n                parent.unsubscribe();\\n            }\\n        }\\n    };\\n    return InnerRefCountSubscription;\\n}(_Subscription__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscription\\\"]));\\n//# sourceMappingURL=groupBy.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/groupBy.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js ***!\n  \\**********************************************************************/\n/*! exports provided: ignoreElements */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ignoreElements\\\", function() { return ignoreElements; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction ignoreElements() {\\n    return function ignoreElementsOperatorFunction(source) {\\n        return source.lift(new IgnoreElementsOperator());\\n    };\\n}\\nvar IgnoreElementsOperator = /*@__PURE__*/ (function () {\\n    function IgnoreElementsOperator() {\\n    }\\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\\n    };\\n    return IgnoreElementsOperator;\\n}());\\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](IgnoreElementsSubscriber, _super);\\n    function IgnoreElementsSubscriber() {\\n        return _super !== null && _super.apply(this, arguments) || this;\\n    }\\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\\n    };\\n    return IgnoreElementsSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=ignoreElements.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/isEmpty.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/isEmpty.js ***!\n  \\***************************************************************/\n/*! exports provided: isEmpty */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isEmpty\\\", function() { return isEmpty; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction isEmpty() {\\n    return function (source) { return source.lift(new IsEmptyOperator()); };\\n}\\nvar IsEmptyOperator = /*@__PURE__*/ (function () {\\n    function IsEmptyOperator() {\\n    }\\n    IsEmptyOperator.prototype.call = function (observer, source) {\\n        return source.subscribe(new IsEmptySubscriber(observer));\\n    };\\n    return IsEmptyOperator;\\n}());\\nvar IsEmptySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](IsEmptySubscriber, _super);\\n    function IsEmptySubscriber(destination) {\\n        return _super.call(this, destination) || this;\\n    }\\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\\n        var destination = this.destination;\\n        destination.next(isEmpty);\\n        destination.complete();\\n    };\\n    IsEmptySubscriber.prototype._next = function (value) {\\n        this.notifyComplete(false);\\n    };\\n    IsEmptySubscriber.prototype._complete = function () {\\n        this.notifyComplete(true);\\n    };\\n    return IsEmptySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=isEmpty.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/isEmpty.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/last.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/last.js ***!\n  \\************************************************************/\n/*! exports provided: last */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"last\\\", function() { return last; });\\n/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ \\\"./node_modules/rxjs/_esm5/internal/util/EmptyError.js\\\");\\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ \\\"./node_modules/rxjs/_esm5/internal/operators/filter.js\\\");\\n/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./takeLast */ \\\"./node_modules/rxjs/_esm5/internal/operators/takeLast.js\\\");\\n/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throwIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js\\\");\\n/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js\\\");\\n/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ \\\"./node_modules/rxjs/_esm5/internal/util/identity.js\\\");\\n/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction last(predicate, defaultValue) {\\n    var hasDefaultValue = arguments.length >= 2;\\n    return function (source) { return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\\\"filter\\\"])(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__[\\\"identity\\\"], Object(_takeLast__WEBPACK_IMPORTED_MODULE_2__[\\\"takeLast\\\"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__[\\\"defaultIfEmpty\\\"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__[\\\"throwIfEmpty\\\"])(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__[\\\"EmptyError\\\"](); })); };\\n}\\n//# sourceMappingURL=last.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/last.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/map.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/map.js ***!\n  \\***********************************************************/\n/*! exports provided: map, MapOperator */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"map\\\", function() { return map; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MapOperator\\\", function() { return MapOperator; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction map(project, thisArg) {\\n    return function mapOperation(source) {\\n        if (typeof project !== 'function') {\\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\\n        }\\n        return source.lift(new MapOperator(project, thisArg));\\n    };\\n}\\nvar MapOperator = /*@__PURE__*/ (function () {\\n    function MapOperator(project, thisArg) {\\n        this.project = project;\\n        this.thisArg = thisArg;\\n    }\\n    MapOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\\n    };\\n    return MapOperator;\\n}());\\n\\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](MapSubscriber, _super);\\n    function MapSubscriber(destination, project, thisArg) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.project = project;\\n        _this.count = 0;\\n        _this.thisArg = thisArg || _this;\\n        return _this;\\n    }\\n    MapSubscriber.prototype._next = function (value) {\\n        var result;\\n        try {\\n            result = this.project.call(this.thisArg, value, this.count++);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.destination.next(result);\\n    };\\n    return MapSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=map.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/map.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/mapTo.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/mapTo.js ***!\n  \\*************************************************************/\n/*! exports provided: mapTo */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mapTo\\\", function() { return mapTo; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction mapTo(value) {\\n    return function (source) { return source.lift(new MapToOperator(value)); };\\n}\\nvar MapToOperator = /*@__PURE__*/ (function () {\\n    function MapToOperator(value) {\\n        this.value = value;\\n    }\\n    MapToOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\\n    };\\n    return MapToOperator;\\n}());\\nvar MapToSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](MapToSubscriber, _super);\\n    function MapToSubscriber(destination, value) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.value = value;\\n        return _this;\\n    }\\n    MapToSubscriber.prototype._next = function (x) {\\n        this.destination.next(this.value);\\n    };\\n    return MapToSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=mapTo.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/mapTo.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/materialize.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/materialize.js ***!\n  \\*******************************************************************/\n/*! exports provided: materialize */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"materialize\\\", function() { return materialize; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ \\\"./node_modules/rxjs/_esm5/internal/Notification.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\\n\\n\\n\\nfunction materialize() {\\n    return function materializeOperatorFunction(source) {\\n        return source.lift(new MaterializeOperator());\\n    };\\n}\\nvar MaterializeOperator = /*@__PURE__*/ (function () {\\n    function MaterializeOperator() {\\n    }\\n    MaterializeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new MaterializeSubscriber(subscriber));\\n    };\\n    return MaterializeOperator;\\n}());\\nvar MaterializeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](MaterializeSubscriber, _super);\\n    function MaterializeSubscriber(destination) {\\n        return _super.call(this, destination) || this;\\n    }\\n    MaterializeSubscriber.prototype._next = function (value) {\\n        this.destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__[\\\"Notification\\\"].createNext(value));\\n    };\\n    MaterializeSubscriber.prototype._error = function (err) {\\n        var destination = this.destination;\\n        destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__[\\\"Notification\\\"].createError(err));\\n        destination.complete();\\n    };\\n    MaterializeSubscriber.prototype._complete = function () {\\n        var destination = this.destination;\\n        destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__[\\\"Notification\\\"].createComplete());\\n        destination.complete();\\n    };\\n    return MaterializeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=materialize.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/materialize.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/max.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/max.js ***!\n  \\***********************************************************/\n/*! exports provided: max */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"max\\\", function() { return max; });\\n/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ \\\"./node_modules/rxjs/_esm5/internal/operators/reduce.js\\\");\\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\\n\\nfunction max(comparer) {\\n    var max = (typeof comparer === 'function')\\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\\n        : function (x, y) { return x > y ? x : y; };\\n    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__[\\\"reduce\\\"])(max);\\n}\\n//# sourceMappingURL=max.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/max.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/merge.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/merge.js ***!\n  \\*************************************************************/\n/*! exports provided: merge */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"merge\\\", function() { return merge; });\\n/* harmony import */ var _observable_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/merge */ \\\"./node_modules/rxjs/_esm5/internal/observable/merge.js\\\");\\n/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\\n\\nfunction merge() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    return function (source) { return source.lift.call(_observable_merge__WEBPACK_IMPORTED_MODULE_0__[\\\"merge\\\"].apply(void 0, [source].concat(observables))); };\\n}\\n//# sourceMappingURL=merge.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/merge.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/mergeAll.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeAll.js ***!\n  \\****************************************************************/\n/*! exports provided: mergeAll */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mergeAll\\\", function() { return mergeAll; });\\n/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeMap.js\\\");\\n/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ \\\"./node_modules/rxjs/_esm5/internal/util/identity.js\\\");\\n/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\\n\\n\\nfunction mergeAll(concurrent) {\\n    if (concurrent === void 0) {\\n        concurrent = Number.POSITIVE_INFINITY;\\n    }\\n    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__[\\\"mergeMap\\\"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__[\\\"identity\\\"], concurrent);\\n}\\n//# sourceMappingURL=mergeAll.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/mergeAll.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/mergeMap.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMap.js ***!\n  \\****************************************************************/\n/*! exports provided: mergeMap, MergeMapOperator, MergeMapSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mergeMap\\\", function() { return mergeMap; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MergeMapOperator\\\", function() { return MergeMapOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MergeMapSubscriber\\\", function() { return MergeMapSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction mergeMap(project, resultSelector, concurrent) {\\n    if (concurrent === void 0) {\\n        concurrent = Number.POSITIVE_INFINITY;\\n    }\\n    if (typeof resultSelector === 'function') {\\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__[\\\"from\\\"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__[\\\"map\\\"])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\\n    }\\n    else if (typeof resultSelector === 'number') {\\n        concurrent = resultSelector;\\n    }\\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\\n}\\nvar MergeMapOperator = /*@__PURE__*/ (function () {\\n    function MergeMapOperator(project, concurrent) {\\n        if (concurrent === void 0) {\\n            concurrent = Number.POSITIVE_INFINITY;\\n        }\\n        this.project = project;\\n        this.concurrent = concurrent;\\n    }\\n    MergeMapOperator.prototype.call = function (observer, source) {\\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\\n    };\\n    return MergeMapOperator;\\n}());\\n\\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](MergeMapSubscriber, _super);\\n    function MergeMapSubscriber(destination, project, concurrent) {\\n        if (concurrent === void 0) {\\n            concurrent = Number.POSITIVE_INFINITY;\\n        }\\n        var _this = _super.call(this, destination) || this;\\n        _this.project = project;\\n        _this.concurrent = concurrent;\\n        _this.hasCompleted = false;\\n        _this.buffer = [];\\n        _this.active = 0;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    MergeMapSubscriber.prototype._next = function (value) {\\n        if (this.active < this.concurrent) {\\n            this._tryNext(value);\\n        }\\n        else {\\n            this.buffer.push(value);\\n        }\\n    };\\n    MergeMapSubscriber.prototype._tryNext = function (value) {\\n        var result;\\n        var index = this.index++;\\n        try {\\n            result = this.project(value, index);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.active++;\\n        this._innerSub(result, value, index);\\n    };\\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\\n        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"InnerSubscriber\\\"](this, undefined, undefined);\\n        var destination = this.destination;\\n        destination.add(innerSubscriber);\\n        Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeToResult\\\"])(this, ish, value, index, innerSubscriber);\\n    };\\n    MergeMapSubscriber.prototype._complete = function () {\\n        this.hasCompleted = true;\\n        if (this.active === 0 && this.buffer.length === 0) {\\n            this.destination.complete();\\n        }\\n        this.unsubscribe();\\n    };\\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.destination.next(innerValue);\\n    };\\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\\n        var buffer = this.buffer;\\n        this.remove(innerSub);\\n        this.active--;\\n        if (buffer.length > 0) {\\n            this._next(buffer.shift());\\n        }\\n        else if (this.active === 0 && this.hasCompleted) {\\n            this.destination.complete();\\n        }\\n    };\\n    return MergeMapSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n\\n//# sourceMappingURL=mergeMap.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/mergeMap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js ***!\n  \\******************************************************************/\n/*! exports provided: mergeMapTo */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mergeMapTo\\\", function() { return mergeMapTo; });\\n/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeMap.js\\\");\\n/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\\n\\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\\n    if (concurrent === void 0) {\\n        concurrent = Number.POSITIVE_INFINITY;\\n    }\\n    if (typeof resultSelector === 'function') {\\n        return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__[\\\"mergeMap\\\"])(function () { return innerObservable; }, resultSelector, concurrent);\\n    }\\n    if (typeof resultSelector === 'number') {\\n        concurrent = resultSelector;\\n    }\\n    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__[\\\"mergeMap\\\"])(function () { return innerObservable; }, concurrent);\\n}\\n//# sourceMappingURL=mergeMapTo.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/mergeScan.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeScan.js ***!\n  \\*****************************************************************/\n/*! exports provided: mergeScan, MergeScanOperator, MergeScanSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mergeScan\\\", function() { return mergeScan; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MergeScanOperator\\\", function() { return MergeScanOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MergeScanSubscriber\\\", function() { return MergeScanSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction mergeScan(accumulator, seed, concurrent) {\\n    if (concurrent === void 0) {\\n        concurrent = Number.POSITIVE_INFINITY;\\n    }\\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\\n}\\nvar MergeScanOperator = /*@__PURE__*/ (function () {\\n    function MergeScanOperator(accumulator, seed, concurrent) {\\n        this.accumulator = accumulator;\\n        this.seed = seed;\\n        this.concurrent = concurrent;\\n    }\\n    MergeScanOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\\n    };\\n    return MergeScanOperator;\\n}());\\n\\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](MergeScanSubscriber, _super);\\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.accumulator = accumulator;\\n        _this.acc = acc;\\n        _this.concurrent = concurrent;\\n        _this.hasValue = false;\\n        _this.hasCompleted = false;\\n        _this.buffer = [];\\n        _this.active = 0;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    MergeScanSubscriber.prototype._next = function (value) {\\n        if (this.active < this.concurrent) {\\n            var index = this.index++;\\n            var destination = this.destination;\\n            var ish = void 0;\\n            try {\\n                var accumulator = this.accumulator;\\n                ish = accumulator(this.acc, value, index);\\n            }\\n            catch (e) {\\n                return destination.error(e);\\n            }\\n            this.active++;\\n            this._innerSub(ish, value, index);\\n        }\\n        else {\\n            this.buffer.push(value);\\n        }\\n    };\\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\\n        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"InnerSubscriber\\\"](this, undefined, undefined);\\n        var destination = this.destination;\\n        destination.add(innerSubscriber);\\n        Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeToResult\\\"])(this, ish, value, index, innerSubscriber);\\n    };\\n    MergeScanSubscriber.prototype._complete = function () {\\n        this.hasCompleted = true;\\n        if (this.active === 0 && this.buffer.length === 0) {\\n            if (this.hasValue === false) {\\n                this.destination.next(this.acc);\\n            }\\n            this.destination.complete();\\n        }\\n        this.unsubscribe();\\n    };\\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        var destination = this.destination;\\n        this.acc = innerValue;\\n        this.hasValue = true;\\n        destination.next(innerValue);\\n    };\\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\\n        var buffer = this.buffer;\\n        var destination = this.destination;\\n        destination.remove(innerSub);\\n        this.active--;\\n        if (buffer.length > 0) {\\n            this._next(buffer.shift());\\n        }\\n        else if (this.active === 0 && this.hasCompleted) {\\n            if (this.hasValue === false) {\\n                this.destination.next(this.acc);\\n            }\\n            this.destination.complete();\\n        }\\n    };\\n    return MergeScanSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n\\n//# sourceMappingURL=mergeScan.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/mergeScan.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/min.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/min.js ***!\n  \\***********************************************************/\n/*! exports provided: min */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"min\\\", function() { return min; });\\n/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ \\\"./node_modules/rxjs/_esm5/internal/operators/reduce.js\\\");\\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\\n\\nfunction min(comparer) {\\n    var min = (typeof comparer === 'function')\\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\\n        : function (x, y) { return x < y ? x : y; };\\n    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__[\\\"reduce\\\"])(min);\\n}\\n//# sourceMappingURL=min.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/min.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/multicast.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/multicast.js ***!\n  \\*****************************************************************/\n/*! exports provided: multicast, MulticastOperator */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"multicast\\\", function() { return multicast; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MulticastOperator\\\", function() { return MulticastOperator; });\\n/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/ConnectableObservable */ \\\"./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js\\\");\\n/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\\n\\nfunction multicast(subjectOrSubjectFactory, selector) {\\n    return function multicastOperatorFunction(source) {\\n        var subjectFactory;\\n        if (typeof subjectOrSubjectFactory === 'function') {\\n            subjectFactory = subjectOrSubjectFactory;\\n        }\\n        else {\\n            subjectFactory = function subjectFactory() {\\n                return subjectOrSubjectFactory;\\n            };\\n        }\\n        if (typeof selector === 'function') {\\n            return source.lift(new MulticastOperator(subjectFactory, selector));\\n        }\\n        var connectable = Object.create(source, _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__[\\\"connectableObservableDescriptor\\\"]);\\n        connectable.source = source;\\n        connectable.subjectFactory = subjectFactory;\\n        return connectable;\\n    };\\n}\\nvar MulticastOperator = /*@__PURE__*/ (function () {\\n    function MulticastOperator(subjectFactory, selector) {\\n        this.subjectFactory = subjectFactory;\\n        this.selector = selector;\\n    }\\n    MulticastOperator.prototype.call = function (subscriber, source) {\\n        var selector = this.selector;\\n        var subject = this.subjectFactory();\\n        var subscription = selector(subject).subscribe(subscriber);\\n        subscription.add(source.subscribe(subject));\\n        return subscription;\\n    };\\n    return MulticastOperator;\\n}());\\n\\n//# sourceMappingURL=multicast.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/multicast.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/observeOn.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/observeOn.js ***!\n  \\*****************************************************************/\n/*! exports provided: observeOn, ObserveOnOperator, ObserveOnSubscriber, ObserveOnMessage */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"observeOn\\\", function() { return observeOn; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ObserveOnOperator\\\", function() { return ObserveOnOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ObserveOnSubscriber\\\", function() { return ObserveOnSubscriber; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ObserveOnMessage\\\", function() { return ObserveOnMessage; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ \\\"./node_modules/rxjs/_esm5/internal/Notification.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\\n\\n\\n\\nfunction observeOn(scheduler, delay) {\\n    if (delay === void 0) {\\n        delay = 0;\\n    }\\n    return function observeOnOperatorFunction(source) {\\n        return source.lift(new ObserveOnOperator(scheduler, delay));\\n    };\\n}\\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\\n    function ObserveOnOperator(scheduler, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        this.scheduler = scheduler;\\n        this.delay = delay;\\n    }\\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\\n    };\\n    return ObserveOnOperator;\\n}());\\n\\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ObserveOnSubscriber, _super);\\n    function ObserveOnSubscriber(destination, scheduler, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        var _this = _super.call(this, destination) || this;\\n        _this.scheduler = scheduler;\\n        _this.delay = delay;\\n        return _this;\\n    }\\n    ObserveOnSubscriber.dispatch = function (arg) {\\n        var notification = arg.notification, destination = arg.destination;\\n        notification.observe(destination);\\n        this.unsubscribe();\\n    };\\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\\n        var destination = this.destination;\\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\\n    };\\n    ObserveOnSubscriber.prototype._next = function (value) {\\n        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__[\\\"Notification\\\"].createNext(value));\\n    };\\n    ObserveOnSubscriber.prototype._error = function (err) {\\n        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__[\\\"Notification\\\"].createError(err));\\n        this.unsubscribe();\\n    };\\n    ObserveOnSubscriber.prototype._complete = function () {\\n        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__[\\\"Notification\\\"].createComplete());\\n        this.unsubscribe();\\n    };\\n    return ObserveOnSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n\\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\\n    function ObserveOnMessage(notification, destination) {\\n        this.notification = notification;\\n        this.destination = destination;\\n    }\\n    return ObserveOnMessage;\\n}());\\n\\n//# sourceMappingURL=observeOn.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/observeOn.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js ***!\n  \\*************************************************************************/\n/*! exports provided: onErrorResumeNext, onErrorResumeNextStatic */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"onErrorResumeNext\\\", function() { return onErrorResumeNext; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"onErrorResumeNextStatic\\\", function() { return onErrorResumeNextStatic; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction onErrorResumeNext() {\\n    var nextSources = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        nextSources[_i] = arguments[_i];\\n    }\\n    if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(nextSources[0])) {\\n        nextSources = nextSources[0];\\n    }\\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\\n}\\nfunction onErrorResumeNextStatic() {\\n    var nextSources = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        nextSources[_i] = arguments[_i];\\n    }\\n    var source = null;\\n    if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(nextSources[0])) {\\n        nextSources = nextSources[0];\\n    }\\n    source = nextSources.shift();\\n    return Object(_observable_from__WEBPACK_IMPORTED_MODULE_1__[\\\"from\\\"])(source, null).lift(new OnErrorResumeNextOperator(nextSources));\\n}\\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\\n    function OnErrorResumeNextOperator(nextSources) {\\n        this.nextSources = nextSources;\\n    }\\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\\n    };\\n    return OnErrorResumeNextOperator;\\n}());\\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](OnErrorResumeNextSubscriber, _super);\\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.destination = destination;\\n        _this.nextSources = nextSources;\\n        return _this;\\n    }\\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\\n        this.subscribeToNextSource();\\n    };\\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\\n        this.subscribeToNextSource();\\n    };\\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\\n        this.subscribeToNextSource();\\n        this.unsubscribe();\\n    };\\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\\n        this.subscribeToNextSource();\\n        this.unsubscribe();\\n    };\\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\\n        var next = this.nextSources.shift();\\n        if (!!next) {\\n            var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_4__[\\\"InnerSubscriber\\\"](this, undefined, undefined);\\n            var destination = this.destination;\\n            destination.add(innerSubscriber);\\n            Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__[\\\"subscribeToResult\\\"])(this, next, undefined, undefined, innerSubscriber);\\n        }\\n        else {\\n            this.destination.complete();\\n        }\\n    };\\n    return OnErrorResumeNextSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=onErrorResumeNext.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/pairwise.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/pairwise.js ***!\n  \\****************************************************************/\n/*! exports provided: pairwise */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pairwise\\\", function() { return pairwise; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction pairwise() {\\n    return function (source) { return source.lift(new PairwiseOperator()); };\\n}\\nvar PairwiseOperator = /*@__PURE__*/ (function () {\\n    function PairwiseOperator() {\\n    }\\n    PairwiseOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new PairwiseSubscriber(subscriber));\\n    };\\n    return PairwiseOperator;\\n}());\\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](PairwiseSubscriber, _super);\\n    function PairwiseSubscriber(destination) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.hasPrev = false;\\n        return _this;\\n    }\\n    PairwiseSubscriber.prototype._next = function (value) {\\n        var pair;\\n        if (this.hasPrev) {\\n            pair = [this.prev, value];\\n        }\\n        else {\\n            this.hasPrev = true;\\n        }\\n        this.prev = value;\\n        if (pair) {\\n            this.destination.next(pair);\\n        }\\n    };\\n    return PairwiseSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=pairwise.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/pairwise.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/partition.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/partition.js ***!\n  \\*****************************************************************/\n/*! exports provided: partition */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"partition\\\", function() { return partition; });\\n/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ \\\"./node_modules/rxjs/_esm5/internal/util/not.js\\\");\\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ \\\"./node_modules/rxjs/_esm5/internal/operators/filter.js\\\");\\n/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */\\n\\n\\nfunction partition(predicate, thisArg) {\\n    return function (source) {\\n        return [\\n            Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\\\"filter\\\"])(predicate, thisArg)(source),\\n            Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\\\"filter\\\"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__[\\\"not\\\"])(predicate, thisArg))(source)\\n        ];\\n    };\\n}\\n//# sourceMappingURL=partition.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/partition.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/pluck.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/pluck.js ***!\n  \\*************************************************************/\n/*! exports provided: pluck */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pluck\\\", function() { return pluck; });\\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\\n\\nfunction pluck() {\\n    var properties = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        properties[_i] = arguments[_i];\\n    }\\n    var length = properties.length;\\n    if (length === 0) {\\n        throw new Error('list of properties cannot be empty.');\\n    }\\n    return function (source) { return Object(_map__WEBPACK_IMPORTED_MODULE_0__[\\\"map\\\"])(plucker(properties, length))(source); };\\n}\\nfunction plucker(props, length) {\\n    var mapper = function (x) {\\n        var currentProp = x;\\n        for (var i = 0; i < length; i++) {\\n            var p = currentProp[props[i]];\\n            if (typeof p !== 'undefined') {\\n                currentProp = p;\\n            }\\n            else {\\n                return undefined;\\n            }\\n        }\\n        return currentProp;\\n    };\\n    return mapper;\\n}\\n//# sourceMappingURL=pluck.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/pluck.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/publish.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/publish.js ***!\n  \\***************************************************************/\n/*! exports provided: publish */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"publish\\\", function() { return publish; });\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ \\\"./node_modules/rxjs/_esm5/internal/operators/multicast.js\\\");\\n/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */\\n\\n\\nfunction publish(selector) {\\n    return selector ?\\n        Object(_multicast__WEBPACK_IMPORTED_MODULE_1__[\\\"multicast\\\"])(function () { return new _Subject__WEBPACK_IMPORTED_MODULE_0__[\\\"Subject\\\"](); }, selector) :\\n        Object(_multicast__WEBPACK_IMPORTED_MODULE_1__[\\\"multicast\\\"])(new _Subject__WEBPACK_IMPORTED_MODULE_0__[\\\"Subject\\\"]());\\n}\\n//# sourceMappingURL=publish.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/publish.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js ***!\n  \\***********************************************************************/\n/*! exports provided: publishBehavior */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"publishBehavior\\\", function() { return publishBehavior; });\\n/* harmony import */ var _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BehaviorSubject */ \\\"./node_modules/rxjs/_esm5/internal/BehaviorSubject.js\\\");\\n/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ \\\"./node_modules/rxjs/_esm5/internal/operators/multicast.js\\\");\\n/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\\n\\n\\nfunction publishBehavior(value) {\\n    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__[\\\"multicast\\\"])(new _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__[\\\"BehaviorSubject\\\"](value))(source); };\\n}\\n//# sourceMappingURL=publishBehavior.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/publishLast.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/publishLast.js ***!\n  \\*******************************************************************/\n/*! exports provided: publishLast */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"publishLast\\\", function() { return publishLast; });\\n/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AsyncSubject */ \\\"./node_modules/rxjs/_esm5/internal/AsyncSubject.js\\\");\\n/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ \\\"./node_modules/rxjs/_esm5/internal/operators/multicast.js\\\");\\n/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */\\n\\n\\nfunction publishLast() {\\n    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__[\\\"multicast\\\"])(new _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__[\\\"AsyncSubject\\\"]())(source); };\\n}\\n//# sourceMappingURL=publishLast.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/publishLast.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/publishReplay.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/publishReplay.js ***!\n  \\*********************************************************************/\n/*! exports provided: publishReplay */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"publishReplay\\\", function() { return publishReplay; });\\n/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ \\\"./node_modules/rxjs/_esm5/internal/ReplaySubject.js\\\");\\n/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ \\\"./node_modules/rxjs/_esm5/internal/operators/multicast.js\\\");\\n/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */\\n\\n\\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\\n        scheduler = selectorOrScheduler;\\n    }\\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\\n    var subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__[\\\"ReplaySubject\\\"](bufferSize, windowTime, scheduler);\\n    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__[\\\"multicast\\\"])(function () { return subject; }, selector)(source); };\\n}\\n//# sourceMappingURL=publishReplay.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/publishReplay.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/race.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/race.js ***!\n  \\************************************************************/\n/*! exports provided: race */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"race\\\", function() { return race; });\\n/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/* harmony import */ var _observable_race__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/race */ \\\"./node_modules/rxjs/_esm5/internal/observable/race.js\\\");\\n/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */\\n\\n\\nfunction race() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    return function raceOperatorFunction(source) {\\n        if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__[\\\"isArray\\\"])(observables[0])) {\\n            observables = observables[0];\\n        }\\n        return source.lift.call(_observable_race__WEBPACK_IMPORTED_MODULE_1__[\\\"race\\\"].apply(void 0, [source].concat(observables)));\\n    };\\n}\\n//# sourceMappingURL=race.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/race.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/reduce.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/reduce.js ***!\n  \\**************************************************************/\n/*! exports provided: reduce */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"reduce\\\", function() { return reduce; });\\n/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scan */ \\\"./node_modules/rxjs/_esm5/internal/operators/scan.js\\\");\\n/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./takeLast */ \\\"./node_modules/rxjs/_esm5/internal/operators/takeLast.js\\\");\\n/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js\\\");\\n/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/pipe */ \\\"./node_modules/rxjs/_esm5/internal/util/pipe.js\\\");\\n/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction reduce(accumulator, seed) {\\n    if (arguments.length >= 2) {\\n        return function reduceOperatorFunctionWithSeed(source) {\\n            return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__[\\\"pipe\\\"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__[\\\"scan\\\"])(accumulator, seed), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__[\\\"takeLast\\\"])(1), Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__[\\\"defaultIfEmpty\\\"])(seed))(source);\\n        };\\n    }\\n    return function reduceOperatorFunction(source) {\\n        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__[\\\"pipe\\\"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__[\\\"scan\\\"])(function (acc, value, index) { return accumulator(acc, value, index + 1); }), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__[\\\"takeLast\\\"])(1))(source);\\n    };\\n}\\n//# sourceMappingURL=reduce.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/reduce.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/refCount.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/refCount.js ***!\n  \\****************************************************************/\n/*! exports provided: refCount */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"refCount\\\", function() { return refCount; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction refCount() {\\n    return function refCountOperatorFunction(source) {\\n        return source.lift(new RefCountOperator(source));\\n    };\\n}\\nvar RefCountOperator = /*@__PURE__*/ (function () {\\n    function RefCountOperator(connectable) {\\n        this.connectable = connectable;\\n    }\\n    RefCountOperator.prototype.call = function (subscriber, source) {\\n        var connectable = this.connectable;\\n        connectable._refCount++;\\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\\n        var subscription = source.subscribe(refCounter);\\n        if (!refCounter.closed) {\\n            refCounter.connection = connectable.connect();\\n        }\\n        return subscription;\\n    };\\n    return RefCountOperator;\\n}());\\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RefCountSubscriber, _super);\\n    function RefCountSubscriber(destination, connectable) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.connectable = connectable;\\n        return _this;\\n    }\\n    RefCountSubscriber.prototype._unsubscribe = function () {\\n        var connectable = this.connectable;\\n        if (!connectable) {\\n            this.connection = null;\\n            return;\\n        }\\n        this.connectable = null;\\n        var refCount = connectable._refCount;\\n        if (refCount <= 0) {\\n            this.connection = null;\\n            return;\\n        }\\n        connectable._refCount = refCount - 1;\\n        if (refCount > 1) {\\n            this.connection = null;\\n            return;\\n        }\\n        var connection = this.connection;\\n        var sharedConnection = connectable._connection;\\n        this.connection = null;\\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\\n            sharedConnection.unsubscribe();\\n        }\\n    };\\n    return RefCountSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=refCount.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/refCount.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/repeat.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/repeat.js ***!\n  \\**************************************************************/\n/*! exports provided: repeat */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"repeat\\\", function() { return repeat; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\\n\\n\\n\\nfunction repeat(count) {\\n    if (count === void 0) {\\n        count = -1;\\n    }\\n    return function (source) {\\n        if (count === 0) {\\n            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_2__[\\\"empty\\\"])();\\n        }\\n        else if (count < 0) {\\n            return source.lift(new RepeatOperator(-1, source));\\n        }\\n        else {\\n            return source.lift(new RepeatOperator(count - 1, source));\\n        }\\n    };\\n}\\nvar RepeatOperator = /*@__PURE__*/ (function () {\\n    function RepeatOperator(count, source) {\\n        this.count = count;\\n        this.source = source;\\n    }\\n    RepeatOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\\n    };\\n    return RepeatOperator;\\n}());\\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RepeatSubscriber, _super);\\n    function RepeatSubscriber(destination, count, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.count = count;\\n        _this.source = source;\\n        return _this;\\n    }\\n    RepeatSubscriber.prototype.complete = function () {\\n        if (!this.isStopped) {\\n            var _a = this, source = _a.source, count = _a.count;\\n            if (count === 0) {\\n                return _super.prototype.complete.call(this);\\n            }\\n            else if (count > -1) {\\n                this.count = count - 1;\\n            }\\n            source.subscribe(this._unsubscribeAndRecycle());\\n        }\\n    };\\n    return RepeatSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=repeat.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/repeat.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js ***!\n  \\******************************************************************/\n/*! exports provided: repeatWhen */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"repeatWhen\\\", function() { return repeatWhen; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction repeatWhen(notifier) {\\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\\n}\\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\\n    function RepeatWhenOperator(notifier) {\\n        this.notifier = notifier;\\n    }\\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\\n    };\\n    return RepeatWhenOperator;\\n}());\\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RepeatWhenSubscriber, _super);\\n    function RepeatWhenSubscriber(destination, notifier, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.notifier = notifier;\\n        _this.source = source;\\n        _this.sourceIsBeingSubscribedTo = true;\\n        return _this;\\n    }\\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.sourceIsBeingSubscribedTo = true;\\n        this.source.subscribe(this);\\n    };\\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\\n        if (this.sourceIsBeingSubscribedTo === false) {\\n            return _super.prototype.complete.call(this);\\n        }\\n    };\\n    RepeatWhenSubscriber.prototype.complete = function () {\\n        this.sourceIsBeingSubscribedTo = false;\\n        if (!this.isStopped) {\\n            if (!this.retries) {\\n                this.subscribeToRetries();\\n            }\\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\\n                return _super.prototype.complete.call(this);\\n            }\\n            this._unsubscribeAndRecycle();\\n            this.notifications.next();\\n        }\\n    };\\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\\n        if (notifications) {\\n            notifications.unsubscribe();\\n            this.notifications = null;\\n        }\\n        if (retriesSubscription) {\\n            retriesSubscription.unsubscribe();\\n            this.retriesSubscription = null;\\n        }\\n        this.retries = null;\\n    };\\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\\n        var _unsubscribe = this._unsubscribe;\\n        this._unsubscribe = null;\\n        _super.prototype._unsubscribeAndRecycle.call(this);\\n        this._unsubscribe = _unsubscribe;\\n        return this;\\n    };\\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\\n        this.notifications = new _Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]();\\n        var retries;\\n        try {\\n            var notifier = this.notifier;\\n            retries = notifier(this.notifications);\\n        }\\n        catch (e) {\\n            return _super.prototype.complete.call(this);\\n        }\\n        this.retries = retries;\\n        this.retriesSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, retries);\\n    };\\n    return RepeatWhenSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=repeatWhen.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/retry.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/retry.js ***!\n  \\*************************************************************/\n/*! exports provided: retry */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"retry\\\", function() { return retry; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction retry(count) {\\n    if (count === void 0) {\\n        count = -1;\\n    }\\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\\n}\\nvar RetryOperator = /*@__PURE__*/ (function () {\\n    function RetryOperator(count, source) {\\n        this.count = count;\\n        this.source = source;\\n    }\\n    RetryOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\\n    };\\n    return RetryOperator;\\n}());\\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RetrySubscriber, _super);\\n    function RetrySubscriber(destination, count, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.count = count;\\n        _this.source = source;\\n        return _this;\\n    }\\n    RetrySubscriber.prototype.error = function (err) {\\n        if (!this.isStopped) {\\n            var _a = this, source = _a.source, count = _a.count;\\n            if (count === 0) {\\n                return _super.prototype.error.call(this, err);\\n            }\\n            else if (count > -1) {\\n                this.count = count - 1;\\n            }\\n            source.subscribe(this._unsubscribeAndRecycle());\\n        }\\n    };\\n    return RetrySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=retry.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/retry.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/retryWhen.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/retryWhen.js ***!\n  \\*****************************************************************/\n/*! exports provided: retryWhen */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"retryWhen\\\", function() { return retryWhen; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction retryWhen(notifier) {\\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\\n}\\nvar RetryWhenOperator = /*@__PURE__*/ (function () {\\n    function RetryWhenOperator(notifier, source) {\\n        this.notifier = notifier;\\n        this.source = source;\\n    }\\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\\n    };\\n    return RetryWhenOperator;\\n}());\\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](RetryWhenSubscriber, _super);\\n    function RetryWhenSubscriber(destination, notifier, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.notifier = notifier;\\n        _this.source = source;\\n        return _this;\\n    }\\n    RetryWhenSubscriber.prototype.error = function (err) {\\n        if (!this.isStopped) {\\n            var errors = this.errors;\\n            var retries = this.retries;\\n            var retriesSubscription = this.retriesSubscription;\\n            if (!retries) {\\n                errors = new _Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]();\\n                try {\\n                    var notifier = this.notifier;\\n                    retries = notifier(errors);\\n                }\\n                catch (e) {\\n                    return _super.prototype.error.call(this, e);\\n                }\\n                retriesSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, retries);\\n            }\\n            else {\\n                this.errors = null;\\n                this.retriesSubscription = null;\\n            }\\n            this._unsubscribeAndRecycle();\\n            this.errors = errors;\\n            this.retries = retries;\\n            this.retriesSubscription = retriesSubscription;\\n            errors.next(err);\\n        }\\n    };\\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\\n        if (errors) {\\n            errors.unsubscribe();\\n            this.errors = null;\\n        }\\n        if (retriesSubscription) {\\n            retriesSubscription.unsubscribe();\\n            this.retriesSubscription = null;\\n        }\\n        this.retries = null;\\n    };\\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        var _unsubscribe = this._unsubscribe;\\n        this._unsubscribe = null;\\n        this._unsubscribeAndRecycle();\\n        this._unsubscribe = _unsubscribe;\\n        this.source.subscribe(this);\\n    };\\n    return RetryWhenSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=retryWhen.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/retryWhen.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/sample.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/sample.js ***!\n  \\**************************************************************/\n/*! exports provided: sample */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sample\\\", function() { return sample; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction sample(notifier) {\\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\\n}\\nvar SampleOperator = /*@__PURE__*/ (function () {\\n    function SampleOperator(notifier) {\\n        this.notifier = notifier;\\n    }\\n    SampleOperator.prototype.call = function (subscriber, source) {\\n        var sampleSubscriber = new SampleSubscriber(subscriber);\\n        var subscription = source.subscribe(sampleSubscriber);\\n        subscription.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(sampleSubscriber, this.notifier));\\n        return subscription;\\n    };\\n    return SampleOperator;\\n}());\\nvar SampleSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SampleSubscriber, _super);\\n    function SampleSubscriber() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.hasValue = false;\\n        return _this;\\n    }\\n    SampleSubscriber.prototype._next = function (value) {\\n        this.value = value;\\n        this.hasValue = true;\\n    };\\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.emitValue();\\n    };\\n    SampleSubscriber.prototype.notifyComplete = function () {\\n        this.emitValue();\\n    };\\n    SampleSubscriber.prototype.emitValue = function () {\\n        if (this.hasValue) {\\n            this.hasValue = false;\\n            this.destination.next(this.value);\\n        }\\n    };\\n    return SampleSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=sample.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/sample.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/sampleTime.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/sampleTime.js ***!\n  \\******************************************************************/\n/*! exports provided: sampleTime */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sampleTime\\\", function() { return sampleTime; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\\n\\n\\n\\nfunction sampleTime(period, scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__[\\\"async\\\"];\\n    }\\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\\n}\\nvar SampleTimeOperator = /*@__PURE__*/ (function () {\\n    function SampleTimeOperator(period, scheduler) {\\n        this.period = period;\\n        this.scheduler = scheduler;\\n    }\\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\\n    };\\n    return SampleTimeOperator;\\n}());\\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SampleTimeSubscriber, _super);\\n    function SampleTimeSubscriber(destination, period, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.period = period;\\n        _this.scheduler = scheduler;\\n        _this.hasValue = false;\\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\\n        return _this;\\n    }\\n    SampleTimeSubscriber.prototype._next = function (value) {\\n        this.lastValue = value;\\n        this.hasValue = true;\\n    };\\n    SampleTimeSubscriber.prototype.notifyNext = function () {\\n        if (this.hasValue) {\\n            this.hasValue = false;\\n            this.destination.next(this.lastValue);\\n        }\\n    };\\n    return SampleTimeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\nfunction dispatchNotification(state) {\\n    var subscriber = state.subscriber, period = state.period;\\n    subscriber.notifyNext();\\n    this.schedule(state, period);\\n}\\n//# sourceMappingURL=sampleTime.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/sampleTime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/scan.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/scan.js ***!\n  \\************************************************************/\n/*! exports provided: scan */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scan\\\", function() { return scan; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction scan(accumulator, seed) {\\n    var hasSeed = false;\\n    if (arguments.length >= 2) {\\n        hasSeed = true;\\n    }\\n    return function scanOperatorFunction(source) {\\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\\n    };\\n}\\nvar ScanOperator = /*@__PURE__*/ (function () {\\n    function ScanOperator(accumulator, seed, hasSeed) {\\n        if (hasSeed === void 0) {\\n            hasSeed = false;\\n        }\\n        this.accumulator = accumulator;\\n        this.seed = seed;\\n        this.hasSeed = hasSeed;\\n    }\\n    ScanOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\\n    };\\n    return ScanOperator;\\n}());\\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ScanSubscriber, _super);\\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.accumulator = accumulator;\\n        _this._seed = _seed;\\n        _this.hasSeed = hasSeed;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    Object.defineProperty(ScanSubscriber.prototype, \\\"seed\\\", {\\n        get: function () {\\n            return this._seed;\\n        },\\n        set: function (value) {\\n            this.hasSeed = true;\\n            this._seed = value;\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    ScanSubscriber.prototype._next = function (value) {\\n        if (!this.hasSeed) {\\n            this.seed = value;\\n            this.destination.next(value);\\n        }\\n        else {\\n            return this._tryNext(value);\\n        }\\n    };\\n    ScanSubscriber.prototype._tryNext = function (value) {\\n        var index = this.index++;\\n        var result;\\n        try {\\n            result = this.accumulator(this.seed, value, index);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n        }\\n        this.seed = result;\\n        this.destination.next(result);\\n    };\\n    return ScanSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=scan.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/scan.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js ***!\n  \\*********************************************************************/\n/*! exports provided: sequenceEqual, SequenceEqualOperator, SequenceEqualSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sequenceEqual\\\", function() { return sequenceEqual; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SequenceEqualOperator\\\", function() { return SequenceEqualOperator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SequenceEqualSubscriber\\\", function() { return SequenceEqualSubscriber; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction sequenceEqual(compareTo, comparator) {\\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };\\n}\\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\\n    function SequenceEqualOperator(compareTo, comparator) {\\n        this.compareTo = compareTo;\\n        this.comparator = comparator;\\n    }\\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\\n    };\\n    return SequenceEqualOperator;\\n}());\\n\\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SequenceEqualSubscriber, _super);\\n    function SequenceEqualSubscriber(destination, compareTo, comparator) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.compareTo = compareTo;\\n        _this.comparator = comparator;\\n        _this._a = [];\\n        _this._b = [];\\n        _this._oneComplete = false;\\n        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\\n        return _this;\\n    }\\n    SequenceEqualSubscriber.prototype._next = function (value) {\\n        if (this._oneComplete && this._b.length === 0) {\\n            this.emit(false);\\n        }\\n        else {\\n            this._a.push(value);\\n            this.checkValues();\\n        }\\n    };\\n    SequenceEqualSubscriber.prototype._complete = function () {\\n        if (this._oneComplete) {\\n            this.emit(this._a.length === 0 && this._b.length === 0);\\n        }\\n        else {\\n            this._oneComplete = true;\\n        }\\n        this.unsubscribe();\\n    };\\n    SequenceEqualSubscriber.prototype.checkValues = function () {\\n        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;\\n        while (_a.length > 0 && _b.length > 0) {\\n            var a = _a.shift();\\n            var b = _b.shift();\\n            var areEqual = false;\\n            try {\\n                areEqual = comparator ? comparator(a, b) : a === b;\\n            }\\n            catch (e) {\\n                this.destination.error(e);\\n            }\\n            if (!areEqual) {\\n                this.emit(false);\\n            }\\n        }\\n    };\\n    SequenceEqualSubscriber.prototype.emit = function (value) {\\n        var destination = this.destination;\\n        destination.next(value);\\n        destination.complete();\\n    };\\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\\n        if (this._oneComplete && this._a.length === 0) {\\n            this.emit(false);\\n        }\\n        else {\\n            this._b.push(value);\\n            this.checkValues();\\n        }\\n    };\\n    SequenceEqualSubscriber.prototype.completeB = function () {\\n        if (this._oneComplete) {\\n            this.emit(this._a.length === 0 && this._b.length === 0);\\n        }\\n        else {\\n            this._oneComplete = true;\\n        }\\n    };\\n    return SequenceEqualSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n\\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SequenceEqualCompareToSubscriber, _super);\\n    function SequenceEqualCompareToSubscriber(destination, parent) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.parent = parent;\\n        return _this;\\n    }\\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\\n        this.parent.nextB(value);\\n    };\\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\\n        this.parent.error(err);\\n        this.unsubscribe();\\n    };\\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\\n        this.parent.completeB();\\n        this.unsubscribe();\\n    };\\n    return SequenceEqualCompareToSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=sequenceEqual.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/share.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/share.js ***!\n  \\*************************************************************/\n/*! exports provided: share */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"share\\\", function() { return share; });\\n/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicast */ \\\"./node_modules/rxjs/_esm5/internal/operators/multicast.js\\\");\\n/* harmony import */ var _refCount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./refCount */ \\\"./node_modules/rxjs/_esm5/internal/operators/refCount.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\\n\\n\\n\\nfunction shareSubjectFactory() {\\n    return new _Subject__WEBPACK_IMPORTED_MODULE_2__[\\\"Subject\\\"]();\\n}\\nfunction share() {\\n    return function (source) { return Object(_refCount__WEBPACK_IMPORTED_MODULE_1__[\\\"refCount\\\"])()(Object(_multicast__WEBPACK_IMPORTED_MODULE_0__[\\\"multicast\\\"])(shareSubjectFactory)(source)); };\\n}\\n//# sourceMappingURL=share.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/share.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/shareReplay.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/shareReplay.js ***!\n  \\*******************************************************************/\n/*! exports provided: shareReplay */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"shareReplay\\\", function() { return shareReplay; });\\n/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ \\\"./node_modules/rxjs/_esm5/internal/ReplaySubject.js\\\");\\n/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\\n\\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\\n    var config;\\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\\n        config = configOrBufferSize;\\n    }\\n    else {\\n        config = {\\n            bufferSize: configOrBufferSize,\\n            windowTime: windowTime,\\n            refCount: false,\\n            scheduler: scheduler\\n        };\\n    }\\n    return function (source) { return source.lift(shareReplayOperator(config)); };\\n}\\nfunction shareReplayOperator(_a) {\\n    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;\\n    var subject;\\n    var refCount = 0;\\n    var subscription;\\n    var hasError = false;\\n    var isComplete = false;\\n    return function shareReplayOperation(source) {\\n        refCount++;\\n        if (!subject || hasError) {\\n            hasError = false;\\n            subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__[\\\"ReplaySubject\\\"](bufferSize, windowTime, scheduler);\\n            subscription = source.subscribe({\\n                next: function (value) { subject.next(value); },\\n                error: function (err) {\\n                    hasError = true;\\n                    subject.error(err);\\n                },\\n                complete: function () {\\n                    isComplete = true;\\n                    subject.complete();\\n                },\\n            });\\n        }\\n        var innerSub = subject.subscribe(this);\\n        this.add(function () {\\n            refCount--;\\n            innerSub.unsubscribe();\\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\\n                subscription.unsubscribe();\\n                subscription = undefined;\\n                subject = undefined;\\n            }\\n        });\\n    };\\n}\\n//# sourceMappingURL=shareReplay.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/shareReplay.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/single.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/single.js ***!\n  \\**************************************************************/\n/*! exports provided: single */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"single\\\", function() { return single; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/EmptyError */ \\\"./node_modules/rxjs/_esm5/internal/util/EmptyError.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\\n\\n\\n\\nfunction single(predicate) {\\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\\n}\\nvar SingleOperator = /*@__PURE__*/ (function () {\\n    function SingleOperator(predicate, source) {\\n        this.predicate = predicate;\\n        this.source = source;\\n    }\\n    SingleOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\\n    };\\n    return SingleOperator;\\n}());\\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SingleSubscriber, _super);\\n    function SingleSubscriber(destination, predicate, source) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.source = source;\\n        _this.seenValue = false;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    SingleSubscriber.prototype.applySingleValue = function (value) {\\n        if (this.seenValue) {\\n            this.destination.error('Sequence contains more than one element');\\n        }\\n        else {\\n            this.seenValue = true;\\n            this.singleValue = value;\\n        }\\n    };\\n    SingleSubscriber.prototype._next = function (value) {\\n        var index = this.index++;\\n        if (this.predicate) {\\n            this.tryNext(value, index);\\n        }\\n        else {\\n            this.applySingleValue(value);\\n        }\\n    };\\n    SingleSubscriber.prototype.tryNext = function (value, index) {\\n        try {\\n            if (this.predicate(value, index, this.source)) {\\n                this.applySingleValue(value);\\n            }\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n        }\\n    };\\n    SingleSubscriber.prototype._complete = function () {\\n        var destination = this.destination;\\n        if (this.index > 0) {\\n            destination.next(this.seenValue ? this.singleValue : undefined);\\n            destination.complete();\\n        }\\n        else {\\n            destination.error(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__[\\\"EmptyError\\\"]);\\n        }\\n    };\\n    return SingleSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=single.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/single.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/skip.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/skip.js ***!\n  \\************************************************************/\n/*! exports provided: skip */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"skip\\\", function() { return skip; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction skip(count) {\\n    return function (source) { return source.lift(new SkipOperator(count)); };\\n}\\nvar SkipOperator = /*@__PURE__*/ (function () {\\n    function SkipOperator(total) {\\n        this.total = total;\\n    }\\n    SkipOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\\n    };\\n    return SkipOperator;\\n}());\\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SkipSubscriber, _super);\\n    function SkipSubscriber(destination, total) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.total = total;\\n        _this.count = 0;\\n        return _this;\\n    }\\n    SkipSubscriber.prototype._next = function (x) {\\n        if (++this.count > this.total) {\\n            this.destination.next(x);\\n        }\\n    };\\n    return SkipSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=skip.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/skip.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/skipLast.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/skipLast.js ***!\n  \\****************************************************************/\n/*! exports provided: skipLast */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"skipLast\\\", function() { return skipLast; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ \\\"./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\\n\\n\\n\\nfunction skipLast(count) {\\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\\n}\\nvar SkipLastOperator = /*@__PURE__*/ (function () {\\n    function SkipLastOperator(_skipCount) {\\n        this._skipCount = _skipCount;\\n        if (this._skipCount < 0) {\\n            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__[\\\"ArgumentOutOfRangeError\\\"];\\n        }\\n    }\\n    SkipLastOperator.prototype.call = function (subscriber, source) {\\n        if (this._skipCount === 0) {\\n            return source.subscribe(new _Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"](subscriber));\\n        }\\n        else {\\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\\n        }\\n    };\\n    return SkipLastOperator;\\n}());\\nvar SkipLastSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SkipLastSubscriber, _super);\\n    function SkipLastSubscriber(destination, _skipCount) {\\n        var _this = _super.call(this, destination) || this;\\n        _this._skipCount = _skipCount;\\n        _this._count = 0;\\n        _this._ring = new Array(_skipCount);\\n        return _this;\\n    }\\n    SkipLastSubscriber.prototype._next = function (value) {\\n        var skipCount = this._skipCount;\\n        var count = this._count++;\\n        if (count < skipCount) {\\n            this._ring[count] = value;\\n        }\\n        else {\\n            var currentIndex = count % skipCount;\\n            var ring = this._ring;\\n            var oldValue = ring[currentIndex];\\n            ring[currentIndex] = value;\\n            this.destination.next(oldValue);\\n        }\\n    };\\n    return SkipLastSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=skipLast.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/skipLast.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/skipUntil.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/skipUntil.js ***!\n  \\*****************************************************************/\n/*! exports provided: skipUntil */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"skipUntil\\\", function() { return skipUntil; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction skipUntil(notifier) {\\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\\n}\\nvar SkipUntilOperator = /*@__PURE__*/ (function () {\\n    function SkipUntilOperator(notifier) {\\n        this.notifier = notifier;\\n    }\\n    SkipUntilOperator.prototype.call = function (destination, source) {\\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\\n    };\\n    return SkipUntilOperator;\\n}());\\nvar SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SkipUntilSubscriber, _super);\\n    function SkipUntilSubscriber(destination, notifier) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.hasValue = false;\\n        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"InnerSubscriber\\\"](_this, undefined, undefined);\\n        _this.add(innerSubscriber);\\n        _this.innerSubscription = innerSubscriber;\\n        Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(_this, notifier, undefined, undefined, innerSubscriber);\\n        return _this;\\n    }\\n    SkipUntilSubscriber.prototype._next = function (value) {\\n        if (this.hasValue) {\\n            _super.prototype._next.call(this, value);\\n        }\\n    };\\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.hasValue = true;\\n        if (this.innerSubscription) {\\n            this.innerSubscription.unsubscribe();\\n        }\\n    };\\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\\n    };\\n    return SkipUntilSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=skipUntil.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/skipUntil.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/skipWhile.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/skipWhile.js ***!\n  \\*****************************************************************/\n/*! exports provided: skipWhile */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"skipWhile\\\", function() { return skipWhile; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction skipWhile(predicate) {\\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\\n}\\nvar SkipWhileOperator = /*@__PURE__*/ (function () {\\n    function SkipWhileOperator(predicate) {\\n        this.predicate = predicate;\\n    }\\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\\n    };\\n    return SkipWhileOperator;\\n}());\\nvar SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SkipWhileSubscriber, _super);\\n    function SkipWhileSubscriber(destination, predicate) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.skipping = true;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    SkipWhileSubscriber.prototype._next = function (value) {\\n        var destination = this.destination;\\n        if (this.skipping) {\\n            this.tryCallPredicate(value);\\n        }\\n        if (!this.skipping) {\\n            destination.next(value);\\n        }\\n    };\\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\\n        try {\\n            var result = this.predicate(value, this.index++);\\n            this.skipping = Boolean(result);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n        }\\n    };\\n    return SkipWhileSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=skipWhile.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/skipWhile.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/startWith.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/startWith.js ***!\n  \\*****************************************************************/\n/*! exports provided: startWith */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"startWith\\\", function() { return startWith; });\\n/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ \\\"./node_modules/rxjs/_esm5/internal/observable/concat.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */\\n\\n\\nfunction startWith() {\\n    var array = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        array[_i] = arguments[_i];\\n    }\\n    var scheduler = array[array.length - 1];\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"isScheduler\\\"])(scheduler)) {\\n        array.pop();\\n        return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__[\\\"concat\\\"])(array, source, scheduler); };\\n    }\\n    else {\\n        return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__[\\\"concat\\\"])(array, source); };\\n    }\\n}\\n//# sourceMappingURL=startWith.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/startWith.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js ***!\n  \\*******************************************************************/\n/*! exports provided: subscribeOn */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeOn\\\", function() { return subscribeOn; });\\n/* harmony import */ var _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/SubscribeOnObservable */ \\\"./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js\\\");\\n/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\\n\\nfunction subscribeOn(scheduler, delay) {\\n    if (delay === void 0) {\\n        delay = 0;\\n    }\\n    return function subscribeOnOperatorFunction(source) {\\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\\n    };\\n}\\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\\n    function SubscribeOnOperator(scheduler, delay) {\\n        this.scheduler = scheduler;\\n        this.delay = delay;\\n    }\\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\\n        return new _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__[\\\"SubscribeOnObservable\\\"](source, this.delay, this.scheduler).subscribe(subscriber);\\n    };\\n    return SubscribeOnOperator;\\n}());\\n//# sourceMappingURL=subscribeOn.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/switchAll.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/switchAll.js ***!\n  \\*****************************************************************/\n/*! exports provided: switchAll */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"switchAll\\\", function() { return switchAll; });\\n/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/switchMap.js\\\");\\n/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ \\\"./node_modules/rxjs/_esm5/internal/util/identity.js\\\");\\n/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */\\n\\n\\nfunction switchAll() {\\n    return Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__[\\\"switchMap\\\"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__[\\\"identity\\\"]);\\n}\\n//# sourceMappingURL=switchAll.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/switchAll.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/switchMap.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/switchMap.js ***!\n  \\*****************************************************************/\n/*! exports provided: switchMap */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"switchMap\\\", function() { return switchMap; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ \\\"./node_modules/rxjs/_esm5/internal/observable/from.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction switchMap(project, resultSelector) {\\n    if (typeof resultSelector === 'function') {\\n        return function (source) { return source.pipe(switchMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__[\\\"from\\\"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__[\\\"map\\\"])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\\n    }\\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\\n}\\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\\n    function SwitchMapOperator(project) {\\n        this.project = project;\\n    }\\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\\n    };\\n    return SwitchMapOperator;\\n}());\\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](SwitchMapSubscriber, _super);\\n    function SwitchMapSubscriber(destination, project) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.project = project;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    SwitchMapSubscriber.prototype._next = function (value) {\\n        var result;\\n        var index = this.index++;\\n        try {\\n            result = this.project(value, index);\\n        }\\n        catch (error) {\\n            this.destination.error(error);\\n            return;\\n        }\\n        this._innerSub(result, value, index);\\n    };\\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\\n        var innerSubscription = this.innerSubscription;\\n        if (innerSubscription) {\\n            innerSubscription.unsubscribe();\\n        }\\n        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"InnerSubscriber\\\"](this, undefined, undefined);\\n        var destination = this.destination;\\n        destination.add(innerSubscriber);\\n        this.innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, result, value, index, innerSubscriber);\\n    };\\n    SwitchMapSubscriber.prototype._complete = function () {\\n        var innerSubscription = this.innerSubscription;\\n        if (!innerSubscription || innerSubscription.closed) {\\n            _super.prototype._complete.call(this);\\n        }\\n        this.unsubscribe();\\n    };\\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\\n        this.innerSubscription = null;\\n    };\\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\\n        var destination = this.destination;\\n        destination.remove(innerSub);\\n        this.innerSubscription = null;\\n        if (this.isStopped) {\\n            _super.prototype._complete.call(this);\\n        }\\n    };\\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.destination.next(innerValue);\\n    };\\n    return SwitchMapSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=switchMap.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/switchMap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js ***!\n  \\*******************************************************************/\n/*! exports provided: switchMapTo */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"switchMapTo\\\", function() { return switchMapTo; });\\n/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/switchMap.js\\\");\\n/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\\n\\nfunction switchMapTo(innerObservable, resultSelector) {\\n    return resultSelector ? Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__[\\\"switchMap\\\"])(function () { return innerObservable; }, resultSelector) : Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__[\\\"switchMap\\\"])(function () { return innerObservable; });\\n}\\n//# sourceMappingURL=switchMapTo.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/take.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/take.js ***!\n  \\************************************************************/\n/*! exports provided: take */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"take\\\", function() { return take; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ \\\"./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js\\\");\\n/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction take(count) {\\n    return function (source) {\\n        if (count === 0) {\\n            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__[\\\"empty\\\"])();\\n        }\\n        else {\\n            return source.lift(new TakeOperator(count));\\n        }\\n    };\\n}\\nvar TakeOperator = /*@__PURE__*/ (function () {\\n    function TakeOperator(total) {\\n        this.total = total;\\n        if (this.total < 0) {\\n            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__[\\\"ArgumentOutOfRangeError\\\"];\\n        }\\n    }\\n    TakeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\\n    };\\n    return TakeOperator;\\n}());\\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](TakeSubscriber, _super);\\n    function TakeSubscriber(destination, total) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.total = total;\\n        _this.count = 0;\\n        return _this;\\n    }\\n    TakeSubscriber.prototype._next = function (value) {\\n        var total = this.total;\\n        var count = ++this.count;\\n        if (count <= total) {\\n            this.destination.next(value);\\n            if (count === total) {\\n                this.destination.complete();\\n                this.unsubscribe();\\n            }\\n        }\\n    };\\n    return TakeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=take.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/take.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/takeLast.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/takeLast.js ***!\n  \\****************************************************************/\n/*! exports provided: takeLast */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"takeLast\\\", function() { return takeLast; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ \\\"./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js\\\");\\n/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/empty */ \\\"./node_modules/rxjs/_esm5/internal/observable/empty.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction takeLast(count) {\\n    return function takeLastOperatorFunction(source) {\\n        if (count === 0) {\\n            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__[\\\"empty\\\"])();\\n        }\\n        else {\\n            return source.lift(new TakeLastOperator(count));\\n        }\\n    };\\n}\\nvar TakeLastOperator = /*@__PURE__*/ (function () {\\n    function TakeLastOperator(total) {\\n        this.total = total;\\n        if (this.total < 0) {\\n            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__[\\\"ArgumentOutOfRangeError\\\"];\\n        }\\n    }\\n    TakeLastOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\\n    };\\n    return TakeLastOperator;\\n}());\\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](TakeLastSubscriber, _super);\\n    function TakeLastSubscriber(destination, total) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.total = total;\\n        _this.ring = new Array();\\n        _this.count = 0;\\n        return _this;\\n    }\\n    TakeLastSubscriber.prototype._next = function (value) {\\n        var ring = this.ring;\\n        var total = this.total;\\n        var count = this.count++;\\n        if (ring.length < total) {\\n            ring.push(value);\\n        }\\n        else {\\n            var index = count % total;\\n            ring[index] = value;\\n        }\\n    };\\n    TakeLastSubscriber.prototype._complete = function () {\\n        var destination = this.destination;\\n        var count = this.count;\\n        if (count > 0) {\\n            var total = this.count >= this.total ? this.total : this.count;\\n            var ring = this.ring;\\n            for (var i = 0; i < total; i++) {\\n                var idx = (count++) % total;\\n                destination.next(ring[idx]);\\n            }\\n        }\\n        destination.complete();\\n    };\\n    return TakeLastSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=takeLast.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/takeLast.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/takeUntil.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/takeUntil.js ***!\n  \\*****************************************************************/\n/*! exports provided: takeUntil */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"takeUntil\\\", function() { return takeUntil; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction takeUntil(notifier) {\\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\\n}\\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\\n    function TakeUntilOperator(notifier) {\\n        this.notifier = notifier;\\n    }\\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\\n        var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(takeUntilSubscriber, this.notifier);\\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\\n            takeUntilSubscriber.add(notifierSubscription);\\n            return source.subscribe(takeUntilSubscriber);\\n        }\\n        return takeUntilSubscriber;\\n    };\\n    return TakeUntilOperator;\\n}());\\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](TakeUntilSubscriber, _super);\\n    function TakeUntilSubscriber(destination) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.seenValue = false;\\n        return _this;\\n    }\\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.seenValue = true;\\n        this.complete();\\n    };\\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\\n    };\\n    return TakeUntilSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=takeUntil.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/takeUntil.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/takeWhile.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/takeWhile.js ***!\n  \\*****************************************************************/\n/*! exports provided: takeWhile */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"takeWhile\\\", function() { return takeWhile; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\\n\\n\\nfunction takeWhile(predicate, inclusive) {\\n    if (inclusive === void 0) {\\n        inclusive = false;\\n    }\\n    return function (source) {\\n        return source.lift(new TakeWhileOperator(predicate, inclusive));\\n    };\\n}\\nvar TakeWhileOperator = /*@__PURE__*/ (function () {\\n    function TakeWhileOperator(predicate, inclusive) {\\n        this.predicate = predicate;\\n        this.inclusive = inclusive;\\n    }\\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\\n    };\\n    return TakeWhileOperator;\\n}());\\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](TakeWhileSubscriber, _super);\\n    function TakeWhileSubscriber(destination, predicate, inclusive) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.predicate = predicate;\\n        _this.inclusive = inclusive;\\n        _this.index = 0;\\n        return _this;\\n    }\\n    TakeWhileSubscriber.prototype._next = function (value) {\\n        var destination = this.destination;\\n        var result;\\n        try {\\n            result = this.predicate(value, this.index++);\\n        }\\n        catch (err) {\\n            destination.error(err);\\n            return;\\n        }\\n        this.nextOrComplete(value, result);\\n    };\\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\\n        var destination = this.destination;\\n        if (Boolean(predicateResult)) {\\n            destination.next(value);\\n        }\\n        else {\\n            if (this.inclusive) {\\n                destination.next(value);\\n            }\\n            destination.complete();\\n        }\\n    };\\n    return TakeWhileSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=takeWhile.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/takeWhile.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/tap.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/tap.js ***!\n  \\***********************************************************/\n/*! exports provided: tap */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"tap\\\", function() { return tap; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/noop */ \\\"./node_modules/rxjs/_esm5/internal/util/noop.js\\\");\\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isFunction */ \\\"./node_modules/rxjs/_esm5/internal/util/isFunction.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction tap(nextOrObserver, error, complete) {\\n    return function tapOperatorFunction(source) {\\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\\n    };\\n}\\nvar DoOperator = /*@__PURE__*/ (function () {\\n    function DoOperator(nextOrObserver, error, complete) {\\n        this.nextOrObserver = nextOrObserver;\\n        this.error = error;\\n        this.complete = complete;\\n    }\\n    DoOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\\n    };\\n    return DoOperator;\\n}());\\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](TapSubscriber, _super);\\n    function TapSubscriber(destination, observerOrNext, error, complete) {\\n        var _this = _super.call(this, destination) || this;\\n        _this._tapNext = _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n        _this._tapError = _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n        _this._tapComplete = _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n        _this._tapError = error || _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n        _this._tapComplete = complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_3__[\\\"isFunction\\\"])(observerOrNext)) {\\n            _this._context = _this;\\n            _this._tapNext = observerOrNext;\\n        }\\n        else if (observerOrNext) {\\n            _this._context = observerOrNext;\\n            _this._tapNext = observerOrNext.next || _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n            _this._tapError = observerOrNext.error || _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n            _this._tapComplete = observerOrNext.complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__[\\\"noop\\\"];\\n        }\\n        return _this;\\n    }\\n    TapSubscriber.prototype._next = function (value) {\\n        try {\\n            this._tapNext.call(this._context, value);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.destination.next(value);\\n    };\\n    TapSubscriber.prototype._error = function (err) {\\n        try {\\n            this._tapError.call(this._context, err);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.destination.error(err);\\n    };\\n    TapSubscriber.prototype._complete = function () {\\n        try {\\n            this._tapComplete.call(this._context);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        return this.destination.complete();\\n    };\\n    return TapSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=tap.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/tap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/throttle.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/throttle.js ***!\n  \\****************************************************************/\n/*! exports provided: defaultThrottleConfig, throttle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"defaultThrottleConfig\\\", function() { return defaultThrottleConfig; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"throttle\\\", function() { return throttle; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nvar defaultThrottleConfig = {\\n    leading: true,\\n    trailing: false\\n};\\nfunction throttle(durationSelector, config) {\\n    if (config === void 0) {\\n        config = defaultThrottleConfig;\\n    }\\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\\n}\\nvar ThrottleOperator = /*@__PURE__*/ (function () {\\n    function ThrottleOperator(durationSelector, leading, trailing) {\\n        this.durationSelector = durationSelector;\\n        this.leading = leading;\\n        this.trailing = trailing;\\n    }\\n    ThrottleOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\\n    };\\n    return ThrottleOperator;\\n}());\\nvar ThrottleSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ThrottleSubscriber, _super);\\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.destination = destination;\\n        _this.durationSelector = durationSelector;\\n        _this._leading = _leading;\\n        _this._trailing = _trailing;\\n        _this._hasValue = false;\\n        return _this;\\n    }\\n    ThrottleSubscriber.prototype._next = function (value) {\\n        this._hasValue = true;\\n        this._sendValue = value;\\n        if (!this._throttled) {\\n            if (this._leading) {\\n                this.send();\\n            }\\n            else {\\n                this.throttle(value);\\n            }\\n        }\\n    };\\n    ThrottleSubscriber.prototype.send = function () {\\n        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;\\n        if (_hasValue) {\\n            this.destination.next(_sendValue);\\n            this.throttle(_sendValue);\\n        }\\n        this._hasValue = false;\\n        this._sendValue = null;\\n    };\\n    ThrottleSubscriber.prototype.throttle = function (value) {\\n        var duration = this.tryDurationSelector(value);\\n        if (!!duration) {\\n            this.add(this._throttled = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(this, duration));\\n        }\\n    };\\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\\n        try {\\n            return this.durationSelector(value);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return null;\\n        }\\n    };\\n    ThrottleSubscriber.prototype.throttlingDone = function () {\\n        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;\\n        if (_throttled) {\\n            _throttled.unsubscribe();\\n        }\\n        this._throttled = null;\\n        if (_trailing) {\\n            this.send();\\n        }\\n    };\\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.throttlingDone();\\n    };\\n    ThrottleSubscriber.prototype.notifyComplete = function () {\\n        this.throttlingDone();\\n    };\\n    return ThrottleSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=throttle.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/throttle.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/throttleTime.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/throttleTime.js ***!\n  \\********************************************************************/\n/*! exports provided: throttleTime */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"throttleTime\\\", function() { return throttleTime; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _throttle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throttle */ \\\"./node_modules/rxjs/_esm5/internal/operators/throttle.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction throttleTime(duration, scheduler, config) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__[\\\"async\\\"];\\n    }\\n    if (config === void 0) {\\n        config = _throttle__WEBPACK_IMPORTED_MODULE_3__[\\\"defaultThrottleConfig\\\"];\\n    }\\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\\n}\\nvar ThrottleTimeOperator = /*@__PURE__*/ (function () {\\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\\n        this.duration = duration;\\n        this.scheduler = scheduler;\\n        this.leading = leading;\\n        this.trailing = trailing;\\n    }\\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\\n    };\\n    return ThrottleTimeOperator;\\n}());\\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ThrottleTimeSubscriber, _super);\\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.duration = duration;\\n        _this.scheduler = scheduler;\\n        _this.leading = leading;\\n        _this.trailing = trailing;\\n        _this._hasTrailingValue = false;\\n        _this._trailingValue = null;\\n        return _this;\\n    }\\n    ThrottleTimeSubscriber.prototype._next = function (value) {\\n        if (this.throttled) {\\n            if (this.trailing) {\\n                this._trailingValue = value;\\n                this._hasTrailingValue = true;\\n            }\\n        }\\n        else {\\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\\n            if (this.leading) {\\n                this.destination.next(value);\\n            }\\n            else if (this.trailing) {\\n                this._trailingValue = value;\\n                this._hasTrailingValue = true;\\n            }\\n        }\\n    };\\n    ThrottleTimeSubscriber.prototype._complete = function () {\\n        if (this._hasTrailingValue) {\\n            this.destination.next(this._trailingValue);\\n            this.destination.complete();\\n        }\\n        else {\\n            this.destination.complete();\\n        }\\n    };\\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\\n        var throttled = this.throttled;\\n        if (throttled) {\\n            if (this.trailing && this._hasTrailingValue) {\\n                this.destination.next(this._trailingValue);\\n                this._trailingValue = null;\\n                this._hasTrailingValue = false;\\n            }\\n            throttled.unsubscribe();\\n            this.remove(throttled);\\n            this.throttled = null;\\n        }\\n    };\\n    return ThrottleTimeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\nfunction dispatchNext(arg) {\\n    var subscriber = arg.subscriber;\\n    subscriber.clearThrottle();\\n}\\n//# sourceMappingURL=throttleTime.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/throttleTime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js ***!\n  \\********************************************************************/\n/*! exports provided: throwIfEmpty */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"throwIfEmpty\\\", function() { return throwIfEmpty; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/EmptyError */ \\\"./node_modules/rxjs/_esm5/internal/util/EmptyError.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */\\n\\n\\n\\nfunction throwIfEmpty(errorFactory) {\\n    if (errorFactory === void 0) {\\n        errorFactory = defaultErrorFactory;\\n    }\\n    return function (source) {\\n        return source.lift(new ThrowIfEmptyOperator(errorFactory));\\n    };\\n}\\nvar ThrowIfEmptyOperator = /*@__PURE__*/ (function () {\\n    function ThrowIfEmptyOperator(errorFactory) {\\n        this.errorFactory = errorFactory;\\n    }\\n    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\\n    };\\n    return ThrowIfEmptyOperator;\\n}());\\nvar ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](ThrowIfEmptySubscriber, _super);\\n    function ThrowIfEmptySubscriber(destination, errorFactory) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.errorFactory = errorFactory;\\n        _this.hasValue = false;\\n        return _this;\\n    }\\n    ThrowIfEmptySubscriber.prototype._next = function (value) {\\n        this.hasValue = true;\\n        this.destination.next(value);\\n    };\\n    ThrowIfEmptySubscriber.prototype._complete = function () {\\n        if (!this.hasValue) {\\n            var err = void 0;\\n            try {\\n                err = this.errorFactory();\\n            }\\n            catch (e) {\\n                err = e;\\n            }\\n            this.destination.error(err);\\n        }\\n        else {\\n            return this.destination.complete();\\n        }\\n    };\\n    return ThrowIfEmptySubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscriber\\\"]));\\nfunction defaultErrorFactory() {\\n    return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__[\\\"EmptyError\\\"]();\\n}\\n//# sourceMappingURL=throwIfEmpty.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/timeInterval.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/timeInterval.js ***!\n  \\********************************************************************/\n/*! exports provided: timeInterval, TimeInterval */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"timeInterval\\\", function() { return timeInterval; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TimeInterval\\\", function() { return TimeInterval; });\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scan */ \\\"./node_modules/rxjs/_esm5/internal/operators/scan.js\\\");\\n/* harmony import */ var _observable_defer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/defer */ \\\"./node_modules/rxjs/_esm5/internal/observable/defer.js\\\");\\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction timeInterval(scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__[\\\"async\\\"];\\n    }\\n    return function (source) {\\n        return Object(_observable_defer__WEBPACK_IMPORTED_MODULE_2__[\\\"defer\\\"])(function () {\\n            return source.pipe(Object(_scan__WEBPACK_IMPORTED_MODULE_1__[\\\"scan\\\"])(function (_a, value) {\\n                var current = _a.current;\\n                return ({ value: value, current: scheduler.now(), last: current });\\n            }, { current: scheduler.now(), value: undefined, last: undefined }), Object(_map__WEBPACK_IMPORTED_MODULE_3__[\\\"map\\\"])(function (_a) {\\n                var current = _a.current, last = _a.last, value = _a.value;\\n                return new TimeInterval(value, current - last);\\n            }));\\n        });\\n    };\\n}\\nvar TimeInterval = /*@__PURE__*/ (function () {\\n    function TimeInterval(value, interval) {\\n        this.value = value;\\n        this.interval = interval;\\n    }\\n    return TimeInterval;\\n}());\\n\\n//# sourceMappingURL=timeInterval.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/timeInterval.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/timeout.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/timeout.js ***!\n  \\***************************************************************/\n/*! exports provided: timeout */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"timeout\\\", function() { return timeout; });\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TimeoutError */ \\\"./node_modules/rxjs/_esm5/internal/util/TimeoutError.js\\\");\\n/* harmony import */ var _timeoutWith__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeoutWith */ \\\"./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js\\\");\\n/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/throwError */ \\\"./node_modules/rxjs/_esm5/internal/observable/throwError.js\\\");\\n/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction timeout(due, scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__[\\\"async\\\"];\\n    }\\n    return Object(_timeoutWith__WEBPACK_IMPORTED_MODULE_2__[\\\"timeoutWith\\\"])(due, Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_3__[\\\"throwError\\\"])(new _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__[\\\"TimeoutError\\\"]()), scheduler);\\n}\\n//# sourceMappingURL=timeout.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/timeout.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js ***!\n  \\*******************************************************************/\n/*! exports provided: timeoutWith */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"timeoutWith\\\", function() { return timeoutWith; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isDate */ \\\"./node_modules/rxjs/_esm5/internal/util/isDate.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction timeoutWith(due, withObservable, scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__[\\\"async\\\"];\\n    }\\n    return function (source) {\\n        var absoluteTimeout = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__[\\\"isDate\\\"])(due);\\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\\n    };\\n}\\nvar TimeoutWithOperator = /*@__PURE__*/ (function () {\\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\\n        this.waitFor = waitFor;\\n        this.absoluteTimeout = absoluteTimeout;\\n        this.withObservable = withObservable;\\n        this.scheduler = scheduler;\\n    }\\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\\n    };\\n    return TimeoutWithOperator;\\n}());\\nvar TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](TimeoutWithSubscriber, _super);\\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.absoluteTimeout = absoluteTimeout;\\n        _this.waitFor = waitFor;\\n        _this.withObservable = withObservable;\\n        _this.scheduler = scheduler;\\n        _this.action = null;\\n        _this.scheduleTimeout();\\n        return _this;\\n    }\\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\\n        var withObservable = subscriber.withObservable;\\n        subscriber._unsubscribeAndRecycle();\\n        subscriber.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[\\\"subscribeToResult\\\"])(subscriber, withObservable));\\n    };\\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\\n        var action = this.action;\\n        if (action) {\\n            this.action = action.schedule(this, this.waitFor);\\n        }\\n        else {\\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\\n        }\\n    };\\n    TimeoutWithSubscriber.prototype._next = function (value) {\\n        if (!this.absoluteTimeout) {\\n            this.scheduleTimeout();\\n        }\\n        _super.prototype._next.call(this, value);\\n    };\\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\\n        this.action = null;\\n        this.scheduler = null;\\n        this.withObservable = null;\\n    };\\n    return TimeoutWithSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=timeoutWith.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/timestamp.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/timestamp.js ***!\n  \\*****************************************************************/\n/*! exports provided: timestamp, Timestamp */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"timestamp\\\", function() { return timestamp; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Timestamp\\\", function() { return Timestamp; });\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */\\n\\n\\nfunction timestamp(scheduler) {\\n    if (scheduler === void 0) {\\n        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__[\\\"async\\\"];\\n    }\\n    return Object(_map__WEBPACK_IMPORTED_MODULE_1__[\\\"map\\\"])(function (value) { return new Timestamp(value, scheduler.now()); });\\n}\\nvar Timestamp = /*@__PURE__*/ (function () {\\n    function Timestamp(value, timestamp) {\\n        this.value = value;\\n        this.timestamp = timestamp;\\n    }\\n    return Timestamp;\\n}());\\n\\n//# sourceMappingURL=timestamp.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/timestamp.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/toArray.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/toArray.js ***!\n  \\***************************************************************/\n/*! exports provided: toArray */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"toArray\\\", function() { return toArray; });\\n/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ \\\"./node_modules/rxjs/_esm5/internal/operators/reduce.js\\\");\\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\\n\\nfunction toArrayReducer(arr, item, index) {\\n    if (index === 0) {\\n        return [item];\\n    }\\n    arr.push(item);\\n    return arr;\\n}\\nfunction toArray() {\\n    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__[\\\"reduce\\\"])(toArrayReducer, []);\\n}\\n//# sourceMappingURL=toArray.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/toArray.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/window.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/window.js ***!\n  \\**************************************************************/\n/*! exports provided: window */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"window\\\", function() { return window; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction window(windowBoundaries) {\\n    return function windowOperatorFunction(source) {\\n        return source.lift(new WindowOperator(windowBoundaries));\\n    };\\n}\\nvar WindowOperator = /*@__PURE__*/ (function () {\\n    function WindowOperator(windowBoundaries) {\\n        this.windowBoundaries = windowBoundaries;\\n    }\\n    WindowOperator.prototype.call = function (subscriber, source) {\\n        var windowSubscriber = new WindowSubscriber(subscriber);\\n        var sourceSubscription = source.subscribe(windowSubscriber);\\n        if (!sourceSubscription.closed) {\\n            windowSubscriber.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(windowSubscriber, this.windowBoundaries));\\n        }\\n        return sourceSubscription;\\n    };\\n    return WindowOperator;\\n}());\\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](WindowSubscriber, _super);\\n    function WindowSubscriber(destination) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]();\\n        destination.next(_this.window);\\n        return _this;\\n    }\\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.openWindow();\\n    };\\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\\n        this._error(error);\\n    };\\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\\n        this._complete();\\n    };\\n    WindowSubscriber.prototype._next = function (value) {\\n        this.window.next(value);\\n    };\\n    WindowSubscriber.prototype._error = function (err) {\\n        this.window.error(err);\\n        this.destination.error(err);\\n    };\\n    WindowSubscriber.prototype._complete = function () {\\n        this.window.complete();\\n        this.destination.complete();\\n    };\\n    WindowSubscriber.prototype._unsubscribe = function () {\\n        this.window = null;\\n    };\\n    WindowSubscriber.prototype.openWindow = function () {\\n        var prevWindow = this.window;\\n        if (prevWindow) {\\n            prevWindow.complete();\\n        }\\n        var destination = this.destination;\\n        var newWindow = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]();\\n        destination.next(newWindow);\\n    };\\n    return WindowSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=window.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/window.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/windowCount.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/windowCount.js ***!\n  \\*******************************************************************/\n/*! exports provided: windowCount */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"windowCount\\\", function() { return windowCount; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\\n\\n\\n\\nfunction windowCount(windowSize, startWindowEvery) {\\n    if (startWindowEvery === void 0) {\\n        startWindowEvery = 0;\\n    }\\n    return function windowCountOperatorFunction(source) {\\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\\n    };\\n}\\nvar WindowCountOperator = /*@__PURE__*/ (function () {\\n    function WindowCountOperator(windowSize, startWindowEvery) {\\n        this.windowSize = windowSize;\\n        this.startWindowEvery = startWindowEvery;\\n    }\\n    WindowCountOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\\n    };\\n    return WindowCountOperator;\\n}());\\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](WindowCountSubscriber, _super);\\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.destination = destination;\\n        _this.windowSize = windowSize;\\n        _this.startWindowEvery = startWindowEvery;\\n        _this.windows = [new _Subject__WEBPACK_IMPORTED_MODULE_2__[\\\"Subject\\\"]()];\\n        _this.count = 0;\\n        destination.next(_this.windows[0]);\\n        return _this;\\n    }\\n    WindowCountSubscriber.prototype._next = function (value) {\\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\\n        var destination = this.destination;\\n        var windowSize = this.windowSize;\\n        var windows = this.windows;\\n        var len = windows.length;\\n        for (var i = 0; i < len && !this.closed; i++) {\\n            windows[i].next(value);\\n        }\\n        var c = this.count - windowSize + 1;\\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\\n            windows.shift().complete();\\n        }\\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\\n            var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_2__[\\\"Subject\\\"]();\\n            windows.push(window_1);\\n            destination.next(window_1);\\n        }\\n    };\\n    WindowCountSubscriber.prototype._error = function (err) {\\n        var windows = this.windows;\\n        if (windows) {\\n            while (windows.length > 0 && !this.closed) {\\n                windows.shift().error(err);\\n            }\\n        }\\n        this.destination.error(err);\\n    };\\n    WindowCountSubscriber.prototype._complete = function () {\\n        var windows = this.windows;\\n        if (windows) {\\n            while (windows.length > 0 && !this.closed) {\\n                windows.shift().complete();\\n            }\\n        }\\n        this.destination.complete();\\n    };\\n    WindowCountSubscriber.prototype._unsubscribe = function () {\\n        this.count = 0;\\n        this.windows = null;\\n    };\\n    return WindowCountSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscriber\\\"]));\\n//# sourceMappingURL=windowCount.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/windowCount.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/windowTime.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/windowTime.js ***!\n  \\******************************************************************/\n/*! exports provided: windowTime */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"windowTime\\\", function() { return windowTime; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/async.js\\\");\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isNumeric */ \\\"./node_modules/rxjs/_esm5/internal/util/isNumeric.js\\\");\\n/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ \\\"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\nfunction windowTime(windowTimeSpan) {\\n    var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__[\\\"async\\\"];\\n    var windowCreationInterval = null;\\n    var maxWindowSize = Number.POSITIVE_INFINITY;\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__[\\\"isScheduler\\\"])(arguments[3])) {\\n        scheduler = arguments[3];\\n    }\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__[\\\"isScheduler\\\"])(arguments[2])) {\\n        scheduler = arguments[2];\\n    }\\n    else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__[\\\"isNumeric\\\"])(arguments[2])) {\\n        maxWindowSize = arguments[2];\\n    }\\n    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__[\\\"isScheduler\\\"])(arguments[1])) {\\n        scheduler = arguments[1];\\n    }\\n    else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__[\\\"isNumeric\\\"])(arguments[1])) {\\n        windowCreationInterval = arguments[1];\\n    }\\n    return function windowTimeOperatorFunction(source) {\\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\\n    };\\n}\\nvar WindowTimeOperator = /*@__PURE__*/ (function () {\\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\\n        this.windowTimeSpan = windowTimeSpan;\\n        this.windowCreationInterval = windowCreationInterval;\\n        this.maxWindowSize = maxWindowSize;\\n        this.scheduler = scheduler;\\n    }\\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\\n    };\\n    return WindowTimeOperator;\\n}());\\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](CountedSubject, _super);\\n    function CountedSubject() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this._numberOfNextedValues = 0;\\n        return _this;\\n    }\\n    CountedSubject.prototype.next = function (value) {\\n        this._numberOfNextedValues++;\\n        _super.prototype.next.call(this, value);\\n    };\\n    Object.defineProperty(CountedSubject.prototype, \\\"numberOfNextedValues\\\", {\\n        get: function () {\\n            return this._numberOfNextedValues;\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    return CountedSubject;\\n}(_Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]));\\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](WindowTimeSubscriber, _super);\\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.destination = destination;\\n        _this.windowTimeSpan = windowTimeSpan;\\n        _this.windowCreationInterval = windowCreationInterval;\\n        _this.maxWindowSize = maxWindowSize;\\n        _this.scheduler = scheduler;\\n        _this.windows = [];\\n        var window = _this.openWindow();\\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\\n            var closeState = { subscriber: _this, window: window, context: null };\\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\\n        }\\n        else {\\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\\n        }\\n        return _this;\\n    }\\n    WindowTimeSubscriber.prototype._next = function (value) {\\n        var windows = this.windows;\\n        var len = windows.length;\\n        for (var i = 0; i < len; i++) {\\n            var window_1 = windows[i];\\n            if (!window_1.closed) {\\n                window_1.next(value);\\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\\n                    this.closeWindow(window_1);\\n                }\\n            }\\n        }\\n    };\\n    WindowTimeSubscriber.prototype._error = function (err) {\\n        var windows = this.windows;\\n        while (windows.length > 0) {\\n            windows.shift().error(err);\\n        }\\n        this.destination.error(err);\\n    };\\n    WindowTimeSubscriber.prototype._complete = function () {\\n        var windows = this.windows;\\n        while (windows.length > 0) {\\n            var window_2 = windows.shift();\\n            if (!window_2.closed) {\\n                window_2.complete();\\n            }\\n        }\\n        this.destination.complete();\\n    };\\n    WindowTimeSubscriber.prototype.openWindow = function () {\\n        var window = new CountedSubject();\\n        this.windows.push(window);\\n        var destination = this.destination;\\n        destination.next(window);\\n        return window;\\n    };\\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\\n        window.complete();\\n        var windows = this.windows;\\n        windows.splice(windows.indexOf(window), 1);\\n    };\\n    return WindowTimeSubscriber;\\n}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"Subscriber\\\"]));\\nfunction dispatchWindowTimeSpanOnly(state) {\\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\\n    if (window) {\\n        subscriber.closeWindow(window);\\n    }\\n    state.window = subscriber.openWindow();\\n    this.schedule(state, windowTimeSpan);\\n}\\nfunction dispatchWindowCreation(state) {\\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\\n    var window = subscriber.openWindow();\\n    var action = this;\\n    var context = { action: action, subscription: null };\\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\\n    action.add(context.subscription);\\n    action.schedule(state, windowCreationInterval);\\n}\\nfunction dispatchWindowClose(state) {\\n    var subscriber = state.subscriber, window = state.window, context = state.context;\\n    if (context && context.action && context.subscription) {\\n        context.action.remove(context.subscription);\\n    }\\n    subscriber.closeWindow(window);\\n}\\n//# sourceMappingURL=windowTime.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/windowTime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/windowToggle.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/windowToggle.js ***!\n  \\********************************************************************/\n/*! exports provided: windowToggle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"windowToggle\\\", function() { return windowToggle; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\nfunction windowToggle(openings, closingSelector) {\\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\\n}\\nvar WindowToggleOperator = /*@__PURE__*/ (function () {\\n    function WindowToggleOperator(openings, closingSelector) {\\n        this.openings = openings;\\n        this.closingSelector = closingSelector;\\n    }\\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\\n    };\\n    return WindowToggleOperator;\\n}());\\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](WindowToggleSubscriber, _super);\\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.openings = openings;\\n        _this.closingSelector = closingSelector;\\n        _this.contexts = [];\\n        _this.add(_this.openSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[\\\"subscribeToResult\\\"])(_this, openings, openings));\\n        return _this;\\n    }\\n    WindowToggleSubscriber.prototype._next = function (value) {\\n        var contexts = this.contexts;\\n        if (contexts) {\\n            var len = contexts.length;\\n            for (var i = 0; i < len; i++) {\\n                contexts[i].window.next(value);\\n            }\\n        }\\n    };\\n    WindowToggleSubscriber.prototype._error = function (err) {\\n        var contexts = this.contexts;\\n        this.contexts = null;\\n        if (contexts) {\\n            var len = contexts.length;\\n            var index = -1;\\n            while (++index < len) {\\n                var context_1 = contexts[index];\\n                context_1.window.error(err);\\n                context_1.subscription.unsubscribe();\\n            }\\n        }\\n        _super.prototype._error.call(this, err);\\n    };\\n    WindowToggleSubscriber.prototype._complete = function () {\\n        var contexts = this.contexts;\\n        this.contexts = null;\\n        if (contexts) {\\n            var len = contexts.length;\\n            var index = -1;\\n            while (++index < len) {\\n                var context_2 = contexts[index];\\n                context_2.window.complete();\\n                context_2.subscription.unsubscribe();\\n            }\\n        }\\n        _super.prototype._complete.call(this);\\n    };\\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\\n        var contexts = this.contexts;\\n        this.contexts = null;\\n        if (contexts) {\\n            var len = contexts.length;\\n            var index = -1;\\n            while (++index < len) {\\n                var context_3 = contexts[index];\\n                context_3.window.unsubscribe();\\n                context_3.subscription.unsubscribe();\\n            }\\n        }\\n    };\\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        if (outerValue === this.openings) {\\n            var closingNotifier = void 0;\\n            try {\\n                var closingSelector = this.closingSelector;\\n                closingNotifier = closingSelector(innerValue);\\n            }\\n            catch (e) {\\n                return this.error(e);\\n            }\\n            var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]();\\n            var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__[\\\"Subscription\\\"]();\\n            var context_4 = { window: window_1, subscription: subscription };\\n            this.contexts.push(context_4);\\n            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__[\\\"subscribeToResult\\\"])(this, closingNotifier, context_4);\\n            if (innerSubscription.closed) {\\n                this.closeWindow(this.contexts.length - 1);\\n            }\\n            else {\\n                innerSubscription.context = context_4;\\n                subscription.add(innerSubscription);\\n            }\\n            this.destination.next(window_1);\\n        }\\n        else {\\n            this.closeWindow(this.contexts.indexOf(outerValue));\\n        }\\n    };\\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\\n        this.error(err);\\n    };\\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\\n        if (inner !== this.openSubscription) {\\n            this.closeWindow(this.contexts.indexOf(inner.context));\\n        }\\n    };\\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\\n        if (index === -1) {\\n            return;\\n        }\\n        var contexts = this.contexts;\\n        var context = contexts[index];\\n        var window = context.window, subscription = context.subscription;\\n        contexts.splice(index, 1);\\n        window.complete();\\n        subscription.unsubscribe();\\n    };\\n    return WindowToggleSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=windowToggle.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/windowToggle.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/windowWhen.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/windowWhen.js ***!\n  \\******************************************************************/\n/*! exports provided: windowWhen */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"windowWhen\\\", function() { return windowWhen; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ \\\"./node_modules/rxjs/_esm5/internal/Subject.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\n\\nfunction windowWhen(closingSelector) {\\n    return function windowWhenOperatorFunction(source) {\\n        return source.lift(new WindowOperator(closingSelector));\\n    };\\n}\\nvar WindowOperator = /*@__PURE__*/ (function () {\\n    function WindowOperator(closingSelector) {\\n        this.closingSelector = closingSelector;\\n    }\\n    WindowOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\\n    };\\n    return WindowOperator;\\n}());\\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](WindowSubscriber, _super);\\n    function WindowSubscriber(destination, closingSelector) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.destination = destination;\\n        _this.closingSelector = closingSelector;\\n        _this.openWindow();\\n        return _this;\\n    }\\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.openWindow(innerSub);\\n    };\\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\\n        this._error(error);\\n    };\\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\\n        this.openWindow(innerSub);\\n    };\\n    WindowSubscriber.prototype._next = function (value) {\\n        this.window.next(value);\\n    };\\n    WindowSubscriber.prototype._error = function (err) {\\n        this.window.error(err);\\n        this.destination.error(err);\\n        this.unsubscribeClosingNotification();\\n    };\\n    WindowSubscriber.prototype._complete = function () {\\n        this.window.complete();\\n        this.destination.complete();\\n        this.unsubscribeClosingNotification();\\n    };\\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\\n        if (this.closingNotification) {\\n            this.closingNotification.unsubscribe();\\n        }\\n    };\\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\\n        if (innerSub === void 0) {\\n            innerSub = null;\\n        }\\n        if (innerSub) {\\n            this.remove(innerSub);\\n            innerSub.unsubscribe();\\n        }\\n        var prevWindow = this.window;\\n        if (prevWindow) {\\n            prevWindow.complete();\\n        }\\n        var window = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__[\\\"Subject\\\"]();\\n        this.destination.next(window);\\n        var closingNotifier;\\n        try {\\n            var closingSelector = this.closingSelector;\\n            closingNotifier = closingSelector();\\n        }\\n        catch (e) {\\n            this.destination.error(e);\\n            this.window.error(e);\\n            return;\\n        }\\n        this.add(this.closingNotification = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToResult\\\"])(this, closingNotifier));\\n    };\\n    return WindowSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=windowWhen.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/windowWhen.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js ***!\n  \\**********************************************************************/\n/*! exports provided: withLatestFrom */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"withLatestFrom\\\", function() { return withLatestFrom; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/OuterSubscriber.js\\\");\\n/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\\\");\\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\\n\\n\\n\\nfunction withLatestFrom() {\\n    var args = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        args[_i] = arguments[_i];\\n    }\\n    return function (source) {\\n        var project;\\n        if (typeof args[args.length - 1] === 'function') {\\n            project = args.pop();\\n        }\\n        var observables = args;\\n        return source.lift(new WithLatestFromOperator(observables, project));\\n    };\\n}\\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\\n    function WithLatestFromOperator(observables, project) {\\n        this.observables = observables;\\n        this.project = project;\\n    }\\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\\n    };\\n    return WithLatestFromOperator;\\n}());\\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](WithLatestFromSubscriber, _super);\\n    function WithLatestFromSubscriber(destination, observables, project) {\\n        var _this = _super.call(this, destination) || this;\\n        _this.observables = observables;\\n        _this.project = project;\\n        _this.toRespond = [];\\n        var len = observables.length;\\n        _this.values = new Array(len);\\n        for (var i = 0; i < len; i++) {\\n            _this.toRespond.push(i);\\n        }\\n        for (var i = 0; i < len; i++) {\\n            var observable = observables[i];\\n            _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToResult\\\"])(_this, observable, observable, i));\\n        }\\n        return _this;\\n    }\\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\\n        this.values[outerIndex] = innerValue;\\n        var toRespond = this.toRespond;\\n        if (toRespond.length > 0) {\\n            var found = toRespond.indexOf(outerIndex);\\n            if (found !== -1) {\\n                toRespond.splice(found, 1);\\n            }\\n        }\\n    };\\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\\n    };\\n    WithLatestFromSubscriber.prototype._next = function (value) {\\n        if (this.toRespond.length === 0) {\\n            var args = [value].concat(this.values);\\n            if (this.project) {\\n                this._tryProject(args);\\n            }\\n            else {\\n                this.destination.next(args);\\n            }\\n        }\\n    };\\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\\n        var result;\\n        try {\\n            result = this.project.apply(this, args);\\n        }\\n        catch (err) {\\n            this.destination.error(err);\\n            return;\\n        }\\n        this.destination.next(result);\\n    };\\n    return WithLatestFromSubscriber;\\n}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"OuterSubscriber\\\"]));\\n//# sourceMappingURL=withLatestFrom.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/zip.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/zip.js ***!\n  \\***********************************************************/\n/*! exports provided: zip */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"zip\\\", function() { return zip; });\\n/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ \\\"./node_modules/rxjs/_esm5/internal/observable/zip.js\\\");\\n/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\\n\\nfunction zip() {\\n    var observables = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        observables[_i] = arguments[_i];\\n    }\\n    return function zipOperatorFunction(source) {\\n        return source.lift.call(_observable_zip__WEBPACK_IMPORTED_MODULE_0__[\\\"zip\\\"].apply(void 0, [source].concat(observables)));\\n    };\\n}\\n//# sourceMappingURL=zip.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/zip.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/operators/zipAll.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/operators/zipAll.js ***!\n  \\**************************************************************/\n/*! exports provided: zipAll */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"zipAll\\\", function() { return zipAll; });\\n/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ \\\"./node_modules/rxjs/_esm5/internal/observable/zip.js\\\");\\n/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\\n\\nfunction zipAll(project) {\\n    return function (source) { return source.lift(new _observable_zip__WEBPACK_IMPORTED_MODULE_0__[\\\"ZipOperator\\\"](project)); };\\n}\\n//# sourceMappingURL=zipAll.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/operators/zipAll.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js ***!\n  \\*********************************************************************/\n/*! exports provided: scheduleArray */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scheduleArray\\\", function() { return scheduleArray; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\\n\\n\\nfunction scheduleArray(input, scheduler) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n        var i = 0;\\n        sub.add(scheduler.schedule(function () {\\n            if (i === input.length) {\\n                subscriber.complete();\\n                return;\\n            }\\n            subscriber.next(input[i++]);\\n            if (!subscriber.closed) {\\n                sub.add(this.schedule());\\n            }\\n        }));\\n        return sub;\\n    });\\n}\\n//# sourceMappingURL=scheduleArray.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js\":\n/*!************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js ***!\n  \\************************************************************************/\n/*! exports provided: scheduleIterable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scheduleIterable\\\", function() { return scheduleIterable; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/iterator */ \\\"./node_modules/rxjs/_esm5/internal/symbol/iterator.js\\\");\\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\\n\\n\\n\\nfunction scheduleIterable(input, scheduler) {\\n    if (!input) {\\n        throw new Error('Iterable cannot be null');\\n    }\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n        var iterator;\\n        sub.add(function () {\\n            if (iterator && typeof iterator.return === 'function') {\\n                iterator.return();\\n            }\\n        });\\n        sub.add(scheduler.schedule(function () {\\n            iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__[\\\"iterator\\\"]]();\\n            sub.add(scheduler.schedule(function () {\\n                if (subscriber.closed) {\\n                    return;\\n                }\\n                var value;\\n                var done;\\n                try {\\n                    var result = iterator.next();\\n                    value = result.value;\\n                    done = result.done;\\n                }\\n                catch (err) {\\n                    subscriber.error(err);\\n                    return;\\n                }\\n                if (done) {\\n                    subscriber.complete();\\n                }\\n                else {\\n                    subscriber.next(value);\\n                    this.schedule();\\n                }\\n            }));\\n        }));\\n        return sub;\\n    });\\n}\\n//# sourceMappingURL=scheduleIterable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js ***!\n  \\**************************************************************************/\n/*! exports provided: scheduleObservable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scheduleObservable\\\", function() { return scheduleObservable; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/observable */ \\\"./node_modules/rxjs/_esm5/internal/symbol/observable.js\\\");\\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */\\n\\n\\n\\nfunction scheduleObservable(input, scheduler) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n        sub.add(scheduler.schedule(function () {\\n            var observable = input[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__[\\\"observable\\\"]]();\\n            sub.add(observable.subscribe({\\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\\n            }));\\n        }));\\n        return sub;\\n    });\\n}\\n//# sourceMappingURL=scheduleObservable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js ***!\n  \\***********************************************************************/\n/*! exports provided: schedulePromise */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"schedulePromise\\\", function() { return schedulePromise; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\\n\\n\\nfunction schedulePromise(input, scheduler) {\\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"](function (subscriber) {\\n        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]();\\n        sub.add(scheduler.schedule(function () {\\n            return input.then(function (value) {\\n                sub.add(scheduler.schedule(function () {\\n                    subscriber.next(value);\\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\\n                }));\\n            }, function (err) {\\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\\n            });\\n        }));\\n        return sub;\\n    });\\n}\\n//# sourceMappingURL=schedulePromise.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js ***!\n  \\*****************************************************************/\n/*! exports provided: scheduled */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"scheduled\\\", function() { return scheduled; });\\n/* harmony import */ var _scheduleObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduleObservable */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js\\\");\\n/* harmony import */ var _schedulePromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedulePromise */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js\\\");\\n/* harmony import */ var _scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduleArray */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js\\\");\\n/* harmony import */ var _scheduleIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduleIterable */ \\\"./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js\\\");\\n/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isInteropObservable */ \\\"./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js\\\");\\n/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isPromise */ \\\"./node_modules/rxjs/_esm5/internal/util/isPromise.js\\\");\\n/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isArrayLike */ \\\"./node_modules/rxjs/_esm5/internal/util/isArrayLike.js\\\");\\n/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isIterable */ \\\"./node_modules/rxjs/_esm5/internal/util/isIterable.js\\\");\\n/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\n\\nfunction scheduled(input, scheduler) {\\n    if (input != null) {\\n        if (Object(_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__[\\\"isInteropObservable\\\"])(input)) {\\n            return Object(_scheduleObservable__WEBPACK_IMPORTED_MODULE_0__[\\\"scheduleObservable\\\"])(input, scheduler);\\n        }\\n        else if (Object(_util_isPromise__WEBPACK_IMPORTED_MODULE_5__[\\\"isPromise\\\"])(input)) {\\n            return Object(_schedulePromise__WEBPACK_IMPORTED_MODULE_1__[\\\"schedulePromise\\\"])(input, scheduler);\\n        }\\n        else if (Object(_util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__[\\\"isArrayLike\\\"])(input)) {\\n            return Object(_scheduleArray__WEBPACK_IMPORTED_MODULE_2__[\\\"scheduleArray\\\"])(input, scheduler);\\n        }\\n        else if (Object(_util_isIterable__WEBPACK_IMPORTED_MODULE_7__[\\\"isIterable\\\"])(input) || typeof input === 'string') {\\n            return Object(_scheduleIterable__WEBPACK_IMPORTED_MODULE_3__[\\\"scheduleIterable\\\"])(input, scheduler);\\n        }\\n    }\\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\\n}\\n//# sourceMappingURL=scheduled.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/Action.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/Action.js ***!\n  \\**************************************************************/\n/*! exports provided: Action */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Action\\\", function() { return Action; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \\\"./node_modules/rxjs/_esm5/internal/Subscription.js\\\");\\n/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\\n\\n\\nvar Action = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](Action, _super);\\n    function Action(scheduler, work) {\\n        return _super.call(this) || this;\\n    }\\n    Action.prototype.schedule = function (state, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        return this;\\n    };\\n    return Action;\\n}(_Subscription__WEBPACK_IMPORTED_MODULE_1__[\\\"Subscription\\\"]));\\n\\n//# sourceMappingURL=Action.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/Action.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js ***!\n  \\****************************************************************************/\n/*! exports provided: AnimationFrameAction */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AnimationFrameAction\\\", function() { return AnimationFrameAction; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js\\\");\\n/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\\n\\n\\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AnimationFrameAction, _super);\\n    function AnimationFrameAction(scheduler, work) {\\n        var _this = _super.call(this, scheduler, work) || this;\\n        _this.scheduler = scheduler;\\n        _this.work = work;\\n        return _this;\\n    }\\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (delay !== null && delay > 0) {\\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\\n        }\\n        scheduler.actions.push(this);\\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\\n    };\\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\\n        }\\n        if (scheduler.actions.length === 0) {\\n            cancelAnimationFrame(id);\\n            scheduler.scheduled = undefined;\\n        }\\n        return undefined;\\n    };\\n    return AnimationFrameAction;\\n}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncAction\\\"]));\\n\\n//# sourceMappingURL=AnimationFrameAction.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js\":\n/*!*******************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js ***!\n  \\*******************************************************************************/\n/*! exports provided: AnimationFrameScheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AnimationFrameScheduler\\\", function() { return AnimationFrameScheduler; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\\n\\n\\nvar AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AnimationFrameScheduler, _super);\\n    function AnimationFrameScheduler() {\\n        return _super !== null && _super.apply(this, arguments) || this;\\n    }\\n    AnimationFrameScheduler.prototype.flush = function (action) {\\n        this.active = true;\\n        this.scheduled = undefined;\\n        var actions = this.actions;\\n        var error;\\n        var index = -1;\\n        var count = actions.length;\\n        action = action || actions.shift();\\n        do {\\n            if (error = action.execute(action.state, action.delay)) {\\n                break;\\n            }\\n        } while (++index < count && (action = actions.shift()));\\n        this.active = false;\\n        if (error) {\\n            while (++index < count && (action = actions.shift())) {\\n                action.unsubscribe();\\n            }\\n            throw error;\\n        }\\n    };\\n    return AnimationFrameScheduler;\\n}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncScheduler\\\"]));\\n\\n//# sourceMappingURL=AnimationFrameScheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js ***!\n  \\******************************************************************/\n/*! exports provided: AsapAction */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AsapAction\\\", function() { return AsapAction; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Immediate */ \\\"./node_modules/rxjs/_esm5/internal/util/Immediate.js\\\");\\n/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js\\\");\\n/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\\n\\n\\n\\nvar AsapAction = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AsapAction, _super);\\n    function AsapAction(scheduler, work) {\\n        var _this = _super.call(this, scheduler, work) || this;\\n        _this.scheduler = scheduler;\\n        _this.work = work;\\n        return _this;\\n    }\\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (delay !== null && delay > 0) {\\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\\n        }\\n        scheduler.actions.push(this);\\n        return scheduler.scheduled || (scheduler.scheduled = _util_Immediate__WEBPACK_IMPORTED_MODULE_1__[\\\"Immediate\\\"].setImmediate(scheduler.flush.bind(scheduler, null)));\\n    };\\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\\n        }\\n        if (scheduler.actions.length === 0) {\\n            _util_Immediate__WEBPACK_IMPORTED_MODULE_1__[\\\"Immediate\\\"].clearImmediate(id);\\n            scheduler.scheduled = undefined;\\n        }\\n        return undefined;\\n    };\\n    return AsapAction;\\n}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__[\\\"AsyncAction\\\"]));\\n\\n//# sourceMappingURL=AsapAction.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js ***!\n  \\*********************************************************************/\n/*! exports provided: AsapScheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AsapScheduler\\\", function() { return AsapScheduler; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\\n\\n\\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AsapScheduler, _super);\\n    function AsapScheduler() {\\n        return _super !== null && _super.apply(this, arguments) || this;\\n    }\\n    AsapScheduler.prototype.flush = function (action) {\\n        this.active = true;\\n        this.scheduled = undefined;\\n        var actions = this.actions;\\n        var error;\\n        var index = -1;\\n        var count = actions.length;\\n        action = action || actions.shift();\\n        do {\\n            if (error = action.execute(action.state, action.delay)) {\\n                break;\\n            }\\n        } while (++index < count && (action = actions.shift()));\\n        this.active = false;\\n        if (error) {\\n            while (++index < count && (action = actions.shift())) {\\n                action.unsubscribe();\\n            }\\n            throw error;\\n        }\\n    };\\n    return AsapScheduler;\\n}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncScheduler\\\"]));\\n\\n//# sourceMappingURL=AsapScheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js ***!\n  \\*******************************************************************/\n/*! exports provided: AsyncAction */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AsyncAction\\\", function() { return AsyncAction; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Action */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/Action.js\\\");\\n/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\\n\\n\\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AsyncAction, _super);\\n    function AsyncAction(scheduler, work) {\\n        var _this = _super.call(this, scheduler, work) || this;\\n        _this.scheduler = scheduler;\\n        _this.work = work;\\n        _this.pending = false;\\n        return _this;\\n    }\\n    AsyncAction.prototype.schedule = function (state, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (this.closed) {\\n            return this;\\n        }\\n        this.state = state;\\n        var id = this.id;\\n        var scheduler = this.scheduler;\\n        if (id != null) {\\n            this.id = this.recycleAsyncId(scheduler, id, delay);\\n        }\\n        this.pending = true;\\n        this.delay = delay;\\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\\n        return this;\\n    };\\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\\n    };\\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (delay !== null && this.delay === delay && this.pending === false) {\\n            return id;\\n        }\\n        clearInterval(id);\\n        return undefined;\\n    };\\n    AsyncAction.prototype.execute = function (state, delay) {\\n        if (this.closed) {\\n            return new Error('executing a cancelled action');\\n        }\\n        this.pending = false;\\n        var error = this._execute(state, delay);\\n        if (error) {\\n            return error;\\n        }\\n        else if (this.pending === false && this.id != null) {\\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\\n        }\\n    };\\n    AsyncAction.prototype._execute = function (state, delay) {\\n        var errored = false;\\n        var errorValue = undefined;\\n        try {\\n            this.work(state);\\n        }\\n        catch (e) {\\n            errored = true;\\n            errorValue = !!e && e || new Error(e);\\n        }\\n        if (errored) {\\n            this.unsubscribe();\\n            return errorValue;\\n        }\\n    };\\n    AsyncAction.prototype._unsubscribe = function () {\\n        var id = this.id;\\n        var scheduler = this.scheduler;\\n        var actions = scheduler.actions;\\n        var index = actions.indexOf(this);\\n        this.work = null;\\n        this.state = null;\\n        this.pending = false;\\n        this.scheduler = null;\\n        if (index !== -1) {\\n            actions.splice(index, 1);\\n        }\\n        if (id != null) {\\n            this.id = this.recycleAsyncId(scheduler, id, null);\\n        }\\n        this.delay = null;\\n    };\\n    return AsyncAction;\\n}(_Action__WEBPACK_IMPORTED_MODULE_1__[\\\"Action\\\"]));\\n\\n//# sourceMappingURL=AsyncAction.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js ***!\n  \\**********************************************************************/\n/*! exports provided: AsyncScheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"AsyncScheduler\\\", function() { return AsyncScheduler; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Scheduler */ \\\"./node_modules/rxjs/_esm5/internal/Scheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\\n\\n\\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](AsyncScheduler, _super);\\n    function AsyncScheduler(SchedulerAction, now) {\\n        if (now === void 0) {\\n            now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"Scheduler\\\"].now;\\n        }\\n        var _this = _super.call(this, SchedulerAction, function () {\\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\\n                return AsyncScheduler.delegate.now();\\n            }\\n            else {\\n                return now();\\n            }\\n        }) || this;\\n        _this.actions = [];\\n        _this.active = false;\\n        _this.scheduled = undefined;\\n        return _this;\\n    }\\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\\n            return AsyncScheduler.delegate.schedule(work, delay, state);\\n        }\\n        else {\\n            return _super.prototype.schedule.call(this, work, delay, state);\\n        }\\n    };\\n    AsyncScheduler.prototype.flush = function (action) {\\n        var actions = this.actions;\\n        if (this.active) {\\n            actions.push(action);\\n            return;\\n        }\\n        var error;\\n        this.active = true;\\n        do {\\n            if (error = action.execute(action.state, action.delay)) {\\n                break;\\n            }\\n        } while (action = actions.shift());\\n        this.active = false;\\n        if (error) {\\n            while (action = actions.shift()) {\\n                action.unsubscribe();\\n            }\\n            throw error;\\n        }\\n    };\\n    return AsyncScheduler;\\n}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"Scheduler\\\"]));\\n\\n//# sourceMappingURL=AsyncScheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js ***!\n  \\*******************************************************************/\n/*! exports provided: QueueAction */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"QueueAction\\\", function() { return QueueAction; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js\\\");\\n/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\\n\\n\\nvar QueueAction = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](QueueAction, _super);\\n    function QueueAction(scheduler, work) {\\n        var _this = _super.call(this, scheduler, work) || this;\\n        _this.scheduler = scheduler;\\n        _this.work = work;\\n        return _this;\\n    }\\n    QueueAction.prototype.schedule = function (state, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (delay > 0) {\\n            return _super.prototype.schedule.call(this, state, delay);\\n        }\\n        this.delay = delay;\\n        this.state = state;\\n        this.scheduler.flush(this);\\n        return this;\\n    };\\n    QueueAction.prototype.execute = function (state, delay) {\\n        return (delay > 0 || this.closed) ?\\n            _super.prototype.execute.call(this, state, delay) :\\n            this._execute(state, delay);\\n    };\\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\\n        }\\n        return scheduler.flush(this);\\n    };\\n    return QueueAction;\\n}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncAction\\\"]));\\n\\n//# sourceMappingURL=QueueAction.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js ***!\n  \\**********************************************************************/\n/*! exports provided: QueueScheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"QueueScheduler\\\", function() { return QueueScheduler; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\\n\\n\\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](QueueScheduler, _super);\\n    function QueueScheduler() {\\n        return _super !== null && _super.apply(this, arguments) || this;\\n    }\\n    return QueueScheduler;\\n}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncScheduler\\\"]));\\n\\n//# sourceMappingURL=QueueScheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js ***!\n  \\****************************************************************************/\n/*! exports provided: VirtualTimeScheduler, VirtualAction */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"VirtualTimeScheduler\\\", function() { return VirtualTimeScheduler; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"VirtualAction\\\", function() { return VirtualAction; });\\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \\\"./node_modules/tslib/tslib.es6.js\\\");\\n/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js\\\");\\n/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js\\\");\\n/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\\n\\n\\n\\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](VirtualTimeScheduler, _super);\\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\\n        if (SchedulerAction === void 0) {\\n            SchedulerAction = VirtualAction;\\n        }\\n        if (maxFrames === void 0) {\\n            maxFrames = Number.POSITIVE_INFINITY;\\n        }\\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\\n        _this.maxFrames = maxFrames;\\n        _this.frame = 0;\\n        _this.index = -1;\\n        return _this;\\n    }\\n    VirtualTimeScheduler.prototype.flush = function () {\\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\\n        var error, action;\\n        while ((action = actions[0]) && action.delay <= maxFrames) {\\n            actions.shift();\\n            this.frame = action.delay;\\n            if (error = action.execute(action.state, action.delay)) {\\n                break;\\n            }\\n        }\\n        if (error) {\\n            while (action = actions.shift()) {\\n                action.unsubscribe();\\n            }\\n            throw error;\\n        }\\n    };\\n    VirtualTimeScheduler.frameTimeFactor = 10;\\n    return VirtualTimeScheduler;\\n}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__[\\\"AsyncScheduler\\\"]));\\n\\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\\\"__extends\\\"](VirtualAction, _super);\\n    function VirtualAction(scheduler, work, index) {\\n        if (index === void 0) {\\n            index = scheduler.index += 1;\\n        }\\n        var _this = _super.call(this, scheduler, work) || this;\\n        _this.scheduler = scheduler;\\n        _this.work = work;\\n        _this.index = index;\\n        _this.active = true;\\n        _this.index = scheduler.index = index;\\n        return _this;\\n    }\\n    VirtualAction.prototype.schedule = function (state, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        if (!this.id) {\\n            return _super.prototype.schedule.call(this, state, delay);\\n        }\\n        this.active = false;\\n        var action = new VirtualAction(this.scheduler, this.work);\\n        this.add(action);\\n        return action.schedule(state, delay);\\n    };\\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        this.delay = scheduler.frame + delay;\\n        var actions = scheduler.actions;\\n        actions.push(this);\\n        actions.sort(VirtualAction.sortActions);\\n        return true;\\n    };\\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\\n        if (delay === void 0) {\\n            delay = 0;\\n        }\\n        return undefined;\\n    };\\n    VirtualAction.prototype._execute = function (state, delay) {\\n        if (this.active === true) {\\n            return _super.prototype._execute.call(this, state, delay);\\n        }\\n    };\\n    VirtualAction.sortActions = function (a, b) {\\n        if (a.delay === b.delay) {\\n            if (a.index === b.index) {\\n                return 0;\\n            }\\n            else if (a.index > b.index) {\\n                return 1;\\n            }\\n            else {\\n                return -1;\\n            }\\n        }\\n        else if (a.delay > b.delay) {\\n            return 1;\\n        }\\n        else {\\n            return -1;\\n        }\\n    };\\n    return VirtualAction;\\n}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncAction\\\"]));\\n\\n//# sourceMappingURL=VirtualTimeScheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js ***!\n  \\**********************************************************************/\n/*! exports provided: animationFrame */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"animationFrame\\\", function() { return animationFrame; });\\n/* harmony import */ var _AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AnimationFrameAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js\\\");\\n/* harmony import */ var _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationFrameScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js\\\");\\n/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\\n\\n\\nvar animationFrame = /*@__PURE__*/ new _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"AnimationFrameScheduler\\\"](_AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__[\\\"AnimationFrameAction\\\"]);\\n//# sourceMappingURL=animationFrame.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/asap.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/asap.js ***!\n  \\************************************************************/\n/*! exports provided: asap */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"asap\\\", function() { return asap; });\\n/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js\\\");\\n/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js\\\");\\n/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\\n\\n\\nvar asap = /*@__PURE__*/ new _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"AsapScheduler\\\"](_AsapAction__WEBPACK_IMPORTED_MODULE_0__[\\\"AsapAction\\\"]);\\n//# sourceMappingURL=asap.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/asap.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/async.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/async.js ***!\n  \\*************************************************************/\n/*! exports provided: async */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"async\\\", function() { return async; });\\n/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js\\\");\\n/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js\\\");\\n/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\\n\\n\\nvar async = /*@__PURE__*/ new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"AsyncScheduler\\\"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__[\\\"AsyncAction\\\"]);\\n//# sourceMappingURL=async.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/async.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/scheduler/queue.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/scheduler/queue.js ***!\n  \\*************************************************************/\n/*! exports provided: queue */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"queue\\\", function() { return queue; });\\n/* harmony import */ var _QueueAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QueueAction */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js\\\");\\n/* harmony import */ var _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueueScheduler */ \\\"./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js\\\");\\n/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\\n\\n\\nvar queue = /*@__PURE__*/ new _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__[\\\"QueueScheduler\\\"](_QueueAction__WEBPACK_IMPORTED_MODULE_0__[\\\"QueueAction\\\"]);\\n//# sourceMappingURL=queue.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/scheduler/queue.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/symbol/iterator.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/symbol/iterator.js ***!\n  \\*************************************************************/\n/*! exports provided: getSymbolIterator, iterator, $$iterator */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getSymbolIterator\\\", function() { return getSymbolIterator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"iterator\\\", function() { return iterator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"$$iterator\\\", function() { return $$iterator; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction getSymbolIterator() {\\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\\n        return '@@iterator';\\n    }\\n    return Symbol.iterator;\\n}\\nvar iterator = /*@__PURE__*/ getSymbolIterator();\\nvar $$iterator = iterator;\\n//# sourceMappingURL=iterator.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/symbol/iterator.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/symbol/observable.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/symbol/observable.js ***!\n  \\***************************************************************/\n/*! exports provided: observable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"observable\\\", function() { return observable; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\\n//# sourceMappingURL=observable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/symbol/observable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js ***!\n  \\*****************************************************************/\n/*! exports provided: rxSubscriber, $$rxSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"rxSubscriber\\\", function() { return rxSubscriber; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"$$rxSubscriber\\\", function() { return $$rxSubscriber; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar rxSubscriber = typeof Symbol === 'function'\\n    ? /*@__PURE__*/ Symbol('rxSubscriber')\\n    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\\nvar $$rxSubscriber = rxSubscriber;\\n//# sourceMappingURL=rxSubscriber.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js ***!\n  \\**************************************************************************/\n/*! exports provided: ArgumentOutOfRangeError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ArgumentOutOfRangeError\\\", function() { return ArgumentOutOfRangeError; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction ArgumentOutOfRangeErrorImpl() {\\n    Error.call(this);\\n    this.message = 'argument out of range';\\n    this.name = 'ArgumentOutOfRangeError';\\n    return this;\\n}\\nArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\\nvar ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/EmptyError.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/EmptyError.js ***!\n  \\*************************************************************/\n/*! exports provided: EmptyError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"EmptyError\\\", function() { return EmptyError; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction EmptyErrorImpl() {\\n    Error.call(this);\\n    this.message = 'no elements in sequence';\\n    this.name = 'EmptyError';\\n    return this;\\n}\\nEmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\\nvar EmptyError = EmptyErrorImpl;\\n//# sourceMappingURL=EmptyError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/EmptyError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/Immediate.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/Immediate.js ***!\n  \\************************************************************/\n/*! exports provided: Immediate */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Immediate\\\", function() { return Immediate; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar nextHandle = 1;\\nvar tasksByHandle = {};\\nfunction runIfPresent(handle) {\\n    var cb = tasksByHandle[handle];\\n    if (cb) {\\n        cb();\\n    }\\n}\\nvar Immediate = {\\n    setImmediate: function (cb) {\\n        var handle = nextHandle++;\\n        tasksByHandle[handle] = cb;\\n        Promise.resolve().then(function () { return runIfPresent(handle); });\\n        return handle;\\n    },\\n    clearImmediate: function (handle) {\\n        delete tasksByHandle[handle];\\n    },\\n};\\n//# sourceMappingURL=Immediate.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/Immediate.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js ***!\n  \\**************************************************************************/\n/*! exports provided: ObjectUnsubscribedError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ObjectUnsubscribedError\\\", function() { return ObjectUnsubscribedError; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction ObjectUnsubscribedErrorImpl() {\\n    Error.call(this);\\n    this.message = 'object unsubscribed';\\n    this.name = 'ObjectUnsubscribedError';\\n    return this;\\n}\\nObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\\nvar ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/TimeoutError.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/TimeoutError.js ***!\n  \\***************************************************************/\n/*! exports provided: TimeoutError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TimeoutError\\\", function() { return TimeoutError; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction TimeoutErrorImpl() {\\n    Error.call(this);\\n    this.message = 'Timeout has occurred';\\n    this.name = 'TimeoutError';\\n    return this;\\n}\\nTimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\\nvar TimeoutError = TimeoutErrorImpl;\\n//# sourceMappingURL=TimeoutError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/TimeoutError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js ***!\n  \\**********************************************************************/\n/*! exports provided: UnsubscriptionError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"UnsubscriptionError\\\", function() { return UnsubscriptionError; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction UnsubscriptionErrorImpl(errors) {\\n    Error.call(this);\\n    this.message = errors ?\\n        errors.length + \\\" errors occurred during unsubscription:\\\\n\\\" + errors.map(function (err, i) { return i + 1 + \\\") \\\" + err.toString(); }).join('\\\\n  ') : '';\\n    this.name = 'UnsubscriptionError';\\n    this.errors = errors;\\n    return this;\\n}\\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\\nvar UnsubscriptionError = UnsubscriptionErrorImpl;\\n//# sourceMappingURL=UnsubscriptionError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/canReportError.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/canReportError.js ***!\n  \\*****************************************************************/\n/*! exports provided: canReportError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"canReportError\\\", function() { return canReportError; });\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\\n\\nfunction canReportError(observer) {\\n    while (observer) {\\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\\n        if (closed_1 || isStopped) {\\n            return false;\\n        }\\n        else if (destination && destination instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__[\\\"Subscriber\\\"]) {\\n            observer = destination;\\n        }\\n        else {\\n            observer = null;\\n        }\\n    }\\n    return true;\\n}\\n//# sourceMappingURL=canReportError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/canReportError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/hostReportError.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/hostReportError.js ***!\n  \\******************************************************************/\n/*! exports provided: hostReportError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"hostReportError\\\", function() { return hostReportError; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction hostReportError(err) {\\n    setTimeout(function () { throw err; }, 0);\\n}\\n//# sourceMappingURL=hostReportError.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/hostReportError.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/identity.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/identity.js ***!\n  \\***********************************************************/\n/*! exports provided: identity */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"identity\\\", function() { return identity; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction identity(x) {\\n    return x;\\n}\\n//# sourceMappingURL=identity.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/identity.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isArray.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isArray.js ***!\n  \\**********************************************************/\n/*! exports provided: isArray */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isArray\\\", function() { return isArray; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\\n//# sourceMappingURL=isArray.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isArray.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isArrayLike.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isArrayLike.js ***!\n  \\**************************************************************/\n/*! exports provided: isArrayLike */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isArrayLike\\\", function() { return isArrayLike; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\\n//# sourceMappingURL=isArrayLike.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isArrayLike.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isDate.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isDate.js ***!\n  \\*********************************************************/\n/*! exports provided: isDate */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isDate\\\", function() { return isDate; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction isDate(value) {\\n    return value instanceof Date && !isNaN(+value);\\n}\\n//# sourceMappingURL=isDate.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isDate.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isFunction.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isFunction.js ***!\n  \\*************************************************************/\n/*! exports provided: isFunction */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isFunction\\\", function() { return isFunction; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction isFunction(x) {\\n    return typeof x === 'function';\\n}\\n//# sourceMappingURL=isFunction.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isFunction.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js ***!\n  \\**********************************************************************/\n/*! exports provided: isInteropObservable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isInteropObservable\\\", function() { return isInteropObservable; });\\n/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ \\\"./node_modules/rxjs/_esm5/internal/symbol/observable.js\\\");\\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\\n\\nfunction isInteropObservable(input) {\\n    return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__[\\\"observable\\\"]] === 'function';\\n}\\n//# sourceMappingURL=isInteropObservable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isIterable.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isIterable.js ***!\n  \\*************************************************************/\n/*! exports provided: isIterable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isIterable\\\", function() { return isIterable; });\\n/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ \\\"./node_modules/rxjs/_esm5/internal/symbol/iterator.js\\\");\\n/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\\n\\nfunction isIterable(input) {\\n    return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__[\\\"iterator\\\"]] === 'function';\\n}\\n//# sourceMappingURL=isIterable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isIterable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isNumeric.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isNumeric.js ***!\n  \\************************************************************/\n/*! exports provided: isNumeric */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isNumeric\\\", function() { return isNumeric; });\\n/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ \\\"./node_modules/rxjs/_esm5/internal/util/isArray.js\\\");\\n/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\\n\\nfunction isNumeric(val) {\\n    return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__[\\\"isArray\\\"])(val) && (val - parseFloat(val) + 1) >= 0;\\n}\\n//# sourceMappingURL=isNumeric.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isNumeric.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isObject.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isObject.js ***!\n  \\***********************************************************/\n/*! exports provided: isObject */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isObject\\\", function() { return isObject; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction isObject(x) {\\n    return x !== null && typeof x === 'object';\\n}\\n//# sourceMappingURL=isObject.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isObject.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isObservable.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isObservable.js ***!\n  \\***************************************************************/\n/*! exports provided: isObservable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isObservable\\\", function() { return isObservable; });\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\\n\\nfunction isObservable(obj) {\\n    return !!obj && (obj instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__[\\\"Observable\\\"] || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\\n}\\n//# sourceMappingURL=isObservable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isObservable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isPromise.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isPromise.js ***!\n  \\************************************************************/\n/*! exports provided: isPromise */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isPromise\\\", function() { return isPromise; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction isPromise(value) {\\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\\n}\\n//# sourceMappingURL=isPromise.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isPromise.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/isScheduler.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/isScheduler.js ***!\n  \\**************************************************************/\n/*! exports provided: isScheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isScheduler\\\", function() { return isScheduler; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction isScheduler(value) {\\n    return value && typeof value.schedule === 'function';\\n}\\n//# sourceMappingURL=isScheduler.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/isScheduler.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/noop.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/noop.js ***!\n  \\*******************************************************/\n/*! exports provided: noop */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"noop\\\", function() { return noop; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction noop() { }\\n//# sourceMappingURL=noop.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/noop.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/not.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/not.js ***!\n  \\******************************************************/\n/*! exports provided: not */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"not\\\", function() { return not; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nfunction not(pred, thisArg) {\\n    function notPred() {\\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\\n    }\\n    notPred.pred = pred;\\n    notPred.thisArg = thisArg;\\n    return notPred;\\n}\\n//# sourceMappingURL=not.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/not.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/pipe.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/pipe.js ***!\n  \\*******************************************************/\n/*! exports provided: pipe, pipeFromArray */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pipe\\\", function() { return pipe; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"pipeFromArray\\\", function() { return pipeFromArray; });\\n/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./noop */ \\\"./node_modules/rxjs/_esm5/internal/util/noop.js\\\");\\n/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\\n\\nfunction pipe() {\\n    var fns = [];\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n        fns[_i] = arguments[_i];\\n    }\\n    return pipeFromArray(fns);\\n}\\nfunction pipeFromArray(fns) {\\n    if (!fns) {\\n        return _noop__WEBPACK_IMPORTED_MODULE_0__[\\\"noop\\\"];\\n    }\\n    if (fns.length === 1) {\\n        return fns[0];\\n    }\\n    return function piped(input) {\\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\\n    };\\n}\\n//# sourceMappingURL=pipe.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/pipe.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/subscribeTo.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeTo.js ***!\n  \\**************************************************************/\n/*! exports provided: subscribeTo */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeTo\\\", function() { return subscribeTo; });\\n/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribeToArray */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js\\\");\\n/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeToPromise */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js\\\");\\n/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribeToIterable */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js\\\");\\n/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subscribeToObservable */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js\\\");\\n/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isArrayLike */ \\\"./node_modules/rxjs/_esm5/internal/util/isArrayLike.js\\\");\\n/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isPromise */ \\\"./node_modules/rxjs/_esm5/internal/util/isPromise.js\\\");\\n/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isObject */ \\\"./node_modules/rxjs/_esm5/internal/util/isObject.js\\\");\\n/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../symbol/iterator */ \\\"./node_modules/rxjs/_esm5/internal/symbol/iterator.js\\\");\\n/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../symbol/observable */ \\\"./node_modules/rxjs/_esm5/internal/symbol/observable.js\\\");\\n/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar subscribeTo = function (result) {\\n    if (!!result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__[\\\"observable\\\"]] === 'function') {\\n        return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__[\\\"subscribeToObservable\\\"])(result);\\n    }\\n    else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_4__[\\\"isArrayLike\\\"])(result)) {\\n        return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_0__[\\\"subscribeToArray\\\"])(result);\\n    }\\n    else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_5__[\\\"isPromise\\\"])(result)) {\\n        return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeToPromise\\\"])(result);\\n    }\\n    else if (!!result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__[\\\"iterator\\\"]] === 'function') {\\n        return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__[\\\"subscribeToIterable\\\"])(result);\\n    }\\n    else {\\n        var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_6__[\\\"isObject\\\"])(result) ? 'an invalid object' : \\\"'\\\" + result + \\\"'\\\";\\n        var msg = \\\"You provided \\\" + value + \\\" where a stream was expected.\\\"\\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\\n        throw new TypeError(msg);\\n    }\\n};\\n//# sourceMappingURL=subscribeTo.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/subscribeTo.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js ***!\n  \\*******************************************************************/\n/*! exports provided: subscribeToArray */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeToArray\\\", function() { return subscribeToArray; });\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\nvar subscribeToArray = function (array) {\\n    return function (subscriber) {\\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\\n            subscriber.next(array[i]);\\n        }\\n        subscriber.complete();\\n    };\\n};\\n//# sourceMappingURL=subscribeToArray.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js ***!\n  \\**********************************************************************/\n/*! exports provided: subscribeToIterable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeToIterable\\\", function() { return subscribeToIterable; });\\n/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ \\\"./node_modules/rxjs/_esm5/internal/symbol/iterator.js\\\");\\n/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\\n\\nvar subscribeToIterable = function (iterable) {\\n    return function (subscriber) {\\n        var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__[\\\"iterator\\\"]]();\\n        do {\\n            var item = iterator.next();\\n            if (item.done) {\\n                subscriber.complete();\\n                break;\\n            }\\n            subscriber.next(item.value);\\n            if (subscriber.closed) {\\n                break;\\n            }\\n        } while (true);\\n        if (typeof iterator.return === 'function') {\\n            subscriber.add(function () {\\n                if (iterator.return) {\\n                    iterator.return();\\n                }\\n            });\\n        }\\n        return subscriber;\\n    };\\n};\\n//# sourceMappingURL=subscribeToIterable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js\":\n/*!************************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js ***!\n  \\************************************************************************/\n/*! exports provided: subscribeToObservable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeToObservable\\\", function() { return subscribeToObservable; });\\n/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ \\\"./node_modules/rxjs/_esm5/internal/symbol/observable.js\\\");\\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\\n\\nvar subscribeToObservable = function (obj) {\\n    return function (subscriber) {\\n        var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__[\\\"observable\\\"]]();\\n        if (typeof obs.subscribe !== 'function') {\\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\\n        }\\n        else {\\n            return obs.subscribe(subscriber);\\n        }\\n    };\\n};\\n//# sourceMappingURL=subscribeToObservable.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js ***!\n  \\*********************************************************************/\n/*! exports provided: subscribeToPromise */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeToPromise\\\", function() { return subscribeToPromise; });\\n/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hostReportError */ \\\"./node_modules/rxjs/_esm5/internal/util/hostReportError.js\\\");\\n/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\\n\\nvar subscribeToPromise = function (promise) {\\n    return function (subscriber) {\\n        promise.then(function (value) {\\n            if (!subscriber.closed) {\\n                subscriber.next(value);\\n                subscriber.complete();\\n            }\\n        }, function (err) { return subscriber.error(err); })\\n            .then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__[\\\"hostReportError\\\"]);\\n        return subscriber;\\n    };\\n};\\n//# sourceMappingURL=subscribeToPromise.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js ***!\n  \\********************************************************************/\n/*! exports provided: subscribeToResult */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeToResult\\\", function() { return subscribeToResult; });\\n/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InnerSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/InnerSubscriber.js\\\");\\n/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeTo */ \\\"./node_modules/rxjs/_esm5/internal/util/subscribeTo.js\\\");\\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ \\\"./node_modules/rxjs/_esm5/internal/Observable.js\\\");\\n/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */\\n\\n\\n\\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\\n    if (destination === void 0) {\\n        destination = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__[\\\"InnerSubscriber\\\"](outerSubscriber, outerValue, outerIndex);\\n    }\\n    if (destination.closed) {\\n        return undefined;\\n    }\\n    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__[\\\"Observable\\\"]) {\\n        return result.subscribe(destination);\\n    }\\n    return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__[\\\"subscribeTo\\\"])(result)(destination);\\n}\\n//# sourceMappingURL=subscribeToResult.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/internal/util/toSubscriber.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/internal/util/toSubscriber.js ***!\n  \\***************************************************************/\n/*! exports provided: toSubscriber */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"toSubscriber\\\", function() { return toSubscriber; });\\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ \\\"./node_modules/rxjs/_esm5/internal/Subscriber.js\\\");\\n/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../symbol/rxSubscriber */ \\\"./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js\\\");\\n/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observer */ \\\"./node_modules/rxjs/_esm5/internal/Observer.js\\\");\\n/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\\n\\n\\n\\nfunction toSubscriber(nextOrObserver, error, complete) {\\n    if (nextOrObserver) {\\n        if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__[\\\"Subscriber\\\"]) {\\n            return nextOrObserver;\\n        }\\n        if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"rxSubscriber\\\"]]) {\\n            return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__[\\\"rxSubscriber\\\"]]();\\n        }\\n    }\\n    if (!nextOrObserver && !error && !complete) {\\n        return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__[\\\"Subscriber\\\"](_Observer__WEBPACK_IMPORTED_MODULE_2__[\\\"empty\\\"]);\\n    }\\n    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__[\\\"Subscriber\\\"](nextOrObserver, error, complete);\\n}\\n//# sourceMappingURL=toSubscriber.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/internal/util/toSubscriber.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/rxjs/_esm5/operators/index.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/rxjs/_esm5/operators/index.js ***!\n  \\****************************************************/\n/*! exports provided: audit, auditTime, buffer, bufferCount, bufferTime, bufferToggle, bufferWhen, catchError, combineAll, combineLatest, concat, concatAll, concatMap, concatMapTo, count, debounce, debounceTime, defaultIfEmpty, delay, delayWhen, dematerialize, distinct, distinctUntilChanged, distinctUntilKeyChanged, elementAt, endWith, every, exhaust, exhaustMap, expand, filter, finalize, find, findIndex, first, groupBy, ignoreElements, isEmpty, last, map, mapTo, materialize, max, merge, mergeAll, mergeMap, flatMap, mergeMapTo, mergeScan, min, multicast, observeOn, onErrorResumeNext, pairwise, partition, pluck, publish, publishBehavior, publishLast, publishReplay, race, reduce, repeat, repeatWhen, retry, retryWhen, refCount, sample, sampleTime, scan, sequenceEqual, share, shareReplay, single, skip, skipLast, skipUntil, skipWhile, startWith, subscribeOn, switchAll, switchMap, switchMapTo, take, takeLast, takeUntil, takeWhile, tap, throttle, throttleTime, throwIfEmpty, timeInterval, timeout, timeoutWith, timestamp, toArray, window, windowCount, windowTime, windowToggle, windowWhen, withLatestFrom, zip, zipAll */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/operators/audit */ \\\"./node_modules/rxjs/_esm5/internal/operators/audit.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"audit\\\", function() { return _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__[\\\"audit\\\"]; });\\n\\n/* harmony import */ var _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/operators/auditTime */ \\\"./node_modules/rxjs/_esm5/internal/operators/auditTime.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"auditTime\\\", function() { return _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__[\\\"auditTime\\\"]; });\\n\\n/* harmony import */ var _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/operators/buffer */ \\\"./node_modules/rxjs/_esm5/internal/operators/buffer.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"buffer\\\", function() { return _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__[\\\"buffer\\\"]; });\\n\\n/* harmony import */ var _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/operators/bufferCount */ \\\"./node_modules/rxjs/_esm5/internal/operators/bufferCount.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"bufferCount\\\", function() { return _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__[\\\"bufferCount\\\"]; });\\n\\n/* harmony import */ var _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/operators/bufferTime */ \\\"./node_modules/rxjs/_esm5/internal/operators/bufferTime.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"bufferTime\\\", function() { return _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__[\\\"bufferTime\\\"]; });\\n\\n/* harmony import */ var _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/operators/bufferToggle */ \\\"./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"bufferToggle\\\", function() { return _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__[\\\"bufferToggle\\\"]; });\\n\\n/* harmony import */ var _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/operators/bufferWhen */ \\\"./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"bufferWhen\\\", function() { return _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__[\\\"bufferWhen\\\"]; });\\n\\n/* harmony import */ var _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal/operators/catchError */ \\\"./node_modules/rxjs/_esm5/internal/operators/catchError.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"catchError\\\", function() { return _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__[\\\"catchError\\\"]; });\\n\\n/* harmony import */ var _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../internal/operators/combineAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/combineAll.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"combineAll\\\", function() { return _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__[\\\"combineAll\\\"]; });\\n\\n/* harmony import */ var _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../internal/operators/combineLatest */ \\\"./node_modules/rxjs/_esm5/internal/operators/combineLatest.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"combineLatest\\\", function() { return _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__[\\\"combineLatest\\\"]; });\\n\\n/* harmony import */ var _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/operators/concat */ \\\"./node_modules/rxjs/_esm5/internal/operators/concat.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"concat\\\", function() { return _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__[\\\"concat\\\"]; });\\n\\n/* harmony import */ var _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../internal/operators/concatAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/concatAll.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"concatAll\\\", function() { return _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__[\\\"concatAll\\\"]; });\\n\\n/* harmony import */ var _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../internal/operators/concatMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/concatMap.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"concatMap\\\", function() { return _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__[\\\"concatMap\\\"]; });\\n\\n/* harmony import */ var _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../internal/operators/concatMapTo */ \\\"./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"concatMapTo\\\", function() { return _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__[\\\"concatMapTo\\\"]; });\\n\\n/* harmony import */ var _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../internal/operators/count */ \\\"./node_modules/rxjs/_esm5/internal/operators/count.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"count\\\", function() { return _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__[\\\"count\\\"]; });\\n\\n/* harmony import */ var _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../internal/operators/debounce */ \\\"./node_modules/rxjs/_esm5/internal/operators/debounce.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"debounce\\\", function() { return _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__[\\\"debounce\\\"]; });\\n\\n/* harmony import */ var _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../internal/operators/debounceTime */ \\\"./node_modules/rxjs/_esm5/internal/operators/debounceTime.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"debounceTime\\\", function() { return _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__[\\\"debounceTime\\\"]; });\\n\\n/* harmony import */ var _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../internal/operators/defaultIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"defaultIfEmpty\\\", function() { return _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__[\\\"defaultIfEmpty\\\"]; });\\n\\n/* harmony import */ var _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../internal/operators/delay */ \\\"./node_modules/rxjs/_esm5/internal/operators/delay.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"delay\\\", function() { return _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__[\\\"delay\\\"]; });\\n\\n/* harmony import */ var _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../internal/operators/delayWhen */ \\\"./node_modules/rxjs/_esm5/internal/operators/delayWhen.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"delayWhen\\\", function() { return _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__[\\\"delayWhen\\\"]; });\\n\\n/* harmony import */ var _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../internal/operators/dematerialize */ \\\"./node_modules/rxjs/_esm5/internal/operators/dematerialize.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"dematerialize\\\", function() { return _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__[\\\"dematerialize\\\"]; });\\n\\n/* harmony import */ var _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../internal/operators/distinct */ \\\"./node_modules/rxjs/_esm5/internal/operators/distinct.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"distinct\\\", function() { return _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__[\\\"distinct\\\"]; });\\n\\n/* harmony import */ var _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../internal/operators/distinctUntilChanged */ \\\"./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"distinctUntilChanged\\\", function() { return _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__[\\\"distinctUntilChanged\\\"]; });\\n\\n/* harmony import */ var _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../internal/operators/distinctUntilKeyChanged */ \\\"./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"distinctUntilKeyChanged\\\", function() { return _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__[\\\"distinctUntilKeyChanged\\\"]; });\\n\\n/* harmony import */ var _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../internal/operators/elementAt */ \\\"./node_modules/rxjs/_esm5/internal/operators/elementAt.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"elementAt\\\", function() { return _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__[\\\"elementAt\\\"]; });\\n\\n/* harmony import */ var _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../internal/operators/endWith */ \\\"./node_modules/rxjs/_esm5/internal/operators/endWith.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"endWith\\\", function() { return _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__[\\\"endWith\\\"]; });\\n\\n/* harmony import */ var _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../internal/operators/every */ \\\"./node_modules/rxjs/_esm5/internal/operators/every.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"every\\\", function() { return _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__[\\\"every\\\"]; });\\n\\n/* harmony import */ var _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../internal/operators/exhaust */ \\\"./node_modules/rxjs/_esm5/internal/operators/exhaust.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"exhaust\\\", function() { return _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__[\\\"exhaust\\\"]; });\\n\\n/* harmony import */ var _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../internal/operators/exhaustMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"exhaustMap\\\", function() { return _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__[\\\"exhaustMap\\\"]; });\\n\\n/* harmony import */ var _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../internal/operators/expand */ \\\"./node_modules/rxjs/_esm5/internal/operators/expand.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"expand\\\", function() { return _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__[\\\"expand\\\"]; });\\n\\n/* harmony import */ var _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../internal/operators/filter */ \\\"./node_modules/rxjs/_esm5/internal/operators/filter.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"filter\\\", function() { return _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__[\\\"filter\\\"]; });\\n\\n/* harmony import */ var _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../internal/operators/finalize */ \\\"./node_modules/rxjs/_esm5/internal/operators/finalize.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"finalize\\\", function() { return _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__[\\\"finalize\\\"]; });\\n\\n/* harmony import */ var _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../internal/operators/find */ \\\"./node_modules/rxjs/_esm5/internal/operators/find.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"find\\\", function() { return _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__[\\\"find\\\"]; });\\n\\n/* harmony import */ var _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../internal/operators/findIndex */ \\\"./node_modules/rxjs/_esm5/internal/operators/findIndex.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"findIndex\\\", function() { return _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__[\\\"findIndex\\\"]; });\\n\\n/* harmony import */ var _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../internal/operators/first */ \\\"./node_modules/rxjs/_esm5/internal/operators/first.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"first\\\", function() { return _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__[\\\"first\\\"]; });\\n\\n/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../internal/operators/groupBy */ \\\"./node_modules/rxjs/_esm5/internal/operators/groupBy.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"groupBy\\\", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__[\\\"groupBy\\\"]; });\\n\\n/* harmony import */ var _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../internal/operators/ignoreElements */ \\\"./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ignoreElements\\\", function() { return _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__[\\\"ignoreElements\\\"]; });\\n\\n/* harmony import */ var _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../internal/operators/isEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/isEmpty.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"isEmpty\\\", function() { return _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__[\\\"isEmpty\\\"]; });\\n\\n/* harmony import */ var _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../internal/operators/last */ \\\"./node_modules/rxjs/_esm5/internal/operators/last.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"last\\\", function() { return _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__[\\\"last\\\"]; });\\n\\n/* harmony import */ var _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../internal/operators/map */ \\\"./node_modules/rxjs/_esm5/internal/operators/map.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"map\\\", function() { return _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__[\\\"map\\\"]; });\\n\\n/* harmony import */ var _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../internal/operators/mapTo */ \\\"./node_modules/rxjs/_esm5/internal/operators/mapTo.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"mapTo\\\", function() { return _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__[\\\"mapTo\\\"]; });\\n\\n/* harmony import */ var _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../internal/operators/materialize */ \\\"./node_modules/rxjs/_esm5/internal/operators/materialize.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"materialize\\\", function() { return _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__[\\\"materialize\\\"]; });\\n\\n/* harmony import */ var _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../internal/operators/max */ \\\"./node_modules/rxjs/_esm5/internal/operators/max.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"max\\\", function() { return _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__[\\\"max\\\"]; });\\n\\n/* harmony import */ var _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../internal/operators/merge */ \\\"./node_modules/rxjs/_esm5/internal/operators/merge.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"merge\\\", function() { return _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__[\\\"merge\\\"]; });\\n\\n/* harmony import */ var _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../internal/operators/mergeAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeAll.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"mergeAll\\\", function() { return _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__[\\\"mergeAll\\\"]; });\\n\\n/* harmony import */ var _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../internal/operators/mergeMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeMap.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"mergeMap\\\", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__[\\\"mergeMap\\\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"flatMap\\\", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__[\\\"mergeMap\\\"]; });\\n\\n/* harmony import */ var _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../internal/operators/mergeMapTo */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"mergeMapTo\\\", function() { return _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__[\\\"mergeMapTo\\\"]; });\\n\\n/* harmony import */ var _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../internal/operators/mergeScan */ \\\"./node_modules/rxjs/_esm5/internal/operators/mergeScan.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"mergeScan\\\", function() { return _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__[\\\"mergeScan\\\"]; });\\n\\n/* harmony import */ var _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../internal/operators/min */ \\\"./node_modules/rxjs/_esm5/internal/operators/min.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"min\\\", function() { return _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__[\\\"min\\\"]; });\\n\\n/* harmony import */ var _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../internal/operators/multicast */ \\\"./node_modules/rxjs/_esm5/internal/operators/multicast.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"multicast\\\", function() { return _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__[\\\"multicast\\\"]; });\\n\\n/* harmony import */ var _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../internal/operators/observeOn */ \\\"./node_modules/rxjs/_esm5/internal/operators/observeOn.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"observeOn\\\", function() { return _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__[\\\"observeOn\\\"]; });\\n\\n/* harmony import */ var _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../internal/operators/onErrorResumeNext */ \\\"./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"onErrorResumeNext\\\", function() { return _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__[\\\"onErrorResumeNext\\\"]; });\\n\\n/* harmony import */ var _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../internal/operators/pairwise */ \\\"./node_modules/rxjs/_esm5/internal/operators/pairwise.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"pairwise\\\", function() { return _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__[\\\"pairwise\\\"]; });\\n\\n/* harmony import */ var _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../internal/operators/partition */ \\\"./node_modules/rxjs/_esm5/internal/operators/partition.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"partition\\\", function() { return _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__[\\\"partition\\\"]; });\\n\\n/* harmony import */ var _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../internal/operators/pluck */ \\\"./node_modules/rxjs/_esm5/internal/operators/pluck.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"pluck\\\", function() { return _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__[\\\"pluck\\\"]; });\\n\\n/* harmony import */ var _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../internal/operators/publish */ \\\"./node_modules/rxjs/_esm5/internal/operators/publish.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"publish\\\", function() { return _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__[\\\"publish\\\"]; });\\n\\n/* harmony import */ var _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../internal/operators/publishBehavior */ \\\"./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"publishBehavior\\\", function() { return _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__[\\\"publishBehavior\\\"]; });\\n\\n/* harmony import */ var _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../internal/operators/publishLast */ \\\"./node_modules/rxjs/_esm5/internal/operators/publishLast.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"publishLast\\\", function() { return _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__[\\\"publishLast\\\"]; });\\n\\n/* harmony import */ var _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../internal/operators/publishReplay */ \\\"./node_modules/rxjs/_esm5/internal/operators/publishReplay.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"publishReplay\\\", function() { return _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__[\\\"publishReplay\\\"]; });\\n\\n/* harmony import */ var _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../internal/operators/race */ \\\"./node_modules/rxjs/_esm5/internal/operators/race.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"race\\\", function() { return _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__[\\\"race\\\"]; });\\n\\n/* harmony import */ var _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../internal/operators/reduce */ \\\"./node_modules/rxjs/_esm5/internal/operators/reduce.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"reduce\\\", function() { return _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__[\\\"reduce\\\"]; });\\n\\n/* harmony import */ var _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../internal/operators/repeat */ \\\"./node_modules/rxjs/_esm5/internal/operators/repeat.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"repeat\\\", function() { return _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__[\\\"repeat\\\"]; });\\n\\n/* harmony import */ var _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../internal/operators/repeatWhen */ \\\"./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"repeatWhen\\\", function() { return _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__[\\\"repeatWhen\\\"]; });\\n\\n/* harmony import */ var _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../internal/operators/retry */ \\\"./node_modules/rxjs/_esm5/internal/operators/retry.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"retry\\\", function() { return _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__[\\\"retry\\\"]; });\\n\\n/* harmony import */ var _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../internal/operators/retryWhen */ \\\"./node_modules/rxjs/_esm5/internal/operators/retryWhen.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"retryWhen\\\", function() { return _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__[\\\"retryWhen\\\"]; });\\n\\n/* harmony import */ var _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../internal/operators/refCount */ \\\"./node_modules/rxjs/_esm5/internal/operators/refCount.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"refCount\\\", function() { return _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__[\\\"refCount\\\"]; });\\n\\n/* harmony import */ var _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../internal/operators/sample */ \\\"./node_modules/rxjs/_esm5/internal/operators/sample.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"sample\\\", function() { return _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__[\\\"sample\\\"]; });\\n\\n/* harmony import */ var _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../internal/operators/sampleTime */ \\\"./node_modules/rxjs/_esm5/internal/operators/sampleTime.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"sampleTime\\\", function() { return _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__[\\\"sampleTime\\\"]; });\\n\\n/* harmony import */ var _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../internal/operators/scan */ \\\"./node_modules/rxjs/_esm5/internal/operators/scan.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"scan\\\", function() { return _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__[\\\"scan\\\"]; });\\n\\n/* harmony import */ var _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../internal/operators/sequenceEqual */ \\\"./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"sequenceEqual\\\", function() { return _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__[\\\"sequenceEqual\\\"]; });\\n\\n/* harmony import */ var _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../internal/operators/share */ \\\"./node_modules/rxjs/_esm5/internal/operators/share.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"share\\\", function() { return _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__[\\\"share\\\"]; });\\n\\n/* harmony import */ var _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../internal/operators/shareReplay */ \\\"./node_modules/rxjs/_esm5/internal/operators/shareReplay.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"shareReplay\\\", function() { return _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__[\\\"shareReplay\\\"]; });\\n\\n/* harmony import */ var _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../internal/operators/single */ \\\"./node_modules/rxjs/_esm5/internal/operators/single.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"single\\\", function() { return _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__[\\\"single\\\"]; });\\n\\n/* harmony import */ var _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../internal/operators/skip */ \\\"./node_modules/rxjs/_esm5/internal/operators/skip.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"skip\\\", function() { return _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__[\\\"skip\\\"]; });\\n\\n/* harmony import */ var _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../internal/operators/skipLast */ \\\"./node_modules/rxjs/_esm5/internal/operators/skipLast.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"skipLast\\\", function() { return _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__[\\\"skipLast\\\"]; });\\n\\n/* harmony import */ var _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../internal/operators/skipUntil */ \\\"./node_modules/rxjs/_esm5/internal/operators/skipUntil.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"skipUntil\\\", function() { return _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__[\\\"skipUntil\\\"]; });\\n\\n/* harmony import */ var _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../internal/operators/skipWhile */ \\\"./node_modules/rxjs/_esm5/internal/operators/skipWhile.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"skipWhile\\\", function() { return _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__[\\\"skipWhile\\\"]; });\\n\\n/* harmony import */ var _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../internal/operators/startWith */ \\\"./node_modules/rxjs/_esm5/internal/operators/startWith.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"startWith\\\", function() { return _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__[\\\"startWith\\\"]; });\\n\\n/* harmony import */ var _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../internal/operators/subscribeOn */ \\\"./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"subscribeOn\\\", function() { return _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__[\\\"subscribeOn\\\"]; });\\n\\n/* harmony import */ var _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../internal/operators/switchAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/switchAll.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"switchAll\\\", function() { return _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__[\\\"switchAll\\\"]; });\\n\\n/* harmony import */ var _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../internal/operators/switchMap */ \\\"./node_modules/rxjs/_esm5/internal/operators/switchMap.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"switchMap\\\", function() { return _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__[\\\"switchMap\\\"]; });\\n\\n/* harmony import */ var _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../internal/operators/switchMapTo */ \\\"./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"switchMapTo\\\", function() { return _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__[\\\"switchMapTo\\\"]; });\\n\\n/* harmony import */ var _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../internal/operators/take */ \\\"./node_modules/rxjs/_esm5/internal/operators/take.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"take\\\", function() { return _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__[\\\"take\\\"]; });\\n\\n/* harmony import */ var _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../internal/operators/takeLast */ \\\"./node_modules/rxjs/_esm5/internal/operators/takeLast.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"takeLast\\\", function() { return _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__[\\\"takeLast\\\"]; });\\n\\n/* harmony import */ var _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../internal/operators/takeUntil */ \\\"./node_modules/rxjs/_esm5/internal/operators/takeUntil.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"takeUntil\\\", function() { return _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__[\\\"takeUntil\\\"]; });\\n\\n/* harmony import */ var _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../internal/operators/takeWhile */ \\\"./node_modules/rxjs/_esm5/internal/operators/takeWhile.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"takeWhile\\\", function() { return _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__[\\\"takeWhile\\\"]; });\\n\\n/* harmony import */ var _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../internal/operators/tap */ \\\"./node_modules/rxjs/_esm5/internal/operators/tap.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"tap\\\", function() { return _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__[\\\"tap\\\"]; });\\n\\n/* harmony import */ var _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../internal/operators/throttle */ \\\"./node_modules/rxjs/_esm5/internal/operators/throttle.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"throttle\\\", function() { return _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__[\\\"throttle\\\"]; });\\n\\n/* harmony import */ var _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../internal/operators/throttleTime */ \\\"./node_modules/rxjs/_esm5/internal/operators/throttleTime.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"throttleTime\\\", function() { return _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__[\\\"throttleTime\\\"]; });\\n\\n/* harmony import */ var _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../internal/operators/throwIfEmpty */ \\\"./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"throwIfEmpty\\\", function() { return _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__[\\\"throwIfEmpty\\\"]; });\\n\\n/* harmony import */ var _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../internal/operators/timeInterval */ \\\"./node_modules/rxjs/_esm5/internal/operators/timeInterval.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"timeInterval\\\", function() { return _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__[\\\"timeInterval\\\"]; });\\n\\n/* harmony import */ var _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../internal/operators/timeout */ \\\"./node_modules/rxjs/_esm5/internal/operators/timeout.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"timeout\\\", function() { return _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__[\\\"timeout\\\"]; });\\n\\n/* harmony import */ var _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../internal/operators/timeoutWith */ \\\"./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"timeoutWith\\\", function() { return _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__[\\\"timeoutWith\\\"]; });\\n\\n/* harmony import */ var _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../internal/operators/timestamp */ \\\"./node_modules/rxjs/_esm5/internal/operators/timestamp.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"timestamp\\\", function() { return _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__[\\\"timestamp\\\"]; });\\n\\n/* harmony import */ var _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../internal/operators/toArray */ \\\"./node_modules/rxjs/_esm5/internal/operators/toArray.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"toArray\\\", function() { return _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__[\\\"toArray\\\"]; });\\n\\n/* harmony import */ var _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../internal/operators/window */ \\\"./node_modules/rxjs/_esm5/internal/operators/window.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"window\\\", function() { return _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__[\\\"window\\\"]; });\\n\\n/* harmony import */ var _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../internal/operators/windowCount */ \\\"./node_modules/rxjs/_esm5/internal/operators/windowCount.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"windowCount\\\", function() { return _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__[\\\"windowCount\\\"]; });\\n\\n/* harmony import */ var _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../internal/operators/windowTime */ \\\"./node_modules/rxjs/_esm5/internal/operators/windowTime.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"windowTime\\\", function() { return _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__[\\\"windowTime\\\"]; });\\n\\n/* harmony import */ var _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../internal/operators/windowToggle */ \\\"./node_modules/rxjs/_esm5/internal/operators/windowToggle.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"windowToggle\\\", function() { return _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__[\\\"windowToggle\\\"]; });\\n\\n/* harmony import */ var _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../internal/operators/windowWhen */ \\\"./node_modules/rxjs/_esm5/internal/operators/windowWhen.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"windowWhen\\\", function() { return _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__[\\\"windowWhen\\\"]; });\\n\\n/* harmony import */ var _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../internal/operators/withLatestFrom */ \\\"./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"withLatestFrom\\\", function() { return _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__[\\\"withLatestFrom\\\"]; });\\n\\n/* harmony import */ var _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../internal/operators/zip */ \\\"./node_modules/rxjs/_esm5/internal/operators/zip.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"zip\\\", function() { return _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__[\\\"zip\\\"]; });\\n\\n/* harmony import */ var _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../internal/operators/zipAll */ \\\"./node_modules/rxjs/_esm5/internal/operators/zipAll.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"zipAll\\\", function() { return _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__[\\\"zipAll\\\"]; });\\n\\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n//# sourceMappingURL=index.js.map\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/rxjs/_esm5/operators/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/tslib/tslib.es6.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/tslib/tslib.es6.js ***!\n  \\*****************************************/\n/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__extends\\\", function() { return __extends; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__assign\\\", function() { return __assign; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__rest\\\", function() { return __rest; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__decorate\\\", function() { return __decorate; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__param\\\", function() { return __param; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__metadata\\\", function() { return __metadata; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__awaiter\\\", function() { return __awaiter; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__generator\\\", function() { return __generator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__exportStar\\\", function() { return __exportStar; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__values\\\", function() { return __values; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__read\\\", function() { return __read; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__spread\\\", function() { return __spread; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__spreadArrays\\\", function() { return __spreadArrays; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__await\\\", function() { return __await; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__asyncGenerator\\\", function() { return __asyncGenerator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__asyncDelegator\\\", function() { return __asyncDelegator; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__asyncValues\\\", function() { return __asyncValues; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__makeTemplateObject\\\", function() { return __makeTemplateObject; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__importStar\\\", function() { return __importStar; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"__importDefault\\\", function() { return __importDefault; });\\n/*! *****************************************************************************\\r\\nCopyright (c) Microsoft Corporation. All rights reserved.\\r\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\r\\nthis file except in compliance with the License. You may obtain a copy of the\\r\\nLicense at http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\r\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\r\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\\r\\nMERCHANTABLITY OR NON-INFRINGEMENT.\\r\\n\\r\\nSee the Apache Version 2.0 License for specific language governing permissions\\r\\nand limitations under the License.\\r\\n***************************************************************************** */\\r\\n/* global Reflect, Promise */\\r\\n\\r\\nvar extendStatics = function(d, b) {\\r\\n    extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return extendStatics(d, b);\\r\\n};\\r\\n\\r\\nfunction __extends(d, b) {\\r\\n    extendStatics(d, b);\\r\\n    function __() { this.constructor = d; }\\r\\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n}\\r\\n\\r\\nvar __assign = function() {\\r\\n    __assign = Object.assign || function __assign(t) {\\r\\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\\r\\n            s = arguments[i];\\r\\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\\r\\n        }\\r\\n        return t;\\r\\n    }\\r\\n    return __assign.apply(this, arguments);\\r\\n}\\r\\n\\r\\nfunction __rest(s, e) {\\r\\n    var t = {};\\r\\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\\r\\n        t[p] = s[p];\\r\\n    if (s != null && typeof Object.getOwnPropertySymbols === \\\"function\\\")\\r\\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\\r\\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\\r\\n                t[p[i]] = s[p[i]];\\r\\n        }\\r\\n    return t;\\r\\n}\\r\\n\\r\\nfunction __decorate(decorators, target, key, desc) {\\r\\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\\r\\n    if (typeof Reflect === \\\"object\\\" && typeof Reflect.decorate === \\\"function\\\") r = Reflect.decorate(decorators, target, key, desc);\\r\\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\\r\\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\\r\\n}\\r\\n\\r\\nfunction __param(paramIndex, decorator) {\\r\\n    return function (target, key) { decorator(target, key, paramIndex); }\\r\\n}\\r\\n\\r\\nfunction __metadata(metadataKey, metadataValue) {\\r\\n    if (typeof Reflect === \\\"object\\\" && typeof Reflect.metadata === \\\"function\\\") return Reflect.metadata(metadataKey, metadataValue);\\r\\n}\\r\\n\\r\\nfunction __awaiter(thisArg, _arguments, P, generator) {\\r\\n    return new (P || (P = Promise))(function (resolve, reject) {\\r\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\r\\n        function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\r\\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\\r\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction __generator(thisArg, body) {\\r\\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\r\\n    return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\r\\n    function verb(n) { return function (v) { return step([n, v]); }; }\\r\\n    function step(op) {\\r\\n        if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\r\\n        while (_) try {\\r\\n            if (f = 1, y && (t = op[0] & 2 ? y[\\\"return\\\"] : op[0] ? y[\\\"throw\\\"] || ((t = y[\\\"return\\\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\\r\\n            if (y = 0, t) op = [op[0] & 2, t.value];\\r\\n            switch (op[0]) {\\r\\n                case 0: case 1: t = op; break;\\r\\n                case 4: _.label++; return { value: op[1], done: false };\\r\\n                case 5: _.label++; y = op[1]; op = [0]; continue;\\r\\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\\r\\n                default:\\r\\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\r\\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\r\\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\r\\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\r\\n                    if (t[2]) _.ops.pop();\\r\\n                    _.trys.pop(); continue;\\r\\n            }\\r\\n            op = body.call(thisArg, _);\\r\\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\r\\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction __exportStar(m, exports) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\n\\r\\nfunction __values(o) {\\r\\n    var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator], i = 0;\\r\\n    if (m) return m.call(o);\\r\\n    return {\\r\\n        next: function () {\\r\\n            if (o && i >= o.length) o = void 0;\\r\\n            return { value: o && o[i++], done: !o };\\r\\n        }\\r\\n    };\\r\\n}\\r\\n\\r\\nfunction __read(o, n) {\\r\\n    var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\r\\n    if (!m) return o;\\r\\n    var i = m.call(o), r, ar = [], e;\\r\\n    try {\\r\\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\r\\n    }\\r\\n    catch (error) { e = { error: error }; }\\r\\n    finally {\\r\\n        try {\\r\\n            if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\r\\n        }\\r\\n        finally { if (e) throw e.error; }\\r\\n    }\\r\\n    return ar;\\r\\n}\\r\\n\\r\\nfunction __spread() {\\r\\n    for (var ar = [], i = 0; i < arguments.length; i++)\\r\\n        ar = ar.concat(__read(arguments[i]));\\r\\n    return ar;\\r\\n}\\r\\n\\r\\nfunction __spreadArrays() {\\r\\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\\r\\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\\r\\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\\r\\n            r[k] = a[j];\\r\\n    return r;\\r\\n};\\r\\n\\r\\nfunction __await(v) {\\r\\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\\r\\n}\\r\\n\\r\\nfunction __asyncGenerator(thisArg, _arguments, generator) {\\r\\n    if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\r\\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\\r\\n    return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\r\\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\r\\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\r\\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\\r\\n    function fulfill(value) { resume(\\\"next\\\", value); }\\r\\n    function reject(value) { resume(\\\"throw\\\", value); }\\r\\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\r\\n}\\r\\n\\r\\nfunction __asyncDelegator(o) {\\r\\n    var i, p;\\r\\n    return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\", function (e) { throw e; }), verb(\\\"return\\\"), i[Symbol.iterator] = function () { return this; }, i;\\r\\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \\\"return\\\" } : f ? f(v) : v; } : f; }\\r\\n}\\r\\n\\r\\nfunction __asyncValues(o) {\\r\\n    if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\r\\n    var m = o[Symbol.asyncIterator], i;\\r\\n    return m ? m.call(o) : (o = typeof __values === \\\"function\\\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i);\\r\\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\\r\\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\\r\\n}\\r\\n\\r\\nfunction __makeTemplateObject(cooked, raw) {\\r\\n    if (Object.defineProperty) { Object.defineProperty(cooked, \\\"raw\\\", { value: raw }); } else { cooked.raw = raw; }\\r\\n    return cooked;\\r\\n};\\r\\n\\r\\nfunction __importStar(mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result.default = mod;\\r\\n    return result;\\r\\n}\\r\\n\\r\\nfunction __importDefault(mod) {\\r\\n    return (mod && mod.__esModule) ? mod : { default: mod };\\r\\n}\\r\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./node_modules/tslib/tslib.es6.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/Cache.js\":\n/*!********************************!*\\\n  !*** ./src/deriv_api/Cache.js ***!\n  \\********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return Cache; });\\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \\\"./node_modules/@babel/runtime/regenerator/index.js\\\");\\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \\\"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);\\n/* harmony import */ var _DerivAPICalls__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DerivAPICalls */ \\\"./src/deriv_api/DerivAPICalls.js\\\");\\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./errors */ \\\"./src/deriv_api/errors.js\\\");\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ \\\"./src/deriv_api/utils.js\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/**\\n * Cache - A class for implementing in-memory and persistent cache\\n *\\n * The real implementation of the underlying cache is delegated to the storage\\n * object (See the params).\\n *\\n * The storage object needs to implement the API.\\n *\\n * @example\\n * // Read the latest active symbols\\n * const symbols = await api.activeSymbols();\\n *\\n * // Read the data from cache if available\\n * const cached_symbols = await api.cache.activeSymbols();\\n *\\n * @param {DerivAPIBasic} api API instance to get data that is not cached\\n * @param {Object} storage A storage instance to use for caching\\n */\\n\\nvar Cache =\\n/*#__PURE__*/\\nfunction (_DerivAPICalls) {\\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(Cache, _DerivAPICalls);\\n\\n  function Cache(api, storage) {\\n    var _this;\\n\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, Cache);\\n\\n    if (!api) {\\n      throw new _errors__WEBPACK_IMPORTED_MODULE_8__[\\\"ConstructionError\\\"]('Cache object needs an API to work');\\n    }\\n\\n    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Cache).call(this));\\n    _this.api = api;\\n    _this.storage = storage;\\n    return _this;\\n  }\\n\\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(Cache, [{\\n    key: \\\"send\\\",\\n    value: function () {\\n      var _send = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(request) {\\n        var response;\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\\n          while (1) {\\n            switch (_context.prev = _context.next) {\\n              case 0:\\n                _context.next = 2;\\n                return this.has(request);\\n\\n              case 2:\\n                if (!_context.sent) {\\n                  _context.next = 4;\\n                  break;\\n                }\\n\\n                return _context.abrupt(\\\"return\\\", this.get(request));\\n\\n              case 4:\\n                _context.next = 6;\\n                return this.api.send(request);\\n\\n              case 6:\\n                response = _context.sent;\\n                _context.next = 9;\\n                return this.set(request, response);\\n\\n              case 9:\\n                return _context.abrupt(\\\"return\\\", response);\\n\\n              case 10:\\n              case \\\"end\\\":\\n                return _context.stop();\\n            }\\n          }\\n        }, _callee, this);\\n      }));\\n\\n      function send(_x) {\\n        return _send.apply(this, arguments);\\n      }\\n\\n      return send;\\n    }()\\n  }, {\\n    key: \\\"has\\\",\\n    value: function () {\\n      var _has = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(request) {\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\\n          while (1) {\\n            switch (_context2.prev = _context2.next) {\\n              case 0:\\n                return _context2.abrupt(\\\"return\\\", this.storage.has(Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\\\"objectToCacheKey\\\"])(request)));\\n\\n              case 1:\\n              case \\\"end\\\":\\n                return _context2.stop();\\n            }\\n          }\\n        }, _callee2, this);\\n      }));\\n\\n      function has(_x2) {\\n        return _has.apply(this, arguments);\\n      }\\n\\n      return has;\\n    }()\\n    /* Redirected to the method defined by the storage */\\n\\n  }, {\\n    key: \\\"get\\\",\\n    value: function () {\\n      var _get = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(request) {\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\\n          while (1) {\\n            switch (_context3.prev = _context3.next) {\\n              case 0:\\n                return _context3.abrupt(\\\"return\\\", this.storage.get(Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\\\"objectToCacheKey\\\"])(request)));\\n\\n              case 1:\\n              case \\\"end\\\":\\n                return _context3.stop();\\n            }\\n          }\\n        }, _callee3, this);\\n      }));\\n\\n      function get(_x3) {\\n        return _get.apply(this, arguments);\\n      }\\n\\n      return get;\\n    }()\\n    /* Redirected to the method defined by the storage */\\n\\n  }, {\\n    key: \\\"getByMsgType\\\",\\n    value: function () {\\n      var _getByMsgType = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(type) {\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\\n          while (1) {\\n            switch (_context4.prev = _context4.next) {\\n              case 0:\\n                return _context4.abrupt(\\\"return\\\", this.storage.getByMsgType(type));\\n\\n              case 1:\\n              case \\\"end\\\":\\n                return _context4.stop();\\n            }\\n          }\\n        }, _callee4, this);\\n      }));\\n\\n      function getByMsgType(_x4) {\\n        return _getByMsgType.apply(this, arguments);\\n      }\\n\\n      return getByMsgType;\\n    }()\\n    /* Redirected to the method defined by the storage */\\n\\n  }, {\\n    key: \\\"set\\\",\\n    value: function () {\\n      var _set = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(request, response) {\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\\n          while (1) {\\n            switch (_context5.prev = _context5.next) {\\n              case 0:\\n                return _context5.abrupt(\\\"return\\\", this.storage.set(Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\\\"objectToCacheKey\\\"])(request), response));\\n\\n              case 1:\\n              case \\\"end\\\":\\n                return _context5.stop();\\n            }\\n          }\\n        }, _callee5, this);\\n      }));\\n\\n      function set(_x5, _x6) {\\n        return _set.apply(this, arguments);\\n      }\\n\\n      return set;\\n    }()\\n  }]);\\n\\n  return Cache;\\n}(_DerivAPICalls__WEBPACK_IMPORTED_MODULE_7__[\\\"default\\\"]);\\n\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/Cache.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/CustomPromise.js\":\n/*!****************************************!*\\\n  !*** ./src/deriv_api/CustomPromise.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return CustomPromise; });\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \\\"./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__);\\n\\n\\n\\n\\n\\n\\n\\nvar CustomPromise =\\n/*#__PURE__*/\\nfunction (_Promise) {\\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(CustomPromise, _Promise);\\n\\n  function CustomPromise() {\\n    var _this;\\n\\n    var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\\n\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CustomPromise);\\n\\n    var resolve;\\n    var reject;\\n    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(CustomPromise).call(this, function (parentResolve, parentReject) {\\n      resolve = parentResolve;\\n      reject = parentReject;\\n    }));\\n    cb(resolve, reject);\\n    _this.resolveCallback = resolve;\\n    _this.rejectCallback = reject;\\n    _this.state = 'pending';\\n    return _this;\\n  }\\n\\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(CustomPromise, [{\\n    key: \\\"resolve\\\",\\n    value: function resolve(data) {\\n      this.resolveCallback(data);\\n      this.state = 'resolved';\\n      return this;\\n    }\\n  }, {\\n    key: \\\"reject\\\",\\n    value: function reject(error) {\\n      this.rejectCallback(error);\\n      this.state = 'rejected';\\n      return this;\\n    }\\n  }, {\\n    key: \\\"isPending\\\",\\n    value: function isPending() {\\n      return this.state === 'pending';\\n    }\\n  }, {\\n    key: \\\"isRejected\\\",\\n    value: function isRejected() {\\n      return this.state === 'rejected';\\n    }\\n  }, {\\n    key: \\\"isResolved\\\",\\n    value: function isResolved() {\\n      return this.state === 'resolved';\\n    }\\n  }], [{\\n    key: \\\"wrap\\\",\\n    value: function wrap(promise) {\\n      if (promise instanceof this) return promise;\\n      var custom_promise = new this();\\n      promise.then(custom_promise.resolve.bind(custom_promise), custom_promise.reject.bind(custom_promise));\\n      return custom_promise;\\n    }\\n  }]);\\n\\n  return CustomPromise;\\n}(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5___default()(Promise));\\n\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/CustomPromise.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/DerivAPIBasic.js\":\n/*!****************************************!*\\\n  !*** ./src/deriv_api/DerivAPIBasic.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return DerivAPIBasic; });\\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \\\"./node_modules/@babel/runtime/helpers/slicedToArray.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \\\"./node_modules/@babel/runtime/helpers/typeof.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ \\\"./node_modules/@babel/runtime/regenerator/index.js\\\");\\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \\\"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__);\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__);\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__);\\n/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \\\"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__);\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_9__);\\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ \\\"./node_modules/rxjs/_esm5/operators/index.js\\\");\\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \\\"./node_modules/rxjs/_esm5/index.js\\\");\\n/* harmony import */ var _Cache__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Cache */ \\\"./src/deriv_api/Cache.js\\\");\\n/* harmony import */ var _CustomPromise__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./CustomPromise */ \\\"./src/deriv_api/CustomPromise.js\\\");\\n/* harmony import */ var _DerivAPICalls__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./DerivAPICalls */ \\\"./src/deriv_api/DerivAPICalls.js\\\");\\n/* harmony import */ var _InMemory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./InMemory */ \\\"./src/deriv_api/InMemory.js\\\");\\n/* harmony import */ var _SubscriptionManager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./SubscriptionManager */ \\\"./src/deriv_api/SubscriptionManager.js\\\");\\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./errors */ \\\"./src/deriv_api/errors.js\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/**\\n * The minimum functionality provided by DerivAPI, provides direct calls to the\\n * API.\\n * `api.cache` is available if you want to use the cached data (see {@link Cache})\\n *\\n * @example\\n * const apiFromOpenConnection = new DerivAPI({ connection });\\n * const apiFromEndpoint = new DerivAPI({ endpoint: 'ws.binaryws.com', app_id: 1234 });\\n *\\n * @param {Object}     options\\n * @param {WebSocket=} options.connection - A ready to use connection\\n * @param {String}     options.endpoint   - API server to connect to\\n * @param {Number}     options.app_id     - Application ID of the API user\\n * @param {String}     options.lang       - Language of the API communication\\n * @param {String}     options.brand      - Brand name\\n * @param {Object}     options.middleware - A middleware to call on certain API actions\\n *\\n * @property {Observable} events\\n * @property {Cache} cache - Temporary cache default to @link{InMemory}\\n * @property {Cache} storage - If specified, uses a more presistent cache (local storage, etc.)\\n */\\n\\nvar DerivAPIBasic =\\n/*#__PURE__*/\\nfunction (_DerivAPICalls) {\\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_9___default()(DerivAPIBasic, _DerivAPICalls);\\n\\n  function DerivAPIBasic() {\\n    var _this;\\n\\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n        storage = _ref.storage,\\n        app_id = _ref.app_id,\\n        connection = _ref.connection,\\n        _ref$cache = _ref.cache,\\n        cache = _ref$cache === void 0 ? new _InMemory__WEBPACK_IMPORTED_MODULE_15__[\\\"default\\\"]() : _ref$cache,\\n        _ref$endpoint = _ref.endpoint,\\n        endpoint = _ref$endpoint === void 0 ? 'frontend.binaryws.com' : _ref$endpoint,\\n        _ref$lang = _ref.lang,\\n        lang = _ref$lang === void 0 ? 'EN' : _ref$lang,\\n        _ref$brand = _ref.brand,\\n        brand = _ref$brand === void 0 ? '' : _ref$brand,\\n        _ref$middleware = _ref.middleware,\\n        middleware = _ref$middleware === void 0 ? {} : _ref$middleware;\\n\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4___default()(this, DerivAPIBasic);\\n\\n    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(DerivAPIBasic).call(this));\\n    _this.events = new rxjs__WEBPACK_IMPORTED_MODULE_11__[\\\"Subject\\\"]();\\n\\n    if (connection) {\\n      _this.connection = connection;\\n    } else {\\n      if (!app_id) throw Error('An app_id is required to connect to the API');\\n      _this.shouldReconnect = true;\\n      _this.connectionArgs = {\\n        app_id: app_id,\\n        endpointUrl: getUrl(endpoint),\\n        lang: lang.toUpperCase(),\\n        brand: brand.toLowerCase()\\n      };\\n\\n      _this.connect();\\n    }\\n\\n    _this.lang = lang;\\n    _this.reqId = 0;\\n    _this.connected = new _CustomPromise__WEBPACK_IMPORTED_MODULE_13__[\\\"default\\\"]();\\n    _this.sanityErrors = new rxjs__WEBPACK_IMPORTED_MODULE_11__[\\\"Subject\\\"]();\\n    _this.middleware = middleware;\\n    _this.pendingRequests = {};\\n    _this.expect_response_types = {};\\n    _this.subscription_manager = new _SubscriptionManager__WEBPACK_IMPORTED_MODULE_16__[\\\"default\\\"](_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default()(_this));\\n\\n    if (storage) {\\n      _this.storage = new _Cache__WEBPACK_IMPORTED_MODULE_12__[\\\"default\\\"](_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default()(_this), storage);\\n    } // If we have the storage look that one up\\n\\n\\n    _this.cache = new _Cache__WEBPACK_IMPORTED_MODULE_12__[\\\"default\\\"](_this.storage ? _this.storage : _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default()(_this), cache);\\n    _this.connection.onopen = _this.openHandler.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default()(_this));\\n    _this.connection.onclose = _this.closeHandler.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default()(_this));\\n    _this.connection.onmessage = _this.messageHandler.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default()(_this));\\n    return _this;\\n  }\\n\\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5___default()(DerivAPIBasic, [{\\n    key: \\\"connect\\\",\\n    value: function connect() {\\n      if (!this.connectionArgs) {\\n        throw new _errors__WEBPACK_IMPORTED_MODULE_17__[\\\"ConstructionError\\\"]('Connection arguments are required to create a connection.');\\n      }\\n\\n      this.events.next({\\n        name: 'connect'\\n      });\\n      var _this$connectionArgs = this.connectionArgs,\\n          endpointUrl = _this$connectionArgs.endpointUrl,\\n          lang = _this$connectionArgs.lang,\\n          app_id = _this$connectionArgs.app_id,\\n          brand = _this$connectionArgs.brand;\\n      this.connection = new WebSocket(\\\"\\\".concat(endpointUrl.toString(), \\\"websockets/v3?app_id=\\\").concat(app_id, \\\"&l=\\\").concat(lang, \\\"&brand=\\\").concat(brand));\\n    }\\n  }, {\\n    key: \\\"disconnect\\\",\\n    value: function disconnect() {\\n      this.shouldReconnect = false; // prevents re-connecting automatically\\n\\n      this.connection.close();\\n    }\\n  }, {\\n    key: \\\"isConnectionClosed\\\",\\n    value: function isConnectionClosed() {\\n      return this.connection.readyState === 2 || this.connection.readyState === 3;\\n    }\\n  }, {\\n    key: \\\"sendAndGetSource\\\",\\n    value: function sendAndGetSource(request) {\\n      var _this2 = this;\\n\\n      var pending = new rxjs__WEBPACK_IMPORTED_MODULE_11__[\\\"Subject\\\"]();\\n      request.req_id = request.req_id || ++this.reqId;\\n      this.pendingRequests[request.req_id] = pending;\\n      this.connected.then(function () {\\n        if (_this2.isConnectionClosed()) return;\\n\\n        _this2.connection.send(JSON.stringify(request));\\n      })[\\\"catch\\\"](function (e) {\\n        return pending.error(e);\\n      });\\n      return pending;\\n    }\\n  }, {\\n    key: \\\"send\\\",\\n    value: function () {\\n      var _send = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {\\n        var _this3 = this;\\n\\n        var _len,\\n            args,\\n            _key,\\n            send_will_be_called,\\n            request,\\n            response_promise,\\n            send_is_called,\\n            _args = arguments;\\n\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {\\n          while (1) {\\n            switch (_context.prev = _context.next) {\\n              case 0:\\n                for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n                  args[_key] = _args[_key];\\n                }\\n\\n                send_will_be_called = this.callMiddleware('sendWillBeCalled', {\\n                  args: args\\n                });\\n\\n                if (!send_will_be_called) {\\n                  _context.next = 4;\\n                  break;\\n                }\\n\\n                return _context.abrupt(\\\"return\\\", send_will_be_called);\\n\\n              case 4:\\n                request = args[0];\\n                this.events.next({\\n                  name: 'send',\\n                  data: request\\n                });\\n                this.deleteFromExpectResponse(request);\\n                response_promise = this.sendAndGetSource(request).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"first\\\"])()).toPromise();\\n                response_promise.then(function (response) {\\n                  _this3.cache.set(request, response);\\n\\n                  if (_this3.storage) {\\n                    _this3.storage.set(request, response);\\n                  }\\n                }, function () {}); // Ignore errors here\\n\\n                send_is_called = this.callMiddleware('sendIsCalled', {\\n                  response_promise: response_promise,\\n                  args: args\\n                });\\n\\n                if (!send_is_called) {\\n                  _context.next = 12;\\n                  break;\\n                }\\n\\n                return _context.abrupt(\\\"return\\\", send_is_called);\\n\\n              case 12:\\n                return _context.abrupt(\\\"return\\\", response_promise);\\n\\n              case 13:\\n              case \\\"end\\\":\\n                return _context.stop();\\n            }\\n          }\\n        }, _callee, this);\\n      }));\\n\\n      function send() {\\n        return _send.apply(this, arguments);\\n      }\\n\\n      return send;\\n    }()\\n  }, {\\n    key: \\\"callMiddleware\\\",\\n    value: function callMiddleware(name, args) {\\n      if (!(name in this.middleware)) return undefined;\\n      return this.middleware[name](args);\\n    }\\n  }, {\\n    key: \\\"subscribe\\\",\\n    value: function subscribe(request) {\\n      return this.subscription_manager.subscribe(request);\\n    }\\n  }, {\\n    key: \\\"forget\\\",\\n    value: function () {\\n      var _forget = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2(id) {\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {\\n          while (1) {\\n            switch (_context2.prev = _context2.next) {\\n              case 0:\\n                return _context2.abrupt(\\\"return\\\", this.subscription_manager.forget(id));\\n\\n              case 1:\\n              case \\\"end\\\":\\n                return _context2.stop();\\n            }\\n          }\\n        }, _callee2, this);\\n      }));\\n\\n      function forget(_x) {\\n        return _forget.apply(this, arguments);\\n      }\\n\\n      return forget;\\n    }()\\n  }, {\\n    key: \\\"forgetAll\\\",\\n    value: function () {\\n      var _forgetAll = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee3() {\\n        var _this$subscription_ma;\\n\\n        var _args3 = arguments;\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee3$(_context3) {\\n          while (1) {\\n            switch (_context3.prev = _context3.next) {\\n              case 0:\\n                return _context3.abrupt(\\\"return\\\", (_this$subscription_ma = this.subscription_manager).forgetAll.apply(_this$subscription_ma, _args3));\\n\\n              case 1:\\n              case \\\"end\\\":\\n                return _context3.stop();\\n            }\\n          }\\n        }, _callee3, this);\\n      }));\\n\\n      function forgetAll() {\\n        return _forgetAll.apply(this, arguments);\\n      }\\n\\n      return forgetAll;\\n    }()\\n  }, {\\n    key: \\\"openHandler\\\",\\n    value: function openHandler() {\\n      this.events.next({\\n        name: 'open'\\n      });\\n\\n      if (this.connection.readyState === 1) {\\n        this.connected.resolve();\\n      } else {\\n        setTimeout(this.openHandler.bind(this), 50);\\n      }\\n    }\\n  }, {\\n    key: \\\"messageHandler\\\",\\n    value: function messageHandler(msg) {\\n      if (!msg.data) {\\n        this.sanityErrors.next(new _errors__WEBPACK_IMPORTED_MODULE_17__[\\\"APIError\\\"]('Something went wrong while receiving the response from API.'));\\n        return;\\n      }\\n\\n      var response = JSON.parse(msg.data);\\n      this.events.next({\\n        name: 'message',\\n        data: response\\n      });\\n      var reqId = response.req_id;\\n\\n      if (reqId in this.pendingRequests) {\\n        var expect_response = this.expect_response_types[response.msg_type];\\n\\n        if (expect_response && expect_response.isPending()) {\\n          expect_response.resolve(response);\\n        }\\n\\n        var request = response.echo_req; // When one of the child subscriptions of `proposal_open_contract` has an error in the response,\\n        // it should be handled in the callback of consumer instead. Calling `error()` with parent subscription\\n        // will mark the parent subscription as complete and all child subscriptions will be forgotten.\\n\\n        var is_parent_subscription = request && request.proposal_open_contract && !request.contract_id;\\n\\n        if (response.error && !is_parent_subscription) {\\n          this.pendingRequests[reqId].error(response);\\n        } else if (this.pendingRequests[reqId].isStopped && response.subscription) {\\n          // Source is already marked as completed. In this case we should\\n          // send a forget request with the subscription id and ignore the response received.\\n          var id = response.subscription.id;\\n          this.forget(id);\\n        } else {\\n          this.pendingRequests[reqId].next(response);\\n        }\\n      } else {\\n        this.sanityErrors.next(new _errors__WEBPACK_IMPORTED_MODULE_17__[\\\"APIError\\\"]('Extra response'));\\n      }\\n    }\\n    /**\\n     * Reconnects to the API in case of connection error, unless connection is\\n     * passed as an argument, in that case reconnecting should be handled in the\\n     * API user side.\\n     * */\\n\\n  }, {\\n    key: \\\"closeHandler\\\",\\n    value: function closeHandler() {\\n      this.events.next({\\n        name: 'close'\\n      });\\n\\n      if (this.shouldReconnect) {\\n        this.events.next({\\n          name: 'reconnecting'\\n        });\\n        this.connect();\\n      }\\n    }\\n    /**\\n     * @returns {Observable} for close events\\n     */\\n\\n  }, {\\n    key: \\\"onClose\\\",\\n    value: function onClose() {\\n      return this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"filter\\\"])(function (e) {\\n        return e.name === 'close';\\n      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"share\\\"])());\\n    }\\n    /**\\n     * @returns {Observable} for open events\\n     */\\n\\n  }, {\\n    key: \\\"onOpen\\\",\\n    value: function onOpen() {\\n      return this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"filter\\\"])(function (e) {\\n        return e.name === 'open';\\n      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"share\\\"])());\\n    }\\n    /**\\n     * @returns {Observable} for new messages\\n     */\\n\\n  }, {\\n    key: \\\"onMessage\\\",\\n    value: function onMessage() {\\n      return this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"filter\\\"])(function (e) {\\n        return e.name === 'message';\\n      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__[\\\"share\\\"])());\\n    }\\n    /**\\n     * @param {String} types Expect these types to be received by the API\\n     *\\n     * @returns {Promise<Object>|Promise<Array>} Resolves to a single response or an array\\n     */\\n\\n  }, {\\n    key: \\\"expectResponse\\\",\\n    value: function () {\\n      var _expectResponse = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3___default()(\\n      /*#__PURE__*/\\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee4() {\\n        var _this4 = this;\\n\\n        var _len2,\\n            types,\\n            _key2,\\n            _args4 = arguments;\\n\\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee4$(_context4) {\\n          while (1) {\\n            switch (_context4.prev = _context4.next) {\\n              case 0:\\n                for (_len2 = _args4.length, types = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n                  types[_key2] = _args4[_key2];\\n                }\\n\\n                types.forEach(function (type) {\\n                  if (!(type in _this4.expect_response_types)) {\\n                    _this4.expect_response_types[type] = transformUndefinedToPromise(_this4.cache.getByMsgType(type).then(function (value) {\\n                      if (!value && _this4.storage) return _this4.storage.getByMsgType(type);\\n                      return value;\\n                    }));\\n                  }\\n                }); // expect on a single response returns a single response, not a list\\n\\n                if (!(types.length === 1)) {\\n                  _context4.next = 4;\\n                  break;\\n                }\\n\\n                return _context4.abrupt(\\\"return\\\", this.expect_response_types[types[0]]);\\n\\n              case 4:\\n                return _context4.abrupt(\\\"return\\\", Promise.all(types.map(function (type) {\\n                  return _this4.expect_response_types[type];\\n                })));\\n\\n              case 5:\\n              case \\\"end\\\":\\n                return _context4.stop();\\n            }\\n          }\\n        }, _callee4, this);\\n      }));\\n\\n      function expectResponse() {\\n        return _expectResponse.apply(this, arguments);\\n      }\\n\\n      return expectResponse;\\n    }()\\n  }, {\\n    key: \\\"deleteFromExpectResponse\\\",\\n    value: function deleteFromExpectResponse(request) {\\n      var response_type = Object.keys(this.expect_response_types).find(function (type) {\\n        return type in request;\\n      });\\n\\n      if (this.expect_response_types[response_type] && !this.expect_response_types[response_type].isPending()) {\\n        delete this.expect_response_types[response_type];\\n      }\\n    }\\n  }]);\\n\\n  return DerivAPIBasic;\\n}(_DerivAPICalls__WEBPACK_IMPORTED_MODULE_14__[\\\"default\\\"]);\\n\\n\\n\\nfunction getUrl(originalEndpoint) {\\n  if (typeof originalEndpoint !== 'string') {\\n    throw new _errors__WEBPACK_IMPORTED_MODULE_17__[\\\"ConstructionError\\\"](\\\"Endpoint must be a string, passed: \\\".concat(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default()(originalEndpoint)));\\n  }\\n\\n  var url;\\n\\n  try {\\n    // eslint-disable-next-line no-unused-vars\\n    var _originalEndpoint$mat = originalEndpoint.match(/((?:\\\\w*:\\\\/\\\\/)*)(.*)/),\\n        _originalEndpoint$mat2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_originalEndpoint$mat, 3),\\n        _ = _originalEndpoint$mat2[0],\\n        protocol = _originalEndpoint$mat2[1],\\n        endpoint = _originalEndpoint$mat2[2];\\n\\n    url = new URL(\\\"\\\".concat(protocol === 'ws://' ? protocol : 'wss://').concat(endpoint));\\n  } catch (e) {\\n    throw new _errors__WEBPACK_IMPORTED_MODULE_17__[\\\"ConstructionError\\\"](\\\"Invalid URL: \\\".concat(originalEndpoint));\\n  }\\n\\n  return url;\\n}\\n\\nfunction transformUndefinedToPromise(promise) {\\n  return _CustomPromise__WEBPACK_IMPORTED_MODULE_13__[\\\"default\\\"].wrap(promise.then(function (value) {\\n    if (!value) return new _CustomPromise__WEBPACK_IMPORTED_MODULE_13__[\\\"default\\\"]();\\n    return value;\\n  }));\\n}\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/DerivAPIBasic.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/DerivAPICalls.js\":\n/*!****************************************!*\\\n  !*** ./src/deriv_api/DerivAPICalls.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return DerivAPICalls; });\\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \\\"./node_modules/@babel/runtime/helpers/typeof.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \\\"./node_modules/@babel/runtime/helpers/defineProperty.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);\\n\\n\\n\\n\\n\\n// This file was automatically generated by scripts/regen-js.pl at 20190828-043424\\n// applies JSON schema to generate Deriv API\\n\\n/* eslint-disable max-len */\\n// =======================\\n// ----- API Methods -----\\n// =======================\\nvar DerivAPICalls =\\n/*#__PURE__*/\\nfunction () {\\n  function DerivAPICalls() {\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, DerivAPICalls);\\n  }\\n\\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(DerivAPICalls, [{\\n    key: \\\"accountClosure\\\",\\n    // To be implemented by the sub-class\\n    // constructor() { }\\n\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.account_closure - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.reason - Reason for closing off accounts.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n    value: function accountClosure() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_closure: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        reason: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'account_closure',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.account_security - Must be 1\\n     * @param {String} args.otp - OTP (one-time passcode) generated by a 2FA application like Authy, Google Authenticator or Yubikey.\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.totp_action - Action to be taken for managing TOTP (time-based one-time password, RFC6238). Generate will create a secret key which is then returned in the secret_key response field, you can then enable by using that code in a 2FA application.\\n     */\\n\\n  }, {\\n    key: \\\"accountSecurity\\\",\\n    value: function accountSecurity() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_security: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        otp: {\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        totp_action: {}\\n      };\\n      var allArgs = {\\n        method: 'account_security',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.account_statistics - Must be 1.\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"accountStatistics\\\",\\n    value: function accountStatistics() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_statistics: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'account_statistics',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.active_symbols - If you use 'brief', only a subset of fields will be returned.\\n     * @param {Any} args.landing_company - [Optional] If you specify this field, only symbols available for trading by that landing company will be returned. If you are logged in, only symbols available for trading by your landing company will be returned regardless of what you specify in this field.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.product_type - [Optional] If you specify this field, only symbols that can be traded through that product type will be returned.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"activeSymbols\\\",\\n    value: function activeSymbols() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        active_symbols: {\\n          required: 1\\n        },\\n        landing_company: {},\\n        passthrough: {},\\n        product_type: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'active_symbols',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.api_token - Must be 1\\n     * @param {String} args.delete_token - The token to remove\\n     * @param {String} args.new_token - The name of the created token\\n     * @param {Any} args.new_token_scopes -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.valid_for_current_ip_only - Optional field, if you set this parameter during token creation, then the token created will only work for the IP address that was used to create the token\\n     */\\n\\n  }, {\\n    key: \\\"apiToken\\\",\\n    value: function apiToken() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        api_token: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        delete_token: {\\n          type: 'string'\\n        },\\n        new_token: {\\n          type: 'string'\\n        },\\n        new_token_scopes: {},\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        valid_for_current_ip_only: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'api_token',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.app_delete - Application app_id\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"appDelete\\\",\\n    value: function appDelete() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        app_delete: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'app_delete',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.app_get - Application app_id\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"appGet\\\",\\n    value: function appGet() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        app_get: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'app_get',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.app_list -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"appList\\\",\\n    value: function appList() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        app_list: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'app_list',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.app_id - Optional: specific application app_id to report on\\n     * @param {Number} args.app_markup_details - Must be 1.\\n     * @param {String} args.client_loginid - Optional: specific client loginid to report on, like CR12345\\n     * @param {String} args.date_from - Start date (epoch or YYYY-MM-DD HH:MM:SS). Results are inclusive of this time.\\n     * @param {String} args.date_to - End date (epoch or YYYY-MM-DD HH::MM::SS). Results are inclusive of this time.\\n     * @param {Number} args.description - If set to 1, will return app_markup transaction details.\\n     * @param {Number} args.limit - Optional: (default 1000): Apply upper limit to count of transactions received\\n     * @param {Number} args.offset - Optional: Skip this many transactions\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.sort - Optional transaction_time sort direction, default DESC. Other fields sort order is ASC.\\n     * @param {Any} args.sort_fields - Optional one or more of the specified fields to sort on. Default sort field is by transaction_time.\\n     */\\n\\n  }, {\\n    key: \\\"appMarkupDetails\\\",\\n    value: function appMarkupDetails() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        app_id: {\\n          type: 'numeric'\\n        },\\n        app_markup_details: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        client_loginid: {\\n          type: 'string'\\n        },\\n        date_from: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        date_to: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        description: {\\n          type: 'numeric'\\n        },\\n        limit: {\\n          type: 'numeric'\\n        },\\n        offset: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        sort: {\\n          type: 'string'\\n        },\\n        sort_fields: {}\\n      };\\n      var allArgs = {\\n        method: 'app_markup_details',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.app_markup_percentage - Markup to be added to contract prices (as a percentage of contract payout). Min: 0, Max: 5\\n     * @param {Number} args.app_register - Must be 1\\n     * @param {String} args.appstore - Application's App Store URL (if applicable)\\n     * @param {String} args.github - Application's GitHub page (for open-source projects)\\n     * @param {String} args.googleplay - Application's Google Play URL (if applicable)\\n     * @param {String} args.homepage - Application's homepage\\n     * @param {String} args.name - Application name\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.redirect_uri - Application redirect_uri\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.scopes -\\n     * @param {String} args.verification_uri - Application verification_uri\\n     */\\n\\n  }, {\\n    key: \\\"appRegister\\\",\\n    value: function appRegister() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        app_markup_percentage: {\\n          type: 'numeric'\\n        },\\n        app_register: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        appstore: {\\n          type: 'string'\\n        },\\n        github: {\\n          type: 'string'\\n        },\\n        googleplay: {\\n          type: 'string'\\n        },\\n        homepage: {\\n          type: 'string'\\n        },\\n        name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        redirect_uri: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        scopes: {\\n          required: 1\\n        },\\n        verification_uri: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'app_register',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.app_markup_percentage - Markup to be added to contract prices (as a percentage of contract payout). Min: 0, Max: 5\\n     * @param {Number} args.app_update - Application app_id\\n     * @param {String} args.appstore - Application's App Store URL (if applicable)\\n     * @param {String} args.github - Application's GitHub page (for open-source projects)\\n     * @param {String} args.googleplay - Application's Google Play URL (if applicable)\\n     * @param {String} args.homepage - Application's homepage\\n     * @param {String} args.name - Application name\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.redirect_uri - Application redirect_uri\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.scopes - Change scopes will revoke all user's grants and log them out.\\n     * @param {String} args.verification_uri - Application verification_uri\\n     */\\n\\n  }, {\\n    key: \\\"appUpdate\\\",\\n    value: function appUpdate() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        app_markup_percentage: {\\n          type: 'numeric'\\n        },\\n        app_update: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        appstore: {\\n          type: 'string'\\n        },\\n        github: {\\n          type: 'string'\\n        },\\n        googleplay: {\\n          type: 'string'\\n        },\\n        homepage: {\\n          type: 'string'\\n        },\\n        name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        redirect_uri: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        scopes: {\\n          required: 1\\n        },\\n        verification_uri: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'app_update',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.asset_index - Must be 1.\\n     * @param {Any} args.landing_company - [Optional] If specified, will return only the underlyings for the specified landing company.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"assetIndex\\\",\\n    value: function assetIndex() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        asset_index: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        landing_company: {},\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'asset_index',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.add_to_login_history - [Optional] Send this when you use api tokens for authorization and want to track activity using login_history call.\\n     * @param {String} args.authorize - Authentication token. May be retrieved from https://www.binary.com/en/user/security/api_tokenws.html\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"authorize\\\",\\n    value: function authorize() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        add_to_login_history: {},\\n        authorize: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'authorize',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.balance - Must be 1.\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.subscribe - If set to 1, will send updates whenever the balance changes.\\n     */\\n\\n  }, {\\n    key: \\\"balance\\\",\\n    value: function balance() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        balance: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {}\\n      };\\n      var allArgs = {\\n        method: 'balance',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.buy - Either the id received from a Price Proposal (proposal) call, or 1 if contract buy parameters are passed in the parameters field\\n     * @param {Any} args.parameters -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.price - Maximum price at which to purchase the contract.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.subscribe - 1 - to stream\\n     */\\n\\n  }, {\\n    key: \\\"buy\\\",\\n    value: function buy() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        buy: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        parameters: {\\n          amount: {\\n            type: 'numeric'\\n          },\\n          app_markup_percentage: {\\n            type: 'numeric'\\n          },\\n          barrier: {\\n            type: 'string'\\n          },\\n          barrier2: {\\n            type: 'string'\\n          },\\n          basis: {},\\n          contract_type: {\\n            required: 1,\\n            type: 'string'\\n          },\\n          currency: {\\n            required: 1,\\n            type: 'string'\\n          },\\n          date_expiry: {\\n            type: 'numeric'\\n          },\\n          date_start: {\\n            type: 'numeric'\\n          },\\n          duration: {\\n            type: 'numeric'\\n          },\\n          duration_unit: {},\\n          product_type: {\\n            type: 'string'\\n          },\\n          selected_tick: {\\n            type: 'numeric'\\n          },\\n          symbol: {\\n            required: 1,\\n            type: 'string'\\n          },\\n          trading_period_start: {\\n            type: 'numeric'\\n          }\\n        },\\n        passthrough: {},\\n        price: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {}\\n      };\\n      var allArgs = {\\n        method: 'buy',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.buy_contract_for_multiple_accounts - Either the id received from a Price Proposal (proposal) call, or 1 if contract buy parameters are passed in the parameters field\\n     * @param {Any} args.parameters -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.price - Maximum price at which to purchase the contract.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.tokens -\\n     */\\n\\n  }, {\\n    key: \\\"buyContractForMultipleAccounts\\\",\\n    value: function buyContractForMultipleAccounts() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        buy_contract_for_multiple_accounts: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        parameters: {\\n          amount: {\\n            type: 'numeric'\\n          },\\n          app_markup_percentage: {\\n            type: 'numeric'\\n          },\\n          barrier: {\\n            type: 'string'\\n          },\\n          barrier2: {\\n            type: 'string'\\n          },\\n          basis: {},\\n          contract_type: {\\n            required: 1,\\n            type: 'string'\\n          },\\n          currency: {\\n            required: 1,\\n            type: 'string'\\n          },\\n          date_expiry: {\\n            type: 'numeric'\\n          },\\n          date_start: {\\n            type: 'numeric'\\n          },\\n          duration: {\\n            type: 'numeric'\\n          },\\n          duration_unit: {},\\n          selected_tick: {\\n            type: 'numeric'\\n          },\\n          symbol: {\\n            required: 1,\\n            type: 'string'\\n          }\\n        },\\n        passthrough: {},\\n        price: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        tokens: {\\n          required: 1\\n        }\\n      };\\n      var allArgs = {\\n        method: 'buy_contract_for_multiple_accounts',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.cashier - either deposit or withdraw, default to deposit\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.provider - Note only doughflow is supported currently.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.verification_code - Email verification code (received from a verify_email call, which must be done first)\\n     */\\n\\n  }, {\\n    key: \\\"cashier\\\",\\n    value: function cashier() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        cashier: {\\n          required: 1\\n        },\\n        passthrough: {},\\n        provider: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        verification_code: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'cashier',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.cashier_password - Must be 1\\n     * @param {String} args.lock_password - new password to lock cashier, required for lock (length within 6-25 chars, accepts any printable ASCII character)\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.unlock_password - old password to unlock cashier, required for unlock (length within 6-25 chars, accepts any printable ASCII character)\\n     */\\n\\n  }, {\\n    key: \\\"cashierPassword\\\",\\n    value: function cashierPassword() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        cashier_password: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        lock_password: {\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        unlock_password: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'cashier_password',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.change_password - Must be 1\\n     * @param {String} args.new_password - New password (length within 6-25 chars, accepts any printable ASCII character)\\n     * @param {String} args.old_password - Old password for validation (non-empty string, accepts any printable ASCII character)\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"changePassword\\\",\\n    value: function changePassword() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        change_password: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        new_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        old_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'change_password',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.contracts_for - The short symbol name (obtained from active_symbols call).\\n     * @param {String} args.currency - [Optional] Currency of the contract's stake and payout (obtained from payout_currencies call).\\n     * @param {Any} args.landing_company - [Optional] Indicates which landing_company to get a list of contracts for. If you are logged in, your landing company will override this field.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.product_type - [Optional] If you specify this field, only contracts tradable through that contract type will be returned.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"contractsFor\\\",\\n    value: function contractsFor() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        contracts_for: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        currency: {\\n          type: 'string'\\n        },\\n        landing_company: {},\\n        passthrough: {},\\n        product_type: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'contracts_for',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.assets - Optional field, used to set assets to be copied. E.x [\\\"frxUSDJPY\\\", \\\"R_50\\\"]\\n     * @param {String} args.copy_start - API tokens identifying the accounts of trader which will be used to copy trades\\n     * @param {Number} args.max_trade_stake - Optional field, used to set maximum trade stake to be copied\\n     * @param {Number} args.min_trade_stake - Optional field, used to set minimal trade stake to be copied\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.trade_types - Optional field, used to set trade types to be copied. E.x [\\\"CALL\\\", \\\"PUT\\\"]\\n     */\\n\\n  }, {\\n    key: \\\"copyStart\\\",\\n    value: function copyStart() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        assets: {},\\n        copy_start: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        max_trade_stake: {\\n          type: 'numeric'\\n        },\\n        min_trade_stake: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        trade_types: {}\\n      };\\n      var allArgs = {\\n        method: 'copy_start',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.copy_stop - API tokens identifying the accounts which needs not to be copied\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"copyStop\\\",\\n    value: function copyStop() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        copy_stop: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'copy_stop',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.copytrading_list - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"copytradingList\\\",\\n    value: function copytradingList() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        copytrading_list: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'copytrading_list',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.copytrading_statistics - Must be 1.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {String} args.trader_id - The id of the target trader.\\n     */\\n\\n  }, {\\n    key: \\\"copytradingStatistics\\\",\\n    value: function copytradingStatistics() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        copytrading_statistics: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        trader_id: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'copytrading_statistics',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.document_format - Document file format\\n     * @param {String} args.document_id - [Optional] Document ID (required for Passport, Proof of ID and Driver's License)\\n     * @param {String} args.document_type - Document type\\n     * @param {Number} args.document_upload - Must be 1\\n     * @param {String} args.expected_checksum - The checksum of the file to be uploaded\\n     * @param {String} args.expiration_date - [Optional] Document expiration date (required for Passport, Proof of ID and Driver's License)\\n     * @param {Number} args.file_size - Document size (should be less than 3MB)\\n     * @param {Any} args.page_type - Optional field to determine document side\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"documentUpload\\\",\\n    value: function documentUpload() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        document_format: {\\n          required: 1\\n        },\\n        document_id: {\\n          type: 'string'\\n        },\\n        document_type: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        document_upload: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        expected_checksum: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        expiration_date: {\\n          type: 'string'\\n        },\\n        file_size: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        page_type: {},\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'document_upload',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.base_currency - Base currency (can be obtained from payout_currencies call)\\n     * @param {Number} args.exchange_rates - Must be 1\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"exchangeRates\\\",\\n    value: function exchangeRates() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        base_currency: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        exchange_rates: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'exchange_rates',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.forget - ID of the real-time stream of messages to cancel.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"forget\\\",\\n    value: function forget() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        forget: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'forget',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.forget_all - Cancel all streams by type (it can be a single string e.g. 'ticks', or an array of multiple values, e.g. ['ticks', 'candles']). Possible values are: 'ticks', 'candles', 'proposal', 'proposal_open_contract', 'balance', 'transaction', 'proposal_array', 'website_status'.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"forgetAll\\\",\\n    value: function forgetAll() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        forget_all: {\\n          required: 1\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'forget_all',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.get_account_status - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"getAccountStatus\\\",\\n    value: function getAccountStatus() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        get_account_status: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'get_account_status',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.get_financial_assessment -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"getFinancialAssessment\\\",\\n    value: function getFinancialAssessment() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        get_financial_assessment: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'get_financial_assessment',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.get_limits - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"getLimits\\\",\\n    value: function getLimits() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        get_limits: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'get_limits',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.get_self_exclusion - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"getSelfExclusion\\\",\\n    value: function getSelfExclusion() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        get_self_exclusion: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'get_self_exclusion',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.get_settings - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"getSettings\\\",\\n    value: function getSettings() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        get_settings: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'get_settings',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.landing_company - Client's 2-letter country code (obtained from residence_list call).\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"landingCompany\\\",\\n    value: function landingCompany() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        landing_company: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'landing_company',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.landing_company_details - Landing company shortcode.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"landingCompanyDetails\\\",\\n    value: function landingCompanyDetails() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        landing_company_details: {\\n          required: 1\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'landing_company_details',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.limit - Apply limit to count of login history records, default to 10. Max:50\\n     * @param {Number} args.login_history - Must be 1.\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"loginHistory\\\",\\n    value: function loginHistory() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        limit: {\\n          type: 'numeric'\\n        },\\n        login_history: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'login_history',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.logout - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"logout\\\",\\n    value: function logout() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        logout: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'logout',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.amount - Amount to deposit (in the currency of from_binary); min = $1 or an equivalent amount, max = $20000 or an equivalent amount\\n     * @param {String} args.from_binary - Binary account loginid to transfer money from\\n     * @param {Number} args.mt5_deposit -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.to_mt5 - MT5 account login to deposit money to\\n     */\\n\\n  }, {\\n    key: \\\"mt5Deposit\\\",\\n    value: function mt5Deposit() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        amount: {\\n          type: 'numeric'\\n        },\\n        from_binary: {\\n          type: 'string'\\n        },\\n        mt5_deposit: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        to_mt5: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_deposit',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.login - MT5 user login\\n     * @param {Number} args.mt5_get_settings - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"mt5GetSettings\\\",\\n    value: function mt5GetSettings() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        login: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mt5_get_settings: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_get_settings',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.mt5_login_list - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"mt5LoginList\\\",\\n    value: function mt5LoginList() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        mt5_login_list: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_login_list',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.action - [Optional] Pass this if you want to revoke current manager assigned to mt5 account\\n     * @param {String} args.login - MT5 user login\\n     * @param {Number} args.mt5_mamm -\\n     * @param {Any} args.passthrough - [Optional] field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"mt5Mamm\\\",\\n    value: function mt5Mamm() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        action: {},\\n        login: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mt5_mamm: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_mamm',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.account_type - Account type\\n     * @param {String} args.address - [Optional] The address of the user. The maximum length of this address field is 128 characters.\\n     * @param {String} args.city - [Optional] User's city of residence.\\n     * @param {String} args.company - [Optional] Name of the client's company. The maximum length of the company name is 64 characters.\\n     * @param {String} args.country - [Optional] 2-letter country code (value received from residence_list call).\\n     * @param {String} args.email - Email address\\n     * @param {String} args.investPassword - The investor password of the account. The password must contain at least two of three types of characters (lower case, upper case and digits) and meet the minimum length requirements set for the group. This field is required.\\n     * @param {String} args.leverage - Client leverage (from 1 to 1000).\\n     * @param {String} args.mainPassword - the master password of the account. The password must contain at least two of three types of characters (lower case, upper case and digits) and meet the minimum length requirements set for the group. This field is required.\\n     * @param {Number} args.manager_id - [Optional] Login id of manager whom you want to assign to manage your assets, applicable for MT5 Multiple Accounts Manager only.\\n     * @param {Any} args.mt5_account_type - Standard: Variable spreads, High leverage. Advanced: Variable spreads, Medium Leverage, more products.\\n     * @param {Number} args.mt5_new_account - Must be 1\\n     * @param {String} args.name - Client's name. The maximum length here is 101 characters.\\n     * @param {Any} args.passthrough - [Optional] field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.phone - [Optional] User's phone number. Max length 50.\\n     * @param {String} args.phonePassword - the user's phone password. Max length 50.\\n     * @param {Number} args.req_id - [Optional] field to map request to response\\n     * @param {String} args.state - [Optional] User's state (region) of residence.\\n     * @param {String} args.zipCode - [Optional] User's zip code. Max length 50.\\n     */\\n\\n  }, {\\n    key: \\\"mt5NewAccount\\\",\\n    value: function mt5NewAccount() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_type: {\\n          required: 1\\n        },\\n        address: {\\n          type: 'string'\\n        },\\n        city: {\\n          type: 'string'\\n        },\\n        company: {\\n          type: 'string'\\n        },\\n        country: {\\n          type: 'string'\\n        },\\n        email: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        investPassword: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        leverage: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mainPassword: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        manager_id: {\\n          type: 'numeric'\\n        },\\n        mt5_account_type: {},\\n        mt5_new_account: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        phone: {\\n          type: 'string'\\n        },\\n        phonePassword: {\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        state: {\\n          type: 'string'\\n        },\\n        zipCode: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_new_account',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.login - MT5 user login\\n     * @param {Number} args.mt5_password_change - Must be 1\\n     * @param {String} args.new_password - New password (length within 8-25 chars, accepts any printable ASCII character)\\n     * @param {String} args.old_password - Old password for validation (non-empty string, accepts any printable ASCII character)\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.password_type - Password type main/investor (default: main)\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"mt5PasswordChange\\\",\\n    value: function mt5PasswordChange() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        login: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mt5_password_change: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        new_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        old_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        password_type: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_password_change',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.login - MT5 user login\\n     * @param {Number} args.mt5_password_check - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.password - the password of the account.\\n     * @param {Any} args.password_type - the password type main/investor (default: main)\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"mt5PasswordCheck\\\",\\n    value: function mt5PasswordCheck() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        login: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mt5_password_check: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        password_type: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_password_check',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.login - MT5 user login\\n     * @param {Number} args.mt5_password_reset - Must be 1\\n     * @param {String} args.new_password - New password of the account (length within 8-25 chars, accepts any printable ASCII character).\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.password_type - Password type main/investor (default: main)\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.verification_code - Email verification code (received from a verify_email call, which must be done first)\\n     */\\n\\n  }, {\\n    key: \\\"mt5PasswordReset\\\",\\n    value: function mt5PasswordReset() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        login: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mt5_password_reset: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        new_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        password_type: {\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        verification_code: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_password_reset',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.amount - Amount to withdraw (in the currency of the MT5 account); min = $1 or an equivalent amount, max = $20000 or an equivalent amount.\\n     * @param {String} args.from_mt5 - MT5 account login to withdraw money from\\n     * @param {Number} args.mt5_withdrawal -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.to_binary - Binary account loginid to transfer money to\\n     */\\n\\n  }, {\\n    key: \\\"mt5Withdrawal\\\",\\n    value: function mt5Withdrawal() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        amount: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        from_mt5: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        mt5_withdrawal: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        to_binary: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'mt5_withdrawal',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.accept_risk - Show whether client has accepted risk disclaimer, boolean value 1 or 0\\n     * @param {String} args.account_opening_reason - Purpose and reason for requesting the account opening\\n     * @param {Any} args.account_turnover - The anticipated account turnover\\n     * @param {String} args.address_city - Within 35 characters\\n     * @param {String} args.address_line_1 - Within 70 characters.\\n     * @param {String} args.address_line_2 - Optional field, within 70 characters.\\n     * @param {String} args.address_postcode - Optional field, within 20 characters and may not contain '+'.\\n     * @param {String} args.address_state - Optional field, possible value receive from states_list call.\\n     * @param {String} args.affiliate_token - Affiliate token, within 32 characters.\\n     * @param {Any} args.binary_options_trading_experience - Binary options trading experience\\n     * @param {Any} args.binary_options_trading_frequency - Binary options trading frequency\\n     * @param {Any} args.cfd_trading_experience - CFDs trading experience\\n     * @param {Any} args.cfd_trading_frequency - CFDs trading frequency\\n     * @param {String} args.citizen - Country of legal citizenship, 2-letter country code.\\n     * @param {Any} args.client_type - Optional field, indicates whether this is for a client requesting an account with professional status. Defaults to retail.\\n     * @param {String} args.date_of_birth - Date of birth format: yyyy-mm-dd.\\n     * @param {Any} args.education_level - Level of Education\\n     * @param {Any} args.employment_industry - Industry of Employment\\n     * @param {Any} args.employment_status - Employment Status\\n     * @param {Any} args.estimated_worth - Estimated Net Worth\\n     * @param {String} args.first_name - Within 2-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes.\\n     * @param {Any} args.forex_trading_experience - Forex trading experience\\n     * @param {Any} args.forex_trading_frequency - Forex trading frequency\\n     * @param {Any} args.income_source - Income Source\\n     * @param {String} args.last_name - Within 2-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes.\\n     * @param {Any} args.net_income - Net Annual Income\\n     * @param {Number} args.new_account_maltainvest - Must be 1\\n     * @param {Any} args.occupation - Occupation\\n     * @param {Any} args.other_instruments_trading_experience - Trading experience in other financial instruments\\n     * @param {Any} args.other_instruments_trading_frequency - Trading frequency in other financial instruments\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.phone - Within 8-35 digits, allowing '+' in front, numbers, hyphens or space.\\n     * @param {String} args.place_of_birth - Place of birth, 2-letter country code.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.residence - 2-letter country code, possible value receive from residence_list call.\\n     * @param {Any} args.salutation - Accept any value in enum list.\\n     * @param {String} args.secret_answer - Answer to secret question, within 4-50 characters.\\n     * @param {Any} args.secret_question - Accept any value in enum list.\\n     * @param {Any} args.source_of_wealth - Source of wealth\\n     * @param {String} args.tax_identification_number - Tax identification number. Only applicable for real money account. Required for maltainvest landing company.\\n     * @param {String} args.tax_residence - Residence for tax purpose. Comma separated iso country code if multiple jurisdictions. Only applicable for real money account. Required for maltainvest landing company.\\n     */\\n\\n  }, {\\n    key: \\\"newAccountMaltainvest\\\",\\n    value: function newAccountMaltainvest() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        accept_risk: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        account_opening_reason: {\\n          type: 'string'\\n        },\\n        account_turnover: {},\\n        address_city: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        address_line_1: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        address_line_2: {\\n          type: 'string'\\n        },\\n        address_postcode: {\\n          type: 'string'\\n        },\\n        address_state: {\\n          type: 'string'\\n        },\\n        affiliate_token: {\\n          type: 'string'\\n        },\\n        binary_options_trading_experience: {},\\n        binary_options_trading_frequency: {},\\n        cfd_trading_experience: {},\\n        cfd_trading_frequency: {},\\n        citizen: {\\n          type: 'string'\\n        },\\n        client_type: {},\\n        date_of_birth: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        education_level: {\\n          required: 1\\n        },\\n        employment_industry: {\\n          required: 1\\n        },\\n        employment_status: {},\\n        estimated_worth: {\\n          required: 1\\n        },\\n        first_name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        forex_trading_experience: {},\\n        forex_trading_frequency: {},\\n        income_source: {\\n          required: 1\\n        },\\n        last_name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        net_income: {\\n          required: 1\\n        },\\n        new_account_maltainvest: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        occupation: {\\n          required: 1\\n        },\\n        other_instruments_trading_experience: {},\\n        other_instruments_trading_frequency: {},\\n        passthrough: {},\\n        phone: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        place_of_birth: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        residence: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        salutation: {\\n          required: 1\\n        },\\n        secret_answer: {\\n          type: 'string'\\n        },\\n        secret_question: {},\\n        source_of_wealth: {},\\n        tax_identification_number: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        tax_residence: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'new_account_maltainvest',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.account_opening_reason - Purpose and reason for requesting the account opening\\n     * @param {Any} args.account_turnover - The anticipated account turnover\\n     * @param {String} args.address_city - Within 35 characters\\n     * @param {String} args.address_line_1 -\\n     * @param {String} args.address_line_2 - Optional field, within 70 characters.\\n     * @param {String} args.address_postcode - Optional field, within 20 characters and may not contain '+'.\\n     * @param {String} args.address_state - Optional field, possible value receive from states_list call.\\n     * @param {String} args.affiliate_token - Affiliate token, within 32 characters.\\n     * @param {Any} args.citizen - Country of legal citizenship, 2-letter country code.\\n     * @param {Any} args.client_type - Optional field, indicates whether this is for a client requesting an account with professional status. Defaults to retail.\\n     * @param {Any} args.currency - Optional field to set currency of the account. List of supported currencies can be acquired with 'payout_currencies' call\\n     * @param {String} args.date_of_birth - Date of birth format: yyyy-mm-dd.\\n     * @param {String} args.first_name - Within 2-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes.\\n     * @param {String} args.last_name - Within 2-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes.\\n     * @param {Number} args.new_account_real - Must be 1\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.phone - Within 8-35 digits, allowing '+' in front, numbers, hyphens or space.\\n     * @param {String} args.place_of_birth - Place of birth, 2-letter country code.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.residence - 2-letter country code, possible value receive from residence_list call.\\n     * @param {Any} args.salutation - Accept any value in enum list.\\n     * @param {String} args.secret_answer - Answer to secret question, within 4-50 characters. Required for new account and existing client details will be used if client open another account.\\n     * @param {Any} args.secret_question - Accept any value in enum list. Required for new account and existing client details will be used if client open another account.\\n     * @param {String} args.tax_identification_number - Tax identification number. Only applicable for real money account. Required for maltainvest landing company.\\n     * @param {String} args.tax_residence - Residence for tax purpose. Comma separated iso country code if multiple jurisdictions. Only applicable for real money account. Required for maltainvest landing company.\\n     */\\n\\n  }, {\\n    key: \\\"newAccountReal\\\",\\n    value: function newAccountReal() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_opening_reason: {\\n          type: 'string'\\n        },\\n        account_turnover: {},\\n        address_city: {\\n          type: 'string'\\n        },\\n        address_line_1: {\\n          type: 'string'\\n        },\\n        address_line_2: {\\n          type: 'string'\\n        },\\n        address_postcode: {\\n          type: 'string'\\n        },\\n        address_state: {\\n          type: 'string'\\n        },\\n        affiliate_token: {\\n          type: 'string'\\n        },\\n        citizen: {},\\n        client_type: {},\\n        currency: {},\\n        date_of_birth: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        first_name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        last_name: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        new_account_real: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        phone: {\\n          type: 'string'\\n        },\\n        place_of_birth: {\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        residence: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        salutation: {\\n          required: 1\\n        },\\n        secret_answer: {\\n          type: 'string'\\n        },\\n        secret_question: {},\\n        tax_identification_number: {\\n          type: 'string'\\n        },\\n        tax_residence: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'new_account_real',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.affiliate_token - [Optional] Affiliate token, within 32 characters.\\n     * @param {String} args.client_password - Password (length within 6-25 chars, accepts any printable ASCII character).\\n     * @param {String} args.date_first_contact - [Optional] Date of first contact, format: yyyy-mm-dd in GMT timezone.\\n     * @param {String} args.gclid_url - [Optional] Google Click Identifier to track source.\\n     * @param {Number} args.new_account_virtual - Must be 1.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {String} args.residence - 2-letter country code (obtained from residence_list call).\\n     * @param {Any} args.signup_device - [Optional] Show whether user has used mobile or desktop.\\n     * @param {String} args.utm_campaign - [Optional] Identifies a specific product promotion or strategic campaign such as a spring sale or other promotions.\\n     * @param {String} args.utm_medium - [Optional] Identifies the medium the link was used upon such as: email, CPC, or other methods of sharing.\\n     * @param {String} args.utm_source - [Optional] Identifies the source of traffic such as: search engine, newsletter, or other referral.\\n     * @param {String} args.verification_code - Email verification code (received from a verify_email call, which must be done first).\\n     */\\n\\n  }, {\\n    key: \\\"newAccountVirtual\\\",\\n    value: function newAccountVirtual() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        affiliate_token: {\\n          type: 'string'\\n        },\\n        client_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        date_first_contact: {\\n          type: 'string'\\n        },\\n        gclid_url: {\\n          type: 'string'\\n        },\\n        new_account_virtual: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        residence: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        signup_device: {},\\n        utm_campaign: {\\n          type: 'string'\\n        },\\n        utm_medium: {\\n          type: 'string'\\n        },\\n        utm_source: {\\n          type: 'string'\\n        },\\n        verification_code: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'new_account_virtual',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.category - The category or nature of the event.\\n     * @param {String} args.event - The name of the event.\\n     * @param {Number} args.notification_event - Must be 1.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     */\\n\\n  }, {\\n    key: \\\"notificationEvent\\\",\\n    value: function notificationEvent() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        category: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        event: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        notification_event: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {}\\n      };\\n      var allArgs = {\\n        method: 'notification_event',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.oauth_apps -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"oauthApps\\\",\\n    value: function oauthApps() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        oauth_apps: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'oauth_apps',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.currency - [Optional] If specified, only payment agents that supports that currency will be returned (obtained from payout_currencies call).\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.paymentagent_list - Client's 2-letter country code (obtained from residence_list call).\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"paymentagentList\\\",\\n    value: function paymentagentList() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        currency: {\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        paymentagent_list: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'paymentagent_list',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.amount -\\n     * @param {String} args.currency -\\n     * @param {String} args.description - Optional field for remarks about the transfer.\\n     * @param {Number} args.dry_run - If 1, just do validation\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.paymentagent_transfer -\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.transfer_to - The transfer_to loginid\\n     */\\n\\n  }, {\\n    key: \\\"paymentagentTransfer\\\",\\n    value: function paymentagentTransfer() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        amount: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        currency: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        description: {\\n          type: 'string'\\n        },\\n        dry_run: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        paymentagent_transfer: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        transfer_to: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'paymentagent_transfer',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.amount -\\n     * @param {String} args.currency -\\n     * @param {String} args.description - Optional field for remarks about the withdraw. Only letters, numbers, space, period, comma, - ' are allowed.\\n     * @param {Number} args.dry_run - If 1, just do validation\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.paymentagent_loginid - The payment agent loginid received from the paymentagent_list call\\n     * @param {Number} args.paymentagent_withdraw -\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.verification_code - Email verification code (received from a verify_email call, which must be done first)\\n     */\\n\\n  }, {\\n    key: \\\"paymentagentWithdraw\\\",\\n    value: function paymentagentWithdraw() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        amount: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        currency: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        description: {\\n          type: 'string'\\n        },\\n        dry_run: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        paymentagent_loginid: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        paymentagent_withdraw: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        verification_code: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'paymentagent_withdraw',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.payout_currencies - Must be 1.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"payoutCurrencies\\\",\\n    value: function payoutCurrencies() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        payout_currencies: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'payout_currencies',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.ping - Must be 1.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     */\\n\\n  }, {\\n    key: \\\"ping\\\",\\n    value: function ping() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        ping: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'ping',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.portfolio - Must be 1\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"portfolio\\\",\\n    value: function portfolio() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        portfolio: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'portfolio',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.date_from - Optional start date (epoch or YYYY-MM-DD)\\n     * @param {String} args.date_to - Optional end date (epoch or YYYY-MM-DD)\\n     * @param {Number} args.description - If set to 1, will return full contracts description.\\n     * @param {Number} args.limit - Apply upper limit to count of transactions received\\n     * @param {Number} args.offset - Skip this many transactions\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.profit_table - Must be 1.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {String} args.sort - sort direction, default DESC\\n     */\\n\\n  }, {\\n    key: \\\"profitTable\\\",\\n    value: function profitTable() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        date_from: {\\n          type: 'string'\\n        },\\n        date_to: {\\n          type: 'string'\\n        },\\n        description: {\\n          type: 'numeric'\\n        },\\n        limit: {\\n          type: 'numeric'\\n        },\\n        offset: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        profit_table: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        sort: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'profit_table',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.amount - Proposed contract payout or stake, or multiplier (for lookbacks).\\n     * @param {String} args.barrier - Barrier for the contract (or last digit prediction for digit contracts). Contracts less than 24 hours in duration would need a relative barrier (barriers which need +/-), where entry spot would be adjusted accordingly with that amount to define a barrier, except for Volatility Indices as they support both relative and absolute barriers. Not needed for lookbacks.\\n     * @param {String} args.barrier2 - Low barrier for the contract (for contracts with two barriers). Contracts less than 24 hours in duration would need a relative barrier (barriers which need +/-), where entry spot would be adjusted accordingly with that amount to define a barrier, except for Volatility Indices as they support both relative and absolute barriers. Not needed for lookbacks.\\n     * @param {Any} args.basis - Indicates whether amount is 'payout' or 'stake' for binary options, and 'multiplier' for lookbacks.\\n     * @param {Any} args.contract_type - The proposed contract type\\n     * @param {String} args.currency - This can only be the account-holder's currency (obtained from payout_currencies call).\\n     * @param {Number} args.date_expiry - Epoch value of the expiry time of the contract. Either date_expiry or duration is required.\\n     * @param {Number} args.date_start - [Optional] Indicates epoch value of the starting time of the contract. If left empty, the start time of the contract is now.\\n     * @param {Number} args.duration - Duration quantity. Either date_expiry or duration is required.\\n     * @param {Any} args.duration_unit - [Optional] Duration unit - s(seconds), m(minutes), h(hours), d(days), t(ticks).\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.product_type - The product type.\\n     * @param {Number} args.proposal - Must be 1.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Number} args.selected_tick - The tick that is predicted to have the highest/lowest value - for tickhigh and ticklow contracts.\\n     * @param {Any} args.subscribe - [Optional] 1 - to initiate a realtime stream of prices. Note that tick trades (without a user-defined barrier), digit trades and less than 24 hours at-the-money contracts for the following underlying symbols are not streamed: R_10, R_25, R_50, R_75, R_100, RDBULL, RDBEAR (this is because their price is constant).\\n     * @param {String} args.symbol - The short symbol name (obtained from active_symbols call).\\n     * @param {Number} args.trading_period_start - Required only for multi-barrier trading. Defines the epoch value of the trading period start time.\\n     */\\n\\n  }, {\\n    key: \\\"proposal\\\",\\n    value: function proposal() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        amount: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        barrier: {\\n          type: 'string'\\n        },\\n        barrier2: {\\n          type: 'string'\\n        },\\n        basis: {\\n          required: 1\\n        },\\n        contract_type: {\\n          required: 1\\n        },\\n        currency: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        date_expiry: {\\n          type: 'numeric'\\n        },\\n        date_start: {\\n          type: 'numeric'\\n        },\\n        duration: {\\n          type: 'numeric'\\n        },\\n        duration_unit: {},\\n        passthrough: {},\\n        product_type: {},\\n        proposal: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        selected_tick: {\\n          type: 'numeric'\\n        },\\n        subscribe: {},\\n        symbol: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        trading_period_start: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'proposal',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.amount - Proposed contract payout or stake value.\\n     * @param {Any} args.barriers - Array of barrier(s) for the contract.\\n     * @param {Any} args.basis - Indicate whether amount is 'payout' or 'stake'.\\n     * @param {Any} args.contract_type - One or two valid contract-types.\\n     * @param {String} args.currency - This can only be the account-holder's currency.\\n     * @param {Number} args.date_expiry - Epoch value of the expiry time of the contract. You must either specify date_expiry or duration.\\n     * @param {Number} args.date_start - [Optional] Indicates epoch value of the starting time of the contract. If left empty, the start time of the contract is now.\\n     * @param {Number} args.duration - Duration quantity.\\n     * @param {Any} args.duration_unit - [Optional] Duration unit - s(seconds), m(minutes), h(hours), d(days), t(ticks).\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.product_type - [Optional] If you specify this field, only contracts tradable through that contract type will be returned.\\n     * @param {Number} args.proposal_array - Must be 1.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Any} args.subscribe - [Optional] 1 - to initiate a realtime stream of prices. Note that tick trades (without a user-defined barrier), digit trades and less than 24 hours at-the-money contracts for the following underlying symbols are not streamed: R_10, R_25, R_50, R_75, R_100, RDBULL, RDBEAR (this is because their price is constant).\\n     * @param {String} args.symbol - Symbol code.\\n     * @param {Number} args.trading_period_start - Required only for multi-barrier trading. Defines the epoch value of the trading period start time.\\n     */\\n\\n  }, {\\n    key: \\\"proposalArray\\\",\\n    value: function proposalArray() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        amount: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        barriers: {\\n          required: 1\\n        },\\n        basis: {\\n          required: 1\\n        },\\n        contract_type: {\\n          required: 1\\n        },\\n        currency: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        date_expiry: {\\n          type: 'numeric'\\n        },\\n        date_start: {\\n          type: 'numeric'\\n        },\\n        duration: {\\n          type: 'numeric'\\n        },\\n        duration_unit: {},\\n        passthrough: {},\\n        product_type: {},\\n        proposal_array: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {},\\n        symbol: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        trading_period_start: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'proposal_array',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.contract_id - Contract id received from a Portfolio request. If not set, you will receive stream of all open contracts.\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.proposal_open_contract - Must be 1\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.subscribe - 1 - to stream\\n     */\\n\\n  }, {\\n    key: \\\"proposalOpenContract\\\",\\n    value: function proposalOpenContract() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        contract_id: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        proposal_open_contract: {\\n          required: 1\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'proposal_open_contract',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.reality_check - Must be 1\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     */\\n\\n  }, {\\n    key: \\\"realityCheck\\\",\\n    value: function realityCheck() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        reality_check: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'reality_check',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.date_from - Start date of the report\\n     * @param {Number} args.date_to - End date of the report\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field\\n     * @param {String} args.report_type - Type of report to be sent to client's registered e-mail address\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.request_report - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"requestReport\\\",\\n    value: function requestReport() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        date_from: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        date_to: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        report_type: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        request_report: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'request_report',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.date_of_birth - Date of birth format: yyyy-mm-dd. Only required for clients with real-money accounts.\\n     * @param {String} args.new_password - New password for validation (length within 6-25 chars, accepts any printable ASCII characters, need to include capital and lowercase letters with numbers). Password strength is evaluated with: http://archive.geekwisdom.com/js/passwordmeter.js\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.reset_password -\\n     * @param {String} args.verification_code - Email verification code (received from a verify_email call, which must be done first)\\n     */\\n\\n  }, {\\n    key: \\\"resetPassword\\\",\\n    value: function resetPassword() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        date_of_birth: {\\n          type: 'string'\\n        },\\n        new_password: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        reset_password: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        verification_code: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'reset_password',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Number} args.residence_list - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"residenceList\\\",\\n    value: function residenceList() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        residence_list: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'residence_list',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.revoke_oauth_app -\\n     */\\n\\n  }, {\\n    key: \\\"revokeOauthApp\\\",\\n    value: function revokeOauthApp() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        revoke_oauth_app: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'revoke_oauth_app',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.price - Minimum price at which to sell the contract, or '0' for 'sell at market'\\n     * @param {Number} args.req_id - Optional field send in request to map to response, present only when request contains req_id\\n     * @param {Number} args.sell - Pass contract_id received from the Portfolio call\\n     */\\n\\n  }, {\\n    key: \\\"sell\\\",\\n    value: function sell() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        price: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        sell: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'sell',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field used to pass data through the websocket API. May be retrieved via the echo_req output field.\\n     * @param {Number} args.price - Minimum price at which to sell the contract, or '0' for 'sell at market'\\n     * @param {Number} args.req_id - Optional field send in request to map to response, present only when request contains req_id\\n     * @param {Number} args.sell_contract_for_multiple_accounts -\\n     * @param {String} args.shortcode - An internal ID used to identify the contract which was originally bought. This is returned from the buy and buy_for_multiple_accounts calls\\n     * @param {Any} args.tokens - Authorisation tokens which select the accounts to sell use for the affected accounts\\n     */\\n\\n  }, {\\n    key: \\\"sellContractForMultipleAccounts\\\",\\n    value: function sellContractForMultipleAccounts() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        price: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        sell_contract_for_multiple_accounts: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        shortcode: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        tokens: {\\n          required: 1\\n        }\\n      };\\n      var allArgs = {\\n        method: 'sell_contract_for_multiple_accounts',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.sell_expired - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"sellExpired\\\",\\n    value: function sellExpired() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        sell_expired: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'sell_expired',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {String} args.referrer - The URL of the web page where the Web SDK will be used.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {String} args.service - The service name to retrieve the token for.\\n     * @param {Number} args.service_token - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"serviceToken\\\",\\n    value: function serviceToken() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        referrer: {\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        service: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        service_token: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'service_token',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.set_account_currency - Currency of the account. List of supported currencies can be acquired with 'payout_currencies' call\\n     */\\n\\n  }, {\\n    key: \\\"setAccountCurrency\\\",\\n    value: function setAccountCurrency() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        set_account_currency: {\\n          required: 1\\n        }\\n      };\\n      var allArgs = {\\n        method: 'set_account_currency',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.account_turnover - The anticipated account turnover\\n     * @param {Any} args.binary_options_trading_experience - Binary options trading experience\\n     * @param {Any} args.binary_options_trading_frequency - Binary options trading frequency\\n     * @param {Any} args.cfd_trading_experience - CFDs trading experience\\n     * @param {Any} args.cfd_trading_frequency - CFDs trading frequency\\n     * @param {Any} args.education_level - Level of Education\\n     * @param {Any} args.employment_industry - Industry of Employment\\n     * @param {Any} args.employment_status - Employment Status\\n     * @param {Any} args.estimated_worth - Estimated Net Worth\\n     * @param {Any} args.forex_trading_experience - Forex trading experience\\n     * @param {Any} args.forex_trading_frequency - Forex trading frequency\\n     * @param {Any} args.income_source - Income Source\\n     * @param {Any} args.net_income - Net Annual Income\\n     * @param {Any} args.occupation - Occupation\\n     * @param {Any} args.other_instruments_trading_experience - Trading experience in other financial instruments\\n     * @param {Any} args.other_instruments_trading_frequency - Trading frequency in other financial instruments\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.set_financial_assessment - Must be 1\\n     * @param {Any} args.source_of_wealth - Source of wealth\\n     */\\n\\n  }, {\\n    key: \\\"setFinancialAssessment\\\",\\n    value: function setFinancialAssessment() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_turnover: {},\\n        binary_options_trading_experience: {},\\n        binary_options_trading_frequency: {},\\n        cfd_trading_experience: {},\\n        cfd_trading_frequency: {},\\n        education_level: {\\n          required: 1\\n        },\\n        employment_industry: {\\n          required: 1\\n        },\\n        employment_status: {},\\n        estimated_worth: {\\n          required: 1\\n        },\\n        forex_trading_experience: {},\\n        forex_trading_frequency: {},\\n        income_source: {\\n          required: 1\\n        },\\n        net_income: {\\n          required: 1\\n        },\\n        occupation: {\\n          required: 1\\n        },\\n        other_instruments_trading_experience: {},\\n        other_instruments_trading_frequency: {},\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        set_financial_assessment: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        source_of_wealth: {}\\n      };\\n      var allArgs = {\\n        method: 'set_financial_assessment',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.exclude_until - Exclude me from the website (for a minimum of 6 months, up to a maximum of 5 years). Note: uplifting this self-exclusion may require contacting the company.\\n     * @param {Any} args.max_30day_losses - 30-day limit on losses\\n     * @param {Any} args.max_30day_turnover - 30-day turnover limit\\n     * @param {Any} args.max_7day_losses - 7-day limit on losses\\n     * @param {Any} args.max_7day_turnover - 7-day turnover limit\\n     * @param {Any} args.max_balance - Maximum account cash balance\\n     * @param {Any} args.max_deposit - Deposit limit.\\n     * @param {Any} args.max_deposit_end_date - Exclude me from making deposits when the cumulative sum of deposits exceeds specified deposit limit.\\n     * @param {Any} args.max_losses - Daily limit on losses\\n     * @param {Any} args.max_open_bets - Maximum number of open positions\\n     * @param {Any} args.max_turnover - Daily turnover limit\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Any} args.session_duration_limit - Session duration limit, in minutes\\n     * @param {Number} args.set_self_exclusion -\\n     * @param {Any} args.timeout_until - Exclude me from the website (for up to 6 weeks). Requires time in epoch format. Note: unlike exclude_until, this self-exclusion will be lifted automatically at the expiry of the timeout period.\\n     */\\n\\n  }, {\\n    key: \\\"setSelfExclusion\\\",\\n    value: function setSelfExclusion() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        exclude_until: {},\\n        max_30day_losses: {},\\n        max_30day_turnover: {},\\n        max_7day_losses: {},\\n        max_7day_turnover: {},\\n        max_balance: {},\\n        max_deposit: {},\\n        max_deposit_end_date: {},\\n        max_losses: {},\\n        max_open_bets: {},\\n        max_turnover: {},\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        session_duration_limit: {},\\n        set_self_exclusion: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        timeout_until: {}\\n      };\\n      var allArgs = {\\n        method: 'set_self_exclusion',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.account_opening_reason - Purpose and reason for requesting the account opening. Only applicable for real money account. Required for clients that have not set it yet. Can only be set once.\\n     * @param {String} args.address_city - Note: not applicable for virtual account. Required field for real money account.\\n     * @param {String} args.address_line_1 - Note: not applicable for virtual account. Required field for real money account.\\n     * @param {Any} args.address_line_2 - Note: not applicable for virtual account. Optional field for real money account.\\n     * @param {String} args.address_postcode - Note: not applicable for virtual account. Optional field for real money account.\\n     * @param {String} args.address_state - Note: not applicable for virtual account. Optional field for real money account.\\n     * @param {Number} args.allow_copiers - Boolean value 1 or 0, indicating permission to allow others to follow your trades. Note: not applicable for Virtual account. Only allow for real money account.\\n     * @param {Any} args.citizen - Country of legal citizenship, 2-letter country code.\\n     * @param {String} args.date_of_birth - Date of birth format: yyyy-mm-dd (can only be changed on unauthenticated svg accounts).\\n     * @param {Number} args.email_consent - Boolean value 1 or 0, indicating permission to use email address for any contact which may include marketing\\n     * @param {String} args.first_name - Within 2-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes (can only be changed on unauthenticated svg accounts).\\n     * @param {String} args.last_name - Within 2-50 characters, use only letters, spaces, hyphens, full-stops or apostrophes (can only be changed on unauthenticated svg accounts).\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Any} args.phone - Note: not applicable for virtual account. Required field for real money account and within 8-35 digits, allowing '+' in front, numbers, hyphens or space.\\n     * @param {String} args.place_of_birth - Place of birth, 2-letter country code.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.request_professional_status - Required when client wants to be treated as professional. Applicable for financial accounts only.\\n     * @param {Any} args.residence - 2-letter country code. Note: not applicable for real money account. Only allow for Virtual account without residence set.\\n     * @param {Any} args.salutation - Accept any value in enum list (can only be changed on unauthenticated svg accounts).\\n     * @param {String} args.secret_answer - Answer to secret question, within 4-50 characters. Required for new account and existing client details will be used if client opens another account.\\n     * @param {Any} args.secret_question - Accept any value in enum list. Required for new account and existing client details will be used if client opens another account.\\n     * @param {Number} args.set_settings -\\n     * @param {String} args.tax_identification_number - Tax identification number. Only applicable for real money account. Required for maltainvest landing company.\\n     * @param {String} args.tax_residence - Residence for tax purpose. Comma separated iso country code if multiple jurisdictions. Only applicable for real money account. Required for maltainvest landing company.\\n     */\\n\\n  }, {\\n    key: \\\"setSettings\\\",\\n    value: function setSettings() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_opening_reason: {\\n          type: 'string'\\n        },\\n        address_city: {\\n          type: 'string'\\n        },\\n        address_line_1: {\\n          type: 'string'\\n        },\\n        address_line_2: {},\\n        address_postcode: {\\n          type: 'string'\\n        },\\n        address_state: {\\n          type: 'string'\\n        },\\n        allow_copiers: {\\n          type: 'numeric'\\n        },\\n        citizen: {},\\n        date_of_birth: {\\n          type: 'string'\\n        },\\n        email_consent: {\\n          type: 'numeric'\\n        },\\n        first_name: {\\n          type: 'string'\\n        },\\n        last_name: {\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        phone: {},\\n        place_of_birth: {\\n          type: 'string'\\n        },\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        request_professional_status: {\\n          type: 'numeric'\\n        },\\n        residence: {},\\n        salutation: {},\\n        secret_answer: {\\n          type: 'string'\\n        },\\n        secret_question: {},\\n        set_settings: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        tax_identification_number: {\\n          type: 'string'\\n        },\\n        tax_residence: {\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'set_settings',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.action_type - Optional filter for statement (deposit,withdrawal,buy,sell)\\n     * @param {Number} args.date_from - Optional start date (epoch)\\n     * @param {Number} args.date_to - Optional end date (epoch)\\n     * @param {Number} args.description - If set to 1, will return full contracts description.\\n     * @param {Number} args.limit - Apply upper limit to count of transactions received\\n     * @param {Number} args.offset - Skip this many transactions\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.statement - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"statement\\\",\\n    value: function statement() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        action_type: {\\n          type: 'string'\\n        },\\n        date_from: {\\n          type: 'numeric'\\n        },\\n        date_to: {\\n          type: 'numeric'\\n        },\\n        description: {\\n          type: 'numeric'\\n        },\\n        limit: {\\n          type: 'numeric'\\n        },\\n        offset: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        statement: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'statement',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {String} args.states_list - Client's 2-letter country code (obtained from residence_list call)\\n     */\\n\\n  }, {\\n    key: \\\"statesList\\\",\\n    value: function statesList() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        states_list: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'states_list',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Any} args.subscribe - If set to 1, will send updates whenever a new tick is received.\\n     * @param {Any} args.ticks - The short symbol name or array of symbols (obtained from active_symbols call).\\n     */\\n\\n  }, {\\n    key: \\\"ticks\\\",\\n    value: function ticks() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {},\\n        ticks: {\\n          required: 1\\n        }\\n      };\\n      var allArgs = {\\n        method: 'ticks',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Number} args.adjust_start_time - [Optional] 1 - if the market is closed at the end time, or license limit is before end time, adjust interval backwards to compensate.\\n     * @param {Number} args.count - An upper limit on ticks to receive.\\n     * @param {String} args.end - Epoch value representing the latest boundary of the returned ticks. If \\\"latest\\\" is specified, this will be the latest available timestamp.\\n     * @param {Number} args.granularity - Only applicable for style : \\\"candles\\\". Candle time-dimension width setting. Allowed values 60, 120, 180, 300, 600, 900, 1800, 3600, 7200, 14400, 28800, 86400 (default: '60').\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Number} args.start - Epoch value representing the earliest boundary of the returned ticks (For styles: 'ticks', this will default to 1 day ago. For styles: 'candle', it will default to 1 day ago if count or granularity is undefined).\\n     * @param {Any} args.style - The tick-output style.\\n     * @param {Any} args.subscribe - [Optional] 1 - to send updates whenever a new tick is received.\\n     * @param {String} args.ticks_history - Short symbol name (obtained from the active_symbols call).\\n     */\\n\\n  }, {\\n    key: \\\"ticksHistory\\\",\\n    value: function ticksHistory() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        adjust_start_time: {\\n          type: 'numeric'\\n        },\\n        count: {\\n          type: 'numeric'\\n        },\\n        end: {\\n          required: 1,\\n          type: 'string'\\n        },\\n        granularity: {\\n          type: 'numeric'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        start: {\\n          type: 'numeric'\\n        },\\n        style: {},\\n        subscribe: {},\\n        ticks_history: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'ticks_history',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Number} args.time - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"time\\\",\\n    value: function time() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        time: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'time',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.tnc_approval - Must be 1\\n     * @param {Number} args.ukgc_funds_protection - for ASK_UK_FUNDS_PROTECTION in cashier\\n     */\\n\\n  }, {\\n    key: \\\"tncApproval\\\",\\n    value: function tncApproval() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        tnc_approval: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        ukgc_funds_protection: {\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'tnc_approval',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.topup_virtual - it's only allowed for virtual account.\\n     */\\n\\n  }, {\\n    key: \\\"topupVirtual\\\",\\n    value: function topupVirtual() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        topup_virtual: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'topup_virtual',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.landing_company - [Optional] If specified, will return only the underlyings for the specified landing company.\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Number} args.trading_durations - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"tradingDurations\\\",\\n    value: function tradingDurations() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        landing_company: {},\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        trading_durations: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'trading_durations',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {String} args.trading_times - Date to receive market opening times for. (yyyy-mm-dd format. 'today' can also be specified).\\n     */\\n\\n  }, {\\n    key: \\\"tradingTimes\\\",\\n    value: function tradingTimes() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        trading_times: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'trading_times',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.subscribe - If set to 1, will send updates whenever there is an update to transactions. If not to 1 then it will not return any records.\\n     * @param {Any} args.transaction - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"transaction\\\",\\n    value: function transaction() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {\\n          required: 1,\\n          type: 'numeric'\\n        },\\n        transaction: {\\n          required: 1\\n        }\\n      };\\n      var allArgs = {\\n        method: 'transaction',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {String} args.account_from - The account_from loginid\\n     * @param {String} args.account_to - The account_to loginid\\n     * @param {Any} args.accounts - Optional field to control the list of accounts returned when account_from or account_to is not provided. 'Brief' will only include standard trading accounts and can be faster.\\n     * @param {Number} args.amount -\\n     * @param {String} args.currency -\\n     * @param {Any} args.passthrough - Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - Optional field to map request to response\\n     * @param {Number} args.transfer_between_accounts - If account_from or account_to is not provided, we'll just return available accounts.\\n     */\\n\\n  }, {\\n    key: \\\"transferBetweenAccounts\\\",\\n    value: function transferBetweenAccounts() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        account_from: {\\n          type: 'string'\\n        },\\n        account_to: {\\n          type: 'string'\\n        },\\n        accounts: {},\\n        amount: {\\n          type: 'numeric'\\n        },\\n        currency: {\\n          type: 'string'\\n        },\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        transfer_between_accounts: {\\n          required: 1,\\n          type: 'numeric'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'transfer_between_accounts',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Any} args.type - Purpose of the email verification call.\\n     * @param {Any} args.url_parameters -\\n     * @param {String} args.verify_email - Email address to be verified.\\n     */\\n\\n  }, {\\n    key: \\\"verifyEmail\\\",\\n    value: function verifyEmail() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        type: {\\n          required: 1\\n        },\\n        url_parameters: {\\n          affiliate_token: {\\n            type: 'string'\\n          },\\n          date_first_contact: {\\n            type: 'string'\\n          },\\n          gclid_url: {\\n            type: 'string'\\n          },\\n          signup_device: {},\\n          utm_campaign: {\\n            type: 'string'\\n          },\\n          utm_medium: {\\n            type: 'string'\\n          },\\n          utm_source: {\\n            type: 'string'\\n          }\\n        },\\n        verify_email: {\\n          required: 1,\\n          type: 'string'\\n        }\\n      };\\n      var allArgs = {\\n        method: 'verify_email',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n    /**\\n     * @param {Object} args\\n     * @param {Any} args.passthrough - [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.\\n     * @param {Number} args.req_id - [Optional] Used to map request to response.\\n     * @param {Any} args.subscribe - [Optional] 1 - to stream the server/website status updates (default = 1)\\n     * @param {Any} args.website_status - Must be 1.\\n     */\\n\\n  }, {\\n    key: \\\"websiteStatus\\\",\\n    value: function websiteStatus() {\\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var config = {\\n        passthrough: {},\\n        req_id: {\\n          type: 'numeric'\\n        },\\n        subscribe: {},\\n        website_status: {\\n          required: 1\\n        }\\n      };\\n      var allArgs = {\\n        method: 'website_status',\\n        needsMethodArg: '1',\\n        args: args,\\n        config: config\\n      };\\n      return this.processRequest(allArgs);\\n    }\\n  }, {\\n    key: \\\"processRequest\\\",\\n    value: function processRequest(allArgs) {\\n      var config = allArgs.config;\\n      var parsedArgs = parseArgs(allArgs);\\n      var error = validateArgs({\\n        config: config,\\n        args: parsedArgs\\n      });\\n\\n      if (error) {\\n        return Promise.reject(error);\\n      }\\n\\n      return this.send(parsedArgs);\\n    }\\n  }]);\\n\\n  return DerivAPICalls;\\n}(); // ==========================\\n// ----- Helper Methods -----\\n// ==========================\\n\\n\\n\\n\\nvar isObject = function isObject(value) {\\n  return value instanceof Object;\\n};\\n\\nvar typeCheckers = {\\n  object: isObject,\\n  numeric: function numeric(value) {\\n    return !Number.isNaN(value * 1);\\n  },\\n  string: function string(value) {\\n    return typeof value === 'string';\\n  },\\n  \\\"boolean\\\": function boolean(value) {\\n    return [true, false, 0, 1].includes(value);\\n  }\\n};\\n\\nfunction parseArgs(_ref) {\\n  var config = _ref.config,\\n      args = _ref.args,\\n      method = _ref.method,\\n      needsMethodArg = _ref.needsMethodArg;\\n  var parsedArgs = args;\\n\\n  if (needsMethodArg && !isObject(parsedArgs)) {\\n    parsedArgs = _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()({}, method, parsedArgs);\\n  }\\n\\n  parsedArgs[method] = parsedArgs[method] || 1;\\n  Object.keys(parsedArgs).forEach(function (param) {\\n    var value = parsedArgs[param];\\n    if (!(param in config)) return;\\n\\n    if (config[param].type === 'string') {\\n      parsedArgs[param] = \\\"\\\".concat(value);\\n    } else if (config[param].type === 'numeric') {\\n      parsedArgs[param] = parseInt(value, 10);\\n    } else if (config[param].type === 'boolean') {\\n      parsedArgs[param] = +value;\\n    }\\n  });\\n  return parsedArgs;\\n}\\n\\nfunction validateArgs(_ref2) {\\n  var config = _ref2.config,\\n      args = _ref2.args;\\n\\n  if (!isObject(args)) {\\n    return \\\"Requires an object but a \\\".concat(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(args), \\\" is passed.\\\");\\n  }\\n\\n  var errorMessages = [];\\n  var missing = Object.keys(config).filter(function (key) {\\n    return (config[key] || {}).required && !(key in args);\\n  });\\n\\n  if (missing.length) {\\n    errorMessages.push(\\\"Required parameters missing: \\\".concat(missing.join(', ')));\\n  }\\n\\n  Object.keys(args).forEach(function (param) {\\n    var value = args[param];\\n    if (!(param in config)) return;\\n    var expectedType = config[param].type;\\n    if (!expectedType) return;\\n\\n    if (!typeCheckers[expectedType](value)) {\\n      errorMessages.push(\\\"\\\".concat(expectedType, \\\" value expected but found \\\").concat(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value), \\\": \\\").concat(param));\\n    }\\n  });\\n  return errorMessages.length ? errorMessages.join(' - ') : '';\\n}\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/DerivAPICalls.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/InMemory.js\":\n/*!***********************************!*\\\n  !*** ./src/deriv_api/InMemory.js ***!\n  \\***********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return InMemory; });\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\\n\\n\\n\\n/**\\n * An in memory storage which can be used for caching\\n */\\nvar InMemory =\\n/*#__PURE__*/\\nfunction () {\\n  function InMemory() {\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, InMemory);\\n\\n    this.store = {\\n      by_msg_type: {}\\n    };\\n  }\\n\\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(InMemory, [{\\n    key: \\\"has\\\",\\n    value: function has(key) {\\n      return key in this.store;\\n    }\\n  }, {\\n    key: \\\"get\\\",\\n    value: function get(key) {\\n      return this.store[key];\\n    }\\n  }, {\\n    key: \\\"getByMsgType\\\",\\n    value: function getByMsgType(type) {\\n      return this.store.by_msg_type[type];\\n    }\\n  }, {\\n    key: \\\"set\\\",\\n    value: function set(key, value) {\\n      this.store.by_msg_type[value.msg_type] = value;\\n      this.store[key] = value;\\n    }\\n  }]);\\n\\n  return InMemory;\\n}();\\n\\n\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/InMemory.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/SubscriptionManager.js\":\n/*!**********************************************!*\\\n  !*** ./src/deriv_api/SubscriptionManager.js ***!\n  \\**********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return SubscriptionManager; });\\n/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ \\\"./node_modules/@babel/runtime/helpers/objectSpread.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \\\"./node_modules/rxjs/_esm5/operators/index.js\\\");\\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors */ \\\"./src/deriv_api/errors.js\\\");\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \\\"./src/deriv_api/utils.js\\\");\\n\\n\\n\\n\\n\\n\\n/**\\n * Subscription Manager - manage subscription channels\\n *\\n * Makes sure there is always only one subscription channel for all requests of\\n * subscriptions, keeps a history of received values for the subscription of ticks\\n * and forgets channels that do not have subscribers. It also ensures that\\n * subscriptions are revived after connection drop/account changed.\\n *\\n *\\n * @example\\n * // This one creates a new subscription assuming it is the first one for R_100\\n * const subscriber1 = api.subscribe({ ticks: 'R_100' }, console.log);\\n *\\n * // This one uses the existing subscription to R_100\\n * const subscriber2 = api.subscribe({ ticks: 'R_100' }, console.log);\\n *\\n * subscriber1.unsubscribe(); // no API forget yet\\n * subscriber2.unsubscribe(); // Issues API forget\\n *\\n */\\n\\nvar SubscriptionManager =\\n/*#__PURE__*/\\nfunction () {\\n  function SubscriptionManager(api) {\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, SubscriptionManager);\\n\\n    this.api = api;\\n    this.sources = {};\\n    this.subs_id_to_key = {};\\n    this.key_to_subs_id = {};\\n    this.buy_key_to_contract_id = {};\\n    this.subs_per_msg_type = []; // streams_list is the list of subscriptions msg_types available.\\n    // Please add/remove based on current available streams in api.\\n    // Refer https://developers.binary.com/\\n\\n    this.streams_list = ['balance', 'candles', 'p2p_advertiser', 'p2p_order', 'proposal', 'proposal_array', 'proposal_open_contract', 'ticks', 'ticks_history', 'transaction', 'website_status'];\\n  }\\n  /**\\n   * Subscribe to a given request, returns a stream of new responses,\\n   * Errors should be handled by the user of the stream\\n   *\\n   * @example\\n   * const ticks = api.subscribe({ ticks: 'R_100' });\\n   * ticks.subscribe(console.log) // Print every new tick\\n   *\\n   * @param {Object} request - A request object acceptable by the API\\n   *\\n   * @returns {Observable} - An RxJS Observable\\n   */\\n\\n\\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(SubscriptionManager, [{\\n    key: \\\"subscribe\\\",\\n    value: function subscribe(request) {\\n      if (this.sourceExists(request)) {\\n        return this.getSource(request);\\n      }\\n\\n      return this.createNewSource(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, request, {\\n        subscribe: 1\\n      }));\\n    }\\n  }, {\\n    key: \\\"getSource\\\",\\n    value: function getSource(request) {\\n      var key = toKey(request);\\n      if (key in this.sources) return this.sources[key]; // If we have a buy subscription reuse that for poc\\n\\n      if (request.proposal_open_contract && request.contract_id) {\\n        var poc_source = Object.values(this.buy_key_to_contract_id).find(function (c) {\\n          return c.contract_id === request.contract_id;\\n        });\\n\\n        if (poc_source) {\\n          return this.sources[poc_source.buy_key];\\n        }\\n      }\\n\\n      return undefined;\\n    } // Just an alias to getSource\\n\\n  }, {\\n    key: \\\"sourceExists\\\",\\n    value: function sourceExists(request) {\\n      return this.getSource(request);\\n    }\\n  }, {\\n    key: \\\"createNewSource\\\",\\n    value: function createNewSource(request) {\\n      var _this = this;\\n\\n      var key = toKey(request);\\n      var source = this.api.sendAndGetSource(request).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\\\"finalize\\\"])(function () {\\n        if (!(key in _this.key_to_subs_id)) return; // Forget subscriptions, but don't complain if failed\\n\\n        _this.forget(_this.key_to_subs_id[key]).then(function () {}, function () {});\\n      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\\\"share\\\"])());\\n      this.sources[key] = source;\\n      this.saveSubsPerMsgType(request, key);\\n      source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\\\"first\\\"])()).toPromise().then(function (response) {\\n        if (request.buy) {\\n          _this.buy_key_to_contract_id[key] = {\\n            contract_id: response.buy.contract_id,\\n            buy_key: key\\n          };\\n        }\\n\\n        _this.saveSubsId(key, response);\\n      }, this.removeKeyOnError(key));\\n      return source;\\n    }\\n  }, {\\n    key: \\\"forget\\\",\\n    value: function forget(id) {\\n      this.completeSubsByIds(id);\\n      return this.api.send({\\n        forget: id\\n      });\\n    }\\n  }, {\\n    key: \\\"forgetAll\\\",\\n    value: function forgetAll() {\\n      var _this2 = this;\\n\\n      for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {\\n        types[_key] = arguments[_key];\\n      }\\n\\n      // To include subscriptions that were automatically unsubscribed\\n      // for example a proposal subscription is auto-unsubscribed after buy\\n      types.forEach(function (type) {\\n        (_this2.subs_per_msg_type[type] || []).forEach(function (key) {\\n          return _this2.completeSubsByKey(key);\\n        });\\n        _this2.subs_per_msg_type[type] = [];\\n      });\\n      return this.api.send({\\n        forget_all: types\\n      });\\n    }\\n  }, {\\n    key: \\\"completeSubsByIds\\\",\\n    value: function completeSubsByIds() {\\n      var _this3 = this;\\n\\n      for (var _len2 = arguments.length, subs_ids = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n        subs_ids[_key2] = arguments[_key2];\\n      }\\n\\n      subs_ids.forEach(function (id) {\\n        var key = _this3.subs_id_to_key[id];\\n        delete _this3.subs_id_to_key[id];\\n\\n        _this3.completeSubsByKey(key);\\n      });\\n    }\\n  }, {\\n    key: \\\"saveSubsId\\\",\\n    value: function saveSubsId(key, _ref) {\\n      var subscription = _ref.subscription;\\n      // If the response doesn't have a subs id, it's not a subscription, so complete source\\n      // Useful for poc for sold contract which never returns subscription\\n      if (!subscription) return this.completeSubsByKey(key);\\n      var id = subscription.id;\\n\\n      if (!(id in this.subs_id_to_key)) {\\n        this.subs_id_to_key[id] = key;\\n        this.key_to_subs_id[key] = id;\\n      }\\n\\n      return undefined;\\n    }\\n  }, {\\n    key: \\\"saveSubsPerMsgType\\\",\\n    value: function saveSubsPerMsgType(request, key) {\\n      var msg_type = this.getMsgType(request);\\n\\n      if (msg_type) {\\n        this.subs_per_msg_type[msg_type] = this.subs_per_msg_type[msg_type] || [];\\n        this.subs_per_msg_type[msg_type].push(key);\\n      } else {\\n        this.api.sanityErrors.next(new _errors__WEBPACK_IMPORTED_MODULE_4__[\\\"APIError\\\"]('Subscription type is not found in deriv-api'));\\n      }\\n    }\\n  }, {\\n    key: \\\"removeKeyOnError\\\",\\n    value: function removeKeyOnError(key) {\\n      var _this4 = this;\\n\\n      return function () {\\n        return _this4.completeSubsByKey(key);\\n      };\\n    }\\n  }, {\\n    key: \\\"completeSubsByKey\\\",\\n    value: function completeSubsByKey(key) {\\n      if (!key || !this.sources[key]) return; // Delete the source\\n\\n      var source = this.sources[key];\\n      delete this.sources[key]; // Delete the subs id if exists\\n\\n      var subs_id = this.key_to_subs_id[key];\\n      delete this.subs_id_to_key[subs_id]; // Delete the key\\n\\n      delete this.key_to_subs_id[key]; // Delete the buy key to contract_id mapping\\n\\n      delete this.buy_key_to_contract_id[key]; // Mark the source completed\\n\\n      source.complete();\\n    }\\n  }, {\\n    key: \\\"getMsgType\\\",\\n    value: function getMsgType(request) {\\n      return this.streams_list.find(function (stream_key) {\\n        return stream_key in request;\\n      });\\n    }\\n  }]);\\n\\n  return SubscriptionManager;\\n}();\\n\\n\\n\\nfunction toKey(request) {\\n  return Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\\\"objectToCacheKey\\\"])(request);\\n}\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/SubscriptionManager.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/errors.js\":\n/*!*********************************!*\\\n  !*** ./src/deriv_api/errors.js ***!\n  \\*********************************/\n/*! exports provided: errorFactory, APIError, ConstructionError */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"errorFactory\\\", function() { return errorFactory; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"APIError\\\", function() { return APIError; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ConstructionError\\\", function() { return ConstructionError; });\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \\\"./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__);\\n\\n\\n\\n\\n\\n\\nfunction errorFactory(type) {\\n  return (\\n    /*#__PURE__*/\\n    function (_Error) {\\n      _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(GenericError, _Error);\\n\\n      function GenericError(message) {\\n        var _this;\\n\\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, GenericError);\\n\\n        _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(GenericError).call(this));\\n        _this.type = type;\\n        _this.message = message;\\n        return _this;\\n      }\\n\\n      _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(GenericError, [{\\n        key: \\\"toString\\\",\\n        value: function toString() {\\n          return \\\"\\\".concat(this.type, \\\": \\\").concat(this.message);\\n        }\\n      }]);\\n\\n      return GenericError;\\n    }(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5___default()(Error))\\n  );\\n}\\nvar APIError =\\n/*#__PURE__*/\\nfunction (_errorFactory) {\\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(APIError, _errorFactory);\\n\\n  function APIError() {\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, APIError);\\n\\n    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(APIError).apply(this, arguments));\\n  }\\n\\n  return APIError;\\n}(errorFactory('APIError'));\\nvar ConstructionError =\\n/*#__PURE__*/\\nfunction (_errorFactory2) {\\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(ConstructionError, _errorFactory2);\\n\\n  function ConstructionError() {\\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ConstructionError);\\n\\n    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(ConstructionError).apply(this, arguments));\\n  }\\n\\n  return ConstructionError;\\n}(errorFactory('ConstructionError'));\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/errors.js?\");\n\n/***/ }),\n\n/***/ \"./src/deriv_api/utils.js\":\n/*!********************************!*\\\n  !*** ./src/deriv_api/utils.js ***!\n  \\********************************/\n/*! exports provided: objectToCacheKey */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"objectToCacheKey\\\", function() { return objectToCacheKey; });\\n/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ \\\"./node_modules/@babel/runtime/helpers/objectSpread.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! json-stable-stringify */ \\\"./node_modules/json-stable-stringify/index.js\\\");\\n/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__);\\n\\n // eslint-disable-next-line import/prefer-default-export\\n\\nfunction objectToCacheKey(obj) {\\n  var cloned_object = _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, obj);\\n\\n  delete cloned_object.req_id;\\n  delete cloned_object.passthrough;\\n  delete cloned_object.subscribe;\\n  return json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default()(cloned_object);\\n}\\n\\n//# sourceURL=webpack://DerivAPIBasic/./src/deriv_api/utils.js?\");\n\n/***/ })\n\n/******/ })[\"default\"];\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\n");

/***/ })

}]);